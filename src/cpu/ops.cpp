
#include <malloc.h>
#include <stdio.h>
#include <math.h>
#include <mem.h>

#include "../types.h"
#include "cpu.h"
#include "mem.h"
#include "ops.h"

struct opt oplist[] = {
   	{0x0000, &op_null,	255, 255, 255, 0xff, 0x00, 0x00, 0x00}, // null    
    {0x0180, &op_push,	  0, 255, 255, 0xff, 0x00, 0x00, 0x00}, // push a   
    {0x0181, &op_push,	  1, 255, 255, 0xff, 0x00, 0x00, 0x00}, // push b   
    {0x0182, &op_push,	  2, 255, 255, 0xff, 0x00, 0x00, 0x00}, // push c   
    {0x0183, &op_push,	  3, 255, 255, 0xff, 0x00, 0x00, 0x00}, // push d   
    {0x0184, &op_push,	  4, 255, 255, 0xff, 0x00, 0x00, 0x00}, // push e   
    {0x0185, &op_push,	  5, 255, 255, 0xff, 0x00, 0x00, 0x00}, // push f   
    {0x0186, &op_push,	  6, 255, 255, 0xff, 0x00, 0x00, 0x00}, // push g   
    {0x0187, &op_push,	  7, 255, 255, 0xff, 0x00, 0x00, 0x00}, // push h   
    {0x0188, &op_push,	  8, 255, 255, 0xff, 0x00, 0x00, 0x00}, // push pc   
    {0x0189, &op_push,	  9, 255, 255, 0xff, 0x00, 0x00, 0x00}, // push ra   
    {0x018a, &op_push,	 10, 255, 255, 0xff, 0x00, 0x00, 0x00}, // push sb   
    {0x018b, &op_push,	 11, 255, 255, 0xff, 0x00, 0x00, 0x00}, // push sp   
    {0x018c, &op_push,	 12, 255, 255, 0xff, 0x00, 0x00, 0x00}, // push db   
    {0x018d, &op_push,	 13, 255, 255, 0xff, 0x00, 0x00, 0x00}, // push cb   
    {0x018e, &op_push,	 14, 255, 255, 0xff, 0x00, 0x00, 0x00}, // push pi   
    {0x018f, &op_push,	  8, 255, 255, 0xff, 0x00, 0x04, 0x00}, // push <literal>   
    {0x0140, &op_push,	  0, 255, 255, 0xff, 0x00, 0x00, 0x02}, // push.d a   
    {0x0141, &op_push,	  1, 255, 255, 0xff, 0x00, 0x00, 0x02}, // push.d b   
    {0x0142, &op_push,	  2, 255, 255, 0xff, 0x00, 0x00, 0x02}, // push.d c   
    {0x0143, &op_push,	  3, 255, 255, 0xff, 0x00, 0x00, 0x02}, // push.d d   
    {0x0144, &op_push,	  4, 255, 255, 0xff, 0x00, 0x00, 0x02}, // push.d e   
    {0x0145, &op_push,	  5, 255, 255, 0xff, 0x00, 0x00, 0x02}, // push.d f   
    {0x0146, &op_push,	  6, 255, 255, 0xff, 0x00, 0x00, 0x02}, // push.d g   
    {0x0147, &op_push,	  7, 255, 255, 0xff, 0x00, 0x00, 0x02}, // push.d h   
    {0x0148, &op_push,	  8, 255, 255, 0xff, 0x00, 0x00, 0x02}, // push.d pc   
    {0x0149, &op_push,	  9, 255, 255, 0xff, 0x00, 0x00, 0x02}, // push.d ra   
    {0x014a, &op_push,	 10, 255, 255, 0xff, 0x00, 0x00, 0x02}, // push.d sb   
    {0x014b, &op_push,	 11, 255, 255, 0xff, 0x00, 0x00, 0x02}, // push.d sp   
    {0x014c, &op_push,	 12, 255, 255, 0xff, 0x00, 0x00, 0x02}, // push.d db   
    {0x014d, &op_push,	 13, 255, 255, 0xff, 0x00, 0x00, 0x02}, // push.d cb   
    {0x014e, &op_push,	 14, 255, 255, 0xff, 0x00, 0x00, 0x02}, // push.d pi   
    {0x014f, &op_push,	  8, 255, 255, 0xff, 0x00, 0x02, 0x02}, // push.d <literal>   
    {0x0120, &op_push,	  0, 255, 255, 0xff, 0x00, 0x00, 0x01}, // push.w a   
    {0x0121, &op_push,	  1, 255, 255, 0xff, 0x00, 0x00, 0x01}, // push.w b   
    {0x0122, &op_push,	  2, 255, 255, 0xff, 0x00, 0x00, 0x01}, // push.w c   
    {0x0123, &op_push,	  3, 255, 255, 0xff, 0x00, 0x00, 0x01}, // push.w d   
    {0x0124, &op_push,	  4, 255, 255, 0xff, 0x00, 0x00, 0x01}, // push.w e   
    {0x0125, &op_push,	  5, 255, 255, 0xff, 0x00, 0x00, 0x01}, // push.w f   
    {0x0126, &op_push,	  6, 255, 255, 0xff, 0x00, 0x00, 0x01}, // push.w g   
    {0x0127, &op_push,	  7, 255, 255, 0xff, 0x00, 0x00, 0x01}, // push.w h   
    {0x0128, &op_push,	  8, 255, 255, 0xff, 0x00, 0x00, 0x01}, // push.w pc   
    {0x0129, &op_push,	  9, 255, 255, 0xff, 0x00, 0x00, 0x01}, // push.w ra   
    {0x012a, &op_push,	 10, 255, 255, 0xff, 0x00, 0x00, 0x01}, // push.w sb   
    {0x012b, &op_push,	 11, 255, 255, 0xff, 0x00, 0x00, 0x01}, // push.w sp   
    {0x012c, &op_push,	 12, 255, 255, 0xff, 0x00, 0x00, 0x01}, // push.w db   
    {0x012d, &op_push,	 13, 255, 255, 0xff, 0x00, 0x00, 0x01}, // push.w cb   
    {0x012e, &op_push,	 14, 255, 255, 0xff, 0x00, 0x00, 0x01}, // push.w pi   
    {0x012f, &op_push,	  8, 255, 255, 0xff, 0x00, 0x01, 0x01}, // push.w <literal>   
    {0x0280, &op_pop,	  0, 255, 255, 0xff, 0x02, 0x00, 0x04}, // pop a   
    {0x0281, &op_pop,	  1, 255, 255, 0xff, 0x02, 0x00, 0x04}, // pop b   
    {0x0282, &op_pop,	  2, 255, 255, 0xff, 0x02, 0x00, 0x04}, // pop c   
    {0x0283, &op_pop,	  3, 255, 255, 0xff, 0x02, 0x00, 0x04}, // pop d   
    {0x0284, &op_pop,	  4, 255, 255, 0xff, 0x02, 0x00, 0x04}, // pop e   
    {0x0285, &op_pop,	  5, 255, 255, 0xff, 0x02, 0x00, 0x04}, // pop f   
    {0x0286, &op_pop,	  6, 255, 255, 0xff, 0x02, 0x00, 0x04}, // pop g   
    {0x0287, &op_pop,	  7, 255, 255, 0xff, 0x02, 0x00, 0x04}, // pop h   
    {0x0288, &op_pop,	  8, 255, 255, 0xff, 0x02, 0x00, 0x04}, // pop pc   
    {0x0289, &op_pop,	  9, 255, 255, 0xff, 0x02, 0x00, 0x04}, // pop ra   
    {0x028a, &op_pop,	 10, 255, 255, 0xff, 0x02, 0x00, 0x04}, // pop sb   
    {0x028b, &op_pop,	 11, 255, 255, 0xff, 0x02, 0x00, 0x04}, // pop sp   
    {0x028c, &op_pop,	 12, 255, 255, 0xff, 0x02, 0x00, 0x04}, // pop db   
    {0x028d, &op_pop,	 13, 255, 255, 0xff, 0x02, 0x00, 0x04}, // pop cb   
    {0x028e, &op_pop,	 14, 255, 255, 0xff, 0x02, 0x00, 0x04}, // pop pi   
    {0x028f, &op_pop,	 15, 255, 255, 0xff, 0x02, 0x00, 0x04}, // pop status   
    {0x0240, &op_pop,	  0, 255, 255, 0xff, 0x02, 0x02, 0x02}, // pop.d a   
    {0x0241, &op_pop,	  1, 255, 255, 0xff, 0x02, 0x02, 0x02}, // pop.d b   
    {0x0242, &op_pop,	  2, 255, 255, 0xff, 0x02, 0x02, 0x02}, // pop.d c   
    {0x0243, &op_pop,	  3, 255, 255, 0xff, 0x02, 0x02, 0x02}, // pop.d d   
    {0x0244, &op_pop,	  4, 255, 255, 0xff, 0x02, 0x02, 0x02}, // pop.d e   
    {0x0245, &op_pop,	  5, 255, 255, 0xff, 0x02, 0x02, 0x02}, // pop.d f   
    {0x0246, &op_pop,	  6, 255, 255, 0xff, 0x02, 0x02, 0x02}, // pop.d g   
    {0x0247, &op_pop,	  7, 255, 255, 0xff, 0x02, 0x02, 0x02}, // pop.d h   
    {0x0248, &op_pop,	  8, 255, 255, 0xff, 0x02, 0x02, 0x02}, // pop.d pc   
    {0x0249, &op_pop,	  9, 255, 255, 0xff, 0x02, 0x02, 0x02}, // pop.d ra   
    {0x024a, &op_pop,	 10, 255, 255, 0xff, 0x02, 0x02, 0x02}, // pop.d sb   
    {0x024b, &op_pop,	 11, 255, 255, 0xff, 0x02, 0x02, 0x02}, // pop.d sp   
    {0x024c, &op_pop,	 12, 255, 255, 0xff, 0x02, 0x02, 0x02}, // pop.d db   
    {0x024d, &op_pop,	 13, 255, 255, 0xff, 0x02, 0x02, 0x02}, // pop.d cb   
    {0x024e, &op_pop,	 14, 255, 255, 0xff, 0x02, 0x02, 0x02}, // pop.d pi   
    {0x024f, &op_pop,	 15, 255, 255, 0xff, 0x02, 0x02, 0x02}, // pop.d status   
    {0x0220, &op_pop,	  0, 255, 255, 0xff, 0x02, 0x01, 0x01}, // pop.w a   
    {0x0221, &op_pop,	  1, 255, 255, 0xff, 0x02, 0x01, 0x01}, // pop.w b   
    {0x0222, &op_pop,	  2, 255, 255, 0xff, 0x02, 0x01, 0x01}, // pop.w c   
    {0x0223, &op_pop,	  3, 255, 255, 0xff, 0x02, 0x01, 0x01}, // pop.w d   
    {0x0224, &op_pop,	  4, 255, 255, 0xff, 0x02, 0x01, 0x01}, // pop.w e   
    {0x0225, &op_pop,	  5, 255, 255, 0xff, 0x02, 0x01, 0x01}, // pop.w f   
    {0x0226, &op_pop,	  6, 255, 255, 0xff, 0x02, 0x01, 0x01}, // pop.w g   
    {0x0227, &op_pop,	  7, 255, 255, 0xff, 0x02, 0x01, 0x01}, // pop.w h   
    {0x0228, &op_pop,	  8, 255, 255, 0xff, 0x02, 0x01, 0x01}, // pop.w pc   
    {0x0229, &op_pop,	  9, 255, 255, 0xff, 0x02, 0x01, 0x01}, // pop.w ra   
    {0x022a, &op_pop,	 10, 255, 255, 0xff, 0x02, 0x01, 0x01}, // pop.w sb   
    {0x022b, &op_pop,	 11, 255, 255, 0xff, 0x02, 0x01, 0x01}, // pop.w sp   
    {0x022c, &op_pop,	 12, 255, 255, 0xff, 0x02, 0x01, 0x01}, // pop.w db   
    {0x022d, &op_pop,	 13, 255, 255, 0xff, 0x02, 0x01, 0x01}, // pop.w cb   
    {0x022e, &op_pop,	 14, 255, 255, 0xff, 0x02, 0x01, 0x01}, // pop.w pi   
    {0x022f, &op_pop,	 15, 255, 255, 0xff, 0x02, 0x01, 0x01}, // pop.w status   
    {0x013f, &op_push_a,255, 255, 255, 0xff, 0x00, 0x00, 0x00}, // push.a    
    {0x023f, &op_pop_a,	255, 255, 255, 0xff, 0x00, 0x00, 0x00}, // pop.a    
    {0x011f, &op_push_h,255, 255, 255, 0xff, 0x00, 0x00, 0x00}, // push.h    
    {0x021f, &op_pop_h,	255, 255, 255, 0xff, 0x00, 0x00, 0x00}, // pop.h    
    {0x0300, &op_rev,	  0, 255, 255, 0x00, 0x00, 0x00, 0x00}, // rev a   
	{0x0300, &op_rev,	  0, 255, 255, 0x00, 0x00, 0x00, 0x00}, // rev a   
	{0x0301, &op_rev,	  1, 255, 255, 0x00, 0x00, 0x00, 0x00}, // rev b   
	{0x0302, &op_rev,	  2, 255, 255, 0x00, 0x00, 0x00, 0x00}, // rev c   
	{0x0303, &op_rev,	  3, 255, 255, 0x00, 0x00, 0x00, 0x00}, // rev d   
	{0x0304, &op_rev,	  4, 255, 255, 0x00, 0x00, 0x00, 0x00}, // rev e   
	{0x0305, &op_rev,	  5, 255, 255, 0x00, 0x00, 0x00, 0x00}, // rev f   
	{0x0306, &op_rev,	  6, 255, 255, 0x00, 0x00, 0x00, 0x00}, // rev g   
	{0x0307, &op_rev,	  7, 255, 255, 0x00, 0x00, 0x00, 0x00}, // rev h   
	{0x0308, &op_rev,	  8, 255, 255, 0x00, 0x00, 0x00, 0x00}, // rev pc   
	{0x0309, &op_rev,	  9, 255, 255, 0x00, 0x00, 0x00, 0x00}, // rev ra   
	{0x030a, &op_rev,	 10, 255, 255, 0x00, 0x00, 0x00, 0x00}, // rev sb   
	{0x030b, &op_rev,	 11, 255, 255, 0x00, 0x00, 0x00, 0x00}, // rev sp   
	{0x030c, &op_rev,	 12, 255, 255, 0x00, 0x00, 0x00, 0x00}, // rev db   
	{0x030d, &op_rev,	 13, 255, 255, 0x00, 0x00, 0x00, 0x00}, // rev cb   
	{0x030e, &op_rev,	 14, 255, 255, 0x00, 0x00, 0x00, 0x00}, // rev pi   
	{0x030f, &op_rev,	 15, 255, 255, 0x00, 0x00, 0x00, 0x00}, // rev status   
	{0x0310, &op_rev,	  0, 255, 255, 0x00, 0x00, 0x00, 0x00}, // swap2 a   
	{0x0311, &op_rev,	  1, 255, 255, 0x01, 0x00, 0x00, 0x00}, // swap2 b   
	{0x0312, &op_rev,	  2, 255, 255, 0x01, 0x00, 0x00, 0x00}, // swap2 c   
	{0x0313, &op_rev,	  3, 255, 255, 0x01, 0x00, 0x00, 0x00}, // swap2 d   
	{0x0314, &op_rev,	  4, 255, 255, 0x01, 0x00, 0x00, 0x00}, // swap2 e   
	{0x0315, &op_rev,	  5, 255, 255, 0x01, 0x00, 0x00, 0x00}, // swap2 f   
	{0x0316, &op_rev,	  6, 255, 255, 0x01, 0x00, 0x00, 0x00}, // swap2 g   
	{0x0317, &op_rev,	  7, 255, 255, 0x01, 0x00, 0x00, 0x00}, // swap2 h   
	{0x0318, &op_rev,	  8, 255, 255, 0x01, 0x00, 0x00, 0x00}, // swap2 pc   
	{0x0319, &op_rev,	  9, 255, 255, 0x01, 0x00, 0x00, 0x00}, // swap2 ra   
	{0x031a, &op_rev,	 10, 255, 255, 0x01, 0x00, 0x00, 0x00}, // swap2 sb   
	{0x031b, &op_rev,	 11, 255, 255, 0x01, 0x00, 0x00, 0x00}, // swap2 sp   
	{0x031c, &op_rev,	 12, 255, 255, 0x01, 0x00, 0x00, 0x00}, // swap2 db   
	{0x031d, &op_rev,	 13, 255, 255, 0x01, 0x00, 0x00, 0x00}, // swap2 cb   
	{0x031e, &op_rev,	 14, 255, 255, 0x01, 0x00, 0x00, 0x00}, // swap2 pi   
	{0x031f, &op_rev,	 15, 255, 255, 0x01, 0x00, 0x00, 0x00}, // swap2 status   
	{0x0320, &op_rev,	  0, 255, 255, 0x02, 0x00, 0x00, 0x00}, // swap4 a   
	{0x0321, &op_rev,	  1, 255, 255, 0x02, 0x00, 0x00, 0x00}, // swap4 b   
	{0x0322, &op_rev,	  2, 255, 255, 0x02, 0x00, 0x00, 0x00}, // swap4 c   
	{0x0323, &op_rev,	  3, 255, 255, 0x02, 0x00, 0x00, 0x00}, // swap4 d   
	{0x0324, &op_rev,	  4, 255, 255, 0x02, 0x00, 0x00, 0x00}, // swap4 e   
	{0x0325, &op_rev,	  5, 255, 255, 0x02, 0x00, 0x00, 0x00}, // swap4 f   
	{0x0326, &op_rev,	  6, 255, 255, 0x02, 0x00, 0x00, 0x00}, // swap4 g   
	{0x0327, &op_rev,	  7, 255, 255, 0x02, 0x00, 0x00, 0x00}, // swap4 h   
	{0x0328, &op_rev,	  8, 255, 255, 0x02, 0x00, 0x00, 0x00}, // swap4 pc   
	{0x0329, &op_rev,	  9, 255, 255, 0x02, 0x00, 0x00, 0x00}, // swap4 ra   
	{0x032a, &op_rev,	 10, 255, 255, 0x02, 0x00, 0x00, 0x00}, // swap4 sb   
	{0x032b, &op_rev,	 11, 255, 255, 0x02, 0x00, 0x00, 0x00}, // swap4 sp   
	{0x032c, &op_rev,	 12, 255, 255, 0x02, 0x00, 0x00, 0x00}, // swap4 db   
	{0x032d, &op_rev,	 13, 255, 255, 0x02, 0x00, 0x00, 0x00}, // swap4 cb   
	{0x032e, &op_rev,	 14, 255, 255, 0x02, 0x00, 0x00, 0x00}, // swap4 pi   
	{0x032f, &op_rev,	 15, 255, 255, 0x02, 0x00, 0x00, 0x00}, // swap4 status   
	{0x0330, &op_rev,	  0, 255, 255, 0x03, 0x00, 0x00, 0x00}, // swap8 a   
	{0x0331, &op_rev,	  1, 255, 255, 0x03, 0x00, 0x00, 0x00}, // swap8 b   
	{0x0332, &op_rev,	  2, 255, 255, 0x03, 0x00, 0x00, 0x00}, // swap8 c   
	{0x0333, &op_rev,	  3, 255, 255, 0x03, 0x00, 0x00, 0x00}, // swap8 d   
	{0x0334, &op_rev,	  4, 255, 255, 0x03, 0x00, 0x00, 0x00}, // swap8 e   
	{0x0335, &op_rev,	  5, 255, 255, 0x03, 0x00, 0x00, 0x00}, // swap8 f   
	{0x0336, &op_rev,	  6, 255, 255, 0x03, 0x00, 0x00, 0x00}, // swap8 g   
	{0x0337, &op_rev,	  7, 255, 255, 0x03, 0x00, 0x00, 0x00}, // swap8 h   
	{0x0338, &op_rev,	  8, 255, 255, 0x03, 0x00, 0x00, 0x00}, // swap8 pc   
	{0x0339, &op_rev,	  9, 255, 255, 0x03, 0x00, 0x00, 0x00}, // swap8 ra   
	{0x033a, &op_rev,	 10, 255, 255, 0x03, 0x00, 0x00, 0x00}, // swap8 sb   
	{0x033b, &op_rev,	 11, 255, 255, 0x03, 0x00, 0x00, 0x00}, // swap8 sp   
	{0x033c, &op_rev,	 12, 255, 255, 0x03, 0x00, 0x00, 0x00}, // swap8 db   
	{0x033d, &op_rev,	 13, 255, 255, 0x03, 0x00, 0x00, 0x00}, // swap8 cb   
	{0x033e, &op_rev,	 14, 255, 255, 0x03, 0x00, 0x00, 0x00}, // swap8 pi   
	{0x033f, &op_rev,	 15, 255, 255, 0x03, 0x00, 0x00, 0x00}, // swap8 status   
	{0x0340, &op_rev,	  0, 255, 255, 0x04, 0x00, 0x00, 0x00}, // swap16 a   
	{0x0341, &op_rev,	  1, 255, 255, 0x04, 0x00, 0x00, 0x00}, // swap16 b   
	{0x0342, &op_rev,	  2, 255, 255, 0x04, 0x00, 0x00, 0x00}, // swap16 c   
	{0x0343, &op_rev,	  3, 255, 255, 0x04, 0x00, 0x00, 0x00}, // swap16 d   
	{0x0344, &op_rev,	  4, 255, 255, 0x04, 0x00, 0x00, 0x00}, // swap16 e   
	{0x0345, &op_rev,	  5, 255, 255, 0x04, 0x00, 0x00, 0x00}, // swap16 f   
	{0x0346, &op_rev,	  6, 255, 255, 0x04, 0x00, 0x00, 0x00}, // swap16 g   
	{0x0347, &op_rev,	  7, 255, 255, 0x04, 0x00, 0x00, 0x00}, // swap16 h   
	{0x0348, &op_rev,	  8, 255, 255, 0x04, 0x00, 0x00, 0x00}, // swap16 pc   
	{0x0349, &op_rev,	  9, 255, 255, 0x04, 0x00, 0x00, 0x00}, // swap16 ra   
	{0x034a, &op_rev,	 10, 255, 255, 0x04, 0x00, 0x00, 0x00}, // swap16 sb   
	{0x034b, &op_rev,	 11, 255, 255, 0x04, 0x00, 0x00, 0x00}, // swap16 sp   
	{0x034c, &op_rev,	 12, 255, 255, 0x04, 0x00, 0x00, 0x00}, // swap16 db   
	{0x034d, &op_rev,	 13, 255, 255, 0x04, 0x00, 0x00, 0x00}, // swap16 cb   
	{0x034e, &op_rev,	 14, 255, 255, 0x04, 0x00, 0x00, 0x00}, // swap16 pi   
	{0x034f, &op_rev,	 15, 255, 255, 0x04, 0x00, 0x00, 0x00}, // swap16 status   
	{0x0350, &op_rev,	  0, 255, 255, 0x05, 0x00, 0x00, 0x00}, // swap32 a   
	{0x0351, &op_rev,	  1, 255, 255, 0x05, 0x00, 0x00, 0x00}, // swap32 b   
	{0x0352, &op_rev,	  2, 255, 255, 0x05, 0x00, 0x00, 0x00}, // swap32 c   
	{0x0353, &op_rev,	  3, 255, 255, 0x05, 0x00, 0x00, 0x00}, // swap32 d   
	{0x0354, &op_rev,	  4, 255, 255, 0x05, 0x00, 0x00, 0x00}, // swap32 e   
	{0x0355, &op_rev,	  5, 255, 255, 0x05, 0x00, 0x00, 0x00}, // swap32 f   
	{0x0356, &op_rev,	  6, 255, 255, 0x05, 0x00, 0x00, 0x00}, // swap32 g   
	{0x0357, &op_rev,	  7, 255, 255, 0x05, 0x00, 0x00, 0x00}, // swap32 h   
	{0x0358, &op_rev,	  8, 255, 255, 0x05, 0x00, 0x00, 0x00}, // swap32 pc   
	{0x0359, &op_rev,	  9, 255, 255, 0x05, 0x00, 0x00, 0x00}, // swap32 ra   
	{0x035a, &op_rev,	 10, 255, 255, 0x05, 0x00, 0x00, 0x00}, // swap32 sb   
	{0x035b, &op_rev,	 11, 255, 255, 0x05, 0x00, 0x00, 0x00}, // swap32 sp   
	{0x035c, &op_rev,	 12, 255, 255, 0x05, 0x00, 0x00, 0x00}, // swap32 db   
	{0x035d, &op_rev,	 13, 255, 255, 0x05, 0x00, 0x00, 0x00}, // swap32 cb   
	{0x035e, &op_rev,	 14, 255, 255, 0x05, 0x00, 0x00, 0x00}, // swap32 pi   
	{0x035f, &op_rev,	 15, 255, 255, 0x05, 0x00, 0x00, 0x00}, // swap32 status   
    {0x0430, &op_load_a,  0, 255, 255, 0xff, 0x00, 0x00, 0x00}, // load.a a   
    {0x0431, &op_load_a,  1, 255, 255, 0xff, 0x00, 0x00, 0x00}, // load.a b   
    {0x0432, &op_load_a,  2, 255, 255, 0xff, 0x00, 0x00, 0x00}, // load.a c   
    {0x0433, &op_load_a,  3, 255, 255, 0xff, 0x00, 0x00, 0x00}, // load.a d   
    {0x0434, &op_load_a,  4, 255, 255, 0xff, 0x00, 0x00, 0x00}, // load.a e   
    {0x0435, &op_load_a,  5, 255, 255, 0xff, 0x00, 0x00, 0x00}, // load.a f   
    {0x0436, &op_load_a,  6, 255, 255, 0xff, 0x00, 0x00, 0x00}, // load.a g   
    {0x0437, &op_load_a,  7, 255, 255, 0xff, 0x00, 0x00, 0x00}, // load.a h   
    {0x0438, &op_load_a,  8, 255, 255, 0xff, 0x00, 0x00, 0x00}, // load.a pc   
    {0x0439, &op_load_a,  9, 255, 255, 0xff, 0x00, 0x00, 0x00}, // load.a ra   
    {0x043a, &op_load_a, 10, 255, 255, 0xff, 0x00, 0x00, 0x00}, // load.a sb   
    {0x043b, &op_load_a, 11, 255, 255, 0xff, 0x00, 0x00, 0x00}, // load.a sp   
    {0x043c, &op_load_a, 12, 255, 255, 0xff, 0x00, 0x00, 0x00}, // load.a db   
    {0x043d, &op_load_a, 13, 255, 255, 0xff, 0x00, 0x00, 0x00}, // load.a cb   
    {0x043e, &op_load_a, 14, 255, 255, 0xff, 0x00, 0x00, 0x00}, // load.a pi   
    {0x043f, &op_load_a,  8, 255, 255, 0xff, 0x00, 0x04, 0x00}, // load.a <literal>   
    {0x0410, &op_load_h,  0, 255, 255, 0xff, 0x00, 0x00, 0x00}, // load.h a   
    {0x0411, &op_load_h,  1, 255, 255, 0xff, 0x00, 0x00, 0x00}, // load.h b   
    {0x0412, &op_load_h,  2, 255, 255, 0xff, 0x00, 0x00, 0x00}, // load.h c   
    {0x0413, &op_load_h,  3, 255, 255, 0xff, 0x00, 0x00, 0x00}, // load.h d   
    {0x0414, &op_load_h,  4, 255, 255, 0xff, 0x00, 0x00, 0x00}, // load.h e   
    {0x0415, &op_load_h,  5, 255, 255, 0xff, 0x00, 0x00, 0x00}, // load.h f   
    {0x0416, &op_load_h,  6, 255, 255, 0xff, 0x00, 0x00, 0x00}, // load.h g   
    {0x0417, &op_load_h,  7, 255, 255, 0xff, 0x00, 0x00, 0x00}, // load.h h   
    {0x0418, &op_load_h,  8, 255, 255, 0xff, 0x00, 0x00, 0x00}, // load.h pc   
    {0x0419, &op_load_h,  9, 255, 255, 0xff, 0x00, 0x00, 0x00}, // load.h ra   
    {0x041a, &op_load_h, 10, 255, 255, 0xff, 0x00, 0x00, 0x00}, // load.h sb   
    {0x041b, &op_load_h, 11, 255, 255, 0xff, 0x00, 0x00, 0x00}, // load.h sp   
    {0x041c, &op_load_h, 12, 255, 255, 0xff, 0x00, 0x00, 0x00}, // load.h db   
    {0x041d, &op_load_h, 13, 255, 255, 0xff, 0x00, 0x00, 0x00}, // load.h cb   
    {0x041e, &op_load_h, 14, 255, 255, 0xff, 0x00, 0x00, 0x00}, // load.h pi   
    {0x041f, &op_load_h,  8, 255, 255, 0xff, 0x00, 0x04, 0x00}, // load.h <literal>   
    {0x0500, &op_real,	  0,   0, 255, 0xff, 0x02, 0x00, 0x00}, // real a a  
    {0x0510, &op_real,	  0,   1, 255, 0xff, 0x02, 0x00, 0x00}, // real a b  
    {0x0520, &op_real,	  0,   2, 255, 0xff, 0x02, 0x00, 0x00}, // real a c  
    {0x0530, &op_real,	  0,   3, 255, 0xff, 0x02, 0x00, 0x00}, // real a d  
    {0x0540, &op_real,	  0,   4, 255, 0xff, 0x02, 0x00, 0x00}, // real a e  
    {0x0550, &op_real,	  0,   5, 255, 0xff, 0x02, 0x00, 0x00}, // real a f  
    {0x0560, &op_real,	  0,   6, 255, 0xff, 0x02, 0x00, 0x00}, // real a g  
    {0x0570, &op_real,	  0,   7, 255, 0xff, 0x02, 0x00, 0x00}, // real a h  
    {0x0580, &op_real,	  0,   8, 255, 0xff, 0x02, 0x00, 0x00}, // real a pc  
    {0x0590, &op_real,	  0,   9, 255, 0xff, 0x02, 0x00, 0x00}, // real a ra  
    {0x05a0, &op_real,	  0,  10, 255, 0xff, 0x02, 0x00, 0x00}, // real a sb  
    {0x05b0, &op_real,	  0,  11, 255, 0xff, 0x02, 0x00, 0x00}, // real a sp  
    {0x05c0, &op_real,	  0,  12, 255, 0xff, 0x02, 0x00, 0x00}, // real a db  
    {0x05d0, &op_real,	  0,  13, 255, 0xff, 0x02, 0x00, 0x00}, // real a cb  
    {0x05e0, &op_real,	  0,  14, 255, 0xff, 0x02, 0x00, 0x00}, // real a pi  
    {0x0501, &op_real,	  1,   0, 255, 0xff, 0x02, 0x00, 0x00}, // real b a  
    {0x0511, &op_real,	  1,   1, 255, 0xff, 0x02, 0x00, 0x00}, // real b b  
    {0x0521, &op_real,	  1,   2, 255, 0xff, 0x02, 0x00, 0x00}, // real b c  
    {0x0531, &op_real,	  1,   3, 255, 0xff, 0x02, 0x00, 0x00}, // real b d  
    {0x0541, &op_real,	  1,   4, 255, 0xff, 0x02, 0x00, 0x00}, // real b e  
    {0x0551, &op_real,	  1,   5, 255, 0xff, 0x02, 0x00, 0x00}, // real b f  
    {0x0561, &op_real,	  1,   6, 255, 0xff, 0x02, 0x00, 0x00}, // real b g  
    {0x0571, &op_real,	  1,   7, 255, 0xff, 0x02, 0x00, 0x00}, // real b h  
    {0x0581, &op_real,	  1,   8, 255, 0xff, 0x02, 0x00, 0x00}, // real b pc  
    {0x0591, &op_real,	  1,   9, 255, 0xff, 0x02, 0x00, 0x00}, // real b ra  
    {0x05a1, &op_real,	  1,  10, 255, 0xff, 0x02, 0x00, 0x00}, // real b sb  
    {0x05b1, &op_real,	  1,  11, 255, 0xff, 0x02, 0x00, 0x00}, // real b sp  
    {0x05c1, &op_real,	  1,  12, 255, 0xff, 0x02, 0x00, 0x00}, // real b db  
    {0x05d1, &op_real,	  1,  13, 255, 0xff, 0x02, 0x00, 0x00}, // real b cb  
    {0x05e1, &op_real,	  1,  14, 255, 0xff, 0x02, 0x00, 0x00}, // real b pi  
    {0x0502, &op_real,	  2,   0, 255, 0xff, 0x02, 0x00, 0x00}, // real c a  
    {0x0512, &op_real,	  2,   1, 255, 0xff, 0x02, 0x00, 0x00}, // real c b  
    {0x0522, &op_real,	  2,   2, 255, 0xff, 0x02, 0x00, 0x00}, // real c c  
    {0x0532, &op_real,	  2,   3, 255, 0xff, 0x02, 0x00, 0x00}, // real c d  
    {0x0542, &op_real,	  2,   4, 255, 0xff, 0x02, 0x00, 0x00}, // real c e  
    {0x0552, &op_real,	  2,   5, 255, 0xff, 0x02, 0x00, 0x00}, // real c f  
    {0x0562, &op_real,	  2,   6, 255, 0xff, 0x02, 0x00, 0x00}, // real c g  
    {0x0572, &op_real,	  2,   7, 255, 0xff, 0x02, 0x00, 0x00}, // real c h  
    {0x0582, &op_real,	  2,   8, 255, 0xff, 0x02, 0x00, 0x00}, // real c pc  
    {0x0592, &op_real,	  2,   9, 255, 0xff, 0x02, 0x00, 0x00}, // real c ra  
    {0x05a2, &op_real,	  2,  10, 255, 0xff, 0x02, 0x00, 0x00}, // real c sb  
    {0x05b2, &op_real,	  2,  11, 255, 0xff, 0x02, 0x00, 0x00}, // real c sp  
    {0x05c2, &op_real,	  2,  12, 255, 0xff, 0x02, 0x00, 0x00}, // real c db  
    {0x05d2, &op_real,	  2,  13, 255, 0xff, 0x02, 0x00, 0x00}, // real c cb  
    {0x05e2, &op_real,	  2,  14, 255, 0xff, 0x02, 0x00, 0x00}, // real c pi  
    {0x0503, &op_real,	  3,   0, 255, 0xff, 0x02, 0x00, 0x00}, // real d a  
    {0x0513, &op_real,	  3,   1, 255, 0xff, 0x02, 0x00, 0x00}, // real d b  
    {0x0523, &op_real,	  3,   2, 255, 0xff, 0x02, 0x00, 0x00}, // real d c  
    {0x0533, &op_real,	  3,   3, 255, 0xff, 0x02, 0x00, 0x00}, // real d d  
    {0x0543, &op_real,	  3,   4, 255, 0xff, 0x02, 0x00, 0x00}, // real d e  
    {0x0553, &op_real,	  3,   5, 255, 0xff, 0x02, 0x00, 0x00}, // real d f  
    {0x0563, &op_real,	  3,   6, 255, 0xff, 0x02, 0x00, 0x00}, // real d g  
    {0x0573, &op_real,	  3,   7, 255, 0xff, 0x02, 0x00, 0x00}, // real d h  
    {0x0583, &op_real,	  3,   8, 255, 0xff, 0x02, 0x00, 0x00}, // real d pc  
    {0x0593, &op_real,	  3,   9, 255, 0xff, 0x02, 0x00, 0x00}, // real d ra  
    {0x05a3, &op_real,	  3,  10, 255, 0xff, 0x02, 0x00, 0x00}, // real d sb  
    {0x05b3, &op_real,	  3,  11, 255, 0xff, 0x02, 0x00, 0x00}, // real d sp  
    {0x05c3, &op_real,	  3,  12, 255, 0xff, 0x02, 0x00, 0x00}, // real d db  
    {0x05d3, &op_real,	  3,  13, 255, 0xff, 0x02, 0x00, 0x00}, // real d cb  
    {0x05e3, &op_real,	  3,  14, 255, 0xff, 0x02, 0x00, 0x00}, // real d pi  
    {0x0504, &op_real,	  4,   0, 255, 0xff, 0x02, 0x00, 0x00}, // real e a  
    {0x0514, &op_real,	  4,   1, 255, 0xff, 0x02, 0x00, 0x00}, // real e b  
    {0x0524, &op_real,	  4,   2, 255, 0xff, 0x02, 0x00, 0x00}, // real e c  
    {0x0534, &op_real,	  4,   3, 255, 0xff, 0x02, 0x00, 0x00}, // real e d  
    {0x0544, &op_real,	  4,   4, 255, 0xff, 0x02, 0x00, 0x00}, // real e e  
    {0x0554, &op_real,	  4,   5, 255, 0xff, 0x02, 0x00, 0x00}, // real e f  
    {0x0564, &op_real,	  4,   6, 255, 0xff, 0x02, 0x00, 0x00}, // real e g  
    {0x0574, &op_real,	  4,   7, 255, 0xff, 0x02, 0x00, 0x00}, // real e h  
    {0x0584, &op_real,	  4,   8, 255, 0xff, 0x02, 0x00, 0x00}, // real e pc  
    {0x0594, &op_real,	  4,   9, 255, 0xff, 0x02, 0x00, 0x00}, // real e ra  
    {0x05a4, &op_real,	  4,  10, 255, 0xff, 0x02, 0x00, 0x00}, // real e sb  
    {0x05b4, &op_real,	  4,  11, 255, 0xff, 0x02, 0x00, 0x00}, // real e sp  
    {0x05c4, &op_real,	  4,  12, 255, 0xff, 0x02, 0x00, 0x00}, // real e db  
    {0x05d4, &op_real,	  4,  13, 255, 0xff, 0x02, 0x00, 0x00}, // real e cb  
    {0x05e4, &op_real,	  4,  14, 255, 0xff, 0x02, 0x00, 0x00}, // real e pi  
    {0x0505, &op_real,	  5,   0, 255, 0xff, 0x02, 0x00, 0x00}, // real f a  
    {0x0515, &op_real,	  5,   1, 255, 0xff, 0x02, 0x00, 0x00}, // real f b  
    {0x0525, &op_real,	  5,   2, 255, 0xff, 0x02, 0x00, 0x00}, // real f c  
    {0x0535, &op_real,	  5,   3, 255, 0xff, 0x02, 0x00, 0x00}, // real f d  
    {0x0545, &op_real,	  5,   4, 255, 0xff, 0x02, 0x00, 0x00}, // real f e  
    {0x0555, &op_real,	  5,   5, 255, 0xff, 0x02, 0x00, 0x00}, // real f f  
    {0x0565, &op_real,	  5,   6, 255, 0xff, 0x02, 0x00, 0x00}, // real f g  
    {0x0575, &op_real,	  5,   7, 255, 0xff, 0x02, 0x00, 0x00}, // real f h  
    {0x0585, &op_real,	  5,   8, 255, 0xff, 0x02, 0x00, 0x00}, // real f pc  
    {0x0595, &op_real,	  5,   9, 255, 0xff, 0x02, 0x00, 0x00}, // real f ra  
    {0x05a5, &op_real,	  5,  10, 255, 0xff, 0x02, 0x00, 0x00}, // real f sb  
    {0x05b5, &op_real,	  5,  11, 255, 0xff, 0x02, 0x00, 0x00}, // real f sp  
    {0x05c5, &op_real,	  5,  12, 255, 0xff, 0x02, 0x00, 0x00}, // real f db  
    {0x05d5, &op_real,	  5,  13, 255, 0xff, 0x02, 0x00, 0x00}, // real f cb  
    {0x05e5, &op_real,	  5,  14, 255, 0xff, 0x02, 0x00, 0x00}, // real f pi  
    {0x0506, &op_real,	  6,   0, 255, 0xff, 0x02, 0x00, 0x00}, // real g a  
    {0x0516, &op_real,	  6,   1, 255, 0xff, 0x02, 0x00, 0x00}, // real g b  
    {0x0526, &op_real,	  6,   2, 255, 0xff, 0x02, 0x00, 0x00}, // real g c  
    {0x0536, &op_real,	  6,   3, 255, 0xff, 0x02, 0x00, 0x00}, // real g d  
    {0x0546, &op_real,	  6,   4, 255, 0xff, 0x02, 0x00, 0x00}, // real g e  
    {0x0556, &op_real,	  6,   5, 255, 0xff, 0x02, 0x00, 0x00}, // real g f  
    {0x0566, &op_real,	  6,   6, 255, 0xff, 0x02, 0x00, 0x00}, // real g g  
    {0x0576, &op_real,	  6,   7, 255, 0xff, 0x02, 0x00, 0x00}, // real g h  
    {0x0586, &op_real,	  6,   8, 255, 0xff, 0x02, 0x00, 0x00}, // real g pc  
    {0x0596, &op_real,	  6,   9, 255, 0xff, 0x02, 0x00, 0x00}, // real g ra  
    {0x05a6, &op_real,	  6,  10, 255, 0xff, 0x02, 0x00, 0x00}, // real g sb  
    {0x05b6, &op_real,	  6,  11, 255, 0xff, 0x02, 0x00, 0x00}, // real g sp  
    {0x05c6, &op_real,	  6,  12, 255, 0xff, 0x02, 0x00, 0x00}, // real g db  
    {0x05d6, &op_real,	  6,  13, 255, 0xff, 0x02, 0x00, 0x00}, // real g cb  
    {0x05e6, &op_real,	  6,  14, 255, 0xff, 0x02, 0x00, 0x00}, // real g pi  
    {0x0507, &op_real,	  7,   0, 255, 0xff, 0x02, 0x00, 0x00}, // real h a  
    {0x0517, &op_real,	  7,   1, 255, 0xff, 0x02, 0x00, 0x00}, // real h b  
    {0x0527, &op_real,	  7,   2, 255, 0xff, 0x02, 0x00, 0x00}, // real h c  
    {0x0537, &op_real,	  7,   3, 255, 0xff, 0x02, 0x00, 0x00}, // real h d  
    {0x0547, &op_real,	  7,   4, 255, 0xff, 0x02, 0x00, 0x00}, // real h e  
    {0x0557, &op_real,	  7,   5, 255, 0xff, 0x02, 0x00, 0x00}, // real h f  
    {0x0567, &op_real,	  7,   6, 255, 0xff, 0x02, 0x00, 0x00}, // real h g  
    {0x0577, &op_real,	  7,   7, 255, 0xff, 0x02, 0x00, 0x00}, // real h h  
    {0x0587, &op_real,	  7,   8, 255, 0xff, 0x02, 0x00, 0x00}, // real h pc  
    {0x0597, &op_real,	  7,   9, 255, 0xff, 0x02, 0x00, 0x00}, // real h ra  
    {0x05a7, &op_real,	  7,  10, 255, 0xff, 0x02, 0x00, 0x00}, // real h sb  
    {0x05b7, &op_real,	  7,  11, 255, 0xff, 0x02, 0x00, 0x00}, // real h sp  
    {0x05c7, &op_real,	  7,  12, 255, 0xff, 0x02, 0x00, 0x00}, // real h db  
    {0x05d7, &op_real,	  7,  13, 255, 0xff, 0x02, 0x00, 0x00}, // real h cb  
    {0x05e7, &op_real,	  7,  14, 255, 0xff, 0x02, 0x00, 0x00}, // real h pi  
    {0x0508, &op_real,	  8,   0, 255, 0xff, 0x02, 0x00, 0x00}, // real pc a  
    {0x0518, &op_real,	  8,   1, 255, 0xff, 0x02, 0x00, 0x00}, // real pc b  
    {0x0528, &op_real,	  8,   2, 255, 0xff, 0x02, 0x00, 0x00}, // real pc c  
    {0x0538, &op_real,	  8,   3, 255, 0xff, 0x02, 0x00, 0x00}, // real pc d  
    {0x0548, &op_real,	  8,   4, 255, 0xff, 0x02, 0x00, 0x00}, // real pc e  
    {0x0558, &op_real,	  8,   5, 255, 0xff, 0x02, 0x00, 0x00}, // real pc f  
    {0x0568, &op_real,	  8,   6, 255, 0xff, 0x02, 0x00, 0x00}, // real pc g  
    {0x0578, &op_real,	  8,   7, 255, 0xff, 0x02, 0x00, 0x00}, // real pc h  
    {0x0588, &op_real,	  8,   8, 255, 0xff, 0x02, 0x00, 0x00}, // real pc pc  
    {0x0598, &op_real,	  8,   9, 255, 0xff, 0x02, 0x00, 0x00}, // real pc ra  
    {0x05a8, &op_real,	  8,  10, 255, 0xff, 0x02, 0x00, 0x00}, // real pc sb  
    {0x05b8, &op_real,	  8,  11, 255, 0xff, 0x02, 0x00, 0x00}, // real pc sp  
    {0x05c8, &op_real,	  8,  12, 255, 0xff, 0x02, 0x00, 0x00}, // real pc db  
    {0x05d8, &op_real,	  8,  13, 255, 0xff, 0x02, 0x00, 0x00}, // real pc cb  
    {0x05e8, &op_real,	  8,  14, 255, 0xff, 0x02, 0x00, 0x00}, // real pc pi  
    {0x0509, &op_real,	  9,   0, 255, 0xff, 0x02, 0x00, 0x00}, // real ra a  
    {0x0519, &op_real,	  9,   1, 255, 0xff, 0x02, 0x00, 0x00}, // real ra b  
    {0x0529, &op_real,	  9,   2, 255, 0xff, 0x02, 0x00, 0x00}, // real ra c  
    {0x0539, &op_real,	  9,   3, 255, 0xff, 0x02, 0x00, 0x00}, // real ra d  
    {0x0549, &op_real,	  9,   4, 255, 0xff, 0x02, 0x00, 0x00}, // real ra e  
    {0x0559, &op_real,	  9,   5, 255, 0xff, 0x02, 0x00, 0x00}, // real ra f  
    {0x0569, &op_real,	  9,   6, 255, 0xff, 0x02, 0x00, 0x00}, // real ra g  
    {0x0579, &op_real,	  9,   7, 255, 0xff, 0x02, 0x00, 0x00}, // real ra h  
    {0x0589, &op_real,	  9,   8, 255, 0xff, 0x02, 0x00, 0x00}, // real ra pc  
    {0x0599, &op_real,	  9,   9, 255, 0xff, 0x02, 0x00, 0x00}, // real ra ra  
    {0x05a9, &op_real,	  9,  10, 255, 0xff, 0x02, 0x00, 0x00}, // real ra sb  
    {0x05b9, &op_real,	  9,  11, 255, 0xff, 0x02, 0x00, 0x00}, // real ra sp  
    {0x05c9, &op_real,	  9,  12, 255, 0xff, 0x02, 0x00, 0x00}, // real ra db  
    {0x05d9, &op_real,	  9,  13, 255, 0xff, 0x02, 0x00, 0x00}, // real ra cb  
    {0x05e9, &op_real,	  9,  14, 255, 0xff, 0x02, 0x00, 0x00}, // real ra pi  
    {0x050a, &op_real,	 10,   0, 255, 0xff, 0x02, 0x00, 0x00}, // real sb a  
    {0x051a, &op_real,	 10,   1, 255, 0xff, 0x02, 0x00, 0x00}, // real sb b  
    {0x052a, &op_real,	 10,   2, 255, 0xff, 0x02, 0x00, 0x00}, // real sb c  
    {0x053a, &op_real,	 10,   3, 255, 0xff, 0x02, 0x00, 0x00}, // real sb d  
    {0x054a, &op_real,	 10,   4, 255, 0xff, 0x02, 0x00, 0x00}, // real sb e  
    {0x055a, &op_real,	 10,   5, 255, 0xff, 0x02, 0x00, 0x00}, // real sb f  
    {0x056a, &op_real,	 10,   6, 255, 0xff, 0x02, 0x00, 0x00}, // real sb g  
    {0x057a, &op_real,	 10,   7, 255, 0xff, 0x02, 0x00, 0x00}, // real sb h  
    {0x058a, &op_real,	 10,   8, 255, 0xff, 0x02, 0x00, 0x00}, // real sb pc  
    {0x059a, &op_real,	 10,   9, 255, 0xff, 0x02, 0x00, 0x00}, // real sb ra  
    {0x05aa, &op_real,	 10,  10, 255, 0xff, 0x02, 0x00, 0x00}, // real sb sb  
    {0x05ba, &op_real,	 10,  11, 255, 0xff, 0x02, 0x00, 0x00}, // real sb sp  
    {0x05ca, &op_real,	 10,  12, 255, 0xff, 0x02, 0x00, 0x00}, // real sb db  
    {0x05da, &op_real,	 10,  13, 255, 0xff, 0x02, 0x00, 0x00}, // real sb cb  
    {0x05ea, &op_real,	 10,  14, 255, 0xff, 0x02, 0x00, 0x00}, // real sb pi  
    {0x050b, &op_real,	 11,   0, 255, 0xff, 0x02, 0x00, 0x00}, // real sp a  
    {0x051b, &op_real,	 11,   1, 255, 0xff, 0x02, 0x00, 0x00}, // real sp b  
    {0x052b, &op_real,	 11,   2, 255, 0xff, 0x02, 0x00, 0x00}, // real sp c  
    {0x053b, &op_real,	 11,   3, 255, 0xff, 0x02, 0x00, 0x00}, // real sp d  
    {0x054b, &op_real,	 11,   4, 255, 0xff, 0x02, 0x00, 0x00}, // real sp e  
    {0x055b, &op_real,	 11,   5, 255, 0xff, 0x02, 0x00, 0x00}, // real sp f  
    {0x056b, &op_real,	 11,   6, 255, 0xff, 0x02, 0x00, 0x00}, // real sp g  
    {0x057b, &op_real,	 11,   7, 255, 0xff, 0x02, 0x00, 0x00}, // real sp h  
    {0x058b, &op_real,	 11,   8, 255, 0xff, 0x02, 0x00, 0x00}, // real sp pc  
    {0x059b, &op_real,	 11,   9, 255, 0xff, 0x02, 0x00, 0x00}, // real sp ra  
    {0x05ab, &op_real,	 11,  10, 255, 0xff, 0x02, 0x00, 0x00}, // real sp sb  
    {0x05bb, &op_real,	 11,  11, 255, 0xff, 0x02, 0x00, 0x00}, // real sp sp  
    {0x05cb, &op_real,	 11,  12, 255, 0xff, 0x02, 0x00, 0x00}, // real sp db  
    {0x05db, &op_real,	 11,  13, 255, 0xff, 0x02, 0x00, 0x00}, // real sp cb  
    {0x05eb, &op_real,	 11,  14, 255, 0xff, 0x02, 0x00, 0x00}, // real sp pi  
    {0x050c, &op_real,	 12,   0, 255, 0xff, 0x02, 0x00, 0x00}, // real db a  
    {0x051c, &op_real,	 12,   1, 255, 0xff, 0x02, 0x00, 0x00}, // real db b  
    {0x052c, &op_real,	 12,   2, 255, 0xff, 0x02, 0x00, 0x00}, // real db c  
    {0x053c, &op_real,	 12,   3, 255, 0xff, 0x02, 0x00, 0x00}, // real db d  
    {0x054c, &op_real,	 12,   4, 255, 0xff, 0x02, 0x00, 0x00}, // real db e  
    {0x055c, &op_real,	 12,   5, 255, 0xff, 0x02, 0x00, 0x00}, // real db f  
    {0x056c, &op_real,	 12,   6, 255, 0xff, 0x02, 0x00, 0x00}, // real db g  
    {0x057c, &op_real,	 12,   7, 255, 0xff, 0x02, 0x00, 0x00}, // real db h  
    {0x058c, &op_real,	 12,   8, 255, 0xff, 0x02, 0x00, 0x00}, // real db pc  
    {0x059c, &op_real,	 12,   9, 255, 0xff, 0x02, 0x00, 0x00}, // real db ra  
    {0x05ac, &op_real,	 12,  10, 255, 0xff, 0x02, 0x00, 0x00}, // real db sb  
    {0x05bc, &op_real,	 12,  11, 255, 0xff, 0x02, 0x00, 0x00}, // real db sp  
    {0x05cc, &op_real,	 12,  12, 255, 0xff, 0x02, 0x00, 0x00}, // real db db  
    {0x05dc, &op_real,	 12,  13, 255, 0xff, 0x02, 0x00, 0x00}, // real db cb  
    {0x05ec, &op_real,	 12,  14, 255, 0xff, 0x02, 0x00, 0x00}, // real db pi  
    {0x050d, &op_real,	 13,   0, 255, 0xff, 0x02, 0x00, 0x00}, // real cb a  
    {0x051d, &op_real,	 13,   1, 255, 0xff, 0x02, 0x00, 0x00}, // real cb b  
    {0x052d, &op_real,	 13,   2, 255, 0xff, 0x02, 0x00, 0x00}, // real cb c  
    {0x053d, &op_real,	 13,   3, 255, 0xff, 0x02, 0x00, 0x00}, // real cb d  
    {0x054d, &op_real,	 13,   4, 255, 0xff, 0x02, 0x00, 0x00}, // real cb e  
    {0x055d, &op_real,	 13,   5, 255, 0xff, 0x02, 0x00, 0x00}, // real cb f  
    {0x056d, &op_real,	 13,   6, 255, 0xff, 0x02, 0x00, 0x00}, // real cb g  
    {0x057d, &op_real,	 13,   7, 255, 0xff, 0x02, 0x00, 0x00}, // real cb h  
    {0x058d, &op_real,	 13,   8, 255, 0xff, 0x02, 0x00, 0x00}, // real cb pc  
    {0x059d, &op_real,	 13,   9, 255, 0xff, 0x02, 0x00, 0x00}, // real cb ra  
    {0x05ad, &op_real,	 13,  10, 255, 0xff, 0x02, 0x00, 0x00}, // real cb sb  
    {0x05bd, &op_real,	 13,  11, 255, 0xff, 0x02, 0x00, 0x00}, // real cb sp  
    {0x05cd, &op_real,	 13,  12, 255, 0xff, 0x02, 0x00, 0x00}, // real cb db  
    {0x05dd, &op_real,	 13,  13, 255, 0xff, 0x02, 0x00, 0x00}, // real cb cb  
    {0x05ed, &op_real,	 13,  14, 255, 0xff, 0x02, 0x00, 0x00}, // real cb pi  
    {0x050e, &op_real,	 14,   0, 255, 0xff, 0x02, 0x00, 0x00}, // real pi a  
    {0x051e, &op_real,	 14,   1, 255, 0xff, 0x02, 0x00, 0x00}, // real pi b  
    {0x052e, &op_real,	 14,   2, 255, 0xff, 0x02, 0x00, 0x00}, // real pi c  
    {0x053e, &op_real,	 14,   3, 255, 0xff, 0x02, 0x00, 0x00}, // real pi d  
    {0x054e, &op_real,	 14,   4, 255, 0xff, 0x02, 0x00, 0x00}, // real pi e  
    {0x055e, &op_real,	 14,   5, 255, 0xff, 0x02, 0x00, 0x00}, // real pi f  
    {0x056e, &op_real,	 14,   6, 255, 0xff, 0x02, 0x00, 0x00}, // real pi g  
    {0x057e, &op_real,	 14,   7, 255, 0xff, 0x02, 0x00, 0x00}, // real pi h  
    {0x058e, &op_real,	 14,   8, 255, 0xff, 0x02, 0x00, 0x00}, // real pi pc  
    {0x059e, &op_real,	 14,   9, 255, 0xff, 0x02, 0x00, 0x00}, // real pi ra  
    {0x05ae, &op_real,	 14,  10, 255, 0xff, 0x02, 0x00, 0x00}, // real pi sb  
    {0x05be, &op_real,	 14,  11, 255, 0xff, 0x02, 0x00, 0x00}, // real pi sp  
    {0x05ce, &op_real,	 14,  12, 255, 0xff, 0x02, 0x00, 0x00}, // real pi db  
    {0x05de, &op_real,	 14,  13, 255, 0xff, 0x02, 0x00, 0x00}, // real pi cb  
    {0x05ee, &op_real,	 14,  14, 255, 0xff, 0x02, 0x00, 0x00}, // real pi pi  
    {0x050f, &op_real,	 15,   0, 255, 0xff, 0x02, 0x00, 0x00}, // real status a  
    {0x051f, &op_real,	 15,   1, 255, 0xff, 0x02, 0x00, 0x00}, // real status b  
    {0x052f, &op_real,	 15,   2, 255, 0xff, 0x02, 0x00, 0x00}, // real status c  
    {0x053f, &op_real,	 15,   3, 255, 0xff, 0x02, 0x00, 0x00}, // real status d  
    {0x054f, &op_real,	 15,   4, 255, 0xff, 0x02, 0x00, 0x00}, // real status e  
    {0x055f, &op_real,	 15,   5, 255, 0xff, 0x02, 0x00, 0x00}, // real status f  
    {0x056f, &op_real,	 15,   6, 255, 0xff, 0x02, 0x00, 0x00}, // real status g  
    {0x057f, &op_real,	 15,   7, 255, 0xff, 0x02, 0x00, 0x00}, // real status h  
    {0x058f, &op_real,	 15,   8, 255, 0xff, 0x02, 0x00, 0x00}, // real status pc  
    {0x059f, &op_real,	 15,   9, 255, 0xff, 0x02, 0x00, 0x00}, // real status ra  
    {0x05af, &op_real,	 15,  10, 255, 0xff, 0x02, 0x00, 0x00}, // real status sb  
    {0x05bf, &op_real,	 15,  11, 255, 0xff, 0x02, 0x00, 0x00}, // real status sp  
    {0x05cf, &op_real,	 15,  12, 255, 0xff, 0x02, 0x00, 0x00}, // real status db  
    {0x05df, &op_real,	 15,  13, 255, 0xff, 0x02, 0x00, 0x00}, // real status cb  
    {0x05ef, &op_real,	 15,  14, 255, 0xff, 0x02, 0x00, 0x00}, // real status pi  
    {0x05f0, &op_real,	  0, 255, 255, 0xff, 0x03, 0x04, 0x00}, // real.i a   
    {0x05f1, &op_real,	  1, 255, 255, 0xff, 0x03, 0x04, 0x00}, // real.i b   
    {0x05f2, &op_real,	  2, 255, 255, 0xff, 0x03, 0x04, 0x00}, // real.i c   
    {0x05f3, &op_real,	  3, 255, 255, 0xff, 0x03, 0x04, 0x00}, // real.i d   
    {0x05f4, &op_real,	  4, 255, 255, 0xff, 0x03, 0x04, 0x00}, // real.i e   
    {0x05f5, &op_real,	  5, 255, 255, 0xff, 0x03, 0x04, 0x00}, // real.i f   
    {0x05f6, &op_real,	  6, 255, 255, 0xff, 0x03, 0x04, 0x00}, // real.i g   
    {0x05f7, &op_real,	  7, 255, 255, 0xff, 0x03, 0x04, 0x00}, // real.i h   
    {0x05f8, &op_real,	  8, 255, 255, 0xff, 0x03, 0x04, 0x00}, // real.i pc   
    {0x05f9, &op_real,	  9, 255, 255, 0xff, 0x03, 0x04, 0x00}, // real.i ra   
    {0x05fa, &op_real,	 10, 255, 255, 0xff, 0x03, 0x04, 0x00}, // real.i sb   
    {0x05fb, &op_real,	 11, 255, 255, 0xff, 0x03, 0x04, 0x00}, // real.i sp   
    {0x05fc, &op_real,	 12, 255, 255, 0xff, 0x03, 0x04, 0x00}, // real.i db   
    {0x05fd, &op_real,	 13, 255, 255, 0xff, 0x03, 0x04, 0x00}, // real.i cb   
    {0x05fe, &op_real,	 14, 255, 255, 0xff, 0x03, 0x04, 0x00}, // real.i pi   
    {0x05ff, &op_real,	 15, 255, 255, 0xff, 0x03, 0x04, 0x00}, // real.i status   
    {0x0600, &op_unreal,  0,   0, 255, 0xff, 0x02, 0x00, 0x00}, // unreal a a  
    {0x0610, &op_unreal,  0,   1, 255, 0xff, 0x02, 0x00, 0x00}, // unreal a b  
    {0x0620, &op_unreal,  0,   2, 255, 0xff, 0x02, 0x00, 0x00}, // unreal a c  
    {0x0630, &op_unreal,  0,   3, 255, 0xff, 0x02, 0x00, 0x00}, // unreal a d  
    {0x0640, &op_unreal,  0,   4, 255, 0xff, 0x02, 0x00, 0x00}, // unreal a e  
    {0x0650, &op_unreal,  0,   5, 255, 0xff, 0x02, 0x00, 0x00}, // unreal a f  
    {0x0660, &op_unreal,  0,   6, 255, 0xff, 0x02, 0x00, 0x00}, // unreal a g  
    {0x0670, &op_unreal,  0,   7, 255, 0xff, 0x02, 0x00, 0x00}, // unreal a h  
    {0x0680, &op_unreal,  0,   8, 255, 0xff, 0x02, 0x00, 0x00}, // unreal a pc  
    {0x0690, &op_unreal,  0,   9, 255, 0xff, 0x02, 0x00, 0x00}, // unreal a ra  
    {0x06a0, &op_unreal,  0,  10, 255, 0xff, 0x02, 0x00, 0x00}, // unreal a sb  
    {0x06b0, &op_unreal,  0,  11, 255, 0xff, 0x02, 0x00, 0x00}, // unreal a sp  
    {0x06c0, &op_unreal,  0,  12, 255, 0xff, 0x02, 0x00, 0x00}, // unreal a db  
    {0x06d0, &op_unreal,  0,  13, 255, 0xff, 0x02, 0x00, 0x00}, // unreal a cb  
    {0x06e0, &op_unreal,  0,  14, 255, 0xff, 0x02, 0x00, 0x00}, // unreal a pi  
    {0x0601, &op_unreal,  1,   0, 255, 0xff, 0x02, 0x00, 0x00}, // unreal b a  
    {0x0611, &op_unreal,  1,   1, 255, 0xff, 0x02, 0x00, 0x00}, // unreal b b  
    {0x0621, &op_unreal,  1,   2, 255, 0xff, 0x02, 0x00, 0x00}, // unreal b c  
    {0x0631, &op_unreal,  1,   3, 255, 0xff, 0x02, 0x00, 0x00}, // unreal b d  
    {0x0641, &op_unreal,  1,   4, 255, 0xff, 0x02, 0x00, 0x00}, // unreal b e  
    {0x0651, &op_unreal,  1,   5, 255, 0xff, 0x02, 0x00, 0x00}, // unreal b f  
    {0x0661, &op_unreal,  1,   6, 255, 0xff, 0x02, 0x00, 0x00}, // unreal b g  
    {0x0671, &op_unreal,  1,   7, 255, 0xff, 0x02, 0x00, 0x00}, // unreal b h  
    {0x0681, &op_unreal,  1,   8, 255, 0xff, 0x02, 0x00, 0x00}, // unreal b pc  
    {0x0691, &op_unreal,  1,   9, 255, 0xff, 0x02, 0x00, 0x00}, // unreal b ra  
    {0x06a1, &op_unreal,  1,  10, 255, 0xff, 0x02, 0x00, 0x00}, // unreal b sb  
    {0x06b1, &op_unreal,  1,  11, 255, 0xff, 0x02, 0x00, 0x00}, // unreal b sp  
    {0x06c1, &op_unreal,  1,  12, 255, 0xff, 0x02, 0x00, 0x00}, // unreal b db  
    {0x06d1, &op_unreal,  1,  13, 255, 0xff, 0x02, 0x00, 0x00}, // unreal b cb  
    {0x06e1, &op_unreal,  1,  14, 255, 0xff, 0x02, 0x00, 0x00}, // unreal b pi  
    {0x0602, &op_unreal,  2,   0, 255, 0xff, 0x02, 0x00, 0x00}, // unreal c a  
    {0x0612, &op_unreal,  2,   1, 255, 0xff, 0x02, 0x00, 0x00}, // unreal c b  
    {0x0622, &op_unreal,  2,   2, 255, 0xff, 0x02, 0x00, 0x00}, // unreal c c  
    {0x0632, &op_unreal,  2,   3, 255, 0xff, 0x02, 0x00, 0x00}, // unreal c d  
    {0x0642, &op_unreal,  2,   4, 255, 0xff, 0x02, 0x00, 0x00}, // unreal c e  
    {0x0652, &op_unreal,  2,   5, 255, 0xff, 0x02, 0x00, 0x00}, // unreal c f  
    {0x0662, &op_unreal,  2,   6, 255, 0xff, 0x02, 0x00, 0x00}, // unreal c g  
    {0x0672, &op_unreal,  2,   7, 255, 0xff, 0x02, 0x00, 0x00}, // unreal c h  
    {0x0682, &op_unreal,  2,   8, 255, 0xff, 0x02, 0x00, 0x00}, // unreal c pc  
    {0x0692, &op_unreal,  2,   9, 255, 0xff, 0x02, 0x00, 0x00}, // unreal c ra  
    {0x06a2, &op_unreal,  2,  10, 255, 0xff, 0x02, 0x00, 0x00}, // unreal c sb  
    {0x06b2, &op_unreal,  2,  11, 255, 0xff, 0x02, 0x00, 0x00}, // unreal c sp  
    {0x06c2, &op_unreal,  2,  12, 255, 0xff, 0x02, 0x00, 0x00}, // unreal c db  
    {0x06d2, &op_unreal,  2,  13, 255, 0xff, 0x02, 0x00, 0x00}, // unreal c cb  
    {0x06e2, &op_unreal,  2,  14, 255, 0xff, 0x02, 0x00, 0x00}, // unreal c pi  
    {0x0603, &op_unreal,  3,   0, 255, 0xff, 0x02, 0x00, 0x00}, // unreal d a  
    {0x0613, &op_unreal,  3,   1, 255, 0xff, 0x02, 0x00, 0x00}, // unreal d b  
    {0x0623, &op_unreal,  3,   2, 255, 0xff, 0x02, 0x00, 0x00}, // unreal d c  
    {0x0633, &op_unreal,  3,   3, 255, 0xff, 0x02, 0x00, 0x00}, // unreal d d  
    {0x0643, &op_unreal,  3,   4, 255, 0xff, 0x02, 0x00, 0x00}, // unreal d e  
    {0x0653, &op_unreal,  3,   5, 255, 0xff, 0x02, 0x00, 0x00}, // unreal d f  
    {0x0663, &op_unreal,  3,   6, 255, 0xff, 0x02, 0x00, 0x00}, // unreal d g  
    {0x0673, &op_unreal,  3,   7, 255, 0xff, 0x02, 0x00, 0x00}, // unreal d h  
    {0x0683, &op_unreal,  3,   8, 255, 0xff, 0x02, 0x00, 0x00}, // unreal d pc  
    {0x0693, &op_unreal,  3,   9, 255, 0xff, 0x02, 0x00, 0x00}, // unreal d ra  
    {0x06a3, &op_unreal,  3,  10, 255, 0xff, 0x02, 0x00, 0x00}, // unreal d sb  
    {0x06b3, &op_unreal,  3,  11, 255, 0xff, 0x02, 0x00, 0x00}, // unreal d sp  
    {0x06c3, &op_unreal,  3,  12, 255, 0xff, 0x02, 0x00, 0x00}, // unreal d db  
    {0x06d3, &op_unreal,  3,  13, 255, 0xff, 0x02, 0x00, 0x00}, // unreal d cb  
    {0x06e3, &op_unreal,  3,  14, 255, 0xff, 0x02, 0x00, 0x00}, // unreal d pi  
    {0x0604, &op_unreal,  4,   0, 255, 0xff, 0x02, 0x00, 0x00}, // unreal e a  
    {0x0614, &op_unreal,  4,   1, 255, 0xff, 0x02, 0x00, 0x00}, // unreal e b  
    {0x0624, &op_unreal,  4,   2, 255, 0xff, 0x02, 0x00, 0x00}, // unreal e c  
    {0x0634, &op_unreal,  4,   3, 255, 0xff, 0x02, 0x00, 0x00}, // unreal e d  
    {0x0644, &op_unreal,  4,   4, 255, 0xff, 0x02, 0x00, 0x00}, // unreal e e  
    {0x0654, &op_unreal,  4,   5, 255, 0xff, 0x02, 0x00, 0x00}, // unreal e f  
    {0x0664, &op_unreal,  4,   6, 255, 0xff, 0x02, 0x00, 0x00}, // unreal e g  
    {0x0674, &op_unreal,  4,   7, 255, 0xff, 0x02, 0x00, 0x00}, // unreal e h  
    {0x0684, &op_unreal,  4,   8, 255, 0xff, 0x02, 0x00, 0x00}, // unreal e pc  
    {0x0694, &op_unreal,  4,   9, 255, 0xff, 0x02, 0x00, 0x00}, // unreal e ra  
    {0x06a4, &op_unreal,  4,  10, 255, 0xff, 0x02, 0x00, 0x00}, // unreal e sb  
    {0x06b4, &op_unreal,  4,  11, 255, 0xff, 0x02, 0x00, 0x00}, // unreal e sp  
    {0x06c4, &op_unreal,  4,  12, 255, 0xff, 0x02, 0x00, 0x00}, // unreal e db  
    {0x06d4, &op_unreal,  4,  13, 255, 0xff, 0x02, 0x00, 0x00}, // unreal e cb  
    {0x06e4, &op_unreal,  4,  14, 255, 0xff, 0x02, 0x00, 0x00}, // unreal e pi  
    {0x0605, &op_unreal,  5,   0, 255, 0xff, 0x02, 0x00, 0x00}, // unreal f a  
    {0x0615, &op_unreal,  5,   1, 255, 0xff, 0x02, 0x00, 0x00}, // unreal f b  
    {0x0625, &op_unreal,  5,   2, 255, 0xff, 0x02, 0x00, 0x00}, // unreal f c  
    {0x0635, &op_unreal,  5,   3, 255, 0xff, 0x02, 0x00, 0x00}, // unreal f d  
    {0x0645, &op_unreal,  5,   4, 255, 0xff, 0x02, 0x00, 0x00}, // unreal f e  
    {0x0655, &op_unreal,  5,   5, 255, 0xff, 0x02, 0x00, 0x00}, // unreal f f  
    {0x0665, &op_unreal,  5,   6, 255, 0xff, 0x02, 0x00, 0x00}, // unreal f g  
    {0x0675, &op_unreal,  5,   7, 255, 0xff, 0x02, 0x00, 0x00}, // unreal f h  
    {0x0685, &op_unreal,  5,   8, 255, 0xff, 0x02, 0x00, 0x00}, // unreal f pc  
    {0x0695, &op_unreal,  5,   9, 255, 0xff, 0x02, 0x00, 0x00}, // unreal f ra  
    {0x06a5, &op_unreal,  5,  10, 255, 0xff, 0x02, 0x00, 0x00}, // unreal f sb  
    {0x06b5, &op_unreal,  5,  11, 255, 0xff, 0x02, 0x00, 0x00}, // unreal f sp  
    {0x06c5, &op_unreal,  5,  12, 255, 0xff, 0x02, 0x00, 0x00}, // unreal f db  
    {0x06d5, &op_unreal,  5,  13, 255, 0xff, 0x02, 0x00, 0x00}, // unreal f cb  
    {0x06e5, &op_unreal,  5,  14, 255, 0xff, 0x02, 0x00, 0x00}, // unreal f pi  
    {0x0606, &op_unreal,  6,   0, 255, 0xff, 0x02, 0x00, 0x00}, // unreal g a  
    {0x0616, &op_unreal,  6,   1, 255, 0xff, 0x02, 0x00, 0x00}, // unreal g b  
    {0x0626, &op_unreal,  6,   2, 255, 0xff, 0x02, 0x00, 0x00}, // unreal g c  
    {0x0636, &op_unreal,  6,   3, 255, 0xff, 0x02, 0x00, 0x00}, // unreal g d  
    {0x0646, &op_unreal,  6,   4, 255, 0xff, 0x02, 0x00, 0x00}, // unreal g e  
    {0x0656, &op_unreal,  6,   5, 255, 0xff, 0x02, 0x00, 0x00}, // unreal g f  
    {0x0666, &op_unreal,  6,   6, 255, 0xff, 0x02, 0x00, 0x00}, // unreal g g  
    {0x0676, &op_unreal,  6,   7, 255, 0xff, 0x02, 0x00, 0x00}, // unreal g h  
    {0x0686, &op_unreal,  6,   8, 255, 0xff, 0x02, 0x00, 0x00}, // unreal g pc  
    {0x0696, &op_unreal,  6,   9, 255, 0xff, 0x02, 0x00, 0x00}, // unreal g ra  
    {0x06a6, &op_unreal,  6,  10, 255, 0xff, 0x02, 0x00, 0x00}, // unreal g sb  
    {0x06b6, &op_unreal,  6,  11, 255, 0xff, 0x02, 0x00, 0x00}, // unreal g sp  
    {0x06c6, &op_unreal,  6,  12, 255, 0xff, 0x02, 0x00, 0x00}, // unreal g db  
    {0x06d6, &op_unreal,  6,  13, 255, 0xff, 0x02, 0x00, 0x00}, // unreal g cb  
    {0x06e6, &op_unreal,  6,  14, 255, 0xff, 0x02, 0x00, 0x00}, // unreal g pi  
    {0x0607, &op_unreal,  7,   0, 255, 0xff, 0x02, 0x00, 0x00}, // unreal h a  
    {0x0617, &op_unreal,  7,   1, 255, 0xff, 0x02, 0x00, 0x00}, // unreal h b  
    {0x0627, &op_unreal,  7,   2, 255, 0xff, 0x02, 0x00, 0x00}, // unreal h c  
    {0x0637, &op_unreal,  7,   3, 255, 0xff, 0x02, 0x00, 0x00}, // unreal h d  
    {0x0647, &op_unreal,  7,   4, 255, 0xff, 0x02, 0x00, 0x00}, // unreal h e  
    {0x0657, &op_unreal,  7,   5, 255, 0xff, 0x02, 0x00, 0x00}, // unreal h f  
    {0x0667, &op_unreal,  7,   6, 255, 0xff, 0x02, 0x00, 0x00}, // unreal h g  
    {0x0677, &op_unreal,  7,   7, 255, 0xff, 0x02, 0x00, 0x00}, // unreal h h  
    {0x0687, &op_unreal,  7,   8, 255, 0xff, 0x02, 0x00, 0x00}, // unreal h pc  
    {0x0697, &op_unreal,  7,   9, 255, 0xff, 0x02, 0x00, 0x00}, // unreal h ra  
    {0x06a7, &op_unreal,  7,  10, 255, 0xff, 0x02, 0x00, 0x00}, // unreal h sb  
    {0x06b7, &op_unreal,  7,  11, 255, 0xff, 0x02, 0x00, 0x00}, // unreal h sp  
    {0x06c7, &op_unreal,  7,  12, 255, 0xff, 0x02, 0x00, 0x00}, // unreal h db  
    {0x06d7, &op_unreal,  7,  13, 255, 0xff, 0x02, 0x00, 0x00}, // unreal h cb  
    {0x06e7, &op_unreal,  7,  14, 255, 0xff, 0x02, 0x00, 0x00}, // unreal h pi  
    {0x0608, &op_unreal,  8,   0, 255, 0xff, 0x02, 0x00, 0x00}, // unreal pc a  
    {0x0618, &op_unreal,  8,   1, 255, 0xff, 0x02, 0x00, 0x00}, // unreal pc b  
    {0x0628, &op_unreal,  8,   2, 255, 0xff, 0x02, 0x00, 0x00}, // unreal pc c  
    {0x0638, &op_unreal,  8,   3, 255, 0xff, 0x02, 0x00, 0x00}, // unreal pc d  
    {0x0648, &op_unreal,  8,   4, 255, 0xff, 0x02, 0x00, 0x00}, // unreal pc e  
    {0x0658, &op_unreal,  8,   5, 255, 0xff, 0x02, 0x00, 0x00}, // unreal pc f  
    {0x0668, &op_unreal,  8,   6, 255, 0xff, 0x02, 0x00, 0x00}, // unreal pc g  
    {0x0678, &op_unreal,  8,   7, 255, 0xff, 0x02, 0x00, 0x00}, // unreal pc h  
    {0x0688, &op_unreal,  8,   8, 255, 0xff, 0x02, 0x00, 0x00}, // unreal pc pc  
    {0x0698, &op_unreal,  8,   9, 255, 0xff, 0x02, 0x00, 0x00}, // unreal pc ra  
    {0x06a8, &op_unreal,  8,  10, 255, 0xff, 0x02, 0x00, 0x00}, // unreal pc sb  
    {0x06b8, &op_unreal,  8,  11, 255, 0xff, 0x02, 0x00, 0x00}, // unreal pc sp  
    {0x06c8, &op_unreal,  8,  12, 255, 0xff, 0x02, 0x00, 0x00}, // unreal pc db  
    {0x06d8, &op_unreal,  8,  13, 255, 0xff, 0x02, 0x00, 0x00}, // unreal pc cb  
    {0x06e8, &op_unreal,  8,  14, 255, 0xff, 0x02, 0x00, 0x00}, // unreal pc pi  
    {0x0609, &op_unreal,  9,   0, 255, 0xff, 0x02, 0x00, 0x00}, // unreal ra a  
    {0x0619, &op_unreal,  9,   1, 255, 0xff, 0x02, 0x00, 0x00}, // unreal ra b  
    {0x0629, &op_unreal,  9,   2, 255, 0xff, 0x02, 0x00, 0x00}, // unreal ra c  
    {0x0639, &op_unreal,  9,   3, 255, 0xff, 0x02, 0x00, 0x00}, // unreal ra d  
    {0x0649, &op_unreal,  9,   4, 255, 0xff, 0x02, 0x00, 0x00}, // unreal ra e  
    {0x0659, &op_unreal,  9,   5, 255, 0xff, 0x02, 0x00, 0x00}, // unreal ra f  
    {0x0669, &op_unreal,  9,   6, 255, 0xff, 0x02, 0x00, 0x00}, // unreal ra g  
    {0x0679, &op_unreal,  9,   7, 255, 0xff, 0x02, 0x00, 0x00}, // unreal ra h  
    {0x0689, &op_unreal,  9,   8, 255, 0xff, 0x02, 0x00, 0x00}, // unreal ra pc  
    {0x0699, &op_unreal,  9,   9, 255, 0xff, 0x02, 0x00, 0x00}, // unreal ra ra  
    {0x06a9, &op_unreal,  9,  10, 255, 0xff, 0x02, 0x00, 0x00}, // unreal ra sb  
    {0x06b9, &op_unreal,  9,  11, 255, 0xff, 0x02, 0x00, 0x00}, // unreal ra sp  
    {0x06c9, &op_unreal,  9,  12, 255, 0xff, 0x02, 0x00, 0x00}, // unreal ra db  
    {0x06d9, &op_unreal,  9,  13, 255, 0xff, 0x02, 0x00, 0x00}, // unreal ra cb  
    {0x06e9, &op_unreal,  9,  14, 255, 0xff, 0x02, 0x00, 0x00}, // unreal ra pi  
    {0x060a, &op_unreal, 10,   0, 255, 0xff, 0x02, 0x00, 0x00}, // unreal sb a  
    {0x061a, &op_unreal, 10,   1, 255, 0xff, 0x02, 0x00, 0x00}, // unreal sb b  
    {0x062a, &op_unreal, 10,   2, 255, 0xff, 0x02, 0x00, 0x00}, // unreal sb c  
    {0x063a, &op_unreal, 10,   3, 255, 0xff, 0x02, 0x00, 0x00}, // unreal sb d  
    {0x064a, &op_unreal, 10,   4, 255, 0xff, 0x02, 0x00, 0x00}, // unreal sb e  
    {0x065a, &op_unreal, 10,   5, 255, 0xff, 0x02, 0x00, 0x00}, // unreal sb f  
    {0x066a, &op_unreal, 10,   6, 255, 0xff, 0x02, 0x00, 0x00}, // unreal sb g  
    {0x067a, &op_unreal, 10,   7, 255, 0xff, 0x02, 0x00, 0x00}, // unreal sb h  
    {0x068a, &op_unreal, 10,   8, 255, 0xff, 0x02, 0x00, 0x00}, // unreal sb pc  
    {0x069a, &op_unreal, 10,   9, 255, 0xff, 0x02, 0x00, 0x00}, // unreal sb ra  
    {0x06aa, &op_unreal, 10,  10, 255, 0xff, 0x02, 0x00, 0x00}, // unreal sb sb  
    {0x06ba, &op_unreal, 10,  11, 255, 0xff, 0x02, 0x00, 0x00}, // unreal sb sp  
    {0x06ca, &op_unreal, 10,  12, 255, 0xff, 0x02, 0x00, 0x00}, // unreal sb db  
    {0x06da, &op_unreal, 10,  13, 255, 0xff, 0x02, 0x00, 0x00}, // unreal sb cb  
    {0x06ea, &op_unreal, 10,  14, 255, 0xff, 0x02, 0x00, 0x00}, // unreal sb pi  
    {0x060b, &op_unreal, 11,   0, 255, 0xff, 0x02, 0x00, 0x00}, // unreal sp a  
    {0x061b, &op_unreal, 11,   1, 255, 0xff, 0x02, 0x00, 0x00}, // unreal sp b  
    {0x062b, &op_unreal, 11,   2, 255, 0xff, 0x02, 0x00, 0x00}, // unreal sp c  
    {0x063b, &op_unreal, 11,   3, 255, 0xff, 0x02, 0x00, 0x00}, // unreal sp d  
    {0x064b, &op_unreal, 11,   4, 255, 0xff, 0x02, 0x00, 0x00}, // unreal sp e  
    {0x065b, &op_unreal, 11,   5, 255, 0xff, 0x02, 0x00, 0x00}, // unreal sp f  
    {0x066b, &op_unreal, 11,   6, 255, 0xff, 0x02, 0x00, 0x00}, // unreal sp g  
    {0x067b, &op_unreal, 11,   7, 255, 0xff, 0x02, 0x00, 0x00}, // unreal sp h  
    {0x068b, &op_unreal, 11,   8, 255, 0xff, 0x02, 0x00, 0x00}, // unreal sp pc  
    {0x069b, &op_unreal, 11,   9, 255, 0xff, 0x02, 0x00, 0x00}, // unreal sp ra  
    {0x06ab, &op_unreal, 11,  10, 255, 0xff, 0x02, 0x00, 0x00}, // unreal sp sb  
    {0x06bb, &op_unreal, 11,  11, 255, 0xff, 0x02, 0x00, 0x00}, // unreal sp sp  
    {0x06cb, &op_unreal, 11,  12, 255, 0xff, 0x02, 0x00, 0x00}, // unreal sp db  
    {0x06db, &op_unreal, 11,  13, 255, 0xff, 0x02, 0x00, 0x00}, // unreal sp cb  
    {0x06eb, &op_unreal, 11,  14, 255, 0xff, 0x02, 0x00, 0x00}, // unreal sp pi  
    {0x060c, &op_unreal, 12,   0, 255, 0xff, 0x02, 0x00, 0x00}, // unreal db a  
    {0x061c, &op_unreal, 12,   1, 255, 0xff, 0x02, 0x00, 0x00}, // unreal db b  
    {0x062c, &op_unreal, 12,   2, 255, 0xff, 0x02, 0x00, 0x00}, // unreal db c  
    {0x063c, &op_unreal, 12,   3, 255, 0xff, 0x02, 0x00, 0x00}, // unreal db d  
    {0x064c, &op_unreal, 12,   4, 255, 0xff, 0x02, 0x00, 0x00}, // unreal db e  
    {0x065c, &op_unreal, 12,   5, 255, 0xff, 0x02, 0x00, 0x00}, // unreal db f  
    {0x066c, &op_unreal, 12,   6, 255, 0xff, 0x02, 0x00, 0x00}, // unreal db g  
    {0x067c, &op_unreal, 12,   7, 255, 0xff, 0x02, 0x00, 0x00}, // unreal db h  
    {0x068c, &op_unreal, 12,   8, 255, 0xff, 0x02, 0x00, 0x00}, // unreal db pc  
    {0x069c, &op_unreal, 12,   9, 255, 0xff, 0x02, 0x00, 0x00}, // unreal db ra  
    {0x06ac, &op_unreal, 12,  10, 255, 0xff, 0x02, 0x00, 0x00}, // unreal db sb  
    {0x06bc, &op_unreal, 12,  11, 255, 0xff, 0x02, 0x00, 0x00}, // unreal db sp  
    {0x06cc, &op_unreal, 12,  12, 255, 0xff, 0x02, 0x00, 0x00}, // unreal db db  
    {0x06dc, &op_unreal, 12,  13, 255, 0xff, 0x02, 0x00, 0x00}, // unreal db cb  
    {0x06ec, &op_unreal, 12,  14, 255, 0xff, 0x02, 0x00, 0x00}, // unreal db pi  
    {0x060d, &op_unreal, 13,   0, 255, 0xff, 0x02, 0x00, 0x00}, // unreal cb a  
    {0x061d, &op_unreal, 13,   1, 255, 0xff, 0x02, 0x00, 0x00}, // unreal cb b  
    {0x062d, &op_unreal, 13,   2, 255, 0xff, 0x02, 0x00, 0x00}, // unreal cb c  
    {0x063d, &op_unreal, 13,   3, 255, 0xff, 0x02, 0x00, 0x00}, // unreal cb d  
    {0x064d, &op_unreal, 13,   4, 255, 0xff, 0x02, 0x00, 0x00}, // unreal cb e  
    {0x065d, &op_unreal, 13,   5, 255, 0xff, 0x02, 0x00, 0x00}, // unreal cb f  
    {0x066d, &op_unreal, 13,   6, 255, 0xff, 0x02, 0x00, 0x00}, // unreal cb g  
    {0x067d, &op_unreal, 13,   7, 255, 0xff, 0x02, 0x00, 0x00}, // unreal cb h  
    {0x068d, &op_unreal, 13,   8, 255, 0xff, 0x02, 0x00, 0x00}, // unreal cb pc  
    {0x069d, &op_unreal, 13,   9, 255, 0xff, 0x02, 0x00, 0x00}, // unreal cb ra  
    {0x06ad, &op_unreal, 13,  10, 255, 0xff, 0x02, 0x00, 0x00}, // unreal cb sb  
    {0x06bd, &op_unreal, 13,  11, 255, 0xff, 0x02, 0x00, 0x00}, // unreal cb sp  
    {0x06cd, &op_unreal, 13,  12, 255, 0xff, 0x02, 0x00, 0x00}, // unreal cb db  
    {0x06dd, &op_unreal, 13,  13, 255, 0xff, 0x02, 0x00, 0x00}, // unreal cb cb  
    {0x06ed, &op_unreal, 13,  14, 255, 0xff, 0x02, 0x00, 0x00}, // unreal cb pi  
    {0x060e, &op_unreal, 14,   0, 255, 0xff, 0x02, 0x00, 0x00}, // unreal pi a  
    {0x061e, &op_unreal, 14,   1, 255, 0xff, 0x02, 0x00, 0x00}, // unreal pi b  
    {0x062e, &op_unreal, 14,   2, 255, 0xff, 0x02, 0x00, 0x00}, // unreal pi c  
    {0x063e, &op_unreal, 14,   3, 255, 0xff, 0x02, 0x00, 0x00}, // unreal pi d  
    {0x064e, &op_unreal, 14,   4, 255, 0xff, 0x02, 0x00, 0x00}, // unreal pi e  
    {0x065e, &op_unreal, 14,   5, 255, 0xff, 0x02, 0x00, 0x00}, // unreal pi f  
    {0x066e, &op_unreal, 14,   6, 255, 0xff, 0x02, 0x00, 0x00}, // unreal pi g  
    {0x067e, &op_unreal, 14,   7, 255, 0xff, 0x02, 0x00, 0x00}, // unreal pi h  
    {0x068e, &op_unreal, 14,   8, 255, 0xff, 0x02, 0x00, 0x00}, // unreal pi pc  
    {0x069e, &op_unreal, 14,   9, 255, 0xff, 0x02, 0x00, 0x00}, // unreal pi ra  
    {0x06ae, &op_unreal, 14,  10, 255, 0xff, 0x02, 0x00, 0x00}, // unreal pi sb  
    {0x06be, &op_unreal, 14,  11, 255, 0xff, 0x02, 0x00, 0x00}, // unreal pi sp  
    {0x06ce, &op_unreal, 14,  12, 255, 0xff, 0x02, 0x00, 0x00}, // unreal pi db  
    {0x06de, &op_unreal, 14,  13, 255, 0xff, 0x02, 0x00, 0x00}, // unreal pi cb  
    {0x06ee, &op_unreal, 14,  14, 255, 0xff, 0x02, 0x00, 0x00}, // unreal pi pi  
    {0x060f, &op_unreal, 15,   0, 255, 0xff, 0x02, 0x00, 0x00}, // unreal status a  
    {0x061f, &op_unreal, 15,   1, 255, 0xff, 0x02, 0x00, 0x00}, // unreal status b  
    {0x062f, &op_unreal, 15,   2, 255, 0xff, 0x02, 0x00, 0x00}, // unreal status c  
    {0x063f, &op_unreal, 15,   3, 255, 0xff, 0x02, 0x00, 0x00}, // unreal status d  
    {0x064f, &op_unreal, 15,   4, 255, 0xff, 0x02, 0x00, 0x00}, // unreal status e  
    {0x065f, &op_unreal, 15,   5, 255, 0xff, 0x02, 0x00, 0x00}, // unreal status f  
    {0x066f, &op_unreal, 15,   6, 255, 0xff, 0x02, 0x00, 0x00}, // unreal status g  
    {0x067f, &op_unreal, 15,   7, 255, 0xff, 0x02, 0x00, 0x00}, // unreal status h  
    {0x068f, &op_unreal, 15,   8, 255, 0xff, 0x02, 0x00, 0x00}, // unreal status pc  
    {0x069f, &op_unreal, 15,   9, 255, 0xff, 0x02, 0x00, 0x00}, // unreal status ra  
    {0x06af, &op_unreal, 15,  10, 255, 0xff, 0x02, 0x00, 0x00}, // unreal status sb  
    {0x06bf, &op_unreal, 15,  11, 255, 0xff, 0x02, 0x00, 0x00}, // unreal status sp  
    {0x06cf, &op_unreal, 15,  12, 255, 0xff, 0x02, 0x00, 0x00}, // unreal status db  
    {0x06df, &op_unreal, 15,  13, 255, 0xff, 0x02, 0x00, 0x00}, // unreal status cb  
    {0x06ef, &op_unreal, 15,  14, 255, 0xff, 0x02, 0x00, 0x00}, // unreal status pi  
    {0x06f0, &op_unreal,  0, 255, 255, 0xff, 0x03, 0x04, 0x00}, // unreal.i a   
    {0x06f1, &op_unreal,  1, 255, 255, 0xff, 0x03, 0x04, 0x00}, // unreal.i b   
    {0x06f2, &op_unreal,  2, 255, 255, 0xff, 0x03, 0x04, 0x00}, // unreal.i c   
    {0x06f3, &op_unreal,  3, 255, 255, 0xff, 0x03, 0x04, 0x00}, // unreal.i d   
    {0x06f4, &op_unreal,  4, 255, 255, 0xff, 0x03, 0x04, 0x00}, // unreal.i e   
    {0x06f5, &op_unreal,  5, 255, 255, 0xff, 0x03, 0x04, 0x00}, // unreal.i f   
    {0x06f6, &op_unreal,  6, 255, 255, 0xff, 0x03, 0x04, 0x00}, // unreal.i g   
    {0x06f7, &op_unreal,  7, 255, 255, 0xff, 0x03, 0x04, 0x00}, // unreal.i h   
    {0x06f8, &op_unreal,  8, 255, 255, 0xff, 0x03, 0x04, 0x00}, // unreal.i pc   
    {0x06f9, &op_unreal,  9, 255, 255, 0xff, 0x03, 0x04, 0x00}, // unreal.i ra   
    {0x06fa, &op_unreal, 10, 255, 255, 0xff, 0x03, 0x04, 0x00}, // unreal.i sb   
    {0x06fb, &op_unreal, 11, 255, 255, 0xff, 0x03, 0x04, 0x00}, // unreal.i sp   
    {0x06fc, &op_unreal, 12, 255, 255, 0xff, 0x03, 0x04, 0x00}, // unreal.i db   
    {0x06fd, &op_unreal, 13, 255, 255, 0xff, 0x03, 0x04, 0x00}, // unreal.i cb   
    {0x06fe, &op_unreal, 14, 255, 255, 0xff, 0x03, 0x04, 0x00}, // unreal.i pi   
    {0x06ff, &op_unreal, 15, 255, 255, 0xff, 0x03, 0x04, 0x00}, // unreal.i status   
    {0x0830, &op_store_a,  0, 255, 255, 0xff, 0x00, 0x00, 0x00}, // store.a a   
    {0x0831, &op_store_a,  1, 255, 255, 0xff, 0x00, 0x00, 0x00}, // store.a b   
    {0x0832, &op_store_a,  2, 255, 255, 0xff, 0x00, 0x00, 0x00}, // store.a c   
    {0x0833, &op_store_a,  3, 255, 255, 0xff, 0x00, 0x00, 0x00}, // store.a d   
    {0x0834, &op_store_a,  4, 255, 255, 0xff, 0x00, 0x00, 0x00}, // store.a e   
    {0x0835, &op_store_a,  5, 255, 255, 0xff, 0x00, 0x00, 0x00}, // store.a f   
    {0x0836, &op_store_a,  6, 255, 255, 0xff, 0x00, 0x00, 0x00}, // store.a g   
    {0x0837, &op_store_a,  7, 255, 255, 0xff, 0x00, 0x00, 0x00}, // store.a h   
    {0x0838, &op_store_a,  8, 255, 255, 0xff, 0x00, 0x00, 0x00}, // store.a pc   
    {0x0839, &op_store_a,  9, 255, 255, 0xff, 0x00, 0x00, 0x00}, // store.a ra   
    {0x083a, &op_store_a, 10, 255, 255, 0xff, 0x00, 0x00, 0x00}, // store.a sb   
    {0x083b, &op_store_a, 11, 255, 255, 0xff, 0x00, 0x00, 0x00}, // store.a sp   
    {0x083c, &op_store_a, 12, 255, 255, 0xff, 0x00, 0x00, 0x00}, // store.a db   
    {0x083d, &op_store_a, 13, 255, 255, 0xff, 0x00, 0x00, 0x00}, // store.a cb   
    {0x083e, &op_store_a, 14, 255, 255, 0xff, 0x00, 0x00, 0x00}, // store.a pi   
    {0x083f, &op_store_a,  8, 255, 255, 0xff, 0x00, 0x04, 0x00}, // store.a <literal>   
    {0x0810, &op_store_h,  0, 255, 255, 0xff, 0x00, 0x00, 0x00}, // store.h a   
    {0x0811, &op_store_h,  1, 255, 255, 0xff, 0x00, 0x00, 0x00}, // store.h b   
    {0x0812, &op_store_h,  2, 255, 255, 0xff, 0x00, 0x00, 0x00}, // store.h c   
    {0x0813, &op_store_h,  3, 255, 255, 0xff, 0x00, 0x00, 0x00}, // store.h d   
    {0x0814, &op_store_h,  4, 255, 255, 0xff, 0x00, 0x00, 0x00}, // store.h e   
    {0x0815, &op_store_h,  5, 255, 255, 0xff, 0x00, 0x00, 0x00}, // store.h f   
    {0x0816, &op_store_h,  6, 255, 255, 0xff, 0x00, 0x00, 0x00}, // store.h g   
    {0x0817, &op_store_h,  7, 255, 255, 0xff, 0x00, 0x00, 0x00}, // store.h h   
    {0x0818, &op_store_h,  8, 255, 255, 0xff, 0x00, 0x00, 0x00}, // store.h pc   
    {0x0819, &op_store_h,  9, 255, 255, 0xff, 0x00, 0x00, 0x00}, // store.h ra   
    {0x081a, &op_store_h, 10, 255, 255, 0xff, 0x00, 0x00, 0x00}, // store.h sb   
    {0x081b, &op_store_h, 11, 255, 255, 0xff, 0x00, 0x00, 0x00}, // store.h sp   
    {0x081c, &op_store_h, 12, 255, 255, 0xff, 0x00, 0x00, 0x00}, // store.h db   
    {0x081d, &op_store_h, 13, 255, 255, 0xff, 0x00, 0x00, 0x00}, // store.h cb   
    {0x081e, &op_store_h, 14, 255, 255, 0xff, 0x00, 0x00, 0x00}, // store.h pi   
    {0x081f, &op_store_h,  8, 255, 255, 0xff, 0x00, 0x04, 0x00}, // store.h <literal>   
    {0x0b00, &op_cdr,	  0,   0, 255, 0xff, 0x02, 0x00, 0x00}, // cdr a a  
    {0x0b10, &op_cdr,	  0,   1, 255, 0xff, 0x02, 0x00, 0x00}, // cdr a b  
    {0x0b20, &op_cdr,	  0,   2, 255, 0xff, 0x02, 0x00, 0x00}, // cdr a c  
    {0x0b30, &op_cdr,	  0,   3, 255, 0xff, 0x02, 0x00, 0x00}, // cdr a d  
    {0x0b40, &op_cdr,	  0,   4, 255, 0xff, 0x02, 0x00, 0x00}, // cdr a e  
    {0x0b50, &op_cdr,	  0,   5, 255, 0xff, 0x02, 0x00, 0x00}, // cdr a f  
    {0x0b60, &op_cdr,	  0,   6, 255, 0xff, 0x02, 0x00, 0x00}, // cdr a g  
    {0x0b70, &op_cdr,	  0,   7, 255, 0xff, 0x02, 0x00, 0x00}, // cdr a h  
    {0x0b80, &op_cdr,	  0,   8, 255, 0xff, 0x02, 0x00, 0x00}, // cdr a pc  
    {0x0b90, &op_cdr,	  0,   9, 255, 0xff, 0x02, 0x00, 0x00}, // cdr a ra  
    {0x0ba0, &op_cdr,	  0,  10, 255, 0xff, 0x02, 0x00, 0x00}, // cdr a sb  
    {0x0bb0, &op_cdr,	  0,  11, 255, 0xff, 0x02, 0x00, 0x00}, // cdr a sp  
    {0x0bc0, &op_cdr,	  0,  12, 255, 0xff, 0x02, 0x00, 0x00}, // cdr a db  
    {0x0bd0, &op_cdr,	  0,  13, 255, 0xff, 0x02, 0x00, 0x00}, // cdr a cb  
    {0x0be0, &op_cdr,	  0,  14, 255, 0xff, 0x02, 0x00, 0x00}, // cdr a pi  
    {0x0bf0, &op_cdr,	  0,  15, 255, 0xff, 0x02, 0x00, 0x00}, // cdr a status  
    {0x0b01, &op_cdr,	  1,   0, 255, 0xff, 0x02, 0x00, 0x00}, // cdr b a  
    {0x0b11, &op_cdr,	  1,   1, 255, 0xff, 0x02, 0x00, 0x00}, // cdr b b  
    {0x0b21, &op_cdr,	  1,   2, 255, 0xff, 0x02, 0x00, 0x00}, // cdr b c  
    {0x0b31, &op_cdr,	  1,   3, 255, 0xff, 0x02, 0x00, 0x00}, // cdr b d  
    {0x0b41, &op_cdr,	  1,   4, 255, 0xff, 0x02, 0x00, 0x00}, // cdr b e  
    {0x0b51, &op_cdr,	  1,   5, 255, 0xff, 0x02, 0x00, 0x00}, // cdr b f  
    {0x0b61, &op_cdr,	  1,   6, 255, 0xff, 0x02, 0x00, 0x00}, // cdr b g  
    {0x0b71, &op_cdr,	  1,   7, 255, 0xff, 0x02, 0x00, 0x00}, // cdr b h  
    {0x0b81, &op_cdr,	  1,   8, 255, 0xff, 0x02, 0x00, 0x00}, // cdr b pc  
    {0x0b91, &op_cdr,	  1,   9, 255, 0xff, 0x02, 0x00, 0x00}, // cdr b ra  
    {0x0ba1, &op_cdr,	  1,  10, 255, 0xff, 0x02, 0x00, 0x00}, // cdr b sb  
    {0x0bb1, &op_cdr,	  1,  11, 255, 0xff, 0x02, 0x00, 0x00}, // cdr b sp  
    {0x0bc1, &op_cdr,	  1,  12, 255, 0xff, 0x02, 0x00, 0x00}, // cdr b db  
    {0x0bd1, &op_cdr,	  1,  13, 255, 0xff, 0x02, 0x00, 0x00}, // cdr b cb  
    {0x0be1, &op_cdr,	  1,  14, 255, 0xff, 0x02, 0x00, 0x00}, // cdr b pi  
    {0x0bf1, &op_cdr,	  1,  15, 255, 0xff, 0x02, 0x00, 0x00}, // cdr b status  
    {0x0b02, &op_cdr,	  2,   0, 255, 0xff, 0x02, 0x00, 0x00}, // cdr c a  
    {0x0b12, &op_cdr,	  2,   1, 255, 0xff, 0x02, 0x00, 0x00}, // cdr c b  
    {0x0b22, &op_cdr,	  2,   2, 255, 0xff, 0x02, 0x00, 0x00}, // cdr c c  
    {0x0b32, &op_cdr,	  2,   3, 255, 0xff, 0x02, 0x00, 0x00}, // cdr c d  
    {0x0b42, &op_cdr,	  2,   4, 255, 0xff, 0x02, 0x00, 0x00}, // cdr c e  
    {0x0b52, &op_cdr,	  2,   5, 255, 0xff, 0x02, 0x00, 0x00}, // cdr c f  
    {0x0b62, &op_cdr,	  2,   6, 255, 0xff, 0x02, 0x00, 0x00}, // cdr c g  
    {0x0b72, &op_cdr,	  2,   7, 255, 0xff, 0x02, 0x00, 0x00}, // cdr c h  
    {0x0b82, &op_cdr,	  2,   8, 255, 0xff, 0x02, 0x00, 0x00}, // cdr c pc  
    {0x0b92, &op_cdr,	  2,   9, 255, 0xff, 0x02, 0x00, 0x00}, // cdr c ra  
    {0x0ba2, &op_cdr,	  2,  10, 255, 0xff, 0x02, 0x00, 0x00}, // cdr c sb  
    {0x0bb2, &op_cdr,	  2,  11, 255, 0xff, 0x02, 0x00, 0x00}, // cdr c sp  
    {0x0bc2, &op_cdr,	  2,  12, 255, 0xff, 0x02, 0x00, 0x00}, // cdr c db  
    {0x0bd2, &op_cdr,	  2,  13, 255, 0xff, 0x02, 0x00, 0x00}, // cdr c cb  
    {0x0be2, &op_cdr,	  2,  14, 255, 0xff, 0x02, 0x00, 0x00}, // cdr c pi  
    {0x0bf2, &op_cdr,	  2,  15, 255, 0xff, 0x02, 0x00, 0x00}, // cdr c status  
    {0x0b03, &op_cdr,	  3,   0, 255, 0xff, 0x02, 0x00, 0x00}, // cdr d a  
    {0x0b13, &op_cdr,	  3,   1, 255, 0xff, 0x02, 0x00, 0x00}, // cdr d b  
    {0x0b23, &op_cdr,	  3,   2, 255, 0xff, 0x02, 0x00, 0x00}, // cdr d c  
    {0x0b33, &op_cdr,	  3,   3, 255, 0xff, 0x02, 0x00, 0x00}, // cdr d d  
    {0x0b43, &op_cdr,	  3,   4, 255, 0xff, 0x02, 0x00, 0x00}, // cdr d e  
    {0x0b53, &op_cdr,	  3,   5, 255, 0xff, 0x02, 0x00, 0x00}, // cdr d f  
    {0x0b63, &op_cdr,	  3,   6, 255, 0xff, 0x02, 0x00, 0x00}, // cdr d g  
    {0x0b73, &op_cdr,	  3,   7, 255, 0xff, 0x02, 0x00, 0x00}, // cdr d h  
    {0x0b83, &op_cdr,	  3,   8, 255, 0xff, 0x02, 0x00, 0x00}, // cdr d pc  
    {0x0b93, &op_cdr,	  3,   9, 255, 0xff, 0x02, 0x00, 0x00}, // cdr d ra  
    {0x0ba3, &op_cdr,	  3,  10, 255, 0xff, 0x02, 0x00, 0x00}, // cdr d sb  
    {0x0bb3, &op_cdr,	  3,  11, 255, 0xff, 0x02, 0x00, 0x00}, // cdr d sp  
    {0x0bc3, &op_cdr,	  3,  12, 255, 0xff, 0x02, 0x00, 0x00}, // cdr d db  
    {0x0bd3, &op_cdr,	  3,  13, 255, 0xff, 0x02, 0x00, 0x00}, // cdr d cb  
    {0x0be3, &op_cdr,	  3,  14, 255, 0xff, 0x02, 0x00, 0x00}, // cdr d pi  
    {0x0bf3, &op_cdr,	  3,  15, 255, 0xff, 0x02, 0x00, 0x00}, // cdr d status  
    {0x0b04, &op_cdr,	  4,   0, 255, 0xff, 0x02, 0x00, 0x00}, // cdr e a  
    {0x0b14, &op_cdr,	  4,   1, 255, 0xff, 0x02, 0x00, 0x00}, // cdr e b  
    {0x0b24, &op_cdr,	  4,   2, 255, 0xff, 0x02, 0x00, 0x00}, // cdr e c  
    {0x0b34, &op_cdr,	  4,   3, 255, 0xff, 0x02, 0x00, 0x00}, // cdr e d  
    {0x0b44, &op_cdr,	  4,   4, 255, 0xff, 0x02, 0x00, 0x00}, // cdr e e  
    {0x0b54, &op_cdr,	  4,   5, 255, 0xff, 0x02, 0x00, 0x00}, // cdr e f  
    {0x0b64, &op_cdr,	  4,   6, 255, 0xff, 0x02, 0x00, 0x00}, // cdr e g  
    {0x0b74, &op_cdr,	  4,   7, 255, 0xff, 0x02, 0x00, 0x00}, // cdr e h  
    {0x0b84, &op_cdr,	  4,   8, 255, 0xff, 0x02, 0x00, 0x00}, // cdr e pc  
    {0x0b94, &op_cdr,	  4,   9, 255, 0xff, 0x02, 0x00, 0x00}, // cdr e ra  
    {0x0ba4, &op_cdr,	  4,  10, 255, 0xff, 0x02, 0x00, 0x00}, // cdr e sb  
    {0x0bb4, &op_cdr,	  4,  11, 255, 0xff, 0x02, 0x00, 0x00}, // cdr e sp  
    {0x0bc4, &op_cdr,	  4,  12, 255, 0xff, 0x02, 0x00, 0x00}, // cdr e db  
    {0x0bd4, &op_cdr,	  4,  13, 255, 0xff, 0x02, 0x00, 0x00}, // cdr e cb  
    {0x0be4, &op_cdr,	  4,  14, 255, 0xff, 0x02, 0x00, 0x00}, // cdr e pi  
    {0x0bf4, &op_cdr,	  4,  15, 255, 0xff, 0x02, 0x00, 0x00}, // cdr e status  
    {0x0b05, &op_cdr,	  5,   0, 255, 0xff, 0x02, 0x00, 0x00}, // cdr f a  
    {0x0b15, &op_cdr,	  5,   1, 255, 0xff, 0x02, 0x00, 0x00}, // cdr f b  
    {0x0b25, &op_cdr,	  5,   2, 255, 0xff, 0x02, 0x00, 0x00}, // cdr f c  
    {0x0b35, &op_cdr,	  5,   3, 255, 0xff, 0x02, 0x00, 0x00}, // cdr f d  
    {0x0b45, &op_cdr,	  5,   4, 255, 0xff, 0x02, 0x00, 0x00}, // cdr f e  
    {0x0b55, &op_cdr,	  5,   5, 255, 0xff, 0x02, 0x00, 0x00}, // cdr f f  
    {0x0b65, &op_cdr,	  5,   6, 255, 0xff, 0x02, 0x00, 0x00}, // cdr f g  
    {0x0b75, &op_cdr,	  5,   7, 255, 0xff, 0x02, 0x00, 0x00}, // cdr f h  
    {0x0b85, &op_cdr,	  5,   8, 255, 0xff, 0x02, 0x00, 0x00}, // cdr f pc  
    {0x0b95, &op_cdr,	  5,   9, 255, 0xff, 0x02, 0x00, 0x00}, // cdr f ra  
    {0x0ba5, &op_cdr,	  5,  10, 255, 0xff, 0x02, 0x00, 0x00}, // cdr f sb  
    {0x0bb5, &op_cdr,	  5,  11, 255, 0xff, 0x02, 0x00, 0x00}, // cdr f sp  
    {0x0bc5, &op_cdr,	  5,  12, 255, 0xff, 0x02, 0x00, 0x00}, // cdr f db  
    {0x0bd5, &op_cdr,	  5,  13, 255, 0xff, 0x02, 0x00, 0x00}, // cdr f cb  
    {0x0be5, &op_cdr,	  5,  14, 255, 0xff, 0x02, 0x00, 0x00}, // cdr f pi  
    {0x0bf5, &op_cdr,	  5,  15, 255, 0xff, 0x02, 0x00, 0x00}, // cdr f status  
    {0x0b06, &op_cdr,	  6,   0, 255, 0xff, 0x02, 0x00, 0x00}, // cdr g a  
    {0x0b16, &op_cdr,	  6,   1, 255, 0xff, 0x02, 0x00, 0x00}, // cdr g b  
    {0x0b26, &op_cdr,	  6,   2, 255, 0xff, 0x02, 0x00, 0x00}, // cdr g c  
    {0x0b36, &op_cdr,	  6,   3, 255, 0xff, 0x02, 0x00, 0x00}, // cdr g d  
    {0x0b46, &op_cdr,	  6,   4, 255, 0xff, 0x02, 0x00, 0x00}, // cdr g e  
    {0x0b56, &op_cdr,	  6,   5, 255, 0xff, 0x02, 0x00, 0x00}, // cdr g f  
    {0x0b66, &op_cdr,	  6,   6, 255, 0xff, 0x02, 0x00, 0x00}, // cdr g g  
    {0x0b76, &op_cdr,	  6,   7, 255, 0xff, 0x02, 0x00, 0x00}, // cdr g h  
    {0x0b86, &op_cdr,	  6,   8, 255, 0xff, 0x02, 0x00, 0x00}, // cdr g pc  
    {0x0b96, &op_cdr,	  6,   9, 255, 0xff, 0x02, 0x00, 0x00}, // cdr g ra  
    {0x0ba6, &op_cdr,	  6,  10, 255, 0xff, 0x02, 0x00, 0x00}, // cdr g sb  
    {0x0bb6, &op_cdr,	  6,  11, 255, 0xff, 0x02, 0x00, 0x00}, // cdr g sp  
    {0x0bc6, &op_cdr,	  6,  12, 255, 0xff, 0x02, 0x00, 0x00}, // cdr g db  
    {0x0bd6, &op_cdr,	  6,  13, 255, 0xff, 0x02, 0x00, 0x00}, // cdr g cb  
    {0x0be6, &op_cdr,	  6,  14, 255, 0xff, 0x02, 0x00, 0x00}, // cdr g pi  
    {0x0bf6, &op_cdr,	  6,  15, 255, 0xff, 0x02, 0x00, 0x00}, // cdr g status  
    {0x0b07, &op_cdr,	  7,   0, 255, 0xff, 0x02, 0x00, 0x00}, // cdr h a  
    {0x0b17, &op_cdr,	  7,   1, 255, 0xff, 0x02, 0x00, 0x00}, // cdr h b  
    {0x0b27, &op_cdr,	  7,   2, 255, 0xff, 0x02, 0x00, 0x00}, // cdr h c  
    {0x0b37, &op_cdr,	  7,   3, 255, 0xff, 0x02, 0x00, 0x00}, // cdr h d  
    {0x0b47, &op_cdr,	  7,   4, 255, 0xff, 0x02, 0x00, 0x00}, // cdr h e  
    {0x0b57, &op_cdr,	  7,   5, 255, 0xff, 0x02, 0x00, 0x00}, // cdr h f  
    {0x0b67, &op_cdr,	  7,   6, 255, 0xff, 0x02, 0x00, 0x00}, // cdr h g  
    {0x0b77, &op_cdr,	  7,   7, 255, 0xff, 0x02, 0x00, 0x00}, // cdr h h  
    {0x0b87, &op_cdr,	  7,   8, 255, 0xff, 0x02, 0x00, 0x00}, // cdr h pc  
    {0x0b97, &op_cdr,	  7,   9, 255, 0xff, 0x02, 0x00, 0x00}, // cdr h ra  
    {0x0ba7, &op_cdr,	  7,  10, 255, 0xff, 0x02, 0x00, 0x00}, // cdr h sb  
    {0x0bb7, &op_cdr,	  7,  11, 255, 0xff, 0x02, 0x00, 0x00}, // cdr h sp  
    {0x0bc7, &op_cdr,	  7,  12, 255, 0xff, 0x02, 0x00, 0x00}, // cdr h db  
    {0x0bd7, &op_cdr,	  7,  13, 255, 0xff, 0x02, 0x00, 0x00}, // cdr h cb  
    {0x0be7, &op_cdr,	  7,  14, 255, 0xff, 0x02, 0x00, 0x00}, // cdr h pi  
    {0x0bf7, &op_cdr,	  7,  15, 255, 0xff, 0x02, 0x00, 0x00}, // cdr h status  
    {0x0b08, &op_cdr,	  8,   0, 255, 0xff, 0x02, 0x00, 0x00}, // cdr pc a  
    {0x0b18, &op_cdr,	  8,   1, 255, 0xff, 0x02, 0x00, 0x00}, // cdr pc b  
    {0x0b28, &op_cdr,	  8,   2, 255, 0xff, 0x02, 0x00, 0x00}, // cdr pc c  
    {0x0b38, &op_cdr,	  8,   3, 255, 0xff, 0x02, 0x00, 0x00}, // cdr pc d  
    {0x0b48, &op_cdr,	  8,   4, 255, 0xff, 0x02, 0x00, 0x00}, // cdr pc e  
    {0x0b58, &op_cdr,	  8,   5, 255, 0xff, 0x02, 0x00, 0x00}, // cdr pc f  
    {0x0b68, &op_cdr,	  8,   6, 255, 0xff, 0x02, 0x00, 0x00}, // cdr pc g  
    {0x0b78, &op_cdr,	  8,   7, 255, 0xff, 0x02, 0x00, 0x00}, // cdr pc h  
    {0x0b88, &op_cdr,	  8,   8, 255, 0xff, 0x02, 0x00, 0x00}, // cdr pc pc  
    {0x0b98, &op_cdr,	  8,   9, 255, 0xff, 0x02, 0x00, 0x00}, // cdr pc ra  
    {0x0ba8, &op_cdr,	  8,  10, 255, 0xff, 0x02, 0x00, 0x00}, // cdr pc sb  
    {0x0bb8, &op_cdr,	  8,  11, 255, 0xff, 0x02, 0x00, 0x00}, // cdr pc sp  
    {0x0bc8, &op_cdr,	  8,  12, 255, 0xff, 0x02, 0x00, 0x00}, // cdr pc db  
    {0x0bd8, &op_cdr,	  8,  13, 255, 0xff, 0x02, 0x00, 0x00}, // cdr pc cb  
    {0x0be8, &op_cdr,	  8,  14, 255, 0xff, 0x02, 0x00, 0x00}, // cdr pc pi  
    {0x0bf8, &op_cdr,	  8,  15, 255, 0xff, 0x02, 0x00, 0x00}, // cdr pc status  
    {0x0b09, &op_cdr,	  9,   0, 255, 0xff, 0x02, 0x00, 0x00}, // cdr ra a  
    {0x0b19, &op_cdr,	  9,   1, 255, 0xff, 0x02, 0x00, 0x00}, // cdr ra b  
    {0x0b29, &op_cdr,	  9,   2, 255, 0xff, 0x02, 0x00, 0x00}, // cdr ra c  
    {0x0b39, &op_cdr,	  9,   3, 255, 0xff, 0x02, 0x00, 0x00}, // cdr ra d  
    {0x0b49, &op_cdr,	  9,   4, 255, 0xff, 0x02, 0x00, 0x00}, // cdr ra e  
    {0x0b59, &op_cdr,	  9,   5, 255, 0xff, 0x02, 0x00, 0x00}, // cdr ra f  
    {0x0b69, &op_cdr,	  9,   6, 255, 0xff, 0x02, 0x00, 0x00}, // cdr ra g  
    {0x0b79, &op_cdr,	  9,   7, 255, 0xff, 0x02, 0x00, 0x00}, // cdr ra h  
    {0x0b89, &op_cdr,	  9,   8, 255, 0xff, 0x02, 0x00, 0x00}, // cdr ra pc  
    {0x0b99, &op_cdr,	  9,   9, 255, 0xff, 0x02, 0x00, 0x00}, // cdr ra ra  
    {0x0ba9, &op_cdr,	  9,  10, 255, 0xff, 0x02, 0x00, 0x00}, // cdr ra sb  
    {0x0bb9, &op_cdr,	  9,  11, 255, 0xff, 0x02, 0x00, 0x00}, // cdr ra sp  
    {0x0bc9, &op_cdr,	  9,  12, 255, 0xff, 0x02, 0x00, 0x00}, // cdr ra db  
    {0x0bd9, &op_cdr,	  9,  13, 255, 0xff, 0x02, 0x00, 0x00}, // cdr ra cb  
    {0x0be9, &op_cdr,	  9,  14, 255, 0xff, 0x02, 0x00, 0x00}, // cdr ra pi  
    {0x0bf9, &op_cdr,	  9,  15, 255, 0xff, 0x02, 0x00, 0x00}, // cdr ra status  
    {0x0b0a, &op_cdr,	 10,   0, 255, 0xff, 0x02, 0x00, 0x00}, // cdr sb a  
    {0x0b1a, &op_cdr,	 10,   1, 255, 0xff, 0x02, 0x00, 0x00}, // cdr sb b  
    {0x0b2a, &op_cdr,	 10,   2, 255, 0xff, 0x02, 0x00, 0x00}, // cdr sb c  
    {0x0b3a, &op_cdr,	 10,   3, 255, 0xff, 0x02, 0x00, 0x00}, // cdr sb d  
    {0x0b4a, &op_cdr,	 10,   4, 255, 0xff, 0x02, 0x00, 0x00}, // cdr sb e  
    {0x0b5a, &op_cdr,	 10,   5, 255, 0xff, 0x02, 0x00, 0x00}, // cdr sb f  
    {0x0b6a, &op_cdr,	 10,   6, 255, 0xff, 0x02, 0x00, 0x00}, // cdr sb g  
    {0x0b7a, &op_cdr,	 10,   7, 255, 0xff, 0x02, 0x00, 0x00}, // cdr sb h  
    {0x0b8a, &op_cdr,	 10,   8, 255, 0xff, 0x02, 0x00, 0x00}, // cdr sb pc  
    {0x0b9a, &op_cdr,	 10,   9, 255, 0xff, 0x02, 0x00, 0x00}, // cdr sb ra  
    {0x0baa, &op_cdr,	 10,  10, 255, 0xff, 0x02, 0x00, 0x00}, // cdr sb sb  
    {0x0bba, &op_cdr,	 10,  11, 255, 0xff, 0x02, 0x00, 0x00}, // cdr sb sp  
    {0x0bca, &op_cdr,	 10,  12, 255, 0xff, 0x02, 0x00, 0x00}, // cdr sb db  
    {0x0bda, &op_cdr,	 10,  13, 255, 0xff, 0x02, 0x00, 0x00}, // cdr sb cb  
    {0x0bea, &op_cdr,	 10,  14, 255, 0xff, 0x02, 0x00, 0x00}, // cdr sb pi  
    {0x0bfa, &op_cdr,	 10,  15, 255, 0xff, 0x02, 0x00, 0x00}, // cdr sb status  
    {0x0b0b, &op_cdr,	 11,   0, 255, 0xff, 0x02, 0x00, 0x00}, // cdr sp a  
    {0x0b1b, &op_cdr,	 11,   1, 255, 0xff, 0x02, 0x00, 0x00}, // cdr sp b  
    {0x0b2b, &op_cdr,	 11,   2, 255, 0xff, 0x02, 0x00, 0x00}, // cdr sp c  
    {0x0b3b, &op_cdr,	 11,   3, 255, 0xff, 0x02, 0x00, 0x00}, // cdr sp d  
    {0x0b4b, &op_cdr,	 11,   4, 255, 0xff, 0x02, 0x00, 0x00}, // cdr sp e  
    {0x0b5b, &op_cdr,	 11,   5, 255, 0xff, 0x02, 0x00, 0x00}, // cdr sp f  
    {0x0b6b, &op_cdr,	 11,   6, 255, 0xff, 0x02, 0x00, 0x00}, // cdr sp g  
    {0x0b7b, &op_cdr,	 11,   7, 255, 0xff, 0x02, 0x00, 0x00}, // cdr sp h  
    {0x0b8b, &op_cdr,	 11,   8, 255, 0xff, 0x02, 0x00, 0x00}, // cdr sp pc  
    {0x0b9b, &op_cdr,	 11,   9, 255, 0xff, 0x02, 0x00, 0x00}, // cdr sp ra  
    {0x0bab, &op_cdr,	 11,  10, 255, 0xff, 0x02, 0x00, 0x00}, // cdr sp sb  
    {0x0bbb, &op_cdr,	 11,  11, 255, 0xff, 0x02, 0x00, 0x00}, // cdr sp sp  
    {0x0bcb, &op_cdr,	 11,  12, 255, 0xff, 0x02, 0x00, 0x00}, // cdr sp db  
    {0x0bdb, &op_cdr,	 11,  13, 255, 0xff, 0x02, 0x00, 0x00}, // cdr sp cb  
    {0x0beb, &op_cdr,	 11,  14, 255, 0xff, 0x02, 0x00, 0x00}, // cdr sp pi  
    {0x0bfb, &op_cdr,	 11,  15, 255, 0xff, 0x02, 0x00, 0x00}, // cdr sp status  
    {0x0b0c, &op_cdr,	 12,   0, 255, 0xff, 0x02, 0x00, 0x00}, // cdr db a  
    {0x0b1c, &op_cdr,	 12,   1, 255, 0xff, 0x02, 0x00, 0x00}, // cdr db b  
    {0x0b2c, &op_cdr,	 12,   2, 255, 0xff, 0x02, 0x00, 0x00}, // cdr db c  
    {0x0b3c, &op_cdr,	 12,   3, 255, 0xff, 0x02, 0x00, 0x00}, // cdr db d  
    {0x0b4c, &op_cdr,	 12,   4, 255, 0xff, 0x02, 0x00, 0x00}, // cdr db e  
    {0x0b5c, &op_cdr,	 12,   5, 255, 0xff, 0x02, 0x00, 0x00}, // cdr db f  
    {0x0b6c, &op_cdr,	 12,   6, 255, 0xff, 0x02, 0x00, 0x00}, // cdr db g  
    {0x0b7c, &op_cdr,	 12,   7, 255, 0xff, 0x02, 0x00, 0x00}, // cdr db h  
    {0x0b8c, &op_cdr,	 12,   8, 255, 0xff, 0x02, 0x00, 0x00}, // cdr db pc  
    {0x0b9c, &op_cdr,	 12,   9, 255, 0xff, 0x02, 0x00, 0x00}, // cdr db ra  
    {0x0bac, &op_cdr,	 12,  10, 255, 0xff, 0x02, 0x00, 0x00}, // cdr db sb  
    {0x0bbc, &op_cdr,	 12,  11, 255, 0xff, 0x02, 0x00, 0x00}, // cdr db sp  
    {0x0bcc, &op_cdr,	 12,  12, 255, 0xff, 0x02, 0x00, 0x00}, // cdr db db  
    {0x0bdc, &op_cdr,	 12,  13, 255, 0xff, 0x02, 0x00, 0x00}, // cdr db cb  
    {0x0bec, &op_cdr,	 12,  14, 255, 0xff, 0x02, 0x00, 0x00}, // cdr db pi  
    {0x0bfc, &op_cdr,	 12,  15, 255, 0xff, 0x02, 0x00, 0x00}, // cdr db status  
    {0x0b0d, &op_cdr,	 13,   0, 255, 0xff, 0x02, 0x00, 0x00}, // cdr cb a  
    {0x0b1d, &op_cdr,	 13,   1, 255, 0xff, 0x02, 0x00, 0x00}, // cdr cb b  
    {0x0b2d, &op_cdr,	 13,   2, 255, 0xff, 0x02, 0x00, 0x00}, // cdr cb c  
    {0x0b3d, &op_cdr,	 13,   3, 255, 0xff, 0x02, 0x00, 0x00}, // cdr cb d  
    {0x0b4d, &op_cdr,	 13,   4, 255, 0xff, 0x02, 0x00, 0x00}, // cdr cb e  
    {0x0b5d, &op_cdr,	 13,   5, 255, 0xff, 0x02, 0x00, 0x00}, // cdr cb f  
    {0x0b6d, &op_cdr,	 13,   6, 255, 0xff, 0x02, 0x00, 0x00}, // cdr cb g  
    {0x0b7d, &op_cdr,	 13,   7, 255, 0xff, 0x02, 0x00, 0x00}, // cdr cb h  
    {0x0b8d, &op_cdr,	 13,   8, 255, 0xff, 0x02, 0x00, 0x00}, // cdr cb pc  
    {0x0b9d, &op_cdr,	 13,   9, 255, 0xff, 0x02, 0x00, 0x00}, // cdr cb ra  
    {0x0bad, &op_cdr,	 13,  10, 255, 0xff, 0x02, 0x00, 0x00}, // cdr cb sb  
    {0x0bbd, &op_cdr,	 13,  11, 255, 0xff, 0x02, 0x00, 0x00}, // cdr cb sp  
    {0x0bcd, &op_cdr,	 13,  12, 255, 0xff, 0x02, 0x00, 0x00}, // cdr cb db  
    {0x0bdd, &op_cdr,	 13,  13, 255, 0xff, 0x02, 0x00, 0x00}, // cdr cb cb  
    {0x0bed, &op_cdr,	 13,  14, 255, 0xff, 0x02, 0x00, 0x00}, // cdr cb pi  
    {0x0bfd, &op_cdr,	 13,  15, 255, 0xff, 0x02, 0x00, 0x00}, // cdr cb status  
    {0x0b0e, &op_cdr,	 14,   0, 255, 0xff, 0x02, 0x00, 0x00}, // cdr pi a  
    {0x0b1e, &op_cdr,	 14,   1, 255, 0xff, 0x02, 0x00, 0x00}, // cdr pi b  
    {0x0b2e, &op_cdr,	 14,   2, 255, 0xff, 0x02, 0x00, 0x00}, // cdr pi c  
    {0x0b3e, &op_cdr,	 14,   3, 255, 0xff, 0x02, 0x00, 0x00}, // cdr pi d  
    {0x0b4e, &op_cdr,	 14,   4, 255, 0xff, 0x02, 0x00, 0x00}, // cdr pi e  
    {0x0b5e, &op_cdr,	 14,   5, 255, 0xff, 0x02, 0x00, 0x00}, // cdr pi f  
    {0x0b6e, &op_cdr,	 14,   6, 255, 0xff, 0x02, 0x00, 0x00}, // cdr pi g  
    {0x0b7e, &op_cdr,	 14,   7, 255, 0xff, 0x02, 0x00, 0x00}, // cdr pi h  
    {0x0b8e, &op_cdr,	 14,   8, 255, 0xff, 0x02, 0x00, 0x00}, // cdr pi pc  
    {0x0b9e, &op_cdr,	 14,   9, 255, 0xff, 0x02, 0x00, 0x00}, // cdr pi ra  
    {0x0bae, &op_cdr,	 14,  10, 255, 0xff, 0x02, 0x00, 0x00}, // cdr pi sb  
    {0x0bbe, &op_cdr,	 14,  11, 255, 0xff, 0x02, 0x00, 0x00}, // cdr pi sp  
    {0x0bce, &op_cdr,	 14,  12, 255, 0xff, 0x02, 0x00, 0x00}, // cdr pi db  
    {0x0bde, &op_cdr,	 14,  13, 255, 0xff, 0x02, 0x00, 0x00}, // cdr pi cb  
    {0x0bee, &op_cdr,	 14,  14, 255, 0xff, 0x02, 0x00, 0x00}, // cdr pi pi  
    {0x0bfe, &op_cdr,	 14,  15, 255, 0xff, 0x02, 0x00, 0x00}, // cdr pi status  
    {0x0b0f, &op_flip,	255,   0, 255, 0xff, 0x02, 0x00, 0x00}, // flip a   
    {0x0b1f, &op_flip,	255,   1, 255, 0xff, 0x02, 0x00, 0x00}, // flip b   
    {0x0b2f, &op_flip,	255,   2, 255, 0xff, 0x02, 0x00, 0x00}, // flip c   
    {0x0b3f, &op_flip,	255,   3, 255, 0xff, 0x02, 0x00, 0x00}, // flip d   
    {0x0b4f, &op_flip,	255,   4, 255, 0xff, 0x02, 0x00, 0x00}, // flip e   
    {0x0b5f, &op_flip,	255,   5, 255, 0xff, 0x02, 0x00, 0x00}, // flip f   
    {0x0b6f, &op_flip,	255,   6, 255, 0xff, 0x02, 0x00, 0x00}, // flip g   
    {0x0b7f, &op_flip,	255,   7, 255, 0xff, 0x02, 0x00, 0x00}, // flip h   
    {0x0c00, &op_copy,	  0,   0, 255, 0xff, 0x02, 0x00, 0x00}, // copy a a  
    {0x0c10, &op_copy,	  0,   1, 255, 0xff, 0x02, 0x00, 0x00}, // copy a b  
    {0x0c20, &op_copy,	  0,   2, 255, 0xff, 0x02, 0x00, 0x00}, // copy a c  
    {0x0c30, &op_copy,	  0,   3, 255, 0xff, 0x02, 0x00, 0x00}, // copy a d  
    {0x0c40, &op_copy,	  0,   4, 255, 0xff, 0x02, 0x00, 0x00}, // copy a e  
    {0x0c50, &op_copy,	  0,   5, 255, 0xff, 0x02, 0x00, 0x00}, // copy a f  
    {0x0c60, &op_copy,	  0,   6, 255, 0xff, 0x02, 0x00, 0x00}, // copy a g  
    {0x0c70, &op_copy,	  0,   7, 255, 0xff, 0x02, 0x00, 0x00}, // copy a h  
    {0x0c80, &op_copy,	  0,   8, 255, 0xff, 0x02, 0x00, 0x00}, // copy a pc  
    {0x0c90, &op_copy,	  0,   9, 255, 0xff, 0x02, 0x00, 0x00}, // copy a ra  
    {0x0ca0, &op_copy,	  0,  10, 255, 0xff, 0x02, 0x00, 0x00}, // copy a sb  
    {0x0cb0, &op_copy,	  0,  11, 255, 0xff, 0x02, 0x00, 0x00}, // copy a sp  
    {0x0cc0, &op_copy,	  0,  12, 255, 0xff, 0x02, 0x00, 0x00}, // copy a db  
    {0x0cd0, &op_copy,	  0,  13, 255, 0xff, 0x02, 0x00, 0x00}, // copy a cb  
    {0x0ce0, &op_copy,	  0,  14, 255, 0xff, 0x02, 0x00, 0x00}, // copy a pi  
    {0x0cf0, &op_copy,	  0,  15, 255, 0xff, 0x02, 0x00, 0x00}, // copy a status  
    {0x0c01, &op_copy,	  1,   0, 255, 0xff, 0x02, 0x00, 0x00}, // copy b a  
    {0x0c11, &op_copy,	  1,   1, 255, 0xff, 0x02, 0x00, 0x00}, // copy b b  
    {0x0c21, &op_copy,	  1,   2, 255, 0xff, 0x02, 0x00, 0x00}, // copy b c  
    {0x0c31, &op_copy,	  1,   3, 255, 0xff, 0x02, 0x00, 0x00}, // copy b d  
    {0x0c41, &op_copy,	  1,   4, 255, 0xff, 0x02, 0x00, 0x00}, // copy b e  
    {0x0c51, &op_copy,	  1,   5, 255, 0xff, 0x02, 0x00, 0x00}, // copy b f  
    {0x0c61, &op_copy,	  1,   6, 255, 0xff, 0x02, 0x00, 0x00}, // copy b g  
    {0x0c71, &op_copy,	  1,   7, 255, 0xff, 0x02, 0x00, 0x00}, // copy b h  
    {0x0c81, &op_copy,	  1,   8, 255, 0xff, 0x02, 0x00, 0x00}, // copy b pc  
    {0x0c91, &op_copy,	  1,   9, 255, 0xff, 0x02, 0x00, 0x00}, // copy b ra  
    {0x0ca1, &op_copy,	  1,  10, 255, 0xff, 0x02, 0x00, 0x00}, // copy b sb  
    {0x0cb1, &op_copy,	  1,  11, 255, 0xff, 0x02, 0x00, 0x00}, // copy b sp  
    {0x0cc1, &op_copy,	  1,  12, 255, 0xff, 0x02, 0x00, 0x00}, // copy b db  
    {0x0cd1, &op_copy,	  1,  13, 255, 0xff, 0x02, 0x00, 0x00}, // copy b cb  
    {0x0ce1, &op_copy,	  1,  14, 255, 0xff, 0x02, 0x00, 0x00}, // copy b pi  
    {0x0cf1, &op_copy,	  1,  15, 255, 0xff, 0x02, 0x00, 0x00}, // copy b status  
    {0x0c02, &op_copy,	  2,   0, 255, 0xff, 0x02, 0x00, 0x00}, // copy c a  
    {0x0c12, &op_copy,	  2,   1, 255, 0xff, 0x02, 0x00, 0x00}, // copy c b  
    {0x0c22, &op_copy,	  2,   2, 255, 0xff, 0x02, 0x00, 0x00}, // copy c c  
    {0x0c32, &op_copy,	  2,   3, 255, 0xff, 0x02, 0x00, 0x00}, // copy c d  
    {0x0c42, &op_copy,	  2,   4, 255, 0xff, 0x02, 0x00, 0x00}, // copy c e  
    {0x0c52, &op_copy,	  2,   5, 255, 0xff, 0x02, 0x00, 0x00}, // copy c f  
    {0x0c62, &op_copy,	  2,   6, 255, 0xff, 0x02, 0x00, 0x00}, // copy c g  
    {0x0c72, &op_copy,	  2,   7, 255, 0xff, 0x02, 0x00, 0x00}, // copy c h  
    {0x0c82, &op_copy,	  2,   8, 255, 0xff, 0x02, 0x00, 0x00}, // copy c pc  
    {0x0c92, &op_copy,	  2,   9, 255, 0xff, 0x02, 0x00, 0x00}, // copy c ra  
    {0x0ca2, &op_copy,	  2,  10, 255, 0xff, 0x02, 0x00, 0x00}, // copy c sb  
    {0x0cb2, &op_copy,	  2,  11, 255, 0xff, 0x02, 0x00, 0x00}, // copy c sp  
    {0x0cc2, &op_copy,	  2,  12, 255, 0xff, 0x02, 0x00, 0x00}, // copy c db  
    {0x0cd2, &op_copy,	  2,  13, 255, 0xff, 0x02, 0x00, 0x00}, // copy c cb  
    {0x0ce2, &op_copy,	  2,  14, 255, 0xff, 0x02, 0x00, 0x00}, // copy c pi  
    {0x0cf2, &op_copy,	  2,  15, 255, 0xff, 0x02, 0x00, 0x00}, // copy c status  
    {0x0c03, &op_copy,	  3,   0, 255, 0xff, 0x02, 0x00, 0x00}, // copy d a  
    {0x0c13, &op_copy,	  3,   1, 255, 0xff, 0x02, 0x00, 0x00}, // copy d b  
    {0x0c23, &op_copy,	  3,   2, 255, 0xff, 0x02, 0x00, 0x00}, // copy d c  
    {0x0c33, &op_copy,	  3,   3, 255, 0xff, 0x02, 0x00, 0x00}, // copy d d  
    {0x0c43, &op_copy,	  3,   4, 255, 0xff, 0x02, 0x00, 0x00}, // copy d e  
    {0x0c53, &op_copy,	  3,   5, 255, 0xff, 0x02, 0x00, 0x00}, // copy d f  
    {0x0c63, &op_copy,	  3,   6, 255, 0xff, 0x02, 0x00, 0x00}, // copy d g  
    {0x0c73, &op_copy,	  3,   7, 255, 0xff, 0x02, 0x00, 0x00}, // copy d h  
    {0x0c83, &op_copy,	  3,   8, 255, 0xff, 0x02, 0x00, 0x00}, // copy d pc  
    {0x0c93, &op_copy,	  3,   9, 255, 0xff, 0x02, 0x00, 0x00}, // copy d ra  
    {0x0ca3, &op_copy,	  3,  10, 255, 0xff, 0x02, 0x00, 0x00}, // copy d sb  
    {0x0cb3, &op_copy,	  3,  11, 255, 0xff, 0x02, 0x00, 0x00}, // copy d sp  
    {0x0cc3, &op_copy,	  3,  12, 255, 0xff, 0x02, 0x00, 0x00}, // copy d db  
    {0x0cd3, &op_copy,	  3,  13, 255, 0xff, 0x02, 0x00, 0x00}, // copy d cb  
    {0x0ce3, &op_copy,	  3,  14, 255, 0xff, 0x02, 0x00, 0x00}, // copy d pi  
    {0x0cf3, &op_copy,	  3,  15, 255, 0xff, 0x02, 0x00, 0x00}, // copy d status  
    {0x0c04, &op_copy,	  4,   0, 255, 0xff, 0x02, 0x00, 0x00}, // copy e a  
    {0x0c14, &op_copy,	  4,   1, 255, 0xff, 0x02, 0x00, 0x00}, // copy e b  
    {0x0c24, &op_copy,	  4,   2, 255, 0xff, 0x02, 0x00, 0x00}, // copy e c  
    {0x0c34, &op_copy,	  4,   3, 255, 0xff, 0x02, 0x00, 0x00}, // copy e d  
    {0x0c44, &op_copy,	  4,   4, 255, 0xff, 0x02, 0x00, 0x00}, // copy e e  
    {0x0c54, &op_copy,	  4,   5, 255, 0xff, 0x02, 0x00, 0x00}, // copy e f  
    {0x0c64, &op_copy,	  4,   6, 255, 0xff, 0x02, 0x00, 0x00}, // copy e g  
    {0x0c74, &op_copy,	  4,   7, 255, 0xff, 0x02, 0x00, 0x00}, // copy e h  
    {0x0c84, &op_copy,	  4,   8, 255, 0xff, 0x02, 0x00, 0x00}, // copy e pc  
    {0x0c94, &op_copy,	  4,   9, 255, 0xff, 0x02, 0x00, 0x00}, // copy e ra  
    {0x0ca4, &op_copy,	  4,  10, 255, 0xff, 0x02, 0x00, 0x00}, // copy e sb  
    {0x0cb4, &op_copy,	  4,  11, 255, 0xff, 0x02, 0x00, 0x00}, // copy e sp  
    {0x0cc4, &op_copy,	  4,  12, 255, 0xff, 0x02, 0x00, 0x00}, // copy e db  
    {0x0cd4, &op_copy,	  4,  13, 255, 0xff, 0x02, 0x00, 0x00}, // copy e cb  
    {0x0ce4, &op_copy,	  4,  14, 255, 0xff, 0x02, 0x00, 0x00}, // copy e pi  
    {0x0cf4, &op_copy,	  4,  15, 255, 0xff, 0x02, 0x00, 0x00}, // copy e status  
    {0x0c05, &op_copy,	  5,   0, 255, 0xff, 0x02, 0x00, 0x00}, // copy f a  
    {0x0c15, &op_copy,	  5,   1, 255, 0xff, 0x02, 0x00, 0x00}, // copy f b  
    {0x0c25, &op_copy,	  5,   2, 255, 0xff, 0x02, 0x00, 0x00}, // copy f c  
    {0x0c35, &op_copy,	  5,   3, 255, 0xff, 0x02, 0x00, 0x00}, // copy f d  
    {0x0c45, &op_copy,	  5,   4, 255, 0xff, 0x02, 0x00, 0x00}, // copy f e  
    {0x0c55, &op_copy,	  5,   5, 255, 0xff, 0x02, 0x00, 0x00}, // copy f f  
    {0x0c65, &op_copy,	  5,   6, 255, 0xff, 0x02, 0x00, 0x00}, // copy f g  
    {0x0c75, &op_copy,	  5,   7, 255, 0xff, 0x02, 0x00, 0x00}, // copy f h  
    {0x0c85, &op_copy,	  5,   8, 255, 0xff, 0x02, 0x00, 0x00}, // copy f pc  
    {0x0c95, &op_copy,	  5,   9, 255, 0xff, 0x02, 0x00, 0x00}, // copy f ra  
    {0x0ca5, &op_copy,	  5,  10, 255, 0xff, 0x02, 0x00, 0x00}, // copy f sb  
    {0x0cb5, &op_copy,	  5,  11, 255, 0xff, 0x02, 0x00, 0x00}, // copy f sp  
    {0x0cc5, &op_copy,	  5,  12, 255, 0xff, 0x02, 0x00, 0x00}, // copy f db  
    {0x0cd5, &op_copy,	  5,  13, 255, 0xff, 0x02, 0x00, 0x00}, // copy f cb  
    {0x0ce5, &op_copy,	  5,  14, 255, 0xff, 0x02, 0x00, 0x00}, // copy f pi  
    {0x0cf5, &op_copy,	  5,  15, 255, 0xff, 0x02, 0x00, 0x00}, // copy f status  
    {0x0c06, &op_copy,	  6,   0, 255, 0xff, 0x02, 0x00, 0x00}, // copy g a  
    {0x0c16, &op_copy,	  6,   1, 255, 0xff, 0x02, 0x00, 0x00}, // copy g b  
    {0x0c26, &op_copy,	  6,   2, 255, 0xff, 0x02, 0x00, 0x00}, // copy g c  
    {0x0c36, &op_copy,	  6,   3, 255, 0xff, 0x02, 0x00, 0x00}, // copy g d  
    {0x0c46, &op_copy,	  6,   4, 255, 0xff, 0x02, 0x00, 0x00}, // copy g e  
    {0x0c56, &op_copy,	  6,   5, 255, 0xff, 0x02, 0x00, 0x00}, // copy g f  
    {0x0c66, &op_copy,	  6,   6, 255, 0xff, 0x02, 0x00, 0x00}, // copy g g  
    {0x0c76, &op_copy,	  6,   7, 255, 0xff, 0x02, 0x00, 0x00}, // copy g h  
    {0x0c86, &op_copy,	  6,   8, 255, 0xff, 0x02, 0x00, 0x00}, // copy g pc  
    {0x0c96, &op_copy,	  6,   9, 255, 0xff, 0x02, 0x00, 0x00}, // copy g ra  
    {0x0ca6, &op_copy,	  6,  10, 255, 0xff, 0x02, 0x00, 0x00}, // copy g sb  
    {0x0cb6, &op_copy,	  6,  11, 255, 0xff, 0x02, 0x00, 0x00}, // copy g sp  
    {0x0cc6, &op_copy,	  6,  12, 255, 0xff, 0x02, 0x00, 0x00}, // copy g db  
    {0x0cd6, &op_copy,	  6,  13, 255, 0xff, 0x02, 0x00, 0x00}, // copy g cb  
    {0x0ce6, &op_copy,	  6,  14, 255, 0xff, 0x02, 0x00, 0x00}, // copy g pi  
    {0x0cf6, &op_copy,	  6,  15, 255, 0xff, 0x02, 0x00, 0x00}, // copy g status  
    {0x0c07, &op_copy,	  7,   0, 255, 0xff, 0x02, 0x00, 0x00}, // copy h a  
    {0x0c17, &op_copy,	  7,   1, 255, 0xff, 0x02, 0x00, 0x00}, // copy h b  
    {0x0c27, &op_copy,	  7,   2, 255, 0xff, 0x02, 0x00, 0x00}, // copy h c  
    {0x0c37, &op_copy,	  7,   3, 255, 0xff, 0x02, 0x00, 0x00}, // copy h d  
    {0x0c47, &op_copy,	  7,   4, 255, 0xff, 0x02, 0x00, 0x00}, // copy h e  
    {0x0c57, &op_copy,	  7,   5, 255, 0xff, 0x02, 0x00, 0x00}, // copy h f  
    {0x0c67, &op_copy,	  7,   6, 255, 0xff, 0x02, 0x00, 0x00}, // copy h g  
    {0x0c77, &op_copy,	  7,   7, 255, 0xff, 0x02, 0x00, 0x00}, // copy h h  
    {0x0c87, &op_copy,	  7,   8, 255, 0xff, 0x02, 0x00, 0x00}, // copy h pc  
    {0x0c97, &op_copy,	  7,   9, 255, 0xff, 0x02, 0x00, 0x00}, // copy h ra  
    {0x0ca7, &op_copy,	  7,  10, 255, 0xff, 0x02, 0x00, 0x00}, // copy h sb  
    {0x0cb7, &op_copy,	  7,  11, 255, 0xff, 0x02, 0x00, 0x00}, // copy h sp  
    {0x0cc7, &op_copy,	  7,  12, 255, 0xff, 0x02, 0x00, 0x00}, // copy h db  
    {0x0cd7, &op_copy,	  7,  13, 255, 0xff, 0x02, 0x00, 0x00}, // copy h cb  
    {0x0ce7, &op_copy,	  7,  14, 255, 0xff, 0x02, 0x00, 0x00}, // copy h pi  
    {0x0cf7, &op_copy,	  7,  15, 255, 0xff, 0x02, 0x00, 0x00}, // copy h status  
    {0x0c08, &op_copy,	  8,   0, 255, 0xff, 0x02, 0x00, 0x00}, // copy pc a  
    {0x0c18, &op_copy,	  8,   1, 255, 0xff, 0x02, 0x00, 0x00}, // copy pc b  
    {0x0c28, &op_copy,	  8,   2, 255, 0xff, 0x02, 0x00, 0x00}, // copy pc c  
    {0x0c38, &op_copy,	  8,   3, 255, 0xff, 0x02, 0x00, 0x00}, // copy pc d  
    {0x0c48, &op_copy,	  8,   4, 255, 0xff, 0x02, 0x00, 0x00}, // copy pc e  
    {0x0c58, &op_copy,	  8,   5, 255, 0xff, 0x02, 0x00, 0x00}, // copy pc f  
    {0x0c68, &op_copy,	  8,   6, 255, 0xff, 0x02, 0x00, 0x00}, // copy pc g  
    {0x0c78, &op_copy,	  8,   7, 255, 0xff, 0x02, 0x00, 0x00}, // copy pc h  
    {0x0c88, &op_copy,	  8,   8, 255, 0xff, 0x02, 0x00, 0x00}, // copy pc pc  
    {0x0c98, &op_copy,	  8,   9, 255, 0xff, 0x02, 0x00, 0x00}, // copy pc ra  
    {0x0ca8, &op_copy,	  8,  10, 255, 0xff, 0x02, 0x00, 0x00}, // copy pc sb  
    {0x0cb8, &op_copy,	  8,  11, 255, 0xff, 0x02, 0x00, 0x00}, // copy pc sp  
    {0x0cc8, &op_copy,	  8,  12, 255, 0xff, 0x02, 0x00, 0x00}, // copy pc db  
    {0x0cd8, &op_copy,	  8,  13, 255, 0xff, 0x02, 0x00, 0x00}, // copy pc cb  
    {0x0ce8, &op_copy,	  8,  14, 255, 0xff, 0x02, 0x00, 0x00}, // copy pc pi  
    {0x0cf8, &op_copy,	  8,  15, 255, 0xff, 0x02, 0x00, 0x00}, // copy pc status  
    {0x0c09, &op_copy,	  9,   0, 255, 0xff, 0x02, 0x00, 0x00}, // copy ra a  
    {0x0c19, &op_copy,	  9,   1, 255, 0xff, 0x02, 0x00, 0x00}, // copy ra b  
    {0x0c29, &op_copy,	  9,   2, 255, 0xff, 0x02, 0x00, 0x00}, // copy ra c  
    {0x0c39, &op_copy,	  9,   3, 255, 0xff, 0x02, 0x00, 0x00}, // copy ra d  
    {0x0c49, &op_copy,	  9,   4, 255, 0xff, 0x02, 0x00, 0x00}, // copy ra e  
    {0x0c59, &op_copy,	  9,   5, 255, 0xff, 0x02, 0x00, 0x00}, // copy ra f  
    {0x0c69, &op_copy,	  9,   6, 255, 0xff, 0x02, 0x00, 0x00}, // copy ra g  
    {0x0c79, &op_copy,	  9,   7, 255, 0xff, 0x02, 0x00, 0x00}, // copy ra h  
    {0x0c89, &op_copy,	  9,   8, 255, 0xff, 0x02, 0x00, 0x00}, // copy ra pc  
    {0x0c99, &op_copy,	  9,   9, 255, 0xff, 0x02, 0x00, 0x00}, // copy ra ra  
    {0x0ca9, &op_copy,	  9,  10, 255, 0xff, 0x02, 0x00, 0x00}, // copy ra sb  
    {0x0cb9, &op_copy,	  9,  11, 255, 0xff, 0x02, 0x00, 0x00}, // copy ra sp  
    {0x0cc9, &op_copy,	  9,  12, 255, 0xff, 0x02, 0x00, 0x00}, // copy ra db  
    {0x0cd9, &op_copy,	  9,  13, 255, 0xff, 0x02, 0x00, 0x00}, // copy ra cb  
    {0x0ce9, &op_copy,	  9,  14, 255, 0xff, 0x02, 0x00, 0x00}, // copy ra pi  
    {0x0cf9, &op_copy,	  9,  15, 255, 0xff, 0x02, 0x00, 0x00}, // copy ra status  
    {0x0c0a, &op_copy,	 10,   0, 255, 0xff, 0x02, 0x00, 0x00}, // copy sb a  
    {0x0c1a, &op_copy,	 10,   1, 255, 0xff, 0x02, 0x00, 0x00}, // copy sb b  
    {0x0c2a, &op_copy,	 10,   2, 255, 0xff, 0x02, 0x00, 0x00}, // copy sb c  
    {0x0c3a, &op_copy,	 10,   3, 255, 0xff, 0x02, 0x00, 0x00}, // copy sb d  
    {0x0c4a, &op_copy,	 10,   4, 255, 0xff, 0x02, 0x00, 0x00}, // copy sb e  
    {0x0c5a, &op_copy,	 10,   5, 255, 0xff, 0x02, 0x00, 0x00}, // copy sb f  
    {0x0c6a, &op_copy,	 10,   6, 255, 0xff, 0x02, 0x00, 0x00}, // copy sb g  
    {0x0c7a, &op_copy,	 10,   7, 255, 0xff, 0x02, 0x00, 0x00}, // copy sb h  
    {0x0c8a, &op_copy,	 10,   8, 255, 0xff, 0x02, 0x00, 0x00}, // copy sb pc  
    {0x0c9a, &op_copy,	 10,   9, 255, 0xff, 0x02, 0x00, 0x00}, // copy sb ra  
    {0x0caa, &op_copy,	 10,  10, 255, 0xff, 0x02, 0x00, 0x00}, // copy sb sb  
    {0x0cba, &op_copy,	 10,  11, 255, 0xff, 0x02, 0x00, 0x00}, // copy sb sp  
    {0x0cca, &op_copy,	 10,  12, 255, 0xff, 0x02, 0x00, 0x00}, // copy sb db  
    {0x0cda, &op_copy,	 10,  13, 255, 0xff, 0x02, 0x00, 0x00}, // copy sb cb  
    {0x0cea, &op_copy,	 10,  14, 255, 0xff, 0x02, 0x00, 0x00}, // copy sb pi  
    {0x0cfa, &op_copy,	 10,  15, 255, 0xff, 0x02, 0x00, 0x00}, // copy sb status  
    {0x0c0b, &op_copy,	 11,   0, 255, 0xff, 0x02, 0x00, 0x00}, // copy sp a  
    {0x0c1b, &op_copy,	 11,   1, 255, 0xff, 0x02, 0x00, 0x00}, // copy sp b  
    {0x0c2b, &op_copy,	 11,   2, 255, 0xff, 0x02, 0x00, 0x00}, // copy sp c  
    {0x0c3b, &op_copy,	 11,   3, 255, 0xff, 0x02, 0x00, 0x00}, // copy sp d  
    {0x0c4b, &op_copy,	 11,   4, 255, 0xff, 0x02, 0x00, 0x00}, // copy sp e  
    {0x0c5b, &op_copy,	 11,   5, 255, 0xff, 0x02, 0x00, 0x00}, // copy sp f  
    {0x0c6b, &op_copy,	 11,   6, 255, 0xff, 0x02, 0x00, 0x00}, // copy sp g  
    {0x0c7b, &op_copy,	 11,   7, 255, 0xff, 0x02, 0x00, 0x00}, // copy sp h  
    {0x0c8b, &op_copy,	 11,   8, 255, 0xff, 0x02, 0x00, 0x00}, // copy sp pc  
    {0x0c9b, &op_copy,	 11,   9, 255, 0xff, 0x02, 0x00, 0x00}, // copy sp ra  
    {0x0cab, &op_copy,	 11,  10, 255, 0xff, 0x02, 0x00, 0x00}, // copy sp sb  
    {0x0cbb, &op_copy,	 11,  11, 255, 0xff, 0x02, 0x00, 0x00}, // copy sp sp  
    {0x0ccb, &op_copy,	 11,  12, 255, 0xff, 0x02, 0x00, 0x00}, // copy sp db  
    {0x0cdb, &op_copy,	 11,  13, 255, 0xff, 0x02, 0x00, 0x00}, // copy sp cb  
    {0x0ceb, &op_copy,	 11,  14, 255, 0xff, 0x02, 0x00, 0x00}, // copy sp pi  
    {0x0cfb, &op_copy,	 11,  15, 255, 0xff, 0x02, 0x00, 0x00}, // copy sp status  
    {0x0c0c, &op_copy,	 12,   0, 255, 0xff, 0x02, 0x00, 0x00}, // copy db a  
    {0x0c1c, &op_copy,	 12,   1, 255, 0xff, 0x02, 0x00, 0x00}, // copy db b  
    {0x0c2c, &op_copy,	 12,   2, 255, 0xff, 0x02, 0x00, 0x00}, // copy db c  
    {0x0c3c, &op_copy,	 12,   3, 255, 0xff, 0x02, 0x00, 0x00}, // copy db d  
    {0x0c4c, &op_copy,	 12,   4, 255, 0xff, 0x02, 0x00, 0x00}, // copy db e  
    {0x0c5c, &op_copy,	 12,   5, 255, 0xff, 0x02, 0x00, 0x00}, // copy db f  
    {0x0c6c, &op_copy,	 12,   6, 255, 0xff, 0x02, 0x00, 0x00}, // copy db g  
    {0x0c7c, &op_copy,	 12,   7, 255, 0xff, 0x02, 0x00, 0x00}, // copy db h  
    {0x0c8c, &op_copy,	 12,   8, 255, 0xff, 0x02, 0x00, 0x00}, // copy db pc  
    {0x0c9c, &op_copy,	 12,   9, 255, 0xff, 0x02, 0x00, 0x00}, // copy db ra  
    {0x0cac, &op_copy,	 12,  10, 255, 0xff, 0x02, 0x00, 0x00}, // copy db sb  
    {0x0cbc, &op_copy,	 12,  11, 255, 0xff, 0x02, 0x00, 0x00}, // copy db sp  
    {0x0ccc, &op_copy,	 12,  12, 255, 0xff, 0x02, 0x00, 0x00}, // copy db db  
    {0x0cdc, &op_copy,	 12,  13, 255, 0xff, 0x02, 0x00, 0x00}, // copy db cb  
    {0x0cec, &op_copy,	 12,  14, 255, 0xff, 0x02, 0x00, 0x00}, // copy db pi  
    {0x0cfc, &op_copy,	 12,  15, 255, 0xff, 0x02, 0x00, 0x00}, // copy db status  
    {0x0c0d, &op_copy,	 13,   0, 255, 0xff, 0x02, 0x00, 0x00}, // copy cb a  
    {0x0c1d, &op_copy,	 13,   1, 255, 0xff, 0x02, 0x00, 0x00}, // copy cb b  
    {0x0c2d, &op_copy,	 13,   2, 255, 0xff, 0x02, 0x00, 0x00}, // copy cb c  
    {0x0c3d, &op_copy,	 13,   3, 255, 0xff, 0x02, 0x00, 0x00}, // copy cb d  
    {0x0c4d, &op_copy,	 13,   4, 255, 0xff, 0x02, 0x00, 0x00}, // copy cb e  
    {0x0c5d, &op_copy,	 13,   5, 255, 0xff, 0x02, 0x00, 0x00}, // copy cb f  
    {0x0c6d, &op_copy,	 13,   6, 255, 0xff, 0x02, 0x00, 0x00}, // copy cb g  
    {0x0c7d, &op_copy,	 13,   7, 255, 0xff, 0x02, 0x00, 0x00}, // copy cb h  
    {0x0c8d, &op_copy,	 13,   8, 255, 0xff, 0x02, 0x00, 0x00}, // copy cb pc  
    {0x0c9d, &op_copy,	 13,   9, 255, 0xff, 0x02, 0x00, 0x00}, // copy cb ra  
    {0x0cad, &op_copy,	 13,  10, 255, 0xff, 0x02, 0x00, 0x00}, // copy cb sb  
    {0x0cbd, &op_copy,	 13,  11, 255, 0xff, 0x02, 0x00, 0x00}, // copy cb sp  
    {0x0ccd, &op_copy,	 13,  12, 255, 0xff, 0x02, 0x00, 0x00}, // copy cb db  
    {0x0cdd, &op_copy,	 13,  13, 255, 0xff, 0x02, 0x00, 0x00}, // copy cb cb  
    {0x0ced, &op_copy,	 13,  14, 255, 0xff, 0x02, 0x00, 0x00}, // copy cb pi  
    {0x0cfd, &op_copy,	 13,  15, 255, 0xff, 0x02, 0x00, 0x00}, // copy cb status  
    {0x0c0e, &op_copy,	 14,   0, 255, 0xff, 0x02, 0x00, 0x00}, // copy pi a  
    {0x0c1e, &op_copy,	 14,   1, 255, 0xff, 0x02, 0x00, 0x00}, // copy pi b  
    {0x0c2e, &op_copy,	 14,   2, 255, 0xff, 0x02, 0x00, 0x00}, // copy pi c  
    {0x0c3e, &op_copy,	 14,   3, 255, 0xff, 0x02, 0x00, 0x00}, // copy pi d  
    {0x0c4e, &op_copy,	 14,   4, 255, 0xff, 0x02, 0x00, 0x00}, // copy pi e  
    {0x0c5e, &op_copy,	 14,   5, 255, 0xff, 0x02, 0x00, 0x00}, // copy pi f  
    {0x0c6e, &op_copy,	 14,   6, 255, 0xff, 0x02, 0x00, 0x00}, // copy pi g  
    {0x0c7e, &op_copy,	 14,   7, 255, 0xff, 0x02, 0x00, 0x00}, // copy pi h  
    {0x0c8e, &op_copy,	 14,   8, 255, 0xff, 0x02, 0x00, 0x00}, // copy pi pc  
    {0x0c9e, &op_copy,	 14,   9, 255, 0xff, 0x02, 0x00, 0x00}, // copy pi ra  
    {0x0cae, &op_copy,	 14,  10, 255, 0xff, 0x02, 0x00, 0x00}, // copy pi sb  
    {0x0cbe, &op_copy,	 14,  11, 255, 0xff, 0x02, 0x00, 0x00}, // copy pi sp  
    {0x0cce, &op_copy,	 14,  12, 255, 0xff, 0x02, 0x00, 0x00}, // copy pi db  
    {0x0cde, &op_copy,	 14,  13, 255, 0xff, 0x02, 0x00, 0x00}, // copy pi cb  
    {0x0cee, &op_copy,	 14,  14, 255, 0xff, 0x02, 0x00, 0x00}, // copy pi pi  
    {0x0cfe, &op_copy,	 14,  15, 255, 0xff, 0x02, 0x00, 0x00}, // copy pi status  
    {0x0c0f, &op_copy,	 15,   0, 255, 0xff, 0x02, 0x00, 0x00}, // copy status a  
    {0x0c1f, &op_copy,	 15,   1, 255, 0xff, 0x02, 0x00, 0x00}, // copy status b  
    {0x0c2f, &op_copy,	 15,   2, 255, 0xff, 0x02, 0x00, 0x00}, // copy status c  
    {0x0c3f, &op_copy,	 15,   3, 255, 0xff, 0x02, 0x00, 0x00}, // copy status d  
    {0x0c4f, &op_copy,	 15,   4, 255, 0xff, 0x02, 0x00, 0x00}, // copy status e  
    {0x0c5f, &op_copy,	 15,   5, 255, 0xff, 0x02, 0x00, 0x00}, // copy status f  
    {0x0c6f, &op_copy,	 15,   6, 255, 0xff, 0x02, 0x00, 0x00}, // copy status g  
    {0x0c7f, &op_copy,	 15,   7, 255, 0xff, 0x02, 0x00, 0x00}, // copy status h  
    {0x0c8f, &op_copy,	 15,   8, 255, 0xff, 0x02, 0x00, 0x00}, // copy status pc  
    {0x0c9f, &op_copy,	 15,   9, 255, 0xff, 0x02, 0x00, 0x00}, // copy status ra  
    {0x0caf, &op_copy,	 15,  10, 255, 0xff, 0x02, 0x00, 0x00}, // copy status sb  
    {0x0cbf, &op_copy,	 15,  11, 255, 0xff, 0x02, 0x00, 0x00}, // copy status sp  
    {0x0ccf, &op_copy,	 15,  12, 255, 0xff, 0x02, 0x00, 0x00}, // copy status db  
    {0x0cdf, &op_copy,	 15,  13, 255, 0xff, 0x02, 0x00, 0x00}, // copy status cb  
    {0x0cef, &op_copy,	 15,  14, 255, 0xff, 0x02, 0x00, 0x00}, // copy status pi  
    {0x0cff, &op_copy,	 15,  15, 255, 0xff, 0x02, 0x00, 0x00}, // copy status status  
    {0x0f00, &op_swap,	  0,   0, 255, 0xff, 0x02, 0x00, 0x00}, // swap a a  
    {0x0f10, &op_swap,	  0,   1, 255, 0xff, 0x02, 0x00, 0x00}, // swap a b  
    {0x0f20, &op_swap,	  0,   2, 255, 0xff, 0x02, 0x00, 0x00}, // swap a c  
    {0x0f30, &op_swap,	  0,   3, 255, 0xff, 0x02, 0x00, 0x00}, // swap a d  
    {0x0f40, &op_swap,	  0,   4, 255, 0xff, 0x02, 0x00, 0x00}, // swap a e  
    {0x0f50, &op_swap,	  0,   5, 255, 0xff, 0x02, 0x00, 0x00}, // swap a f  
    {0x0f60, &op_swap,	  0,   6, 255, 0xff, 0x02, 0x00, 0x00}, // swap a g  
    {0x0f70, &op_swap,	  0,   7, 255, 0xff, 0x02, 0x00, 0x00}, // swap a h  
    {0x0f80, &op_swap,	  0,   8, 255, 0xff, 0x02, 0x00, 0x00}, // swap a pc  
    {0x0f90, &op_swap,	  0,   9, 255, 0xff, 0x02, 0x00, 0x00}, // swap a ra  
    {0x0fa0, &op_swap,	  0,  10, 255, 0xff, 0x02, 0x00, 0x00}, // swap a sb  
    {0x0fb0, &op_swap,	  0,  11, 255, 0xff, 0x02, 0x00, 0x00}, // swap a sp  
    {0x0fc0, &op_swap,	  0,  12, 255, 0xff, 0x02, 0x00, 0x00}, // swap a db  
    {0x0fd0, &op_swap,	  0,  13, 255, 0xff, 0x02, 0x00, 0x00}, // swap a cb  
    {0x0fe0, &op_swap,	  0,  14, 255, 0xff, 0x02, 0x00, 0x00}, // swap a pi  
    {0x0ff0, &op_swap,	  0,  15, 255, 0xff, 0x02, 0x00, 0x00}, // swap a status  
    {0x0f01, &op_swap,	  1,   0, 255, 0xff, 0x02, 0x00, 0x00}, // swap b a  
    {0x0f11, &op_swap,	  1,   1, 255, 0xff, 0x02, 0x00, 0x00}, // swap b b  
    {0x0f21, &op_swap,	  1,   2, 255, 0xff, 0x02, 0x00, 0x00}, // swap b c  
    {0x0f31, &op_swap,	  1,   3, 255, 0xff, 0x02, 0x00, 0x00}, // swap b d  
    {0x0f41, &op_swap,	  1,   4, 255, 0xff, 0x02, 0x00, 0x00}, // swap b e  
    {0x0f51, &op_swap,	  1,   5, 255, 0xff, 0x02, 0x00, 0x00}, // swap b f  
    {0x0f61, &op_swap,	  1,   6, 255, 0xff, 0x02, 0x00, 0x00}, // swap b g  
    {0x0f71, &op_swap,	  1,   7, 255, 0xff, 0x02, 0x00, 0x00}, // swap b h  
    {0x0f81, &op_swap,	  1,   8, 255, 0xff, 0x02, 0x00, 0x00}, // swap b pc  
    {0x0f91, &op_swap,	  1,   9, 255, 0xff, 0x02, 0x00, 0x00}, // swap b ra  
    {0x0fa1, &op_swap,	  1,  10, 255, 0xff, 0x02, 0x00, 0x00}, // swap b sb  
    {0x0fb1, &op_swap,	  1,  11, 255, 0xff, 0x02, 0x00, 0x00}, // swap b sp  
    {0x0fc1, &op_swap,	  1,  12, 255, 0xff, 0x02, 0x00, 0x00}, // swap b db  
    {0x0fd1, &op_swap,	  1,  13, 255, 0xff, 0x02, 0x00, 0x00}, // swap b cb  
    {0x0fe1, &op_swap,	  1,  14, 255, 0xff, 0x02, 0x00, 0x00}, // swap b pi  
    {0x0ff1, &op_swap,	  1,  15, 255, 0xff, 0x02, 0x00, 0x00}, // swap b status  
    {0x0f02, &op_swap,	  2,   0, 255, 0xff, 0x02, 0x00, 0x00}, // swap c a  
    {0x0f12, &op_swap,	  2,   1, 255, 0xff, 0x02, 0x00, 0x00}, // swap c b  
    {0x0f22, &op_swap,	  2,   2, 255, 0xff, 0x02, 0x00, 0x00}, // swap c c  
    {0x0f32, &op_swap,	  2,   3, 255, 0xff, 0x02, 0x00, 0x00}, // swap c d  
    {0x0f42, &op_swap,	  2,   4, 255, 0xff, 0x02, 0x00, 0x00}, // swap c e  
    {0x0f52, &op_swap,	  2,   5, 255, 0xff, 0x02, 0x00, 0x00}, // swap c f  
    {0x0f62, &op_swap,	  2,   6, 255, 0xff, 0x02, 0x00, 0x00}, // swap c g  
    {0x0f72, &op_swap,	  2,   7, 255, 0xff, 0x02, 0x00, 0x00}, // swap c h  
    {0x0f82, &op_swap,	  2,   8, 255, 0xff, 0x02, 0x00, 0x00}, // swap c pc  
    {0x0f92, &op_swap,	  2,   9, 255, 0xff, 0x02, 0x00, 0x00}, // swap c ra  
    {0x0fa2, &op_swap,	  2,  10, 255, 0xff, 0x02, 0x00, 0x00}, // swap c sb  
    {0x0fb2, &op_swap,	  2,  11, 255, 0xff, 0x02, 0x00, 0x00}, // swap c sp  
    {0x0fc2, &op_swap,	  2,  12, 255, 0xff, 0x02, 0x00, 0x00}, // swap c db  
    {0x0fd2, &op_swap,	  2,  13, 255, 0xff, 0x02, 0x00, 0x00}, // swap c cb  
    {0x0fe2, &op_swap,	  2,  14, 255, 0xff, 0x02, 0x00, 0x00}, // swap c pi  
    {0x0ff2, &op_swap,	  2,  15, 255, 0xff, 0x02, 0x00, 0x00}, // swap c status  
    {0x0f03, &op_swap,	  3,   0, 255, 0xff, 0x02, 0x00, 0x00}, // swap d a  
    {0x0f13, &op_swap,	  3,   1, 255, 0xff, 0x02, 0x00, 0x00}, // swap d b  
    {0x0f23, &op_swap,	  3,   2, 255, 0xff, 0x02, 0x00, 0x00}, // swap d c  
    {0x0f33, &op_swap,	  3,   3, 255, 0xff, 0x02, 0x00, 0x00}, // swap d d  
    {0x0f43, &op_swap,	  3,   4, 255, 0xff, 0x02, 0x00, 0x00}, // swap d e  
    {0x0f53, &op_swap,	  3,   5, 255, 0xff, 0x02, 0x00, 0x00}, // swap d f  
    {0x0f63, &op_swap,	  3,   6, 255, 0xff, 0x02, 0x00, 0x00}, // swap d g  
    {0x0f73, &op_swap,	  3,   7, 255, 0xff, 0x02, 0x00, 0x00}, // swap d h  
    {0x0f83, &op_swap,	  3,   8, 255, 0xff, 0x02, 0x00, 0x00}, // swap d pc  
    {0x0f93, &op_swap,	  3,   9, 255, 0xff, 0x02, 0x00, 0x00}, // swap d ra  
    {0x0fa3, &op_swap,	  3,  10, 255, 0xff, 0x02, 0x00, 0x00}, // swap d sb  
    {0x0fb3, &op_swap,	  3,  11, 255, 0xff, 0x02, 0x00, 0x00}, // swap d sp  
    {0x0fc3, &op_swap,	  3,  12, 255, 0xff, 0x02, 0x00, 0x00}, // swap d db  
    {0x0fd3, &op_swap,	  3,  13, 255, 0xff, 0x02, 0x00, 0x00}, // swap d cb  
    {0x0fe3, &op_swap,	  3,  14, 255, 0xff, 0x02, 0x00, 0x00}, // swap d pi  
    {0x0ff3, &op_swap,	  3,  15, 255, 0xff, 0x02, 0x00, 0x00}, // swap d status  
    {0x0f04, &op_swap,	  4,   0, 255, 0xff, 0x02, 0x00, 0x00}, // swap e a  
    {0x0f14, &op_swap,	  4,   1, 255, 0xff, 0x02, 0x00, 0x00}, // swap e b  
    {0x0f24, &op_swap,	  4,   2, 255, 0xff, 0x02, 0x00, 0x00}, // swap e c  
    {0x0f34, &op_swap,	  4,   3, 255, 0xff, 0x02, 0x00, 0x00}, // swap e d  
    {0x0f44, &op_swap,	  4,   4, 255, 0xff, 0x02, 0x00, 0x00}, // swap e e  
    {0x0f54, &op_swap,	  4,   5, 255, 0xff, 0x02, 0x00, 0x00}, // swap e f  
    {0x0f64, &op_swap,	  4,   6, 255, 0xff, 0x02, 0x00, 0x00}, // swap e g  
    {0x0f74, &op_swap,	  4,   7, 255, 0xff, 0x02, 0x00, 0x00}, // swap e h  
    {0x0f84, &op_swap,	  4,   8, 255, 0xff, 0x02, 0x00, 0x00}, // swap e pc  
    {0x0f94, &op_swap,	  4,   9, 255, 0xff, 0x02, 0x00, 0x00}, // swap e ra  
    {0x0fa4, &op_swap,	  4,  10, 255, 0xff, 0x02, 0x00, 0x00}, // swap e sb  
    {0x0fb4, &op_swap,	  4,  11, 255, 0xff, 0x02, 0x00, 0x00}, // swap e sp  
    {0x0fc4, &op_swap,	  4,  12, 255, 0xff, 0x02, 0x00, 0x00}, // swap e db  
    {0x0fd4, &op_swap,	  4,  13, 255, 0xff, 0x02, 0x00, 0x00}, // swap e cb  
    {0x0fe4, &op_swap,	  4,  14, 255, 0xff, 0x02, 0x00, 0x00}, // swap e pi  
    {0x0ff4, &op_swap,	  4,  15, 255, 0xff, 0x02, 0x00, 0x00}, // swap e status  
    {0x0f05, &op_swap,	  5,   0, 255, 0xff, 0x02, 0x00, 0x00}, // swap f a  
    {0x0f15, &op_swap,	  5,   1, 255, 0xff, 0x02, 0x00, 0x00}, // swap f b  
    {0x0f25, &op_swap,	  5,   2, 255, 0xff, 0x02, 0x00, 0x00}, // swap f c  
    {0x0f35, &op_swap,	  5,   3, 255, 0xff, 0x02, 0x00, 0x00}, // swap f d  
    {0x0f45, &op_swap,	  5,   4, 255, 0xff, 0x02, 0x00, 0x00}, // swap f e  
    {0x0f55, &op_swap,	  5,   5, 255, 0xff, 0x02, 0x00, 0x00}, // swap f f  
    {0x0f65, &op_swap,	  5,   6, 255, 0xff, 0x02, 0x00, 0x00}, // swap f g  
    {0x0f75, &op_swap,	  5,   7, 255, 0xff, 0x02, 0x00, 0x00}, // swap f h  
    {0x0f85, &op_swap,	  5,   8, 255, 0xff, 0x02, 0x00, 0x00}, // swap f pc  
    {0x0f95, &op_swap,	  5,   9, 255, 0xff, 0x02, 0x00, 0x00}, // swap f ra  
    {0x0fa5, &op_swap,	  5,  10, 255, 0xff, 0x02, 0x00, 0x00}, // swap f sb  
    {0x0fb5, &op_swap,	  5,  11, 255, 0xff, 0x02, 0x00, 0x00}, // swap f sp  
    {0x0fc5, &op_swap,	  5,  12, 255, 0xff, 0x02, 0x00, 0x00}, // swap f db  
    {0x0fd5, &op_swap,	  5,  13, 255, 0xff, 0x02, 0x00, 0x00}, // swap f cb  
    {0x0fe5, &op_swap,	  5,  14, 255, 0xff, 0x02, 0x00, 0x00}, // swap f pi  
    {0x0ff5, &op_swap,	  5,  15, 255, 0xff, 0x02, 0x00, 0x00}, // swap f status  
    {0x0f06, &op_swap,	  6,   0, 255, 0xff, 0x02, 0x00, 0x00}, // swap g a  
    {0x0f16, &op_swap,	  6,   1, 255, 0xff, 0x02, 0x00, 0x00}, // swap g b  
    {0x0f26, &op_swap,	  6,   2, 255, 0xff, 0x02, 0x00, 0x00}, // swap g c  
    {0x0f36, &op_swap,	  6,   3, 255, 0xff, 0x02, 0x00, 0x00}, // swap g d  
    {0x0f46, &op_swap,	  6,   4, 255, 0xff, 0x02, 0x00, 0x00}, // swap g e  
    {0x0f56, &op_swap,	  6,   5, 255, 0xff, 0x02, 0x00, 0x00}, // swap g f  
    {0x0f66, &op_swap,	  6,   6, 255, 0xff, 0x02, 0x00, 0x00}, // swap g g  
    {0x0f76, &op_swap,	  6,   7, 255, 0xff, 0x02, 0x00, 0x00}, // swap g h  
    {0x0f86, &op_swap,	  6,   8, 255, 0xff, 0x02, 0x00, 0x00}, // swap g pc  
    {0x0f96, &op_swap,	  6,   9, 255, 0xff, 0x02, 0x00, 0x00}, // swap g ra  
    {0x0fa6, &op_swap,	  6,  10, 255, 0xff, 0x02, 0x00, 0x00}, // swap g sb  
    {0x0fb6, &op_swap,	  6,  11, 255, 0xff, 0x02, 0x00, 0x00}, // swap g sp  
    {0x0fc6, &op_swap,	  6,  12, 255, 0xff, 0x02, 0x00, 0x00}, // swap g db  
    {0x0fd6, &op_swap,	  6,  13, 255, 0xff, 0x02, 0x00, 0x00}, // swap g cb  
    {0x0fe6, &op_swap,	  6,  14, 255, 0xff, 0x02, 0x00, 0x00}, // swap g pi  
    {0x0ff6, &op_swap,	  6,  15, 255, 0xff, 0x02, 0x00, 0x00}, // swap g status  
    {0x0f07, &op_swap,	  7,   0, 255, 0xff, 0x02, 0x00, 0x00}, // swap h a  
    {0x0f17, &op_swap,	  7,   1, 255, 0xff, 0x02, 0x00, 0x00}, // swap h b  
    {0x0f27, &op_swap,	  7,   2, 255, 0xff, 0x02, 0x00, 0x00}, // swap h c  
    {0x0f37, &op_swap,	  7,   3, 255, 0xff, 0x02, 0x00, 0x00}, // swap h d  
    {0x0f47, &op_swap,	  7,   4, 255, 0xff, 0x02, 0x00, 0x00}, // swap h e  
    {0x0f57, &op_swap,	  7,   5, 255, 0xff, 0x02, 0x00, 0x00}, // swap h f  
    {0x0f67, &op_swap,	  7,   6, 255, 0xff, 0x02, 0x00, 0x00}, // swap h g  
    {0x0f77, &op_swap,	  7,   7, 255, 0xff, 0x02, 0x00, 0x00}, // swap h h  
    {0x0f87, &op_swap,	  7,   8, 255, 0xff, 0x02, 0x00, 0x00}, // swap h pc  
    {0x0f97, &op_swap,	  7,   9, 255, 0xff, 0x02, 0x00, 0x00}, // swap h ra  
    {0x0fa7, &op_swap,	  7,  10, 255, 0xff, 0x02, 0x00, 0x00}, // swap h sb  
    {0x0fb7, &op_swap,	  7,  11, 255, 0xff, 0x02, 0x00, 0x00}, // swap h sp  
    {0x0fc7, &op_swap,	  7,  12, 255, 0xff, 0x02, 0x00, 0x00}, // swap h db  
    {0x0fd7, &op_swap,	  7,  13, 255, 0xff, 0x02, 0x00, 0x00}, // swap h cb  
    {0x0fe7, &op_swap,	  7,  14, 255, 0xff, 0x02, 0x00, 0x00}, // swap h pi  
    {0x0ff7, &op_swap,	  7,  15, 255, 0xff, 0x02, 0x00, 0x00}, // swap h status  
    {0x0f08, &op_swap,	  8,   0, 255, 0xff, 0x02, 0x00, 0x00}, // swap pc a  
    {0x0f18, &op_swap,	  8,   1, 255, 0xff, 0x02, 0x00, 0x00}, // swap pc b  
    {0x0f28, &op_swap,	  8,   2, 255, 0xff, 0x02, 0x00, 0x00}, // swap pc c  
    {0x0f38, &op_swap,	  8,   3, 255, 0xff, 0x02, 0x00, 0x00}, // swap pc d  
    {0x0f48, &op_swap,	  8,   4, 255, 0xff, 0x02, 0x00, 0x00}, // swap pc e  
    {0x0f58, &op_swap,	  8,   5, 255, 0xff, 0x02, 0x00, 0x00}, // swap pc f  
    {0x0f68, &op_swap,	  8,   6, 255, 0xff, 0x02, 0x00, 0x00}, // swap pc g  
    {0x0f78, &op_swap,	  8,   7, 255, 0xff, 0x02, 0x00, 0x00}, // swap pc h  
    {0x0f88, &op_swap,	  8,   8, 255, 0xff, 0x02, 0x00, 0x00}, // swap pc pc  
    {0x0f98, &op_swap,	  8,   9, 255, 0xff, 0x02, 0x00, 0x00}, // swap pc ra  
    {0x0fa8, &op_swap,	  8,  10, 255, 0xff, 0x02, 0x00, 0x00}, // swap pc sb  
    {0x0fb8, &op_swap,	  8,  11, 255, 0xff, 0x02, 0x00, 0x00}, // swap pc sp  
    {0x0fc8, &op_swap,	  8,  12, 255, 0xff, 0x02, 0x00, 0x00}, // swap pc db  
    {0x0fd8, &op_swap,	  8,  13, 255, 0xff, 0x02, 0x00, 0x00}, // swap pc cb  
    {0x0fe8, &op_swap,	  8,  14, 255, 0xff, 0x02, 0x00, 0x00}, // swap pc pi  
    {0x0ff8, &op_swap,	  8,  15, 255, 0xff, 0x02, 0x00, 0x00}, // swap pc status  
    {0x0f09, &op_swap,	  9,   0, 255, 0xff, 0x02, 0x00, 0x00}, // swap ra a  
    {0x0f19, &op_swap,	  9,   1, 255, 0xff, 0x02, 0x00, 0x00}, // swap ra b  
    {0x0f29, &op_swap,	  9,   2, 255, 0xff, 0x02, 0x00, 0x00}, // swap ra c  
    {0x0f39, &op_swap,	  9,   3, 255, 0xff, 0x02, 0x00, 0x00}, // swap ra d  
    {0x0f49, &op_swap,	  9,   4, 255, 0xff, 0x02, 0x00, 0x00}, // swap ra e  
    {0x0f59, &op_swap,	  9,   5, 255, 0xff, 0x02, 0x00, 0x00}, // swap ra f  
    {0x0f69, &op_swap,	  9,   6, 255, 0xff, 0x02, 0x00, 0x00}, // swap ra g  
    {0x0f79, &op_swap,	  9,   7, 255, 0xff, 0x02, 0x00, 0x00}, // swap ra h  
    {0x0f89, &op_swap,	  9,   8, 255, 0xff, 0x02, 0x00, 0x00}, // swap ra pc  
    {0x0f99, &op_swap,	  9,   9, 255, 0xff, 0x02, 0x00, 0x00}, // swap ra ra  
    {0x0fa9, &op_swap,	  9,  10, 255, 0xff, 0x02, 0x00, 0x00}, // swap ra sb  
    {0x0fb9, &op_swap,	  9,  11, 255, 0xff, 0x02, 0x00, 0x00}, // swap ra sp  
    {0x0fc9, &op_swap,	  9,  12, 255, 0xff, 0x02, 0x00, 0x00}, // swap ra db  
    {0x0fd9, &op_swap,	  9,  13, 255, 0xff, 0x02, 0x00, 0x00}, // swap ra cb  
    {0x0fe9, &op_swap,	  9,  14, 255, 0xff, 0x02, 0x00, 0x00}, // swap ra pi  
    {0x0ff9, &op_swap,	  9,  15, 255, 0xff, 0x02, 0x00, 0x00}, // swap ra status  
    {0x0f0a, &op_swap,	 10,   0, 255, 0xff, 0x02, 0x00, 0x00}, // swap sb a  
    {0x0f1a, &op_swap,	 10,   1, 255, 0xff, 0x02, 0x00, 0x00}, // swap sb b  
    {0x0f2a, &op_swap,	 10,   2, 255, 0xff, 0x02, 0x00, 0x00}, // swap sb c  
    {0x0f3a, &op_swap,	 10,   3, 255, 0xff, 0x02, 0x00, 0x00}, // swap sb d  
    {0x0f4a, &op_swap,	 10,   4, 255, 0xff, 0x02, 0x00, 0x00}, // swap sb e  
    {0x0f5a, &op_swap,	 10,   5, 255, 0xff, 0x02, 0x00, 0x00}, // swap sb f  
    {0x0f6a, &op_swap,	 10,   6, 255, 0xff, 0x02, 0x00, 0x00}, // swap sb g  
    {0x0f7a, &op_swap,	 10,   7, 255, 0xff, 0x02, 0x00, 0x00}, // swap sb h  
    {0x0f8a, &op_swap,	 10,   8, 255, 0xff, 0x02, 0x00, 0x00}, // swap sb pc  
    {0x0f9a, &op_swap,	 10,   9, 255, 0xff, 0x02, 0x00, 0x00}, // swap sb ra  
    {0x0faa, &op_swap,	 10,  10, 255, 0xff, 0x02, 0x00, 0x00}, // swap sb sb  
    {0x0fba, &op_swap,	 10,  11, 255, 0xff, 0x02, 0x00, 0x00}, // swap sb sp  
    {0x0fca, &op_swap,	 10,  12, 255, 0xff, 0x02, 0x00, 0x00}, // swap sb db  
    {0x0fda, &op_swap,	 10,  13, 255, 0xff, 0x02, 0x00, 0x00}, // swap sb cb  
    {0x0fea, &op_swap,	 10,  14, 255, 0xff, 0x02, 0x00, 0x00}, // swap sb pi  
    {0x0ffa, &op_swap,	 10,  15, 255, 0xff, 0x02, 0x00, 0x00}, // swap sb status  
    {0x0f0b, &op_swap,	 11,   0, 255, 0xff, 0x02, 0x00, 0x00}, // swap sp a  
    {0x0f1b, &op_swap,	 11,   1, 255, 0xff, 0x02, 0x00, 0x00}, // swap sp b  
    {0x0f2b, &op_swap,	 11,   2, 255, 0xff, 0x02, 0x00, 0x00}, // swap sp c  
    {0x0f3b, &op_swap,	 11,   3, 255, 0xff, 0x02, 0x00, 0x00}, // swap sp d  
    {0x0f4b, &op_swap,	 11,   4, 255, 0xff, 0x02, 0x00, 0x00}, // swap sp e  
    {0x0f5b, &op_swap,	 11,   5, 255, 0xff, 0x02, 0x00, 0x00}, // swap sp f  
    {0x0f6b, &op_swap,	 11,   6, 255, 0xff, 0x02, 0x00, 0x00}, // swap sp g  
    {0x0f7b, &op_swap,	 11,   7, 255, 0xff, 0x02, 0x00, 0x00}, // swap sp h  
    {0x0f8b, &op_swap,	 11,   8, 255, 0xff, 0x02, 0x00, 0x00}, // swap sp pc  
    {0x0f9b, &op_swap,	 11,   9, 255, 0xff, 0x02, 0x00, 0x00}, // swap sp ra  
    {0x0fab, &op_swap,	 11,  10, 255, 0xff, 0x02, 0x00, 0x00}, // swap sp sb  
    {0x0fbb, &op_swap,	 11,  11, 255, 0xff, 0x02, 0x00, 0x00}, // swap sp sp  
    {0x0fcb, &op_swap,	 11,  12, 255, 0xff, 0x02, 0x00, 0x00}, // swap sp db  
    {0x0fdb, &op_swap,	 11,  13, 255, 0xff, 0x02, 0x00, 0x00}, // swap sp cb  
    {0x0feb, &op_swap,	 11,  14, 255, 0xff, 0x02, 0x00, 0x00}, // swap sp pi  
    {0x0ffb, &op_swap,	 11,  15, 255, 0xff, 0x02, 0x00, 0x00}, // swap sp status  
    {0x0f0c, &op_swap,	 12,   0, 255, 0xff, 0x02, 0x00, 0x00}, // swap db a  
    {0x0f1c, &op_swap,	 12,   1, 255, 0xff, 0x02, 0x00, 0x00}, // swap db b  
    {0x0f2c, &op_swap,	 12,   2, 255, 0xff, 0x02, 0x00, 0x00}, // swap db c  
    {0x0f3c, &op_swap,	 12,   3, 255, 0xff, 0x02, 0x00, 0x00}, // swap db d  
    {0x0f4c, &op_swap,	 12,   4, 255, 0xff, 0x02, 0x00, 0x00}, // swap db e  
    {0x0f5c, &op_swap,	 12,   5, 255, 0xff, 0x02, 0x00, 0x00}, // swap db f  
    {0x0f6c, &op_swap,	 12,   6, 255, 0xff, 0x02, 0x00, 0x00}, // swap db g  
    {0x0f7c, &op_swap,	 12,   7, 255, 0xff, 0x02, 0x00, 0x00}, // swap db h  
    {0x0f8c, &op_swap,	 12,   8, 255, 0xff, 0x02, 0x00, 0x00}, // swap db pc  
    {0x0f9c, &op_swap,	 12,   9, 255, 0xff, 0x02, 0x00, 0x00}, // swap db ra  
    {0x0fac, &op_swap,	 12,  10, 255, 0xff, 0x02, 0x00, 0x00}, // swap db sb  
    {0x0fbc, &op_swap,	 12,  11, 255, 0xff, 0x02, 0x00, 0x00}, // swap db sp  
    {0x0fcc, &op_swap,	 12,  12, 255, 0xff, 0x02, 0x00, 0x00}, // swap db db  
    {0x0fdc, &op_swap,	 12,  13, 255, 0xff, 0x02, 0x00, 0x00}, // swap db cb  
    {0x0fec, &op_swap,	 12,  14, 255, 0xff, 0x02, 0x00, 0x00}, // swap db pi  
    {0x0ffc, &op_swap,	 12,  15, 255, 0xff, 0x02, 0x00, 0x00}, // swap db status  
    {0x0f0d, &op_swap,	 13,   0, 255, 0xff, 0x02, 0x00, 0x00}, // swap cb a  
    {0x0f1d, &op_swap,	 13,   1, 255, 0xff, 0x02, 0x00, 0x00}, // swap cb b  
    {0x0f2d, &op_swap,	 13,   2, 255, 0xff, 0x02, 0x00, 0x00}, // swap cb c  
    {0x0f3d, &op_swap,	 13,   3, 255, 0xff, 0x02, 0x00, 0x00}, // swap cb d  
    {0x0f4d, &op_swap,	 13,   4, 255, 0xff, 0x02, 0x00, 0x00}, // swap cb e  
    {0x0f5d, &op_swap,	 13,   5, 255, 0xff, 0x02, 0x00, 0x00}, // swap cb f  
    {0x0f6d, &op_swap,	 13,   6, 255, 0xff, 0x02, 0x00, 0x00}, // swap cb g  
    {0x0f7d, &op_swap,	 13,   7, 255, 0xff, 0x02, 0x00, 0x00}, // swap cb h  
    {0x0f8d, &op_swap,	 13,   8, 255, 0xff, 0x02, 0x00, 0x00}, // swap cb pc  
    {0x0f9d, &op_swap,	 13,   9, 255, 0xff, 0x02, 0x00, 0x00}, // swap cb ra  
    {0x0fad, &op_swap,	 13,  10, 255, 0xff, 0x02, 0x00, 0x00}, // swap cb sb  
    {0x0fbd, &op_swap,	 13,  11, 255, 0xff, 0x02, 0x00, 0x00}, // swap cb sp  
    {0x0fcd, &op_swap,	 13,  12, 255, 0xff, 0x02, 0x00, 0x00}, // swap cb db  
    {0x0fdd, &op_swap,	 13,  13, 255, 0xff, 0x02, 0x00, 0x00}, // swap cb cb  
    {0x0fed, &op_swap,	 13,  14, 255, 0xff, 0x02, 0x00, 0x00}, // swap cb pi  
    {0x0ffd, &op_swap,	 13,  15, 255, 0xff, 0x02, 0x00, 0x00}, // swap cb status  
    {0x0f0e, &op_swap,	 14,   0, 255, 0xff, 0x02, 0x00, 0x00}, // swap pi a  
    {0x0f1e, &op_swap,	 14,   1, 255, 0xff, 0x02, 0x00, 0x00}, // swap pi b  
    {0x0f2e, &op_swap,	 14,   2, 255, 0xff, 0x02, 0x00, 0x00}, // swap pi c  
    {0x0f3e, &op_swap,	 14,   3, 255, 0xff, 0x02, 0x00, 0x00}, // swap pi d  
    {0x0f4e, &op_swap,	 14,   4, 255, 0xff, 0x02, 0x00, 0x00}, // swap pi e  
    {0x0f5e, &op_swap,	 14,   5, 255, 0xff, 0x02, 0x00, 0x00}, // swap pi f  
    {0x0f6e, &op_swap,	 14,   6, 255, 0xff, 0x02, 0x00, 0x00}, // swap pi g  
    {0x0f7e, &op_swap,	 14,   7, 255, 0xff, 0x02, 0x00, 0x00}, // swap pi h  
    {0x0f8e, &op_swap,	 14,   8, 255, 0xff, 0x02, 0x00, 0x00}, // swap pi pc  
    {0x0f9e, &op_swap,	 14,   9, 255, 0xff, 0x02, 0x00, 0x00}, // swap pi ra  
    {0x0fae, &op_swap,	 14,  10, 255, 0xff, 0x02, 0x00, 0x00}, // swap pi sb  
    {0x0fbe, &op_swap,	 14,  11, 255, 0xff, 0x02, 0x00, 0x00}, // swap pi sp  
    {0x0fce, &op_swap,	 14,  12, 255, 0xff, 0x02, 0x00, 0x00}, // swap pi db  
    {0x0fde, &op_swap,	 14,  13, 255, 0xff, 0x02, 0x00, 0x00}, // swap pi cb  
    {0x0fee, &op_swap,	 14,  14, 255, 0xff, 0x02, 0x00, 0x00}, // swap pi pi  
    {0x0ffe, &op_swap,	 14,  15, 255, 0xff, 0x02, 0x00, 0x00}, // swap pi status  
    {0x0f0f, &op_swap,	 15,   0, 255, 0xff, 0x02, 0x00, 0x00}, // swap status a  
    {0x0f1f, &op_swap,	 15,   1, 255, 0xff, 0x02, 0x00, 0x00}, // swap status b  
    {0x0f2f, &op_swap,	 15,   2, 255, 0xff, 0x02, 0x00, 0x00}, // swap status c  
    {0x0f3f, &op_swap,	 15,   3, 255, 0xff, 0x02, 0x00, 0x00}, // swap status d  
    {0x0f4f, &op_swap,	 15,   4, 255, 0xff, 0x02, 0x00, 0x00}, // swap status e  
    {0x0f5f, &op_swap,	 15,   5, 255, 0xff, 0x02, 0x00, 0x00}, // swap status f  
    {0x0f6f, &op_swap,	 15,   6, 255, 0xff, 0x02, 0x00, 0x00}, // swap status g  
    {0x0f7f, &op_swap,	 15,   7, 255, 0xff, 0x02, 0x00, 0x00}, // swap status h  
    {0x0f8f, &op_swap,	 15,   8, 255, 0xff, 0x02, 0x00, 0x00}, // swap status pc  
    {0x0f9f, &op_swap,	 15,   9, 255, 0xff, 0x02, 0x00, 0x00}, // swap status ra  
    {0x0faf, &op_swap,	 15,  10, 255, 0xff, 0x02, 0x00, 0x00}, // swap status sb  
    {0x0fbf, &op_swap,	 15,  11, 255, 0xff, 0x02, 0x00, 0x00}, // swap status sp  
    {0x0fcf, &op_swap,	 15,  12, 255, 0xff, 0x02, 0x00, 0x00}, // swap status db  
    {0x0fdf, &op_swap,	 15,  13, 255, 0xff, 0x02, 0x00, 0x00}, // swap status cb  
    {0x0fef, &op_swap,	 15,  14, 255, 0xff, 0x02, 0x00, 0x00}, // swap status pi  
    {0x0fff, &op_swap,	 15,  15, 255, 0xff, 0x02, 0x00, 0x00}, // swap status status  
    {0x1000, &op_load,	  0,   0, 255, 0xff, 0x03, 0x00, 0x01}, // load.w a a  
    {0x1010, &op_load,	  0,   1, 255, 0xff, 0x03, 0x00, 0x01}, // load.w a b  
    {0x1020, &op_load,	  0,   2, 255, 0xff, 0x03, 0x00, 0x01}, // load.w a c  
    {0x1030, &op_load,	  0,   3, 255, 0xff, 0x03, 0x00, 0x01}, // load.w a d  
    {0x1040, &op_load,	  0,   4, 255, 0xff, 0x03, 0x00, 0x01}, // load.w a e  
    {0x1050, &op_load,	  0,   5, 255, 0xff, 0x03, 0x00, 0x01}, // load.w a f  
    {0x1060, &op_load,	  0,   6, 255, 0xff, 0x03, 0x00, 0x01}, // load.w a g  
    {0x1070, &op_load,	  0,   7, 255, 0xff, 0x03, 0x00, 0x01}, // load.w a h  
    {0x1080, &op_load,	  0,   8, 255, 0xff, 0x03, 0x00, 0x01}, // load.w a pc  
    {0x1090, &op_load,	  0,   9, 255, 0xff, 0x03, 0x00, 0x01}, // load.w a ra  
    {0x10a0, &op_load,	  0,  10, 255, 0xff, 0x03, 0x00, 0x01}, // load.w a sb  
    {0x10b0, &op_load,	  0,  11, 255, 0xff, 0x03, 0x00, 0x01}, // load.w a sp  
    {0x10c0, &op_load,	  0,  12, 255, 0xff, 0x03, 0x00, 0x01}, // load.w a db  
    {0x10d0, &op_load,	  0,  13, 255, 0xff, 0x03, 0x00, 0x01}, // load.w a cb  
    {0x10e0, &op_load,	  0,  14, 255, 0xff, 0x03, 0x00, 0x01}, // load.w a pi  
    {0x10f0, &op_load,	  0,  15, 255, 0xff, 0x03, 0x00, 0x01}, // load.w a status  
    {0x1001, &op_load,	  1,   0, 255, 0xff, 0x03, 0x00, 0x01}, // load.w b a  
    {0x1011, &op_load,	  1,   1, 255, 0xff, 0x03, 0x00, 0x01}, // load.w b b  
    {0x1021, &op_load,	  1,   2, 255, 0xff, 0x03, 0x00, 0x01}, // load.w b c  
    {0x1031, &op_load,	  1,   3, 255, 0xff, 0x03, 0x00, 0x01}, // load.w b d  
    {0x1041, &op_load,	  1,   4, 255, 0xff, 0x03, 0x00, 0x01}, // load.w b e  
    {0x1051, &op_load,	  1,   5, 255, 0xff, 0x03, 0x00, 0x01}, // load.w b f  
    {0x1061, &op_load,	  1,   6, 255, 0xff, 0x03, 0x00, 0x01}, // load.w b g  
    {0x1071, &op_load,	  1,   7, 255, 0xff, 0x03, 0x00, 0x01}, // load.w b h  
    {0x1081, &op_load,	  1,   8, 255, 0xff, 0x03, 0x00, 0x01}, // load.w b pc  
    {0x1091, &op_load,	  1,   9, 255, 0xff, 0x03, 0x00, 0x01}, // load.w b ra  
    {0x10a1, &op_load,	  1,  10, 255, 0xff, 0x03, 0x00, 0x01}, // load.w b sb  
    {0x10b1, &op_load,	  1,  11, 255, 0xff, 0x03, 0x00, 0x01}, // load.w b sp  
    {0x10c1, &op_load,	  1,  12, 255, 0xff, 0x03, 0x00, 0x01}, // load.w b db  
    {0x10d1, &op_load,	  1,  13, 255, 0xff, 0x03, 0x00, 0x01}, // load.w b cb  
    {0x10e1, &op_load,	  1,  14, 255, 0xff, 0x03, 0x00, 0x01}, // load.w b pi  
    {0x10f1, &op_load,	  1,  15, 255, 0xff, 0x03, 0x00, 0x01}, // load.w b status  
    {0x1002, &op_load,	  2,   0, 255, 0xff, 0x03, 0x00, 0x01}, // load.w c a  
    {0x1012, &op_load,	  2,   1, 255, 0xff, 0x03, 0x00, 0x01}, // load.w c b  
    {0x1022, &op_load,	  2,   2, 255, 0xff, 0x03, 0x00, 0x01}, // load.w c c  
    {0x1032, &op_load,	  2,   3, 255, 0xff, 0x03, 0x00, 0x01}, // load.w c d  
    {0x1042, &op_load,	  2,   4, 255, 0xff, 0x03, 0x00, 0x01}, // load.w c e  
    {0x1052, &op_load,	  2,   5, 255, 0xff, 0x03, 0x00, 0x01}, // load.w c f  
    {0x1062, &op_load,	  2,   6, 255, 0xff, 0x03, 0x00, 0x01}, // load.w c g  
    {0x1072, &op_load,	  2,   7, 255, 0xff, 0x03, 0x00, 0x01}, // load.w c h  
    {0x1082, &op_load,	  2,   8, 255, 0xff, 0x03, 0x00, 0x01}, // load.w c pc  
    {0x1092, &op_load,	  2,   9, 255, 0xff, 0x03, 0x00, 0x01}, // load.w c ra  
    {0x10a2, &op_load,	  2,  10, 255, 0xff, 0x03, 0x00, 0x01}, // load.w c sb  
    {0x10b2, &op_load,	  2,  11, 255, 0xff, 0x03, 0x00, 0x01}, // load.w c sp  
    {0x10c2, &op_load,	  2,  12, 255, 0xff, 0x03, 0x00, 0x01}, // load.w c db  
    {0x10d2, &op_load,	  2,  13, 255, 0xff, 0x03, 0x00, 0x01}, // load.w c cb  
    {0x10e2, &op_load,	  2,  14, 255, 0xff, 0x03, 0x00, 0x01}, // load.w c pi  
    {0x10f2, &op_load,	  2,  15, 255, 0xff, 0x03, 0x00, 0x01}, // load.w c status  
    {0x1003, &op_load,	  3,   0, 255, 0xff, 0x03, 0x00, 0x01}, // load.w d a  
    {0x1013, &op_load,	  3,   1, 255, 0xff, 0x03, 0x00, 0x01}, // load.w d b  
    {0x1023, &op_load,	  3,   2, 255, 0xff, 0x03, 0x00, 0x01}, // load.w d c  
    {0x1033, &op_load,	  3,   3, 255, 0xff, 0x03, 0x00, 0x01}, // load.w d d  
    {0x1043, &op_load,	  3,   4, 255, 0xff, 0x03, 0x00, 0x01}, // load.w d e  
    {0x1053, &op_load,	  3,   5, 255, 0xff, 0x03, 0x00, 0x01}, // load.w d f  
    {0x1063, &op_load,	  3,   6, 255, 0xff, 0x03, 0x00, 0x01}, // load.w d g  
    {0x1073, &op_load,	  3,   7, 255, 0xff, 0x03, 0x00, 0x01}, // load.w d h  
    {0x1083, &op_load,	  3,   8, 255, 0xff, 0x03, 0x00, 0x01}, // load.w d pc  
    {0x1093, &op_load,	  3,   9, 255, 0xff, 0x03, 0x00, 0x01}, // load.w d ra  
    {0x10a3, &op_load,	  3,  10, 255, 0xff, 0x03, 0x00, 0x01}, // load.w d sb  
    {0x10b3, &op_load,	  3,  11, 255, 0xff, 0x03, 0x00, 0x01}, // load.w d sp  
    {0x10c3, &op_load,	  3,  12, 255, 0xff, 0x03, 0x00, 0x01}, // load.w d db  
    {0x10d3, &op_load,	  3,  13, 255, 0xff, 0x03, 0x00, 0x01}, // load.w d cb  
    {0x10e3, &op_load,	  3,  14, 255, 0xff, 0x03, 0x00, 0x01}, // load.w d pi  
    {0x10f3, &op_load,	  3,  15, 255, 0xff, 0x03, 0x00, 0x01}, // load.w d status  
    {0x1004, &op_load,	  4,   0, 255, 0xff, 0x03, 0x00, 0x01}, // load.w e a  
    {0x1014, &op_load,	  4,   1, 255, 0xff, 0x03, 0x00, 0x01}, // load.w e b  
    {0x1024, &op_load,	  4,   2, 255, 0xff, 0x03, 0x00, 0x01}, // load.w e c  
    {0x1034, &op_load,	  4,   3, 255, 0xff, 0x03, 0x00, 0x01}, // load.w e d  
    {0x1044, &op_load,	  4,   4, 255, 0xff, 0x03, 0x00, 0x01}, // load.w e e  
    {0x1054, &op_load,	  4,   5, 255, 0xff, 0x03, 0x00, 0x01}, // load.w e f  
    {0x1064, &op_load,	  4,   6, 255, 0xff, 0x03, 0x00, 0x01}, // load.w e g  
    {0x1074, &op_load,	  4,   7, 255, 0xff, 0x03, 0x00, 0x01}, // load.w e h  
    {0x1084, &op_load,	  4,   8, 255, 0xff, 0x03, 0x00, 0x01}, // load.w e pc  
    {0x1094, &op_load,	  4,   9, 255, 0xff, 0x03, 0x00, 0x01}, // load.w e ra  
    {0x10a4, &op_load,	  4,  10, 255, 0xff, 0x03, 0x00, 0x01}, // load.w e sb  
    {0x10b4, &op_load,	  4,  11, 255, 0xff, 0x03, 0x00, 0x01}, // load.w e sp  
    {0x10c4, &op_load,	  4,  12, 255, 0xff, 0x03, 0x00, 0x01}, // load.w e db  
    {0x10d4, &op_load,	  4,  13, 255, 0xff, 0x03, 0x00, 0x01}, // load.w e cb  
    {0x10e4, &op_load,	  4,  14, 255, 0xff, 0x03, 0x00, 0x01}, // load.w e pi  
    {0x10f4, &op_load,	  4,  15, 255, 0xff, 0x03, 0x00, 0x01}, // load.w e status  
    {0x1005, &op_load,	  5,   0, 255, 0xff, 0x03, 0x00, 0x01}, // load.w f a  
    {0x1015, &op_load,	  5,   1, 255, 0xff, 0x03, 0x00, 0x01}, // load.w f b  
    {0x1025, &op_load,	  5,   2, 255, 0xff, 0x03, 0x00, 0x01}, // load.w f c  
    {0x1035, &op_load,	  5,   3, 255, 0xff, 0x03, 0x00, 0x01}, // load.w f d  
    {0x1045, &op_load,	  5,   4, 255, 0xff, 0x03, 0x00, 0x01}, // load.w f e  
    {0x1055, &op_load,	  5,   5, 255, 0xff, 0x03, 0x00, 0x01}, // load.w f f  
    {0x1065, &op_load,	  5,   6, 255, 0xff, 0x03, 0x00, 0x01}, // load.w f g  
    {0x1075, &op_load,	  5,   7, 255, 0xff, 0x03, 0x00, 0x01}, // load.w f h  
    {0x1085, &op_load,	  5,   8, 255, 0xff, 0x03, 0x00, 0x01}, // load.w f pc  
    {0x1095, &op_load,	  5,   9, 255, 0xff, 0x03, 0x00, 0x01}, // load.w f ra  
    {0x10a5, &op_load,	  5,  10, 255, 0xff, 0x03, 0x00, 0x01}, // load.w f sb  
    {0x10b5, &op_load,	  5,  11, 255, 0xff, 0x03, 0x00, 0x01}, // load.w f sp  
    {0x10c5, &op_load,	  5,  12, 255, 0xff, 0x03, 0x00, 0x01}, // load.w f db  
    {0x10d5, &op_load,	  5,  13, 255, 0xff, 0x03, 0x00, 0x01}, // load.w f cb  
    {0x10e5, &op_load,	  5,  14, 255, 0xff, 0x03, 0x00, 0x01}, // load.w f pi  
    {0x10f5, &op_load,	  5,  15, 255, 0xff, 0x03, 0x00, 0x01}, // load.w f status  
    {0x1006, &op_load,	  6,   0, 255, 0xff, 0x03, 0x00, 0x01}, // load.w g a  
    {0x1016, &op_load,	  6,   1, 255, 0xff, 0x03, 0x00, 0x01}, // load.w g b  
    {0x1026, &op_load,	  6,   2, 255, 0xff, 0x03, 0x00, 0x01}, // load.w g c  
    {0x1036, &op_load,	  6,   3, 255, 0xff, 0x03, 0x00, 0x01}, // load.w g d  
    {0x1046, &op_load,	  6,   4, 255, 0xff, 0x03, 0x00, 0x01}, // load.w g e  
    {0x1056, &op_load,	  6,   5, 255, 0xff, 0x03, 0x00, 0x01}, // load.w g f  
    {0x1066, &op_load,	  6,   6, 255, 0xff, 0x03, 0x00, 0x01}, // load.w g g  
    {0x1076, &op_load,	  6,   7, 255, 0xff, 0x03, 0x00, 0x01}, // load.w g h  
    {0x1086, &op_load,	  6,   8, 255, 0xff, 0x03, 0x00, 0x01}, // load.w g pc  
    {0x1096, &op_load,	  6,   9, 255, 0xff, 0x03, 0x00, 0x01}, // load.w g ra  
    {0x10a6, &op_load,	  6,  10, 255, 0xff, 0x03, 0x00, 0x01}, // load.w g sb  
    {0x10b6, &op_load,	  6,  11, 255, 0xff, 0x03, 0x00, 0x01}, // load.w g sp  
    {0x10c6, &op_load,	  6,  12, 255, 0xff, 0x03, 0x00, 0x01}, // load.w g db  
    {0x10d6, &op_load,	  6,  13, 255, 0xff, 0x03, 0x00, 0x01}, // load.w g cb  
    {0x10e6, &op_load,	  6,  14, 255, 0xff, 0x03, 0x00, 0x01}, // load.w g pi  
    {0x10f6, &op_load,	  6,  15, 255, 0xff, 0x03, 0x00, 0x01}, // load.w g status  
    {0x1007, &op_load,	  7,   0, 255, 0xff, 0x03, 0x00, 0x01}, // load.w h a  
    {0x1017, &op_load,	  7,   1, 255, 0xff, 0x03, 0x00, 0x01}, // load.w h b  
    {0x1027, &op_load,	  7,   2, 255, 0xff, 0x03, 0x00, 0x01}, // load.w h c  
    {0x1037, &op_load,	  7,   3, 255, 0xff, 0x03, 0x00, 0x01}, // load.w h d  
    {0x1047, &op_load,	  7,   4, 255, 0xff, 0x03, 0x00, 0x01}, // load.w h e  
    {0x1057, &op_load,	  7,   5, 255, 0xff, 0x03, 0x00, 0x01}, // load.w h f  
    {0x1067, &op_load,	  7,   6, 255, 0xff, 0x03, 0x00, 0x01}, // load.w h g  
    {0x1077, &op_load,	  7,   7, 255, 0xff, 0x03, 0x00, 0x01}, // load.w h h  
    {0x1087, &op_load,	  7,   8, 255, 0xff, 0x03, 0x00, 0x01}, // load.w h pc  
    {0x1097, &op_load,	  7,   9, 255, 0xff, 0x03, 0x00, 0x01}, // load.w h ra  
    {0x10a7, &op_load,	  7,  10, 255, 0xff, 0x03, 0x00, 0x01}, // load.w h sb  
    {0x10b7, &op_load,	  7,  11, 255, 0xff, 0x03, 0x00, 0x01}, // load.w h sp  
    {0x10c7, &op_load,	  7,  12, 255, 0xff, 0x03, 0x00, 0x01}, // load.w h db  
    {0x10d7, &op_load,	  7,  13, 255, 0xff, 0x03, 0x00, 0x01}, // load.w h cb  
    {0x10e7, &op_load,	  7,  14, 255, 0xff, 0x03, 0x00, 0x01}, // load.w h pi  
    {0x10f7, &op_load,	  7,  15, 255, 0xff, 0x03, 0x00, 0x01}, // load.w h status  
    {0x1008, &op_load,	  8,   0, 255, 0xff, 0x03, 0x00, 0x01}, // load.w pc a  
    {0x1018, &op_load,	  8,   1, 255, 0xff, 0x03, 0x00, 0x01}, // load.w pc b  
    {0x1028, &op_load,	  8,   2, 255, 0xff, 0x03, 0x00, 0x01}, // load.w pc c  
    {0x1038, &op_load,	  8,   3, 255, 0xff, 0x03, 0x00, 0x01}, // load.w pc d  
    {0x1048, &op_load,	  8,   4, 255, 0xff, 0x03, 0x00, 0x01}, // load.w pc e  
    {0x1058, &op_load,	  8,   5, 255, 0xff, 0x03, 0x00, 0x01}, // load.w pc f  
    {0x1068, &op_load,	  8,   6, 255, 0xff, 0x03, 0x00, 0x01}, // load.w pc g  
    {0x1078, &op_load,	  8,   7, 255, 0xff, 0x03, 0x00, 0x01}, // load.w pc h  
    {0x1088, &op_load,	  8,   8, 255, 0xff, 0x03, 0x00, 0x01}, // load.w pc pc  
    {0x1098, &op_load,	  8,   9, 255, 0xff, 0x03, 0x00, 0x01}, // load.w pc ra  
    {0x10a8, &op_load,	  8,  10, 255, 0xff, 0x03, 0x00, 0x01}, // load.w pc sb  
    {0x10b8, &op_load,	  8,  11, 255, 0xff, 0x03, 0x00, 0x01}, // load.w pc sp  
    {0x10c8, &op_load,	  8,  12, 255, 0xff, 0x03, 0x00, 0x01}, // load.w pc db  
    {0x10d8, &op_load,	  8,  13, 255, 0xff, 0x03, 0x00, 0x01}, // load.w pc cb  
    {0x10e8, &op_load,	  8,  14, 255, 0xff, 0x03, 0x00, 0x01}, // load.w pc pi  
    {0x10f8, &op_load,	  8,  15, 255, 0xff, 0x03, 0x00, 0x01}, // load.w pc status  
    {0x1009, &op_load,	  9,   0, 255, 0xff, 0x03, 0x00, 0x01}, // load.w ra a  
    {0x1019, &op_load,	  9,   1, 255, 0xff, 0x03, 0x00, 0x01}, // load.w ra b  
    {0x1029, &op_load,	  9,   2, 255, 0xff, 0x03, 0x00, 0x01}, // load.w ra c  
    {0x1039, &op_load,	  9,   3, 255, 0xff, 0x03, 0x00, 0x01}, // load.w ra d  
    {0x1049, &op_load,	  9,   4, 255, 0xff, 0x03, 0x00, 0x01}, // load.w ra e  
    {0x1059, &op_load,	  9,   5, 255, 0xff, 0x03, 0x00, 0x01}, // load.w ra f  
    {0x1069, &op_load,	  9,   6, 255, 0xff, 0x03, 0x00, 0x01}, // load.w ra g  
    {0x1079, &op_load,	  9,   7, 255, 0xff, 0x03, 0x00, 0x01}, // load.w ra h  
    {0x1089, &op_load,	  9,   8, 255, 0xff, 0x03, 0x00, 0x01}, // load.w ra pc  
    {0x1099, &op_load,	  9,   9, 255, 0xff, 0x03, 0x00, 0x01}, // load.w ra ra  
    {0x10a9, &op_load,	  9,  10, 255, 0xff, 0x03, 0x00, 0x01}, // load.w ra sb  
    {0x10b9, &op_load,	  9,  11, 255, 0xff, 0x03, 0x00, 0x01}, // load.w ra sp  
    {0x10c9, &op_load,	  9,  12, 255, 0xff, 0x03, 0x00, 0x01}, // load.w ra db  
    {0x10d9, &op_load,	  9,  13, 255, 0xff, 0x03, 0x00, 0x01}, // load.w ra cb  
    {0x10e9, &op_load,	  9,  14, 255, 0xff, 0x03, 0x00, 0x01}, // load.w ra pi  
    {0x10f9, &op_load,	  9,  15, 255, 0xff, 0x03, 0x00, 0x01}, // load.w ra status  
    {0x100a, &op_load,	 10,   0, 255, 0xff, 0x03, 0x00, 0x01}, // load.w sb a  
    {0x101a, &op_load,	 10,   1, 255, 0xff, 0x03, 0x00, 0x01}, // load.w sb b  
    {0x102a, &op_load,	 10,   2, 255, 0xff, 0x03, 0x00, 0x01}, // load.w sb c  
    {0x103a, &op_load,	 10,   3, 255, 0xff, 0x03, 0x00, 0x01}, // load.w sb d  
    {0x104a, &op_load,	 10,   4, 255, 0xff, 0x03, 0x00, 0x01}, // load.w sb e  
    {0x105a, &op_load,	 10,   5, 255, 0xff, 0x03, 0x00, 0x01}, // load.w sb f  
    {0x106a, &op_load,	 10,   6, 255, 0xff, 0x03, 0x00, 0x01}, // load.w sb g  
    {0x107a, &op_load,	 10,   7, 255, 0xff, 0x03, 0x00, 0x01}, // load.w sb h  
    {0x108a, &op_load,	 10,   8, 255, 0xff, 0x03, 0x00, 0x01}, // load.w sb pc  
    {0x109a, &op_load,	 10,   9, 255, 0xff, 0x03, 0x00, 0x01}, // load.w sb ra  
    {0x10aa, &op_load,	 10,  10, 255, 0xff, 0x03, 0x00, 0x01}, // load.w sb sb  
    {0x10ba, &op_load,	 10,  11, 255, 0xff, 0x03, 0x00, 0x01}, // load.w sb sp  
    {0x10ca, &op_load,	 10,  12, 255, 0xff, 0x03, 0x00, 0x01}, // load.w sb db  
    {0x10da, &op_load,	 10,  13, 255, 0xff, 0x03, 0x00, 0x01}, // load.w sb cb  
    {0x10ea, &op_load,	 10,  14, 255, 0xff, 0x03, 0x00, 0x01}, // load.w sb pi  
    {0x10fa, &op_load,	 10,  15, 255, 0xff, 0x03, 0x00, 0x01}, // load.w sb status  
    {0x100b, &op_load,	 11,   0, 255, 0xff, 0x03, 0x00, 0x01}, // load.w sp a  
    {0x101b, &op_load,	 11,   1, 255, 0xff, 0x03, 0x00, 0x01}, // load.w sp b  
    {0x102b, &op_load,	 11,   2, 255, 0xff, 0x03, 0x00, 0x01}, // load.w sp c  
    {0x103b, &op_load,	 11,   3, 255, 0xff, 0x03, 0x00, 0x01}, // load.w sp d  
    {0x104b, &op_load,	 11,   4, 255, 0xff, 0x03, 0x00, 0x01}, // load.w sp e  
    {0x105b, &op_load,	 11,   5, 255, 0xff, 0x03, 0x00, 0x01}, // load.w sp f  
    {0x106b, &op_load,	 11,   6, 255, 0xff, 0x03, 0x00, 0x01}, // load.w sp g  
    {0x107b, &op_load,	 11,   7, 255, 0xff, 0x03, 0x00, 0x01}, // load.w sp h  
    {0x108b, &op_load,	 11,   8, 255, 0xff, 0x03, 0x00, 0x01}, // load.w sp pc  
    {0x109b, &op_load,	 11,   9, 255, 0xff, 0x03, 0x00, 0x01}, // load.w sp ra  
    {0x10ab, &op_load,	 11,  10, 255, 0xff, 0x03, 0x00, 0x01}, // load.w sp sb  
    {0x10bb, &op_load,	 11,  11, 255, 0xff, 0x03, 0x00, 0x01}, // load.w sp sp  
    {0x10cb, &op_load,	 11,  12, 255, 0xff, 0x03, 0x00, 0x01}, // load.w sp db  
    {0x10db, &op_load,	 11,  13, 255, 0xff, 0x03, 0x00, 0x01}, // load.w sp cb  
    {0x10eb, &op_load,	 11,  14, 255, 0xff, 0x03, 0x00, 0x01}, // load.w sp pi  
    {0x10fb, &op_load,	 11,  15, 255, 0xff, 0x03, 0x00, 0x01}, // load.w sp status  
    {0x100c, &op_load,	 12,   0, 255, 0xff, 0x03, 0x00, 0x01}, // load.w db a  
    {0x101c, &op_load,	 12,   1, 255, 0xff, 0x03, 0x00, 0x01}, // load.w db b  
    {0x102c, &op_load,	 12,   2, 255, 0xff, 0x03, 0x00, 0x01}, // load.w db c  
    {0x103c, &op_load,	 12,   3, 255, 0xff, 0x03, 0x00, 0x01}, // load.w db d  
    {0x104c, &op_load,	 12,   4, 255, 0xff, 0x03, 0x00, 0x01}, // load.w db e  
    {0x105c, &op_load,	 12,   5, 255, 0xff, 0x03, 0x00, 0x01}, // load.w db f  
    {0x106c, &op_load,	 12,   6, 255, 0xff, 0x03, 0x00, 0x01}, // load.w db g  
    {0x107c, &op_load,	 12,   7, 255, 0xff, 0x03, 0x00, 0x01}, // load.w db h  
    {0x108c, &op_load,	 12,   8, 255, 0xff, 0x03, 0x00, 0x01}, // load.w db pc  
    {0x109c, &op_load,	 12,   9, 255, 0xff, 0x03, 0x00, 0x01}, // load.w db ra  
    {0x10ac, &op_load,	 12,  10, 255, 0xff, 0x03, 0x00, 0x01}, // load.w db sb  
    {0x10bc, &op_load,	 12,  11, 255, 0xff, 0x03, 0x00, 0x01}, // load.w db sp  
    {0x10cc, &op_load,	 12,  12, 255, 0xff, 0x03, 0x00, 0x01}, // load.w db db  
    {0x10dc, &op_load,	 12,  13, 255, 0xff, 0x03, 0x00, 0x01}, // load.w db cb  
    {0x10ec, &op_load,	 12,  14, 255, 0xff, 0x03, 0x00, 0x01}, // load.w db pi  
    {0x10fc, &op_load,	 12,  15, 255, 0xff, 0x03, 0x00, 0x01}, // load.w db status  
    {0x100d, &op_load,	 13,   0, 255, 0xff, 0x03, 0x00, 0x01}, // load.w cb a  
    {0x101d, &op_load,	 13,   1, 255, 0xff, 0x03, 0x00, 0x01}, // load.w cb b  
    {0x102d, &op_load,	 13,   2, 255, 0xff, 0x03, 0x00, 0x01}, // load.w cb c  
    {0x103d, &op_load,	 13,   3, 255, 0xff, 0x03, 0x00, 0x01}, // load.w cb d  
    {0x104d, &op_load,	 13,   4, 255, 0xff, 0x03, 0x00, 0x01}, // load.w cb e  
    {0x105d, &op_load,	 13,   5, 255, 0xff, 0x03, 0x00, 0x01}, // load.w cb f  
    {0x106d, &op_load,	 13,   6, 255, 0xff, 0x03, 0x00, 0x01}, // load.w cb g  
    {0x107d, &op_load,	 13,   7, 255, 0xff, 0x03, 0x00, 0x01}, // load.w cb h  
    {0x108d, &op_load,	 13,   8, 255, 0xff, 0x03, 0x00, 0x01}, // load.w cb pc  
    {0x109d, &op_load,	 13,   9, 255, 0xff, 0x03, 0x00, 0x01}, // load.w cb ra  
    {0x10ad, &op_load,	 13,  10, 255, 0xff, 0x03, 0x00, 0x01}, // load.w cb sb  
    {0x10bd, &op_load,	 13,  11, 255, 0xff, 0x03, 0x00, 0x01}, // load.w cb sp  
    {0x10cd, &op_load,	 13,  12, 255, 0xff, 0x03, 0x00, 0x01}, // load.w cb db  
    {0x10dd, &op_load,	 13,  13, 255, 0xff, 0x03, 0x00, 0x01}, // load.w cb cb  
    {0x10ed, &op_load,	 13,  14, 255, 0xff, 0x03, 0x00, 0x01}, // load.w cb pi  
    {0x10fd, &op_load,	 13,  15, 255, 0xff, 0x03, 0x00, 0x01}, // load.w cb status  
    {0x100e, &op_load,	 14,   0, 255, 0xff, 0x03, 0x00, 0x01}, // load.w pi a  
    {0x101e, &op_load,	 14,   1, 255, 0xff, 0x03, 0x00, 0x01}, // load.w pi b  
    {0x102e, &op_load,	 14,   2, 255, 0xff, 0x03, 0x00, 0x01}, // load.w pi c  
    {0x103e, &op_load,	 14,   3, 255, 0xff, 0x03, 0x00, 0x01}, // load.w pi d  
    {0x104e, &op_load,	 14,   4, 255, 0xff, 0x03, 0x00, 0x01}, // load.w pi e  
    {0x105e, &op_load,	 14,   5, 255, 0xff, 0x03, 0x00, 0x01}, // load.w pi f  
    {0x106e, &op_load,	 14,   6, 255, 0xff, 0x03, 0x00, 0x01}, // load.w pi g  
    {0x107e, &op_load,	 14,   7, 255, 0xff, 0x03, 0x00, 0x01}, // load.w pi h  
    {0x108e, &op_load,	 14,   8, 255, 0xff, 0x03, 0x00, 0x01}, // load.w pi pc  
    {0x109e, &op_load,	 14,   9, 255, 0xff, 0x03, 0x00, 0x01}, // load.w pi ra  
    {0x10ae, &op_load,	 14,  10, 255, 0xff, 0x03, 0x00, 0x01}, // load.w pi sb  
    {0x10be, &op_load,	 14,  11, 255, 0xff, 0x03, 0x00, 0x01}, // load.w pi sp  
    {0x10ce, &op_load,	 14,  12, 255, 0xff, 0x03, 0x00, 0x01}, // load.w pi db  
    {0x10de, &op_load,	 14,  13, 255, 0xff, 0x03, 0x00, 0x01}, // load.w pi cb  
    {0x10ee, &op_load,	 14,  14, 255, 0xff, 0x03, 0x00, 0x01}, // load.w pi pi  
    {0x10fe, &op_load,	 14,  15, 255, 0xff, 0x03, 0x00, 0x01}, // load.w pi status  
    {0x100f, &op_load,	 15,   0, 255, 0xff, 0x03, 0x00, 0x01}, // load.w status a  
    {0x101f, &op_load,	 15,   1, 255, 0xff, 0x03, 0x00, 0x01}, // load.w status b  
    {0x102f, &op_load,	 15,   2, 255, 0xff, 0x03, 0x00, 0x01}, // load.w status c  
    {0x103f, &op_load,	 15,   3, 255, 0xff, 0x03, 0x00, 0x01}, // load.w status d  
    {0x104f, &op_load,	 15,   4, 255, 0xff, 0x03, 0x00, 0x01}, // load.w status e  
    {0x105f, &op_load,	 15,   5, 255, 0xff, 0x03, 0x00, 0x01}, // load.w status f  
    {0x106f, &op_load,	 15,   6, 255, 0xff, 0x03, 0x00, 0x01}, // load.w status g  
    {0x107f, &op_load,	 15,   7, 255, 0xff, 0x03, 0x00, 0x01}, // load.w status h  
    {0x108f, &op_load,	 15,   8, 255, 0xff, 0x03, 0x00, 0x01}, // load.w status pc  
    {0x109f, &op_load,	 15,   9, 255, 0xff, 0x03, 0x00, 0x01}, // load.w status ra  
    {0x10af, &op_load,	 15,  10, 255, 0xff, 0x03, 0x00, 0x01}, // load.w status sb  
    {0x10bf, &op_load,	 15,  11, 255, 0xff, 0x03, 0x00, 0x01}, // load.w status sp  
    {0x10cf, &op_load,	 15,  12, 255, 0xff, 0x03, 0x00, 0x01}, // load.w status db  
    {0x10df, &op_load,	 15,  13, 255, 0xff, 0x03, 0x00, 0x01}, // load.w status cb  
    {0x10ef, &op_load,	 15,  14, 255, 0xff, 0x03, 0x00, 0x01}, // load.w status pi  
    {0x10ff, &op_load,	 15,  15, 255, 0xff, 0x03, 0x00, 0x01}, // load.w status status  
    {0x1100, &op_load,	  0,   0, 255, 0xff, 0x03, 0x00, 0x02}, // load.d a a  
    {0x1110, &op_load,	  0,   1, 255, 0xff, 0x03, 0x00, 0x02}, // load.d a b  
    {0x1120, &op_load,	  0,   2, 255, 0xff, 0x03, 0x00, 0x02}, // load.d a c  
    {0x1130, &op_load,	  0,   3, 255, 0xff, 0x03, 0x00, 0x02}, // load.d a d  
    {0x1140, &op_load,	  0,   4, 255, 0xff, 0x03, 0x00, 0x02}, // load.d a e  
    {0x1150, &op_load,	  0,   5, 255, 0xff, 0x03, 0x00, 0x02}, // load.d a f  
    {0x1160, &op_load,	  0,   6, 255, 0xff, 0x03, 0x00, 0x02}, // load.d a g  
    {0x1170, &op_load,	  0,   7, 255, 0xff, 0x03, 0x00, 0x02}, // load.d a h  
    {0x1180, &op_load,	  0,   8, 255, 0xff, 0x03, 0x00, 0x02}, // load.d a pc  
    {0x1190, &op_load,	  0,   9, 255, 0xff, 0x03, 0x00, 0x02}, // load.d a ra  
    {0x11a0, &op_load,	  0,  10, 255, 0xff, 0x03, 0x00, 0x02}, // load.d a sb  
    {0x11b0, &op_load,	  0,  11, 255, 0xff, 0x03, 0x00, 0x02}, // load.d a sp  
    {0x11c0, &op_load,	  0,  12, 255, 0xff, 0x03, 0x00, 0x02}, // load.d a db  
    {0x11d0, &op_load,	  0,  13, 255, 0xff, 0x03, 0x00, 0x02}, // load.d a cb  
    {0x11e0, &op_load,	  0,  14, 255, 0xff, 0x03, 0x00, 0x02}, // load.d a pi  
    {0x11f0, &op_load,	  0,  15, 255, 0xff, 0x03, 0x00, 0x02}, // load.d a status  
    {0x1101, &op_load,	  1,   0, 255, 0xff, 0x03, 0x00, 0x02}, // load.d b a  
    {0x1111, &op_load,	  1,   1, 255, 0xff, 0x03, 0x00, 0x02}, // load.d b b  
    {0x1121, &op_load,	  1,   2, 255, 0xff, 0x03, 0x00, 0x02}, // load.d b c  
    {0x1131, &op_load,	  1,   3, 255, 0xff, 0x03, 0x00, 0x02}, // load.d b d  
    {0x1141, &op_load,	  1,   4, 255, 0xff, 0x03, 0x00, 0x02}, // load.d b e  
    {0x1151, &op_load,	  1,   5, 255, 0xff, 0x03, 0x00, 0x02}, // load.d b f  
    {0x1161, &op_load,	  1,   6, 255, 0xff, 0x03, 0x00, 0x02}, // load.d b g  
    {0x1171, &op_load,	  1,   7, 255, 0xff, 0x03, 0x00, 0x02}, // load.d b h  
    {0x1181, &op_load,	  1,   8, 255, 0xff, 0x03, 0x00, 0x02}, // load.d b pc  
    {0x1191, &op_load,	  1,   9, 255, 0xff, 0x03, 0x00, 0x02}, // load.d b ra  
    {0x11a1, &op_load,	  1,  10, 255, 0xff, 0x03, 0x00, 0x02}, // load.d b sb  
    {0x11b1, &op_load,	  1,  11, 255, 0xff, 0x03, 0x00, 0x02}, // load.d b sp  
    {0x11c1, &op_load,	  1,  12, 255, 0xff, 0x03, 0x00, 0x02}, // load.d b db  
    {0x11d1, &op_load,	  1,  13, 255, 0xff, 0x03, 0x00, 0x02}, // load.d b cb  
    {0x11e1, &op_load,	  1,  14, 255, 0xff, 0x03, 0x00, 0x02}, // load.d b pi  
    {0x11f1, &op_load,	  1,  15, 255, 0xff, 0x03, 0x00, 0x02}, // load.d b status  
    {0x1102, &op_load,	  2,   0, 255, 0xff, 0x03, 0x00, 0x02}, // load.d c a  
    {0x1112, &op_load,	  2,   1, 255, 0xff, 0x03, 0x00, 0x02}, // load.d c b  
    {0x1122, &op_load,	  2,   2, 255, 0xff, 0x03, 0x00, 0x02}, // load.d c c  
    {0x1132, &op_load,	  2,   3, 255, 0xff, 0x03, 0x00, 0x02}, // load.d c d  
    {0x1142, &op_load,	  2,   4, 255, 0xff, 0x03, 0x00, 0x02}, // load.d c e  
    {0x1152, &op_load,	  2,   5, 255, 0xff, 0x03, 0x00, 0x02}, // load.d c f  
    {0x1162, &op_load,	  2,   6, 255, 0xff, 0x03, 0x00, 0x02}, // load.d c g  
    {0x1172, &op_load,	  2,   7, 255, 0xff, 0x03, 0x00, 0x02}, // load.d c h  
    {0x1182, &op_load,	  2,   8, 255, 0xff, 0x03, 0x00, 0x02}, // load.d c pc  
    {0x1192, &op_load,	  2,   9, 255, 0xff, 0x03, 0x00, 0x02}, // load.d c ra  
    {0x11a2, &op_load,	  2,  10, 255, 0xff, 0x03, 0x00, 0x02}, // load.d c sb  
    {0x11b2, &op_load,	  2,  11, 255, 0xff, 0x03, 0x00, 0x02}, // load.d c sp  
    {0x11c2, &op_load,	  2,  12, 255, 0xff, 0x03, 0x00, 0x02}, // load.d c db  
    {0x11d2, &op_load,	  2,  13, 255, 0xff, 0x03, 0x00, 0x02}, // load.d c cb  
    {0x11e2, &op_load,	  2,  14, 255, 0xff, 0x03, 0x00, 0x02}, // load.d c pi  
    {0x11f2, &op_load,	  2,  15, 255, 0xff, 0x03, 0x00, 0x02}, // load.d c status  
    {0x1103, &op_load,	  3,   0, 255, 0xff, 0x03, 0x00, 0x02}, // load.d d a  
    {0x1113, &op_load,	  3,   1, 255, 0xff, 0x03, 0x00, 0x02}, // load.d d b  
    {0x1123, &op_load,	  3,   2, 255, 0xff, 0x03, 0x00, 0x02}, // load.d d c  
    {0x1133, &op_load,	  3,   3, 255, 0xff, 0x03, 0x00, 0x02}, // load.d d d  
    {0x1143, &op_load,	  3,   4, 255, 0xff, 0x03, 0x00, 0x02}, // load.d d e  
    {0x1153, &op_load,	  3,   5, 255, 0xff, 0x03, 0x00, 0x02}, // load.d d f  
    {0x1163, &op_load,	  3,   6, 255, 0xff, 0x03, 0x00, 0x02}, // load.d d g  
    {0x1173, &op_load,	  3,   7, 255, 0xff, 0x03, 0x00, 0x02}, // load.d d h  
    {0x1183, &op_load,	  3,   8, 255, 0xff, 0x03, 0x00, 0x02}, // load.d d pc  
    {0x1193, &op_load,	  3,   9, 255, 0xff, 0x03, 0x00, 0x02}, // load.d d ra  
    {0x11a3, &op_load,	  3,  10, 255, 0xff, 0x03, 0x00, 0x02}, // load.d d sb  
    {0x11b3, &op_load,	  3,  11, 255, 0xff, 0x03, 0x00, 0x02}, // load.d d sp  
    {0x11c3, &op_load,	  3,  12, 255, 0xff, 0x03, 0x00, 0x02}, // load.d d db  
    {0x11d3, &op_load,	  3,  13, 255, 0xff, 0x03, 0x00, 0x02}, // load.d d cb  
    {0x11e3, &op_load,	  3,  14, 255, 0xff, 0x03, 0x00, 0x02}, // load.d d pi  
    {0x11f3, &op_load,	  3,  15, 255, 0xff, 0x03, 0x00, 0x02}, // load.d d status  
    {0x1104, &op_load,	  4,   0, 255, 0xff, 0x03, 0x00, 0x02}, // load.d e a  
    {0x1114, &op_load,	  4,   1, 255, 0xff, 0x03, 0x00, 0x02}, // load.d e b  
    {0x1124, &op_load,	  4,   2, 255, 0xff, 0x03, 0x00, 0x02}, // load.d e c  
    {0x1134, &op_load,	  4,   3, 255, 0xff, 0x03, 0x00, 0x02}, // load.d e d  
    {0x1144, &op_load,	  4,   4, 255, 0xff, 0x03, 0x00, 0x02}, // load.d e e  
    {0x1154, &op_load,	  4,   5, 255, 0xff, 0x03, 0x00, 0x02}, // load.d e f  
    {0x1164, &op_load,	  4,   6, 255, 0xff, 0x03, 0x00, 0x02}, // load.d e g  
    {0x1174, &op_load,	  4,   7, 255, 0xff, 0x03, 0x00, 0x02}, // load.d e h  
    {0x1184, &op_load,	  4,   8, 255, 0xff, 0x03, 0x00, 0x02}, // load.d e pc  
    {0x1194, &op_load,	  4,   9, 255, 0xff, 0x03, 0x00, 0x02}, // load.d e ra  
    {0x11a4, &op_load,	  4,  10, 255, 0xff, 0x03, 0x00, 0x02}, // load.d e sb  
    {0x11b4, &op_load,	  4,  11, 255, 0xff, 0x03, 0x00, 0x02}, // load.d e sp  
    {0x11c4, &op_load,	  4,  12, 255, 0xff, 0x03, 0x00, 0x02}, // load.d e db  
    {0x11d4, &op_load,	  4,  13, 255, 0xff, 0x03, 0x00, 0x02}, // load.d e cb  
    {0x11e4, &op_load,	  4,  14, 255, 0xff, 0x03, 0x00, 0x02}, // load.d e pi  
    {0x11f4, &op_load,	  4,  15, 255, 0xff, 0x03, 0x00, 0x02}, // load.d e status  
    {0x1105, &op_load,	  5,   0, 255, 0xff, 0x03, 0x00, 0x02}, // load.d f a  
    {0x1115, &op_load,	  5,   1, 255, 0xff, 0x03, 0x00, 0x02}, // load.d f b  
    {0x1125, &op_load,	  5,   2, 255, 0xff, 0x03, 0x00, 0x02}, // load.d f c  
    {0x1135, &op_load,	  5,   3, 255, 0xff, 0x03, 0x00, 0x02}, // load.d f d  
    {0x1145, &op_load,	  5,   4, 255, 0xff, 0x03, 0x00, 0x02}, // load.d f e  
    {0x1155, &op_load,	  5,   5, 255, 0xff, 0x03, 0x00, 0x02}, // load.d f f  
    {0x1165, &op_load,	  5,   6, 255, 0xff, 0x03, 0x00, 0x02}, // load.d f g  
    {0x1175, &op_load,	  5,   7, 255, 0xff, 0x03, 0x00, 0x02}, // load.d f h  
    {0x1185, &op_load,	  5,   8, 255, 0xff, 0x03, 0x00, 0x02}, // load.d f pc  
    {0x1195, &op_load,	  5,   9, 255, 0xff, 0x03, 0x00, 0x02}, // load.d f ra  
    {0x11a5, &op_load,	  5,  10, 255, 0xff, 0x03, 0x00, 0x02}, // load.d f sb  
    {0x11b5, &op_load,	  5,  11, 255, 0xff, 0x03, 0x00, 0x02}, // load.d f sp  
    {0x11c5, &op_load,	  5,  12, 255, 0xff, 0x03, 0x00, 0x02}, // load.d f db  
    {0x11d5, &op_load,	  5,  13, 255, 0xff, 0x03, 0x00, 0x02}, // load.d f cb  
    {0x11e5, &op_load,	  5,  14, 255, 0xff, 0x03, 0x00, 0x02}, // load.d f pi  
    {0x11f5, &op_load,	  5,  15, 255, 0xff, 0x03, 0x00, 0x02}, // load.d f status  
    {0x1106, &op_load,	  6,   0, 255, 0xff, 0x03, 0x00, 0x02}, // load.d g a  
    {0x1116, &op_load,	  6,   1, 255, 0xff, 0x03, 0x00, 0x02}, // load.d g b  
    {0x1126, &op_load,	  6,   2, 255, 0xff, 0x03, 0x00, 0x02}, // load.d g c  
    {0x1136, &op_load,	  6,   3, 255, 0xff, 0x03, 0x00, 0x02}, // load.d g d  
    {0x1146, &op_load,	  6,   4, 255, 0xff, 0x03, 0x00, 0x02}, // load.d g e  
    {0x1156, &op_load,	  6,   5, 255, 0xff, 0x03, 0x00, 0x02}, // load.d g f  
    {0x1166, &op_load,	  6,   6, 255, 0xff, 0x03, 0x00, 0x02}, // load.d g g  
    {0x1176, &op_load,	  6,   7, 255, 0xff, 0x03, 0x00, 0x02}, // load.d g h  
    {0x1186, &op_load,	  6,   8, 255, 0xff, 0x03, 0x00, 0x02}, // load.d g pc  
    {0x1196, &op_load,	  6,   9, 255, 0xff, 0x03, 0x00, 0x02}, // load.d g ra  
    {0x11a6, &op_load,	  6,  10, 255, 0xff, 0x03, 0x00, 0x02}, // load.d g sb  
    {0x11b6, &op_load,	  6,  11, 255, 0xff, 0x03, 0x00, 0x02}, // load.d g sp  
    {0x11c6, &op_load,	  6,  12, 255, 0xff, 0x03, 0x00, 0x02}, // load.d g db  
    {0x11d6, &op_load,	  6,  13, 255, 0xff, 0x03, 0x00, 0x02}, // load.d g cb  
    {0x11e6, &op_load,	  6,  14, 255, 0xff, 0x03, 0x00, 0x02}, // load.d g pi  
    {0x11f6, &op_load,	  6,  15, 255, 0xff, 0x03, 0x00, 0x02}, // load.d g status  
    {0x1107, &op_load,	  7,   0, 255, 0xff, 0x03, 0x00, 0x02}, // load.d h a  
    {0x1117, &op_load,	  7,   1, 255, 0xff, 0x03, 0x00, 0x02}, // load.d h b  
    {0x1127, &op_load,	  7,   2, 255, 0xff, 0x03, 0x00, 0x02}, // load.d h c  
    {0x1137, &op_load,	  7,   3, 255, 0xff, 0x03, 0x00, 0x02}, // load.d h d  
    {0x1147, &op_load,	  7,   4, 255, 0xff, 0x03, 0x00, 0x02}, // load.d h e  
    {0x1157, &op_load,	  7,   5, 255, 0xff, 0x03, 0x00, 0x02}, // load.d h f  
    {0x1167, &op_load,	  7,   6, 255, 0xff, 0x03, 0x00, 0x02}, // load.d h g  
    {0x1177, &op_load,	  7,   7, 255, 0xff, 0x03, 0x00, 0x02}, // load.d h h  
    {0x1187, &op_load,	  7,   8, 255, 0xff, 0x03, 0x00, 0x02}, // load.d h pc  
    {0x1197, &op_load,	  7,   9, 255, 0xff, 0x03, 0x00, 0x02}, // load.d h ra  
    {0x11a7, &op_load,	  7,  10, 255, 0xff, 0x03, 0x00, 0x02}, // load.d h sb  
    {0x11b7, &op_load,	  7,  11, 255, 0xff, 0x03, 0x00, 0x02}, // load.d h sp  
    {0x11c7, &op_load,	  7,  12, 255, 0xff, 0x03, 0x00, 0x02}, // load.d h db  
    {0x11d7, &op_load,	  7,  13, 255, 0xff, 0x03, 0x00, 0x02}, // load.d h cb  
    {0x11e7, &op_load,	  7,  14, 255, 0xff, 0x03, 0x00, 0x02}, // load.d h pi  
    {0x11f7, &op_load,	  7,  15, 255, 0xff, 0x03, 0x00, 0x02}, // load.d h status  
    {0x1108, &op_load,	  8,   0, 255, 0xff, 0x03, 0x00, 0x02}, // load.d pc a  
    {0x1118, &op_load,	  8,   1, 255, 0xff, 0x03, 0x00, 0x02}, // load.d pc b  
    {0x1128, &op_load,	  8,   2, 255, 0xff, 0x03, 0x00, 0x02}, // load.d pc c  
    {0x1138, &op_load,	  8,   3, 255, 0xff, 0x03, 0x00, 0x02}, // load.d pc d  
    {0x1148, &op_load,	  8,   4, 255, 0xff, 0x03, 0x00, 0x02}, // load.d pc e  
    {0x1158, &op_load,	  8,   5, 255, 0xff, 0x03, 0x00, 0x02}, // load.d pc f  
    {0x1168, &op_load,	  8,   6, 255, 0xff, 0x03, 0x00, 0x02}, // load.d pc g  
    {0x1178, &op_load,	  8,   7, 255, 0xff, 0x03, 0x00, 0x02}, // load.d pc h  
    {0x1188, &op_load,	  8,   8, 255, 0xff, 0x03, 0x00, 0x02}, // load.d pc pc  
    {0x1198, &op_load,	  8,   9, 255, 0xff, 0x03, 0x00, 0x02}, // load.d pc ra  
    {0x11a8, &op_load,	  8,  10, 255, 0xff, 0x03, 0x00, 0x02}, // load.d pc sb  
    {0x11b8, &op_load,	  8,  11, 255, 0xff, 0x03, 0x00, 0x02}, // load.d pc sp  
    {0x11c8, &op_load,	  8,  12, 255, 0xff, 0x03, 0x00, 0x02}, // load.d pc db  
    {0x11d8, &op_load,	  8,  13, 255, 0xff, 0x03, 0x00, 0x02}, // load.d pc cb  
    {0x11e8, &op_load,	  8,  14, 255, 0xff, 0x03, 0x00, 0x02}, // load.d pc pi  
    {0x11f8, &op_load,	  8,  15, 255, 0xff, 0x03, 0x00, 0x02}, // load.d pc status  
    {0x1109, &op_load,	  9,   0, 255, 0xff, 0x03, 0x00, 0x02}, // load.d ra a  
    {0x1119, &op_load,	  9,   1, 255, 0xff, 0x03, 0x00, 0x02}, // load.d ra b  
    {0x1129, &op_load,	  9,   2, 255, 0xff, 0x03, 0x00, 0x02}, // load.d ra c  
    {0x1139, &op_load,	  9,   3, 255, 0xff, 0x03, 0x00, 0x02}, // load.d ra d  
    {0x1149, &op_load,	  9,   4, 255, 0xff, 0x03, 0x00, 0x02}, // load.d ra e  
    {0x1159, &op_load,	  9,   5, 255, 0xff, 0x03, 0x00, 0x02}, // load.d ra f  
    {0x1169, &op_load,	  9,   6, 255, 0xff, 0x03, 0x00, 0x02}, // load.d ra g  
    {0x1179, &op_load,	  9,   7, 255, 0xff, 0x03, 0x00, 0x02}, // load.d ra h  
    {0x1189, &op_load,	  9,   8, 255, 0xff, 0x03, 0x00, 0x02}, // load.d ra pc  
    {0x1199, &op_load,	  9,   9, 255, 0xff, 0x03, 0x00, 0x02}, // load.d ra ra  
    {0x11a9, &op_load,	  9,  10, 255, 0xff, 0x03, 0x00, 0x02}, // load.d ra sb  
    {0x11b9, &op_load,	  9,  11, 255, 0xff, 0x03, 0x00, 0x02}, // load.d ra sp  
    {0x11c9, &op_load,	  9,  12, 255, 0xff, 0x03, 0x00, 0x02}, // load.d ra db  
    {0x11d9, &op_load,	  9,  13, 255, 0xff, 0x03, 0x00, 0x02}, // load.d ra cb  
    {0x11e9, &op_load,	  9,  14, 255, 0xff, 0x03, 0x00, 0x02}, // load.d ra pi  
    {0x11f9, &op_load,	  9,  15, 255, 0xff, 0x03, 0x00, 0x02}, // load.d ra status  
    {0x110a, &op_load,	 10,   0, 255, 0xff, 0x03, 0x00, 0x02}, // load.d sb a  
    {0x111a, &op_load,	 10,   1, 255, 0xff, 0x03, 0x00, 0x02}, // load.d sb b  
    {0x112a, &op_load,	 10,   2, 255, 0xff, 0x03, 0x00, 0x02}, // load.d sb c  
    {0x113a, &op_load,	 10,   3, 255, 0xff, 0x03, 0x00, 0x02}, // load.d sb d  
    {0x114a, &op_load,	 10,   4, 255, 0xff, 0x03, 0x00, 0x02}, // load.d sb e  
    {0x115a, &op_load,	 10,   5, 255, 0xff, 0x03, 0x00, 0x02}, // load.d sb f  
    {0x116a, &op_load,	 10,   6, 255, 0xff, 0x03, 0x00, 0x02}, // load.d sb g  
    {0x117a, &op_load,	 10,   7, 255, 0xff, 0x03, 0x00, 0x02}, // load.d sb h  
    {0x118a, &op_load,	 10,   8, 255, 0xff, 0x03, 0x00, 0x02}, // load.d sb pc  
    {0x119a, &op_load,	 10,   9, 255, 0xff, 0x03, 0x00, 0x02}, // load.d sb ra  
    {0x11aa, &op_load,	 10,  10, 255, 0xff, 0x03, 0x00, 0x02}, // load.d sb sb  
    {0x11ba, &op_load,	 10,  11, 255, 0xff, 0x03, 0x00, 0x02}, // load.d sb sp  
    {0x11ca, &op_load,	 10,  12, 255, 0xff, 0x03, 0x00, 0x02}, // load.d sb db  
    {0x11da, &op_load,	 10,  13, 255, 0xff, 0x03, 0x00, 0x02}, // load.d sb cb  
    {0x11ea, &op_load,	 10,  14, 255, 0xff, 0x03, 0x00, 0x02}, // load.d sb pi  
    {0x11fa, &op_load,	 10,  15, 255, 0xff, 0x03, 0x00, 0x02}, // load.d sb status  
    {0x110b, &op_load,	 11,   0, 255, 0xff, 0x03, 0x00, 0x02}, // load.d sp a  
    {0x111b, &op_load,	 11,   1, 255, 0xff, 0x03, 0x00, 0x02}, // load.d sp b  
    {0x112b, &op_load,	 11,   2, 255, 0xff, 0x03, 0x00, 0x02}, // load.d sp c  
    {0x113b, &op_load,	 11,   3, 255, 0xff, 0x03, 0x00, 0x02}, // load.d sp d  
    {0x114b, &op_load,	 11,   4, 255, 0xff, 0x03, 0x00, 0x02}, // load.d sp e  
    {0x115b, &op_load,	 11,   5, 255, 0xff, 0x03, 0x00, 0x02}, // load.d sp f  
    {0x116b, &op_load,	 11,   6, 255, 0xff, 0x03, 0x00, 0x02}, // load.d sp g  
    {0x117b, &op_load,	 11,   7, 255, 0xff, 0x03, 0x00, 0x02}, // load.d sp h  
    {0x118b, &op_load,	 11,   8, 255, 0xff, 0x03, 0x00, 0x02}, // load.d sp pc  
    {0x119b, &op_load,	 11,   9, 255, 0xff, 0x03, 0x00, 0x02}, // load.d sp ra  
    {0x11ab, &op_load,	 11,  10, 255, 0xff, 0x03, 0x00, 0x02}, // load.d sp sb  
    {0x11bb, &op_load,	 11,  11, 255, 0xff, 0x03, 0x00, 0x02}, // load.d sp sp  
    {0x11cb, &op_load,	 11,  12, 255, 0xff, 0x03, 0x00, 0x02}, // load.d sp db  
    {0x11db, &op_load,	 11,  13, 255, 0xff, 0x03, 0x00, 0x02}, // load.d sp cb  
    {0x11eb, &op_load,	 11,  14, 255, 0xff, 0x03, 0x00, 0x02}, // load.d sp pi  
    {0x11fb, &op_load,	 11,  15, 255, 0xff, 0x03, 0x00, 0x02}, // load.d sp status  
    {0x110c, &op_load,	 12,   0, 255, 0xff, 0x03, 0x00, 0x02}, // load.d db a  
    {0x111c, &op_load,	 12,   1, 255, 0xff, 0x03, 0x00, 0x02}, // load.d db b  
    {0x112c, &op_load,	 12,   2, 255, 0xff, 0x03, 0x00, 0x02}, // load.d db c  
    {0x113c, &op_load,	 12,   3, 255, 0xff, 0x03, 0x00, 0x02}, // load.d db d  
    {0x114c, &op_load,	 12,   4, 255, 0xff, 0x03, 0x00, 0x02}, // load.d db e  
    {0x115c, &op_load,	 12,   5, 255, 0xff, 0x03, 0x00, 0x02}, // load.d db f  
    {0x116c, &op_load,	 12,   6, 255, 0xff, 0x03, 0x00, 0x02}, // load.d db g  
    {0x117c, &op_load,	 12,   7, 255, 0xff, 0x03, 0x00, 0x02}, // load.d db h  
    {0x118c, &op_load,	 12,   8, 255, 0xff, 0x03, 0x00, 0x02}, // load.d db pc  
    {0x119c, &op_load,	 12,   9, 255, 0xff, 0x03, 0x00, 0x02}, // load.d db ra  
    {0x11ac, &op_load,	 12,  10, 255, 0xff, 0x03, 0x00, 0x02}, // load.d db sb  
    {0x11bc, &op_load,	 12,  11, 255, 0xff, 0x03, 0x00, 0x02}, // load.d db sp  
    {0x11cc, &op_load,	 12,  12, 255, 0xff, 0x03, 0x00, 0x02}, // load.d db db  
    {0x11dc, &op_load,	 12,  13, 255, 0xff, 0x03, 0x00, 0x02}, // load.d db cb  
    {0x11ec, &op_load,	 12,  14, 255, 0xff, 0x03, 0x00, 0x02}, // load.d db pi  
    {0x11fc, &op_load,	 12,  15, 255, 0xff, 0x03, 0x00, 0x02}, // load.d db status  
    {0x110d, &op_load,	 13,   0, 255, 0xff, 0x03, 0x00, 0x02}, // load.d cb a  
    {0x111d, &op_load,	 13,   1, 255, 0xff, 0x03, 0x00, 0x02}, // load.d cb b  
    {0x112d, &op_load,	 13,   2, 255, 0xff, 0x03, 0x00, 0x02}, // load.d cb c  
    {0x113d, &op_load,	 13,   3, 255, 0xff, 0x03, 0x00, 0x02}, // load.d cb d  
    {0x114d, &op_load,	 13,   4, 255, 0xff, 0x03, 0x00, 0x02}, // load.d cb e  
    {0x115d, &op_load,	 13,   5, 255, 0xff, 0x03, 0x00, 0x02}, // load.d cb f  
    {0x116d, &op_load,	 13,   6, 255, 0xff, 0x03, 0x00, 0x02}, // load.d cb g  
    {0x117d, &op_load,	 13,   7, 255, 0xff, 0x03, 0x00, 0x02}, // load.d cb h  
    {0x118d, &op_load,	 13,   8, 255, 0xff, 0x03, 0x00, 0x02}, // load.d cb pc  
    {0x119d, &op_load,	 13,   9, 255, 0xff, 0x03, 0x00, 0x02}, // load.d cb ra  
    {0x11ad, &op_load,	 13,  10, 255, 0xff, 0x03, 0x00, 0x02}, // load.d cb sb  
    {0x11bd, &op_load,	 13,  11, 255, 0xff, 0x03, 0x00, 0x02}, // load.d cb sp  
    {0x11cd, &op_load,	 13,  12, 255, 0xff, 0x03, 0x00, 0x02}, // load.d cb db  
    {0x11dd, &op_load,	 13,  13, 255, 0xff, 0x03, 0x00, 0x02}, // load.d cb cb  
    {0x11ed, &op_load,	 13,  14, 255, 0xff, 0x03, 0x00, 0x02}, // load.d cb pi  
    {0x11fd, &op_load,	 13,  15, 255, 0xff, 0x03, 0x00, 0x02}, // load.d cb status  
    {0x110e, &op_load,	 14,   0, 255, 0xff, 0x03, 0x00, 0x02}, // load.d pi a  
    {0x111e, &op_load,	 14,   1, 255, 0xff, 0x03, 0x00, 0x02}, // load.d pi b  
    {0x112e, &op_load,	 14,   2, 255, 0xff, 0x03, 0x00, 0x02}, // load.d pi c  
    {0x113e, &op_load,	 14,   3, 255, 0xff, 0x03, 0x00, 0x02}, // load.d pi d  
    {0x114e, &op_load,	 14,   4, 255, 0xff, 0x03, 0x00, 0x02}, // load.d pi e  
    {0x115e, &op_load,	 14,   5, 255, 0xff, 0x03, 0x00, 0x02}, // load.d pi f  
    {0x116e, &op_load,	 14,   6, 255, 0xff, 0x03, 0x00, 0x02}, // load.d pi g  
    {0x117e, &op_load,	 14,   7, 255, 0xff, 0x03, 0x00, 0x02}, // load.d pi h  
    {0x118e, &op_load,	 14,   8, 255, 0xff, 0x03, 0x00, 0x02}, // load.d pi pc  
    {0x119e, &op_load,	 14,   9, 255, 0xff, 0x03, 0x00, 0x02}, // load.d pi ra  
    {0x11ae, &op_load,	 14,  10, 255, 0xff, 0x03, 0x00, 0x02}, // load.d pi sb  
    {0x11be, &op_load,	 14,  11, 255, 0xff, 0x03, 0x00, 0x02}, // load.d pi sp  
    {0x11ce, &op_load,	 14,  12, 255, 0xff, 0x03, 0x00, 0x02}, // load.d pi db  
    {0x11de, &op_load,	 14,  13, 255, 0xff, 0x03, 0x00, 0x02}, // load.d pi cb  
    {0x11ee, &op_load,	 14,  14, 255, 0xff, 0x03, 0x00, 0x02}, // load.d pi pi  
    {0x11fe, &op_load,	 14,  15, 255, 0xff, 0x03, 0x00, 0x02}, // load.d pi status  
    {0x110f, &op_load,	 15,   0, 255, 0xff, 0x03, 0x00, 0x02}, // load.d status a  
    {0x111f, &op_load,	 15,   1, 255, 0xff, 0x03, 0x00, 0x02}, // load.d status b  
    {0x112f, &op_load,	 15,   2, 255, 0xff, 0x03, 0x00, 0x02}, // load.d status c  
    {0x113f, &op_load,	 15,   3, 255, 0xff, 0x03, 0x00, 0x02}, // load.d status d  
    {0x114f, &op_load,	 15,   4, 255, 0xff, 0x03, 0x00, 0x02}, // load.d status e  
    {0x115f, &op_load,	 15,   5, 255, 0xff, 0x03, 0x00, 0x02}, // load.d status f  
    {0x116f, &op_load,	 15,   6, 255, 0xff, 0x03, 0x00, 0x02}, // load.d status g  
    {0x117f, &op_load,	 15,   7, 255, 0xff, 0x03, 0x00, 0x02}, // load.d status h  
    {0x118f, &op_load,	 15,   8, 255, 0xff, 0x03, 0x00, 0x02}, // load.d status pc  
    {0x119f, &op_load,	 15,   9, 255, 0xff, 0x03, 0x00, 0x02}, // load.d status ra  
    {0x11af, &op_load,	 15,  10, 255, 0xff, 0x03, 0x00, 0x02}, // load.d status sb  
    {0x11bf, &op_load,	 15,  11, 255, 0xff, 0x03, 0x00, 0x02}, // load.d status sp  
    {0x11cf, &op_load,	 15,  12, 255, 0xff, 0x03, 0x00, 0x02}, // load.d status db  
    {0x11df, &op_load,	 15,  13, 255, 0xff, 0x03, 0x00, 0x02}, // load.d status cb  
    {0x11ef, &op_load,	 15,  14, 255, 0xff, 0x03, 0x00, 0x02}, // load.d status pi  
    {0x11ff, &op_load,	 15,  15, 255, 0xff, 0x03, 0x00, 0x02}, // load.d status status  
    {0x1200, &op_load,	  0,   0, 255, 0xff, 0x03, 0x00, 0x04}, // load a a  
    {0x1210, &op_load,	  0,   1, 255, 0xff, 0x03, 0x00, 0x04}, // load a b  
    {0x1220, &op_load,	  0,   2, 255, 0xff, 0x03, 0x00, 0x04}, // load a c  
    {0x1230, &op_load,	  0,   3, 255, 0xff, 0x03, 0x00, 0x04}, // load a d  
    {0x1240, &op_load,	  0,   4, 255, 0xff, 0x03, 0x00, 0x04}, // load a e  
    {0x1250, &op_load,	  0,   5, 255, 0xff, 0x03, 0x00, 0x04}, // load a f  
    {0x1260, &op_load,	  0,   6, 255, 0xff, 0x03, 0x00, 0x04}, // load a g  
    {0x1270, &op_load,	  0,   7, 255, 0xff, 0x03, 0x00, 0x04}, // load a h  
    {0x1280, &op_load,	  0,   8, 255, 0xff, 0x03, 0x00, 0x04}, // load a pc  
    {0x1290, &op_load,	  0,   9, 255, 0xff, 0x03, 0x00, 0x04}, // load a ra  
    {0x12a0, &op_load,	  0,  10, 255, 0xff, 0x03, 0x00, 0x04}, // load a sb  
    {0x12b0, &op_load,	  0,  11, 255, 0xff, 0x03, 0x00, 0x04}, // load a sp  
    {0x12c0, &op_load,	  0,  12, 255, 0xff, 0x03, 0x00, 0x04}, // load a db  
    {0x12d0, &op_load,	  0,  13, 255, 0xff, 0x03, 0x00, 0x04}, // load a cb  
    {0x12e0, &op_load,	  0,  14, 255, 0xff, 0x03, 0x00, 0x04}, // load a pi  
    {0x12f0, &op_load,	  0,  15, 255, 0xff, 0x03, 0x00, 0x04}, // load a status  
    {0x1201, &op_load,	  1,   0, 255, 0xff, 0x03, 0x00, 0x04}, // load b a  
    {0x1211, &op_load,	  1,   1, 255, 0xff, 0x03, 0x00, 0x04}, // load b b  
    {0x1221, &op_load,	  1,   2, 255, 0xff, 0x03, 0x00, 0x04}, // load b c  
    {0x1231, &op_load,	  1,   3, 255, 0xff, 0x03, 0x00, 0x04}, // load b d  
    {0x1241, &op_load,	  1,   4, 255, 0xff, 0x03, 0x00, 0x04}, // load b e  
    {0x1251, &op_load,	  1,   5, 255, 0xff, 0x03, 0x00, 0x04}, // load b f  
    {0x1261, &op_load,	  1,   6, 255, 0xff, 0x03, 0x00, 0x04}, // load b g  
    {0x1271, &op_load,	  1,   7, 255, 0xff, 0x03, 0x00, 0x04}, // load b h  
    {0x1281, &op_load,	  1,   8, 255, 0xff, 0x03, 0x00, 0x04}, // load b pc  
    {0x1291, &op_load,	  1,   9, 255, 0xff, 0x03, 0x00, 0x04}, // load b ra  
    {0x12a1, &op_load,	  1,  10, 255, 0xff, 0x03, 0x00, 0x04}, // load b sb  
    {0x12b1, &op_load,	  1,  11, 255, 0xff, 0x03, 0x00, 0x04}, // load b sp  
    {0x12c1, &op_load,	  1,  12, 255, 0xff, 0x03, 0x00, 0x04}, // load b db  
    {0x12d1, &op_load,	  1,  13, 255, 0xff, 0x03, 0x00, 0x04}, // load b cb  
    {0x12e1, &op_load,	  1,  14, 255, 0xff, 0x03, 0x00, 0x04}, // load b pi  
    {0x12f1, &op_load,	  1,  15, 255, 0xff, 0x03, 0x00, 0x04}, // load b status  
    {0x1202, &op_load,	  2,   0, 255, 0xff, 0x03, 0x00, 0x04}, // load c a  
    {0x1212, &op_load,	  2,   1, 255, 0xff, 0x03, 0x00, 0x04}, // load c b  
    {0x1222, &op_load,	  2,   2, 255, 0xff, 0x03, 0x00, 0x04}, // load c c  
    {0x1232, &op_load,	  2,   3, 255, 0xff, 0x03, 0x00, 0x04}, // load c d  
    {0x1242, &op_load,	  2,   4, 255, 0xff, 0x03, 0x00, 0x04}, // load c e  
    {0x1252, &op_load,	  2,   5, 255, 0xff, 0x03, 0x00, 0x04}, // load c f  
    {0x1262, &op_load,	  2,   6, 255, 0xff, 0x03, 0x00, 0x04}, // load c g  
    {0x1272, &op_load,	  2,   7, 255, 0xff, 0x03, 0x00, 0x04}, // load c h  
    {0x1282, &op_load,	  2,   8, 255, 0xff, 0x03, 0x00, 0x04}, // load c pc  
    {0x1292, &op_load,	  2,   9, 255, 0xff, 0x03, 0x00, 0x04}, // load c ra  
    {0x12a2, &op_load,	  2,  10, 255, 0xff, 0x03, 0x00, 0x04}, // load c sb  
    {0x12b2, &op_load,	  2,  11, 255, 0xff, 0x03, 0x00, 0x04}, // load c sp  
    {0x12c2, &op_load,	  2,  12, 255, 0xff, 0x03, 0x00, 0x04}, // load c db  
    {0x12d2, &op_load,	  2,  13, 255, 0xff, 0x03, 0x00, 0x04}, // load c cb  
    {0x12e2, &op_load,	  2,  14, 255, 0xff, 0x03, 0x00, 0x04}, // load c pi  
    {0x12f2, &op_load,	  2,  15, 255, 0xff, 0x03, 0x00, 0x04}, // load c status  
    {0x1203, &op_load,	  3,   0, 255, 0xff, 0x03, 0x00, 0x04}, // load d a  
    {0x1213, &op_load,	  3,   1, 255, 0xff, 0x03, 0x00, 0x04}, // load d b  
    {0x1223, &op_load,	  3,   2, 255, 0xff, 0x03, 0x00, 0x04}, // load d c  
    {0x1233, &op_load,	  3,   3, 255, 0xff, 0x03, 0x00, 0x04}, // load d d  
    {0x1243, &op_load,	  3,   4, 255, 0xff, 0x03, 0x00, 0x04}, // load d e  
    {0x1253, &op_load,	  3,   5, 255, 0xff, 0x03, 0x00, 0x04}, // load d f  
    {0x1263, &op_load,	  3,   6, 255, 0xff, 0x03, 0x00, 0x04}, // load d g  
    {0x1273, &op_load,	  3,   7, 255, 0xff, 0x03, 0x00, 0x04}, // load d h  
    {0x1283, &op_load,	  3,   8, 255, 0xff, 0x03, 0x00, 0x04}, // load d pc  
    {0x1293, &op_load,	  3,   9, 255, 0xff, 0x03, 0x00, 0x04}, // load d ra  
    {0x12a3, &op_load,	  3,  10, 255, 0xff, 0x03, 0x00, 0x04}, // load d sb  
    {0x12b3, &op_load,	  3,  11, 255, 0xff, 0x03, 0x00, 0x04}, // load d sp  
    {0x12c3, &op_load,	  3,  12, 255, 0xff, 0x03, 0x00, 0x04}, // load d db  
    {0x12d3, &op_load,	  3,  13, 255, 0xff, 0x03, 0x00, 0x04}, // load d cb  
    {0x12e3, &op_load,	  3,  14, 255, 0xff, 0x03, 0x00, 0x04}, // load d pi  
    {0x12f3, &op_load,	  3,  15, 255, 0xff, 0x03, 0x00, 0x04}, // load d status  
    {0x1204, &op_load,	  4,   0, 255, 0xff, 0x03, 0x00, 0x04}, // load e a  
    {0x1214, &op_load,	  4,   1, 255, 0xff, 0x03, 0x00, 0x04}, // load e b  
    {0x1224, &op_load,	  4,   2, 255, 0xff, 0x03, 0x00, 0x04}, // load e c  
    {0x1234, &op_load,	  4,   3, 255, 0xff, 0x03, 0x00, 0x04}, // load e d  
    {0x1244, &op_load,	  4,   4, 255, 0xff, 0x03, 0x00, 0x04}, // load e e  
    {0x1254, &op_load,	  4,   5, 255, 0xff, 0x03, 0x00, 0x04}, // load e f  
    {0x1264, &op_load,	  4,   6, 255, 0xff, 0x03, 0x00, 0x04}, // load e g  
    {0x1274, &op_load,	  4,   7, 255, 0xff, 0x03, 0x00, 0x04}, // load e h  
    {0x1284, &op_load,	  4,   8, 255, 0xff, 0x03, 0x00, 0x04}, // load e pc  
    {0x1294, &op_load,	  4,   9, 255, 0xff, 0x03, 0x00, 0x04}, // load e ra  
    {0x12a4, &op_load,	  4,  10, 255, 0xff, 0x03, 0x00, 0x04}, // load e sb  
    {0x12b4, &op_load,	  4,  11, 255, 0xff, 0x03, 0x00, 0x04}, // load e sp  
    {0x12c4, &op_load,	  4,  12, 255, 0xff, 0x03, 0x00, 0x04}, // load e db  
    {0x12d4, &op_load,	  4,  13, 255, 0xff, 0x03, 0x00, 0x04}, // load e cb  
    {0x12e4, &op_load,	  4,  14, 255, 0xff, 0x03, 0x00, 0x04}, // load e pi  
    {0x12f4, &op_load,	  4,  15, 255, 0xff, 0x03, 0x00, 0x04}, // load e status  
    {0x1205, &op_load,	  5,   0, 255, 0xff, 0x03, 0x00, 0x04}, // load f a  
    {0x1215, &op_load,	  5,   1, 255, 0xff, 0x03, 0x00, 0x04}, // load f b  
    {0x1225, &op_load,	  5,   2, 255, 0xff, 0x03, 0x00, 0x04}, // load f c  
    {0x1235, &op_load,	  5,   3, 255, 0xff, 0x03, 0x00, 0x04}, // load f d  
    {0x1245, &op_load,	  5,   4, 255, 0xff, 0x03, 0x00, 0x04}, // load f e  
    {0x1255, &op_load,	  5,   5, 255, 0xff, 0x03, 0x00, 0x04}, // load f f  
    {0x1265, &op_load,	  5,   6, 255, 0xff, 0x03, 0x00, 0x04}, // load f g  
    {0x1275, &op_load,	  5,   7, 255, 0xff, 0x03, 0x00, 0x04}, // load f h  
    {0x1285, &op_load,	  5,   8, 255, 0xff, 0x03, 0x00, 0x04}, // load f pc  
    {0x1295, &op_load,	  5,   9, 255, 0xff, 0x03, 0x00, 0x04}, // load f ra  
    {0x12a5, &op_load,	  5,  10, 255, 0xff, 0x03, 0x00, 0x04}, // load f sb  
    {0x12b5, &op_load,	  5,  11, 255, 0xff, 0x03, 0x00, 0x04}, // load f sp  
    {0x12c5, &op_load,	  5,  12, 255, 0xff, 0x03, 0x00, 0x04}, // load f db  
    {0x12d5, &op_load,	  5,  13, 255, 0xff, 0x03, 0x00, 0x04}, // load f cb  
    {0x12e5, &op_load,	  5,  14, 255, 0xff, 0x03, 0x00, 0x04}, // load f pi  
    {0x12f5, &op_load,	  5,  15, 255, 0xff, 0x03, 0x00, 0x04}, // load f status  
    {0x1206, &op_load,	  6,   0, 255, 0xff, 0x03, 0x00, 0x04}, // load g a  
    {0x1216, &op_load,	  6,   1, 255, 0xff, 0x03, 0x00, 0x04}, // load g b  
    {0x1226, &op_load,	  6,   2, 255, 0xff, 0x03, 0x00, 0x04}, // load g c  
    {0x1236, &op_load,	  6,   3, 255, 0xff, 0x03, 0x00, 0x04}, // load g d  
    {0x1246, &op_load,	  6,   4, 255, 0xff, 0x03, 0x00, 0x04}, // load g e  
    {0x1256, &op_load,	  6,   5, 255, 0xff, 0x03, 0x00, 0x04}, // load g f  
    {0x1266, &op_load,	  6,   6, 255, 0xff, 0x03, 0x00, 0x04}, // load g g  
    {0x1276, &op_load,	  6,   7, 255, 0xff, 0x03, 0x00, 0x04}, // load g h  
    {0x1286, &op_load,	  6,   8, 255, 0xff, 0x03, 0x00, 0x04}, // load g pc  
    {0x1296, &op_load,	  6,   9, 255, 0xff, 0x03, 0x00, 0x04}, // load g ra  
    {0x12a6, &op_load,	  6,  10, 255, 0xff, 0x03, 0x00, 0x04}, // load g sb  
    {0x12b6, &op_load,	  6,  11, 255, 0xff, 0x03, 0x00, 0x04}, // load g sp  
    {0x12c6, &op_load,	  6,  12, 255, 0xff, 0x03, 0x00, 0x04}, // load g db  
    {0x12d6, &op_load,	  6,  13, 255, 0xff, 0x03, 0x00, 0x04}, // load g cb  
    {0x12e6, &op_load,	  6,  14, 255, 0xff, 0x03, 0x00, 0x04}, // load g pi  
    {0x12f6, &op_load,	  6,  15, 255, 0xff, 0x03, 0x00, 0x04}, // load g status  
    {0x1207, &op_load,	  7,   0, 255, 0xff, 0x03, 0x00, 0x04}, // load h a  
    {0x1217, &op_load,	  7,   1, 255, 0xff, 0x03, 0x00, 0x04}, // load h b  
    {0x1227, &op_load,	  7,   2, 255, 0xff, 0x03, 0x00, 0x04}, // load h c  
    {0x1237, &op_load,	  7,   3, 255, 0xff, 0x03, 0x00, 0x04}, // load h d  
    {0x1247, &op_load,	  7,   4, 255, 0xff, 0x03, 0x00, 0x04}, // load h e  
    {0x1257, &op_load,	  7,   5, 255, 0xff, 0x03, 0x00, 0x04}, // load h f  
    {0x1267, &op_load,	  7,   6, 255, 0xff, 0x03, 0x00, 0x04}, // load h g  
    {0x1277, &op_load,	  7,   7, 255, 0xff, 0x03, 0x00, 0x04}, // load h h  
    {0x1287, &op_load,	  7,   8, 255, 0xff, 0x03, 0x00, 0x04}, // load h pc  
    {0x1297, &op_load,	  7,   9, 255, 0xff, 0x03, 0x00, 0x04}, // load h ra  
    {0x12a7, &op_load,	  7,  10, 255, 0xff, 0x03, 0x00, 0x04}, // load h sb  
    {0x12b7, &op_load,	  7,  11, 255, 0xff, 0x03, 0x00, 0x04}, // load h sp  
    {0x12c7, &op_load,	  7,  12, 255, 0xff, 0x03, 0x00, 0x04}, // load h db  
    {0x12d7, &op_load,	  7,  13, 255, 0xff, 0x03, 0x00, 0x04}, // load h cb  
    {0x12e7, &op_load,	  7,  14, 255, 0xff, 0x03, 0x00, 0x04}, // load h pi  
    {0x12f7, &op_load,	  7,  15, 255, 0xff, 0x03, 0x00, 0x04}, // load h status  
    {0x1208, &op_load,	  8,   0, 255, 0xff, 0x03, 0x00, 0x04}, // load pc a  
    {0x1218, &op_load,	  8,   1, 255, 0xff, 0x03, 0x00, 0x04}, // load pc b  
    {0x1228, &op_load,	  8,   2, 255, 0xff, 0x03, 0x00, 0x04}, // load pc c  
    {0x1238, &op_load,	  8,   3, 255, 0xff, 0x03, 0x00, 0x04}, // load pc d  
    {0x1248, &op_load,	  8,   4, 255, 0xff, 0x03, 0x00, 0x04}, // load pc e  
    {0x1258, &op_load,	  8,   5, 255, 0xff, 0x03, 0x00, 0x04}, // load pc f  
    {0x1268, &op_load,	  8,   6, 255, 0xff, 0x03, 0x00, 0x04}, // load pc g  
    {0x1278, &op_load,	  8,   7, 255, 0xff, 0x03, 0x00, 0x04}, // load pc h  
    {0x1288, &op_load,	  8,   8, 255, 0xff, 0x03, 0x00, 0x04}, // load pc pc  
    {0x1298, &op_load,	  8,   9, 255, 0xff, 0x03, 0x00, 0x04}, // load pc ra  
    {0x12a8, &op_load,	  8,  10, 255, 0xff, 0x03, 0x00, 0x04}, // load pc sb  
    {0x12b8, &op_load,	  8,  11, 255, 0xff, 0x03, 0x00, 0x04}, // load pc sp  
    {0x12c8, &op_load,	  8,  12, 255, 0xff, 0x03, 0x00, 0x04}, // load pc db  
    {0x12d8, &op_load,	  8,  13, 255, 0xff, 0x03, 0x00, 0x04}, // load pc cb  
    {0x12e8, &op_load,	  8,  14, 255, 0xff, 0x03, 0x00, 0x04}, // load pc pi  
    {0x12f8, &op_load,	  8,  15, 255, 0xff, 0x03, 0x00, 0x04}, // load pc status  
    {0x1209, &op_load,	  9,   0, 255, 0xff, 0x03, 0x00, 0x04}, // load ra a  
    {0x1219, &op_load,	  9,   1, 255, 0xff, 0x03, 0x00, 0x04}, // load ra b  
    {0x1229, &op_load,	  9,   2, 255, 0xff, 0x03, 0x00, 0x04}, // load ra c  
    {0x1239, &op_load,	  9,   3, 255, 0xff, 0x03, 0x00, 0x04}, // load ra d  
    {0x1249, &op_load,	  9,   4, 255, 0xff, 0x03, 0x00, 0x04}, // load ra e  
    {0x1259, &op_load,	  9,   5, 255, 0xff, 0x03, 0x00, 0x04}, // load ra f  
    {0x1269, &op_load,	  9,   6, 255, 0xff, 0x03, 0x00, 0x04}, // load ra g  
    {0x1279, &op_load,	  9,   7, 255, 0xff, 0x03, 0x00, 0x04}, // load ra h  
    {0x1289, &op_load,	  9,   8, 255, 0xff, 0x03, 0x00, 0x04}, // load ra pc  
    {0x1299, &op_load,	  9,   9, 255, 0xff, 0x03, 0x00, 0x04}, // load ra ra  
    {0x12a9, &op_load,	  9,  10, 255, 0xff, 0x03, 0x00, 0x04}, // load ra sb  
    {0x12b9, &op_load,	  9,  11, 255, 0xff, 0x03, 0x00, 0x04}, // load ra sp  
    {0x12c9, &op_load,	  9,  12, 255, 0xff, 0x03, 0x00, 0x04}, // load ra db  
    {0x12d9, &op_load,	  9,  13, 255, 0xff, 0x03, 0x00, 0x04}, // load ra cb  
    {0x12e9, &op_load,	  9,  14, 255, 0xff, 0x03, 0x00, 0x04}, // load ra pi  
    {0x12f9, &op_load,	  9,  15, 255, 0xff, 0x03, 0x00, 0x04}, // load ra status  
    {0x120a, &op_load,	 10,   0, 255, 0xff, 0x03, 0x00, 0x04}, // load sb a  
    {0x121a, &op_load,	 10,   1, 255, 0xff, 0x03, 0x00, 0x04}, // load sb b  
    {0x122a, &op_load,	 10,   2, 255, 0xff, 0x03, 0x00, 0x04}, // load sb c  
    {0x123a, &op_load,	 10,   3, 255, 0xff, 0x03, 0x00, 0x04}, // load sb d  
    {0x124a, &op_load,	 10,   4, 255, 0xff, 0x03, 0x00, 0x04}, // load sb e  
    {0x125a, &op_load,	 10,   5, 255, 0xff, 0x03, 0x00, 0x04}, // load sb f  
    {0x126a, &op_load,	 10,   6, 255, 0xff, 0x03, 0x00, 0x04}, // load sb g  
    {0x127a, &op_load,	 10,   7, 255, 0xff, 0x03, 0x00, 0x04}, // load sb h  
    {0x128a, &op_load,	 10,   8, 255, 0xff, 0x03, 0x00, 0x04}, // load sb pc  
    {0x129a, &op_load,	 10,   9, 255, 0xff, 0x03, 0x00, 0x04}, // load sb ra  
    {0x12aa, &op_load,	 10,  10, 255, 0xff, 0x03, 0x00, 0x04}, // load sb sb  
    {0x12ba, &op_load,	 10,  11, 255, 0xff, 0x03, 0x00, 0x04}, // load sb sp  
    {0x12ca, &op_load,	 10,  12, 255, 0xff, 0x03, 0x00, 0x04}, // load sb db  
    {0x12da, &op_load,	 10,  13, 255, 0xff, 0x03, 0x00, 0x04}, // load sb cb  
    {0x12ea, &op_load,	 10,  14, 255, 0xff, 0x03, 0x00, 0x04}, // load sb pi  
    {0x12fa, &op_load,	 10,  15, 255, 0xff, 0x03, 0x00, 0x04}, // load sb status  
    {0x120b, &op_load,	 11,   0, 255, 0xff, 0x03, 0x00, 0x04}, // load sp a  
    {0x121b, &op_load,	 11,   1, 255, 0xff, 0x03, 0x00, 0x04}, // load sp b  
    {0x122b, &op_load,	 11,   2, 255, 0xff, 0x03, 0x00, 0x04}, // load sp c  
    {0x123b, &op_load,	 11,   3, 255, 0xff, 0x03, 0x00, 0x04}, // load sp d  
    {0x124b, &op_load,	 11,   4, 255, 0xff, 0x03, 0x00, 0x04}, // load sp e  
    {0x125b, &op_load,	 11,   5, 255, 0xff, 0x03, 0x00, 0x04}, // load sp f  
    {0x126b, &op_load,	 11,   6, 255, 0xff, 0x03, 0x00, 0x04}, // load sp g  
    {0x127b, &op_load,	 11,   7, 255, 0xff, 0x03, 0x00, 0x04}, // load sp h  
    {0x128b, &op_load,	 11,   8, 255, 0xff, 0x03, 0x00, 0x04}, // load sp pc  
    {0x129b, &op_load,	 11,   9, 255, 0xff, 0x03, 0x00, 0x04}, // load sp ra  
    {0x12ab, &op_load,	 11,  10, 255, 0xff, 0x03, 0x00, 0x04}, // load sp sb  
    {0x12bb, &op_load,	 11,  11, 255, 0xff, 0x03, 0x00, 0x04}, // load sp sp  
    {0x12cb, &op_load,	 11,  12, 255, 0xff, 0x03, 0x00, 0x04}, // load sp db  
    {0x12db, &op_load,	 11,  13, 255, 0xff, 0x03, 0x00, 0x04}, // load sp cb  
    {0x12eb, &op_load,	 11,  14, 255, 0xff, 0x03, 0x00, 0x04}, // load sp pi  
    {0x12fb, &op_load,	 11,  15, 255, 0xff, 0x03, 0x00, 0x04}, // load sp status  
    {0x120c, &op_load,	 12,   0, 255, 0xff, 0x03, 0x00, 0x04}, // load db a  
    {0x121c, &op_load,	 12,   1, 255, 0xff, 0x03, 0x00, 0x04}, // load db b  
    {0x122c, &op_load,	 12,   2, 255, 0xff, 0x03, 0x00, 0x04}, // load db c  
    {0x123c, &op_load,	 12,   3, 255, 0xff, 0x03, 0x00, 0x04}, // load db d  
    {0x124c, &op_load,	 12,   4, 255, 0xff, 0x03, 0x00, 0x04}, // load db e  
    {0x125c, &op_load,	 12,   5, 255, 0xff, 0x03, 0x00, 0x04}, // load db f  
    {0x126c, &op_load,	 12,   6, 255, 0xff, 0x03, 0x00, 0x04}, // load db g  
    {0x127c, &op_load,	 12,   7, 255, 0xff, 0x03, 0x00, 0x04}, // load db h  
    {0x128c, &op_load,	 12,   8, 255, 0xff, 0x03, 0x00, 0x04}, // load db pc  
    {0x129c, &op_load,	 12,   9, 255, 0xff, 0x03, 0x00, 0x04}, // load db ra  
    {0x12ac, &op_load,	 12,  10, 255, 0xff, 0x03, 0x00, 0x04}, // load db sb  
    {0x12bc, &op_load,	 12,  11, 255, 0xff, 0x03, 0x00, 0x04}, // load db sp  
    {0x12cc, &op_load,	 12,  12, 255, 0xff, 0x03, 0x00, 0x04}, // load db db  
    {0x12dc, &op_load,	 12,  13, 255, 0xff, 0x03, 0x00, 0x04}, // load db cb  
    {0x12ec, &op_load,	 12,  14, 255, 0xff, 0x03, 0x00, 0x04}, // load db pi  
    {0x12fc, &op_load,	 12,  15, 255, 0xff, 0x03, 0x00, 0x04}, // load db status  
    {0x120d, &op_load,	 13,   0, 255, 0xff, 0x03, 0x00, 0x04}, // load cb a  
    {0x121d, &op_load,	 13,   1, 255, 0xff, 0x03, 0x00, 0x04}, // load cb b  
    {0x122d, &op_load,	 13,   2, 255, 0xff, 0x03, 0x00, 0x04}, // load cb c  
    {0x123d, &op_load,	 13,   3, 255, 0xff, 0x03, 0x00, 0x04}, // load cb d  
    {0x124d, &op_load,	 13,   4, 255, 0xff, 0x03, 0x00, 0x04}, // load cb e  
    {0x125d, &op_load,	 13,   5, 255, 0xff, 0x03, 0x00, 0x04}, // load cb f  
    {0x126d, &op_load,	 13,   6, 255, 0xff, 0x03, 0x00, 0x04}, // load cb g  
    {0x127d, &op_load,	 13,   7, 255, 0xff, 0x03, 0x00, 0x04}, // load cb h  
    {0x128d, &op_load,	 13,   8, 255, 0xff, 0x03, 0x00, 0x04}, // load cb pc  
    {0x129d, &op_load,	 13,   9, 255, 0xff, 0x03, 0x00, 0x04}, // load cb ra  
    {0x12ad, &op_load,	 13,  10, 255, 0xff, 0x03, 0x00, 0x04}, // load cb sb  
    {0x12bd, &op_load,	 13,  11, 255, 0xff, 0x03, 0x00, 0x04}, // load cb sp  
    {0x12cd, &op_load,	 13,  12, 255, 0xff, 0x03, 0x00, 0x04}, // load cb db  
    {0x12dd, &op_load,	 13,  13, 255, 0xff, 0x03, 0x00, 0x04}, // load cb cb  
    {0x12ed, &op_load,	 13,  14, 255, 0xff, 0x03, 0x00, 0x04}, // load cb pi  
    {0x12fd, &op_load,	 13,  15, 255, 0xff, 0x03, 0x00, 0x04}, // load cb status  
    {0x120e, &op_load,	 14,   0, 255, 0xff, 0x03, 0x00, 0x04}, // load pi a  
    {0x121e, &op_load,	 14,   1, 255, 0xff, 0x03, 0x00, 0x04}, // load pi b  
    {0x122e, &op_load,	 14,   2, 255, 0xff, 0x03, 0x00, 0x04}, // load pi c  
    {0x123e, &op_load,	 14,   3, 255, 0xff, 0x03, 0x00, 0x04}, // load pi d  
    {0x124e, &op_load,	 14,   4, 255, 0xff, 0x03, 0x00, 0x04}, // load pi e  
    {0x125e, &op_load,	 14,   5, 255, 0xff, 0x03, 0x00, 0x04}, // load pi f  
    {0x126e, &op_load,	 14,   6, 255, 0xff, 0x03, 0x00, 0x04}, // load pi g  
    {0x127e, &op_load,	 14,   7, 255, 0xff, 0x03, 0x00, 0x04}, // load pi h  
    {0x128e, &op_load,	 14,   8, 255, 0xff, 0x03, 0x00, 0x04}, // load pi pc  
    {0x129e, &op_load,	 14,   9, 255, 0xff, 0x03, 0x00, 0x04}, // load pi ra  
    {0x12ae, &op_load,	 14,  10, 255, 0xff, 0x03, 0x00, 0x04}, // load pi sb  
    {0x12be, &op_load,	 14,  11, 255, 0xff, 0x03, 0x00, 0x04}, // load pi sp  
    {0x12ce, &op_load,	 14,  12, 255, 0xff, 0x03, 0x00, 0x04}, // load pi db  
    {0x12de, &op_load,	 14,  13, 255, 0xff, 0x03, 0x00, 0x04}, // load pi cb  
    {0x12ee, &op_load,	 14,  14, 255, 0xff, 0x03, 0x00, 0x04}, // load pi pi  
    {0x12fe, &op_load,	 14,  15, 255, 0xff, 0x03, 0x00, 0x04}, // load pi status  
    {0x120f, &op_load,	 15,   0, 255, 0xff, 0x03, 0x00, 0x04}, // load status a  
    {0x121f, &op_load,	 15,   1, 255, 0xff, 0x03, 0x00, 0x04}, // load status b  
    {0x122f, &op_load,	 15,   2, 255, 0xff, 0x03, 0x00, 0x04}, // load status c  
    {0x123f, &op_load,	 15,   3, 255, 0xff, 0x03, 0x00, 0x04}, // load status d  
    {0x124f, &op_load,	 15,   4, 255, 0xff, 0x03, 0x00, 0x04}, // load status e  
    {0x125f, &op_load,	 15,   5, 255, 0xff, 0x03, 0x00, 0x04}, // load status f  
    {0x126f, &op_load,	 15,   6, 255, 0xff, 0x03, 0x00, 0x04}, // load status g  
    {0x127f, &op_load,	 15,   7, 255, 0xff, 0x03, 0x00, 0x04}, // load status h  
    {0x128f, &op_load,	 15,   8, 255, 0xff, 0x03, 0x00, 0x04}, // load status pc  
    {0x129f, &op_load,	 15,   9, 255, 0xff, 0x03, 0x00, 0x04}, // load status ra  
    {0x12af, &op_load,	 15,  10, 255, 0xff, 0x03, 0x00, 0x04}, // load status sb  
    {0x12bf, &op_load,	 15,  11, 255, 0xff, 0x03, 0x00, 0x04}, // load status sp  
    {0x12cf, &op_load,	 15,  12, 255, 0xff, 0x03, 0x00, 0x04}, // load status db  
    {0x12df, &op_load,	 15,  13, 255, 0xff, 0x03, 0x00, 0x04}, // load status cb  
    {0x12ef, &op_load,	 15,  14, 255, 0xff, 0x03, 0x00, 0x04}, // load status pi  
    {0x12ff, &op_load,	 15,  15, 255, 0xff, 0x03, 0x00, 0x04}, // load status status  
    {0x1310, &op_load,	  0,   8, 255, 0xff, 0x03, 0x04, 0x01}, // load.wi a   
    {0x1311, &op_load,	  1,   8, 255, 0xff, 0x03, 0x04, 0x01}, // load.wi b   
    {0x1312, &op_load,	  2,   8, 255, 0xff, 0x03, 0x04, 0x01}, // load.wi c   
    {0x1313, &op_load,	  3,   8, 255, 0xff, 0x03, 0x04, 0x01}, // load.wi d   
    {0x1314, &op_load,	  4,   8, 255, 0xff, 0x03, 0x04, 0x01}, // load.wi e   
    {0x1315, &op_load,	  5,   8, 255, 0xff, 0x03, 0x04, 0x01}, // load.wi f   
    {0x1316, &op_load,	  6,   8, 255, 0xff, 0x03, 0x04, 0x01}, // load.wi g   
    {0x1317, &op_load,	  7,   8, 255, 0xff, 0x03, 0x04, 0x01}, // load.wi h   
    {0x1318, &op_load,	  8,   8, 255, 0xff, 0x03, 0x04, 0x01}, // load.wi pc   
    {0x1319, &op_load,	  9,   8, 255, 0xff, 0x03, 0x04, 0x01}, // load.wi ra   
    {0x131a, &op_load,	 10,   8, 255, 0xff, 0x03, 0x04, 0x01}, // load.wi sb   
    {0x131b, &op_load,	 11,   8, 255, 0xff, 0x03, 0x04, 0x01}, // load.wi sp   
    {0x131c, &op_load,	 12,   8, 255, 0xff, 0x03, 0x04, 0x01}, // load.wi db   
    {0x131d, &op_load,	 13,   8, 255, 0xff, 0x03, 0x04, 0x01}, // load.wi cb   
    {0x131e, &op_load,	 14,   8, 255, 0xff, 0x03, 0x04, 0x01}, // load.wi pi   
    {0x131f, &op_load,	 15,   8, 255, 0xff, 0x03, 0x04, 0x01}, // load.wi status   
    {0x1320, &op_load,	  0,   8, 255, 0xff, 0x03, 0x04, 0x02}, // load.di a   
    {0x1321, &op_load,	  1,   8, 255, 0xff, 0x03, 0x04, 0x02}, // load.di b   
    {0x1322, &op_load,	  2,   8, 255, 0xff, 0x03, 0x04, 0x02}, // load.di c   
    {0x1323, &op_load,	  3,   8, 255, 0xff, 0x03, 0x04, 0x02}, // load.di d   
    {0x1324, &op_load,	  4,   8, 255, 0xff, 0x03, 0x04, 0x02}, // load.di e   
    {0x1325, &op_load,	  5,   8, 255, 0xff, 0x03, 0x04, 0x02}, // load.di f   
    {0x1326, &op_load,	  6,   8, 255, 0xff, 0x03, 0x04, 0x02}, // load.di g   
    {0x1327, &op_load,	  7,   8, 255, 0xff, 0x03, 0x04, 0x02}, // load.di h   
    {0x1328, &op_load,	  8,   8, 255, 0xff, 0x03, 0x04, 0x02}, // load.di pc   
    {0x1329, &op_load,	  9,   8, 255, 0xff, 0x03, 0x04, 0x02}, // load.di ra   
    {0x132a, &op_load,	 10,   8, 255, 0xff, 0x03, 0x04, 0x02}, // load.di sb   
    {0x132b, &op_load,	 11,   8, 255, 0xff, 0x03, 0x04, 0x02}, // load.di sp   
    {0x132c, &op_load,	 12,   8, 255, 0xff, 0x03, 0x04, 0x02}, // load.di db   
    {0x132d, &op_load,	 13,   8, 255, 0xff, 0x03, 0x04, 0x02}, // load.di cb   
    {0x132e, &op_load,	 14,   8, 255, 0xff, 0x03, 0x04, 0x02}, // load.di pi   
    {0x132f, &op_load,	 15,   8, 255, 0xff, 0x03, 0x04, 0x02}, // load.di status   
    {0x1340, &op_load,	  0,   8, 255, 0xff, 0x03, 0x04, 0x04}, // load.i a   
    {0x1341, &op_load,	  1,   8, 255, 0xff, 0x03, 0x04, 0x04}, // load.i b   
    {0x1342, &op_load,	  2,   8, 255, 0xff, 0x03, 0x04, 0x04}, // load.i c   
    {0x1343, &op_load,	  3,   8, 255, 0xff, 0x03, 0x04, 0x04}, // load.i d   
    {0x1344, &op_load,	  4,   8, 255, 0xff, 0x03, 0x04, 0x04}, // load.i e   
    {0x1345, &op_load,	  5,   8, 255, 0xff, 0x03, 0x04, 0x04}, // load.i f   
    {0x1346, &op_load,	  6,   8, 255, 0xff, 0x03, 0x04, 0x04}, // load.i g   
    {0x1347, &op_load,	  7,   8, 255, 0xff, 0x03, 0x04, 0x04}, // load.i h   
    {0x1348, &op_load,	  8,   8, 255, 0xff, 0x03, 0x04, 0x04}, // load.i pc   
    {0x1349, &op_load,	  9,   8, 255, 0xff, 0x03, 0x04, 0x04}, // load.i ra   
    {0x134a, &op_load,	 10,   8, 255, 0xff, 0x03, 0x04, 0x04}, // load.i sb   
    {0x134b, &op_load,	 11,   8, 255, 0xff, 0x03, 0x04, 0x04}, // load.i sp   
    {0x134c, &op_load,	 12,   8, 255, 0xff, 0x03, 0x04, 0x04}, // load.i db   
    {0x134d, &op_load,	 13,   8, 255, 0xff, 0x03, 0x04, 0x04}, // load.i cb   
    {0x134e, &op_load,	 14,   8, 255, 0xff, 0x03, 0x04, 0x04}, // load.i pi   
    {0x134f, &op_load,	 15,   8, 255, 0xff, 0x03, 0x04, 0x04}, // load.i status   
    {0x1390, &op_set,	  0, 255, 255, 0xff, 0x02, 0x01, 0x01}, // set.w a   
    {0x1391, &op_set,	  1, 255, 255, 0xff, 0x02, 0x01, 0x01}, // set.w b   
    {0x1392, &op_set,	  2, 255, 255, 0xff, 0x02, 0x01, 0x01}, // set.w c   
    {0x1393, &op_set,	  3, 255, 255, 0xff, 0x02, 0x01, 0x01}, // set.w d   
    {0x1394, &op_set,	  4, 255, 255, 0xff, 0x02, 0x01, 0x01}, // set.w e   
    {0x1395, &op_set,	  5, 255, 255, 0xff, 0x02, 0x01, 0x01}, // set.w f   
    {0x1396, &op_set,	  6, 255, 255, 0xff, 0x02, 0x01, 0x01}, // set.w g   
    {0x1397, &op_set,	  7, 255, 255, 0xff, 0x02, 0x01, 0x01}, // set.w h   
    {0x1398, &op_set,	  8, 255, 255, 0xff, 0x02, 0x01, 0x01}, // set.w pc   
    {0x1399, &op_set,	  9, 255, 255, 0xff, 0x02, 0x01, 0x01}, // set.w ra   
    {0x139a, &op_set,	 10, 255, 255, 0xff, 0x02, 0x01, 0x01}, // set.w sb   
    {0x139b, &op_set,	 11, 255, 255, 0xff, 0x02, 0x01, 0x01}, // set.w sp   
    {0x139c, &op_set,	 12, 255, 255, 0xff, 0x02, 0x01, 0x01}, // set.w db   
    {0x139d, &op_set,	 13, 255, 255, 0xff, 0x02, 0x01, 0x01}, // set.w cb   
    {0x139e, &op_set,	 14, 255, 255, 0xff, 0x02, 0x01, 0x01}, // set.w pi   
    {0x139f, &op_set,	 15, 255, 255, 0xff, 0x02, 0x01, 0x01}, // set.w status   
    {0x13a0, &op_set,	  0, 255, 255, 0xff, 0x02, 0x02, 0x02}, // set.d a   
    {0x13a1, &op_set,	  1, 255, 255, 0xff, 0x02, 0x02, 0x02}, // set.d b   
    {0x13a2, &op_set,	  2, 255, 255, 0xff, 0x02, 0x02, 0x02}, // set.d c   
    {0x13a3, &op_set,	  3, 255, 255, 0xff, 0x02, 0x02, 0x02}, // set.d d   
    {0x13a4, &op_set,	  4, 255, 255, 0xff, 0x02, 0x02, 0x02}, // set.d e   
    {0x13a5, &op_set,	  5, 255, 255, 0xff, 0x02, 0x02, 0x02}, // set.d f   
    {0x13a6, &op_set,	  6, 255, 255, 0xff, 0x02, 0x02, 0x02}, // set.d g   
    {0x13a7, &op_set,	  7, 255, 255, 0xff, 0x02, 0x02, 0x02}, // set.d h   
    {0x13a8, &op_set,	  8, 255, 255, 0xff, 0x02, 0x02, 0x02}, // set.d pc   
    {0x13a9, &op_set,	  9, 255, 255, 0xff, 0x02, 0x02, 0x02}, // set.d ra   
    {0x13aa, &op_set,	 10, 255, 255, 0xff, 0x02, 0x02, 0x02}, // set.d sb   
    {0x13ab, &op_set,	 11, 255, 255, 0xff, 0x02, 0x02, 0x02}, // set.d sp   
    {0x13ac, &op_set,	 12, 255, 255, 0xff, 0x02, 0x02, 0x02}, // set.d db   
    {0x13ad, &op_set,	 13, 255, 255, 0xff, 0x02, 0x02, 0x02}, // set.d cb   
    {0x13ae, &op_set,	 14, 255, 255, 0xff, 0x02, 0x02, 0x02}, // set.d pi   
    {0x13af, &op_set,	 15, 255, 255, 0xff, 0x02, 0x02, 0x02}, // set.d status   
    {0x13c0, &op_set,	  0, 255, 255, 0xff, 0x02, 0x04, 0x04}, // set a   
    {0x13c1, &op_set,	  1, 255, 255, 0xff, 0x02, 0x04, 0x04}, // set b   
    {0x13c2, &op_set,	  2, 255, 255, 0xff, 0x02, 0x04, 0x04}, // set c   
    {0x13c3, &op_set,	  3, 255, 255, 0xff, 0x02, 0x04, 0x04}, // set d   
    {0x13c4, &op_set,	  4, 255, 255, 0xff, 0x02, 0x04, 0x04}, // set e   
    {0x13c5, &op_set,	  5, 255, 255, 0xff, 0x02, 0x04, 0x04}, // set f   
    {0x13c6, &op_set,	  6, 255, 255, 0xff, 0x02, 0x04, 0x04}, // set g   
    {0x13c7, &op_set,	  7, 255, 255, 0xff, 0x02, 0x04, 0x04}, // set h   
    {0x13c8, &op_set,	  8, 255, 255, 0xff, 0x02, 0x04, 0x04}, // set pc   
    {0x13c9, &op_set,	  9, 255, 255, 0xff, 0x02, 0x04, 0x04}, // set ra   
    {0x13ca, &op_set,	 10, 255, 255, 0xff, 0x02, 0x04, 0x04}, // set sb   
    {0x13cb, &op_set,	 11, 255, 255, 0xff, 0x02, 0x04, 0x04}, // set sp   
    {0x13cc, &op_set,	 12, 255, 255, 0xff, 0x02, 0x04, 0x04}, // set db   
    {0x13cd, &op_set,	 13, 255, 255, 0xff, 0x02, 0x04, 0x04}, // set cb   
    {0x13ce, &op_set,	 14, 255, 255, 0xff, 0x02, 0x04, 0x04}, // set pi   
    {0x13cf, &op_set,	 15, 255, 255, 0xff, 0x02, 0x04, 0x04}, // set status   
    {0x13f0, &op_set_c,	  0, 255, 255, 0xff, 0x02, 0x04, 0x04}, // set.c a   
    {0x13f1, &op_set_c,	  1, 255, 255, 0xff, 0x02, 0x04, 0x04}, // set.c b   
    {0x13f2, &op_set_c,	  2, 255, 255, 0xff, 0x02, 0x04, 0x04}, // set.c c   
    {0x13f3, &op_set_c,	  3, 255, 255, 0xff, 0x02, 0x04, 0x04}, // set.c d   
    {0x13f4, &op_set_c,	  4, 255, 255, 0xff, 0x02, 0x04, 0x04}, // set.c e   
    {0x13f5, &op_set_c,	  5, 255, 255, 0xff, 0x02, 0x04, 0x04}, // set.c f   
    {0x13f6, &op_set_c,	  6, 255, 255, 0xff, 0x02, 0x04, 0x04}, // set.c g   
    {0x13f7, &op_set_c,	  7, 255, 255, 0xff, 0x02, 0x04, 0x04}, // set.c h   
    {0x13f8, &op_set_c,	  8, 255, 255, 0xff, 0x02, 0x04, 0x04}, // set.c pc   
    {0x13f9, &op_set_c,	  9, 255, 255, 0xff, 0x02, 0x04, 0x04}, // set.c ra   
    {0x13fa, &op_set_c,	 10, 255, 255, 0xff, 0x02, 0x04, 0x04}, // set.c sb   
    {0x13fb, &op_set_c,	 11, 255, 255, 0xff, 0x02, 0x04, 0x04}, // set.c sp   
    {0x13fc, &op_set_c,	 12, 255, 255, 0xff, 0x02, 0x04, 0x04}, // set.c db   
    {0x13fd, &op_set_c,	 13, 255, 255, 0xff, 0x02, 0x04, 0x04}, // set.c cb   
    {0x13fe, &op_set_c,	 14, 255, 255, 0xff, 0x02, 0x04, 0x04}, // set.c pi   
    {0x13ff, &op_set_c,	 15, 255, 255, 0xff, 0x02, 0x04, 0x04}, // set.c status   
    {0x1400, &op_store,	  0,   0, 255, 0xff, 0x02, 0x00, 0x01}, // store.w a a  
    {0x1410, &op_store,	  0,   1, 255, 0xff, 0x02, 0x00, 0x01}, // store.w a b  
    {0x1420, &op_store,	  0,   2, 255, 0xff, 0x02, 0x00, 0x01}, // store.w a c  
    {0x1430, &op_store,	  0,   3, 255, 0xff, 0x02, 0x00, 0x01}, // store.w a d  
    {0x1440, &op_store,	  0,   4, 255, 0xff, 0x02, 0x00, 0x01}, // store.w a e  
    {0x1450, &op_store,	  0,   5, 255, 0xff, 0x02, 0x00, 0x01}, // store.w a f  
    {0x1460, &op_store,	  0,   6, 255, 0xff, 0x02, 0x00, 0x01}, // store.w a g  
    {0x1470, &op_store,	  0,   7, 255, 0xff, 0x02, 0x00, 0x01}, // store.w a h  
    {0x1480, &op_store,	  0,   8, 255, 0xff, 0x02, 0x00, 0x01}, // store.w a pc  
    {0x1490, &op_store,	  0,   9, 255, 0xff, 0x02, 0x00, 0x01}, // store.w a ra  
    {0x14a0, &op_store,	  0,  10, 255, 0xff, 0x02, 0x00, 0x01}, // store.w a sb  
    {0x14b0, &op_store,	  0,  11, 255, 0xff, 0x02, 0x00, 0x01}, // store.w a sp  
    {0x14c0, &op_store,	  0,  12, 255, 0xff, 0x02, 0x00, 0x01}, // store.w a db  
    {0x14d0, &op_store,	  0,  13, 255, 0xff, 0x02, 0x00, 0x01}, // store.w a cb  
    {0x14e0, &op_store,	  0,  14, 255, 0xff, 0x02, 0x00, 0x01}, // store.w a pi  
    {0x14f0, &op_store,	  0,  15, 255, 0xff, 0x02, 0x00, 0x01}, // store.w a status  
    {0x1401, &op_store,	  1,   0, 255, 0xff, 0x02, 0x00, 0x01}, // store.w b a  
    {0x1411, &op_store,	  1,   1, 255, 0xff, 0x02, 0x00, 0x01}, // store.w b b  
    {0x1421, &op_store,	  1,   2, 255, 0xff, 0x02, 0x00, 0x01}, // store.w b c  
    {0x1431, &op_store,	  1,   3, 255, 0xff, 0x02, 0x00, 0x01}, // store.w b d  
    {0x1441, &op_store,	  1,   4, 255, 0xff, 0x02, 0x00, 0x01}, // store.w b e  
    {0x1451, &op_store,	  1,   5, 255, 0xff, 0x02, 0x00, 0x01}, // store.w b f  
    {0x1461, &op_store,	  1,   6, 255, 0xff, 0x02, 0x00, 0x01}, // store.w b g  
    {0x1471, &op_store,	  1,   7, 255, 0xff, 0x02, 0x00, 0x01}, // store.w b h  
    {0x1481, &op_store,	  1,   8, 255, 0xff, 0x02, 0x00, 0x01}, // store.w b pc  
    {0x1491, &op_store,	  1,   9, 255, 0xff, 0x02, 0x00, 0x01}, // store.w b ra  
    {0x14a1, &op_store,	  1,  10, 255, 0xff, 0x02, 0x00, 0x01}, // store.w b sb  
    {0x14b1, &op_store,	  1,  11, 255, 0xff, 0x02, 0x00, 0x01}, // store.w b sp  
    {0x14c1, &op_store,	  1,  12, 255, 0xff, 0x02, 0x00, 0x01}, // store.w b db  
    {0x14d1, &op_store,	  1,  13, 255, 0xff, 0x02, 0x00, 0x01}, // store.w b cb  
    {0x14e1, &op_store,	  1,  14, 255, 0xff, 0x02, 0x00, 0x01}, // store.w b pi  
    {0x14f1, &op_store,	  1,  15, 255, 0xff, 0x02, 0x00, 0x01}, // store.w b status  
    {0x1402, &op_store,	  2,   0, 255, 0xff, 0x02, 0x00, 0x01}, // store.w c a  
    {0x1412, &op_store,	  2,   1, 255, 0xff, 0x02, 0x00, 0x01}, // store.w c b  
    {0x1422, &op_store,	  2,   2, 255, 0xff, 0x02, 0x00, 0x01}, // store.w c c  
    {0x1432, &op_store,	  2,   3, 255, 0xff, 0x02, 0x00, 0x01}, // store.w c d  
    {0x1442, &op_store,	  2,   4, 255, 0xff, 0x02, 0x00, 0x01}, // store.w c e  
    {0x1452, &op_store,	  2,   5, 255, 0xff, 0x02, 0x00, 0x01}, // store.w c f  
    {0x1462, &op_store,	  2,   6, 255, 0xff, 0x02, 0x00, 0x01}, // store.w c g  
    {0x1472, &op_store,	  2,   7, 255, 0xff, 0x02, 0x00, 0x01}, // store.w c h  
    {0x1482, &op_store,	  2,   8, 255, 0xff, 0x02, 0x00, 0x01}, // store.w c pc  
    {0x1492, &op_store,	  2,   9, 255, 0xff, 0x02, 0x00, 0x01}, // store.w c ra  
    {0x14a2, &op_store,	  2,  10, 255, 0xff, 0x02, 0x00, 0x01}, // store.w c sb  
    {0x14b2, &op_store,	  2,  11, 255, 0xff, 0x02, 0x00, 0x01}, // store.w c sp  
    {0x14c2, &op_store,	  2,  12, 255, 0xff, 0x02, 0x00, 0x01}, // store.w c db  
    {0x14d2, &op_store,	  2,  13, 255, 0xff, 0x02, 0x00, 0x01}, // store.w c cb  
    {0x14e2, &op_store,	  2,  14, 255, 0xff, 0x02, 0x00, 0x01}, // store.w c pi  
    {0x14f2, &op_store,	  2,  15, 255, 0xff, 0x02, 0x00, 0x01}, // store.w c status  
    {0x1403, &op_store,	  3,   0, 255, 0xff, 0x02, 0x00, 0x01}, // store.w d a  
    {0x1413, &op_store,	  3,   1, 255, 0xff, 0x02, 0x00, 0x01}, // store.w d b  
    {0x1423, &op_store,	  3,   2, 255, 0xff, 0x02, 0x00, 0x01}, // store.w d c  
    {0x1433, &op_store,	  3,   3, 255, 0xff, 0x02, 0x00, 0x01}, // store.w d d  
    {0x1443, &op_store,	  3,   4, 255, 0xff, 0x02, 0x00, 0x01}, // store.w d e  
    {0x1453, &op_store,	  3,   5, 255, 0xff, 0x02, 0x00, 0x01}, // store.w d f  
    {0x1463, &op_store,	  3,   6, 255, 0xff, 0x02, 0x00, 0x01}, // store.w d g  
    {0x1473, &op_store,	  3,   7, 255, 0xff, 0x02, 0x00, 0x01}, // store.w d h  
    {0x1483, &op_store,	  3,   8, 255, 0xff, 0x02, 0x00, 0x01}, // store.w d pc  
    {0x1493, &op_store,	  3,   9, 255, 0xff, 0x02, 0x00, 0x01}, // store.w d ra  
    {0x14a3, &op_store,	  3,  10, 255, 0xff, 0x02, 0x00, 0x01}, // store.w d sb  
    {0x14b3, &op_store,	  3,  11, 255, 0xff, 0x02, 0x00, 0x01}, // store.w d sp  
    {0x14c3, &op_store,	  3,  12, 255, 0xff, 0x02, 0x00, 0x01}, // store.w d db  
    {0x14d3, &op_store,	  3,  13, 255, 0xff, 0x02, 0x00, 0x01}, // store.w d cb  
    {0x14e3, &op_store,	  3,  14, 255, 0xff, 0x02, 0x00, 0x01}, // store.w d pi  
    {0x14f3, &op_store,	  3,  15, 255, 0xff, 0x02, 0x00, 0x01}, // store.w d status  
    {0x1404, &op_store,	  4,   0, 255, 0xff, 0x02, 0x00, 0x01}, // store.w e a  
    {0x1414, &op_store,	  4,   1, 255, 0xff, 0x02, 0x00, 0x01}, // store.w e b  
    {0x1424, &op_store,	  4,   2, 255, 0xff, 0x02, 0x00, 0x01}, // store.w e c  
    {0x1434, &op_store,	  4,   3, 255, 0xff, 0x02, 0x00, 0x01}, // store.w e d  
    {0x1444, &op_store,	  4,   4, 255, 0xff, 0x02, 0x00, 0x01}, // store.w e e  
    {0x1454, &op_store,	  4,   5, 255, 0xff, 0x02, 0x00, 0x01}, // store.w e f  
    {0x1464, &op_store,	  4,   6, 255, 0xff, 0x02, 0x00, 0x01}, // store.w e g  
    {0x1474, &op_store,	  4,   7, 255, 0xff, 0x02, 0x00, 0x01}, // store.w e h  
    {0x1484, &op_store,	  4,   8, 255, 0xff, 0x02, 0x00, 0x01}, // store.w e pc  
    {0x1494, &op_store,	  4,   9, 255, 0xff, 0x02, 0x00, 0x01}, // store.w e ra  
    {0x14a4, &op_store,	  4,  10, 255, 0xff, 0x02, 0x00, 0x01}, // store.w e sb  
    {0x14b4, &op_store,	  4,  11, 255, 0xff, 0x02, 0x00, 0x01}, // store.w e sp  
    {0x14c4, &op_store,	  4,  12, 255, 0xff, 0x02, 0x00, 0x01}, // store.w e db  
    {0x14d4, &op_store,	  4,  13, 255, 0xff, 0x02, 0x00, 0x01}, // store.w e cb  
    {0x14e4, &op_store,	  4,  14, 255, 0xff, 0x02, 0x00, 0x01}, // store.w e pi  
    {0x14f4, &op_store,	  4,  15, 255, 0xff, 0x02, 0x00, 0x01}, // store.w e status  
    {0x1405, &op_store,	  5,   0, 255, 0xff, 0x02, 0x00, 0x01}, // store.w f a  
    {0x1415, &op_store,	  5,   1, 255, 0xff, 0x02, 0x00, 0x01}, // store.w f b  
    {0x1425, &op_store,	  5,   2, 255, 0xff, 0x02, 0x00, 0x01}, // store.w f c  
    {0x1435, &op_store,	  5,   3, 255, 0xff, 0x02, 0x00, 0x01}, // store.w f d  
    {0x1445, &op_store,	  5,   4, 255, 0xff, 0x02, 0x00, 0x01}, // store.w f e  
    {0x1455, &op_store,	  5,   5, 255, 0xff, 0x02, 0x00, 0x01}, // store.w f f  
    {0x1465, &op_store,	  5,   6, 255, 0xff, 0x02, 0x00, 0x01}, // store.w f g  
    {0x1475, &op_store,	  5,   7, 255, 0xff, 0x02, 0x00, 0x01}, // store.w f h  
    {0x1485, &op_store,	  5,   8, 255, 0xff, 0x02, 0x00, 0x01}, // store.w f pc  
    {0x1495, &op_store,	  5,   9, 255, 0xff, 0x02, 0x00, 0x01}, // store.w f ra  
    {0x14a5, &op_store,	  5,  10, 255, 0xff, 0x02, 0x00, 0x01}, // store.w f sb  
    {0x14b5, &op_store,	  5,  11, 255, 0xff, 0x02, 0x00, 0x01}, // store.w f sp  
    {0x14c5, &op_store,	  5,  12, 255, 0xff, 0x02, 0x00, 0x01}, // store.w f db  
    {0x14d5, &op_store,	  5,  13, 255, 0xff, 0x02, 0x00, 0x01}, // store.w f cb  
    {0x14e5, &op_store,	  5,  14, 255, 0xff, 0x02, 0x00, 0x01}, // store.w f pi  
    {0x14f5, &op_store,	  5,  15, 255, 0xff, 0x02, 0x00, 0x01}, // store.w f status  
    {0x1406, &op_store,	  6,   0, 255, 0xff, 0x02, 0x00, 0x01}, // store.w g a  
    {0x1416, &op_store,	  6,   1, 255, 0xff, 0x02, 0x00, 0x01}, // store.w g b  
    {0x1426, &op_store,	  6,   2, 255, 0xff, 0x02, 0x00, 0x01}, // store.w g c  
    {0x1436, &op_store,	  6,   3, 255, 0xff, 0x02, 0x00, 0x01}, // store.w g d  
    {0x1446, &op_store,	  6,   4, 255, 0xff, 0x02, 0x00, 0x01}, // store.w g e  
    {0x1456, &op_store,	  6,   5, 255, 0xff, 0x02, 0x00, 0x01}, // store.w g f  
    {0x1466, &op_store,	  6,   6, 255, 0xff, 0x02, 0x00, 0x01}, // store.w g g  
    {0x1476, &op_store,	  6,   7, 255, 0xff, 0x02, 0x00, 0x01}, // store.w g h  
    {0x1486, &op_store,	  6,   8, 255, 0xff, 0x02, 0x00, 0x01}, // store.w g pc  
    {0x1496, &op_store,	  6,   9, 255, 0xff, 0x02, 0x00, 0x01}, // store.w g ra  
    {0x14a6, &op_store,	  6,  10, 255, 0xff, 0x02, 0x00, 0x01}, // store.w g sb  
    {0x14b6, &op_store,	  6,  11, 255, 0xff, 0x02, 0x00, 0x01}, // store.w g sp  
    {0x14c6, &op_store,	  6,  12, 255, 0xff, 0x02, 0x00, 0x01}, // store.w g db  
    {0x14d6, &op_store,	  6,  13, 255, 0xff, 0x02, 0x00, 0x01}, // store.w g cb  
    {0x14e6, &op_store,	  6,  14, 255, 0xff, 0x02, 0x00, 0x01}, // store.w g pi  
    {0x14f6, &op_store,	  6,  15, 255, 0xff, 0x02, 0x00, 0x01}, // store.w g status  
    {0x1407, &op_store,	  7,   0, 255, 0xff, 0x02, 0x00, 0x01}, // store.w h a  
    {0x1417, &op_store,	  7,   1, 255, 0xff, 0x02, 0x00, 0x01}, // store.w h b  
    {0x1427, &op_store,	  7,   2, 255, 0xff, 0x02, 0x00, 0x01}, // store.w h c  
    {0x1437, &op_store,	  7,   3, 255, 0xff, 0x02, 0x00, 0x01}, // store.w h d  
    {0x1447, &op_store,	  7,   4, 255, 0xff, 0x02, 0x00, 0x01}, // store.w h e  
    {0x1457, &op_store,	  7,   5, 255, 0xff, 0x02, 0x00, 0x01}, // store.w h f  
    {0x1467, &op_store,	  7,   6, 255, 0xff, 0x02, 0x00, 0x01}, // store.w h g  
    {0x1477, &op_store,	  7,   7, 255, 0xff, 0x02, 0x00, 0x01}, // store.w h h  
    {0x1487, &op_store,	  7,   8, 255, 0xff, 0x02, 0x00, 0x01}, // store.w h pc  
    {0x1497, &op_store,	  7,   9, 255, 0xff, 0x02, 0x00, 0x01}, // store.w h ra  
    {0x14a7, &op_store,	  7,  10, 255, 0xff, 0x02, 0x00, 0x01}, // store.w h sb  
    {0x14b7, &op_store,	  7,  11, 255, 0xff, 0x02, 0x00, 0x01}, // store.w h sp  
    {0x14c7, &op_store,	  7,  12, 255, 0xff, 0x02, 0x00, 0x01}, // store.w h db  
    {0x14d7, &op_store,	  7,  13, 255, 0xff, 0x02, 0x00, 0x01}, // store.w h cb  
    {0x14e7, &op_store,	  7,  14, 255, 0xff, 0x02, 0x00, 0x01}, // store.w h pi  
    {0x14f7, &op_store,	  7,  15, 255, 0xff, 0x02, 0x00, 0x01}, // store.w h status  
    {0x1408, &op_store,	  8,   0, 255, 0xff, 0x02, 0x00, 0x01}, // store.w pc a  
    {0x1418, &op_store,	  8,   1, 255, 0xff, 0x02, 0x00, 0x01}, // store.w pc b  
    {0x1428, &op_store,	  8,   2, 255, 0xff, 0x02, 0x00, 0x01}, // store.w pc c  
    {0x1438, &op_store,	  8,   3, 255, 0xff, 0x02, 0x00, 0x01}, // store.w pc d  
    {0x1448, &op_store,	  8,   4, 255, 0xff, 0x02, 0x00, 0x01}, // store.w pc e  
    {0x1458, &op_store,	  8,   5, 255, 0xff, 0x02, 0x00, 0x01}, // store.w pc f  
    {0x1468, &op_store,	  8,   6, 255, 0xff, 0x02, 0x00, 0x01}, // store.w pc g  
    {0x1478, &op_store,	  8,   7, 255, 0xff, 0x02, 0x00, 0x01}, // store.w pc h  
    {0x1488, &op_store,	  8,   8, 255, 0xff, 0x02, 0x00, 0x01}, // store.w pc pc  
    {0x1498, &op_store,	  8,   9, 255, 0xff, 0x02, 0x00, 0x01}, // store.w pc ra  
    {0x14a8, &op_store,	  8,  10, 255, 0xff, 0x02, 0x00, 0x01}, // store.w pc sb  
    {0x14b8, &op_store,	  8,  11, 255, 0xff, 0x02, 0x00, 0x01}, // store.w pc sp  
    {0x14c8, &op_store,	  8,  12, 255, 0xff, 0x02, 0x00, 0x01}, // store.w pc db  
    {0x14d8, &op_store,	  8,  13, 255, 0xff, 0x02, 0x00, 0x01}, // store.w pc cb  
    {0x14e8, &op_store,	  8,  14, 255, 0xff, 0x02, 0x00, 0x01}, // store.w pc pi  
    {0x14f8, &op_store,	  8,  15, 255, 0xff, 0x02, 0x00, 0x01}, // store.w pc status  
    {0x1409, &op_store,	  9,   0, 255, 0xff, 0x02, 0x00, 0x01}, // store.w ra a  
    {0x1419, &op_store,	  9,   1, 255, 0xff, 0x02, 0x00, 0x01}, // store.w ra b  
    {0x1429, &op_store,	  9,   2, 255, 0xff, 0x02, 0x00, 0x01}, // store.w ra c  
    {0x1439, &op_store,	  9,   3, 255, 0xff, 0x02, 0x00, 0x01}, // store.w ra d  
    {0x1449, &op_store,	  9,   4, 255, 0xff, 0x02, 0x00, 0x01}, // store.w ra e  
    {0x1459, &op_store,	  9,   5, 255, 0xff, 0x02, 0x00, 0x01}, // store.w ra f  
    {0x1469, &op_store,	  9,   6, 255, 0xff, 0x02, 0x00, 0x01}, // store.w ra g  
    {0x1479, &op_store,	  9,   7, 255, 0xff, 0x02, 0x00, 0x01}, // store.w ra h  
    {0x1489, &op_store,	  9,   8, 255, 0xff, 0x02, 0x00, 0x01}, // store.w ra pc  
    {0x1499, &op_store,	  9,   9, 255, 0xff, 0x02, 0x00, 0x01}, // store.w ra ra  
    {0x14a9, &op_store,	  9,  10, 255, 0xff, 0x02, 0x00, 0x01}, // store.w ra sb  
    {0x14b9, &op_store,	  9,  11, 255, 0xff, 0x02, 0x00, 0x01}, // store.w ra sp  
    {0x14c9, &op_store,	  9,  12, 255, 0xff, 0x02, 0x00, 0x01}, // store.w ra db  
    {0x14d9, &op_store,	  9,  13, 255, 0xff, 0x02, 0x00, 0x01}, // store.w ra cb  
    {0x14e9, &op_store,	  9,  14, 255, 0xff, 0x02, 0x00, 0x01}, // store.w ra pi  
    {0x14f9, &op_store,	  9,  15, 255, 0xff, 0x02, 0x00, 0x01}, // store.w ra status  
    {0x140a, &op_store,	 10,   0, 255, 0xff, 0x02, 0x00, 0x01}, // store.w sb a  
    {0x141a, &op_store,	 10,   1, 255, 0xff, 0x02, 0x00, 0x01}, // store.w sb b  
    {0x142a, &op_store,	 10,   2, 255, 0xff, 0x02, 0x00, 0x01}, // store.w sb c  
    {0x143a, &op_store,	 10,   3, 255, 0xff, 0x02, 0x00, 0x01}, // store.w sb d  
    {0x144a, &op_store,	 10,   4, 255, 0xff, 0x02, 0x00, 0x01}, // store.w sb e  
    {0x145a, &op_store,	 10,   5, 255, 0xff, 0x02, 0x00, 0x01}, // store.w sb f  
    {0x146a, &op_store,	 10,   6, 255, 0xff, 0x02, 0x00, 0x01}, // store.w sb g  
    {0x147a, &op_store,	 10,   7, 255, 0xff, 0x02, 0x00, 0x01}, // store.w sb h  
    {0x148a, &op_store,	 10,   8, 255, 0xff, 0x02, 0x00, 0x01}, // store.w sb pc  
    {0x149a, &op_store,	 10,   9, 255, 0xff, 0x02, 0x00, 0x01}, // store.w sb ra  
    {0x14aa, &op_store,	 10,  10, 255, 0xff, 0x02, 0x00, 0x01}, // store.w sb sb  
    {0x14ba, &op_store,	 10,  11, 255, 0xff, 0x02, 0x00, 0x01}, // store.w sb sp  
    {0x14ca, &op_store,	 10,  12, 255, 0xff, 0x02, 0x00, 0x01}, // store.w sb db  
    {0x14da, &op_store,	 10,  13, 255, 0xff, 0x02, 0x00, 0x01}, // store.w sb cb  
    {0x14ea, &op_store,	 10,  14, 255, 0xff, 0x02, 0x00, 0x01}, // store.w sb pi  
    {0x14fa, &op_store,	 10,  15, 255, 0xff, 0x02, 0x00, 0x01}, // store.w sb status  
    {0x140b, &op_store,	 11,   0, 255, 0xff, 0x02, 0x00, 0x01}, // store.w sp a  
    {0x141b, &op_store,	 11,   1, 255, 0xff, 0x02, 0x00, 0x01}, // store.w sp b  
    {0x142b, &op_store,	 11,   2, 255, 0xff, 0x02, 0x00, 0x01}, // store.w sp c  
    {0x143b, &op_store,	 11,   3, 255, 0xff, 0x02, 0x00, 0x01}, // store.w sp d  
    {0x144b, &op_store,	 11,   4, 255, 0xff, 0x02, 0x00, 0x01}, // store.w sp e  
    {0x145b, &op_store,	 11,   5, 255, 0xff, 0x02, 0x00, 0x01}, // store.w sp f  
    {0x146b, &op_store,	 11,   6, 255, 0xff, 0x02, 0x00, 0x01}, // store.w sp g  
    {0x147b, &op_store,	 11,   7, 255, 0xff, 0x02, 0x00, 0x01}, // store.w sp h  
    {0x148b, &op_store,	 11,   8, 255, 0xff, 0x02, 0x00, 0x01}, // store.w sp pc  
    {0x149b, &op_store,	 11,   9, 255, 0xff, 0x02, 0x00, 0x01}, // store.w sp ra  
    {0x14ab, &op_store,	 11,  10, 255, 0xff, 0x02, 0x00, 0x01}, // store.w sp sb  
    {0x14bb, &op_store,	 11,  11, 255, 0xff, 0x02, 0x00, 0x01}, // store.w sp sp  
    {0x14cb, &op_store,	 11,  12, 255, 0xff, 0x02, 0x00, 0x01}, // store.w sp db  
    {0x14db, &op_store,	 11,  13, 255, 0xff, 0x02, 0x00, 0x01}, // store.w sp cb  
    {0x14eb, &op_store,	 11,  14, 255, 0xff, 0x02, 0x00, 0x01}, // store.w sp pi  
    {0x14fb, &op_store,	 11,  15, 255, 0xff, 0x02, 0x00, 0x01}, // store.w sp status  
    {0x140c, &op_store,	 12,   0, 255, 0xff, 0x02, 0x00, 0x01}, // store.w db a  
    {0x141c, &op_store,	 12,   1, 255, 0xff, 0x02, 0x00, 0x01}, // store.w db b  
    {0x142c, &op_store,	 12,   2, 255, 0xff, 0x02, 0x00, 0x01}, // store.w db c  
    {0x143c, &op_store,	 12,   3, 255, 0xff, 0x02, 0x00, 0x01}, // store.w db d  
    {0x144c, &op_store,	 12,   4, 255, 0xff, 0x02, 0x00, 0x01}, // store.w db e  
    {0x145c, &op_store,	 12,   5, 255, 0xff, 0x02, 0x00, 0x01}, // store.w db f  
    {0x146c, &op_store,	 12,   6, 255, 0xff, 0x02, 0x00, 0x01}, // store.w db g  
    {0x147c, &op_store,	 12,   7, 255, 0xff, 0x02, 0x00, 0x01}, // store.w db h  
    {0x148c, &op_store,	 12,   8, 255, 0xff, 0x02, 0x00, 0x01}, // store.w db pc  
    {0x149c, &op_store,	 12,   9, 255, 0xff, 0x02, 0x00, 0x01}, // store.w db ra  
    {0x14ac, &op_store,	 12,  10, 255, 0xff, 0x02, 0x00, 0x01}, // store.w db sb  
    {0x14bc, &op_store,	 12,  11, 255, 0xff, 0x02, 0x00, 0x01}, // store.w db sp  
    {0x14cc, &op_store,	 12,  12, 255, 0xff, 0x02, 0x00, 0x01}, // store.w db db  
    {0x14dc, &op_store,	 12,  13, 255, 0xff, 0x02, 0x00, 0x01}, // store.w db cb  
    {0x14ec, &op_store,	 12,  14, 255, 0xff, 0x02, 0x00, 0x01}, // store.w db pi  
    {0x14fc, &op_store,	 12,  15, 255, 0xff, 0x02, 0x00, 0x01}, // store.w db status  
    {0x140d, &op_store,	 13,   0, 255, 0xff, 0x02, 0x00, 0x01}, // store.w cb a  
    {0x141d, &op_store,	 13,   1, 255, 0xff, 0x02, 0x00, 0x01}, // store.w cb b  
    {0x142d, &op_store,	 13,   2, 255, 0xff, 0x02, 0x00, 0x01}, // store.w cb c  
    {0x143d, &op_store,	 13,   3, 255, 0xff, 0x02, 0x00, 0x01}, // store.w cb d  
    {0x144d, &op_store,	 13,   4, 255, 0xff, 0x02, 0x00, 0x01}, // store.w cb e  
    {0x145d, &op_store,	 13,   5, 255, 0xff, 0x02, 0x00, 0x01}, // store.w cb f  
    {0x146d, &op_store,	 13,   6, 255, 0xff, 0x02, 0x00, 0x01}, // store.w cb g  
    {0x147d, &op_store,	 13,   7, 255, 0xff, 0x02, 0x00, 0x01}, // store.w cb h  
    {0x148d, &op_store,	 13,   8, 255, 0xff, 0x02, 0x00, 0x01}, // store.w cb pc  
    {0x149d, &op_store,	 13,   9, 255, 0xff, 0x02, 0x00, 0x01}, // store.w cb ra  
    {0x14ad, &op_store,	 13,  10, 255, 0xff, 0x02, 0x00, 0x01}, // store.w cb sb  
    {0x14bd, &op_store,	 13,  11, 255, 0xff, 0x02, 0x00, 0x01}, // store.w cb sp  
    {0x14cd, &op_store,	 13,  12, 255, 0xff, 0x02, 0x00, 0x01}, // store.w cb db  
    {0x14dd, &op_store,	 13,  13, 255, 0xff, 0x02, 0x00, 0x01}, // store.w cb cb  
    {0x14ed, &op_store,	 13,  14, 255, 0xff, 0x02, 0x00, 0x01}, // store.w cb pi  
    {0x14fd, &op_store,	 13,  15, 255, 0xff, 0x02, 0x00, 0x01}, // store.w cb status  
    {0x140e, &op_store,	 14,   0, 255, 0xff, 0x02, 0x00, 0x01}, // store.w pi a  
    {0x141e, &op_store,	 14,   1, 255, 0xff, 0x02, 0x00, 0x01}, // store.w pi b  
    {0x142e, &op_store,	 14,   2, 255, 0xff, 0x02, 0x00, 0x01}, // store.w pi c  
    {0x143e, &op_store,	 14,   3, 255, 0xff, 0x02, 0x00, 0x01}, // store.w pi d  
    {0x144e, &op_store,	 14,   4, 255, 0xff, 0x02, 0x00, 0x01}, // store.w pi e  
    {0x145e, &op_store,	 14,   5, 255, 0xff, 0x02, 0x00, 0x01}, // store.w pi f  
    {0x146e, &op_store,	 14,   6, 255, 0xff, 0x02, 0x00, 0x01}, // store.w pi g  
    {0x147e, &op_store,	 14,   7, 255, 0xff, 0x02, 0x00, 0x01}, // store.w pi h  
    {0x148e, &op_store,	 14,   8, 255, 0xff, 0x02, 0x00, 0x01}, // store.w pi pc  
    {0x149e, &op_store,	 14,   9, 255, 0xff, 0x02, 0x00, 0x01}, // store.w pi ra  
    {0x14ae, &op_store,	 14,  10, 255, 0xff, 0x02, 0x00, 0x01}, // store.w pi sb  
    {0x14be, &op_store,	 14,  11, 255, 0xff, 0x02, 0x00, 0x01}, // store.w pi sp  
    {0x14ce, &op_store,	 14,  12, 255, 0xff, 0x02, 0x00, 0x01}, // store.w pi db  
    {0x14de, &op_store,	 14,  13, 255, 0xff, 0x02, 0x00, 0x01}, // store.w pi cb  
    {0x14ee, &op_store,	 14,  14, 255, 0xff, 0x02, 0x00, 0x01}, // store.w pi pi  
    {0x14fe, &op_store,	 14,  15, 255, 0xff, 0x02, 0x00, 0x01}, // store.w pi status  
    {0x140f, &op_store,	 15,   0, 255, 0xff, 0x02, 0x00, 0x01}, // store.w status a  
    {0x141f, &op_store,	 15,   1, 255, 0xff, 0x02, 0x00, 0x01}, // store.w status b  
    {0x142f, &op_store,	 15,   2, 255, 0xff, 0x02, 0x00, 0x01}, // store.w status c  
    {0x143f, &op_store,	 15,   3, 255, 0xff, 0x02, 0x00, 0x01}, // store.w status d  
    {0x144f, &op_store,	 15,   4, 255, 0xff, 0x02, 0x00, 0x01}, // store.w status e  
    {0x145f, &op_store,	 15,   5, 255, 0xff, 0x02, 0x00, 0x01}, // store.w status f  
    {0x146f, &op_store,	 15,   6, 255, 0xff, 0x02, 0x00, 0x01}, // store.w status g  
    {0x147f, &op_store,	 15,   7, 255, 0xff, 0x02, 0x00, 0x01}, // store.w status h  
    {0x148f, &op_store,	 15,   8, 255, 0xff, 0x02, 0x00, 0x01}, // store.w status pc  
    {0x149f, &op_store,	 15,   9, 255, 0xff, 0x02, 0x00, 0x01}, // store.w status ra  
    {0x14af, &op_store,	 15,  10, 255, 0xff, 0x02, 0x00, 0x01}, // store.w status sb  
    {0x14bf, &op_store,	 15,  11, 255, 0xff, 0x02, 0x00, 0x01}, // store.w status sp  
    {0x14cf, &op_store,	 15,  12, 255, 0xff, 0x02, 0x00, 0x01}, // store.w status db  
    {0x14df, &op_store,	 15,  13, 255, 0xff, 0x02, 0x00, 0x01}, // store.w status cb  
    {0x14ef, &op_store,	 15,  14, 255, 0xff, 0x02, 0x00, 0x01}, // store.w status pi  
    {0x14ff, &op_store,	 15,  15, 255, 0xff, 0x02, 0x00, 0x01}, // store.w status status  
    {0x1500, &op_store,	  0,   0, 255, 0xff, 0x02, 0x00, 0x02}, // store.d a a  
    {0x1510, &op_store,	  0,   1, 255, 0xff, 0x02, 0x00, 0x02}, // store.d a b  
    {0x1520, &op_store,	  0,   2, 255, 0xff, 0x02, 0x00, 0x02}, // store.d a c  
    {0x1530, &op_store,	  0,   3, 255, 0xff, 0x02, 0x00, 0x02}, // store.d a d  
    {0x1540, &op_store,	  0,   4, 255, 0xff, 0x02, 0x00, 0x02}, // store.d a e  
    {0x1550, &op_store,	  0,   5, 255, 0xff, 0x02, 0x00, 0x02}, // store.d a f  
    {0x1560, &op_store,	  0,   6, 255, 0xff, 0x02, 0x00, 0x02}, // store.d a g  
    {0x1570, &op_store,	  0,   7, 255, 0xff, 0x02, 0x00, 0x02}, // store.d a h  
    {0x1580, &op_store,	  0,   8, 255, 0xff, 0x02, 0x00, 0x02}, // store.d a pc  
    {0x1590, &op_store,	  0,   9, 255, 0xff, 0x02, 0x00, 0x02}, // store.d a ra  
    {0x15a0, &op_store,	  0,  10, 255, 0xff, 0x02, 0x00, 0x02}, // store.d a sb  
    {0x15b0, &op_store,	  0,  11, 255, 0xff, 0x02, 0x00, 0x02}, // store.d a sp  
    {0x15c0, &op_store,	  0,  12, 255, 0xff, 0x02, 0x00, 0x02}, // store.d a db  
    {0x15d0, &op_store,	  0,  13, 255, 0xff, 0x02, 0x00, 0x02}, // store.d a cb  
    {0x15e0, &op_store,	  0,  14, 255, 0xff, 0x02, 0x00, 0x02}, // store.d a pi  
    {0x15f0, &op_store,	  0,  15, 255, 0xff, 0x02, 0x00, 0x02}, // store.d a status  
    {0x1501, &op_store,	  1,   0, 255, 0xff, 0x02, 0x00, 0x02}, // store.d b a  
    {0x1511, &op_store,	  1,   1, 255, 0xff, 0x02, 0x00, 0x02}, // store.d b b  
    {0x1521, &op_store,	  1,   2, 255, 0xff, 0x02, 0x00, 0x02}, // store.d b c  
    {0x1531, &op_store,	  1,   3, 255, 0xff, 0x02, 0x00, 0x02}, // store.d b d  
    {0x1541, &op_store,	  1,   4, 255, 0xff, 0x02, 0x00, 0x02}, // store.d b e  
    {0x1551, &op_store,	  1,   5, 255, 0xff, 0x02, 0x00, 0x02}, // store.d b f  
    {0x1561, &op_store,	  1,   6, 255, 0xff, 0x02, 0x00, 0x02}, // store.d b g  
    {0x1571, &op_store,	  1,   7, 255, 0xff, 0x02, 0x00, 0x02}, // store.d b h  
    {0x1581, &op_store,	  1,   8, 255, 0xff, 0x02, 0x00, 0x02}, // store.d b pc  
    {0x1591, &op_store,	  1,   9, 255, 0xff, 0x02, 0x00, 0x02}, // store.d b ra  
    {0x15a1, &op_store,	  1,  10, 255, 0xff, 0x02, 0x00, 0x02}, // store.d b sb  
    {0x15b1, &op_store,	  1,  11, 255, 0xff, 0x02, 0x00, 0x02}, // store.d b sp  
    {0x15c1, &op_store,	  1,  12, 255, 0xff, 0x02, 0x00, 0x02}, // store.d b db  
    {0x15d1, &op_store,	  1,  13, 255, 0xff, 0x02, 0x00, 0x02}, // store.d b cb  
    {0x15e1, &op_store,	  1,  14, 255, 0xff, 0x02, 0x00, 0x02}, // store.d b pi  
    {0x15f1, &op_store,	  1,  15, 255, 0xff, 0x02, 0x00, 0x02}, // store.d b status  
    {0x1502, &op_store,	  2,   0, 255, 0xff, 0x02, 0x00, 0x02}, // store.d c a  
    {0x1512, &op_store,	  2,   1, 255, 0xff, 0x02, 0x00, 0x02}, // store.d c b  
    {0x1522, &op_store,	  2,   2, 255, 0xff, 0x02, 0x00, 0x02}, // store.d c c  
    {0x1532, &op_store,	  2,   3, 255, 0xff, 0x02, 0x00, 0x02}, // store.d c d  
    {0x1542, &op_store,	  2,   4, 255, 0xff, 0x02, 0x00, 0x02}, // store.d c e  
    {0x1552, &op_store,	  2,   5, 255, 0xff, 0x02, 0x00, 0x02}, // store.d c f  
    {0x1562, &op_store,	  2,   6, 255, 0xff, 0x02, 0x00, 0x02}, // store.d c g  
    {0x1572, &op_store,	  2,   7, 255, 0xff, 0x02, 0x00, 0x02}, // store.d c h  
    {0x1582, &op_store,	  2,   8, 255, 0xff, 0x02, 0x00, 0x02}, // store.d c pc  
    {0x1592, &op_store,	  2,   9, 255, 0xff, 0x02, 0x00, 0x02}, // store.d c ra  
    {0x15a2, &op_store,	  2,  10, 255, 0xff, 0x02, 0x00, 0x02}, // store.d c sb  
    {0x15b2, &op_store,	  2,  11, 255, 0xff, 0x02, 0x00, 0x02}, // store.d c sp  
    {0x15c2, &op_store,	  2,  12, 255, 0xff, 0x02, 0x00, 0x02}, // store.d c db  
    {0x15d2, &op_store,	  2,  13, 255, 0xff, 0x02, 0x00, 0x02}, // store.d c cb  
    {0x15e2, &op_store,	  2,  14, 255, 0xff, 0x02, 0x00, 0x02}, // store.d c pi  
    {0x15f2, &op_store,	  2,  15, 255, 0xff, 0x02, 0x00, 0x02}, // store.d c status  
    {0x1503, &op_store,	  3,   0, 255, 0xff, 0x02, 0x00, 0x02}, // store.d d a  
    {0x1513, &op_store,	  3,   1, 255, 0xff, 0x02, 0x00, 0x02}, // store.d d b  
    {0x1523, &op_store,	  3,   2, 255, 0xff, 0x02, 0x00, 0x02}, // store.d d c  
    {0x1533, &op_store,	  3,   3, 255, 0xff, 0x02, 0x00, 0x02}, // store.d d d  
    {0x1543, &op_store,	  3,   4, 255, 0xff, 0x02, 0x00, 0x02}, // store.d d e  
    {0x1553, &op_store,	  3,   5, 255, 0xff, 0x02, 0x00, 0x02}, // store.d d f  
    {0x1563, &op_store,	  3,   6, 255, 0xff, 0x02, 0x00, 0x02}, // store.d d g  
    {0x1573, &op_store,	  3,   7, 255, 0xff, 0x02, 0x00, 0x02}, // store.d d h  
    {0x1583, &op_store,	  3,   8, 255, 0xff, 0x02, 0x00, 0x02}, // store.d d pc  
    {0x1593, &op_store,	  3,   9, 255, 0xff, 0x02, 0x00, 0x02}, // store.d d ra  
    {0x15a3, &op_store,	  3,  10, 255, 0xff, 0x02, 0x00, 0x02}, // store.d d sb  
    {0x15b3, &op_store,	  3,  11, 255, 0xff, 0x02, 0x00, 0x02}, // store.d d sp  
    {0x15c3, &op_store,	  3,  12, 255, 0xff, 0x02, 0x00, 0x02}, // store.d d db  
    {0x15d3, &op_store,	  3,  13, 255, 0xff, 0x02, 0x00, 0x02}, // store.d d cb  
    {0x15e3, &op_store,	  3,  14, 255, 0xff, 0x02, 0x00, 0x02}, // store.d d pi  
    {0x15f3, &op_store,	  3,  15, 255, 0xff, 0x02, 0x00, 0x02}, // store.d d status  
    {0x1504, &op_store,	  4,   0, 255, 0xff, 0x02, 0x00, 0x02}, // store.d e a  
    {0x1514, &op_store,	  4,   1, 255, 0xff, 0x02, 0x00, 0x02}, // store.d e b  
    {0x1524, &op_store,	  4,   2, 255, 0xff, 0x02, 0x00, 0x02}, // store.d e c  
    {0x1534, &op_store,	  4,   3, 255, 0xff, 0x02, 0x00, 0x02}, // store.d e d  
    {0x1544, &op_store,	  4,   4, 255, 0xff, 0x02, 0x00, 0x02}, // store.d e e  
    {0x1554, &op_store,	  4,   5, 255, 0xff, 0x02, 0x00, 0x02}, // store.d e f  
    {0x1564, &op_store,	  4,   6, 255, 0xff, 0x02, 0x00, 0x02}, // store.d e g  
    {0x1574, &op_store,	  4,   7, 255, 0xff, 0x02, 0x00, 0x02}, // store.d e h  
    {0x1584, &op_store,	  4,   8, 255, 0xff, 0x02, 0x00, 0x02}, // store.d e pc  
    {0x1594, &op_store,	  4,   9, 255, 0xff, 0x02, 0x00, 0x02}, // store.d e ra  
    {0x15a4, &op_store,	  4,  10, 255, 0xff, 0x02, 0x00, 0x02}, // store.d e sb  
    {0x15b4, &op_store,	  4,  11, 255, 0xff, 0x02, 0x00, 0x02}, // store.d e sp  
    {0x15c4, &op_store,	  4,  12, 255, 0xff, 0x02, 0x00, 0x02}, // store.d e db  
    {0x15d4, &op_store,	  4,  13, 255, 0xff, 0x02, 0x00, 0x02}, // store.d e cb  
    {0x15e4, &op_store,	  4,  14, 255, 0xff, 0x02, 0x00, 0x02}, // store.d e pi  
    {0x15f4, &op_store,	  4,  15, 255, 0xff, 0x02, 0x00, 0x02}, // store.d e status  
    {0x1505, &op_store,	  5,   0, 255, 0xff, 0x02, 0x00, 0x02}, // store.d f a  
    {0x1515, &op_store,	  5,   1, 255, 0xff, 0x02, 0x00, 0x02}, // store.d f b  
    {0x1525, &op_store,	  5,   2, 255, 0xff, 0x02, 0x00, 0x02}, // store.d f c  
    {0x1535, &op_store,	  5,   3, 255, 0xff, 0x02, 0x00, 0x02}, // store.d f d  
    {0x1545, &op_store,	  5,   4, 255, 0xff, 0x02, 0x00, 0x02}, // store.d f e  
    {0x1555, &op_store,	  5,   5, 255, 0xff, 0x02, 0x00, 0x02}, // store.d f f  
    {0x1565, &op_store,	  5,   6, 255, 0xff, 0x02, 0x00, 0x02}, // store.d f g  
    {0x1575, &op_store,	  5,   7, 255, 0xff, 0x02, 0x00, 0x02}, // store.d f h  
    {0x1585, &op_store,	  5,   8, 255, 0xff, 0x02, 0x00, 0x02}, // store.d f pc  
    {0x1595, &op_store,	  5,   9, 255, 0xff, 0x02, 0x00, 0x02}, // store.d f ra  
    {0x15a5, &op_store,	  5,  10, 255, 0xff, 0x02, 0x00, 0x02}, // store.d f sb  
    {0x15b5, &op_store,	  5,  11, 255, 0xff, 0x02, 0x00, 0x02}, // store.d f sp  
    {0x15c5, &op_store,	  5,  12, 255, 0xff, 0x02, 0x00, 0x02}, // store.d f db  
    {0x15d5, &op_store,	  5,  13, 255, 0xff, 0x02, 0x00, 0x02}, // store.d f cb  
    {0x15e5, &op_store,	  5,  14, 255, 0xff, 0x02, 0x00, 0x02}, // store.d f pi  
    {0x15f5, &op_store,	  5,  15, 255, 0xff, 0x02, 0x00, 0x02}, // store.d f status  
    {0x1506, &op_store,	  6,   0, 255, 0xff, 0x02, 0x00, 0x02}, // store.d g a  
    {0x1516, &op_store,	  6,   1, 255, 0xff, 0x02, 0x00, 0x02}, // store.d g b  
    {0x1526, &op_store,	  6,   2, 255, 0xff, 0x02, 0x00, 0x02}, // store.d g c  
    {0x1536, &op_store,	  6,   3, 255, 0xff, 0x02, 0x00, 0x02}, // store.d g d  
    {0x1546, &op_store,	  6,   4, 255, 0xff, 0x02, 0x00, 0x02}, // store.d g e  
    {0x1556, &op_store,	  6,   5, 255, 0xff, 0x02, 0x00, 0x02}, // store.d g f  
    {0x1566, &op_store,	  6,   6, 255, 0xff, 0x02, 0x00, 0x02}, // store.d g g  
    {0x1576, &op_store,	  6,   7, 255, 0xff, 0x02, 0x00, 0x02}, // store.d g h  
    {0x1586, &op_store,	  6,   8, 255, 0xff, 0x02, 0x00, 0x02}, // store.d g pc  
    {0x1596, &op_store,	  6,   9, 255, 0xff, 0x02, 0x00, 0x02}, // store.d g ra  
    {0x15a6, &op_store,	  6,  10, 255, 0xff, 0x02, 0x00, 0x02}, // store.d g sb  
    {0x15b6, &op_store,	  6,  11, 255, 0xff, 0x02, 0x00, 0x02}, // store.d g sp  
    {0x15c6, &op_store,	  6,  12, 255, 0xff, 0x02, 0x00, 0x02}, // store.d g db  
    {0x15d6, &op_store,	  6,  13, 255, 0xff, 0x02, 0x00, 0x02}, // store.d g cb  
    {0x15e6, &op_store,	  6,  14, 255, 0xff, 0x02, 0x00, 0x02}, // store.d g pi  
    {0x15f6, &op_store,	  6,  15, 255, 0xff, 0x02, 0x00, 0x02}, // store.d g status  
    {0x1507, &op_store,	  7,   0, 255, 0xff, 0x02, 0x00, 0x02}, // store.d h a  
    {0x1517, &op_store,	  7,   1, 255, 0xff, 0x02, 0x00, 0x02}, // store.d h b  
    {0x1527, &op_store,	  7,   2, 255, 0xff, 0x02, 0x00, 0x02}, // store.d h c  
    {0x1537, &op_store,	  7,   3, 255, 0xff, 0x02, 0x00, 0x02}, // store.d h d  
    {0x1547, &op_store,	  7,   4, 255, 0xff, 0x02, 0x00, 0x02}, // store.d h e  
    {0x1557, &op_store,	  7,   5, 255, 0xff, 0x02, 0x00, 0x02}, // store.d h f  
    {0x1567, &op_store,	  7,   6, 255, 0xff, 0x02, 0x00, 0x02}, // store.d h g  
    {0x1577, &op_store,	  7,   7, 255, 0xff, 0x02, 0x00, 0x02}, // store.d h h  
    {0x1587, &op_store,	  7,   8, 255, 0xff, 0x02, 0x00, 0x02}, // store.d h pc  
    {0x1597, &op_store,	  7,   9, 255, 0xff, 0x02, 0x00, 0x02}, // store.d h ra  
    {0x15a7, &op_store,	  7,  10, 255, 0xff, 0x02, 0x00, 0x02}, // store.d h sb  
    {0x15b7, &op_store,	  7,  11, 255, 0xff, 0x02, 0x00, 0x02}, // store.d h sp  
    {0x15c7, &op_store,	  7,  12, 255, 0xff, 0x02, 0x00, 0x02}, // store.d h db  
    {0x15d7, &op_store,	  7,  13, 255, 0xff, 0x02, 0x00, 0x02}, // store.d h cb  
    {0x15e7, &op_store,	  7,  14, 255, 0xff, 0x02, 0x00, 0x02}, // store.d h pi  
    {0x15f7, &op_store,	  7,  15, 255, 0xff, 0x02, 0x00, 0x02}, // store.d h status  
    {0x1508, &op_store,	  8,   0, 255, 0xff, 0x02, 0x00, 0x02}, // store.d pc a  
    {0x1518, &op_store,	  8,   1, 255, 0xff, 0x02, 0x00, 0x02}, // store.d pc b  
    {0x1528, &op_store,	  8,   2, 255, 0xff, 0x02, 0x00, 0x02}, // store.d pc c  
    {0x1538, &op_store,	  8,   3, 255, 0xff, 0x02, 0x00, 0x02}, // store.d pc d  
    {0x1548, &op_store,	  8,   4, 255, 0xff, 0x02, 0x00, 0x02}, // store.d pc e  
    {0x1558, &op_store,	  8,   5, 255, 0xff, 0x02, 0x00, 0x02}, // store.d pc f  
    {0x1568, &op_store,	  8,   6, 255, 0xff, 0x02, 0x00, 0x02}, // store.d pc g  
    {0x1578, &op_store,	  8,   7, 255, 0xff, 0x02, 0x00, 0x02}, // store.d pc h  
    {0x1588, &op_store,	  8,   8, 255, 0xff, 0x02, 0x00, 0x02}, // store.d pc pc  
    {0x1598, &op_store,	  8,   9, 255, 0xff, 0x02, 0x00, 0x02}, // store.d pc ra  
    {0x15a8, &op_store,	  8,  10, 255, 0xff, 0x02, 0x00, 0x02}, // store.d pc sb  
    {0x15b8, &op_store,	  8,  11, 255, 0xff, 0x02, 0x00, 0x02}, // store.d pc sp  
    {0x15c8, &op_store,	  8,  12, 255, 0xff, 0x02, 0x00, 0x02}, // store.d pc db  
    {0x15d8, &op_store,	  8,  13, 255, 0xff, 0x02, 0x00, 0x02}, // store.d pc cb  
    {0x15e8, &op_store,	  8,  14, 255, 0xff, 0x02, 0x00, 0x02}, // store.d pc pi  
    {0x15f8, &op_store,	  8,  15, 255, 0xff, 0x02, 0x00, 0x02}, // store.d pc status  
    {0x1509, &op_store,	  9,   0, 255, 0xff, 0x02, 0x00, 0x02}, // store.d ra a  
    {0x1519, &op_store,	  9,   1, 255, 0xff, 0x02, 0x00, 0x02}, // store.d ra b  
    {0x1529, &op_store,	  9,   2, 255, 0xff, 0x02, 0x00, 0x02}, // store.d ra c  
    {0x1539, &op_store,	  9,   3, 255, 0xff, 0x02, 0x00, 0x02}, // store.d ra d  
    {0x1549, &op_store,	  9,   4, 255, 0xff, 0x02, 0x00, 0x02}, // store.d ra e  
    {0x1559, &op_store,	  9,   5, 255, 0xff, 0x02, 0x00, 0x02}, // store.d ra f  
    {0x1569, &op_store,	  9,   6, 255, 0xff, 0x02, 0x00, 0x02}, // store.d ra g  
    {0x1579, &op_store,	  9,   7, 255, 0xff, 0x02, 0x00, 0x02}, // store.d ra h  
    {0x1589, &op_store,	  9,   8, 255, 0xff, 0x02, 0x00, 0x02}, // store.d ra pc  
    {0x1599, &op_store,	  9,   9, 255, 0xff, 0x02, 0x00, 0x02}, // store.d ra ra  
    {0x15a9, &op_store,	  9,  10, 255, 0xff, 0x02, 0x00, 0x02}, // store.d ra sb  
    {0x15b9, &op_store,	  9,  11, 255, 0xff, 0x02, 0x00, 0x02}, // store.d ra sp  
    {0x15c9, &op_store,	  9,  12, 255, 0xff, 0x02, 0x00, 0x02}, // store.d ra db  
    {0x15d9, &op_store,	  9,  13, 255, 0xff, 0x02, 0x00, 0x02}, // store.d ra cb  
    {0x15e9, &op_store,	  9,  14, 255, 0xff, 0x02, 0x00, 0x02}, // store.d ra pi  
    {0x15f9, &op_store,	  9,  15, 255, 0xff, 0x02, 0x00, 0x02}, // store.d ra status  
    {0x150a, &op_store,	 10,   0, 255, 0xff, 0x02, 0x00, 0x02}, // store.d sb a  
    {0x151a, &op_store,	 10,   1, 255, 0xff, 0x02, 0x00, 0x02}, // store.d sb b  
    {0x152a, &op_store,	 10,   2, 255, 0xff, 0x02, 0x00, 0x02}, // store.d sb c  
    {0x153a, &op_store,	 10,   3, 255, 0xff, 0x02, 0x00, 0x02}, // store.d sb d  
    {0x154a, &op_store,	 10,   4, 255, 0xff, 0x02, 0x00, 0x02}, // store.d sb e  
    {0x155a, &op_store,	 10,   5, 255, 0xff, 0x02, 0x00, 0x02}, // store.d sb f  
    {0x156a, &op_store,	 10,   6, 255, 0xff, 0x02, 0x00, 0x02}, // store.d sb g  
    {0x157a, &op_store,	 10,   7, 255, 0xff, 0x02, 0x00, 0x02}, // store.d sb h  
    {0x158a, &op_store,	 10,   8, 255, 0xff, 0x02, 0x00, 0x02}, // store.d sb pc  
    {0x159a, &op_store,	 10,   9, 255, 0xff, 0x02, 0x00, 0x02}, // store.d sb ra  
    {0x15aa, &op_store,	 10,  10, 255, 0xff, 0x02, 0x00, 0x02}, // store.d sb sb  
    {0x15ba, &op_store,	 10,  11, 255, 0xff, 0x02, 0x00, 0x02}, // store.d sb sp  
    {0x15ca, &op_store,	 10,  12, 255, 0xff, 0x02, 0x00, 0x02}, // store.d sb db  
    {0x15da, &op_store,	 10,  13, 255, 0xff, 0x02, 0x00, 0x02}, // store.d sb cb  
    {0x15ea, &op_store,	 10,  14, 255, 0xff, 0x02, 0x00, 0x02}, // store.d sb pi  
    {0x15fa, &op_store,	 10,  15, 255, 0xff, 0x02, 0x00, 0x02}, // store.d sb status  
    {0x150b, &op_store,	 11,   0, 255, 0xff, 0x02, 0x00, 0x02}, // store.d sp a  
    {0x151b, &op_store,	 11,   1, 255, 0xff, 0x02, 0x00, 0x02}, // store.d sp b  
    {0x152b, &op_store,	 11,   2, 255, 0xff, 0x02, 0x00, 0x02}, // store.d sp c  
    {0x153b, &op_store,	 11,   3, 255, 0xff, 0x02, 0x00, 0x02}, // store.d sp d  
    {0x154b, &op_store,	 11,   4, 255, 0xff, 0x02, 0x00, 0x02}, // store.d sp e  
    {0x155b, &op_store,	 11,   5, 255, 0xff, 0x02, 0x00, 0x02}, // store.d sp f  
    {0x156b, &op_store,	 11,   6, 255, 0xff, 0x02, 0x00, 0x02}, // store.d sp g  
    {0x157b, &op_store,	 11,   7, 255, 0xff, 0x02, 0x00, 0x02}, // store.d sp h  
    {0x158b, &op_store,	 11,   8, 255, 0xff, 0x02, 0x00, 0x02}, // store.d sp pc  
    {0x159b, &op_store,	 11,   9, 255, 0xff, 0x02, 0x00, 0x02}, // store.d sp ra  
    {0x15ab, &op_store,	 11,  10, 255, 0xff, 0x02, 0x00, 0x02}, // store.d sp sb  
    {0x15bb, &op_store,	 11,  11, 255, 0xff, 0x02, 0x00, 0x02}, // store.d sp sp  
    {0x15cb, &op_store,	 11,  12, 255, 0xff, 0x02, 0x00, 0x02}, // store.d sp db  
    {0x15db, &op_store,	 11,  13, 255, 0xff, 0x02, 0x00, 0x02}, // store.d sp cb  
    {0x15eb, &op_store,	 11,  14, 255, 0xff, 0x02, 0x00, 0x02}, // store.d sp pi  
    {0x15fb, &op_store,	 11,  15, 255, 0xff, 0x02, 0x00, 0x02}, // store.d sp status  
    {0x150c, &op_store,	 12,   0, 255, 0xff, 0x02, 0x00, 0x02}, // store.d db a  
    {0x151c, &op_store,	 12,   1, 255, 0xff, 0x02, 0x00, 0x02}, // store.d db b  
    {0x152c, &op_store,	 12,   2, 255, 0xff, 0x02, 0x00, 0x02}, // store.d db c  
    {0x153c, &op_store,	 12,   3, 255, 0xff, 0x02, 0x00, 0x02}, // store.d db d  
    {0x154c, &op_store,	 12,   4, 255, 0xff, 0x02, 0x00, 0x02}, // store.d db e  
    {0x155c, &op_store,	 12,   5, 255, 0xff, 0x02, 0x00, 0x02}, // store.d db f  
    {0x156c, &op_store,	 12,   6, 255, 0xff, 0x02, 0x00, 0x02}, // store.d db g  
    {0x157c, &op_store,	 12,   7, 255, 0xff, 0x02, 0x00, 0x02}, // store.d db h  
    {0x158c, &op_store,	 12,   8, 255, 0xff, 0x02, 0x00, 0x02}, // store.d db pc  
    {0x159c, &op_store,	 12,   9, 255, 0xff, 0x02, 0x00, 0x02}, // store.d db ra  
    {0x15ac, &op_store,	 12,  10, 255, 0xff, 0x02, 0x00, 0x02}, // store.d db sb  
    {0x15bc, &op_store,	 12,  11, 255, 0xff, 0x02, 0x00, 0x02}, // store.d db sp  
    {0x15cc, &op_store,	 12,  12, 255, 0xff, 0x02, 0x00, 0x02}, // store.d db db  
    {0x15dc, &op_store,	 12,  13, 255, 0xff, 0x02, 0x00, 0x02}, // store.d db cb  
    {0x15ec, &op_store,	 12,  14, 255, 0xff, 0x02, 0x00, 0x02}, // store.d db pi  
    {0x15fc, &op_store,	 12,  15, 255, 0xff, 0x02, 0x00, 0x02}, // store.d db status  
    {0x150d, &op_store,	 13,   0, 255, 0xff, 0x02, 0x00, 0x02}, // store.d cb a  
    {0x151d, &op_store,	 13,   1, 255, 0xff, 0x02, 0x00, 0x02}, // store.d cb b  
    {0x152d, &op_store,	 13,   2, 255, 0xff, 0x02, 0x00, 0x02}, // store.d cb c  
    {0x153d, &op_store,	 13,   3, 255, 0xff, 0x02, 0x00, 0x02}, // store.d cb d  
    {0x154d, &op_store,	 13,   4, 255, 0xff, 0x02, 0x00, 0x02}, // store.d cb e  
    {0x155d, &op_store,	 13,   5, 255, 0xff, 0x02, 0x00, 0x02}, // store.d cb f  
    {0x156d, &op_store,	 13,   6, 255, 0xff, 0x02, 0x00, 0x02}, // store.d cb g  
    {0x157d, &op_store,	 13,   7, 255, 0xff, 0x02, 0x00, 0x02}, // store.d cb h  
    {0x158d, &op_store,	 13,   8, 255, 0xff, 0x02, 0x00, 0x02}, // store.d cb pc  
    {0x159d, &op_store,	 13,   9, 255, 0xff, 0x02, 0x00, 0x02}, // store.d cb ra  
    {0x15ad, &op_store,	 13,  10, 255, 0xff, 0x02, 0x00, 0x02}, // store.d cb sb  
    {0x15bd, &op_store,	 13,  11, 255, 0xff, 0x02, 0x00, 0x02}, // store.d cb sp  
    {0x15cd, &op_store,	 13,  12, 255, 0xff, 0x02, 0x00, 0x02}, // store.d cb db  
    {0x15dd, &op_store,	 13,  13, 255, 0xff, 0x02, 0x00, 0x02}, // store.d cb cb  
    {0x15ed, &op_store,	 13,  14, 255, 0xff, 0x02, 0x00, 0x02}, // store.d cb pi  
    {0x15fd, &op_store,	 13,  15, 255, 0xff, 0x02, 0x00, 0x02}, // store.d cb status  
    {0x150e, &op_store,	 14,   0, 255, 0xff, 0x02, 0x00, 0x02}, // store.d pi a  
    {0x151e, &op_store,	 14,   1, 255, 0xff, 0x02, 0x00, 0x02}, // store.d pi b  
    {0x152e, &op_store,	 14,   2, 255, 0xff, 0x02, 0x00, 0x02}, // store.d pi c  
    {0x153e, &op_store,	 14,   3, 255, 0xff, 0x02, 0x00, 0x02}, // store.d pi d  
    {0x154e, &op_store,	 14,   4, 255, 0xff, 0x02, 0x00, 0x02}, // store.d pi e  
    {0x155e, &op_store,	 14,   5, 255, 0xff, 0x02, 0x00, 0x02}, // store.d pi f  
    {0x156e, &op_store,	 14,   6, 255, 0xff, 0x02, 0x00, 0x02}, // store.d pi g  
    {0x157e, &op_store,	 14,   7, 255, 0xff, 0x02, 0x00, 0x02}, // store.d pi h  
    {0x158e, &op_store,	 14,   8, 255, 0xff, 0x02, 0x00, 0x02}, // store.d pi pc  
    {0x159e, &op_store,	 14,   9, 255, 0xff, 0x02, 0x00, 0x02}, // store.d pi ra  
    {0x15ae, &op_store,	 14,  10, 255, 0xff, 0x02, 0x00, 0x02}, // store.d pi sb  
    {0x15be, &op_store,	 14,  11, 255, 0xff, 0x02, 0x00, 0x02}, // store.d pi sp  
    {0x15ce, &op_store,	 14,  12, 255, 0xff, 0x02, 0x00, 0x02}, // store.d pi db  
    {0x15de, &op_store,	 14,  13, 255, 0xff, 0x02, 0x00, 0x02}, // store.d pi cb  
    {0x15ee, &op_store,	 14,  14, 255, 0xff, 0x02, 0x00, 0x02}, // store.d pi pi  
    {0x15fe, &op_store,	 14,  15, 255, 0xff, 0x02, 0x00, 0x02}, // store.d pi status  
    {0x150f, &op_store,	 15,   0, 255, 0xff, 0x02, 0x00, 0x02}, // store.d status a  
    {0x151f, &op_store,	 15,   1, 255, 0xff, 0x02, 0x00, 0x02}, // store.d status b  
    {0x152f, &op_store,	 15,   2, 255, 0xff, 0x02, 0x00, 0x02}, // store.d status c  
    {0x153f, &op_store,	 15,   3, 255, 0xff, 0x02, 0x00, 0x02}, // store.d status d  
    {0x154f, &op_store,	 15,   4, 255, 0xff, 0x02, 0x00, 0x02}, // store.d status e  
    {0x155f, &op_store,	 15,   5, 255, 0xff, 0x02, 0x00, 0x02}, // store.d status f  
    {0x156f, &op_store,	 15,   6, 255, 0xff, 0x02, 0x00, 0x02}, // store.d status g  
    {0x157f, &op_store,	 15,   7, 255, 0xff, 0x02, 0x00, 0x02}, // store.d status h  
    {0x158f, &op_store,	 15,   8, 255, 0xff, 0x02, 0x00, 0x02}, // store.d status pc  
    {0x159f, &op_store,	 15,   9, 255, 0xff, 0x02, 0x00, 0x02}, // store.d status ra  
    {0x15af, &op_store,	 15,  10, 255, 0xff, 0x02, 0x00, 0x02}, // store.d status sb  
    {0x15bf, &op_store,	 15,  11, 255, 0xff, 0x02, 0x00, 0x02}, // store.d status sp  
    {0x15cf, &op_store,	 15,  12, 255, 0xff, 0x02, 0x00, 0x02}, // store.d status db  
    {0x15df, &op_store,	 15,  13, 255, 0xff, 0x02, 0x00, 0x02}, // store.d status cb  
    {0x15ef, &op_store,	 15,  14, 255, 0xff, 0x02, 0x00, 0x02}, // store.d status pi  
    {0x15ff, &op_store,	 15,  15, 255, 0xff, 0x02, 0x00, 0x02}, // store.d status status  
    {0x1600, &op_store,	  0,   0, 255, 0xff, 0x02, 0x00, 0x04}, // store a a  
    {0x1610, &op_store,	  0,   1, 255, 0xff, 0x02, 0x00, 0x04}, // store a b  
    {0x1620, &op_store,	  0,   2, 255, 0xff, 0x02, 0x00, 0x04}, // store a c  
    {0x1630, &op_store,	  0,   3, 255, 0xff, 0x02, 0x00, 0x04}, // store a d  
    {0x1640, &op_store,	  0,   4, 255, 0xff, 0x02, 0x00, 0x04}, // store a e  
    {0x1650, &op_store,	  0,   5, 255, 0xff, 0x02, 0x00, 0x04}, // store a f  
    {0x1660, &op_store,	  0,   6, 255, 0xff, 0x02, 0x00, 0x04}, // store a g  
    {0x1670, &op_store,	  0,   7, 255, 0xff, 0x02, 0x00, 0x04}, // store a h  
    {0x1680, &op_store,	  0,   8, 255, 0xff, 0x02, 0x00, 0x04}, // store a pc  
    {0x1690, &op_store,	  0,   9, 255, 0xff, 0x02, 0x00, 0x04}, // store a ra  
    {0x16a0, &op_store,	  0,  10, 255, 0xff, 0x02, 0x00, 0x04}, // store a sb  
    {0x16b0, &op_store,	  0,  11, 255, 0xff, 0x02, 0x00, 0x04}, // store a sp  
    {0x16c0, &op_store,	  0,  12, 255, 0xff, 0x02, 0x00, 0x04}, // store a db  
    {0x16d0, &op_store,	  0,  13, 255, 0xff, 0x02, 0x00, 0x04}, // store a cb  
    {0x16e0, &op_store,	  0,  14, 255, 0xff, 0x02, 0x00, 0x04}, // store a pi  
    {0x16f0, &op_store,	  0,  15, 255, 0xff, 0x02, 0x00, 0x04}, // store a status  
    {0x1601, &op_store,	  1,   0, 255, 0xff, 0x02, 0x00, 0x04}, // store b a  
    {0x1611, &op_store,	  1,   1, 255, 0xff, 0x02, 0x00, 0x04}, // store b b  
    {0x1621, &op_store,	  1,   2, 255, 0xff, 0x02, 0x00, 0x04}, // store b c  
    {0x1631, &op_store,	  1,   3, 255, 0xff, 0x02, 0x00, 0x04}, // store b d  
    {0x1641, &op_store,	  1,   4, 255, 0xff, 0x02, 0x00, 0x04}, // store b e  
    {0x1651, &op_store,	  1,   5, 255, 0xff, 0x02, 0x00, 0x04}, // store b f  
    {0x1661, &op_store,	  1,   6, 255, 0xff, 0x02, 0x00, 0x04}, // store b g  
    {0x1671, &op_store,	  1,   7, 255, 0xff, 0x02, 0x00, 0x04}, // store b h  
    {0x1681, &op_store,	  1,   8, 255, 0xff, 0x02, 0x00, 0x04}, // store b pc  
    {0x1691, &op_store,	  1,   9, 255, 0xff, 0x02, 0x00, 0x04}, // store b ra  
    {0x16a1, &op_store,	  1,  10, 255, 0xff, 0x02, 0x00, 0x04}, // store b sb  
    {0x16b1, &op_store,	  1,  11, 255, 0xff, 0x02, 0x00, 0x04}, // store b sp  
    {0x16c1, &op_store,	  1,  12, 255, 0xff, 0x02, 0x00, 0x04}, // store b db  
    {0x16d1, &op_store,	  1,  13, 255, 0xff, 0x02, 0x00, 0x04}, // store b cb  
    {0x16e1, &op_store,	  1,  14, 255, 0xff, 0x02, 0x00, 0x04}, // store b pi  
    {0x16f1, &op_store,	  1,  15, 255, 0xff, 0x02, 0x00, 0x04}, // store b status  
    {0x1602, &op_store,	  2,   0, 255, 0xff, 0x02, 0x00, 0x04}, // store c a  
    {0x1612, &op_store,	  2,   1, 255, 0xff, 0x02, 0x00, 0x04}, // store c b  
    {0x1622, &op_store,	  2,   2, 255, 0xff, 0x02, 0x00, 0x04}, // store c c  
    {0x1632, &op_store,	  2,   3, 255, 0xff, 0x02, 0x00, 0x04}, // store c d  
    {0x1642, &op_store,	  2,   4, 255, 0xff, 0x02, 0x00, 0x04}, // store c e  
    {0x1652, &op_store,	  2,   5, 255, 0xff, 0x02, 0x00, 0x04}, // store c f  
    {0x1662, &op_store,	  2,   6, 255, 0xff, 0x02, 0x00, 0x04}, // store c g  
    {0x1672, &op_store,	  2,   7, 255, 0xff, 0x02, 0x00, 0x04}, // store c h  
    {0x1682, &op_store,	  2,   8, 255, 0xff, 0x02, 0x00, 0x04}, // store c pc  
    {0x1692, &op_store,	  2,   9, 255, 0xff, 0x02, 0x00, 0x04}, // store c ra  
    {0x16a2, &op_store,	  2,  10, 255, 0xff, 0x02, 0x00, 0x04}, // store c sb  
    {0x16b2, &op_store,	  2,  11, 255, 0xff, 0x02, 0x00, 0x04}, // store c sp  
    {0x16c2, &op_store,	  2,  12, 255, 0xff, 0x02, 0x00, 0x04}, // store c db  
    {0x16d2, &op_store,	  2,  13, 255, 0xff, 0x02, 0x00, 0x04}, // store c cb  
    {0x16e2, &op_store,	  2,  14, 255, 0xff, 0x02, 0x00, 0x04}, // store c pi  
    {0x16f2, &op_store,	  2,  15, 255, 0xff, 0x02, 0x00, 0x04}, // store c status  
    {0x1603, &op_store,	  3,   0, 255, 0xff, 0x02, 0x00, 0x04}, // store d a  
    {0x1613, &op_store,	  3,   1, 255, 0xff, 0x02, 0x00, 0x04}, // store d b  
    {0x1623, &op_store,	  3,   2, 255, 0xff, 0x02, 0x00, 0x04}, // store d c  
    {0x1633, &op_store,	  3,   3, 255, 0xff, 0x02, 0x00, 0x04}, // store d d  
    {0x1643, &op_store,	  3,   4, 255, 0xff, 0x02, 0x00, 0x04}, // store d e  
    {0x1653, &op_store,	  3,   5, 255, 0xff, 0x02, 0x00, 0x04}, // store d f  
    {0x1663, &op_store,	  3,   6, 255, 0xff, 0x02, 0x00, 0x04}, // store d g  
    {0x1673, &op_store,	  3,   7, 255, 0xff, 0x02, 0x00, 0x04}, // store d h  
    {0x1683, &op_store,	  3,   8, 255, 0xff, 0x02, 0x00, 0x04}, // store d pc  
    {0x1693, &op_store,	  3,   9, 255, 0xff, 0x02, 0x00, 0x04}, // store d ra  
    {0x16a3, &op_store,	  3,  10, 255, 0xff, 0x02, 0x00, 0x04}, // store d sb  
    {0x16b3, &op_store,	  3,  11, 255, 0xff, 0x02, 0x00, 0x04}, // store d sp  
    {0x16c3, &op_store,	  3,  12, 255, 0xff, 0x02, 0x00, 0x04}, // store d db  
    {0x16d3, &op_store,	  3,  13, 255, 0xff, 0x02, 0x00, 0x04}, // store d cb  
    {0x16e3, &op_store,	  3,  14, 255, 0xff, 0x02, 0x00, 0x04}, // store d pi  
    {0x16f3, &op_store,	  3,  15, 255, 0xff, 0x02, 0x00, 0x04}, // store d status  
    {0x1604, &op_store,	  4,   0, 255, 0xff, 0x02, 0x00, 0x04}, // store e a  
    {0x1614, &op_store,	  4,   1, 255, 0xff, 0x02, 0x00, 0x04}, // store e b  
    {0x1624, &op_store,	  4,   2, 255, 0xff, 0x02, 0x00, 0x04}, // store e c  
    {0x1634, &op_store,	  4,   3, 255, 0xff, 0x02, 0x00, 0x04}, // store e d  
    {0x1644, &op_store,	  4,   4, 255, 0xff, 0x02, 0x00, 0x04}, // store e e  
    {0x1654, &op_store,	  4,   5, 255, 0xff, 0x02, 0x00, 0x04}, // store e f  
    {0x1664, &op_store,	  4,   6, 255, 0xff, 0x02, 0x00, 0x04}, // store e g  
    {0x1674, &op_store,	  4,   7, 255, 0xff, 0x02, 0x00, 0x04}, // store e h  
    {0x1684, &op_store,	  4,   8, 255, 0xff, 0x02, 0x00, 0x04}, // store e pc  
    {0x1694, &op_store,	  4,   9, 255, 0xff, 0x02, 0x00, 0x04}, // store e ra  
    {0x16a4, &op_store,	  4,  10, 255, 0xff, 0x02, 0x00, 0x04}, // store e sb  
    {0x16b4, &op_store,	  4,  11, 255, 0xff, 0x02, 0x00, 0x04}, // store e sp  
    {0x16c4, &op_store,	  4,  12, 255, 0xff, 0x02, 0x00, 0x04}, // store e db  
    {0x16d4, &op_store,	  4,  13, 255, 0xff, 0x02, 0x00, 0x04}, // store e cb  
    {0x16e4, &op_store,	  4,  14, 255, 0xff, 0x02, 0x00, 0x04}, // store e pi  
    {0x16f4, &op_store,	  4,  15, 255, 0xff, 0x02, 0x00, 0x04}, // store e status  
    {0x1605, &op_store,	  5,   0, 255, 0xff, 0x02, 0x00, 0x04}, // store f a  
    {0x1615, &op_store,	  5,   1, 255, 0xff, 0x02, 0x00, 0x04}, // store f b  
    {0x1625, &op_store,	  5,   2, 255, 0xff, 0x02, 0x00, 0x04}, // store f c  
    {0x1635, &op_store,	  5,   3, 255, 0xff, 0x02, 0x00, 0x04}, // store f d  
    {0x1645, &op_store,	  5,   4, 255, 0xff, 0x02, 0x00, 0x04}, // store f e  
    {0x1655, &op_store,	  5,   5, 255, 0xff, 0x02, 0x00, 0x04}, // store f f  
    {0x1665, &op_store,	  5,   6, 255, 0xff, 0x02, 0x00, 0x04}, // store f g  
    {0x1675, &op_store,	  5,   7, 255, 0xff, 0x02, 0x00, 0x04}, // store f h  
    {0x1685, &op_store,	  5,   8, 255, 0xff, 0x02, 0x00, 0x04}, // store f pc  
    {0x1695, &op_store,	  5,   9, 255, 0xff, 0x02, 0x00, 0x04}, // store f ra  
    {0x16a5, &op_store,	  5,  10, 255, 0xff, 0x02, 0x00, 0x04}, // store f sb  
    {0x16b5, &op_store,	  5,  11, 255, 0xff, 0x02, 0x00, 0x04}, // store f sp  
    {0x16c5, &op_store,	  5,  12, 255, 0xff, 0x02, 0x00, 0x04}, // store f db  
    {0x16d5, &op_store,	  5,  13, 255, 0xff, 0x02, 0x00, 0x04}, // store f cb  
    {0x16e5, &op_store,	  5,  14, 255, 0xff, 0x02, 0x00, 0x04}, // store f pi  
    {0x16f5, &op_store,	  5,  15, 255, 0xff, 0x02, 0x00, 0x04}, // store f status  
    {0x1606, &op_store,	  6,   0, 255, 0xff, 0x02, 0x00, 0x04}, // store g a  
    {0x1616, &op_store,	  6,   1, 255, 0xff, 0x02, 0x00, 0x04}, // store g b  
    {0x1626, &op_store,	  6,   2, 255, 0xff, 0x02, 0x00, 0x04}, // store g c  
    {0x1636, &op_store,	  6,   3, 255, 0xff, 0x02, 0x00, 0x04}, // store g d  
    {0x1646, &op_store,	  6,   4, 255, 0xff, 0x02, 0x00, 0x04}, // store g e  
    {0x1656, &op_store,	  6,   5, 255, 0xff, 0x02, 0x00, 0x04}, // store g f  
    {0x1666, &op_store,	  6,   6, 255, 0xff, 0x02, 0x00, 0x04}, // store g g  
    {0x1676, &op_store,	  6,   7, 255, 0xff, 0x02, 0x00, 0x04}, // store g h  
    {0x1686, &op_store,	  6,   8, 255, 0xff, 0x02, 0x00, 0x04}, // store g pc  
    {0x1696, &op_store,	  6,   9, 255, 0xff, 0x02, 0x00, 0x04}, // store g ra  
    {0x16a6, &op_store,	  6,  10, 255, 0xff, 0x02, 0x00, 0x04}, // store g sb  
    {0x16b6, &op_store,	  6,  11, 255, 0xff, 0x02, 0x00, 0x04}, // store g sp  
    {0x16c6, &op_store,	  6,  12, 255, 0xff, 0x02, 0x00, 0x04}, // store g db  
    {0x16d6, &op_store,	  6,  13, 255, 0xff, 0x02, 0x00, 0x04}, // store g cb  
    {0x16e6, &op_store,	  6,  14, 255, 0xff, 0x02, 0x00, 0x04}, // store g pi  
    {0x16f6, &op_store,	  6,  15, 255, 0xff, 0x02, 0x00, 0x04}, // store g status  
    {0x1607, &op_store,	  7,   0, 255, 0xff, 0x02, 0x00, 0x04}, // store h a  
    {0x1617, &op_store,	  7,   1, 255, 0xff, 0x02, 0x00, 0x04}, // store h b  
    {0x1627, &op_store,	  7,   2, 255, 0xff, 0x02, 0x00, 0x04}, // store h c  
    {0x1637, &op_store,	  7,   3, 255, 0xff, 0x02, 0x00, 0x04}, // store h d  
    {0x1647, &op_store,	  7,   4, 255, 0xff, 0x02, 0x00, 0x04}, // store h e  
    {0x1657, &op_store,	  7,   5, 255, 0xff, 0x02, 0x00, 0x04}, // store h f  
    {0x1667, &op_store,	  7,   6, 255, 0xff, 0x02, 0x00, 0x04}, // store h g  
    {0x1677, &op_store,	  7,   7, 255, 0xff, 0x02, 0x00, 0x04}, // store h h  
    {0x1687, &op_store,	  7,   8, 255, 0xff, 0x02, 0x00, 0x04}, // store h pc  
    {0x1697, &op_store,	  7,   9, 255, 0xff, 0x02, 0x00, 0x04}, // store h ra  
    {0x16a7, &op_store,	  7,  10, 255, 0xff, 0x02, 0x00, 0x04}, // store h sb  
    {0x16b7, &op_store,	  7,  11, 255, 0xff, 0x02, 0x00, 0x04}, // store h sp  
    {0x16c7, &op_store,	  7,  12, 255, 0xff, 0x02, 0x00, 0x04}, // store h db  
    {0x16d7, &op_store,	  7,  13, 255, 0xff, 0x02, 0x00, 0x04}, // store h cb  
    {0x16e7, &op_store,	  7,  14, 255, 0xff, 0x02, 0x00, 0x04}, // store h pi  
    {0x16f7, &op_store,	  7,  15, 255, 0xff, 0x02, 0x00, 0x04}, // store h status  
    {0x1608, &op_store,	  8,   0, 255, 0xff, 0x02, 0x00, 0x04}, // store pc a  
    {0x1618, &op_store,	  8,   1, 255, 0xff, 0x02, 0x00, 0x04}, // store pc b  
    {0x1628, &op_store,	  8,   2, 255, 0xff, 0x02, 0x00, 0x04}, // store pc c  
    {0x1638, &op_store,	  8,   3, 255, 0xff, 0x02, 0x00, 0x04}, // store pc d  
    {0x1648, &op_store,	  8,   4, 255, 0xff, 0x02, 0x00, 0x04}, // store pc e  
    {0x1658, &op_store,	  8,   5, 255, 0xff, 0x02, 0x00, 0x04}, // store pc f  
    {0x1668, &op_store,	  8,   6, 255, 0xff, 0x02, 0x00, 0x04}, // store pc g  
    {0x1678, &op_store,	  8,   7, 255, 0xff, 0x02, 0x00, 0x04}, // store pc h  
    {0x1688, &op_store,	  8,   8, 255, 0xff, 0x02, 0x00, 0x04}, // store pc pc  
    {0x1698, &op_store,	  8,   9, 255, 0xff, 0x02, 0x00, 0x04}, // store pc ra  
    {0x16a8, &op_store,	  8,  10, 255, 0xff, 0x02, 0x00, 0x04}, // store pc sb  
    {0x16b8, &op_store,	  8,  11, 255, 0xff, 0x02, 0x00, 0x04}, // store pc sp  
    {0x16c8, &op_store,	  8,  12, 255, 0xff, 0x02, 0x00, 0x04}, // store pc db  
    {0x16d8, &op_store,	  8,  13, 255, 0xff, 0x02, 0x00, 0x04}, // store pc cb  
    {0x16e8, &op_store,	  8,  14, 255, 0xff, 0x02, 0x00, 0x04}, // store pc pi  
    {0x16f8, &op_store,	  8,  15, 255, 0xff, 0x02, 0x00, 0x04}, // store pc status  
    {0x1609, &op_store,	  9,   0, 255, 0xff, 0x02, 0x00, 0x04}, // store ra a  
    {0x1619, &op_store,	  9,   1, 255, 0xff, 0x02, 0x00, 0x04}, // store ra b  
    {0x1629, &op_store,	  9,   2, 255, 0xff, 0x02, 0x00, 0x04}, // store ra c  
    {0x1639, &op_store,	  9,   3, 255, 0xff, 0x02, 0x00, 0x04}, // store ra d  
    {0x1649, &op_store,	  9,   4, 255, 0xff, 0x02, 0x00, 0x04}, // store ra e  
    {0x1659, &op_store,	  9,   5, 255, 0xff, 0x02, 0x00, 0x04}, // store ra f  
    {0x1669, &op_store,	  9,   6, 255, 0xff, 0x02, 0x00, 0x04}, // store ra g  
    {0x1679, &op_store,	  9,   7, 255, 0xff, 0x02, 0x00, 0x04}, // store ra h  
    {0x1689, &op_store,	  9,   8, 255, 0xff, 0x02, 0x00, 0x04}, // store ra pc  
    {0x1699, &op_store,	  9,   9, 255, 0xff, 0x02, 0x00, 0x04}, // store ra ra  
    {0x16a9, &op_store,	  9,  10, 255, 0xff, 0x02, 0x00, 0x04}, // store ra sb  
    {0x16b9, &op_store,	  9,  11, 255, 0xff, 0x02, 0x00, 0x04}, // store ra sp  
    {0x16c9, &op_store,	  9,  12, 255, 0xff, 0x02, 0x00, 0x04}, // store ra db  
    {0x16d9, &op_store,	  9,  13, 255, 0xff, 0x02, 0x00, 0x04}, // store ra cb  
    {0x16e9, &op_store,	  9,  14, 255, 0xff, 0x02, 0x00, 0x04}, // store ra pi  
    {0x16f9, &op_store,	  9,  15, 255, 0xff, 0x02, 0x00, 0x04}, // store ra status  
    {0x160a, &op_store,	 10,   0, 255, 0xff, 0x02, 0x00, 0x04}, // store sb a  
    {0x161a, &op_store,	 10,   1, 255, 0xff, 0x02, 0x00, 0x04}, // store sb b  
    {0x162a, &op_store,	 10,   2, 255, 0xff, 0x02, 0x00, 0x04}, // store sb c  
    {0x163a, &op_store,	 10,   3, 255, 0xff, 0x02, 0x00, 0x04}, // store sb d  
    {0x164a, &op_store,	 10,   4, 255, 0xff, 0x02, 0x00, 0x04}, // store sb e  
    {0x165a, &op_store,	 10,   5, 255, 0xff, 0x02, 0x00, 0x04}, // store sb f  
    {0x166a, &op_store,	 10,   6, 255, 0xff, 0x02, 0x00, 0x04}, // store sb g  
    {0x167a, &op_store,	 10,   7, 255, 0xff, 0x02, 0x00, 0x04}, // store sb h  
    {0x168a, &op_store,	 10,   8, 255, 0xff, 0x02, 0x00, 0x04}, // store sb pc  
    {0x169a, &op_store,	 10,   9, 255, 0xff, 0x02, 0x00, 0x04}, // store sb ra  
    {0x16aa, &op_store,	 10,  10, 255, 0xff, 0x02, 0x00, 0x04}, // store sb sb  
    {0x16ba, &op_store,	 10,  11, 255, 0xff, 0x02, 0x00, 0x04}, // store sb sp  
    {0x16ca, &op_store,	 10,  12, 255, 0xff, 0x02, 0x00, 0x04}, // store sb db  
    {0x16da, &op_store,	 10,  13, 255, 0xff, 0x02, 0x00, 0x04}, // store sb cb  
    {0x16ea, &op_store,	 10,  14, 255, 0xff, 0x02, 0x00, 0x04}, // store sb pi  
    {0x16fa, &op_store,	 10,  15, 255, 0xff, 0x02, 0x00, 0x04}, // store sb status  
    {0x160b, &op_store,	 11,   0, 255, 0xff, 0x02, 0x00, 0x04}, // store sp a  
    {0x161b, &op_store,	 11,   1, 255, 0xff, 0x02, 0x00, 0x04}, // store sp b  
    {0x162b, &op_store,	 11,   2, 255, 0xff, 0x02, 0x00, 0x04}, // store sp c  
    {0x163b, &op_store,	 11,   3, 255, 0xff, 0x02, 0x00, 0x04}, // store sp d  
    {0x164b, &op_store,	 11,   4, 255, 0xff, 0x02, 0x00, 0x04}, // store sp e  
    {0x165b, &op_store,	 11,   5, 255, 0xff, 0x02, 0x00, 0x04}, // store sp f  
    {0x166b, &op_store,	 11,   6, 255, 0xff, 0x02, 0x00, 0x04}, // store sp g  
    {0x167b, &op_store,	 11,   7, 255, 0xff, 0x02, 0x00, 0x04}, // store sp h  
    {0x168b, &op_store,	 11,   8, 255, 0xff, 0x02, 0x00, 0x04}, // store sp pc  
    {0x169b, &op_store,	 11,   9, 255, 0xff, 0x02, 0x00, 0x04}, // store sp ra  
    {0x16ab, &op_store,	 11,  10, 255, 0xff, 0x02, 0x00, 0x04}, // store sp sb  
    {0x16bb, &op_store,	 11,  11, 255, 0xff, 0x02, 0x00, 0x04}, // store sp sp  
    {0x16cb, &op_store,	 11,  12, 255, 0xff, 0x02, 0x00, 0x04}, // store sp db  
    {0x16db, &op_store,	 11,  13, 255, 0xff, 0x02, 0x00, 0x04}, // store sp cb  
    {0x16eb, &op_store,	 11,  14, 255, 0xff, 0x02, 0x00, 0x04}, // store sp pi  
    {0x16fb, &op_store,	 11,  15, 255, 0xff, 0x02, 0x00, 0x04}, // store sp status  
    {0x160c, &op_store,	 12,   0, 255, 0xff, 0x02, 0x00, 0x04}, // store db a  
    {0x161c, &op_store,	 12,   1, 255, 0xff, 0x02, 0x00, 0x04}, // store db b  
    {0x162c, &op_store,	 12,   2, 255, 0xff, 0x02, 0x00, 0x04}, // store db c  
    {0x163c, &op_store,	 12,   3, 255, 0xff, 0x02, 0x00, 0x04}, // store db d  
    {0x164c, &op_store,	 12,   4, 255, 0xff, 0x02, 0x00, 0x04}, // store db e  
    {0x165c, &op_store,	 12,   5, 255, 0xff, 0x02, 0x00, 0x04}, // store db f  
    {0x166c, &op_store,	 12,   6, 255, 0xff, 0x02, 0x00, 0x04}, // store db g  
    {0x167c, &op_store,	 12,   7, 255, 0xff, 0x02, 0x00, 0x04}, // store db h  
    {0x168c, &op_store,	 12,   8, 255, 0xff, 0x02, 0x00, 0x04}, // store db pc  
    {0x169c, &op_store,	 12,   9, 255, 0xff, 0x02, 0x00, 0x04}, // store db ra  
    {0x16ac, &op_store,	 12,  10, 255, 0xff, 0x02, 0x00, 0x04}, // store db sb  
    {0x16bc, &op_store,	 12,  11, 255, 0xff, 0x02, 0x00, 0x04}, // store db sp  
    {0x16cc, &op_store,	 12,  12, 255, 0xff, 0x02, 0x00, 0x04}, // store db db  
    {0x16dc, &op_store,	 12,  13, 255, 0xff, 0x02, 0x00, 0x04}, // store db cb  
    {0x16ec, &op_store,	 12,  14, 255, 0xff, 0x02, 0x00, 0x04}, // store db pi  
    {0x16fc, &op_store,	 12,  15, 255, 0xff, 0x02, 0x00, 0x04}, // store db status  
    {0x160d, &op_store,	 13,   0, 255, 0xff, 0x02, 0x00, 0x04}, // store cb a  
    {0x161d, &op_store,	 13,   1, 255, 0xff, 0x02, 0x00, 0x04}, // store cb b  
    {0x162d, &op_store,	 13,   2, 255, 0xff, 0x02, 0x00, 0x04}, // store cb c  
    {0x163d, &op_store,	 13,   3, 255, 0xff, 0x02, 0x00, 0x04}, // store cb d  
    {0x164d, &op_store,	 13,   4, 255, 0xff, 0x02, 0x00, 0x04}, // store cb e  
    {0x165d, &op_store,	 13,   5, 255, 0xff, 0x02, 0x00, 0x04}, // store cb f  
    {0x166d, &op_store,	 13,   6, 255, 0xff, 0x02, 0x00, 0x04}, // store cb g  
    {0x167d, &op_store,	 13,   7, 255, 0xff, 0x02, 0x00, 0x04}, // store cb h  
    {0x168d, &op_store,	 13,   8, 255, 0xff, 0x02, 0x00, 0x04}, // store cb pc  
    {0x169d, &op_store,	 13,   9, 255, 0xff, 0x02, 0x00, 0x04}, // store cb ra  
    {0x16ad, &op_store,	 13,  10, 255, 0xff, 0x02, 0x00, 0x04}, // store cb sb  
    {0x16bd, &op_store,	 13,  11, 255, 0xff, 0x02, 0x00, 0x04}, // store cb sp  
    {0x16cd, &op_store,	 13,  12, 255, 0xff, 0x02, 0x00, 0x04}, // store cb db  
    {0x16dd, &op_store,	 13,  13, 255, 0xff, 0x02, 0x00, 0x04}, // store cb cb  
    {0x16ed, &op_store,	 13,  14, 255, 0xff, 0x02, 0x00, 0x04}, // store cb pi  
    {0x16fd, &op_store,	 13,  15, 255, 0xff, 0x02, 0x00, 0x04}, // store cb status  
    {0x160e, &op_store,	 14,   0, 255, 0xff, 0x02, 0x00, 0x04}, // store pi a  
    {0x161e, &op_store,	 14,   1, 255, 0xff, 0x02, 0x00, 0x04}, // store pi b  
    {0x162e, &op_store,	 14,   2, 255, 0xff, 0x02, 0x00, 0x04}, // store pi c  
    {0x163e, &op_store,	 14,   3, 255, 0xff, 0x02, 0x00, 0x04}, // store pi d  
    {0x164e, &op_store,	 14,   4, 255, 0xff, 0x02, 0x00, 0x04}, // store pi e  
    {0x165e, &op_store,	 14,   5, 255, 0xff, 0x02, 0x00, 0x04}, // store pi f  
    {0x166e, &op_store,	 14,   6, 255, 0xff, 0x02, 0x00, 0x04}, // store pi g  
    {0x167e, &op_store,	 14,   7, 255, 0xff, 0x02, 0x00, 0x04}, // store pi h  
    {0x168e, &op_store,	 14,   8, 255, 0xff, 0x02, 0x00, 0x04}, // store pi pc  
    {0x169e, &op_store,	 14,   9, 255, 0xff, 0x02, 0x00, 0x04}, // store pi ra  
    {0x16ae, &op_store,	 14,  10, 255, 0xff, 0x02, 0x00, 0x04}, // store pi sb  
    {0x16be, &op_store,	 14,  11, 255, 0xff, 0x02, 0x00, 0x04}, // store pi sp  
    {0x16ce, &op_store,	 14,  12, 255, 0xff, 0x02, 0x00, 0x04}, // store pi db  
    {0x16de, &op_store,	 14,  13, 255, 0xff, 0x02, 0x00, 0x04}, // store pi cb  
    {0x16ee, &op_store,	 14,  14, 255, 0xff, 0x02, 0x00, 0x04}, // store pi pi  
    {0x16fe, &op_store,	 14,  15, 255, 0xff, 0x02, 0x00, 0x04}, // store pi status  
    {0x160f, &op_store,	 15,   0, 255, 0xff, 0x02, 0x00, 0x04}, // store status a  
    {0x161f, &op_store,	 15,   1, 255, 0xff, 0x02, 0x00, 0x04}, // store status b  
    {0x162f, &op_store,	 15,   2, 255, 0xff, 0x02, 0x00, 0x04}, // store status c  
    {0x163f, &op_store,	 15,   3, 255, 0xff, 0x02, 0x00, 0x04}, // store status d  
    {0x164f, &op_store,	 15,   4, 255, 0xff, 0x02, 0x00, 0x04}, // store status e  
    {0x165f, &op_store,	 15,   5, 255, 0xff, 0x02, 0x00, 0x04}, // store status f  
    {0x166f, &op_store,	 15,   6, 255, 0xff, 0x02, 0x00, 0x04}, // store status g  
    {0x167f, &op_store,	 15,   7, 255, 0xff, 0x02, 0x00, 0x04}, // store status h  
    {0x168f, &op_store,	 15,   8, 255, 0xff, 0x02, 0x00, 0x04}, // store status pc  
    {0x169f, &op_store,	 15,   9, 255, 0xff, 0x02, 0x00, 0x04}, // store status ra  
    {0x16af, &op_store,	 15,  10, 255, 0xff, 0x02, 0x00, 0x04}, // store status sb  
    {0x16bf, &op_store,	 15,  11, 255, 0xff, 0x02, 0x00, 0x04}, // store status sp  
    {0x16cf, &op_store,	 15,  12, 255, 0xff, 0x02, 0x00, 0x04}, // store status db  
    {0x16df, &op_store,	 15,  13, 255, 0xff, 0x02, 0x00, 0x04}, // store status cb  
    {0x16ef, &op_store,	 15,  14, 255, 0xff, 0x02, 0x00, 0x04}, // store status pi  
    {0x16ff, &op_store,	 15,  15, 255, 0xff, 0x02, 0x00, 0x04}, // store status status  
    {0x1710, &op_store,	  0, 8, 255, 0xff, 0x03, 0x04, 0x01}, // store.wi a   
    {0x1711, &op_store,	  1, 8, 255, 0xff, 0x03, 0x04, 0x01}, // store.wi b   
    {0x1712, &op_store,	  2, 8, 255, 0xff, 0x03, 0x04, 0x01}, // store.wi c   
    {0x1713, &op_store,	  3, 8, 255, 0xff, 0x03, 0x04, 0x01}, // store.wi d   
    {0x1714, &op_store,	  4, 8, 255, 0xff, 0x03, 0x04, 0x01}, // store.wi e   
    {0x1715, &op_store,	  5, 8, 255, 0xff, 0x03, 0x04, 0x01}, // store.wi f   
    {0x1716, &op_store,	  6, 8, 255, 0xff, 0x03, 0x04, 0x01}, // store.wi g   
    {0x1717, &op_store,	  7, 8, 255, 0xff, 0x03, 0x04, 0x01}, // store.wi h   
    {0x1718, &op_store,	  8, 8, 255, 0xff, 0x03, 0x04, 0x01}, // store.wi pc   
    {0x1719, &op_store,	  9, 8, 255, 0xff, 0x03, 0x04, 0x01}, // store.wi ra   
    {0x171a, &op_store,	 10, 8, 255, 0xff, 0x03, 0x04, 0x01}, // store.wi sb   
    {0x171b, &op_store,	 11, 8, 255, 0xff, 0x03, 0x04, 0x01}, // store.wi sp   
    {0x171c, &op_store,	 12, 8, 255, 0xff, 0x03, 0x04, 0x01}, // store.wi db   
    {0x171d, &op_store,	 13, 8, 255, 0xff, 0x03, 0x04, 0x01}, // store.wi cb   
    {0x171e, &op_store,	 14, 8, 255, 0xff, 0x03, 0x04, 0x01}, // store.wi pi   
    {0x171f, &op_store,	 15, 8, 255, 0xff, 0x03, 0x04, 0x01}, // store.wi status   
    {0x1720, &op_store,	  0, 8, 255, 0xff, 0x03, 0x04, 0x02}, // store.di a   
    {0x1721, &op_store,	  1, 8, 255, 0xff, 0x03, 0x04, 0x02}, // store.di b   
    {0x1722, &op_store,	  2, 8, 255, 0xff, 0x03, 0x04, 0x02}, // store.di c   
    {0x1723, &op_store,	  3, 8, 255, 0xff, 0x03, 0x04, 0x02}, // store.di d   
    {0x1724, &op_store,	  4, 8, 255, 0xff, 0x03, 0x04, 0x02}, // store.di e   
    {0x1725, &op_store,	  5, 8, 255, 0xff, 0x03, 0x04, 0x02}, // store.di f   
    {0x1726, &op_store,	  6, 8, 255, 0xff, 0x03, 0x04, 0x02}, // store.di g   
    {0x1727, &op_store,	  7, 8, 255, 0xff, 0x03, 0x04, 0x02}, // store.di h   
    {0x1728, &op_store,	  8, 8, 255, 0xff, 0x03, 0x04, 0x02}, // store.di pc   
    {0x1729, &op_store,	  9, 8, 255, 0xff, 0x03, 0x04, 0x02}, // store.di ra   
    {0x172a, &op_store,	 10, 8, 255, 0xff, 0x03, 0x04, 0x02}, // store.di sb   
    {0x172b, &op_store,	 11, 8, 255, 0xff, 0x03, 0x04, 0x02}, // store.di sp   
    {0x172c, &op_store,	 12, 8, 255, 0xff, 0x03, 0x04, 0x02}, // store.di db   
    {0x172d, &op_store,	 13, 8, 255, 0xff, 0x03, 0x04, 0x02}, // store.di cb   
    {0x172e, &op_store,	 14, 8, 255, 0xff, 0x03, 0x04, 0x02}, // store.di pi   
    {0x172f, &op_store,	 15, 8, 255, 0xff, 0x03, 0x04, 0x02}, // store.di status   
    {0x1740, &op_store,	  0, 8, 255, 0xff, 0x03, 0x04, 0x04}, // store.i a   
    {0x1741, &op_store,	  1, 8, 255, 0xff, 0x03, 0x04, 0x04}, // store.i b   
    {0x1742, &op_store,	  2, 8, 255, 0xff, 0x03, 0x04, 0x04}, // store.i c   
    {0x1743, &op_store,	  3, 8, 255, 0xff, 0x03, 0x04, 0x04}, // store.i d   
    {0x1744, &op_store,	  4, 8, 255, 0xff, 0x03, 0x04, 0x04}, // store.i e   
    {0x1745, &op_store,	  5, 8, 255, 0xff, 0x03, 0x04, 0x04}, // store.i f   
    {0x1746, &op_store,	  6, 8, 255, 0xff, 0x03, 0x04, 0x04}, // store.i g   
    {0x1747, &op_store,	  7, 8, 255, 0xff, 0x03, 0x04, 0x04}, // store.i h   
    {0x1748, &op_store,	  8, 8, 255, 0xff, 0x03, 0x04, 0x04}, // store.i pc   
    {0x1749, &op_store,	  9, 8, 255, 0xff, 0x03, 0x04, 0x04}, // store.i ra   
    {0x174a, &op_store,	 10, 8, 255, 0xff, 0x03, 0x04, 0x04}, // store.i sb   
    {0x174b, &op_store,	 11, 8, 255, 0xff, 0x03, 0x04, 0x04}, // store.i sp   
    {0x174c, &op_store,	 12, 8, 255, 0xff, 0x03, 0x04, 0x04}, // store.i db   
    {0x174d, &op_store,	 13, 8, 255, 0xff, 0x03, 0x04, 0x04}, // store.i cb   
    {0x174e, &op_store,	 14, 8, 255, 0xff, 0x03, 0x04, 0x04}, // store.i pi   
    {0x174f, &op_store,	 15, 8, 255, 0xff, 0x03, 0x04, 0x04}, // store.i status   
    {0x1900, &op_load_c,	  0,   0, 255, 0xff, 0x02, 0x00, 0x04}, // load.c a a  
    {0x1910, &op_load_c,	  0,   1, 255, 0xff, 0x02, 0x00, 0x04}, // load.c a b  
    {0x1920, &op_load_c,	  0,   2, 255, 0xff, 0x02, 0x00, 0x04}, // load.c a c  
    {0x1930, &op_load_c,	  0,   3, 255, 0xff, 0x02, 0x00, 0x04}, // load.c a d  
    {0x1940, &op_load_c,	  0,   4, 255, 0xff, 0x02, 0x00, 0x04}, // load.c a e  
    {0x1950, &op_load_c,	  0,   5, 255, 0xff, 0x02, 0x00, 0x04}, // load.c a f  
    {0x1960, &op_load_c,	  0,   6, 255, 0xff, 0x02, 0x00, 0x04}, // load.c a g  
    {0x1970, &op_load_c,	  0,   7, 255, 0xff, 0x02, 0x00, 0x04}, // load.c a h  
    {0x1980, &op_load_c,	  0,   8, 255, 0xff, 0x02, 0x00, 0x04}, // load.c a pc  
    {0x1990, &op_load_c,	  0,   9, 255, 0xff, 0x02, 0x00, 0x04}, // load.c a ra  
    {0x19a0, &op_load_c,	  0,  10, 255, 0xff, 0x02, 0x00, 0x04}, // load.c a sb  
    {0x19b0, &op_load_c,	  0,  11, 255, 0xff, 0x02, 0x00, 0x04}, // load.c a sp  
    {0x19c0, &op_load_c,	  0,  12, 255, 0xff, 0x02, 0x00, 0x04}, // load.c a db  
    {0x19d0, &op_load_c,	  0,  13, 255, 0xff, 0x02, 0x00, 0x04}, // load.c a cb  
    {0x19e0, &op_load_c,	  0,  14, 255, 0xff, 0x02, 0x00, 0x04}, // load.c a pi  
    {0x19f0, &op_load_c,	  0,  15, 255, 0xff, 0x02, 0x00, 0x04}, // load.c a status  
    {0x1901, &op_load_c,	  1,   0, 255, 0xff, 0x02, 0x00, 0x04}, // load.c b a  
    {0x1911, &op_load_c,	  1,   1, 255, 0xff, 0x02, 0x00, 0x04}, // load.c b b  
    {0x1921, &op_load_c,	  1,   2, 255, 0xff, 0x02, 0x00, 0x04}, // load.c b c  
    {0x1931, &op_load_c,	  1,   3, 255, 0xff, 0x02, 0x00, 0x04}, // load.c b d  
    {0x1941, &op_load_c,	  1,   4, 255, 0xff, 0x02, 0x00, 0x04}, // load.c b e  
    {0x1951, &op_load_c,	  1,   5, 255, 0xff, 0x02, 0x00, 0x04}, // load.c b f  
    {0x1961, &op_load_c,	  1,   6, 255, 0xff, 0x02, 0x00, 0x04}, // load.c b g  
    {0x1971, &op_load_c,	  1,   7, 255, 0xff, 0x02, 0x00, 0x04}, // load.c b h  
    {0x1981, &op_load_c,	  1,   8, 255, 0xff, 0x02, 0x00, 0x04}, // load.c b pc  
    {0x1991, &op_load_c,	  1,   9, 255, 0xff, 0x02, 0x00, 0x04}, // load.c b ra  
    {0x19a1, &op_load_c,	  1,  10, 255, 0xff, 0x02, 0x00, 0x04}, // load.c b sb  
    {0x19b1, &op_load_c,	  1,  11, 255, 0xff, 0x02, 0x00, 0x04}, // load.c b sp  
    {0x19c1, &op_load_c,	  1,  12, 255, 0xff, 0x02, 0x00, 0x04}, // load.c b db  
    {0x19d1, &op_load_c,	  1,  13, 255, 0xff, 0x02, 0x00, 0x04}, // load.c b cb  
    {0x19e1, &op_load_c,	  1,  14, 255, 0xff, 0x02, 0x00, 0x04}, // load.c b pi  
    {0x19f1, &op_load_c,	  1,  15, 255, 0xff, 0x02, 0x00, 0x04}, // load.c b status  
    {0x1902, &op_load_c,	  2,   0, 255, 0xff, 0x02, 0x00, 0x04}, // load.c c a  
    {0x1912, &op_load_c,	  2,   1, 255, 0xff, 0x02, 0x00, 0x04}, // load.c c b  
    {0x1922, &op_load_c,	  2,   2, 255, 0xff, 0x02, 0x00, 0x04}, // load.c c c  
    {0x1932, &op_load_c,	  2,   3, 255, 0xff, 0x02, 0x00, 0x04}, // load.c c d  
    {0x1942, &op_load_c,	  2,   4, 255, 0xff, 0x02, 0x00, 0x04}, // load.c c e  
    {0x1952, &op_load_c,	  2,   5, 255, 0xff, 0x02, 0x00, 0x04}, // load.c c f  
    {0x1962, &op_load_c,	  2,   6, 255, 0xff, 0x02, 0x00, 0x04}, // load.c c g  
    {0x1972, &op_load_c,	  2,   7, 255, 0xff, 0x02, 0x00, 0x04}, // load.c c h  
    {0x1982, &op_load_c,	  2,   8, 255, 0xff, 0x02, 0x00, 0x04}, // load.c c pc  
    {0x1992, &op_load_c,	  2,   9, 255, 0xff, 0x02, 0x00, 0x04}, // load.c c ra  
    {0x19a2, &op_load_c,	  2,  10, 255, 0xff, 0x02, 0x00, 0x04}, // load.c c sb  
    {0x19b2, &op_load_c,	  2,  11, 255, 0xff, 0x02, 0x00, 0x04}, // load.c c sp  
    {0x19c2, &op_load_c,	  2,  12, 255, 0xff, 0x02, 0x00, 0x04}, // load.c c db  
    {0x19d2, &op_load_c,	  2,  13, 255, 0xff, 0x02, 0x00, 0x04}, // load.c c cb  
    {0x19e2, &op_load_c,	  2,  14, 255, 0xff, 0x02, 0x00, 0x04}, // load.c c pi  
    {0x19f2, &op_load_c,	  2,  15, 255, 0xff, 0x02, 0x00, 0x04}, // load.c c status  
    {0x1903, &op_load_c,	  3,   0, 255, 0xff, 0x02, 0x00, 0x04}, // load.c d a  
    {0x1913, &op_load_c,	  3,   1, 255, 0xff, 0x02, 0x00, 0x04}, // load.c d b  
    {0x1923, &op_load_c,	  3,   2, 255, 0xff, 0x02, 0x00, 0x04}, // load.c d c  
    {0x1933, &op_load_c,	  3,   3, 255, 0xff, 0x02, 0x00, 0x04}, // load.c d d  
    {0x1943, &op_load_c,	  3,   4, 255, 0xff, 0x02, 0x00, 0x04}, // load.c d e  
    {0x1953, &op_load_c,	  3,   5, 255, 0xff, 0x02, 0x00, 0x04}, // load.c d f  
    {0x1963, &op_load_c,	  3,   6, 255, 0xff, 0x02, 0x00, 0x04}, // load.c d g  
    {0x1973, &op_load_c,	  3,   7, 255, 0xff, 0x02, 0x00, 0x04}, // load.c d h  
    {0x1983, &op_load_c,	  3,   8, 255, 0xff, 0x02, 0x00, 0x04}, // load.c d pc  
    {0x1993, &op_load_c,	  3,   9, 255, 0xff, 0x02, 0x00, 0x04}, // load.c d ra  
    {0x19a3, &op_load_c,	  3,  10, 255, 0xff, 0x02, 0x00, 0x04}, // load.c d sb  
    {0x19b3, &op_load_c,	  3,  11, 255, 0xff, 0x02, 0x00, 0x04}, // load.c d sp  
    {0x19c3, &op_load_c,	  3,  12, 255, 0xff, 0x02, 0x00, 0x04}, // load.c d db  
    {0x19d3, &op_load_c,	  3,  13, 255, 0xff, 0x02, 0x00, 0x04}, // load.c d cb  
    {0x19e3, &op_load_c,	  3,  14, 255, 0xff, 0x02, 0x00, 0x04}, // load.c d pi  
    {0x19f3, &op_load_c,	  3,  15, 255, 0xff, 0x02, 0x00, 0x04}, // load.c d status  
    {0x1904, &op_load_c,	  4,   0, 255, 0xff, 0x02, 0x00, 0x04}, // load.c e a  
    {0x1914, &op_load_c,	  4,   1, 255, 0xff, 0x02, 0x00, 0x04}, // load.c e b  
    {0x1924, &op_load_c,	  4,   2, 255, 0xff, 0x02, 0x00, 0x04}, // load.c e c  
    {0x1934, &op_load_c,	  4,   3, 255, 0xff, 0x02, 0x00, 0x04}, // load.c e d  
    {0x1944, &op_load_c,	  4,   4, 255, 0xff, 0x02, 0x00, 0x04}, // load.c e e  
    {0x1954, &op_load_c,	  4,   5, 255, 0xff, 0x02, 0x00, 0x04}, // load.c e f  
    {0x1964, &op_load_c,	  4,   6, 255, 0xff, 0x02, 0x00, 0x04}, // load.c e g  
    {0x1974, &op_load_c,	  4,   7, 255, 0xff, 0x02, 0x00, 0x04}, // load.c e h  
    {0x1984, &op_load_c,	  4,   8, 255, 0xff, 0x02, 0x00, 0x04}, // load.c e pc  
    {0x1994, &op_load_c,	  4,   9, 255, 0xff, 0x02, 0x00, 0x04}, // load.c e ra  
    {0x19a4, &op_load_c,	  4,  10, 255, 0xff, 0x02, 0x00, 0x04}, // load.c e sb  
    {0x19b4, &op_load_c,	  4,  11, 255, 0xff, 0x02, 0x00, 0x04}, // load.c e sp  
    {0x19c4, &op_load_c,	  4,  12, 255, 0xff, 0x02, 0x00, 0x04}, // load.c e db  
    {0x19d4, &op_load_c,	  4,  13, 255, 0xff, 0x02, 0x00, 0x04}, // load.c e cb  
    {0x19e4, &op_load_c,	  4,  14, 255, 0xff, 0x02, 0x00, 0x04}, // load.c e pi  
    {0x19f4, &op_load_c,	  4,  15, 255, 0xff, 0x02, 0x00, 0x04}, // load.c e status  
    {0x1905, &op_load_c,	  5,   0, 255, 0xff, 0x02, 0x00, 0x04}, // load.c f a  
    {0x1915, &op_load_c,	  5,   1, 255, 0xff, 0x02, 0x00, 0x04}, // load.c f b  
    {0x1925, &op_load_c,	  5,   2, 255, 0xff, 0x02, 0x00, 0x04}, // load.c f c  
    {0x1935, &op_load_c,	  5,   3, 255, 0xff, 0x02, 0x00, 0x04}, // load.c f d  
    {0x1945, &op_load_c,	  5,   4, 255, 0xff, 0x02, 0x00, 0x04}, // load.c f e  
    {0x1955, &op_load_c,	  5,   5, 255, 0xff, 0x02, 0x00, 0x04}, // load.c f f  
    {0x1965, &op_load_c,	  5,   6, 255, 0xff, 0x02, 0x00, 0x04}, // load.c f g  
    {0x1975, &op_load_c,	  5,   7, 255, 0xff, 0x02, 0x00, 0x04}, // load.c f h  
    {0x1985, &op_load_c,	  5,   8, 255, 0xff, 0x02, 0x00, 0x04}, // load.c f pc  
    {0x1995, &op_load_c,	  5,   9, 255, 0xff, 0x02, 0x00, 0x04}, // load.c f ra  
    {0x19a5, &op_load_c,	  5,  10, 255, 0xff, 0x02, 0x00, 0x04}, // load.c f sb  
    {0x19b5, &op_load_c,	  5,  11, 255, 0xff, 0x02, 0x00, 0x04}, // load.c f sp  
    {0x19c5, &op_load_c,	  5,  12, 255, 0xff, 0x02, 0x00, 0x04}, // load.c f db  
    {0x19d5, &op_load_c,	  5,  13, 255, 0xff, 0x02, 0x00, 0x04}, // load.c f cb  
    {0x19e5, &op_load_c,	  5,  14, 255, 0xff, 0x02, 0x00, 0x04}, // load.c f pi  
    {0x19f5, &op_load_c,	  5,  15, 255, 0xff, 0x02, 0x00, 0x04}, // load.c f status  
    {0x1906, &op_load_c,	  6,   0, 255, 0xff, 0x02, 0x00, 0x04}, // load.c g a  
    {0x1916, &op_load_c,	  6,   1, 255, 0xff, 0x02, 0x00, 0x04}, // load.c g b  
    {0x1926, &op_load_c,	  6,   2, 255, 0xff, 0x02, 0x00, 0x04}, // load.c g c  
    {0x1936, &op_load_c,	  6,   3, 255, 0xff, 0x02, 0x00, 0x04}, // load.c g d  
    {0x1946, &op_load_c,	  6,   4, 255, 0xff, 0x02, 0x00, 0x04}, // load.c g e  
    {0x1956, &op_load_c,	  6,   5, 255, 0xff, 0x02, 0x00, 0x04}, // load.c g f  
    {0x1966, &op_load_c,	  6,   6, 255, 0xff, 0x02, 0x00, 0x04}, // load.c g g  
    {0x1976, &op_load_c,	  6,   7, 255, 0xff, 0x02, 0x00, 0x04}, // load.c g h  
    {0x1986, &op_load_c,	  6,   8, 255, 0xff, 0x02, 0x00, 0x04}, // load.c g pc  
    {0x1996, &op_load_c,	  6,   9, 255, 0xff, 0x02, 0x00, 0x04}, // load.c g ra  
    {0x19a6, &op_load_c,	  6,  10, 255, 0xff, 0x02, 0x00, 0x04}, // load.c g sb  
    {0x19b6, &op_load_c,	  6,  11, 255, 0xff, 0x02, 0x00, 0x04}, // load.c g sp  
    {0x19c6, &op_load_c,	  6,  12, 255, 0xff, 0x02, 0x00, 0x04}, // load.c g db  
    {0x19d6, &op_load_c,	  6,  13, 255, 0xff, 0x02, 0x00, 0x04}, // load.c g cb  
    {0x19e6, &op_load_c,	  6,  14, 255, 0xff, 0x02, 0x00, 0x04}, // load.c g pi  
    {0x19f6, &op_load_c,	  6,  15, 255, 0xff, 0x02, 0x00, 0x04}, // load.c g status  
    {0x1907, &op_load_c,	  7,   0, 255, 0xff, 0x02, 0x00, 0x04}, // load.c h a  
    {0x1917, &op_load_c,	  7,   1, 255, 0xff, 0x02, 0x00, 0x04}, // load.c h b  
    {0x1927, &op_load_c,	  7,   2, 255, 0xff, 0x02, 0x00, 0x04}, // load.c h c  
    {0x1937, &op_load_c,	  7,   3, 255, 0xff, 0x02, 0x00, 0x04}, // load.c h d  
    {0x1947, &op_load_c,	  7,   4, 255, 0xff, 0x02, 0x00, 0x04}, // load.c h e  
    {0x1957, &op_load_c,	  7,   5, 255, 0xff, 0x02, 0x00, 0x04}, // load.c h f  
    {0x1967, &op_load_c,	  7,   6, 255, 0xff, 0x02, 0x00, 0x04}, // load.c h g  
    {0x1977, &op_load_c,	  7,   7, 255, 0xff, 0x02, 0x00, 0x04}, // load.c h h  
    {0x1987, &op_load_c,	  7,   8, 255, 0xff, 0x02, 0x00, 0x04}, // load.c h pc  
    {0x1997, &op_load_c,	  7,   9, 255, 0xff, 0x02, 0x00, 0x04}, // load.c h ra  
    {0x19a7, &op_load_c,	  7,  10, 255, 0xff, 0x02, 0x00, 0x04}, // load.c h sb  
    {0x19b7, &op_load_c,	  7,  11, 255, 0xff, 0x02, 0x00, 0x04}, // load.c h sp  
    {0x19c7, &op_load_c,	  7,  12, 255, 0xff, 0x02, 0x00, 0x04}, // load.c h db  
    {0x19d7, &op_load_c,	  7,  13, 255, 0xff, 0x02, 0x00, 0x04}, // load.c h cb  
    {0x19e7, &op_load_c,	  7,  14, 255, 0xff, 0x02, 0x00, 0x04}, // load.c h pi  
    {0x19f7, &op_load_c,	  7,  15, 255, 0xff, 0x02, 0x00, 0x04}, // load.c h status  
    {0x1908, &op_load_c,	  8,   0, 255, 0xff, 0x02, 0x00, 0x04}, // load.c pc a  
    {0x1918, &op_load_c,	  8,   1, 255, 0xff, 0x02, 0x00, 0x04}, // load.c pc b  
    {0x1928, &op_load_c,	  8,   2, 255, 0xff, 0x02, 0x00, 0x04}, // load.c pc c  
    {0x1938, &op_load_c,	  8,   3, 255, 0xff, 0x02, 0x00, 0x04}, // load.c pc d  
    {0x1948, &op_load_c,	  8,   4, 255, 0xff, 0x02, 0x00, 0x04}, // load.c pc e  
    {0x1958, &op_load_c,	  8,   5, 255, 0xff, 0x02, 0x00, 0x04}, // load.c pc f  
    {0x1968, &op_load_c,	  8,   6, 255, 0xff, 0x02, 0x00, 0x04}, // load.c pc g  
    {0x1978, &op_load_c,	  8,   7, 255, 0xff, 0x02, 0x00, 0x04}, // load.c pc h  
    {0x1988, &op_load_c,	  8,   8, 255, 0xff, 0x02, 0x00, 0x04}, // load.c pc pc  
    {0x1998, &op_load_c,	  8,   9, 255, 0xff, 0x02, 0x00, 0x04}, // load.c pc ra  
    {0x19a8, &op_load_c,	  8,  10, 255, 0xff, 0x02, 0x00, 0x04}, // load.c pc sb  
    {0x19b8, &op_load_c,	  8,  11, 255, 0xff, 0x02, 0x00, 0x04}, // load.c pc sp  
    {0x19c8, &op_load_c,	  8,  12, 255, 0xff, 0x02, 0x00, 0x04}, // load.c pc db  
    {0x19d8, &op_load_c,	  8,  13, 255, 0xff, 0x02, 0x00, 0x04}, // load.c pc cb  
    {0x19e8, &op_load_c,	  8,  14, 255, 0xff, 0x02, 0x00, 0x04}, // load.c pc pi  
    {0x19f8, &op_load_c,	  8,  15, 255, 0xff, 0x02, 0x00, 0x04}, // load.c pc status  
    {0x1909, &op_load_c,	  9,   0, 255, 0xff, 0x02, 0x00, 0x04}, // load.c ra a  
    {0x1919, &op_load_c,	  9,   1, 255, 0xff, 0x02, 0x00, 0x04}, // load.c ra b  
    {0x1929, &op_load_c,	  9,   2, 255, 0xff, 0x02, 0x00, 0x04}, // load.c ra c  
    {0x1939, &op_load_c,	  9,   3, 255, 0xff, 0x02, 0x00, 0x04}, // load.c ra d  
    {0x1949, &op_load_c,	  9,   4, 255, 0xff, 0x02, 0x00, 0x04}, // load.c ra e  
    {0x1959, &op_load_c,	  9,   5, 255, 0xff, 0x02, 0x00, 0x04}, // load.c ra f  
    {0x1969, &op_load_c,	  9,   6, 255, 0xff, 0x02, 0x00, 0x04}, // load.c ra g  
    {0x1979, &op_load_c,	  9,   7, 255, 0xff, 0x02, 0x00, 0x04}, // load.c ra h  
    {0x1989, &op_load_c,	  9,   8, 255, 0xff, 0x02, 0x00, 0x04}, // load.c ra pc  
    {0x1999, &op_load_c,	  9,   9, 255, 0xff, 0x02, 0x00, 0x04}, // load.c ra ra  
    {0x19a9, &op_load_c,	  9,  10, 255, 0xff, 0x02, 0x00, 0x04}, // load.c ra sb  
    {0x19b9, &op_load_c,	  9,  11, 255, 0xff, 0x02, 0x00, 0x04}, // load.c ra sp  
    {0x19c9, &op_load_c,	  9,  12, 255, 0xff, 0x02, 0x00, 0x04}, // load.c ra db  
    {0x19d9, &op_load_c,	  9,  13, 255, 0xff, 0x02, 0x00, 0x04}, // load.c ra cb  
    {0x19e9, &op_load_c,	  9,  14, 255, 0xff, 0x02, 0x00, 0x04}, // load.c ra pi  
    {0x19f9, &op_load_c,	  9,  15, 255, 0xff, 0x02, 0x00, 0x04}, // load.c ra status  
    {0x190a, &op_load_c,	 10,   0, 255, 0xff, 0x02, 0x00, 0x04}, // load.c sb a  
    {0x191a, &op_load_c,	 10,   1, 255, 0xff, 0x02, 0x00, 0x04}, // load.c sb b  
    {0x192a, &op_load_c,	 10,   2, 255, 0xff, 0x02, 0x00, 0x04}, // load.c sb c  
    {0x193a, &op_load_c,	 10,   3, 255, 0xff, 0x02, 0x00, 0x04}, // load.c sb d  
    {0x194a, &op_load_c,	 10,   4, 255, 0xff, 0x02, 0x00, 0x04}, // load.c sb e  
    {0x195a, &op_load_c,	 10,   5, 255, 0xff, 0x02, 0x00, 0x04}, // load.c sb f  
    {0x196a, &op_load_c,	 10,   6, 255, 0xff, 0x02, 0x00, 0x04}, // load.c sb g  
    {0x197a, &op_load_c,	 10,   7, 255, 0xff, 0x02, 0x00, 0x04}, // load.c sb h  
    {0x198a, &op_load_c,	 10,   8, 255, 0xff, 0x02, 0x00, 0x04}, // load.c sb pc  
    {0x199a, &op_load_c,	 10,   9, 255, 0xff, 0x02, 0x00, 0x04}, // load.c sb ra  
    {0x19aa, &op_load_c,	 10,  10, 255, 0xff, 0x02, 0x00, 0x04}, // load.c sb sb  
    {0x19ba, &op_load_c,	 10,  11, 255, 0xff, 0x02, 0x00, 0x04}, // load.c sb sp  
    {0x19ca, &op_load_c,	 10,  12, 255, 0xff, 0x02, 0x00, 0x04}, // load.c sb db  
    {0x19da, &op_load_c,	 10,  13, 255, 0xff, 0x02, 0x00, 0x04}, // load.c sb cb  
    {0x19ea, &op_load_c,	 10,  14, 255, 0xff, 0x02, 0x00, 0x04}, // load.c sb pi  
    {0x19fa, &op_load_c,	 10,  15, 255, 0xff, 0x02, 0x00, 0x04}, // load.c sb status  
    {0x190b, &op_load_c,	 11,   0, 255, 0xff, 0x02, 0x00, 0x04}, // load.c sp a  
    {0x191b, &op_load_c,	 11,   1, 255, 0xff, 0x02, 0x00, 0x04}, // load.c sp b  
    {0x192b, &op_load_c,	 11,   2, 255, 0xff, 0x02, 0x00, 0x04}, // load.c sp c  
    {0x193b, &op_load_c,	 11,   3, 255, 0xff, 0x02, 0x00, 0x04}, // load.c sp d  
    {0x194b, &op_load_c,	 11,   4, 255, 0xff, 0x02, 0x00, 0x04}, // load.c sp e  
    {0x195b, &op_load_c,	 11,   5, 255, 0xff, 0x02, 0x00, 0x04}, // load.c sp f  
    {0x196b, &op_load_c,	 11,   6, 255, 0xff, 0x02, 0x00, 0x04}, // load.c sp g  
    {0x197b, &op_load_c,	 11,   7, 255, 0xff, 0x02, 0x00, 0x04}, // load.c sp h  
    {0x198b, &op_load_c,	 11,   8, 255, 0xff, 0x02, 0x00, 0x04}, // load.c sp pc  
    {0x199b, &op_load_c,	 11,   9, 255, 0xff, 0x02, 0x00, 0x04}, // load.c sp ra  
    {0x19ab, &op_load_c,	 11,  10, 255, 0xff, 0x02, 0x00, 0x04}, // load.c sp sb  
    {0x19bb, &op_load_c,	 11,  11, 255, 0xff, 0x02, 0x00, 0x04}, // load.c sp sp  
    {0x19cb, &op_load_c,	 11,  12, 255, 0xff, 0x02, 0x00, 0x04}, // load.c sp db  
    {0x19db, &op_load_c,	 11,  13, 255, 0xff, 0x02, 0x00, 0x04}, // load.c sp cb  
    {0x19eb, &op_load_c,	 11,  14, 255, 0xff, 0x02, 0x00, 0x04}, // load.c sp pi  
    {0x19fb, &op_load_c,	 11,  15, 255, 0xff, 0x02, 0x00, 0x04}, // load.c sp status  
    {0x190c, &op_load_c,	 12,   0, 255, 0xff, 0x02, 0x00, 0x04}, // load.c db a  
    {0x191c, &op_load_c,	 12,   1, 255, 0xff, 0x02, 0x00, 0x04}, // load.c db b  
    {0x192c, &op_load_c,	 12,   2, 255, 0xff, 0x02, 0x00, 0x04}, // load.c db c  
    {0x193c, &op_load_c,	 12,   3, 255, 0xff, 0x02, 0x00, 0x04}, // load.c db d  
    {0x194c, &op_load_c,	 12,   4, 255, 0xff, 0x02, 0x00, 0x04}, // load.c db e  
    {0x195c, &op_load_c,	 12,   5, 255, 0xff, 0x02, 0x00, 0x04}, // load.c db f  
    {0x196c, &op_load_c,	 12,   6, 255, 0xff, 0x02, 0x00, 0x04}, // load.c db g  
    {0x197c, &op_load_c,	 12,   7, 255, 0xff, 0x02, 0x00, 0x04}, // load.c db h  
    {0x198c, &op_load_c,	 12,   8, 255, 0xff, 0x02, 0x00, 0x04}, // load.c db pc  
    {0x199c, &op_load_c,	 12,   9, 255, 0xff, 0x02, 0x00, 0x04}, // load.c db ra  
    {0x19ac, &op_load_c,	 12,  10, 255, 0xff, 0x02, 0x00, 0x04}, // load.c db sb  
    {0x19bc, &op_load_c,	 12,  11, 255, 0xff, 0x02, 0x00, 0x04}, // load.c db sp  
    {0x19cc, &op_load_c,	 12,  12, 255, 0xff, 0x02, 0x00, 0x04}, // load.c db db  
    {0x19dc, &op_load_c,	 12,  13, 255, 0xff, 0x02, 0x00, 0x04}, // load.c db cb  
    {0x19ec, &op_load_c,	 12,  14, 255, 0xff, 0x02, 0x00, 0x04}, // load.c db pi  
    {0x19fc, &op_load_c,	 12,  15, 255, 0xff, 0x02, 0x00, 0x04}, // load.c db status  
    {0x190d, &op_load_c,	 13,   0, 255, 0xff, 0x02, 0x00, 0x04}, // load.c cb a  
    {0x191d, &op_load_c,	 13,   1, 255, 0xff, 0x02, 0x00, 0x04}, // load.c cb b  
    {0x192d, &op_load_c,	 13,   2, 255, 0xff, 0x02, 0x00, 0x04}, // load.c cb c  
    {0x193d, &op_load_c,	 13,   3, 255, 0xff, 0x02, 0x00, 0x04}, // load.c cb d  
    {0x194d, &op_load_c,	 13,   4, 255, 0xff, 0x02, 0x00, 0x04}, // load.c cb e  
    {0x195d, &op_load_c,	 13,   5, 255, 0xff, 0x02, 0x00, 0x04}, // load.c cb f  
    {0x196d, &op_load_c,	 13,   6, 255, 0xff, 0x02, 0x00, 0x04}, // load.c cb g  
    {0x197d, &op_load_c,	 13,   7, 255, 0xff, 0x02, 0x00, 0x04}, // load.c cb h  
    {0x198d, &op_load_c,	 13,   8, 255, 0xff, 0x02, 0x00, 0x04}, // load.c cb pc  
    {0x199d, &op_load_c,	 13,   9, 255, 0xff, 0x02, 0x00, 0x04}, // load.c cb ra  
    {0x19ad, &op_load_c,	 13,  10, 255, 0xff, 0x02, 0x00, 0x04}, // load.c cb sb  
    {0x19bd, &op_load_c,	 13,  11, 255, 0xff, 0x02, 0x00, 0x04}, // load.c cb sp  
    {0x19cd, &op_load_c,	 13,  12, 255, 0xff, 0x02, 0x00, 0x04}, // load.c cb db  
    {0x19dd, &op_load_c,	 13,  13, 255, 0xff, 0x02, 0x00, 0x04}, // load.c cb cb  
    {0x19ed, &op_load_c,	 13,  14, 255, 0xff, 0x02, 0x00, 0x04}, // load.c cb pi  
    {0x19fd, &op_load_c,	 13,  15, 255, 0xff, 0x02, 0x00, 0x04}, // load.c cb status  
    {0x190e, &op_load_c,	 14,   0, 255, 0xff, 0x02, 0x00, 0x04}, // load.c pi a  
    {0x191e, &op_load_c,	 14,   1, 255, 0xff, 0x02, 0x00, 0x04}, // load.c pi b  
    {0x192e, &op_load_c,	 14,   2, 255, 0xff, 0x02, 0x00, 0x04}, // load.c pi c  
    {0x193e, &op_load_c,	 14,   3, 255, 0xff, 0x02, 0x00, 0x04}, // load.c pi d  
    {0x194e, &op_load_c,	 14,   4, 255, 0xff, 0x02, 0x00, 0x04}, // load.c pi e  
    {0x195e, &op_load_c,	 14,   5, 255, 0xff, 0x02, 0x00, 0x04}, // load.c pi f  
    {0x196e, &op_load_c,	 14,   6, 255, 0xff, 0x02, 0x00, 0x04}, // load.c pi g  
    {0x197e, &op_load_c,	 14,   7, 255, 0xff, 0x02, 0x00, 0x04}, // load.c pi h  
    {0x198e, &op_load_c,	 14,   8, 255, 0xff, 0x02, 0x00, 0x04}, // load.c pi pc  
    {0x199e, &op_load_c,	 14,   9, 255, 0xff, 0x02, 0x00, 0x04}, // load.c pi ra  
    {0x19ae, &op_load_c,	 14,  10, 255, 0xff, 0x02, 0x00, 0x04}, // load.c pi sb  
    {0x19be, &op_load_c,	 14,  11, 255, 0xff, 0x02, 0x00, 0x04}, // load.c pi sp  
    {0x19ce, &op_load_c,	 14,  12, 255, 0xff, 0x02, 0x00, 0x04}, // load.c pi db  
    {0x19de, &op_load_c,	 14,  13, 255, 0xff, 0x02, 0x00, 0x04}, // load.c pi cb  
    {0x19ee, &op_load_c,	 14,  14, 255, 0xff, 0x02, 0x00, 0x04}, // load.c pi pi  
    {0x19fe, &op_load_c,	 14,  15, 255, 0xff, 0x02, 0x00, 0x04}, // load.c pi status  
    {0x190f, &op_load_c,	 15,   0, 255, 0xff, 0x02, 0x00, 0x04}, // load.c status a  
    {0x191f, &op_load_c,	 15,   1, 255, 0xff, 0x02, 0x00, 0x04}, // load.c status b  
    {0x192f, &op_load_c,	 15,   2, 255, 0xff, 0x02, 0x00, 0x04}, // load.c status c  
    {0x193f, &op_load_c,	 15,   3, 255, 0xff, 0x02, 0x00, 0x04}, // load.c status d  
    {0x194f, &op_load_c,	 15,   4, 255, 0xff, 0x02, 0x00, 0x04}, // load.c status e  
    {0x195f, &op_load_c,	 15,   5, 255, 0xff, 0x02, 0x00, 0x04}, // load.c status f  
    {0x196f, &op_load_c,	 15,   6, 255, 0xff, 0x02, 0x00, 0x04}, // load.c status g  
    {0x197f, &op_load_c,	 15,   7, 255, 0xff, 0x02, 0x00, 0x04}, // load.c status h  
    {0x198f, &op_load_c,	 15,   8, 255, 0xff, 0x02, 0x00, 0x04}, // load.c status pc  
    {0x199f, &op_load_c,	 15,   9, 255, 0xff, 0x02, 0x00, 0x04}, // load.c status ra  
    {0x19af, &op_load_c,	 15,  10, 255, 0xff, 0x02, 0x00, 0x04}, // load.c status sb  
    {0x19bf, &op_load_c,	 15,  11, 255, 0xff, 0x02, 0x00, 0x04}, // load.c status sp  
    {0x19cf, &op_load_c,	 15,  12, 255, 0xff, 0x02, 0x00, 0x04}, // load.c status db  
    {0x19df, &op_load_c,	 15,  13, 255, 0xff, 0x02, 0x00, 0x04}, // load.c status cb  
    {0x19ef, &op_load_c,	 15,  14, 255, 0xff, 0x02, 0x00, 0x04}, // load.c status pi  
    {0x19ff, &op_load_c,	 15,  15, 255, 0xff, 0x02, 0x00, 0x04}, // load.c status status  
    {0x1c00, &op_store_c,	  0,   0, 255, 0xff, 0x02, 0x00, 0x04}, // store.c a a  
    {0x1c10, &op_store_c,	  0,   1, 255, 0xff, 0x02, 0x00, 0x04}, // store.c a b  
    {0x1c20, &op_store_c,	  0,   2, 255, 0xff, 0x02, 0x00, 0x04}, // store.c a c  
    {0x1c30, &op_store_c,	  0,   3, 255, 0xff, 0x02, 0x00, 0x04}, // store.c a d  
    {0x1c40, &op_store_c,	  0,   4, 255, 0xff, 0x02, 0x00, 0x04}, // store.c a e  
    {0x1c50, &op_store_c,	  0,   5, 255, 0xff, 0x02, 0x00, 0x04}, // store.c a f  
    {0x1c60, &op_store_c,	  0,   6, 255, 0xff, 0x02, 0x00, 0x04}, // store.c a g  
    {0x1c70, &op_store_c,	  0,   7, 255, 0xff, 0x02, 0x00, 0x04}, // store.c a h  
    {0x1c80, &op_store_c,	  0,   8, 255, 0xff, 0x02, 0x00, 0x04}, // store.c a pc  
    {0x1c90, &op_store_c,	  0,   9, 255, 0xff, 0x02, 0x00, 0x04}, // store.c a ra  
    {0x1ca0, &op_store_c,	  0,  10, 255, 0xff, 0x02, 0x00, 0x04}, // store.c a sb  
    {0x1cb0, &op_store_c,	  0,  11, 255, 0xff, 0x02, 0x00, 0x04}, // store.c a sp  
    {0x1cc0, &op_store_c,	  0,  12, 255, 0xff, 0x02, 0x00, 0x04}, // store.c a db  
    {0x1cd0, &op_store_c,	  0,  13, 255, 0xff, 0x02, 0x00, 0x04}, // store.c a cb  
    {0x1ce0, &op_store_c,	  0,  14, 255, 0xff, 0x02, 0x00, 0x04}, // store.c a pi  
    {0x1cf0, &op_store_c,	  0,  15, 255, 0xff, 0x02, 0x00, 0x04}, // store.c a status  
    {0x1c01, &op_store_c,	  1,   0, 255, 0xff, 0x02, 0x00, 0x04}, // store.c b a  
    {0x1c11, &op_store_c,	  1,   1, 255, 0xff, 0x02, 0x00, 0x04}, // store.c b b  
    {0x1c21, &op_store_c,	  1,   2, 255, 0xff, 0x02, 0x00, 0x04}, // store.c b c  
    {0x1c31, &op_store_c,	  1,   3, 255, 0xff, 0x02, 0x00, 0x04}, // store.c b d  
    {0x1c41, &op_store_c,	  1,   4, 255, 0xff, 0x02, 0x00, 0x04}, // store.c b e  
    {0x1c51, &op_store_c,	  1,   5, 255, 0xff, 0x02, 0x00, 0x04}, // store.c b f  
    {0x1c61, &op_store_c,	  1,   6, 255, 0xff, 0x02, 0x00, 0x04}, // store.c b g  
    {0x1c71, &op_store_c,	  1,   7, 255, 0xff, 0x02, 0x00, 0x04}, // store.c b h  
    {0x1c81, &op_store_c,	  1,   8, 255, 0xff, 0x02, 0x00, 0x04}, // store.c b pc  
    {0x1c91, &op_store_c,	  1,   9, 255, 0xff, 0x02, 0x00, 0x04}, // store.c b ra  
    {0x1ca1, &op_store_c,	  1,  10, 255, 0xff, 0x02, 0x00, 0x04}, // store.c b sb  
    {0x1cb1, &op_store_c,	  1,  11, 255, 0xff, 0x02, 0x00, 0x04}, // store.c b sp  
    {0x1cc1, &op_store_c,	  1,  12, 255, 0xff, 0x02, 0x00, 0x04}, // store.c b db  
    {0x1cd1, &op_store_c,	  1,  13, 255, 0xff, 0x02, 0x00, 0x04}, // store.c b cb  
    {0x1ce1, &op_store_c,	  1,  14, 255, 0xff, 0x02, 0x00, 0x04}, // store.c b pi  
    {0x1cf1, &op_store_c,	  1,  15, 255, 0xff, 0x02, 0x00, 0x04}, // store.c b status  
    {0x1c02, &op_store_c,	  2,   0, 255, 0xff, 0x02, 0x00, 0x04}, // store.c c a  
    {0x1c12, &op_store_c,	  2,   1, 255, 0xff, 0x02, 0x00, 0x04}, // store.c c b  
    {0x1c22, &op_store_c,	  2,   2, 255, 0xff, 0x02, 0x00, 0x04}, // store.c c c  
    {0x1c32, &op_store_c,	  2,   3, 255, 0xff, 0x02, 0x00, 0x04}, // store.c c d  
    {0x1c42, &op_store_c,	  2,   4, 255, 0xff, 0x02, 0x00, 0x04}, // store.c c e  
    {0x1c52, &op_store_c,	  2,   5, 255, 0xff, 0x02, 0x00, 0x04}, // store.c c f  
    {0x1c62, &op_store_c,	  2,   6, 255, 0xff, 0x02, 0x00, 0x04}, // store.c c g  
    {0x1c72, &op_store_c,	  2,   7, 255, 0xff, 0x02, 0x00, 0x04}, // store.c c h  
    {0x1c82, &op_store_c,	  2,   8, 255, 0xff, 0x02, 0x00, 0x04}, // store.c c pc  
    {0x1c92, &op_store_c,	  2,   9, 255, 0xff, 0x02, 0x00, 0x04}, // store.c c ra  
    {0x1ca2, &op_store_c,	  2,  10, 255, 0xff, 0x02, 0x00, 0x04}, // store.c c sb  
    {0x1cb2, &op_store_c,	  2,  11, 255, 0xff, 0x02, 0x00, 0x04}, // store.c c sp  
    {0x1cc2, &op_store_c,	  2,  12, 255, 0xff, 0x02, 0x00, 0x04}, // store.c c db  
    {0x1cd2, &op_store_c,	  2,  13, 255, 0xff, 0x02, 0x00, 0x04}, // store.c c cb  
    {0x1ce2, &op_store_c,	  2,  14, 255, 0xff, 0x02, 0x00, 0x04}, // store.c c pi  
    {0x1cf2, &op_store_c,	  2,  15, 255, 0xff, 0x02, 0x00, 0x04}, // store.c c status  
    {0x1c03, &op_store_c,	  3,   0, 255, 0xff, 0x02, 0x00, 0x04}, // store.c d a  
    {0x1c13, &op_store_c,	  3,   1, 255, 0xff, 0x02, 0x00, 0x04}, // store.c d b  
    {0x1c23, &op_store_c,	  3,   2, 255, 0xff, 0x02, 0x00, 0x04}, // store.c d c  
    {0x1c33, &op_store_c,	  3,   3, 255, 0xff, 0x02, 0x00, 0x04}, // store.c d d  
    {0x1c43, &op_store_c,	  3,   4, 255, 0xff, 0x02, 0x00, 0x04}, // store.c d e  
    {0x1c53, &op_store_c,	  3,   5, 255, 0xff, 0x02, 0x00, 0x04}, // store.c d f  
    {0x1c63, &op_store_c,	  3,   6, 255, 0xff, 0x02, 0x00, 0x04}, // store.c d g  
    {0x1c73, &op_store_c,	  3,   7, 255, 0xff, 0x02, 0x00, 0x04}, // store.c d h  
    {0x1c83, &op_store_c,	  3,   8, 255, 0xff, 0x02, 0x00, 0x04}, // store.c d pc  
    {0x1c93, &op_store_c,	  3,   9, 255, 0xff, 0x02, 0x00, 0x04}, // store.c d ra  
    {0x1ca3, &op_store_c,	  3,  10, 255, 0xff, 0x02, 0x00, 0x04}, // store.c d sb  
    {0x1cb3, &op_store_c,	  3,  11, 255, 0xff, 0x02, 0x00, 0x04}, // store.c d sp  
    {0x1cc3, &op_store_c,	  3,  12, 255, 0xff, 0x02, 0x00, 0x04}, // store.c d db  
    {0x1cd3, &op_store_c,	  3,  13, 255, 0xff, 0x02, 0x00, 0x04}, // store.c d cb  
    {0x1ce3, &op_store_c,	  3,  14, 255, 0xff, 0x02, 0x00, 0x04}, // store.c d pi  
    {0x1cf3, &op_store_c,	  3,  15, 255, 0xff, 0x02, 0x00, 0x04}, // store.c d status  
    {0x1c04, &op_store_c,	  4,   0, 255, 0xff, 0x02, 0x00, 0x04}, // store.c e a  
    {0x1c14, &op_store_c,	  4,   1, 255, 0xff, 0x02, 0x00, 0x04}, // store.c e b  
    {0x1c24, &op_store_c,	  4,   2, 255, 0xff, 0x02, 0x00, 0x04}, // store.c e c  
    {0x1c34, &op_store_c,	  4,   3, 255, 0xff, 0x02, 0x00, 0x04}, // store.c e d  
    {0x1c44, &op_store_c,	  4,   4, 255, 0xff, 0x02, 0x00, 0x04}, // store.c e e  
    {0x1c54, &op_store_c,	  4,   5, 255, 0xff, 0x02, 0x00, 0x04}, // store.c e f  
    {0x1c64, &op_store_c,	  4,   6, 255, 0xff, 0x02, 0x00, 0x04}, // store.c e g  
    {0x1c74, &op_store_c,	  4,   7, 255, 0xff, 0x02, 0x00, 0x04}, // store.c e h  
    {0x1c84, &op_store_c,	  4,   8, 255, 0xff, 0x02, 0x00, 0x04}, // store.c e pc  
    {0x1c94, &op_store_c,	  4,   9, 255, 0xff, 0x02, 0x00, 0x04}, // store.c e ra  
    {0x1ca4, &op_store_c,	  4,  10, 255, 0xff, 0x02, 0x00, 0x04}, // store.c e sb  
    {0x1cb4, &op_store_c,	  4,  11, 255, 0xff, 0x02, 0x00, 0x04}, // store.c e sp  
    {0x1cc4, &op_store_c,	  4,  12, 255, 0xff, 0x02, 0x00, 0x04}, // store.c e db  
    {0x1cd4, &op_store_c,	  4,  13, 255, 0xff, 0x02, 0x00, 0x04}, // store.c e cb  
    {0x1ce4, &op_store_c,	  4,  14, 255, 0xff, 0x02, 0x00, 0x04}, // store.c e pi  
    {0x1cf4, &op_store_c,	  4,  15, 255, 0xff, 0x02, 0x00, 0x04}, // store.c e status  
    {0x1c05, &op_store_c,	  5,   0, 255, 0xff, 0x02, 0x00, 0x04}, // store.c f a  
    {0x1c15, &op_store_c,	  5,   1, 255, 0xff, 0x02, 0x00, 0x04}, // store.c f b  
    {0x1c25, &op_store_c,	  5,   2, 255, 0xff, 0x02, 0x00, 0x04}, // store.c f c  
    {0x1c35, &op_store_c,	  5,   3, 255, 0xff, 0x02, 0x00, 0x04}, // store.c f d  
    {0x1c45, &op_store_c,	  5,   4, 255, 0xff, 0x02, 0x00, 0x04}, // store.c f e  
    {0x1c55, &op_store_c,	  5,   5, 255, 0xff, 0x02, 0x00, 0x04}, // store.c f f  
    {0x1c65, &op_store_c,	  5,   6, 255, 0xff, 0x02, 0x00, 0x04}, // store.c f g  
    {0x1c75, &op_store_c,	  5,   7, 255, 0xff, 0x02, 0x00, 0x04}, // store.c f h  
    {0x1c85, &op_store_c,	  5,   8, 255, 0xff, 0x02, 0x00, 0x04}, // store.c f pc  
    {0x1c95, &op_store_c,	  5,   9, 255, 0xff, 0x02, 0x00, 0x04}, // store.c f ra  
    {0x1ca5, &op_store_c,	  5,  10, 255, 0xff, 0x02, 0x00, 0x04}, // store.c f sb  
    {0x1cb5, &op_store_c,	  5,  11, 255, 0xff, 0x02, 0x00, 0x04}, // store.c f sp  
    {0x1cc5, &op_store_c,	  5,  12, 255, 0xff, 0x02, 0x00, 0x04}, // store.c f db  
    {0x1cd5, &op_store_c,	  5,  13, 255, 0xff, 0x02, 0x00, 0x04}, // store.c f cb  
    {0x1ce5, &op_store_c,	  5,  14, 255, 0xff, 0x02, 0x00, 0x04}, // store.c f pi  
    {0x1cf5, &op_store_c,	  5,  15, 255, 0xff, 0x02, 0x00, 0x04}, // store.c f status  
    {0x1c06, &op_store_c,	  6,   0, 255, 0xff, 0x02, 0x00, 0x04}, // store.c g a  
    {0x1c16, &op_store_c,	  6,   1, 255, 0xff, 0x02, 0x00, 0x04}, // store.c g b  
    {0x1c26, &op_store_c,	  6,   2, 255, 0xff, 0x02, 0x00, 0x04}, // store.c g c  
    {0x1c36, &op_store_c,	  6,   3, 255, 0xff, 0x02, 0x00, 0x04}, // store.c g d  
    {0x1c46, &op_store_c,	  6,   4, 255, 0xff, 0x02, 0x00, 0x04}, // store.c g e  
    {0x1c56, &op_store_c,	  6,   5, 255, 0xff, 0x02, 0x00, 0x04}, // store.c g f  
    {0x1c66, &op_store_c,	  6,   6, 255, 0xff, 0x02, 0x00, 0x04}, // store.c g g  
    {0x1c76, &op_store_c,	  6,   7, 255, 0xff, 0x02, 0x00, 0x04}, // store.c g h  
    {0x1c86, &op_store_c,	  6,   8, 255, 0xff, 0x02, 0x00, 0x04}, // store.c g pc  
    {0x1c96, &op_store_c,	  6,   9, 255, 0xff, 0x02, 0x00, 0x04}, // store.c g ra  
    {0x1ca6, &op_store_c,	  6,  10, 255, 0xff, 0x02, 0x00, 0x04}, // store.c g sb  
    {0x1cb6, &op_store_c,	  6,  11, 255, 0xff, 0x02, 0x00, 0x04}, // store.c g sp  
    {0x1cc6, &op_store_c,	  6,  12, 255, 0xff, 0x02, 0x00, 0x04}, // store.c g db  
    {0x1cd6, &op_store_c,	  6,  13, 255, 0xff, 0x02, 0x00, 0x04}, // store.c g cb  
    {0x1ce6, &op_store_c,	  6,  14, 255, 0xff, 0x02, 0x00, 0x04}, // store.c g pi  
    {0x1cf6, &op_store_c,	  6,  15, 255, 0xff, 0x02, 0x00, 0x04}, // store.c g status  
    {0x1c07, &op_store_c,	  7,   0, 255, 0xff, 0x02, 0x00, 0x04}, // store.c h a  
    {0x1c17, &op_store_c,	  7,   1, 255, 0xff, 0x02, 0x00, 0x04}, // store.c h b  
    {0x1c27, &op_store_c,	  7,   2, 255, 0xff, 0x02, 0x00, 0x04}, // store.c h c  
    {0x1c37, &op_store_c,	  7,   3, 255, 0xff, 0x02, 0x00, 0x04}, // store.c h d  
    {0x1c47, &op_store_c,	  7,   4, 255, 0xff, 0x02, 0x00, 0x04}, // store.c h e  
    {0x1c57, &op_store_c,	  7,   5, 255, 0xff, 0x02, 0x00, 0x04}, // store.c h f  
    {0x1c67, &op_store_c,	  7,   6, 255, 0xff, 0x02, 0x00, 0x04}, // store.c h g  
    {0x1c77, &op_store_c,	  7,   7, 255, 0xff, 0x02, 0x00, 0x04}, // store.c h h  
    {0x1c87, &op_store_c,	  7,   8, 255, 0xff, 0x02, 0x00, 0x04}, // store.c h pc  
    {0x1c97, &op_store_c,	  7,   9, 255, 0xff, 0x02, 0x00, 0x04}, // store.c h ra  
    {0x1ca7, &op_store_c,	  7,  10, 255, 0xff, 0x02, 0x00, 0x04}, // store.c h sb  
    {0x1cb7, &op_store_c,	  7,  11, 255, 0xff, 0x02, 0x00, 0x04}, // store.c h sp  
    {0x1cc7, &op_store_c,	  7,  12, 255, 0xff, 0x02, 0x00, 0x04}, // store.c h db  
    {0x1cd7, &op_store_c,	  7,  13, 255, 0xff, 0x02, 0x00, 0x04}, // store.c h cb  
    {0x1ce7, &op_store_c,	  7,  14, 255, 0xff, 0x02, 0x00, 0x04}, // store.c h pi  
    {0x1cf7, &op_store_c,	  7,  15, 255, 0xff, 0x02, 0x00, 0x04}, // store.c h status  
    {0x1c08, &op_store_c,	  8,   0, 255, 0xff, 0x02, 0x00, 0x04}, // store.c pc a  
    {0x1c18, &op_store_c,	  8,   1, 255, 0xff, 0x02, 0x00, 0x04}, // store.c pc b  
    {0x1c28, &op_store_c,	  8,   2, 255, 0xff, 0x02, 0x00, 0x04}, // store.c pc c  
    {0x1c38, &op_store_c,	  8,   3, 255, 0xff, 0x02, 0x00, 0x04}, // store.c pc d  
    {0x1c48, &op_store_c,	  8,   4, 255, 0xff, 0x02, 0x00, 0x04}, // store.c pc e  
    {0x1c58, &op_store_c,	  8,   5, 255, 0xff, 0x02, 0x00, 0x04}, // store.c pc f  
    {0x1c68, &op_store_c,	  8,   6, 255, 0xff, 0x02, 0x00, 0x04}, // store.c pc g  
    {0x1c78, &op_store_c,	  8,   7, 255, 0xff, 0x02, 0x00, 0x04}, // store.c pc h  
    {0x1c88, &op_store_c,	  8,   8, 255, 0xff, 0x02, 0x00, 0x04}, // store.c pc pc  
    {0x1c98, &op_store_c,	  8,   9, 255, 0xff, 0x02, 0x00, 0x04}, // store.c pc ra  
    {0x1ca8, &op_store_c,	  8,  10, 255, 0xff, 0x02, 0x00, 0x04}, // store.c pc sb  
    {0x1cb8, &op_store_c,	  8,  11, 255, 0xff, 0x02, 0x00, 0x04}, // store.c pc sp  
    {0x1cc8, &op_store_c,	  8,  12, 255, 0xff, 0x02, 0x00, 0x04}, // store.c pc db  
    {0x1cd8, &op_store_c,	  8,  13, 255, 0xff, 0x02, 0x00, 0x04}, // store.c pc cb  
    {0x1ce8, &op_store_c,	  8,  14, 255, 0xff, 0x02, 0x00, 0x04}, // store.c pc pi  
    {0x1cf8, &op_store_c,	  8,  15, 255, 0xff, 0x02, 0x00, 0x04}, // store.c pc status  
    {0x1c09, &op_store_c,	  9,   0, 255, 0xff, 0x02, 0x00, 0x04}, // store.c ra a  
    {0x1c19, &op_store_c,	  9,   1, 255, 0xff, 0x02, 0x00, 0x04}, // store.c ra b  
    {0x1c29, &op_store_c,	  9,   2, 255, 0xff, 0x02, 0x00, 0x04}, // store.c ra c  
    {0x1c39, &op_store_c,	  9,   3, 255, 0xff, 0x02, 0x00, 0x04}, // store.c ra d  
    {0x1c49, &op_store_c,	  9,   4, 255, 0xff, 0x02, 0x00, 0x04}, // store.c ra e  
    {0x1c59, &op_store_c,	  9,   5, 255, 0xff, 0x02, 0x00, 0x04}, // store.c ra f  
    {0x1c69, &op_store_c,	  9,   6, 255, 0xff, 0x02, 0x00, 0x04}, // store.c ra g  
    {0x1c79, &op_store_c,	  9,   7, 255, 0xff, 0x02, 0x00, 0x04}, // store.c ra h  
    {0x1c89, &op_store_c,	  9,   8, 255, 0xff, 0x02, 0x00, 0x04}, // store.c ra pc  
    {0x1c99, &op_store_c,	  9,   9, 255, 0xff, 0x02, 0x00, 0x04}, // store.c ra ra  
    {0x1ca9, &op_store_c,	  9,  10, 255, 0xff, 0x02, 0x00, 0x04}, // store.c ra sb  
    {0x1cb9, &op_store_c,	  9,  11, 255, 0xff, 0x02, 0x00, 0x04}, // store.c ra sp  
    {0x1cc9, &op_store_c,	  9,  12, 255, 0xff, 0x02, 0x00, 0x04}, // store.c ra db  
    {0x1cd9, &op_store_c,	  9,  13, 255, 0xff, 0x02, 0x00, 0x04}, // store.c ra cb  
    {0x1ce9, &op_store_c,	  9,  14, 255, 0xff, 0x02, 0x00, 0x04}, // store.c ra pi  
    {0x1cf9, &op_store_c,	  9,  15, 255, 0xff, 0x02, 0x00, 0x04}, // store.c ra status  
    {0x1c0a, &op_store_c,	 10,   0, 255, 0xff, 0x02, 0x00, 0x04}, // store.c sb a  
    {0x1c1a, &op_store_c,	 10,   1, 255, 0xff, 0x02, 0x00, 0x04}, // store.c sb b  
    {0x1c2a, &op_store_c,	 10,   2, 255, 0xff, 0x02, 0x00, 0x04}, // store.c sb c  
    {0x1c3a, &op_store_c,	 10,   3, 255, 0xff, 0x02, 0x00, 0x04}, // store.c sb d  
    {0x1c4a, &op_store_c,	 10,   4, 255, 0xff, 0x02, 0x00, 0x04}, // store.c sb e  
    {0x1c5a, &op_store_c,	 10,   5, 255, 0xff, 0x02, 0x00, 0x04}, // store.c sb f  
    {0x1c6a, &op_store_c,	 10,   6, 255, 0xff, 0x02, 0x00, 0x04}, // store.c sb g  
    {0x1c7a, &op_store_c,	 10,   7, 255, 0xff, 0x02, 0x00, 0x04}, // store.c sb h  
    {0x1c8a, &op_store_c,	 10,   8, 255, 0xff, 0x02, 0x00, 0x04}, // store.c sb pc  
    {0x1c9a, &op_store_c,	 10,   9, 255, 0xff, 0x02, 0x00, 0x04}, // store.c sb ra  
    {0x1caa, &op_store_c,	 10,  10, 255, 0xff, 0x02, 0x00, 0x04}, // store.c sb sb  
    {0x1cba, &op_store_c,	 10,  11, 255, 0xff, 0x02, 0x00, 0x04}, // store.c sb sp  
    {0x1cca, &op_store_c,	 10,  12, 255, 0xff, 0x02, 0x00, 0x04}, // store.c sb db  
    {0x1cda, &op_store_c,	 10,  13, 255, 0xff, 0x02, 0x00, 0x04}, // store.c sb cb  
    {0x1cea, &op_store_c,	 10,  14, 255, 0xff, 0x02, 0x00, 0x04}, // store.c sb pi  
    {0x1cfa, &op_store_c,	 10,  15, 255, 0xff, 0x02, 0x00, 0x04}, // store.c sb status  
    {0x1c0b, &op_store_c,	 11,   0, 255, 0xff, 0x02, 0x00, 0x04}, // store.c sp a  
    {0x1c1b, &op_store_c,	 11,   1, 255, 0xff, 0x02, 0x00, 0x04}, // store.c sp b  
    {0x1c2b, &op_store_c,	 11,   2, 255, 0xff, 0x02, 0x00, 0x04}, // store.c sp c  
    {0x1c3b, &op_store_c,	 11,   3, 255, 0xff, 0x02, 0x00, 0x04}, // store.c sp d  
    {0x1c4b, &op_store_c,	 11,   4, 255, 0xff, 0x02, 0x00, 0x04}, // store.c sp e  
    {0x1c5b, &op_store_c,	 11,   5, 255, 0xff, 0x02, 0x00, 0x04}, // store.c sp f  
    {0x1c6b, &op_store_c,	 11,   6, 255, 0xff, 0x02, 0x00, 0x04}, // store.c sp g  
    {0x1c7b, &op_store_c,	 11,   7, 255, 0xff, 0x02, 0x00, 0x04}, // store.c sp h  
    {0x1c8b, &op_store_c,	 11,   8, 255, 0xff, 0x02, 0x00, 0x04}, // store.c sp pc  
    {0x1c9b, &op_store_c,	 11,   9, 255, 0xff, 0x02, 0x00, 0x04}, // store.c sp ra  
    {0x1cab, &op_store_c,	 11,  10, 255, 0xff, 0x02, 0x00, 0x04}, // store.c sp sb  
    {0x1cbb, &op_store_c,	 11,  11, 255, 0xff, 0x02, 0x00, 0x04}, // store.c sp sp  
    {0x1ccb, &op_store_c,	 11,  12, 255, 0xff, 0x02, 0x00, 0x04}, // store.c sp db  
    {0x1cdb, &op_store_c,	 11,  13, 255, 0xff, 0x02, 0x00, 0x04}, // store.c sp cb  
    {0x1ceb, &op_store_c,	 11,  14, 255, 0xff, 0x02, 0x00, 0x04}, // store.c sp pi  
    {0x1cfb, &op_store_c,	 11,  15, 255, 0xff, 0x02, 0x00, 0x04}, // store.c sp status  
    {0x1c0c, &op_store_c,	 12,   0, 255, 0xff, 0x02, 0x00, 0x04}, // store.c db a  
    {0x1c1c, &op_store_c,	 12,   1, 255, 0xff, 0x02, 0x00, 0x04}, // store.c db b  
    {0x1c2c, &op_store_c,	 12,   2, 255, 0xff, 0x02, 0x00, 0x04}, // store.c db c  
    {0x1c3c, &op_store_c,	 12,   3, 255, 0xff, 0x02, 0x00, 0x04}, // store.c db d  
    {0x1c4c, &op_store_c,	 12,   4, 255, 0xff, 0x02, 0x00, 0x04}, // store.c db e  
    {0x1c5c, &op_store_c,	 12,   5, 255, 0xff, 0x02, 0x00, 0x04}, // store.c db f  
    {0x1c6c, &op_store_c,	 12,   6, 255, 0xff, 0x02, 0x00, 0x04}, // store.c db g  
    {0x1c7c, &op_store_c,	 12,   7, 255, 0xff, 0x02, 0x00, 0x04}, // store.c db h  
    {0x1c8c, &op_store_c,	 12,   8, 255, 0xff, 0x02, 0x00, 0x04}, // store.c db pc  
    {0x1c9c, &op_store_c,	 12,   9, 255, 0xff, 0x02, 0x00, 0x04}, // store.c db ra  
    {0x1cac, &op_store_c,	 12,  10, 255, 0xff, 0x02, 0x00, 0x04}, // store.c db sb  
    {0x1cbc, &op_store_c,	 12,  11, 255, 0xff, 0x02, 0x00, 0x04}, // store.c db sp  
    {0x1ccc, &op_store_c,	 12,  12, 255, 0xff, 0x02, 0x00, 0x04}, // store.c db db  
    {0x1cdc, &op_store_c,	 12,  13, 255, 0xff, 0x02, 0x00, 0x04}, // store.c db cb  
    {0x1cec, &op_store_c,	 12,  14, 255, 0xff, 0x02, 0x00, 0x04}, // store.c db pi  
    {0x1cfc, &op_store_c,	 12,  15, 255, 0xff, 0x02, 0x00, 0x04}, // store.c db status  
    {0x1c0d, &op_store_c,	 13,   0, 255, 0xff, 0x02, 0x00, 0x04}, // store.c cb a  
    {0x1c1d, &op_store_c,	 13,   1, 255, 0xff, 0x02, 0x00, 0x04}, // store.c cb b  
    {0x1c2d, &op_store_c,	 13,   2, 255, 0xff, 0x02, 0x00, 0x04}, // store.c cb c  
    {0x1c3d, &op_store_c,	 13,   3, 255, 0xff, 0x02, 0x00, 0x04}, // store.c cb d  
    {0x1c4d, &op_store_c,	 13,   4, 255, 0xff, 0x02, 0x00, 0x04}, // store.c cb e  
    {0x1c5d, &op_store_c,	 13,   5, 255, 0xff, 0x02, 0x00, 0x04}, // store.c cb f  
    {0x1c6d, &op_store_c,	 13,   6, 255, 0xff, 0x02, 0x00, 0x04}, // store.c cb g  
    {0x1c7d, &op_store_c,	 13,   7, 255, 0xff, 0x02, 0x00, 0x04}, // store.c cb h  
    {0x1c8d, &op_store_c,	 13,   8, 255, 0xff, 0x02, 0x00, 0x04}, // store.c cb pc  
    {0x1c9d, &op_store_c,	 13,   9, 255, 0xff, 0x02, 0x00, 0x04}, // store.c cb ra  
    {0x1cad, &op_store_c,	 13,  10, 255, 0xff, 0x02, 0x00, 0x04}, // store.c cb sb  
    {0x1cbd, &op_store_c,	 13,  11, 255, 0xff, 0x02, 0x00, 0x04}, // store.c cb sp  
    {0x1ccd, &op_store_c,	 13,  12, 255, 0xff, 0x02, 0x00, 0x04}, // store.c cb db  
    {0x1cdd, &op_store_c,	 13,  13, 255, 0xff, 0x02, 0x00, 0x04}, // store.c cb cb  
    {0x1ced, &op_store_c,	 13,  14, 255, 0xff, 0x02, 0x00, 0x04}, // store.c cb pi  
    {0x1cfd, &op_store_c,	 13,  15, 255, 0xff, 0x02, 0x00, 0x04}, // store.c cb status  
    {0x1c0e, &op_store_c,	 14,   0, 255, 0xff, 0x02, 0x00, 0x04}, // store.c pi a  
    {0x1c1e, &op_store_c,	 14,   1, 255, 0xff, 0x02, 0x00, 0x04}, // store.c pi b  
    {0x1c2e, &op_store_c,	 14,   2, 255, 0xff, 0x02, 0x00, 0x04}, // store.c pi c  
    {0x1c3e, &op_store_c,	 14,   3, 255, 0xff, 0x02, 0x00, 0x04}, // store.c pi d  
    {0x1c4e, &op_store_c,	 14,   4, 255, 0xff, 0x02, 0x00, 0x04}, // store.c pi e  
    {0x1c5e, &op_store_c,	 14,   5, 255, 0xff, 0x02, 0x00, 0x04}, // store.c pi f  
    {0x1c6e, &op_store_c,	 14,   6, 255, 0xff, 0x02, 0x00, 0x04}, // store.c pi g  
    {0x1c7e, &op_store_c,	 14,   7, 255, 0xff, 0x02, 0x00, 0x04}, // store.c pi h  
    {0x1c8e, &op_store_c,	 14,   8, 255, 0xff, 0x02, 0x00, 0x04}, // store.c pi pc  
    {0x1c9e, &op_store_c,	 14,   9, 255, 0xff, 0x02, 0x00, 0x04}, // store.c pi ra  
    {0x1cae, &op_store_c,	 14,  10, 255, 0xff, 0x02, 0x00, 0x04}, // store.c pi sb  
    {0x1cbe, &op_store_c,	 14,  11, 255, 0xff, 0x02, 0x00, 0x04}, // store.c pi sp  
    {0x1cce, &op_store_c,	 14,  12, 255, 0xff, 0x02, 0x00, 0x04}, // store.c pi db  
    {0x1cde, &op_store_c,	 14,  13, 255, 0xff, 0x02, 0x00, 0x04}, // store.c pi cb  
    {0x1cee, &op_store_c,	 14,  14, 255, 0xff, 0x02, 0x00, 0x04}, // store.c pi pi  
    {0x1cfe, &op_store_c,	 14,  15, 255, 0xff, 0x02, 0x00, 0x04}, // store.c pi status  
    {0x1c0f, &op_store_c,	 15,   0, 255, 0xff, 0x02, 0x00, 0x04}, // store.c status a  
    {0x1c1f, &op_store_c,	 15,   1, 255, 0xff, 0x02, 0x00, 0x04}, // store.c status b  
    {0x1c2f, &op_store_c,	 15,   2, 255, 0xff, 0x02, 0x00, 0x04}, // store.c status c  
    {0x1c3f, &op_store_c,	 15,   3, 255, 0xff, 0x02, 0x00, 0x04}, // store.c status d  
    {0x1c4f, &op_store_c,	 15,   4, 255, 0xff, 0x02, 0x00, 0x04}, // store.c status e  
    {0x1c5f, &op_store_c,	 15,   5, 255, 0xff, 0x02, 0x00, 0x04}, // store.c status f  
    {0x1c6f, &op_store_c,	 15,   6, 255, 0xff, 0x02, 0x00, 0x04}, // store.c status g  
    {0x1c7f, &op_store_c,	 15,   7, 255, 0xff, 0x02, 0x00, 0x04}, // store.c status h  
    {0x1c8f, &op_store_c,	 15,   8, 255, 0xff, 0x02, 0x00, 0x04}, // store.c status pc  
    {0x1c9f, &op_store_c,	 15,   9, 255, 0xff, 0x02, 0x00, 0x04}, // store.c status ra  
    {0x1caf, &op_store_c,	 15,  10, 255, 0xff, 0x02, 0x00, 0x04}, // store.c status sb  
    {0x1cbf, &op_store_c,	 15,  11, 255, 0xff, 0x02, 0x00, 0x04}, // store.c status sp  
    {0x1ccf, &op_store_c,	 15,  12, 255, 0xff, 0x02, 0x00, 0x04}, // store.c status db  
    {0x1cdf, &op_store_c,	 15,  13, 255, 0xff, 0x02, 0x00, 0x04}, // store.c status cb  
    {0x1cef, &op_store_c,	 15,  14, 255, 0xff, 0x02, 0x00, 0x04}, // store.c status pi  
    {0x1cff, &op_store_c,	 15,  15, 255, 0xff, 0x02, 0x00, 0x04}, // store.c status status  
    {0x19f0, &op_load_c,	  0, 255, 255, 0xff, 0x03, 0x04, 0x04}, // load.ci a   
    {0x19f1, &op_load_c,	  1, 255, 255, 0xff, 0x03, 0x04, 0x04}, // load.ci b   
    {0x19f2, &op_load_c,	  2, 255, 255, 0xff, 0x03, 0x04, 0x04}, // load.ci c   
    {0x19f3, &op_load_c,	  3, 255, 255, 0xff, 0x03, 0x04, 0x04}, // load.ci d   
    {0x19f4, &op_load_c,	  4, 255, 255, 0xff, 0x03, 0x04, 0x04}, // load.ci e   
    {0x19f5, &op_load_c,	  5, 255, 255, 0xff, 0x03, 0x04, 0x04}, // load.ci f   
    {0x19f6, &op_load_c,	  6, 255, 255, 0xff, 0x03, 0x04, 0x04}, // load.ci g   
    {0x19f7, &op_load_c,	  7, 255, 255, 0xff, 0x03, 0x04, 0x04}, // load.ci h   
    {0x19f8, &op_load_c,	  8, 255, 255, 0xff, 0x03, 0x04, 0x04}, // load.ci pc   
    {0x19f9, &op_load_c,	  9, 255, 255, 0xff, 0x03, 0x04, 0x04}, // load.ci ra   
    {0x19fa, &op_load_c,	 10, 255, 255, 0xff, 0x03, 0x04, 0x04}, // load.ci sb   
    {0x19fb, &op_load_c,	 11, 255, 255, 0xff, 0x03, 0x04, 0x04}, // load.ci sp   
    {0x19fc, &op_load_c,	 12, 255, 255, 0xff, 0x03, 0x04, 0x04}, // load.ci db   
    {0x19fd, &op_load_c,	 13, 255, 255, 0xff, 0x03, 0x04, 0x04}, // load.ci cb   
    {0x19fe, &op_load_c,	 14, 255, 255, 0xff, 0x03, 0x04, 0x04}, // load.ci pi   
    {0x19ff, &op_load_c,	 15, 255, 255, 0xff, 0x03, 0x04, 0x04}, // load.ci status   
    {0x1af0, &op_store_c,	  0, 255, 255, 0xff, 0x03, 0x04, 0x04}, // store.ci a   
    {0x1af1, &op_store_c,	  1, 255, 255, 0xff, 0x03, 0x04, 0x04}, // store.ci b   
    {0x1af2, &op_store_c,	  2, 255, 255, 0xff, 0x03, 0x04, 0x04}, // store.ci c   
    {0x1af3, &op_store_c,	  3, 255, 255, 0xff, 0x03, 0x04, 0x04}, // store.ci d   
    {0x1af4, &op_store_c,	  4, 255, 255, 0xff, 0x03, 0x04, 0x04}, // store.ci e   
    {0x1af5, &op_store_c,	  5, 255, 255, 0xff, 0x03, 0x04, 0x04}, // store.ci f   
    {0x1af6, &op_store_c,	  6, 255, 255, 0xff, 0x03, 0x04, 0x04}, // store.ci g   
    {0x1af7, &op_store_c,	  7, 255, 255, 0xff, 0x03, 0x04, 0x04}, // store.ci h   
    {0x1af8, &op_store_c,	  8, 255, 255, 0xff, 0x03, 0x04, 0x04}, // store.ci pc   
    {0x1af9, &op_store_c,	  9, 255, 255, 0xff, 0x03, 0x04, 0x04}, // store.ci ra   
    {0x1afa, &op_store_c,	 10, 255, 255, 0xff, 0x03, 0x04, 0x04}, // store.ci sb   
    {0x1afb, &op_store_c,	 11, 255, 255, 0xff, 0x03, 0x04, 0x04}, // store.ci sp   
    {0x1afc, &op_store_c,	 12, 255, 255, 0xff, 0x03, 0x04, 0x04}, // store.ci db   
    {0x1afd, &op_store_c,	 13, 255, 255, 0xff, 0x03, 0x04, 0x04}, // store.ci cb   
    {0x1afe, &op_store_c,	 14, 255, 255, 0xff, 0x03, 0x04, 0x04}, // store.ci pi   
    {0x1aff, &op_store_c,	 15, 255, 255, 0xff, 0x03, 0x04, 0x04}, // store.ci status   
    {0x1d00, &op_load_o,	  0,   0, 255, 0xff, 0x02, 0x00, 0x00}, // load.o a a  
    {0x1d10, &op_load_o,	  0,   1, 255, 0xff, 0x02, 0x00, 0x00}, // load.o a b  
    {0x1d20, &op_load_o,	  0,   2, 255, 0xff, 0x02, 0x00, 0x00}, // load.o a c  
    {0x1d30, &op_load_o,	  0,   3, 255, 0xff, 0x02, 0x00, 0x00}, // load.o a d  
    {0x1d40, &op_load_o,	  0,   4, 255, 0xff, 0x02, 0x00, 0x00}, // load.o a e  
    {0x1d50, &op_load_o,	  0,   5, 255, 0xff, 0x02, 0x00, 0x00}, // load.o a f  
    {0x1d60, &op_load_o,	  0,   6, 255, 0xff, 0x02, 0x00, 0x00}, // load.o a g  
    {0x1d70, &op_load_o,	  0,   7, 255, 0xff, 0x02, 0x00, 0x00}, // load.o a h  
    {0x1d80, &op_load_o,	  0,   8, 255, 0xff, 0x02, 0x00, 0x00}, // load.o a pc  
    {0x1d90, &op_load_o,	  0,   9, 255, 0xff, 0x02, 0x00, 0x00}, // load.o a ra  
    {0x1da0, &op_load_o,	  0,  10, 255, 0xff, 0x02, 0x00, 0x00}, // load.o a sb  
    {0x1db0, &op_load_o,	  0,  11, 255, 0xff, 0x02, 0x00, 0x00}, // load.o a sp  
    {0x1dc0, &op_load_o,	  0,  12, 255, 0xff, 0x02, 0x00, 0x00}, // load.o a db  
    {0x1dd0, &op_load_o,	  0,  13, 255, 0xff, 0x02, 0x00, 0x00}, // load.o a cb  
    {0x1de0, &op_load_o,	  0,  14, 255, 0xff, 0x02, 0x00, 0x00}, // load.o a pi  
    {0x1df0, &op_load_o,	  0,  15, 255, 0xff, 0x02, 0x00, 0x00}, // load.o a status  
    {0x1d01, &op_load_o,	  1,   0, 255, 0xff, 0x02, 0x00, 0x00}, // load.o b a  
    {0x1d11, &op_load_o,	  1,   1, 255, 0xff, 0x02, 0x00, 0x00}, // load.o b b  
    {0x1d21, &op_load_o,	  1,   2, 255, 0xff, 0x02, 0x00, 0x00}, // load.o b c  
    {0x1d31, &op_load_o,	  1,   3, 255, 0xff, 0x02, 0x00, 0x00}, // load.o b d  
    {0x1d41, &op_load_o,	  1,   4, 255, 0xff, 0x02, 0x00, 0x00}, // load.o b e  
    {0x1d51, &op_load_o,	  1,   5, 255, 0xff, 0x02, 0x00, 0x00}, // load.o b f  
    {0x1d61, &op_load_o,	  1,   6, 255, 0xff, 0x02, 0x00, 0x00}, // load.o b g  
    {0x1d71, &op_load_o,	  1,   7, 255, 0xff, 0x02, 0x00, 0x00}, // load.o b h  
    {0x1d81, &op_load_o,	  1,   8, 255, 0xff, 0x02, 0x00, 0x00}, // load.o b pc  
    {0x1d91, &op_load_o,	  1,   9, 255, 0xff, 0x02, 0x00, 0x00}, // load.o b ra  
    {0x1da1, &op_load_o,	  1,  10, 255, 0xff, 0x02, 0x00, 0x00}, // load.o b sb  
    {0x1db1, &op_load_o,	  1,  11, 255, 0xff, 0x02, 0x00, 0x00}, // load.o b sp  
    {0x1dc1, &op_load_o,	  1,  12, 255, 0xff, 0x02, 0x00, 0x00}, // load.o b db  
    {0x1dd1, &op_load_o,	  1,  13, 255, 0xff, 0x02, 0x00, 0x00}, // load.o b cb  
    {0x1de1, &op_load_o,	  1,  14, 255, 0xff, 0x02, 0x00, 0x00}, // load.o b pi  
    {0x1df1, &op_load_o,	  1,  15, 255, 0xff, 0x02, 0x00, 0x00}, // load.o b status  
    {0x1d02, &op_load_o,	  2,   0, 255, 0xff, 0x02, 0x00, 0x00}, // load.o c a  
    {0x1d12, &op_load_o,	  2,   1, 255, 0xff, 0x02, 0x00, 0x00}, // load.o c b  
    {0x1d22, &op_load_o,	  2,   2, 255, 0xff, 0x02, 0x00, 0x00}, // load.o c c  
    {0x1d32, &op_load_o,	  2,   3, 255, 0xff, 0x02, 0x00, 0x00}, // load.o c d  
    {0x1d42, &op_load_o,	  2,   4, 255, 0xff, 0x02, 0x00, 0x00}, // load.o c e  
    {0x1d52, &op_load_o,	  2,   5, 255, 0xff, 0x02, 0x00, 0x00}, // load.o c f  
    {0x1d62, &op_load_o,	  2,   6, 255, 0xff, 0x02, 0x00, 0x00}, // load.o c g  
    {0x1d72, &op_load_o,	  2,   7, 255, 0xff, 0x02, 0x00, 0x00}, // load.o c h  
    {0x1d82, &op_load_o,	  2,   8, 255, 0xff, 0x02, 0x00, 0x00}, // load.o c pc  
    {0x1d92, &op_load_o,	  2,   9, 255, 0xff, 0x02, 0x00, 0x00}, // load.o c ra  
    {0x1da2, &op_load_o,	  2,  10, 255, 0xff, 0x02, 0x00, 0x00}, // load.o c sb  
    {0x1db2, &op_load_o,	  2,  11, 255, 0xff, 0x02, 0x00, 0x00}, // load.o c sp  
    {0x1dc2, &op_load_o,	  2,  12, 255, 0xff, 0x02, 0x00, 0x00}, // load.o c db  
    {0x1dd2, &op_load_o,	  2,  13, 255, 0xff, 0x02, 0x00, 0x00}, // load.o c cb  
    {0x1de2, &op_load_o,	  2,  14, 255, 0xff, 0x02, 0x00, 0x00}, // load.o c pi  
    {0x1df2, &op_load_o,	  2,  15, 255, 0xff, 0x02, 0x00, 0x00}, // load.o c status  
    {0x1d03, &op_load_o,	  3,   0, 255, 0xff, 0x02, 0x00, 0x00}, // load.o d a  
    {0x1d13, &op_load_o,	  3,   1, 255, 0xff, 0x02, 0x00, 0x00}, // load.o d b  
    {0x1d23, &op_load_o,	  3,   2, 255, 0xff, 0x02, 0x00, 0x00}, // load.o d c  
    {0x1d33, &op_load_o,	  3,   3, 255, 0xff, 0x02, 0x00, 0x00}, // load.o d d  
    {0x1d43, &op_load_o,	  3,   4, 255, 0xff, 0x02, 0x00, 0x00}, // load.o d e  
    {0x1d53, &op_load_o,	  3,   5, 255, 0xff, 0x02, 0x00, 0x00}, // load.o d f  
    {0x1d63, &op_load_o,	  3,   6, 255, 0xff, 0x02, 0x00, 0x00}, // load.o d g  
    {0x1d73, &op_load_o,	  3,   7, 255, 0xff, 0x02, 0x00, 0x00}, // load.o d h  
    {0x1d83, &op_load_o,	  3,   8, 255, 0xff, 0x02, 0x00, 0x00}, // load.o d pc  
    {0x1d93, &op_load_o,	  3,   9, 255, 0xff, 0x02, 0x00, 0x00}, // load.o d ra  
    {0x1da3, &op_load_o,	  3,  10, 255, 0xff, 0x02, 0x00, 0x00}, // load.o d sb  
    {0x1db3, &op_load_o,	  3,  11, 255, 0xff, 0x02, 0x00, 0x00}, // load.o d sp  
    {0x1dc3, &op_load_o,	  3,  12, 255, 0xff, 0x02, 0x00, 0x00}, // load.o d db  
    {0x1dd3, &op_load_o,	  3,  13, 255, 0xff, 0x02, 0x00, 0x00}, // load.o d cb  
    {0x1de3, &op_load_o,	  3,  14, 255, 0xff, 0x02, 0x00, 0x00}, // load.o d pi  
    {0x1df3, &op_load_o,	  3,  15, 255, 0xff, 0x02, 0x00, 0x00}, // load.o d status  
    {0x1d04, &op_load_o,	  4,   0, 255, 0xff, 0x02, 0x00, 0x00}, // load.o e a  
    {0x1d14, &op_load_o,	  4,   1, 255, 0xff, 0x02, 0x00, 0x00}, // load.o e b  
    {0x1d24, &op_load_o,	  4,   2, 255, 0xff, 0x02, 0x00, 0x00}, // load.o e c  
    {0x1d34, &op_load_o,	  4,   3, 255, 0xff, 0x02, 0x00, 0x00}, // load.o e d  
    {0x1d44, &op_load_o,	  4,   4, 255, 0xff, 0x02, 0x00, 0x00}, // load.o e e  
    {0x1d54, &op_load_o,	  4,   5, 255, 0xff, 0x02, 0x00, 0x00}, // load.o e f  
    {0x1d64, &op_load_o,	  4,   6, 255, 0xff, 0x02, 0x00, 0x00}, // load.o e g  
    {0x1d74, &op_load_o,	  4,   7, 255, 0xff, 0x02, 0x00, 0x00}, // load.o e h  
    {0x1d84, &op_load_o,	  4,   8, 255, 0xff, 0x02, 0x00, 0x00}, // load.o e pc  
    {0x1d94, &op_load_o,	  4,   9, 255, 0xff, 0x02, 0x00, 0x00}, // load.o e ra  
    {0x1da4, &op_load_o,	  4,  10, 255, 0xff, 0x02, 0x00, 0x00}, // load.o e sb  
    {0x1db4, &op_load_o,	  4,  11, 255, 0xff, 0x02, 0x00, 0x00}, // load.o e sp  
    {0x1dc4, &op_load_o,	  4,  12, 255, 0xff, 0x02, 0x00, 0x00}, // load.o e db  
    {0x1dd4, &op_load_o,	  4,  13, 255, 0xff, 0x02, 0x00, 0x00}, // load.o e cb  
    {0x1de4, &op_load_o,	  4,  14, 255, 0xff, 0x02, 0x00, 0x00}, // load.o e pi  
    {0x1df4, &op_load_o,	  4,  15, 255, 0xff, 0x02, 0x00, 0x00}, // load.o e status  
    {0x1d05, &op_load_o,	  5,   0, 255, 0xff, 0x02, 0x00, 0x00}, // load.o f a  
    {0x1d15, &op_load_o,	  5,   1, 255, 0xff, 0x02, 0x00, 0x00}, // load.o f b  
    {0x1d25, &op_load_o,	  5,   2, 255, 0xff, 0x02, 0x00, 0x00}, // load.o f c  
    {0x1d35, &op_load_o,	  5,   3, 255, 0xff, 0x02, 0x00, 0x00}, // load.o f d  
    {0x1d45, &op_load_o,	  5,   4, 255, 0xff, 0x02, 0x00, 0x00}, // load.o f e  
    {0x1d55, &op_load_o,	  5,   5, 255, 0xff, 0x02, 0x00, 0x00}, // load.o f f  
    {0x1d65, &op_load_o,	  5,   6, 255, 0xff, 0x02, 0x00, 0x00}, // load.o f g  
    {0x1d75, &op_load_o,	  5,   7, 255, 0xff, 0x02, 0x00, 0x00}, // load.o f h  
    {0x1d85, &op_load_o,	  5,   8, 255, 0xff, 0x02, 0x00, 0x00}, // load.o f pc  
    {0x1d95, &op_load_o,	  5,   9, 255, 0xff, 0x02, 0x00, 0x00}, // load.o f ra  
    {0x1da5, &op_load_o,	  5,  10, 255, 0xff, 0x02, 0x00, 0x00}, // load.o f sb  
    {0x1db5, &op_load_o,	  5,  11, 255, 0xff, 0x02, 0x00, 0x00}, // load.o f sp  
    {0x1dc5, &op_load_o,	  5,  12, 255, 0xff, 0x02, 0x00, 0x00}, // load.o f db  
    {0x1dd5, &op_load_o,	  5,  13, 255, 0xff, 0x02, 0x00, 0x00}, // load.o f cb  
    {0x1de5, &op_load_o,	  5,  14, 255, 0xff, 0x02, 0x00, 0x00}, // load.o f pi  
    {0x1df5, &op_load_o,	  5,  15, 255, 0xff, 0x02, 0x00, 0x00}, // load.o f status  
    {0x1d06, &op_load_o,	  6,   0, 255, 0xff, 0x02, 0x00, 0x00}, // load.o g a  
    {0x1d16, &op_load_o,	  6,   1, 255, 0xff, 0x02, 0x00, 0x00}, // load.o g b  
    {0x1d26, &op_load_o,	  6,   2, 255, 0xff, 0x02, 0x00, 0x00}, // load.o g c  
    {0x1d36, &op_load_o,	  6,   3, 255, 0xff, 0x02, 0x00, 0x00}, // load.o g d  
    {0x1d46, &op_load_o,	  6,   4, 255, 0xff, 0x02, 0x00, 0x00}, // load.o g e  
    {0x1d56, &op_load_o,	  6,   5, 255, 0xff, 0x02, 0x00, 0x00}, // load.o g f  
    {0x1d66, &op_load_o,	  6,   6, 255, 0xff, 0x02, 0x00, 0x00}, // load.o g g  
    {0x1d76, &op_load_o,	  6,   7, 255, 0xff, 0x02, 0x00, 0x00}, // load.o g h  
    {0x1d86, &op_load_o,	  6,   8, 255, 0xff, 0x02, 0x00, 0x00}, // load.o g pc  
    {0x1d96, &op_load_o,	  6,   9, 255, 0xff, 0x02, 0x00, 0x00}, // load.o g ra  
    {0x1da6, &op_load_o,	  6,  10, 255, 0xff, 0x02, 0x00, 0x00}, // load.o g sb  
    {0x1db6, &op_load_o,	  6,  11, 255, 0xff, 0x02, 0x00, 0x00}, // load.o g sp  
    {0x1dc6, &op_load_o,	  6,  12, 255, 0xff, 0x02, 0x00, 0x00}, // load.o g db  
    {0x1dd6, &op_load_o,	  6,  13, 255, 0xff, 0x02, 0x00, 0x00}, // load.o g cb  
    {0x1de6, &op_load_o,	  6,  14, 255, 0xff, 0x02, 0x00, 0x00}, // load.o g pi  
    {0x1df6, &op_load_o,	  6,  15, 255, 0xff, 0x02, 0x00, 0x00}, // load.o g status  
    {0x1d07, &op_load_o,	  7,   0, 255, 0xff, 0x02, 0x00, 0x00}, // load.o h a  
    {0x1d17, &op_load_o,	  7,   1, 255, 0xff, 0x02, 0x00, 0x00}, // load.o h b  
    {0x1d27, &op_load_o,	  7,   2, 255, 0xff, 0x02, 0x00, 0x00}, // load.o h c  
    {0x1d37, &op_load_o,	  7,   3, 255, 0xff, 0x02, 0x00, 0x00}, // load.o h d  
    {0x1d47, &op_load_o,	  7,   4, 255, 0xff, 0x02, 0x00, 0x00}, // load.o h e  
    {0x1d57, &op_load_o,	  7,   5, 255, 0xff, 0x02, 0x00, 0x00}, // load.o h f  
    {0x1d67, &op_load_o,	  7,   6, 255, 0xff, 0x02, 0x00, 0x00}, // load.o h g  
    {0x1d77, &op_load_o,	  7,   7, 255, 0xff, 0x02, 0x00, 0x00}, // load.o h h  
    {0x1d87, &op_load_o,	  7,   8, 255, 0xff, 0x02, 0x00, 0x00}, // load.o h pc  
    {0x1d97, &op_load_o,	  7,   9, 255, 0xff, 0x02, 0x00, 0x00}, // load.o h ra  
    {0x1da7, &op_load_o,	  7,  10, 255, 0xff, 0x02, 0x00, 0x00}, // load.o h sb  
    {0x1db7, &op_load_o,	  7,  11, 255, 0xff, 0x02, 0x00, 0x00}, // load.o h sp  
    {0x1dc7, &op_load_o,	  7,  12, 255, 0xff, 0x02, 0x00, 0x00}, // load.o h db  
    {0x1dd7, &op_load_o,	  7,  13, 255, 0xff, 0x02, 0x00, 0x00}, // load.o h cb  
    {0x1de7, &op_load_o,	  7,  14, 255, 0xff, 0x02, 0x00, 0x00}, // load.o h pi  
    {0x1df7, &op_load_o,	  7,  15, 255, 0xff, 0x02, 0x00, 0x00}, // load.o h status  
	{0x1e00, &op_store_o,	  0,   0, 255, 0xff, 0x02, 0x00, 0x00}, // store.o a a  
    {0x1e10, &op_store_o,	  0,   1, 255, 0xff, 0x02, 0x00, 0x00}, // store.o a b  
    {0x1e20, &op_store_o,	  0,   2, 255, 0xff, 0x02, 0x00, 0x00}, // store.o a c  
    {0x1e30, &op_store_o,	  0,   3, 255, 0xff, 0x02, 0x00, 0x00}, // store.o a d  
    {0x1e40, &op_store_o,	  0,   4, 255, 0xff, 0x02, 0x00, 0x00}, // store.o a e  
    {0x1e50, &op_store_o,	  0,   5, 255, 0xff, 0x02, 0x00, 0x00}, // store.o a f  
    {0x1e60, &op_store_o,	  0,   6, 255, 0xff, 0x02, 0x00, 0x00}, // store.o a g  
    {0x1e70, &op_store_o,	  0,   7, 255, 0xff, 0x02, 0x00, 0x00}, // store.o a h  
    {0x1e80, &op_store_o,	  0,   8, 255, 0xff, 0x02, 0x00, 0x00}, // store.o a pc  
    {0x1e90, &op_store_o,	  0,   9, 255, 0xff, 0x02, 0x00, 0x00}, // store.o a ra  
    {0x1ea0, &op_store_o,	  0,  10, 255, 0xff, 0x02, 0x00, 0x00}, // store.o a sb  
    {0x1eb0, &op_store_o,	  0,  11, 255, 0xff, 0x02, 0x00, 0x00}, // store.o a sp  
    {0x1ec0, &op_store_o,	  0,  12, 255, 0xff, 0x02, 0x00, 0x00}, // store.o a db  
    {0x1ed0, &op_store_o,	  0,  13, 255, 0xff, 0x02, 0x00, 0x00}, // store.o a cb  
    {0x1ee0, &op_store_o,	  0,  14, 255, 0xff, 0x02, 0x00, 0x00}, // store.o a pi  
    {0x1ef0, &op_store_o,	  0,  15, 255, 0xff, 0x02, 0x00, 0x00}, // store.o a status  
    {0x1e01, &op_store_o,	  1,   0, 255, 0xff, 0x02, 0x00, 0x00}, // store.o b a  
    {0x1e11, &op_store_o,	  1,   1, 255, 0xff, 0x02, 0x00, 0x00}, // store.o b b  
    {0x1e21, &op_store_o,	  1,   2, 255, 0xff, 0x02, 0x00, 0x00}, // store.o b c  
    {0x1e31, &op_store_o,	  1,   3, 255, 0xff, 0x02, 0x00, 0x00}, // store.o b d  
    {0x1e41, &op_store_o,	  1,   4, 255, 0xff, 0x02, 0x00, 0x00}, // store.o b e  
    {0x1e51, &op_store_o,	  1,   5, 255, 0xff, 0x02, 0x00, 0x00}, // store.o b f  
    {0x1e61, &op_store_o,	  1,   6, 255, 0xff, 0x02, 0x00, 0x00}, // store.o b g  
    {0x1e71, &op_store_o,	  1,   7, 255, 0xff, 0x02, 0x00, 0x00}, // store.o b h  
    {0x1e81, &op_store_o,	  1,   8, 255, 0xff, 0x02, 0x00, 0x00}, // store.o b pc  
    {0x1e91, &op_store_o,	  1,   9, 255, 0xff, 0x02, 0x00, 0x00}, // store.o b ra  
    {0x1ea1, &op_store_o,	  1,  10, 255, 0xff, 0x02, 0x00, 0x00}, // store.o b sb  
    {0x1eb1, &op_store_o,	  1,  11, 255, 0xff, 0x02, 0x00, 0x00}, // store.o b sp  
    {0x1ec1, &op_store_o,	  1,  12, 255, 0xff, 0x02, 0x00, 0x00}, // store.o b db  
    {0x1ed1, &op_store_o,	  1,  13, 255, 0xff, 0x02, 0x00, 0x00}, // store.o b cb  
    {0x1ee1, &op_store_o,	  1,  14, 255, 0xff, 0x02, 0x00, 0x00}, // store.o b pi  
    {0x1ef1, &op_store_o,	  1,  15, 255, 0xff, 0x02, 0x00, 0x00}, // store.o b status  
    {0x1e02, &op_store_o,	  2,   0, 255, 0xff, 0x02, 0x00, 0x00}, // store.o c a  
    {0x1e12, &op_store_o,	  2,   1, 255, 0xff, 0x02, 0x00, 0x00}, // store.o c b  
    {0x1e22, &op_store_o,	  2,   2, 255, 0xff, 0x02, 0x00, 0x00}, // store.o c c  
    {0x1e32, &op_store_o,	  2,   3, 255, 0xff, 0x02, 0x00, 0x00}, // store.o c d  
    {0x1e42, &op_store_o,	  2,   4, 255, 0xff, 0x02, 0x00, 0x00}, // store.o c e  
    {0x1e52, &op_store_o,	  2,   5, 255, 0xff, 0x02, 0x00, 0x00}, // store.o c f  
    {0x1e62, &op_store_o,	  2,   6, 255, 0xff, 0x02, 0x00, 0x00}, // store.o c g  
    {0x1e72, &op_store_o,	  2,   7, 255, 0xff, 0x02, 0x00, 0x00}, // store.o c h  
    {0x1e82, &op_store_o,	  2,   8, 255, 0xff, 0x02, 0x00, 0x00}, // store.o c pc  
    {0x1e92, &op_store_o,	  2,   9, 255, 0xff, 0x02, 0x00, 0x00}, // store.o c ra  
    {0x1ea2, &op_store_o,	  2,  10, 255, 0xff, 0x02, 0x00, 0x00}, // store.o c sb  
    {0x1eb2, &op_store_o,	  2,  11, 255, 0xff, 0x02, 0x00, 0x00}, // store.o c sp  
    {0x1ec2, &op_store_o,	  2,  12, 255, 0xff, 0x02, 0x00, 0x00}, // store.o c db  
    {0x1ed2, &op_store_o,	  2,  13, 255, 0xff, 0x02, 0x00, 0x00}, // store.o c cb  
    {0x1ee2, &op_store_o,	  2,  14, 255, 0xff, 0x02, 0x00, 0x00}, // store.o c pi  
    {0x1ef2, &op_store_o,	  2,  15, 255, 0xff, 0x02, 0x00, 0x00}, // store.o c status  
    {0x1e03, &op_store_o,	  3,   0, 255, 0xff, 0x02, 0x00, 0x00}, // store.o d a  
    {0x1e13, &op_store_o,	  3,   1, 255, 0xff, 0x02, 0x00, 0x00}, // store.o d b  
    {0x1e23, &op_store_o,	  3,   2, 255, 0xff, 0x02, 0x00, 0x00}, // store.o d c  
    {0x1e33, &op_store_o,	  3,   3, 255, 0xff, 0x02, 0x00, 0x00}, // store.o d d  
    {0x1e43, &op_store_o,	  3,   4, 255, 0xff, 0x02, 0x00, 0x00}, // store.o d e  
    {0x1e53, &op_store_o,	  3,   5, 255, 0xff, 0x02, 0x00, 0x00}, // store.o d f  
    {0x1e63, &op_store_o,	  3,   6, 255, 0xff, 0x02, 0x00, 0x00}, // store.o d g  
    {0x1e73, &op_store_o,	  3,   7, 255, 0xff, 0x02, 0x00, 0x00}, // store.o d h  
    {0x1e83, &op_store_o,	  3,   8, 255, 0xff, 0x02, 0x00, 0x00}, // store.o d pc  
    {0x1e93, &op_store_o,	  3,   9, 255, 0xff, 0x02, 0x00, 0x00}, // store.o d ra  
    {0x1ea3, &op_store_o,	  3,  10, 255, 0xff, 0x02, 0x00, 0x00}, // store.o d sb  
    {0x1eb3, &op_store_o,	  3,  11, 255, 0xff, 0x02, 0x00, 0x00}, // store.o d sp  
    {0x1ec3, &op_store_o,	  3,  12, 255, 0xff, 0x02, 0x00, 0x00}, // store.o d db  
    {0x1ed3, &op_store_o,	  3,  13, 255, 0xff, 0x02, 0x00, 0x00}, // store.o d cb  
    {0x1ee3, &op_store_o,	  3,  14, 255, 0xff, 0x02, 0x00, 0x00}, // store.o d pi  
    {0x1ef3, &op_store_o,	  3,  15, 255, 0xff, 0x02, 0x00, 0x00}, // store.o d status  
    {0x1e04, &op_store_o,	  4,   0, 255, 0xff, 0x02, 0x00, 0x00}, // store.o e a  
    {0x1e14, &op_store_o,	  4,   1, 255, 0xff, 0x02, 0x00, 0x00}, // store.o e b  
    {0x1e24, &op_store_o,	  4,   2, 255, 0xff, 0x02, 0x00, 0x00}, // store.o e c  
    {0x1e34, &op_store_o,	  4,   3, 255, 0xff, 0x02, 0x00, 0x00}, // store.o e d  
    {0x1e44, &op_store_o,	  4,   4, 255, 0xff, 0x02, 0x00, 0x00}, // store.o e e  
    {0x1e54, &op_store_o,	  4,   5, 255, 0xff, 0x02, 0x00, 0x00}, // store.o e f  
    {0x1e64, &op_store_o,	  4,   6, 255, 0xff, 0x02, 0x00, 0x00}, // store.o e g  
    {0x1e74, &op_store_o,	  4,   7, 255, 0xff, 0x02, 0x00, 0x00}, // store.o e h  
    {0x1e84, &op_store_o,	  4,   8, 255, 0xff, 0x02, 0x00, 0x00}, // store.o e pc  
    {0x1e94, &op_store_o,	  4,   9, 255, 0xff, 0x02, 0x00, 0x00}, // store.o e ra  
    {0x1ea4, &op_store_o,	  4,  10, 255, 0xff, 0x02, 0x00, 0x00}, // store.o e sb  
    {0x1eb4, &op_store_o,	  4,  11, 255, 0xff, 0x02, 0x00, 0x00}, // store.o e sp  
    {0x1ec4, &op_store_o,	  4,  12, 255, 0xff, 0x02, 0x00, 0x00}, // store.o e db  
    {0x1ed4, &op_store_o,	  4,  13, 255, 0xff, 0x02, 0x00, 0x00}, // store.o e cb  
    {0x1ee4, &op_store_o,	  4,  14, 255, 0xff, 0x02, 0x00, 0x00}, // store.o e pi  
    {0x1ef4, &op_store_o,	  4,  15, 255, 0xff, 0x02, 0x00, 0x00}, // store.o e status  
    {0x1e05, &op_store_o,	  5,   0, 255, 0xff, 0x02, 0x00, 0x00}, // store.o f a  
    {0x1e15, &op_store_o,	  5,   1, 255, 0xff, 0x02, 0x00, 0x00}, // store.o f b  
    {0x1e25, &op_store_o,	  5,   2, 255, 0xff, 0x02, 0x00, 0x00}, // store.o f c  
    {0x1e35, &op_store_o,	  5,   3, 255, 0xff, 0x02, 0x00, 0x00}, // store.o f d  
    {0x1e45, &op_store_o,	  5,   4, 255, 0xff, 0x02, 0x00, 0x00}, // store.o f e  
    {0x1e55, &op_store_o,	  5,   5, 255, 0xff, 0x02, 0x00, 0x00}, // store.o f f  
    {0x1e65, &op_store_o,	  5,   6, 255, 0xff, 0x02, 0x00, 0x00}, // store.o f g  
    {0x1e75, &op_store_o,	  5,   7, 255, 0xff, 0x02, 0x00, 0x00}, // store.o f h  
    {0x1e85, &op_store_o,	  5,   8, 255, 0xff, 0x02, 0x00, 0x00}, // store.o f pc  
    {0x1e95, &op_store_o,	  5,   9, 255, 0xff, 0x02, 0x00, 0x00}, // store.o f ra  
    {0x1ea5, &op_store_o,	  5,  10, 255, 0xff, 0x02, 0x00, 0x00}, // store.o f sb  
    {0x1eb5, &op_store_o,	  5,  11, 255, 0xff, 0x02, 0x00, 0x00}, // store.o f sp  
    {0x1ec5, &op_store_o,	  5,  12, 255, 0xff, 0x02, 0x00, 0x00}, // store.o f db  
    {0x1ed5, &op_store_o,	  5,  13, 255, 0xff, 0x02, 0x00, 0x00}, // store.o f cb  
    {0x1ee5, &op_store_o,	  5,  14, 255, 0xff, 0x02, 0x00, 0x00}, // store.o f pi  
    {0x1ef5, &op_store_o,	  5,  15, 255, 0xff, 0x02, 0x00, 0x00}, // store.o f status  
    {0x1e06, &op_store_o,	  6,   0, 255, 0xff, 0x02, 0x00, 0x00}, // store.o g a  
    {0x1e16, &op_store_o,	  6,   1, 255, 0xff, 0x02, 0x00, 0x00}, // store.o g b  
    {0x1e26, &op_store_o,	  6,   2, 255, 0xff, 0x02, 0x00, 0x00}, // store.o g c  
    {0x1e36, &op_store_o,	  6,   3, 255, 0xff, 0x02, 0x00, 0x00}, // store.o g d  
    {0x1e46, &op_store_o,	  6,   4, 255, 0xff, 0x02, 0x00, 0x00}, // store.o g e  
    {0x1e56, &op_store_o,	  6,   5, 255, 0xff, 0x02, 0x00, 0x00}, // store.o g f  
    {0x1e66, &op_store_o,	  6,   6, 255, 0xff, 0x02, 0x00, 0x00}, // store.o g g  
    {0x1e76, &op_store_o,	  6,   7, 255, 0xff, 0x02, 0x00, 0x00}, // store.o g h  
    {0x1e86, &op_store_o,	  6,   8, 255, 0xff, 0x02, 0x00, 0x00}, // store.o g pc  
    {0x1e96, &op_store_o,	  6,   9, 255, 0xff, 0x02, 0x00, 0x00}, // store.o g ra  
    {0x1ea6, &op_store_o,	  6,  10, 255, 0xff, 0x02, 0x00, 0x00}, // store.o g sb  
    {0x1eb6, &op_store_o,	  6,  11, 255, 0xff, 0x02, 0x00, 0x00}, // store.o g sp  
    {0x1ec6, &op_store_o,	  6,  12, 255, 0xff, 0x02, 0x00, 0x00}, // store.o g db  
    {0x1ed6, &op_store_o,	  6,  13, 255, 0xff, 0x02, 0x00, 0x00}, // store.o g cb  
    {0x1ee6, &op_store_o,	  6,  14, 255, 0xff, 0x02, 0x00, 0x00}, // store.o g pi  
    {0x1ef6, &op_store_o,	  6,  15, 255, 0xff, 0x02, 0x00, 0x00}, // store.o g status  
    {0x1e07, &op_store_o,	  7,   0, 255, 0xff, 0x02, 0x00, 0x00}, // store.o h a  
    {0x1e17, &op_store_o,	  7,   1, 255, 0xff, 0x02, 0x00, 0x00}, // store.o h b  
    {0x1e27, &op_store_o,	  7,   2, 255, 0xff, 0x02, 0x00, 0x00}, // store.o h c  
    {0x1e37, &op_store_o,	  7,   3, 255, 0xff, 0x02, 0x00, 0x00}, // store.o h d  
    {0x1e47, &op_store_o,	  7,   4, 255, 0xff, 0x02, 0x00, 0x00}, // store.o h e  
    {0x1e57, &op_store_o,	  7,   5, 255, 0xff, 0x02, 0x00, 0x00}, // store.o h f  
    {0x1e67, &op_store_o,	  7,   6, 255, 0xff, 0x02, 0x00, 0x00}, // store.o h g  
    {0x1e77, &op_store_o,	  7,   7, 255, 0xff, 0x02, 0x00, 0x00}, // store.o h h  
    {0x1e87, &op_store_o,	  7,   8, 255, 0xff, 0x02, 0x00, 0x00}, // store.o h pc  
    {0x1e97, &op_store_o,	  7,   9, 255, 0xff, 0x02, 0x00, 0x00}, // store.o h ra  
    {0x1ea7, &op_store_o,	  7,  10, 255, 0xff, 0x02, 0x00, 0x00}, // store.o h sb  
    {0x1eb7, &op_store_o,	  7,  11, 255, 0xff, 0x02, 0x00, 0x00}, // store.o h sp  
    {0x1ec7, &op_store_o,	  7,  12, 255, 0xff, 0x02, 0x00, 0x00}, // store.o h db  
    {0x1ed7, &op_store_o,	  7,  13, 255, 0xff, 0x02, 0x00, 0x00}, // store.o h cb  
    {0x1ee7, &op_store_o,	  7,  14, 255, 0xff, 0x02, 0x00, 0x00}, // store.o h pi  
    {0x1ef7, &op_store_o,	  7,  15, 255, 0xff, 0x02, 0x00, 0x00}, // store.o h status  
    {0x1c00, &op_load_co,	  0,   0, 255, 0xff, 0x02, 0x00, 0x00}, // load.co a a  
    {0x1c10, &op_load_co,	  0,   1, 255, 0xff, 0x02, 0x00, 0x00}, // load.co a b  
    {0x1c20, &op_load_co,	  0,   2, 255, 0xff, 0x02, 0x00, 0x00}, // load.co a c  
    {0x1c30, &op_load_co,	  0,   3, 255, 0xff, 0x02, 0x00, 0x00}, // load.co a d  
    {0x1c40, &op_load_co,	  0,   4, 255, 0xff, 0x02, 0x00, 0x00}, // load.co a e  
    {0x1c50, &op_load_co,	  0,   5, 255, 0xff, 0x02, 0x00, 0x00}, // load.co a f  
    {0x1c60, &op_load_co,	  0,   6, 255, 0xff, 0x02, 0x00, 0x00}, // load.co a g  
    {0x1c70, &op_load_co,	  0,   7, 255, 0xff, 0x02, 0x00, 0x00}, // load.co a h  
    {0x1c80, &op_load_co,	  0,   8, 255, 0xff, 0x02, 0x00, 0x00}, // load.co a pc  
    {0x1c90, &op_load_co,	  0,   9, 255, 0xff, 0x02, 0x00, 0x00}, // load.co a ra  
    {0x1ca0, &op_load_co,	  0,  10, 255, 0xff, 0x02, 0x00, 0x00}, // load.co a sb  
    {0x1cb0, &op_load_co,	  0,  11, 255, 0xff, 0x02, 0x00, 0x00}, // load.co a sp  
    {0x1cc0, &op_load_co,	  0,  12, 255, 0xff, 0x02, 0x00, 0x00}, // load.co a db  
    {0x1cd0, &op_load_co,	  0,  13, 255, 0xff, 0x02, 0x00, 0x00}, // load.co a cb  
    {0x1ce0, &op_load_co,	  0,  14, 255, 0xff, 0x02, 0x00, 0x00}, // load.co a pi  
    {0x1cf0, &op_load_co,	  0,  15, 255, 0xff, 0x02, 0x00, 0x00}, // load.co a status  
    {0x1c01, &op_load_co,	  1,   0, 255, 0xff, 0x02, 0x00, 0x00}, // load.co b a  
    {0x1c11, &op_load_co,	  1,   1, 255, 0xff, 0x02, 0x00, 0x00}, // load.co b b  
    {0x1c21, &op_load_co,	  1,   2, 255, 0xff, 0x02, 0x00, 0x00}, // load.co b c  
    {0x1c31, &op_load_co,	  1,   3, 255, 0xff, 0x02, 0x00, 0x00}, // load.co b d  
    {0x1c41, &op_load_co,	  1,   4, 255, 0xff, 0x02, 0x00, 0x00}, // load.co b e  
    {0x1c51, &op_load_co,	  1,   5, 255, 0xff, 0x02, 0x00, 0x00}, // load.co b f  
    {0x1c61, &op_load_co,	  1,   6, 255, 0xff, 0x02, 0x00, 0x00}, // load.co b g  
    {0x1c71, &op_load_co,	  1,   7, 255, 0xff, 0x02, 0x00, 0x00}, // load.co b h  
    {0x1c81, &op_load_co,	  1,   8, 255, 0xff, 0x02, 0x00, 0x00}, // load.co b pc  
    {0x1c91, &op_load_co,	  1,   9, 255, 0xff, 0x02, 0x00, 0x00}, // load.co b ra  
    {0x1ca1, &op_load_co,	  1,  10, 255, 0xff, 0x02, 0x00, 0x00}, // load.co b sb  
    {0x1cb1, &op_load_co,	  1,  11, 255, 0xff, 0x02, 0x00, 0x00}, // load.co b sp  
    {0x1cc1, &op_load_co,	  1,  12, 255, 0xff, 0x02, 0x00, 0x00}, // load.co b db  
    {0x1cd1, &op_load_co,	  1,  13, 255, 0xff, 0x02, 0x00, 0x00}, // load.co b cb  
    {0x1ce1, &op_load_co,	  1,  14, 255, 0xff, 0x02, 0x00, 0x00}, // load.co b pi  
    {0x1cf1, &op_load_co,	  1,  15, 255, 0xff, 0x02, 0x00, 0x00}, // load.co b status  
    {0x1c02, &op_load_co,	  2,   0, 255, 0xff, 0x02, 0x00, 0x00}, // load.co c a  
    {0x1c12, &op_load_co,	  2,   1, 255, 0xff, 0x02, 0x00, 0x00}, // load.co c b  
    {0x1c22, &op_load_co,	  2,   2, 255, 0xff, 0x02, 0x00, 0x00}, // load.co c c  
    {0x1c32, &op_load_co,	  2,   3, 255, 0xff, 0x02, 0x00, 0x00}, // load.co c d  
    {0x1c42, &op_load_co,	  2,   4, 255, 0xff, 0x02, 0x00, 0x00}, // load.co c e  
    {0x1c52, &op_load_co,	  2,   5, 255, 0xff, 0x02, 0x00, 0x00}, // load.co c f  
    {0x1c62, &op_load_co,	  2,   6, 255, 0xff, 0x02, 0x00, 0x00}, // load.co c g  
    {0x1c72, &op_load_co,	  2,   7, 255, 0xff, 0x02, 0x00, 0x00}, // load.co c h  
    {0x1c82, &op_load_co,	  2,   8, 255, 0xff, 0x02, 0x00, 0x00}, // load.co c pc  
    {0x1c92, &op_load_co,	  2,   9, 255, 0xff, 0x02, 0x00, 0x00}, // load.co c ra  
    {0x1ca2, &op_load_co,	  2,  10, 255, 0xff, 0x02, 0x00, 0x00}, // load.co c sb  
    {0x1cb2, &op_load_co,	  2,  11, 255, 0xff, 0x02, 0x00, 0x00}, // load.co c sp  
    {0x1cc2, &op_load_co,	  2,  12, 255, 0xff, 0x02, 0x00, 0x00}, // load.co c db  
    {0x1cd2, &op_load_co,	  2,  13, 255, 0xff, 0x02, 0x00, 0x00}, // load.co c cb  
    {0x1ce2, &op_load_co,	  2,  14, 255, 0xff, 0x02, 0x00, 0x00}, // load.co c pi  
    {0x1cf2, &op_load_co,	  2,  15, 255, 0xff, 0x02, 0x00, 0x00}, // load.co c status  
    {0x1c03, &op_load_co,	  3,   0, 255, 0xff, 0x02, 0x00, 0x00}, // load.co d a  
    {0x1c13, &op_load_co,	  3,   1, 255, 0xff, 0x02, 0x00, 0x00}, // load.co d b  
    {0x1c23, &op_load_co,	  3,   2, 255, 0xff, 0x02, 0x00, 0x00}, // load.co d c  
    {0x1c33, &op_load_co,	  3,   3, 255, 0xff, 0x02, 0x00, 0x00}, // load.co d d  
    {0x1c43, &op_load_co,	  3,   4, 255, 0xff, 0x02, 0x00, 0x00}, // load.co d e  
    {0x1c53, &op_load_co,	  3,   5, 255, 0xff, 0x02, 0x00, 0x00}, // load.co d f  
    {0x1c63, &op_load_co,	  3,   6, 255, 0xff, 0x02, 0x00, 0x00}, // load.co d g  
    {0x1c73, &op_load_co,	  3,   7, 255, 0xff, 0x02, 0x00, 0x00}, // load.co d h  
    {0x1c83, &op_load_co,	  3,   8, 255, 0xff, 0x02, 0x00, 0x00}, // load.co d pc  
    {0x1c93, &op_load_co,	  3,   9, 255, 0xff, 0x02, 0x00, 0x00}, // load.co d ra  
    {0x1ca3, &op_load_co,	  3,  10, 255, 0xff, 0x02, 0x00, 0x00}, // load.co d sb  
    {0x1cb3, &op_load_co,	  3,  11, 255, 0xff, 0x02, 0x00, 0x00}, // load.co d sp  
    {0x1cc3, &op_load_co,	  3,  12, 255, 0xff, 0x02, 0x00, 0x00}, // load.co d db  
    {0x1cd3, &op_load_co,	  3,  13, 255, 0xff, 0x02, 0x00, 0x00}, // load.co d cb  
    {0x1ce3, &op_load_co,	  3,  14, 255, 0xff, 0x02, 0x00, 0x00}, // load.co d pi  
    {0x1cf3, &op_load_co,	  3,  15, 255, 0xff, 0x02, 0x00, 0x00}, // load.co d status  
    {0x1c04, &op_load_co,	  4,   0, 255, 0xff, 0x02, 0x00, 0x00}, // load.co e a  
    {0x1c14, &op_load_co,	  4,   1, 255, 0xff, 0x02, 0x00, 0x00}, // load.co e b  
    {0x1c24, &op_load_co,	  4,   2, 255, 0xff, 0x02, 0x00, 0x00}, // load.co e c  
    {0x1c34, &op_load_co,	  4,   3, 255, 0xff, 0x02, 0x00, 0x00}, // load.co e d  
    {0x1c44, &op_load_co,	  4,   4, 255, 0xff, 0x02, 0x00, 0x00}, // load.co e e  
    {0x1c54, &op_load_co,	  4,   5, 255, 0xff, 0x02, 0x00, 0x00}, // load.co e f  
    {0x1c64, &op_load_co,	  4,   6, 255, 0xff, 0x02, 0x00, 0x00}, // load.co e g  
    {0x1c74, &op_load_co,	  4,   7, 255, 0xff, 0x02, 0x00, 0x00}, // load.co e h  
    {0x1c84, &op_load_co,	  4,   8, 255, 0xff, 0x02, 0x00, 0x00}, // load.co e pc  
    {0x1c94, &op_load_co,	  4,   9, 255, 0xff, 0x02, 0x00, 0x00}, // load.co e ra  
    {0x1ca4, &op_load_co,	  4,  10, 255, 0xff, 0x02, 0x00, 0x00}, // load.co e sb  
    {0x1cb4, &op_load_co,	  4,  11, 255, 0xff, 0x02, 0x00, 0x00}, // load.co e sp  
    {0x1cc4, &op_load_co,	  4,  12, 255, 0xff, 0x02, 0x00, 0x00}, // load.co e db  
    {0x1cd4, &op_load_co,	  4,  13, 255, 0xff, 0x02, 0x00, 0x00}, // load.co e cb  
    {0x1ce4, &op_load_co,	  4,  14, 255, 0xff, 0x02, 0x00, 0x00}, // load.co e pi  
    {0x1cf4, &op_load_co,	  4,  15, 255, 0xff, 0x02, 0x00, 0x00}, // load.co e status  
    {0x1c05, &op_load_co,	  5,   0, 255, 0xff, 0x02, 0x00, 0x00}, // load.co f a  
    {0x1c15, &op_load_co,	  5,   1, 255, 0xff, 0x02, 0x00, 0x00}, // load.co f b  
    {0x1c25, &op_load_co,	  5,   2, 255, 0xff, 0x02, 0x00, 0x00}, // load.co f c  
    {0x1c35, &op_load_co,	  5,   3, 255, 0xff, 0x02, 0x00, 0x00}, // load.co f d  
    {0x1c45, &op_load_co,	  5,   4, 255, 0xff, 0x02, 0x00, 0x00}, // load.co f e  
    {0x1c55, &op_load_co,	  5,   5, 255, 0xff, 0x02, 0x00, 0x00}, // load.co f f  
    {0x1c65, &op_load_co,	  5,   6, 255, 0xff, 0x02, 0x00, 0x00}, // load.co f g  
    {0x1c75, &op_load_co,	  5,   7, 255, 0xff, 0x02, 0x00, 0x00}, // load.co f h  
    {0x1c85, &op_load_co,	  5,   8, 255, 0xff, 0x02, 0x00, 0x00}, // load.co f pc  
    {0x1c95, &op_load_co,	  5,   9, 255, 0xff, 0x02, 0x00, 0x00}, // load.co f ra  
    {0x1ca5, &op_load_co,	  5,  10, 255, 0xff, 0x02, 0x00, 0x00}, // load.co f sb  
    {0x1cb5, &op_load_co,	  5,  11, 255, 0xff, 0x02, 0x00, 0x00}, // load.co f sp  
    {0x1cc5, &op_load_co,	  5,  12, 255, 0xff, 0x02, 0x00, 0x00}, // load.co f db  
    {0x1cd5, &op_load_co,	  5,  13, 255, 0xff, 0x02, 0x00, 0x00}, // load.co f cb  
    {0x1ce5, &op_load_co,	  5,  14, 255, 0xff, 0x02, 0x00, 0x00}, // load.co f pi  
    {0x1cf5, &op_load_co,	  5,  15, 255, 0xff, 0x02, 0x00, 0x00}, // load.co f status  
    {0x1c06, &op_load_co,	  6,   0, 255, 0xff, 0x02, 0x00, 0x00}, // load.co g a  
    {0x1c16, &op_load_co,	  6,   1, 255, 0xff, 0x02, 0x00, 0x00}, // load.co g b  
    {0x1c26, &op_load_co,	  6,   2, 255, 0xff, 0x02, 0x00, 0x00}, // load.co g c  
    {0x1c36, &op_load_co,	  6,   3, 255, 0xff, 0x02, 0x00, 0x00}, // load.co g d  
    {0x1c46, &op_load_co,	  6,   4, 255, 0xff, 0x02, 0x00, 0x00}, // load.co g e  
    {0x1c56, &op_load_co,	  6,   5, 255, 0xff, 0x02, 0x00, 0x00}, // load.co g f  
    {0x1c66, &op_load_co,	  6,   6, 255, 0xff, 0x02, 0x00, 0x00}, // load.co g g  
    {0x1c76, &op_load_co,	  6,   7, 255, 0xff, 0x02, 0x00, 0x00}, // load.co g h  
    {0x1c86, &op_load_co,	  6,   8, 255, 0xff, 0x02, 0x00, 0x00}, // load.co g pc  
    {0x1c96, &op_load_co,	  6,   9, 255, 0xff, 0x02, 0x00, 0x00}, // load.co g ra  
    {0x1ca6, &op_load_co,	  6,  10, 255, 0xff, 0x02, 0x00, 0x00}, // load.co g sb  
    {0x1cb6, &op_load_co,	  6,  11, 255, 0xff, 0x02, 0x00, 0x00}, // load.co g sp  
    {0x1cc6, &op_load_co,	  6,  12, 255, 0xff, 0x02, 0x00, 0x00}, // load.co g db  
    {0x1cd6, &op_load_co,	  6,  13, 255, 0xff, 0x02, 0x00, 0x00}, // load.co g cb  
    {0x1ce6, &op_load_co,	  6,  14, 255, 0xff, 0x02, 0x00, 0x00}, // load.co g pi  
    {0x1cf6, &op_load_co,	  6,  15, 255, 0xff, 0x02, 0x00, 0x00}, // load.co g status  
    {0x1c07, &op_load_co,	  7,   0, 255, 0xff, 0x02, 0x00, 0x00}, // load.co h a  
    {0x1c17, &op_load_co,	  7,   1, 255, 0xff, 0x02, 0x00, 0x00}, // load.co h b  
    {0x1c27, &op_load_co,	  7,   2, 255, 0xff, 0x02, 0x00, 0x00}, // load.co h c  
    {0x1c37, &op_load_co,	  7,   3, 255, 0xff, 0x02, 0x00, 0x00}, // load.co h d  
    {0x1c47, &op_load_co,	  7,   4, 255, 0xff, 0x02, 0x00, 0x00}, // load.co h e  
    {0x1c57, &op_load_co,	  7,   5, 255, 0xff, 0x02, 0x00, 0x00}, // load.co h f  
    {0x1c67, &op_load_co,	  7,   6, 255, 0xff, 0x02, 0x00, 0x00}, // load.co h g  
    {0x1c77, &op_load_co,	  7,   7, 255, 0xff, 0x02, 0x00, 0x00}, // load.co h h  
    {0x1c87, &op_load_co,	  7,   8, 255, 0xff, 0x02, 0x00, 0x00}, // load.co h pc  
    {0x1c97, &op_load_co,	  7,   9, 255, 0xff, 0x02, 0x00, 0x00}, // load.co h ra  
    {0x1ca7, &op_load_co,	  7,  10, 255, 0xff, 0x02, 0x00, 0x00}, // load.co h sb  
    {0x1cb7, &op_load_co,	  7,  11, 255, 0xff, 0x02, 0x00, 0x00}, // load.co h sp  
    {0x1cc7, &op_load_co,	  7,  12, 255, 0xff, 0x02, 0x00, 0x00}, // load.co h db  
    {0x1cd7, &op_load_co,	  7,  13, 255, 0xff, 0x02, 0x00, 0x00}, // load.co h cb  
    {0x1ce7, &op_load_co,	  7,  14, 255, 0xff, 0x02, 0x00, 0x00}, // load.co h pi  
    {0x1cf7, &op_load_co,	  7,  15, 255, 0xff, 0x02, 0x00, 0x00}, // load.co h status  
    {0x1f00, &op_store_co,	  0,   0, 255, 0xff, 0x02, 0x00, 0x00}, // store.co a a  
    {0x1f10, &op_store_co,	  0,   1, 255, 0xff, 0x02, 0x00, 0x00}, // store.co a b  
    {0x1f20, &op_store_co,	  0,   2, 255, 0xff, 0x02, 0x00, 0x00}, // store.co a c  
    {0x1f30, &op_store_co,	  0,   3, 255, 0xff, 0x02, 0x00, 0x00}, // store.co a d  
    {0x1f40, &op_store_co,	  0,   4, 255, 0xff, 0x02, 0x00, 0x00}, // store.co a e  
    {0x1f50, &op_store_co,	  0,   5, 255, 0xff, 0x02, 0x00, 0x00}, // store.co a f  
    {0x1f60, &op_store_co,	  0,   6, 255, 0xff, 0x02, 0x00, 0x00}, // store.co a g  
    {0x1f70, &op_store_co,	  0,   7, 255, 0xff, 0x02, 0x00, 0x00}, // store.co a h  
    {0x1f80, &op_store_co,	  0,   8, 255, 0xff, 0x02, 0x00, 0x00}, // store.co a pc  
    {0x1f90, &op_store_co,	  0,   9, 255, 0xff, 0x02, 0x00, 0x00}, // store.co a ra  
    {0x1fa0, &op_store_co,	  0,  10, 255, 0xff, 0x02, 0x00, 0x00}, // store.co a sb  
    {0x1fb0, &op_store_co,	  0,  11, 255, 0xff, 0x02, 0x00, 0x00}, // store.co a sp  
    {0x1fc0, &op_store_co,	  0,  12, 255, 0xff, 0x02, 0x00, 0x00}, // store.co a db  
    {0x1fd0, &op_store_co,	  0,  13, 255, 0xff, 0x02, 0x00, 0x00}, // store.co a cb  
    {0x1fe0, &op_store_co,	  0,  14, 255, 0xff, 0x02, 0x00, 0x00}, // store.co a pi  
    {0x1ff0, &op_store_co,	  0,  15, 255, 0xff, 0x02, 0x00, 0x00}, // store.co a status  
    {0x1f01, &op_store_co,	  1,   0, 255, 0xff, 0x02, 0x00, 0x00}, // store.co b a  
    {0x1f11, &op_store_co,	  1,   1, 255, 0xff, 0x02, 0x00, 0x00}, // store.co b b  
    {0x1f21, &op_store_co,	  1,   2, 255, 0xff, 0x02, 0x00, 0x00}, // store.co b c  
    {0x1f31, &op_store_co,	  1,   3, 255, 0xff, 0x02, 0x00, 0x00}, // store.co b d  
    {0x1f41, &op_store_co,	  1,   4, 255, 0xff, 0x02, 0x00, 0x00}, // store.co b e  
    {0x1f51, &op_store_co,	  1,   5, 255, 0xff, 0x02, 0x00, 0x00}, // store.co b f  
    {0x1f61, &op_store_co,	  1,   6, 255, 0xff, 0x02, 0x00, 0x00}, // store.co b g  
    {0x1f71, &op_store_co,	  1,   7, 255, 0xff, 0x02, 0x00, 0x00}, // store.co b h  
    {0x1f81, &op_store_co,	  1,   8, 255, 0xff, 0x02, 0x00, 0x00}, // store.co b pc  
    {0x1f91, &op_store_co,	  1,   9, 255, 0xff, 0x02, 0x00, 0x00}, // store.co b ra  
    {0x1fa1, &op_store_co,	  1,  10, 255, 0xff, 0x02, 0x00, 0x00}, // store.co b sb  
    {0x1fb1, &op_store_co,	  1,  11, 255, 0xff, 0x02, 0x00, 0x00}, // store.co b sp  
    {0x1fc1, &op_store_co,	  1,  12, 255, 0xff, 0x02, 0x00, 0x00}, // store.co b db  
    {0x1fd1, &op_store_co,	  1,  13, 255, 0xff, 0x02, 0x00, 0x00}, // store.co b cb  
    {0x1fe1, &op_store_co,	  1,  14, 255, 0xff, 0x02, 0x00, 0x00}, // store.co b pi  
    {0x1ff1, &op_store_co,	  1,  15, 255, 0xff, 0x02, 0x00, 0x00}, // store.co b status  
    {0x1f02, &op_store_co,	  2,   0, 255, 0xff, 0x02, 0x00, 0x00}, // store.co c a  
    {0x1f12, &op_store_co,	  2,   1, 255, 0xff, 0x02, 0x00, 0x00}, // store.co c b  
    {0x1f22, &op_store_co,	  2,   2, 255, 0xff, 0x02, 0x00, 0x00}, // store.co c c  
    {0x1f32, &op_store_co,	  2,   3, 255, 0xff, 0x02, 0x00, 0x00}, // store.co c d  
    {0x1f42, &op_store_co,	  2,   4, 255, 0xff, 0x02, 0x00, 0x00}, // store.co c e  
    {0x1f52, &op_store_co,	  2,   5, 255, 0xff, 0x02, 0x00, 0x00}, // store.co c f  
    {0x1f62, &op_store_co,	  2,   6, 255, 0xff, 0x02, 0x00, 0x00}, // store.co c g  
    {0x1f72, &op_store_co,	  2,   7, 255, 0xff, 0x02, 0x00, 0x00}, // store.co c h  
    {0x1f82, &op_store_co,	  2,   8, 255, 0xff, 0x02, 0x00, 0x00}, // store.co c pc  
    {0x1f92, &op_store_co,	  2,   9, 255, 0xff, 0x02, 0x00, 0x00}, // store.co c ra  
    {0x1fa2, &op_store_co,	  2,  10, 255, 0xff, 0x02, 0x00, 0x00}, // store.co c sb  
    {0x1fb2, &op_store_co,	  2,  11, 255, 0xff, 0x02, 0x00, 0x00}, // store.co c sp  
    {0x1fc2, &op_store_co,	  2,  12, 255, 0xff, 0x02, 0x00, 0x00}, // store.co c db  
    {0x1fd2, &op_store_co,	  2,  13, 255, 0xff, 0x02, 0x00, 0x00}, // store.co c cb  
    {0x1fe2, &op_store_co,	  2,  14, 255, 0xff, 0x02, 0x00, 0x00}, // store.co c pi  
    {0x1ff2, &op_store_co,	  2,  15, 255, 0xff, 0x02, 0x00, 0x00}, // store.co c status  
    {0x1f03, &op_store_co,	  3,   0, 255, 0xff, 0x02, 0x00, 0x00}, // store.co d a  
    {0x1f13, &op_store_co,	  3,   1, 255, 0xff, 0x02, 0x00, 0x00}, // store.co d b  
    {0x1f23, &op_store_co,	  3,   2, 255, 0xff, 0x02, 0x00, 0x00}, // store.co d c  
    {0x1f33, &op_store_co,	  3,   3, 255, 0xff, 0x02, 0x00, 0x00}, // store.co d d  
    {0x1f43, &op_store_co,	  3,   4, 255, 0xff, 0x02, 0x00, 0x00}, // store.co d e  
    {0x1f53, &op_store_co,	  3,   5, 255, 0xff, 0x02, 0x00, 0x00}, // store.co d f  
    {0x1f63, &op_store_co,	  3,   6, 255, 0xff, 0x02, 0x00, 0x00}, // store.co d g  
    {0x1f73, &op_store_co,	  3,   7, 255, 0xff, 0x02, 0x00, 0x00}, // store.co d h  
    {0x1f83, &op_store_co,	  3,   8, 255, 0xff, 0x02, 0x00, 0x00}, // store.co d pc  
    {0x1f93, &op_store_co,	  3,   9, 255, 0xff, 0x02, 0x00, 0x00}, // store.co d ra  
    {0x1fa3, &op_store_co,	  3,  10, 255, 0xff, 0x02, 0x00, 0x00}, // store.co d sb  
    {0x1fb3, &op_store_co,	  3,  11, 255, 0xff, 0x02, 0x00, 0x00}, // store.co d sp  
    {0x1fc3, &op_store_co,	  3,  12, 255, 0xff, 0x02, 0x00, 0x00}, // store.co d db  
    {0x1fd3, &op_store_co,	  3,  13, 255, 0xff, 0x02, 0x00, 0x00}, // store.co d cb  
    {0x1fe3, &op_store_co,	  3,  14, 255, 0xff, 0x02, 0x00, 0x00}, // store.co d pi  
    {0x1ff3, &op_store_co,	  3,  15, 255, 0xff, 0x02, 0x00, 0x00}, // store.co d status  
    {0x1f04, &op_store_co,	  4,   0, 255, 0xff, 0x02, 0x00, 0x00}, // store.co e a  
    {0x1f14, &op_store_co,	  4,   1, 255, 0xff, 0x02, 0x00, 0x00}, // store.co e b  
    {0x1f24, &op_store_co,	  4,   2, 255, 0xff, 0x02, 0x00, 0x00}, // store.co e c  
    {0x1f34, &op_store_co,	  4,   3, 255, 0xff, 0x02, 0x00, 0x00}, // store.co e d  
    {0x1f44, &op_store_co,	  4,   4, 255, 0xff, 0x02, 0x00, 0x00}, // store.co e e  
    {0x1f54, &op_store_co,	  4,   5, 255, 0xff, 0x02, 0x00, 0x00}, // store.co e f  
    {0x1f64, &op_store_co,	  4,   6, 255, 0xff, 0x02, 0x00, 0x00}, // store.co e g  
    {0x1f74, &op_store_co,	  4,   7, 255, 0xff, 0x02, 0x00, 0x00}, // store.co e h  
    {0x1f84, &op_store_co,	  4,   8, 255, 0xff, 0x02, 0x00, 0x00}, // store.co e pc  
    {0x1f94, &op_store_co,	  4,   9, 255, 0xff, 0x02, 0x00, 0x00}, // store.co e ra  
    {0x1fa4, &op_store_co,	  4,  10, 255, 0xff, 0x02, 0x00, 0x00}, // store.co e sb  
    {0x1fb4, &op_store_co,	  4,  11, 255, 0xff, 0x02, 0x00, 0x00}, // store.co e sp  
    {0x1fc4, &op_store_co,	  4,  12, 255, 0xff, 0x02, 0x00, 0x00}, // store.co e db  
    {0x1fd4, &op_store_co,	  4,  13, 255, 0xff, 0x02, 0x00, 0x00}, // store.co e cb  
    {0x1fe4, &op_store_co,	  4,  14, 255, 0xff, 0x02, 0x00, 0x00}, // store.co e pi  
    {0x1ff4, &op_store_co,	  4,  15, 255, 0xff, 0x02, 0x00, 0x00}, // store.co e status  
    {0x1f05, &op_store_co,	  5,   0, 255, 0xff, 0x02, 0x00, 0x00}, // store.co f a  
    {0x1f15, &op_store_co,	  5,   1, 255, 0xff, 0x02, 0x00, 0x00}, // store.co f b  
    {0x1f25, &op_store_co,	  5,   2, 255, 0xff, 0x02, 0x00, 0x00}, // store.co f c  
    {0x1f35, &op_store_co,	  5,   3, 255, 0xff, 0x02, 0x00, 0x00}, // store.co f d  
    {0x1f45, &op_store_co,	  5,   4, 255, 0xff, 0x02, 0x00, 0x00}, // store.co f e  
    {0x1f55, &op_store_co,	  5,   5, 255, 0xff, 0x02, 0x00, 0x00}, // store.co f f  
    {0x1f65, &op_store_co,	  5,   6, 255, 0xff, 0x02, 0x00, 0x00}, // store.co f g  
    {0x1f75, &op_store_co,	  5,   7, 255, 0xff, 0x02, 0x00, 0x00}, // store.co f h  
    {0x1f85, &op_store_co,	  5,   8, 255, 0xff, 0x02, 0x00, 0x00}, // store.co f pc  
    {0x1f95, &op_store_co,	  5,   9, 255, 0xff, 0x02, 0x00, 0x00}, // store.co f ra  
    {0x1fa5, &op_store_co,	  5,  10, 255, 0xff, 0x02, 0x00, 0x00}, // store.co f sb  
    {0x1fb5, &op_store_co,	  5,  11, 255, 0xff, 0x02, 0x00, 0x00}, // store.co f sp  
    {0x1fc5, &op_store_co,	  5,  12, 255, 0xff, 0x02, 0x00, 0x00}, // store.co f db  
    {0x1fd5, &op_store_co,	  5,  13, 255, 0xff, 0x02, 0x00, 0x00}, // store.co f cb  
    {0x1fe5, &op_store_co,	  5,  14, 255, 0xff, 0x02, 0x00, 0x00}, // store.co f pi  
    {0x1ff5, &op_store_co,	  5,  15, 255, 0xff, 0x02, 0x00, 0x00}, // store.co f status  
    {0x1f06, &op_store_co,	  6,   0, 255, 0xff, 0x02, 0x00, 0x00}, // store.co g a  
    {0x1f16, &op_store_co,	  6,   1, 255, 0xff, 0x02, 0x00, 0x00}, // store.co g b  
    {0x1f26, &op_store_co,	  6,   2, 255, 0xff, 0x02, 0x00, 0x00}, // store.co g c  
    {0x1f36, &op_store_co,	  6,   3, 255, 0xff, 0x02, 0x00, 0x00}, // store.co g d  
    {0x1f46, &op_store_co,	  6,   4, 255, 0xff, 0x02, 0x00, 0x00}, // store.co g e  
    {0x1f56, &op_store_co,	  6,   5, 255, 0xff, 0x02, 0x00, 0x00}, // store.co g f  
    {0x1f66, &op_store_co,	  6,   6, 255, 0xff, 0x02, 0x00, 0x00}, // store.co g g  
    {0x1f76, &op_store_co,	  6,   7, 255, 0xff, 0x02, 0x00, 0x00}, // store.co g h  
    {0x1f86, &op_store_co,	  6,   8, 255, 0xff, 0x02, 0x00, 0x00}, // store.co g pc  
    {0x1f96, &op_store_co,	  6,   9, 255, 0xff, 0x02, 0x00, 0x00}, // store.co g ra  
    {0x1fa6, &op_store_co,	  6,  10, 255, 0xff, 0x02, 0x00, 0x00}, // store.co g sb  
    {0x1fb6, &op_store_co,	  6,  11, 255, 0xff, 0x02, 0x00, 0x00}, // store.co g sp  
    {0x1fc6, &op_store_co,	  6,  12, 255, 0xff, 0x02, 0x00, 0x00}, // store.co g db  
    {0x1fd6, &op_store_co,	  6,  13, 255, 0xff, 0x02, 0x00, 0x00}, // store.co g cb  
    {0x1fe6, &op_store_co,	  6,  14, 255, 0xff, 0x02, 0x00, 0x00}, // store.co g pi  
    {0x1ff6, &op_store_co,	  6,  15, 255, 0xff, 0x02, 0x00, 0x00}, // store.co g status  
    {0x1f07, &op_store_co,	  7,   0, 255, 0xff, 0x02, 0x00, 0x00}, // store.co h a  
    {0x1f17, &op_store_co,	  7,   1, 255, 0xff, 0x02, 0x00, 0x00}, // store.co h b  
    {0x1f27, &op_store_co,	  7,   2, 255, 0xff, 0x02, 0x00, 0x00}, // store.co h c  
    {0x1f37, &op_store_co,	  7,   3, 255, 0xff, 0x02, 0x00, 0x00}, // store.co h d  
    {0x1f47, &op_store_co,	  7,   4, 255, 0xff, 0x02, 0x00, 0x00}, // store.co h e  
    {0x1f57, &op_store_co,	  7,   5, 255, 0xff, 0x02, 0x00, 0x00}, // store.co h f  
    {0x1f67, &op_store_co,	  7,   6, 255, 0xff, 0x02, 0x00, 0x00}, // store.co h g  
    {0x1f77, &op_store_co,	  7,   7, 255, 0xff, 0x02, 0x00, 0x00}, // store.co h h  
    {0x1f87, &op_store_co,	  7,   8, 255, 0xff, 0x02, 0x00, 0x00}, // store.co h pc  
    {0x1f97, &op_store_co,	  7,   9, 255, 0xff, 0x02, 0x00, 0x00}, // store.co h ra  
    {0x1fa7, &op_store_co,	  7,  10, 255, 0xff, 0x02, 0x00, 0x00}, // store.co h sb  
    {0x1fb7, &op_store_co,	  7,  11, 255, 0xff, 0x02, 0x00, 0x00}, // store.co h sp  
    {0x1fc7, &op_store_co,	  7,  12, 255, 0xff, 0x02, 0x00, 0x00}, // store.co h db  
    {0x1fd7, &op_store_co,	  7,  13, 255, 0xff, 0x02, 0x00, 0x00}, // store.co h cb  
    {0x1fe7, &op_store_co,	  7,  14, 255, 0xff, 0x02, 0x00, 0x00}, // store.co h pi  
    {0x1ff7, &op_store_co,	  7,  15, 255, 0xff, 0x02, 0x00, 0x00}, // store.co h status  
    {0x1b00, &op_setcdr,	  0,   0, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr a a  
    {0x1b10, &op_setcdr,	  0,   1, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr a b  
    {0x1b20, &op_setcdr,	  0,   2, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr a c  
    {0x1b30, &op_setcdr,	  0,   3, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr a d  
    {0x1b40, &op_setcdr,	  0,   4, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr a e  
    {0x1b50, &op_setcdr,	  0,   5, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr a f  
    {0x1b60, &op_setcdr,	  0,   6, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr a g  
    {0x1b70, &op_setcdr,	  0,   7, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr a h  
    {0x1b80, &op_setcdr,	  0,   8, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr a pc  
    {0x1b90, &op_setcdr,	  0,   9, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr a ra  
    {0x1ba0, &op_setcdr,	  0,  10, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr a sb  
    {0x1bb0, &op_setcdr,	  0,  11, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr a sp  
    {0x1bc0, &op_setcdr,	  0,  12, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr a db  
    {0x1bd0, &op_setcdr,	  0,  13, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr a cb  
    {0x1be0, &op_setcdr,	  0,  14, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr a pi  
    {0x1bf0, &op_setcdr,	  0,  15, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr a status  
    {0x1b01, &op_setcdr,	  1,   0, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr b a  
    {0x1b11, &op_setcdr,	  1,   1, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr b b  
    {0x1b21, &op_setcdr,	  1,   2, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr b c  
    {0x1b31, &op_setcdr,	  1,   3, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr b d  
    {0x1b41, &op_setcdr,	  1,   4, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr b e  
    {0x1b51, &op_setcdr,	  1,   5, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr b f  
    {0x1b61, &op_setcdr,	  1,   6, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr b g  
    {0x1b71, &op_setcdr,	  1,   7, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr b h  
    {0x1b81, &op_setcdr,	  1,   8, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr b pc  
    {0x1b91, &op_setcdr,	  1,   9, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr b ra  
    {0x1ba1, &op_setcdr,	  1,  10, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr b sb  
    {0x1bb1, &op_setcdr,	  1,  11, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr b sp  
    {0x1bc1, &op_setcdr,	  1,  12, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr b db  
    {0x1bd1, &op_setcdr,	  1,  13, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr b cb  
    {0x1be1, &op_setcdr,	  1,  14, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr b pi  
    {0x1bf1, &op_setcdr,	  1,  15, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr b status  
    {0x1b02, &op_setcdr,	  2,   0, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr c a  
    {0x1b12, &op_setcdr,	  2,   1, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr c b  
    {0x1b22, &op_setcdr,	  2,   2, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr c c  
    {0x1b32, &op_setcdr,	  2,   3, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr c d  
    {0x1b42, &op_setcdr,	  2,   4, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr c e  
    {0x1b52, &op_setcdr,	  2,   5, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr c f  
    {0x1b62, &op_setcdr,	  2,   6, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr c g  
    {0x1b72, &op_setcdr,	  2,   7, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr c h  
    {0x1b82, &op_setcdr,	  2,   8, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr c pc  
    {0x1b92, &op_setcdr,	  2,   9, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr c ra  
    {0x1ba2, &op_setcdr,	  2,  10, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr c sb  
    {0x1bb2, &op_setcdr,	  2,  11, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr c sp  
    {0x1bc2, &op_setcdr,	  2,  12, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr c db  
    {0x1bd2, &op_setcdr,	  2,  13, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr c cb  
    {0x1be2, &op_setcdr,	  2,  14, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr c pi  
    {0x1bf2, &op_setcdr,	  2,  15, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr c status  
    {0x1b03, &op_setcdr,	  3,   0, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr d a  
    {0x1b13, &op_setcdr,	  3,   1, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr d b  
    {0x1b23, &op_setcdr,	  3,   2, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr d c  
    {0x1b33, &op_setcdr,	  3,   3, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr d d  
    {0x1b43, &op_setcdr,	  3,   4, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr d e  
    {0x1b53, &op_setcdr,	  3,   5, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr d f  
    {0x1b63, &op_setcdr,	  3,   6, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr d g  
    {0x1b73, &op_setcdr,	  3,   7, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr d h  
    {0x1b83, &op_setcdr,	  3,   8, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr d pc  
    {0x1b93, &op_setcdr,	  3,   9, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr d ra  
    {0x1ba3, &op_setcdr,	  3,  10, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr d sb  
    {0x1bb3, &op_setcdr,	  3,  11, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr d sp  
    {0x1bc3, &op_setcdr,	  3,  12, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr d db  
    {0x1bd3, &op_setcdr,	  3,  13, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr d cb  
    {0x1be3, &op_setcdr,	  3,  14, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr d pi  
    {0x1bf3, &op_setcdr,	  3,  15, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr d status  
    {0x1b04, &op_setcdr,	  4,   0, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr e a  
    {0x1b14, &op_setcdr,	  4,   1, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr e b  
    {0x1b24, &op_setcdr,	  4,   2, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr e c  
    {0x1b34, &op_setcdr,	  4,   3, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr e d  
    {0x1b44, &op_setcdr,	  4,   4, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr e e  
    {0x1b54, &op_setcdr,	  4,   5, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr e f  
    {0x1b64, &op_setcdr,	  4,   6, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr e g  
    {0x1b74, &op_setcdr,	  4,   7, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr e h  
    {0x1b84, &op_setcdr,	  4,   8, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr e pc  
    {0x1b94, &op_setcdr,	  4,   9, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr e ra  
    {0x1ba4, &op_setcdr,	  4,  10, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr e sb  
    {0x1bb4, &op_setcdr,	  4,  11, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr e sp  
    {0x1bc4, &op_setcdr,	  4,  12, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr e db  
    {0x1bd4, &op_setcdr,	  4,  13, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr e cb  
    {0x1be4, &op_setcdr,	  4,  14, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr e pi  
    {0x1bf4, &op_setcdr,	  4,  15, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr e status  
    {0x1b05, &op_setcdr,	  5,   0, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr f a  
    {0x1b15, &op_setcdr,	  5,   1, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr f b  
    {0x1b25, &op_setcdr,	  5,   2, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr f c  
    {0x1b35, &op_setcdr,	  5,   3, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr f d  
    {0x1b45, &op_setcdr,	  5,   4, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr f e  
    {0x1b55, &op_setcdr,	  5,   5, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr f f  
    {0x1b65, &op_setcdr,	  5,   6, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr f g  
    {0x1b75, &op_setcdr,	  5,   7, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr f h  
    {0x1b85, &op_setcdr,	  5,   8, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr f pc  
    {0x1b95, &op_setcdr,	  5,   9, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr f ra  
    {0x1ba5, &op_setcdr,	  5,  10, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr f sb  
    {0x1bb5, &op_setcdr,	  5,  11, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr f sp  
    {0x1bc5, &op_setcdr,	  5,  12, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr f db  
    {0x1bd5, &op_setcdr,	  5,  13, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr f cb  
    {0x1be5, &op_setcdr,	  5,  14, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr f pi  
    {0x1bf5, &op_setcdr,	  5,  15, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr f status  
    {0x1b06, &op_setcdr,	  6,   0, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr g a  
    {0x1b16, &op_setcdr,	  6,   1, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr g b  
    {0x1b26, &op_setcdr,	  6,   2, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr g c  
    {0x1b36, &op_setcdr,	  6,   3, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr g d  
    {0x1b46, &op_setcdr,	  6,   4, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr g e  
    {0x1b56, &op_setcdr,	  6,   5, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr g f  
    {0x1b66, &op_setcdr,	  6,   6, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr g g  
    {0x1b76, &op_setcdr,	  6,   7, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr g h  
    {0x1b86, &op_setcdr,	  6,   8, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr g pc  
    {0x1b96, &op_setcdr,	  6,   9, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr g ra  
    {0x1ba6, &op_setcdr,	  6,  10, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr g sb  
    {0x1bb6, &op_setcdr,	  6,  11, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr g sp  
    {0x1bc6, &op_setcdr,	  6,  12, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr g db  
    {0x1bd6, &op_setcdr,	  6,  13, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr g cb  
    {0x1be6, &op_setcdr,	  6,  14, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr g pi  
    {0x1bf6, &op_setcdr,	  6,  15, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr g status  
    {0x1b07, &op_setcdr,	  7,   0, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr h a  
    {0x1b17, &op_setcdr,	  7,   1, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr h b  
    {0x1b27, &op_setcdr,	  7,   2, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr h c  
    {0x1b37, &op_setcdr,	  7,   3, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr h d  
    {0x1b47, &op_setcdr,	  7,   4, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr h e  
    {0x1b57, &op_setcdr,	  7,   5, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr h f  
    {0x1b67, &op_setcdr,	  7,   6, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr h g  
    {0x1b77, &op_setcdr,	  7,   7, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr h h  
    {0x1b87, &op_setcdr,	  7,   8, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr h pc  
    {0x1b97, &op_setcdr,	  7,   9, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr h ra  
    {0x1ba7, &op_setcdr,	  7,  10, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr h sb  
    {0x1bb7, &op_setcdr,	  7,  11, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr h sp  
    {0x1bc7, &op_setcdr,	  7,  12, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr h db  
    {0x1bd7, &op_setcdr,	  7,  13, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr h cb  
    {0x1be7, &op_setcdr,	  7,  14, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr h pi  
    {0x1bf7, &op_setcdr,	  7,  15, 255, 0xff, 0x02, 0x00, 0x04}, // setcdr h status  
    {0x2000, &op_disable,	  0, 255, 255, 0x00, 0x02, 0x00, 0x00}, // disable a 0  
    {0x2010, &op_disable,	  0, 255, 255, 0x01, 0x02, 0x00, 0x00}, // disable a 1  
    {0x2020, &op_disable,	  0, 255, 255, 0x02, 0x02, 0x00, 0x00}, // disable a 2  
    {0x2030, &op_disable,	  0, 255, 255, 0x03, 0x02, 0x00, 0x00}, // disable a 3  
    {0x2040, &op_disable,	  0, 255, 255, 0x04, 0x02, 0x00, 0x00}, // disable a 4  
    {0x2050, &op_disable,	  0, 255, 255, 0x05, 0x02, 0x00, 0x00}, // disable a 5  
    {0x2060, &op_disable,	  0, 255, 255, 0x06, 0x02, 0x00, 0x00}, // disable a 6  
    {0x2070, &op_disable,	  0, 255, 255, 0x07, 0x02, 0x00, 0x00}, // disable a 7  
    {0x2080, &op_disable,	  0, 255, 255, 0x08, 0x02, 0x00, 0x00}, // disable a 8  
    {0x2090, &op_disable,	  0, 255, 255, 0x09, 0x02, 0x00, 0x00}, // disable a 9  
    {0x20a0, &op_disable,	  0, 255, 255, 0x0a, 0x02, 0x00, 0x00}, // disable a 10  
    {0x20b0, &op_disable,	  0, 255, 255, 0x0b, 0x02, 0x00, 0x00}, // disable a 11  
    {0x20c0, &op_disable,	  0, 255, 255, 0x0c, 0x02, 0x00, 0x00}, // disable a 12  
    {0x20d0, &op_disable,	  0, 255, 255, 0x0d, 0x02, 0x00, 0x00}, // disable a 13  
    {0x20e0, &op_disable,	  0, 255, 255, 0x0e, 0x02, 0x00, 0x00}, // disable a 14  
    {0x20f0, &op_disable,	  0, 255, 255, 0x0f, 0x02, 0x00, 0x00}, // disable a 15  
    {0x2100, &op_disable,	  0, 255, 255, 0x10, 0x02, 0x00, 0x00}, // disable a 16  
    {0x2110, &op_disable,	  0, 255, 255, 0x11, 0x02, 0x00, 0x00}, // disable a 17  
    {0x2120, &op_disable,	  0, 255, 255, 0x12, 0x02, 0x00, 0x00}, // disable a 18  
    {0x2130, &op_disable,	  0, 255, 255, 0x13, 0x02, 0x00, 0x00}, // disable a 19  
    {0x2140, &op_disable,	  0, 255, 255, 0x14, 0x02, 0x00, 0x00}, // disable a 20  
    {0x2150, &op_disable,	  0, 255, 255, 0x15, 0x02, 0x00, 0x00}, // disable a 21  
    {0x2160, &op_disable,	  0, 255, 255, 0x16, 0x02, 0x00, 0x00}, // disable a 22  
    {0x2170, &op_disable,	  0, 255, 255, 0x17, 0x02, 0x00, 0x00}, // disable a 23  
    {0x2180, &op_disable,	  0, 255, 255, 0x18, 0x02, 0x00, 0x00}, // disable a 24  
    {0x2190, &op_disable,	  0, 255, 255, 0x19, 0x02, 0x00, 0x00}, // disable a 25  
    {0x21a0, &op_disable,	  0, 255, 255, 0x1a, 0x02, 0x00, 0x00}, // disable a 26  
    {0x21b0, &op_disable,	  0, 255, 255, 0x1b, 0x02, 0x00, 0x00}, // disable a 27  
    {0x21c0, &op_disable,	  0, 255, 255, 0x1c, 0x02, 0x00, 0x00}, // disable a 28  
    {0x21d0, &op_disable,	  0, 255, 255, 0x1d, 0x02, 0x00, 0x00}, // disable a 29  
    {0x21e0, &op_disable,	  0, 255, 255, 0x1e, 0x02, 0x00, 0x00}, // disable a 30  
    {0x21f0, &op_disable,	  0, 255, 255, 0x1f, 0x02, 0x00, 0x00}, // disable a 31  
    {0x2200, &op_disable,	  0, 255, 255, 0x20, 0x02, 0x00, 0x00}, // disable a 32  
    {0x2210, &op_disable,	  0, 255, 255, 0x21, 0x02, 0x00, 0x00}, // disable a 33  
    {0x2220, &op_disable,	  0, 255, 255, 0x22, 0x02, 0x00, 0x00}, // disable a 34  
    {0x2230, &op_disable,	  0, 255, 255, 0x23, 0x02, 0x00, 0x00}, // disable a 35  
    {0x2240, &op_disable,	  0, 255, 255, 0x24, 0x02, 0x00, 0x00}, // disable a 36  
    {0x2250, &op_disable,	  0, 255, 255, 0x25, 0x02, 0x00, 0x00}, // disable a 37  
    {0x2260, &op_disable,	  0, 255, 255, 0x26, 0x02, 0x00, 0x00}, // disable a 38  
    {0x2270, &op_disable,	  0, 255, 255, 0x27, 0x02, 0x00, 0x00}, // disable a 39  
    {0x2280, &op_disable,	  0, 255, 255, 0x28, 0x02, 0x00, 0x00}, // disable a 40  
    {0x2290, &op_disable,	  0, 255, 255, 0x29, 0x02, 0x00, 0x00}, // disable a 41  
    {0x22a0, &op_disable,	  0, 255, 255, 0x2a, 0x02, 0x00, 0x00}, // disable a 42  
    {0x22b0, &op_disable,	  0, 255, 255, 0x2b, 0x02, 0x00, 0x00}, // disable a 43  
    {0x22c0, &op_disable,	  0, 255, 255, 0x2c, 0x02, 0x00, 0x00}, // disable a 44  
    {0x22d0, &op_disable,	  0, 255, 255, 0x2d, 0x02, 0x00, 0x00}, // disable a 45  
    {0x22e0, &op_disable,	  0, 255, 255, 0x2e, 0x02, 0x00, 0x00}, // disable a 46  
    {0x22f0, &op_disable,	  0, 255, 255, 0x2f, 0x02, 0x00, 0x00}, // disable a 47  
    {0x2300, &op_disable,	  0, 255, 255, 0x30, 0x02, 0x00, 0x00}, // disable a 48  
    {0x2310, &op_disable,	  0, 255, 255, 0x31, 0x02, 0x00, 0x00}, // disable a 49  
    {0x2320, &op_disable,	  0, 255, 255, 0x32, 0x02, 0x00, 0x00}, // disable a 50  
    {0x2330, &op_disable,	  0, 255, 255, 0x33, 0x02, 0x00, 0x00}, // disable a 51  
    {0x2340, &op_disable,	  0, 255, 255, 0x34, 0x02, 0x00, 0x00}, // disable a 52  
    {0x2350, &op_disable,	  0, 255, 255, 0x35, 0x02, 0x00, 0x00}, // disable a 53  
    {0x2360, &op_disable,	  0, 255, 255, 0x36, 0x02, 0x00, 0x00}, // disable a 54  
    {0x2370, &op_disable,	  0, 255, 255, 0x37, 0x02, 0x00, 0x00}, // disable a 55  
    {0x2380, &op_disable,	  0, 255, 255, 0x38, 0x02, 0x00, 0x00}, // disable a 56  
    {0x2390, &op_disable,	  0, 255, 255, 0x39, 0x02, 0x00, 0x00}, // disable a 57  
    {0x23a0, &op_disable,	  0, 255, 255, 0x3a, 0x02, 0x00, 0x00}, // disable a 58  
    {0x23b0, &op_disable,	  0, 255, 255, 0x3b, 0x02, 0x00, 0x00}, // disable a 59  
    {0x23c0, &op_disable,	  0, 255, 255, 0x3c, 0x02, 0x00, 0x00}, // disable a 60  
    {0x23d0, &op_disable,	  0, 255, 255, 0x3d, 0x02, 0x00, 0x00}, // disable a 61  
    {0x23e0, &op_disable,	  0, 255, 255, 0x3e, 0x02, 0x00, 0x00}, // disable a 62  
    {0x23f0, &op_disable,	  0, 255, 255, 0x3f, 0x02, 0x00, 0x00}, // disable a 63  
    {0x2001, &op_disable,	  1, 255, 255, 0x00, 0x02, 0x00, 0x00}, // disable b 0  
    {0x2011, &op_disable,	  1, 255, 255, 0x01, 0x02, 0x00, 0x00}, // disable b 1  
    {0x2021, &op_disable,	  1, 255, 255, 0x02, 0x02, 0x00, 0x00}, // disable b 2  
    {0x2031, &op_disable,	  1, 255, 255, 0x03, 0x02, 0x00, 0x00}, // disable b 3  
    {0x2041, &op_disable,	  1, 255, 255, 0x04, 0x02, 0x00, 0x00}, // disable b 4  
    {0x2051, &op_disable,	  1, 255, 255, 0x05, 0x02, 0x00, 0x00}, // disable b 5  
    {0x2061, &op_disable,	  1, 255, 255, 0x06, 0x02, 0x00, 0x00}, // disable b 6  
    {0x2071, &op_disable,	  1, 255, 255, 0x07, 0x02, 0x00, 0x00}, // disable b 7  
    {0x2081, &op_disable,	  1, 255, 255, 0x08, 0x02, 0x00, 0x00}, // disable b 8  
    {0x2091, &op_disable,	  1, 255, 255, 0x09, 0x02, 0x00, 0x00}, // disable b 9  
    {0x20a1, &op_disable,	  1, 255, 255, 0x0a, 0x02, 0x00, 0x00}, // disable b 10  
    {0x20b1, &op_disable,	  1, 255, 255, 0x0b, 0x02, 0x00, 0x00}, // disable b 11  
    {0x20c1, &op_disable,	  1, 255, 255, 0x0c, 0x02, 0x00, 0x00}, // disable b 12  
    {0x20d1, &op_disable,	  1, 255, 255, 0x0d, 0x02, 0x00, 0x00}, // disable b 13  
    {0x20e1, &op_disable,	  1, 255, 255, 0x0e, 0x02, 0x00, 0x00}, // disable b 14  
    {0x20f1, &op_disable,	  1, 255, 255, 0x0f, 0x02, 0x00, 0x00}, // disable b 15  
    {0x2101, &op_disable,	  1, 255, 255, 0x10, 0x02, 0x00, 0x00}, // disable b 16  
    {0x2111, &op_disable,	  1, 255, 255, 0x11, 0x02, 0x00, 0x00}, // disable b 17  
    {0x2121, &op_disable,	  1, 255, 255, 0x12, 0x02, 0x00, 0x00}, // disable b 18  
    {0x2131, &op_disable,	  1, 255, 255, 0x13, 0x02, 0x00, 0x00}, // disable b 19  
    {0x2141, &op_disable,	  1, 255, 255, 0x14, 0x02, 0x00, 0x00}, // disable b 20  
    {0x2151, &op_disable,	  1, 255, 255, 0x15, 0x02, 0x00, 0x00}, // disable b 21  
    {0x2161, &op_disable,	  1, 255, 255, 0x16, 0x02, 0x00, 0x00}, // disable b 22  
    {0x2171, &op_disable,	  1, 255, 255, 0x17, 0x02, 0x00, 0x00}, // disable b 23  
    {0x2181, &op_disable,	  1, 255, 255, 0x18, 0x02, 0x00, 0x00}, // disable b 24  
    {0x2191, &op_disable,	  1, 255, 255, 0x19, 0x02, 0x00, 0x00}, // disable b 25  
    {0x21a1, &op_disable,	  1, 255, 255, 0x1a, 0x02, 0x00, 0x00}, // disable b 26  
    {0x21b1, &op_disable,	  1, 255, 255, 0x1b, 0x02, 0x00, 0x00}, // disable b 27  
    {0x21c1, &op_disable,	  1, 255, 255, 0x1c, 0x02, 0x00, 0x00}, // disable b 28  
    {0x21d1, &op_disable,	  1, 255, 255, 0x1d, 0x02, 0x00, 0x00}, // disable b 29  
    {0x21e1, &op_disable,	  1, 255, 255, 0x1e, 0x02, 0x00, 0x00}, // disable b 30  
    {0x21f1, &op_disable,	  1, 255, 255, 0x1f, 0x02, 0x00, 0x00}, // disable b 31  
    {0x2201, &op_disable,	  1, 255, 255, 0x20, 0x02, 0x00, 0x00}, // disable b 32  
    {0x2211, &op_disable,	  1, 255, 255, 0x21, 0x02, 0x00, 0x00}, // disable b 33  
    {0x2221, &op_disable,	  1, 255, 255, 0x22, 0x02, 0x00, 0x00}, // disable b 34  
    {0x2231, &op_disable,	  1, 255, 255, 0x23, 0x02, 0x00, 0x00}, // disable b 35  
    {0x2241, &op_disable,	  1, 255, 255, 0x24, 0x02, 0x00, 0x00}, // disable b 36  
    {0x2251, &op_disable,	  1, 255, 255, 0x25, 0x02, 0x00, 0x00}, // disable b 37  
    {0x2261, &op_disable,	  1, 255, 255, 0x26, 0x02, 0x00, 0x00}, // disable b 38  
    {0x2271, &op_disable,	  1, 255, 255, 0x27, 0x02, 0x00, 0x00}, // disable b 39  
    {0x2281, &op_disable,	  1, 255, 255, 0x28, 0x02, 0x00, 0x00}, // disable b 40  
    {0x2291, &op_disable,	  1, 255, 255, 0x29, 0x02, 0x00, 0x00}, // disable b 41  
    {0x22a1, &op_disable,	  1, 255, 255, 0x2a, 0x02, 0x00, 0x00}, // disable b 42  
    {0x22b1, &op_disable,	  1, 255, 255, 0x2b, 0x02, 0x00, 0x00}, // disable b 43  
    {0x22c1, &op_disable,	  1, 255, 255, 0x2c, 0x02, 0x00, 0x00}, // disable b 44  
    {0x22d1, &op_disable,	  1, 255, 255, 0x2d, 0x02, 0x00, 0x00}, // disable b 45  
    {0x22e1, &op_disable,	  1, 255, 255, 0x2e, 0x02, 0x00, 0x00}, // disable b 46  
    {0x22f1, &op_disable,	  1, 255, 255, 0x2f, 0x02, 0x00, 0x00}, // disable b 47  
    {0x2301, &op_disable,	  1, 255, 255, 0x30, 0x02, 0x00, 0x00}, // disable b 48  
    {0x2311, &op_disable,	  1, 255, 255, 0x31, 0x02, 0x00, 0x00}, // disable b 49  
    {0x2321, &op_disable,	  1, 255, 255, 0x32, 0x02, 0x00, 0x00}, // disable b 50  
    {0x2331, &op_disable,	  1, 255, 255, 0x33, 0x02, 0x00, 0x00}, // disable b 51  
    {0x2341, &op_disable,	  1, 255, 255, 0x34, 0x02, 0x00, 0x00}, // disable b 52  
    {0x2351, &op_disable,	  1, 255, 255, 0x35, 0x02, 0x00, 0x00}, // disable b 53  
    {0x2361, &op_disable,	  1, 255, 255, 0x36, 0x02, 0x00, 0x00}, // disable b 54  
    {0x2371, &op_disable,	  1, 255, 255, 0x37, 0x02, 0x00, 0x00}, // disable b 55  
    {0x2381, &op_disable,	  1, 255, 255, 0x38, 0x02, 0x00, 0x00}, // disable b 56  
    {0x2391, &op_disable,	  1, 255, 255, 0x39, 0x02, 0x00, 0x00}, // disable b 57  
    {0x23a1, &op_disable,	  1, 255, 255, 0x3a, 0x02, 0x00, 0x00}, // disable b 58  
    {0x23b1, &op_disable,	  1, 255, 255, 0x3b, 0x02, 0x00, 0x00}, // disable b 59  
    {0x23c1, &op_disable,	  1, 255, 255, 0x3c, 0x02, 0x00, 0x00}, // disable b 60  
    {0x23d1, &op_disable,	  1, 255, 255, 0x3d, 0x02, 0x00, 0x00}, // disable b 61  
    {0x23e1, &op_disable,	  1, 255, 255, 0x3e, 0x02, 0x00, 0x00}, // disable b 62  
    {0x23f1, &op_disable,	  1, 255, 255, 0x3f, 0x02, 0x00, 0x00}, // disable b 63  
    {0x2002, &op_disable,	  2, 255, 255, 0x00, 0x02, 0x00, 0x00}, // disable c 0  
    {0x2012, &op_disable,	  2, 255, 255, 0x01, 0x02, 0x00, 0x00}, // disable c 1  
    {0x2022, &op_disable,	  2, 255, 255, 0x02, 0x02, 0x00, 0x00}, // disable c 2  
    {0x2032, &op_disable,	  2, 255, 255, 0x03, 0x02, 0x00, 0x00}, // disable c 3  
    {0x2042, &op_disable,	  2, 255, 255, 0x04, 0x02, 0x00, 0x00}, // disable c 4  
    {0x2052, &op_disable,	  2, 255, 255, 0x05, 0x02, 0x00, 0x00}, // disable c 5  
    {0x2062, &op_disable,	  2, 255, 255, 0x06, 0x02, 0x00, 0x00}, // disable c 6  
    {0x2072, &op_disable,	  2, 255, 255, 0x07, 0x02, 0x00, 0x00}, // disable c 7  
    {0x2082, &op_disable,	  2, 255, 255, 0x08, 0x02, 0x00, 0x00}, // disable c 8  
    {0x2092, &op_disable,	  2, 255, 255, 0x09, 0x02, 0x00, 0x00}, // disable c 9  
    {0x20a2, &op_disable,	  2, 255, 255, 0x0a, 0x02, 0x00, 0x00}, // disable c 10  
    {0x20b2, &op_disable,	  2, 255, 255, 0x0b, 0x02, 0x00, 0x00}, // disable c 11  
    {0x20c2, &op_disable,	  2, 255, 255, 0x0c, 0x02, 0x00, 0x00}, // disable c 12  
    {0x20d2, &op_disable,	  2, 255, 255, 0x0d, 0x02, 0x00, 0x00}, // disable c 13  
    {0x20e2, &op_disable,	  2, 255, 255, 0x0e, 0x02, 0x00, 0x00}, // disable c 14  
    {0x20f2, &op_disable,	  2, 255, 255, 0x0f, 0x02, 0x00, 0x00}, // disable c 15  
    {0x2102, &op_disable,	  2, 255, 255, 0x10, 0x02, 0x00, 0x00}, // disable c 16  
    {0x2112, &op_disable,	  2, 255, 255, 0x11, 0x02, 0x00, 0x00}, // disable c 17  
    {0x2122, &op_disable,	  2, 255, 255, 0x12, 0x02, 0x00, 0x00}, // disable c 18  
    {0x2132, &op_disable,	  2, 255, 255, 0x13, 0x02, 0x00, 0x00}, // disable c 19  
    {0x2142, &op_disable,	  2, 255, 255, 0x14, 0x02, 0x00, 0x00}, // disable c 20  
    {0x2152, &op_disable,	  2, 255, 255, 0x15, 0x02, 0x00, 0x00}, // disable c 21  
    {0x2162, &op_disable,	  2, 255, 255, 0x16, 0x02, 0x00, 0x00}, // disable c 22  
    {0x2172, &op_disable,	  2, 255, 255, 0x17, 0x02, 0x00, 0x00}, // disable c 23  
    {0x2182, &op_disable,	  2, 255, 255, 0x18, 0x02, 0x00, 0x00}, // disable c 24  
    {0x2192, &op_disable,	  2, 255, 255, 0x19, 0x02, 0x00, 0x00}, // disable c 25  
    {0x21a2, &op_disable,	  2, 255, 255, 0x1a, 0x02, 0x00, 0x00}, // disable c 26  
    {0x21b2, &op_disable,	  2, 255, 255, 0x1b, 0x02, 0x00, 0x00}, // disable c 27  
    {0x21c2, &op_disable,	  2, 255, 255, 0x1c, 0x02, 0x00, 0x00}, // disable c 28  
    {0x21d2, &op_disable,	  2, 255, 255, 0x1d, 0x02, 0x00, 0x00}, // disable c 29  
    {0x21e2, &op_disable,	  2, 255, 255, 0x1e, 0x02, 0x00, 0x00}, // disable c 30  
    {0x21f2, &op_disable,	  2, 255, 255, 0x1f, 0x02, 0x00, 0x00}, // disable c 31  
    {0x2202, &op_disable,	  2, 255, 255, 0x20, 0x02, 0x00, 0x00}, // disable c 32  
    {0x2212, &op_disable,	  2, 255, 255, 0x21, 0x02, 0x00, 0x00}, // disable c 33  
    {0x2222, &op_disable,	  2, 255, 255, 0x22, 0x02, 0x00, 0x00}, // disable c 34  
    {0x2232, &op_disable,	  2, 255, 255, 0x23, 0x02, 0x00, 0x00}, // disable c 35  
    {0x2242, &op_disable,	  2, 255, 255, 0x24, 0x02, 0x00, 0x00}, // disable c 36  
    {0x2252, &op_disable,	  2, 255, 255, 0x25, 0x02, 0x00, 0x00}, // disable c 37  
    {0x2262, &op_disable,	  2, 255, 255, 0x26, 0x02, 0x00, 0x00}, // disable c 38  
    {0x2272, &op_disable,	  2, 255, 255, 0x27, 0x02, 0x00, 0x00}, // disable c 39  
    {0x2282, &op_disable,	  2, 255, 255, 0x28, 0x02, 0x00, 0x00}, // disable c 40  
    {0x2292, &op_disable,	  2, 255, 255, 0x29, 0x02, 0x00, 0x00}, // disable c 41  
    {0x22a2, &op_disable,	  2, 255, 255, 0x2a, 0x02, 0x00, 0x00}, // disable c 42  
    {0x22b2, &op_disable,	  2, 255, 255, 0x2b, 0x02, 0x00, 0x00}, // disable c 43  
    {0x22c2, &op_disable,	  2, 255, 255, 0x2c, 0x02, 0x00, 0x00}, // disable c 44  
    {0x22d2, &op_disable,	  2, 255, 255, 0x2d, 0x02, 0x00, 0x00}, // disable c 45  
    {0x22e2, &op_disable,	  2, 255, 255, 0x2e, 0x02, 0x00, 0x00}, // disable c 46  
    {0x22f2, &op_disable,	  2, 255, 255, 0x2f, 0x02, 0x00, 0x00}, // disable c 47  
    {0x2302, &op_disable,	  2, 255, 255, 0x30, 0x02, 0x00, 0x00}, // disable c 48  
    {0x2312, &op_disable,	  2, 255, 255, 0x31, 0x02, 0x00, 0x00}, // disable c 49  
    {0x2322, &op_disable,	  2, 255, 255, 0x32, 0x02, 0x00, 0x00}, // disable c 50  
    {0x2332, &op_disable,	  2, 255, 255, 0x33, 0x02, 0x00, 0x00}, // disable c 51  
    {0x2342, &op_disable,	  2, 255, 255, 0x34, 0x02, 0x00, 0x00}, // disable c 52  
    {0x2352, &op_disable,	  2, 255, 255, 0x35, 0x02, 0x00, 0x00}, // disable c 53  
    {0x2362, &op_disable,	  2, 255, 255, 0x36, 0x02, 0x00, 0x00}, // disable c 54  
    {0x2372, &op_disable,	  2, 255, 255, 0x37, 0x02, 0x00, 0x00}, // disable c 55  
    {0x2382, &op_disable,	  2, 255, 255, 0x38, 0x02, 0x00, 0x00}, // disable c 56  
    {0x2392, &op_disable,	  2, 255, 255, 0x39, 0x02, 0x00, 0x00}, // disable c 57  
    {0x23a2, &op_disable,	  2, 255, 255, 0x3a, 0x02, 0x00, 0x00}, // disable c 58  
    {0x23b2, &op_disable,	  2, 255, 255, 0x3b, 0x02, 0x00, 0x00}, // disable c 59  
    {0x23c2, &op_disable,	  2, 255, 255, 0x3c, 0x02, 0x00, 0x00}, // disable c 60  
    {0x23d2, &op_disable,	  2, 255, 255, 0x3d, 0x02, 0x00, 0x00}, // disable c 61  
    {0x23e2, &op_disable,	  2, 255, 255, 0x3e, 0x02, 0x00, 0x00}, // disable c 62  
    {0x23f2, &op_disable,	  2, 255, 255, 0x3f, 0x02, 0x00, 0x00}, // disable c 63  
    {0x2003, &op_disable,	  3, 255, 255, 0x00, 0x02, 0x00, 0x00}, // disable d 0  
    {0x2013, &op_disable,	  3, 255, 255, 0x01, 0x02, 0x00, 0x00}, // disable d 1  
    {0x2023, &op_disable,	  3, 255, 255, 0x02, 0x02, 0x00, 0x00}, // disable d 2  
    {0x2033, &op_disable,	  3, 255, 255, 0x03, 0x02, 0x00, 0x00}, // disable d 3  
    {0x2043, &op_disable,	  3, 255, 255, 0x04, 0x02, 0x00, 0x00}, // disable d 4  
    {0x2053, &op_disable,	  3, 255, 255, 0x05, 0x02, 0x00, 0x00}, // disable d 5  
    {0x2063, &op_disable,	  3, 255, 255, 0x06, 0x02, 0x00, 0x00}, // disable d 6  
    {0x2073, &op_disable,	  3, 255, 255, 0x07, 0x02, 0x00, 0x00}, // disable d 7  
    {0x2083, &op_disable,	  3, 255, 255, 0x08, 0x02, 0x00, 0x00}, // disable d 8  
    {0x2093, &op_disable,	  3, 255, 255, 0x09, 0x02, 0x00, 0x00}, // disable d 9  
    {0x20a3, &op_disable,	  3, 255, 255, 0x0a, 0x02, 0x00, 0x00}, // disable d 10  
    {0x20b3, &op_disable,	  3, 255, 255, 0x0b, 0x02, 0x00, 0x00}, // disable d 11  
    {0x20c3, &op_disable,	  3, 255, 255, 0x0c, 0x02, 0x00, 0x00}, // disable d 12  
    {0x20d3, &op_disable,	  3, 255, 255, 0x0d, 0x02, 0x00, 0x00}, // disable d 13  
    {0x20e3, &op_disable,	  3, 255, 255, 0x0e, 0x02, 0x00, 0x00}, // disable d 14  
    {0x20f3, &op_disable,	  3, 255, 255, 0x0f, 0x02, 0x00, 0x00}, // disable d 15  
    {0x2103, &op_disable,	  3, 255, 255, 0x10, 0x02, 0x00, 0x00}, // disable d 16  
    {0x2113, &op_disable,	  3, 255, 255, 0x11, 0x02, 0x00, 0x00}, // disable d 17  
    {0x2123, &op_disable,	  3, 255, 255, 0x12, 0x02, 0x00, 0x00}, // disable d 18  
    {0x2133, &op_disable,	  3, 255, 255, 0x13, 0x02, 0x00, 0x00}, // disable d 19  
    {0x2143, &op_disable,	  3, 255, 255, 0x14, 0x02, 0x00, 0x00}, // disable d 20  
    {0x2153, &op_disable,	  3, 255, 255, 0x15, 0x02, 0x00, 0x00}, // disable d 21  
    {0x2163, &op_disable,	  3, 255, 255, 0x16, 0x02, 0x00, 0x00}, // disable d 22  
    {0x2173, &op_disable,	  3, 255, 255, 0x17, 0x02, 0x00, 0x00}, // disable d 23  
    {0x2183, &op_disable,	  3, 255, 255, 0x18, 0x02, 0x00, 0x00}, // disable d 24  
    {0x2193, &op_disable,	  3, 255, 255, 0x19, 0x02, 0x00, 0x00}, // disable d 25  
    {0x21a3, &op_disable,	  3, 255, 255, 0x1a, 0x02, 0x00, 0x00}, // disable d 26  
    {0x21b3, &op_disable,	  3, 255, 255, 0x1b, 0x02, 0x00, 0x00}, // disable d 27  
    {0x21c3, &op_disable,	  3, 255, 255, 0x1c, 0x02, 0x00, 0x00}, // disable d 28  
    {0x21d3, &op_disable,	  3, 255, 255, 0x1d, 0x02, 0x00, 0x00}, // disable d 29  
    {0x21e3, &op_disable,	  3, 255, 255, 0x1e, 0x02, 0x00, 0x00}, // disable d 30  
    {0x21f3, &op_disable,	  3, 255, 255, 0x1f, 0x02, 0x00, 0x00}, // disable d 31  
    {0x2203, &op_disable,	  3, 255, 255, 0x20, 0x02, 0x00, 0x00}, // disable d 32  
    {0x2213, &op_disable,	  3, 255, 255, 0x21, 0x02, 0x00, 0x00}, // disable d 33  
    {0x2223, &op_disable,	  3, 255, 255, 0x22, 0x02, 0x00, 0x00}, // disable d 34  
    {0x2233, &op_disable,	  3, 255, 255, 0x23, 0x02, 0x00, 0x00}, // disable d 35  
    {0x2243, &op_disable,	  3, 255, 255, 0x24, 0x02, 0x00, 0x00}, // disable d 36  
    {0x2253, &op_disable,	  3, 255, 255, 0x25, 0x02, 0x00, 0x00}, // disable d 37  
    {0x2263, &op_disable,	  3, 255, 255, 0x26, 0x02, 0x00, 0x00}, // disable d 38  
    {0x2273, &op_disable,	  3, 255, 255, 0x27, 0x02, 0x00, 0x00}, // disable d 39  
    {0x2283, &op_disable,	  3, 255, 255, 0x28, 0x02, 0x00, 0x00}, // disable d 40  
    {0x2293, &op_disable,	  3, 255, 255, 0x29, 0x02, 0x00, 0x00}, // disable d 41  
    {0x22a3, &op_disable,	  3, 255, 255, 0x2a, 0x02, 0x00, 0x00}, // disable d 42  
    {0x22b3, &op_disable,	  3, 255, 255, 0x2b, 0x02, 0x00, 0x00}, // disable d 43  
    {0x22c3, &op_disable,	  3, 255, 255, 0x2c, 0x02, 0x00, 0x00}, // disable d 44  
    {0x22d3, &op_disable,	  3, 255, 255, 0x2d, 0x02, 0x00, 0x00}, // disable d 45  
    {0x22e3, &op_disable,	  3, 255, 255, 0x2e, 0x02, 0x00, 0x00}, // disable d 46  
    {0x22f3, &op_disable,	  3, 255, 255, 0x2f, 0x02, 0x00, 0x00}, // disable d 47  
    {0x2303, &op_disable,	  3, 255, 255, 0x30, 0x02, 0x00, 0x00}, // disable d 48  
    {0x2313, &op_disable,	  3, 255, 255, 0x31, 0x02, 0x00, 0x00}, // disable d 49  
    {0x2323, &op_disable,	  3, 255, 255, 0x32, 0x02, 0x00, 0x00}, // disable d 50  
    {0x2333, &op_disable,	  3, 255, 255, 0x33, 0x02, 0x00, 0x00}, // disable d 51  
    {0x2343, &op_disable,	  3, 255, 255, 0x34, 0x02, 0x00, 0x00}, // disable d 52  
    {0x2353, &op_disable,	  3, 255, 255, 0x35, 0x02, 0x00, 0x00}, // disable d 53  
    {0x2363, &op_disable,	  3, 255, 255, 0x36, 0x02, 0x00, 0x00}, // disable d 54  
    {0x2373, &op_disable,	  3, 255, 255, 0x37, 0x02, 0x00, 0x00}, // disable d 55  
    {0x2383, &op_disable,	  3, 255, 255, 0x38, 0x02, 0x00, 0x00}, // disable d 56  
    {0x2393, &op_disable,	  3, 255, 255, 0x39, 0x02, 0x00, 0x00}, // disable d 57  
    {0x23a3, &op_disable,	  3, 255, 255, 0x3a, 0x02, 0x00, 0x00}, // disable d 58  
    {0x23b3, &op_disable,	  3, 255, 255, 0x3b, 0x02, 0x00, 0x00}, // disable d 59  
    {0x23c3, &op_disable,	  3, 255, 255, 0x3c, 0x02, 0x00, 0x00}, // disable d 60  
    {0x23d3, &op_disable,	  3, 255, 255, 0x3d, 0x02, 0x00, 0x00}, // disable d 61  
    {0x23e3, &op_disable,	  3, 255, 255, 0x3e, 0x02, 0x00, 0x00}, // disable d 62  
    {0x23f3, &op_disable,	  3, 255, 255, 0x3f, 0x02, 0x00, 0x00}, // disable d 63  
    {0x2004, &op_disable,	  4, 255, 255, 0x00, 0x02, 0x00, 0x00}, // disable e 0  
    {0x2014, &op_disable,	  4, 255, 255, 0x01, 0x02, 0x00, 0x00}, // disable e 1  
    {0x2024, &op_disable,	  4, 255, 255, 0x02, 0x02, 0x00, 0x00}, // disable e 2  
    {0x2034, &op_disable,	  4, 255, 255, 0x03, 0x02, 0x00, 0x00}, // disable e 3  
    {0x2044, &op_disable,	  4, 255, 255, 0x04, 0x02, 0x00, 0x00}, // disable e 4  
    {0x2054, &op_disable,	  4, 255, 255, 0x05, 0x02, 0x00, 0x00}, // disable e 5  
    {0x2064, &op_disable,	  4, 255, 255, 0x06, 0x02, 0x00, 0x00}, // disable e 6  
    {0x2074, &op_disable,	  4, 255, 255, 0x07, 0x02, 0x00, 0x00}, // disable e 7  
    {0x2084, &op_disable,	  4, 255, 255, 0x08, 0x02, 0x00, 0x00}, // disable e 8  
    {0x2094, &op_disable,	  4, 255, 255, 0x09, 0x02, 0x00, 0x00}, // disable e 9  
    {0x20a4, &op_disable,	  4, 255, 255, 0x0a, 0x02, 0x00, 0x00}, // disable e 10  
    {0x20b4, &op_disable,	  4, 255, 255, 0x0b, 0x02, 0x00, 0x00}, // disable e 11  
    {0x20c4, &op_disable,	  4, 255, 255, 0x0c, 0x02, 0x00, 0x00}, // disable e 12  
    {0x20d4, &op_disable,	  4, 255, 255, 0x0d, 0x02, 0x00, 0x00}, // disable e 13  
    {0x20e4, &op_disable,	  4, 255, 255, 0x0e, 0x02, 0x00, 0x00}, // disable e 14  
    {0x20f4, &op_disable,	  4, 255, 255, 0x0f, 0x02, 0x00, 0x00}, // disable e 15  
    {0x2104, &op_disable,	  4, 255, 255, 0x10, 0x02, 0x00, 0x00}, // disable e 16  
    {0x2114, &op_disable,	  4, 255, 255, 0x11, 0x02, 0x00, 0x00}, // disable e 17  
    {0x2124, &op_disable,	  4, 255, 255, 0x12, 0x02, 0x00, 0x00}, // disable e 18  
    {0x2134, &op_disable,	  4, 255, 255, 0x13, 0x02, 0x00, 0x00}, // disable e 19  
    {0x2144, &op_disable,	  4, 255, 255, 0x14, 0x02, 0x00, 0x00}, // disable e 20  
    {0x2154, &op_disable,	  4, 255, 255, 0x15, 0x02, 0x00, 0x00}, // disable e 21  
    {0x2164, &op_disable,	  4, 255, 255, 0x16, 0x02, 0x00, 0x00}, // disable e 22  
    {0x2174, &op_disable,	  4, 255, 255, 0x17, 0x02, 0x00, 0x00}, // disable e 23  
    {0x2184, &op_disable,	  4, 255, 255, 0x18, 0x02, 0x00, 0x00}, // disable e 24  
    {0x2194, &op_disable,	  4, 255, 255, 0x19, 0x02, 0x00, 0x00}, // disable e 25  
    {0x21a4, &op_disable,	  4, 255, 255, 0x1a, 0x02, 0x00, 0x00}, // disable e 26  
    {0x21b4, &op_disable,	  4, 255, 255, 0x1b, 0x02, 0x00, 0x00}, // disable e 27  
    {0x21c4, &op_disable,	  4, 255, 255, 0x1c, 0x02, 0x00, 0x00}, // disable e 28  
    {0x21d4, &op_disable,	  4, 255, 255, 0x1d, 0x02, 0x00, 0x00}, // disable e 29  
    {0x21e4, &op_disable,	  4, 255, 255, 0x1e, 0x02, 0x00, 0x00}, // disable e 30  
    {0x21f4, &op_disable,	  4, 255, 255, 0x1f, 0x02, 0x00, 0x00}, // disable e 31  
    {0x2204, &op_disable,	  4, 255, 255, 0x20, 0x02, 0x00, 0x00}, // disable e 32  
    {0x2214, &op_disable,	  4, 255, 255, 0x21, 0x02, 0x00, 0x00}, // disable e 33  
    {0x2224, &op_disable,	  4, 255, 255, 0x22, 0x02, 0x00, 0x00}, // disable e 34  
    {0x2234, &op_disable,	  4, 255, 255, 0x23, 0x02, 0x00, 0x00}, // disable e 35  
    {0x2244, &op_disable,	  4, 255, 255, 0x24, 0x02, 0x00, 0x00}, // disable e 36  
    {0x2254, &op_disable,	  4, 255, 255, 0x25, 0x02, 0x00, 0x00}, // disable e 37  
    {0x2264, &op_disable,	  4, 255, 255, 0x26, 0x02, 0x00, 0x00}, // disable e 38  
    {0x2274, &op_disable,	  4, 255, 255, 0x27, 0x02, 0x00, 0x00}, // disable e 39  
    {0x2284, &op_disable,	  4, 255, 255, 0x28, 0x02, 0x00, 0x00}, // disable e 40  
    {0x2294, &op_disable,	  4, 255, 255, 0x29, 0x02, 0x00, 0x00}, // disable e 41  
    {0x22a4, &op_disable,	  4, 255, 255, 0x2a, 0x02, 0x00, 0x00}, // disable e 42  
    {0x22b4, &op_disable,	  4, 255, 255, 0x2b, 0x02, 0x00, 0x00}, // disable e 43  
    {0x22c4, &op_disable,	  4, 255, 255, 0x2c, 0x02, 0x00, 0x00}, // disable e 44  
    {0x22d4, &op_disable,	  4, 255, 255, 0x2d, 0x02, 0x00, 0x00}, // disable e 45  
    {0x22e4, &op_disable,	  4, 255, 255, 0x2e, 0x02, 0x00, 0x00}, // disable e 46  
    {0x22f4, &op_disable,	  4, 255, 255, 0x2f, 0x02, 0x00, 0x00}, // disable e 47  
    {0x2304, &op_disable,	  4, 255, 255, 0x30, 0x02, 0x00, 0x00}, // disable e 48  
    {0x2314, &op_disable,	  4, 255, 255, 0x31, 0x02, 0x00, 0x00}, // disable e 49  
    {0x2324, &op_disable,	  4, 255, 255, 0x32, 0x02, 0x00, 0x00}, // disable e 50  
    {0x2334, &op_disable,	  4, 255, 255, 0x33, 0x02, 0x00, 0x00}, // disable e 51  
    {0x2344, &op_disable,	  4, 255, 255, 0x34, 0x02, 0x00, 0x00}, // disable e 52  
    {0x2354, &op_disable,	  4, 255, 255, 0x35, 0x02, 0x00, 0x00}, // disable e 53  
    {0x2364, &op_disable,	  4, 255, 255, 0x36, 0x02, 0x00, 0x00}, // disable e 54  
    {0x2374, &op_disable,	  4, 255, 255, 0x37, 0x02, 0x00, 0x00}, // disable e 55  
    {0x2384, &op_disable,	  4, 255, 255, 0x38, 0x02, 0x00, 0x00}, // disable e 56  
    {0x2394, &op_disable,	  4, 255, 255, 0x39, 0x02, 0x00, 0x00}, // disable e 57  
    {0x23a4, &op_disable,	  4, 255, 255, 0x3a, 0x02, 0x00, 0x00}, // disable e 58  
    {0x23b4, &op_disable,	  4, 255, 255, 0x3b, 0x02, 0x00, 0x00}, // disable e 59  
    {0x23c4, &op_disable,	  4, 255, 255, 0x3c, 0x02, 0x00, 0x00}, // disable e 60  
    {0x23d4, &op_disable,	  4, 255, 255, 0x3d, 0x02, 0x00, 0x00}, // disable e 61  
    {0x23e4, &op_disable,	  4, 255, 255, 0x3e, 0x02, 0x00, 0x00}, // disable e 62  
    {0x23f4, &op_disable,	  4, 255, 255, 0x3f, 0x02, 0x00, 0x00}, // disable e 63  
    {0x2005, &op_disable,	  5, 255, 255, 0x00, 0x02, 0x00, 0x00}, // disable f 0  
    {0x2015, &op_disable,	  5, 255, 255, 0x01, 0x02, 0x00, 0x00}, // disable f 1  
    {0x2025, &op_disable,	  5, 255, 255, 0x02, 0x02, 0x00, 0x00}, // disable f 2  
    {0x2035, &op_disable,	  5, 255, 255, 0x03, 0x02, 0x00, 0x00}, // disable f 3  
    {0x2045, &op_disable,	  5, 255, 255, 0x04, 0x02, 0x00, 0x00}, // disable f 4  
    {0x2055, &op_disable,	  5, 255, 255, 0x05, 0x02, 0x00, 0x00}, // disable f 5  
    {0x2065, &op_disable,	  5, 255, 255, 0x06, 0x02, 0x00, 0x00}, // disable f 6  
    {0x2075, &op_disable,	  5, 255, 255, 0x07, 0x02, 0x00, 0x00}, // disable f 7  
    {0x2085, &op_disable,	  5, 255, 255, 0x08, 0x02, 0x00, 0x00}, // disable f 8  
    {0x2095, &op_disable,	  5, 255, 255, 0x09, 0x02, 0x00, 0x00}, // disable f 9  
    {0x20a5, &op_disable,	  5, 255, 255, 0x0a, 0x02, 0x00, 0x00}, // disable f 10  
    {0x20b5, &op_disable,	  5, 255, 255, 0x0b, 0x02, 0x00, 0x00}, // disable f 11  
    {0x20c5, &op_disable,	  5, 255, 255, 0x0c, 0x02, 0x00, 0x00}, // disable f 12  
    {0x20d5, &op_disable,	  5, 255, 255, 0x0d, 0x02, 0x00, 0x00}, // disable f 13  
    {0x20e5, &op_disable,	  5, 255, 255, 0x0e, 0x02, 0x00, 0x00}, // disable f 14  
    {0x20f5, &op_disable,	  5, 255, 255, 0x0f, 0x02, 0x00, 0x00}, // disable f 15  
    {0x2105, &op_disable,	  5, 255, 255, 0x10, 0x02, 0x00, 0x00}, // disable f 16  
    {0x2115, &op_disable,	  5, 255, 255, 0x11, 0x02, 0x00, 0x00}, // disable f 17  
    {0x2125, &op_disable,	  5, 255, 255, 0x12, 0x02, 0x00, 0x00}, // disable f 18  
    {0x2135, &op_disable,	  5, 255, 255, 0x13, 0x02, 0x00, 0x00}, // disable f 19  
    {0x2145, &op_disable,	  5, 255, 255, 0x14, 0x02, 0x00, 0x00}, // disable f 20  
    {0x2155, &op_disable,	  5, 255, 255, 0x15, 0x02, 0x00, 0x00}, // disable f 21  
    {0x2165, &op_disable,	  5, 255, 255, 0x16, 0x02, 0x00, 0x00}, // disable f 22  
    {0x2175, &op_disable,	  5, 255, 255, 0x17, 0x02, 0x00, 0x00}, // disable f 23  
    {0x2185, &op_disable,	  5, 255, 255, 0x18, 0x02, 0x00, 0x00}, // disable f 24  
    {0x2195, &op_disable,	  5, 255, 255, 0x19, 0x02, 0x00, 0x00}, // disable f 25  
    {0x21a5, &op_disable,	  5, 255, 255, 0x1a, 0x02, 0x00, 0x00}, // disable f 26  
    {0x21b5, &op_disable,	  5, 255, 255, 0x1b, 0x02, 0x00, 0x00}, // disable f 27  
    {0x21c5, &op_disable,	  5, 255, 255, 0x1c, 0x02, 0x00, 0x00}, // disable f 28  
    {0x21d5, &op_disable,	  5, 255, 255, 0x1d, 0x02, 0x00, 0x00}, // disable f 29  
    {0x21e5, &op_disable,	  5, 255, 255, 0x1e, 0x02, 0x00, 0x00}, // disable f 30  
    {0x21f5, &op_disable,	  5, 255, 255, 0x1f, 0x02, 0x00, 0x00}, // disable f 31  
    {0x2205, &op_disable,	  5, 255, 255, 0x20, 0x02, 0x00, 0x00}, // disable f 32  
    {0x2215, &op_disable,	  5, 255, 255, 0x21, 0x02, 0x00, 0x00}, // disable f 33  
    {0x2225, &op_disable,	  5, 255, 255, 0x22, 0x02, 0x00, 0x00}, // disable f 34  
    {0x2235, &op_disable,	  5, 255, 255, 0x23, 0x02, 0x00, 0x00}, // disable f 35  
    {0x2245, &op_disable,	  5, 255, 255, 0x24, 0x02, 0x00, 0x00}, // disable f 36  
    {0x2255, &op_disable,	  5, 255, 255, 0x25, 0x02, 0x00, 0x00}, // disable f 37  
    {0x2265, &op_disable,	  5, 255, 255, 0x26, 0x02, 0x00, 0x00}, // disable f 38  
    {0x2275, &op_disable,	  5, 255, 255, 0x27, 0x02, 0x00, 0x00}, // disable f 39  
    {0x2285, &op_disable,	  5, 255, 255, 0x28, 0x02, 0x00, 0x00}, // disable f 40  
    {0x2295, &op_disable,	  5, 255, 255, 0x29, 0x02, 0x00, 0x00}, // disable f 41  
    {0x22a5, &op_disable,	  5, 255, 255, 0x2a, 0x02, 0x00, 0x00}, // disable f 42  
    {0x22b5, &op_disable,	  5, 255, 255, 0x2b, 0x02, 0x00, 0x00}, // disable f 43  
    {0x22c5, &op_disable,	  5, 255, 255, 0x2c, 0x02, 0x00, 0x00}, // disable f 44  
    {0x22d5, &op_disable,	  5, 255, 255, 0x2d, 0x02, 0x00, 0x00}, // disable f 45  
    {0x22e5, &op_disable,	  5, 255, 255, 0x2e, 0x02, 0x00, 0x00}, // disable f 46  
    {0x22f5, &op_disable,	  5, 255, 255, 0x2f, 0x02, 0x00, 0x00}, // disable f 47  
    {0x2305, &op_disable,	  5, 255, 255, 0x30, 0x02, 0x00, 0x00}, // disable f 48  
    {0x2315, &op_disable,	  5, 255, 255, 0x31, 0x02, 0x00, 0x00}, // disable f 49  
    {0x2325, &op_disable,	  5, 255, 255, 0x32, 0x02, 0x00, 0x00}, // disable f 50  
    {0x2335, &op_disable,	  5, 255, 255, 0x33, 0x02, 0x00, 0x00}, // disable f 51  
    {0x2345, &op_disable,	  5, 255, 255, 0x34, 0x02, 0x00, 0x00}, // disable f 52  
    {0x2355, &op_disable,	  5, 255, 255, 0x35, 0x02, 0x00, 0x00}, // disable f 53  
    {0x2365, &op_disable,	  5, 255, 255, 0x36, 0x02, 0x00, 0x00}, // disable f 54  
    {0x2375, &op_disable,	  5, 255, 255, 0x37, 0x02, 0x00, 0x00}, // disable f 55  
    {0x2385, &op_disable,	  5, 255, 255, 0x38, 0x02, 0x00, 0x00}, // disable f 56  
    {0x2395, &op_disable,	  5, 255, 255, 0x39, 0x02, 0x00, 0x00}, // disable f 57  
    {0x23a5, &op_disable,	  5, 255, 255, 0x3a, 0x02, 0x00, 0x00}, // disable f 58  
    {0x23b5, &op_disable,	  5, 255, 255, 0x3b, 0x02, 0x00, 0x00}, // disable f 59  
    {0x23c5, &op_disable,	  5, 255, 255, 0x3c, 0x02, 0x00, 0x00}, // disable f 60  
    {0x23d5, &op_disable,	  5, 255, 255, 0x3d, 0x02, 0x00, 0x00}, // disable f 61  
    {0x23e5, &op_disable,	  5, 255, 255, 0x3e, 0x02, 0x00, 0x00}, // disable f 62  
    {0x23f5, &op_disable,	  5, 255, 255, 0x3f, 0x02, 0x00, 0x00}, // disable f 63  
    {0x2006, &op_disable,	  6, 255, 255, 0x00, 0x02, 0x00, 0x00}, // disable g 0  
    {0x2016, &op_disable,	  6, 255, 255, 0x01, 0x02, 0x00, 0x00}, // disable g 1  
    {0x2026, &op_disable,	  6, 255, 255, 0x02, 0x02, 0x00, 0x00}, // disable g 2  
    {0x2036, &op_disable,	  6, 255, 255, 0x03, 0x02, 0x00, 0x00}, // disable g 3  
    {0x2046, &op_disable,	  6, 255, 255, 0x04, 0x02, 0x00, 0x00}, // disable g 4  
    {0x2056, &op_disable,	  6, 255, 255, 0x05, 0x02, 0x00, 0x00}, // disable g 5  
    {0x2066, &op_disable,	  6, 255, 255, 0x06, 0x02, 0x00, 0x00}, // disable g 6  
    {0x2076, &op_disable,	  6, 255, 255, 0x07, 0x02, 0x00, 0x00}, // disable g 7  
    {0x2086, &op_disable,	  6, 255, 255, 0x08, 0x02, 0x00, 0x00}, // disable g 8  
    {0x2096, &op_disable,	  6, 255, 255, 0x09, 0x02, 0x00, 0x00}, // disable g 9  
    {0x20a6, &op_disable,	  6, 255, 255, 0x0a, 0x02, 0x00, 0x00}, // disable g 10  
    {0x20b6, &op_disable,	  6, 255, 255, 0x0b, 0x02, 0x00, 0x00}, // disable g 11  
    {0x20c6, &op_disable,	  6, 255, 255, 0x0c, 0x02, 0x00, 0x00}, // disable g 12  
    {0x20d6, &op_disable,	  6, 255, 255, 0x0d, 0x02, 0x00, 0x00}, // disable g 13  
    {0x20e6, &op_disable,	  6, 255, 255, 0x0e, 0x02, 0x00, 0x00}, // disable g 14  
    {0x20f6, &op_disable,	  6, 255, 255, 0x0f, 0x02, 0x00, 0x00}, // disable g 15  
    {0x2106, &op_disable,	  6, 255, 255, 0x10, 0x02, 0x00, 0x00}, // disable g 16  
    {0x2116, &op_disable,	  6, 255, 255, 0x11, 0x02, 0x00, 0x00}, // disable g 17  
    {0x2126, &op_disable,	  6, 255, 255, 0x12, 0x02, 0x00, 0x00}, // disable g 18  
    {0x2136, &op_disable,	  6, 255, 255, 0x13, 0x02, 0x00, 0x00}, // disable g 19  
    {0x2146, &op_disable,	  6, 255, 255, 0x14, 0x02, 0x00, 0x00}, // disable g 20  
    {0x2156, &op_disable,	  6, 255, 255, 0x15, 0x02, 0x00, 0x00}, // disable g 21  
    {0x2166, &op_disable,	  6, 255, 255, 0x16, 0x02, 0x00, 0x00}, // disable g 22  
    {0x2176, &op_disable,	  6, 255, 255, 0x17, 0x02, 0x00, 0x00}, // disable g 23  
    {0x2186, &op_disable,	  6, 255, 255, 0x18, 0x02, 0x00, 0x00}, // disable g 24  
    {0x2196, &op_disable,	  6, 255, 255, 0x19, 0x02, 0x00, 0x00}, // disable g 25  
    {0x21a6, &op_disable,	  6, 255, 255, 0x1a, 0x02, 0x00, 0x00}, // disable g 26  
    {0x21b6, &op_disable,	  6, 255, 255, 0x1b, 0x02, 0x00, 0x00}, // disable g 27  
    {0x21c6, &op_disable,	  6, 255, 255, 0x1c, 0x02, 0x00, 0x00}, // disable g 28  
    {0x21d6, &op_disable,	  6, 255, 255, 0x1d, 0x02, 0x00, 0x00}, // disable g 29  
    {0x21e6, &op_disable,	  6, 255, 255, 0x1e, 0x02, 0x00, 0x00}, // disable g 30  
    {0x21f6, &op_disable,	  6, 255, 255, 0x1f, 0x02, 0x00, 0x00}, // disable g 31  
    {0x2206, &op_disable,	  6, 255, 255, 0x20, 0x02, 0x00, 0x00}, // disable g 32  
    {0x2216, &op_disable,	  6, 255, 255, 0x21, 0x02, 0x00, 0x00}, // disable g 33  
    {0x2226, &op_disable,	  6, 255, 255, 0x22, 0x02, 0x00, 0x00}, // disable g 34  
    {0x2236, &op_disable,	  6, 255, 255, 0x23, 0x02, 0x00, 0x00}, // disable g 35  
    {0x2246, &op_disable,	  6, 255, 255, 0x24, 0x02, 0x00, 0x00}, // disable g 36  
    {0x2256, &op_disable,	  6, 255, 255, 0x25, 0x02, 0x00, 0x00}, // disable g 37  
    {0x2266, &op_disable,	  6, 255, 255, 0x26, 0x02, 0x00, 0x00}, // disable g 38  
    {0x2276, &op_disable,	  6, 255, 255, 0x27, 0x02, 0x00, 0x00}, // disable g 39  
    {0x2286, &op_disable,	  6, 255, 255, 0x28, 0x02, 0x00, 0x00}, // disable g 40  
    {0x2296, &op_disable,	  6, 255, 255, 0x29, 0x02, 0x00, 0x00}, // disable g 41  
    {0x22a6, &op_disable,	  6, 255, 255, 0x2a, 0x02, 0x00, 0x00}, // disable g 42  
    {0x22b6, &op_disable,	  6, 255, 255, 0x2b, 0x02, 0x00, 0x00}, // disable g 43  
    {0x22c6, &op_disable,	  6, 255, 255, 0x2c, 0x02, 0x00, 0x00}, // disable g 44  
    {0x22d6, &op_disable,	  6, 255, 255, 0x2d, 0x02, 0x00, 0x00}, // disable g 45  
    {0x22e6, &op_disable,	  6, 255, 255, 0x2e, 0x02, 0x00, 0x00}, // disable g 46  
    {0x22f6, &op_disable,	  6, 255, 255, 0x2f, 0x02, 0x00, 0x00}, // disable g 47  
    {0x2306, &op_disable,	  6, 255, 255, 0x30, 0x02, 0x00, 0x00}, // disable g 48  
    {0x2316, &op_disable,	  6, 255, 255, 0x31, 0x02, 0x00, 0x00}, // disable g 49  
    {0x2326, &op_disable,	  6, 255, 255, 0x32, 0x02, 0x00, 0x00}, // disable g 50  
    {0x2336, &op_disable,	  6, 255, 255, 0x33, 0x02, 0x00, 0x00}, // disable g 51  
    {0x2346, &op_disable,	  6, 255, 255, 0x34, 0x02, 0x00, 0x00}, // disable g 52  
    {0x2356, &op_disable,	  6, 255, 255, 0x35, 0x02, 0x00, 0x00}, // disable g 53  
    {0x2366, &op_disable,	  6, 255, 255, 0x36, 0x02, 0x00, 0x00}, // disable g 54  
    {0x2376, &op_disable,	  6, 255, 255, 0x37, 0x02, 0x00, 0x00}, // disable g 55  
    {0x2386, &op_disable,	  6, 255, 255, 0x38, 0x02, 0x00, 0x00}, // disable g 56  
    {0x2396, &op_disable,	  6, 255, 255, 0x39, 0x02, 0x00, 0x00}, // disable g 57  
    {0x23a6, &op_disable,	  6, 255, 255, 0x3a, 0x02, 0x00, 0x00}, // disable g 58  
    {0x23b6, &op_disable,	  6, 255, 255, 0x3b, 0x02, 0x00, 0x00}, // disable g 59  
    {0x23c6, &op_disable,	  6, 255, 255, 0x3c, 0x02, 0x00, 0x00}, // disable g 60  
    {0x23d6, &op_disable,	  6, 255, 255, 0x3d, 0x02, 0x00, 0x00}, // disable g 61  
    {0x23e6, &op_disable,	  6, 255, 255, 0x3e, 0x02, 0x00, 0x00}, // disable g 62  
    {0x23f6, &op_disable,	  6, 255, 255, 0x3f, 0x02, 0x00, 0x00}, // disable g 63  
    {0x2007, &op_disable,	  7, 255, 255, 0x00, 0x02, 0x00, 0x00}, // disable h 0  
    {0x2017, &op_disable,	  7, 255, 255, 0x01, 0x02, 0x00, 0x00}, // disable h 1  
    {0x2027, &op_disable,	  7, 255, 255, 0x02, 0x02, 0x00, 0x00}, // disable h 2  
    {0x2037, &op_disable,	  7, 255, 255, 0x03, 0x02, 0x00, 0x00}, // disable h 3  
    {0x2047, &op_disable,	  7, 255, 255, 0x04, 0x02, 0x00, 0x00}, // disable h 4  
    {0x2057, &op_disable,	  7, 255, 255, 0x05, 0x02, 0x00, 0x00}, // disable h 5  
    {0x2067, &op_disable,	  7, 255, 255, 0x06, 0x02, 0x00, 0x00}, // disable h 6  
    {0x2077, &op_disable,	  7, 255, 255, 0x07, 0x02, 0x00, 0x00}, // disable h 7  
    {0x2087, &op_disable,	  7, 255, 255, 0x08, 0x02, 0x00, 0x00}, // disable h 8  
    {0x2097, &op_disable,	  7, 255, 255, 0x09, 0x02, 0x00, 0x00}, // disable h 9  
    {0x20a7, &op_disable,	  7, 255, 255, 0x0a, 0x02, 0x00, 0x00}, // disable h 10  
    {0x20b7, &op_disable,	  7, 255, 255, 0x0b, 0x02, 0x00, 0x00}, // disable h 11  
    {0x20c7, &op_disable,	  7, 255, 255, 0x0c, 0x02, 0x00, 0x00}, // disable h 12  
    {0x20d7, &op_disable,	  7, 255, 255, 0x0d, 0x02, 0x00, 0x00}, // disable h 13  
    {0x20e7, &op_disable,	  7, 255, 255, 0x0e, 0x02, 0x00, 0x00}, // disable h 14  
    {0x20f7, &op_disable,	  7, 255, 255, 0x0f, 0x02, 0x00, 0x00}, // disable h 15  
    {0x2107, &op_disable,	  7, 255, 255, 0x10, 0x02, 0x00, 0x00}, // disable h 16  
    {0x2117, &op_disable,	  7, 255, 255, 0x11, 0x02, 0x00, 0x00}, // disable h 17  
    {0x2127, &op_disable,	  7, 255, 255, 0x12, 0x02, 0x00, 0x00}, // disable h 18  
    {0x2137, &op_disable,	  7, 255, 255, 0x13, 0x02, 0x00, 0x00}, // disable h 19  
    {0x2147, &op_disable,	  7, 255, 255, 0x14, 0x02, 0x00, 0x00}, // disable h 20  
    {0x2157, &op_disable,	  7, 255, 255, 0x15, 0x02, 0x00, 0x00}, // disable h 21  
    {0x2167, &op_disable,	  7, 255, 255, 0x16, 0x02, 0x00, 0x00}, // disable h 22  
    {0x2177, &op_disable,	  7, 255, 255, 0x17, 0x02, 0x00, 0x00}, // disable h 23  
    {0x2187, &op_disable,	  7, 255, 255, 0x18, 0x02, 0x00, 0x00}, // disable h 24  
    {0x2197, &op_disable,	  7, 255, 255, 0x19, 0x02, 0x00, 0x00}, // disable h 25  
    {0x21a7, &op_disable,	  7, 255, 255, 0x1a, 0x02, 0x00, 0x00}, // disable h 26  
    {0x21b7, &op_disable,	  7, 255, 255, 0x1b, 0x02, 0x00, 0x00}, // disable h 27  
    {0x21c7, &op_disable,	  7, 255, 255, 0x1c, 0x02, 0x00, 0x00}, // disable h 28  
    {0x21d7, &op_disable,	  7, 255, 255, 0x1d, 0x02, 0x00, 0x00}, // disable h 29  
    {0x21e7, &op_disable,	  7, 255, 255, 0x1e, 0x02, 0x00, 0x00}, // disable h 30  
    {0x21f7, &op_disable,	  7, 255, 255, 0x1f, 0x02, 0x00, 0x00}, // disable h 31  
    {0x2207, &op_disable,	  7, 255, 255, 0x20, 0x02, 0x00, 0x00}, // disable h 32  
    {0x2217, &op_disable,	  7, 255, 255, 0x21, 0x02, 0x00, 0x00}, // disable h 33  
    {0x2227, &op_disable,	  7, 255, 255, 0x22, 0x02, 0x00, 0x00}, // disable h 34  
    {0x2237, &op_disable,	  7, 255, 255, 0x23, 0x02, 0x00, 0x00}, // disable h 35  
    {0x2247, &op_disable,	  7, 255, 255, 0x24, 0x02, 0x00, 0x00}, // disable h 36  
    {0x2257, &op_disable,	  7, 255, 255, 0x25, 0x02, 0x00, 0x00}, // disable h 37  
    {0x2267, &op_disable,	  7, 255, 255, 0x26, 0x02, 0x00, 0x00}, // disable h 38  
    {0x2277, &op_disable,	  7, 255, 255, 0x27, 0x02, 0x00, 0x00}, // disable h 39  
    {0x2287, &op_disable,	  7, 255, 255, 0x28, 0x02, 0x00, 0x00}, // disable h 40  
    {0x2297, &op_disable,	  7, 255, 255, 0x29, 0x02, 0x00, 0x00}, // disable h 41  
    {0x22a7, &op_disable,	  7, 255, 255, 0x2a, 0x02, 0x00, 0x00}, // disable h 42  
    {0x22b7, &op_disable,	  7, 255, 255, 0x2b, 0x02, 0x00, 0x00}, // disable h 43  
    {0x22c7, &op_disable,	  7, 255, 255, 0x2c, 0x02, 0x00, 0x00}, // disable h 44  
    {0x22d7, &op_disable,	  7, 255, 255, 0x2d, 0x02, 0x00, 0x00}, // disable h 45  
    {0x22e7, &op_disable,	  7, 255, 255, 0x2e, 0x02, 0x00, 0x00}, // disable h 46  
    {0x22f7, &op_disable,	  7, 255, 255, 0x2f, 0x02, 0x00, 0x00}, // disable h 47  
    {0x2307, &op_disable,	  7, 255, 255, 0x30, 0x02, 0x00, 0x00}, // disable h 48  
    {0x2317, &op_disable,	  7, 255, 255, 0x31, 0x02, 0x00, 0x00}, // disable h 49  
    {0x2327, &op_disable,	  7, 255, 255, 0x32, 0x02, 0x00, 0x00}, // disable h 50  
    {0x2337, &op_disable,	  7, 255, 255, 0x33, 0x02, 0x00, 0x00}, // disable h 51  
    {0x2347, &op_disable,	  7, 255, 255, 0x34, 0x02, 0x00, 0x00}, // disable h 52  
    {0x2357, &op_disable,	  7, 255, 255, 0x35, 0x02, 0x00, 0x00}, // disable h 53  
    {0x2367, &op_disable,	  7, 255, 255, 0x36, 0x02, 0x00, 0x00}, // disable h 54  
    {0x2377, &op_disable,	  7, 255, 255, 0x37, 0x02, 0x00, 0x00}, // disable h 55  
    {0x2387, &op_disable,	  7, 255, 255, 0x38, 0x02, 0x00, 0x00}, // disable h 56  
    {0x2397, &op_disable,	  7, 255, 255, 0x39, 0x02, 0x00, 0x00}, // disable h 57  
    {0x23a7, &op_disable,	  7, 255, 255, 0x3a, 0x02, 0x00, 0x00}, // disable h 58  
    {0x23b7, &op_disable,	  7, 255, 255, 0x3b, 0x02, 0x00, 0x00}, // disable h 59  
    {0x23c7, &op_disable,	  7, 255, 255, 0x3c, 0x02, 0x00, 0x00}, // disable h 60  
    {0x23d7, &op_disable,	  7, 255, 255, 0x3d, 0x02, 0x00, 0x00}, // disable h 61  
    {0x23e7, &op_disable,	  7, 255, 255, 0x3e, 0x02, 0x00, 0x00}, // disable h 62  
    {0x23f7, &op_disable,	  7, 255, 255, 0x3f, 0x02, 0x00, 0x00}, // disable h 63  
    {0x2008, &op_disable,	  8, 255, 255, 0x00, 0x02, 0x00, 0x00}, // disable pc 0  
    {0x2018, &op_disable,	  8, 255, 255, 0x01, 0x02, 0x00, 0x00}, // disable pc 1  
    {0x2028, &op_disable,	  8, 255, 255, 0x02, 0x02, 0x00, 0x00}, // disable pc 2  
    {0x2038, &op_disable,	  8, 255, 255, 0x03, 0x02, 0x00, 0x00}, // disable pc 3  
    {0x2048, &op_disable,	  8, 255, 255, 0x04, 0x02, 0x00, 0x00}, // disable pc 4  
    {0x2058, &op_disable,	  8, 255, 255, 0x05, 0x02, 0x00, 0x00}, // disable pc 5  
    {0x2068, &op_disable,	  8, 255, 255, 0x06, 0x02, 0x00, 0x00}, // disable pc 6  
    {0x2078, &op_disable,	  8, 255, 255, 0x07, 0x02, 0x00, 0x00}, // disable pc 7  
    {0x2088, &op_disable,	  8, 255, 255, 0x08, 0x02, 0x00, 0x00}, // disable pc 8  
    {0x2098, &op_disable,	  8, 255, 255, 0x09, 0x02, 0x00, 0x00}, // disable pc 9  
    {0x20a8, &op_disable,	  8, 255, 255, 0x0a, 0x02, 0x00, 0x00}, // disable pc 10  
    {0x20b8, &op_disable,	  8, 255, 255, 0x0b, 0x02, 0x00, 0x00}, // disable pc 11  
    {0x20c8, &op_disable,	  8, 255, 255, 0x0c, 0x02, 0x00, 0x00}, // disable pc 12  
    {0x20d8, &op_disable,	  8, 255, 255, 0x0d, 0x02, 0x00, 0x00}, // disable pc 13  
    {0x20e8, &op_disable,	  8, 255, 255, 0x0e, 0x02, 0x00, 0x00}, // disable pc 14  
    {0x20f8, &op_disable,	  8, 255, 255, 0x0f, 0x02, 0x00, 0x00}, // disable pc 15  
    {0x2108, &op_disable,	  8, 255, 255, 0x10, 0x02, 0x00, 0x00}, // disable pc 16  
    {0x2118, &op_disable,	  8, 255, 255, 0x11, 0x02, 0x00, 0x00}, // disable pc 17  
    {0x2128, &op_disable,	  8, 255, 255, 0x12, 0x02, 0x00, 0x00}, // disable pc 18  
    {0x2138, &op_disable,	  8, 255, 255, 0x13, 0x02, 0x00, 0x00}, // disable pc 19  
    {0x2148, &op_disable,	  8, 255, 255, 0x14, 0x02, 0x00, 0x00}, // disable pc 20  
    {0x2158, &op_disable,	  8, 255, 255, 0x15, 0x02, 0x00, 0x00}, // disable pc 21  
    {0x2168, &op_disable,	  8, 255, 255, 0x16, 0x02, 0x00, 0x00}, // disable pc 22  
    {0x2178, &op_disable,	  8, 255, 255, 0x17, 0x02, 0x00, 0x00}, // disable pc 23  
    {0x2188, &op_disable,	  8, 255, 255, 0x18, 0x02, 0x00, 0x00}, // disable pc 24  
    {0x2198, &op_disable,	  8, 255, 255, 0x19, 0x02, 0x00, 0x00}, // disable pc 25  
    {0x21a8, &op_disable,	  8, 255, 255, 0x1a, 0x02, 0x00, 0x00}, // disable pc 26  
    {0x21b8, &op_disable,	  8, 255, 255, 0x1b, 0x02, 0x00, 0x00}, // disable pc 27  
    {0x21c8, &op_disable,	  8, 255, 255, 0x1c, 0x02, 0x00, 0x00}, // disable pc 28  
    {0x21d8, &op_disable,	  8, 255, 255, 0x1d, 0x02, 0x00, 0x00}, // disable pc 29  
    {0x21e8, &op_disable,	  8, 255, 255, 0x1e, 0x02, 0x00, 0x00}, // disable pc 30  
    {0x21f8, &op_disable,	  8, 255, 255, 0x1f, 0x02, 0x00, 0x00}, // disable pc 31  
    {0x2208, &op_disable,	  8, 255, 255, 0x20, 0x02, 0x00, 0x00}, // disable pc 32  
    {0x2218, &op_disable,	  8, 255, 255, 0x21, 0x02, 0x00, 0x00}, // disable pc 33  
    {0x2228, &op_disable,	  8, 255, 255, 0x22, 0x02, 0x00, 0x00}, // disable pc 34  
    {0x2238, &op_disable,	  8, 255, 255, 0x23, 0x02, 0x00, 0x00}, // disable pc 35  
    {0x2248, &op_disable,	  8, 255, 255, 0x24, 0x02, 0x00, 0x00}, // disable pc 36  
    {0x2258, &op_disable,	  8, 255, 255, 0x25, 0x02, 0x00, 0x00}, // disable pc 37  
    {0x2268, &op_disable,	  8, 255, 255, 0x26, 0x02, 0x00, 0x00}, // disable pc 38  
    {0x2278, &op_disable,	  8, 255, 255, 0x27, 0x02, 0x00, 0x00}, // disable pc 39  
    {0x2288, &op_disable,	  8, 255, 255, 0x28, 0x02, 0x00, 0x00}, // disable pc 40  
    {0x2298, &op_disable,	  8, 255, 255, 0x29, 0x02, 0x00, 0x00}, // disable pc 41  
    {0x22a8, &op_disable,	  8, 255, 255, 0x2a, 0x02, 0x00, 0x00}, // disable pc 42  
    {0x22b8, &op_disable,	  8, 255, 255, 0x2b, 0x02, 0x00, 0x00}, // disable pc 43  
    {0x22c8, &op_disable,	  8, 255, 255, 0x2c, 0x02, 0x00, 0x00}, // disable pc 44  
    {0x22d8, &op_disable,	  8, 255, 255, 0x2d, 0x02, 0x00, 0x00}, // disable pc 45  
    {0x22e8, &op_disable,	  8, 255, 255, 0x2e, 0x02, 0x00, 0x00}, // disable pc 46  
    {0x22f8, &op_disable,	  8, 255, 255, 0x2f, 0x02, 0x00, 0x00}, // disable pc 47  
    {0x2308, &op_disable,	  8, 255, 255, 0x30, 0x02, 0x00, 0x00}, // disable pc 48  
    {0x2318, &op_disable,	  8, 255, 255, 0x31, 0x02, 0x00, 0x00}, // disable pc 49  
    {0x2328, &op_disable,	  8, 255, 255, 0x32, 0x02, 0x00, 0x00}, // disable pc 50  
    {0x2338, &op_disable,	  8, 255, 255, 0x33, 0x02, 0x00, 0x00}, // disable pc 51  
    {0x2348, &op_disable,	  8, 255, 255, 0x34, 0x02, 0x00, 0x00}, // disable pc 52  
    {0x2358, &op_disable,	  8, 255, 255, 0x35, 0x02, 0x00, 0x00}, // disable pc 53  
    {0x2368, &op_disable,	  8, 255, 255, 0x36, 0x02, 0x00, 0x00}, // disable pc 54  
    {0x2378, &op_disable,	  8, 255, 255, 0x37, 0x02, 0x00, 0x00}, // disable pc 55  
    {0x2388, &op_disable,	  8, 255, 255, 0x38, 0x02, 0x00, 0x00}, // disable pc 56  
    {0x2398, &op_disable,	  8, 255, 255, 0x39, 0x02, 0x00, 0x00}, // disable pc 57  
    {0x23a8, &op_disable,	  8, 255, 255, 0x3a, 0x02, 0x00, 0x00}, // disable pc 58  
    {0x23b8, &op_disable,	  8, 255, 255, 0x3b, 0x02, 0x00, 0x00}, // disable pc 59  
    {0x23c8, &op_disable,	  8, 255, 255, 0x3c, 0x02, 0x00, 0x00}, // disable pc 60  
    {0x23d8, &op_disable,	  8, 255, 255, 0x3d, 0x02, 0x00, 0x00}, // disable pc 61  
    {0x23e8, &op_disable,	  8, 255, 255, 0x3e, 0x02, 0x00, 0x00}, // disable pc 62  
    {0x23f8, &op_disable,	  8, 255, 255, 0x3f, 0x02, 0x00, 0x00}, // disable pc 63  
    {0x2009, &op_disable,	  9, 255, 255, 0x00, 0x02, 0x00, 0x00}, // disable ra 0  
    {0x2019, &op_disable,	  9, 255, 255, 0x01, 0x02, 0x00, 0x00}, // disable ra 1  
    {0x2029, &op_disable,	  9, 255, 255, 0x02, 0x02, 0x00, 0x00}, // disable ra 2  
    {0x2039, &op_disable,	  9, 255, 255, 0x03, 0x02, 0x00, 0x00}, // disable ra 3  
    {0x2049, &op_disable,	  9, 255, 255, 0x04, 0x02, 0x00, 0x00}, // disable ra 4  
    {0x2059, &op_disable,	  9, 255, 255, 0x05, 0x02, 0x00, 0x00}, // disable ra 5  
    {0x2069, &op_disable,	  9, 255, 255, 0x06, 0x02, 0x00, 0x00}, // disable ra 6  
    {0x2079, &op_disable,	  9, 255, 255, 0x07, 0x02, 0x00, 0x00}, // disable ra 7  
    {0x2089, &op_disable,	  9, 255, 255, 0x08, 0x02, 0x00, 0x00}, // disable ra 8  
    {0x2099, &op_disable,	  9, 255, 255, 0x09, 0x02, 0x00, 0x00}, // disable ra 9  
    {0x20a9, &op_disable,	  9, 255, 255, 0x0a, 0x02, 0x00, 0x00}, // disable ra 10  
    {0x20b9, &op_disable,	  9, 255, 255, 0x0b, 0x02, 0x00, 0x00}, // disable ra 11  
    {0x20c9, &op_disable,	  9, 255, 255, 0x0c, 0x02, 0x00, 0x00}, // disable ra 12  
    {0x20d9, &op_disable,	  9, 255, 255, 0x0d, 0x02, 0x00, 0x00}, // disable ra 13  
    {0x20e9, &op_disable,	  9, 255, 255, 0x0e, 0x02, 0x00, 0x00}, // disable ra 14  
    {0x20f9, &op_disable,	  9, 255, 255, 0x0f, 0x02, 0x00, 0x00}, // disable ra 15  
    {0x2109, &op_disable,	  9, 255, 255, 0x10, 0x02, 0x00, 0x00}, // disable ra 16  
    {0x2119, &op_disable,	  9, 255, 255, 0x11, 0x02, 0x00, 0x00}, // disable ra 17  
    {0x2129, &op_disable,	  9, 255, 255, 0x12, 0x02, 0x00, 0x00}, // disable ra 18  
    {0x2139, &op_disable,	  9, 255, 255, 0x13, 0x02, 0x00, 0x00}, // disable ra 19  
    {0x2149, &op_disable,	  9, 255, 255, 0x14, 0x02, 0x00, 0x00}, // disable ra 20  
    {0x2159, &op_disable,	  9, 255, 255, 0x15, 0x02, 0x00, 0x00}, // disable ra 21  
    {0x2169, &op_disable,	  9, 255, 255, 0x16, 0x02, 0x00, 0x00}, // disable ra 22  
    {0x2179, &op_disable,	  9, 255, 255, 0x17, 0x02, 0x00, 0x00}, // disable ra 23  
    {0x2189, &op_disable,	  9, 255, 255, 0x18, 0x02, 0x00, 0x00}, // disable ra 24  
    {0x2199, &op_disable,	  9, 255, 255, 0x19, 0x02, 0x00, 0x00}, // disable ra 25  
    {0x21a9, &op_disable,	  9, 255, 255, 0x1a, 0x02, 0x00, 0x00}, // disable ra 26  
    {0x21b9, &op_disable,	  9, 255, 255, 0x1b, 0x02, 0x00, 0x00}, // disable ra 27  
    {0x21c9, &op_disable,	  9, 255, 255, 0x1c, 0x02, 0x00, 0x00}, // disable ra 28  
    {0x21d9, &op_disable,	  9, 255, 255, 0x1d, 0x02, 0x00, 0x00}, // disable ra 29  
    {0x21e9, &op_disable,	  9, 255, 255, 0x1e, 0x02, 0x00, 0x00}, // disable ra 30  
    {0x21f9, &op_disable,	  9, 255, 255, 0x1f, 0x02, 0x00, 0x00}, // disable ra 31  
    {0x2209, &op_disable,	  9, 255, 255, 0x20, 0x02, 0x00, 0x00}, // disable ra 32  
    {0x2219, &op_disable,	  9, 255, 255, 0x21, 0x02, 0x00, 0x00}, // disable ra 33  
    {0x2229, &op_disable,	  9, 255, 255, 0x22, 0x02, 0x00, 0x00}, // disable ra 34  
    {0x2239, &op_disable,	  9, 255, 255, 0x23, 0x02, 0x00, 0x00}, // disable ra 35  
    {0x2249, &op_disable,	  9, 255, 255, 0x24, 0x02, 0x00, 0x00}, // disable ra 36  
    {0x2259, &op_disable,	  9, 255, 255, 0x25, 0x02, 0x00, 0x00}, // disable ra 37  
    {0x2269, &op_disable,	  9, 255, 255, 0x26, 0x02, 0x00, 0x00}, // disable ra 38  
    {0x2279, &op_disable,	  9, 255, 255, 0x27, 0x02, 0x00, 0x00}, // disable ra 39  
    {0x2289, &op_disable,	  9, 255, 255, 0x28, 0x02, 0x00, 0x00}, // disable ra 40  
    {0x2299, &op_disable,	  9, 255, 255, 0x29, 0x02, 0x00, 0x00}, // disable ra 41  
    {0x22a9, &op_disable,	  9, 255, 255, 0x2a, 0x02, 0x00, 0x00}, // disable ra 42  
    {0x22b9, &op_disable,	  9, 255, 255, 0x2b, 0x02, 0x00, 0x00}, // disable ra 43  
    {0x22c9, &op_disable,	  9, 255, 255, 0x2c, 0x02, 0x00, 0x00}, // disable ra 44  
    {0x22d9, &op_disable,	  9, 255, 255, 0x2d, 0x02, 0x00, 0x00}, // disable ra 45  
    {0x22e9, &op_disable,	  9, 255, 255, 0x2e, 0x02, 0x00, 0x00}, // disable ra 46  
    {0x22f9, &op_disable,	  9, 255, 255, 0x2f, 0x02, 0x00, 0x00}, // disable ra 47  
    {0x2309, &op_disable,	  9, 255, 255, 0x30, 0x02, 0x00, 0x00}, // disable ra 48  
    {0x2319, &op_disable,	  9, 255, 255, 0x31, 0x02, 0x00, 0x00}, // disable ra 49  
    {0x2329, &op_disable,	  9, 255, 255, 0x32, 0x02, 0x00, 0x00}, // disable ra 50  
    {0x2339, &op_disable,	  9, 255, 255, 0x33, 0x02, 0x00, 0x00}, // disable ra 51  
    {0x2349, &op_disable,	  9, 255, 255, 0x34, 0x02, 0x00, 0x00}, // disable ra 52  
    {0x2359, &op_disable,	  9, 255, 255, 0x35, 0x02, 0x00, 0x00}, // disable ra 53  
    {0x2369, &op_disable,	  9, 255, 255, 0x36, 0x02, 0x00, 0x00}, // disable ra 54  
    {0x2379, &op_disable,	  9, 255, 255, 0x37, 0x02, 0x00, 0x00}, // disable ra 55  
    {0x2389, &op_disable,	  9, 255, 255, 0x38, 0x02, 0x00, 0x00}, // disable ra 56  
    {0x2399, &op_disable,	  9, 255, 255, 0x39, 0x02, 0x00, 0x00}, // disable ra 57  
    {0x23a9, &op_disable,	  9, 255, 255, 0x3a, 0x02, 0x00, 0x00}, // disable ra 58  
    {0x23b9, &op_disable,	  9, 255, 255, 0x3b, 0x02, 0x00, 0x00}, // disable ra 59  
    {0x23c9, &op_disable,	  9, 255, 255, 0x3c, 0x02, 0x00, 0x00}, // disable ra 60  
    {0x23d9, &op_disable,	  9, 255, 255, 0x3d, 0x02, 0x00, 0x00}, // disable ra 61  
    {0x23e9, &op_disable,	  9, 255, 255, 0x3e, 0x02, 0x00, 0x00}, // disable ra 62  
    {0x23f9, &op_disable,	  9, 255, 255, 0x3f, 0x02, 0x00, 0x00}, // disable ra 63  
    {0x200a, &op_disable,	 10, 255, 255, 0x00, 0x02, 0x00, 0x00}, // disable sb 0  
    {0x201a, &op_disable,	 10, 255, 255, 0x01, 0x02, 0x00, 0x00}, // disable sb 1  
    {0x202a, &op_disable,	 10, 255, 255, 0x02, 0x02, 0x00, 0x00}, // disable sb 2  
    {0x203a, &op_disable,	 10, 255, 255, 0x03, 0x02, 0x00, 0x00}, // disable sb 3  
    {0x204a, &op_disable,	 10, 255, 255, 0x04, 0x02, 0x00, 0x00}, // disable sb 4  
    {0x205a, &op_disable,	 10, 255, 255, 0x05, 0x02, 0x00, 0x00}, // disable sb 5  
    {0x206a, &op_disable,	 10, 255, 255, 0x06, 0x02, 0x00, 0x00}, // disable sb 6  
    {0x207a, &op_disable,	 10, 255, 255, 0x07, 0x02, 0x00, 0x00}, // disable sb 7  
    {0x208a, &op_disable,	 10, 255, 255, 0x08, 0x02, 0x00, 0x00}, // disable sb 8  
    {0x209a, &op_disable,	 10, 255, 255, 0x09, 0x02, 0x00, 0x00}, // disable sb 9  
    {0x20aa, &op_disable,	 10, 255, 255, 0x0a, 0x02, 0x00, 0x00}, // disable sb 10  
    {0x20ba, &op_disable,	 10, 255, 255, 0x0b, 0x02, 0x00, 0x00}, // disable sb 11  
    {0x20ca, &op_disable,	 10, 255, 255, 0x0c, 0x02, 0x00, 0x00}, // disable sb 12  
    {0x20da, &op_disable,	 10, 255, 255, 0x0d, 0x02, 0x00, 0x00}, // disable sb 13  
    {0x20ea, &op_disable,	 10, 255, 255, 0x0e, 0x02, 0x00, 0x00}, // disable sb 14  
    {0x20fa, &op_disable,	 10, 255, 255, 0x0f, 0x02, 0x00, 0x00}, // disable sb 15  
    {0x210a, &op_disable,	 10, 255, 255, 0x10, 0x02, 0x00, 0x00}, // disable sb 16  
    {0x211a, &op_disable,	 10, 255, 255, 0x11, 0x02, 0x00, 0x00}, // disable sb 17  
    {0x212a, &op_disable,	 10, 255, 255, 0x12, 0x02, 0x00, 0x00}, // disable sb 18  
    {0x213a, &op_disable,	 10, 255, 255, 0x13, 0x02, 0x00, 0x00}, // disable sb 19  
    {0x214a, &op_disable,	 10, 255, 255, 0x14, 0x02, 0x00, 0x00}, // disable sb 20  
    {0x215a, &op_disable,	 10, 255, 255, 0x15, 0x02, 0x00, 0x00}, // disable sb 21  
    {0x216a, &op_disable,	 10, 255, 255, 0x16, 0x02, 0x00, 0x00}, // disable sb 22  
    {0x217a, &op_disable,	 10, 255, 255, 0x17, 0x02, 0x00, 0x00}, // disable sb 23  
    {0x218a, &op_disable,	 10, 255, 255, 0x18, 0x02, 0x00, 0x00}, // disable sb 24  
    {0x219a, &op_disable,	 10, 255, 255, 0x19, 0x02, 0x00, 0x00}, // disable sb 25  
    {0x21aa, &op_disable,	 10, 255, 255, 0x1a, 0x02, 0x00, 0x00}, // disable sb 26  
    {0x21ba, &op_disable,	 10, 255, 255, 0x1b, 0x02, 0x00, 0x00}, // disable sb 27  
    {0x21ca, &op_disable,	 10, 255, 255, 0x1c, 0x02, 0x00, 0x00}, // disable sb 28  
    {0x21da, &op_disable,	 10, 255, 255, 0x1d, 0x02, 0x00, 0x00}, // disable sb 29  
    {0x21ea, &op_disable,	 10, 255, 255, 0x1e, 0x02, 0x00, 0x00}, // disable sb 30  
    {0x21fa, &op_disable,	 10, 255, 255, 0x1f, 0x02, 0x00, 0x00}, // disable sb 31  
    {0x220a, &op_disable,	 10, 255, 255, 0x20, 0x02, 0x00, 0x00}, // disable sb 32  
    {0x221a, &op_disable,	 10, 255, 255, 0x21, 0x02, 0x00, 0x00}, // disable sb 33  
    {0x222a, &op_disable,	 10, 255, 255, 0x22, 0x02, 0x00, 0x00}, // disable sb 34  
    {0x223a, &op_disable,	 10, 255, 255, 0x23, 0x02, 0x00, 0x00}, // disable sb 35  
    {0x224a, &op_disable,	 10, 255, 255, 0x24, 0x02, 0x00, 0x00}, // disable sb 36  
    {0x225a, &op_disable,	 10, 255, 255, 0x25, 0x02, 0x00, 0x00}, // disable sb 37  
    {0x226a, &op_disable,	 10, 255, 255, 0x26, 0x02, 0x00, 0x00}, // disable sb 38  
    {0x227a, &op_disable,	 10, 255, 255, 0x27, 0x02, 0x00, 0x00}, // disable sb 39  
    {0x228a, &op_disable,	 10, 255, 255, 0x28, 0x02, 0x00, 0x00}, // disable sb 40  
    {0x229a, &op_disable,	 10, 255, 255, 0x29, 0x02, 0x00, 0x00}, // disable sb 41  
    {0x22aa, &op_disable,	 10, 255, 255, 0x2a, 0x02, 0x00, 0x00}, // disable sb 42  
    {0x22ba, &op_disable,	 10, 255, 255, 0x2b, 0x02, 0x00, 0x00}, // disable sb 43  
    {0x22ca, &op_disable,	 10, 255, 255, 0x2c, 0x02, 0x00, 0x00}, // disable sb 44  
    {0x22da, &op_disable,	 10, 255, 255, 0x2d, 0x02, 0x00, 0x00}, // disable sb 45  
    {0x22ea, &op_disable,	 10, 255, 255, 0x2e, 0x02, 0x00, 0x00}, // disable sb 46  
    {0x22fa, &op_disable,	 10, 255, 255, 0x2f, 0x02, 0x00, 0x00}, // disable sb 47  
    {0x230a, &op_disable,	 10, 255, 255, 0x30, 0x02, 0x00, 0x00}, // disable sb 48  
    {0x231a, &op_disable,	 10, 255, 255, 0x31, 0x02, 0x00, 0x00}, // disable sb 49  
    {0x232a, &op_disable,	 10, 255, 255, 0x32, 0x02, 0x00, 0x00}, // disable sb 50  
    {0x233a, &op_disable,	 10, 255, 255, 0x33, 0x02, 0x00, 0x00}, // disable sb 51  
    {0x234a, &op_disable,	 10, 255, 255, 0x34, 0x02, 0x00, 0x00}, // disable sb 52  
    {0x235a, &op_disable,	 10, 255, 255, 0x35, 0x02, 0x00, 0x00}, // disable sb 53  
    {0x236a, &op_disable,	 10, 255, 255, 0x36, 0x02, 0x00, 0x00}, // disable sb 54  
    {0x237a, &op_disable,	 10, 255, 255, 0x37, 0x02, 0x00, 0x00}, // disable sb 55  
    {0x238a, &op_disable,	 10, 255, 255, 0x38, 0x02, 0x00, 0x00}, // disable sb 56  
    {0x239a, &op_disable,	 10, 255, 255, 0x39, 0x02, 0x00, 0x00}, // disable sb 57  
    {0x23aa, &op_disable,	 10, 255, 255, 0x3a, 0x02, 0x00, 0x00}, // disable sb 58  
    {0x23ba, &op_disable,	 10, 255, 255, 0x3b, 0x02, 0x00, 0x00}, // disable sb 59  
    {0x23ca, &op_disable,	 10, 255, 255, 0x3c, 0x02, 0x00, 0x00}, // disable sb 60  
    {0x23da, &op_disable,	 10, 255, 255, 0x3d, 0x02, 0x00, 0x00}, // disable sb 61  
    {0x23ea, &op_disable,	 10, 255, 255, 0x3e, 0x02, 0x00, 0x00}, // disable sb 62  
    {0x23fa, &op_disable,	 10, 255, 255, 0x3f, 0x02, 0x00, 0x00}, // disable sb 63  
    {0x200b, &op_disable,	 11, 255, 255, 0x00, 0x02, 0x00, 0x00}, // disable sp 0  
    {0x201b, &op_disable,	 11, 255, 255, 0x01, 0x02, 0x00, 0x00}, // disable sp 1  
    {0x202b, &op_disable,	 11, 255, 255, 0x02, 0x02, 0x00, 0x00}, // disable sp 2  
    {0x203b, &op_disable,	 11, 255, 255, 0x03, 0x02, 0x00, 0x00}, // disable sp 3  
    {0x204b, &op_disable,	 11, 255, 255, 0x04, 0x02, 0x00, 0x00}, // disable sp 4  
    {0x205b, &op_disable,	 11, 255, 255, 0x05, 0x02, 0x00, 0x00}, // disable sp 5  
    {0x206b, &op_disable,	 11, 255, 255, 0x06, 0x02, 0x00, 0x00}, // disable sp 6  
    {0x207b, &op_disable,	 11, 255, 255, 0x07, 0x02, 0x00, 0x00}, // disable sp 7  
    {0x208b, &op_disable,	 11, 255, 255, 0x08, 0x02, 0x00, 0x00}, // disable sp 8  
    {0x209b, &op_disable,	 11, 255, 255, 0x09, 0x02, 0x00, 0x00}, // disable sp 9  
    {0x20ab, &op_disable,	 11, 255, 255, 0x0a, 0x02, 0x00, 0x00}, // disable sp 10  
    {0x20bb, &op_disable,	 11, 255, 255, 0x0b, 0x02, 0x00, 0x00}, // disable sp 11  
    {0x20cb, &op_disable,	 11, 255, 255, 0x0c, 0x02, 0x00, 0x00}, // disable sp 12  
    {0x20db, &op_disable,	 11, 255, 255, 0x0d, 0x02, 0x00, 0x00}, // disable sp 13  
    {0x20eb, &op_disable,	 11, 255, 255, 0x0e, 0x02, 0x00, 0x00}, // disable sp 14  
    {0x20fb, &op_disable,	 11, 255, 255, 0x0f, 0x02, 0x00, 0x00}, // disable sp 15  
    {0x210b, &op_disable,	 11, 255, 255, 0x10, 0x02, 0x00, 0x00}, // disable sp 16  
    {0x211b, &op_disable,	 11, 255, 255, 0x11, 0x02, 0x00, 0x00}, // disable sp 17  
    {0x212b, &op_disable,	 11, 255, 255, 0x12, 0x02, 0x00, 0x00}, // disable sp 18  
    {0x213b, &op_disable,	 11, 255, 255, 0x13, 0x02, 0x00, 0x00}, // disable sp 19  
    {0x214b, &op_disable,	 11, 255, 255, 0x14, 0x02, 0x00, 0x00}, // disable sp 20  
    {0x215b, &op_disable,	 11, 255, 255, 0x15, 0x02, 0x00, 0x00}, // disable sp 21  
    {0x216b, &op_disable,	 11, 255, 255, 0x16, 0x02, 0x00, 0x00}, // disable sp 22  
    {0x217b, &op_disable,	 11, 255, 255, 0x17, 0x02, 0x00, 0x00}, // disable sp 23  
    {0x218b, &op_disable,	 11, 255, 255, 0x18, 0x02, 0x00, 0x00}, // disable sp 24  
    {0x219b, &op_disable,	 11, 255, 255, 0x19, 0x02, 0x00, 0x00}, // disable sp 25  
    {0x21ab, &op_disable,	 11, 255, 255, 0x1a, 0x02, 0x00, 0x00}, // disable sp 26  
    {0x21bb, &op_disable,	 11, 255, 255, 0x1b, 0x02, 0x00, 0x00}, // disable sp 27  
    {0x21cb, &op_disable,	 11, 255, 255, 0x1c, 0x02, 0x00, 0x00}, // disable sp 28  
    {0x21db, &op_disable,	 11, 255, 255, 0x1d, 0x02, 0x00, 0x00}, // disable sp 29  
    {0x21eb, &op_disable,	 11, 255, 255, 0x1e, 0x02, 0x00, 0x00}, // disable sp 30  
    {0x21fb, &op_disable,	 11, 255, 255, 0x1f, 0x02, 0x00, 0x00}, // disable sp 31  
    {0x220b, &op_disable,	 11, 255, 255, 0x20, 0x02, 0x00, 0x00}, // disable sp 32  
    {0x221b, &op_disable,	 11, 255, 255, 0x21, 0x02, 0x00, 0x00}, // disable sp 33  
    {0x222b, &op_disable,	 11, 255, 255, 0x22, 0x02, 0x00, 0x00}, // disable sp 34  
    {0x223b, &op_disable,	 11, 255, 255, 0x23, 0x02, 0x00, 0x00}, // disable sp 35  
    {0x224b, &op_disable,	 11, 255, 255, 0x24, 0x02, 0x00, 0x00}, // disable sp 36  
    {0x225b, &op_disable,	 11, 255, 255, 0x25, 0x02, 0x00, 0x00}, // disable sp 37  
    {0x226b, &op_disable,	 11, 255, 255, 0x26, 0x02, 0x00, 0x00}, // disable sp 38  
    {0x227b, &op_disable,	 11, 255, 255, 0x27, 0x02, 0x00, 0x00}, // disable sp 39  
    {0x228b, &op_disable,	 11, 255, 255, 0x28, 0x02, 0x00, 0x00}, // disable sp 40  
    {0x229b, &op_disable,	 11, 255, 255, 0x29, 0x02, 0x00, 0x00}, // disable sp 41  
    {0x22ab, &op_disable,	 11, 255, 255, 0x2a, 0x02, 0x00, 0x00}, // disable sp 42  
    {0x22bb, &op_disable,	 11, 255, 255, 0x2b, 0x02, 0x00, 0x00}, // disable sp 43  
    {0x22cb, &op_disable,	 11, 255, 255, 0x2c, 0x02, 0x00, 0x00}, // disable sp 44  
    {0x22db, &op_disable,	 11, 255, 255, 0x2d, 0x02, 0x00, 0x00}, // disable sp 45  
    {0x22eb, &op_disable,	 11, 255, 255, 0x2e, 0x02, 0x00, 0x00}, // disable sp 46  
    {0x22fb, &op_disable,	 11, 255, 255, 0x2f, 0x02, 0x00, 0x00}, // disable sp 47  
    {0x230b, &op_disable,	 11, 255, 255, 0x30, 0x02, 0x00, 0x00}, // disable sp 48  
    {0x231b, &op_disable,	 11, 255, 255, 0x31, 0x02, 0x00, 0x00}, // disable sp 49  
    {0x232b, &op_disable,	 11, 255, 255, 0x32, 0x02, 0x00, 0x00}, // disable sp 50  
    {0x233b, &op_disable,	 11, 255, 255, 0x33, 0x02, 0x00, 0x00}, // disable sp 51  
    {0x234b, &op_disable,	 11, 255, 255, 0x34, 0x02, 0x00, 0x00}, // disable sp 52  
    {0x235b, &op_disable,	 11, 255, 255, 0x35, 0x02, 0x00, 0x00}, // disable sp 53  
    {0x236b, &op_disable,	 11, 255, 255, 0x36, 0x02, 0x00, 0x00}, // disable sp 54  
    {0x237b, &op_disable,	 11, 255, 255, 0x37, 0x02, 0x00, 0x00}, // disable sp 55  
    {0x238b, &op_disable,	 11, 255, 255, 0x38, 0x02, 0x00, 0x00}, // disable sp 56  
    {0x239b, &op_disable,	 11, 255, 255, 0x39, 0x02, 0x00, 0x00}, // disable sp 57  
    {0x23ab, &op_disable,	 11, 255, 255, 0x3a, 0x02, 0x00, 0x00}, // disable sp 58  
    {0x23bb, &op_disable,	 11, 255, 255, 0x3b, 0x02, 0x00, 0x00}, // disable sp 59  
    {0x23cb, &op_disable,	 11, 255, 255, 0x3c, 0x02, 0x00, 0x00}, // disable sp 60  
    {0x23db, &op_disable,	 11, 255, 255, 0x3d, 0x02, 0x00, 0x00}, // disable sp 61  
    {0x23eb, &op_disable,	 11, 255, 255, 0x3e, 0x02, 0x00, 0x00}, // disable sp 62  
    {0x23fb, &op_disable,	 11, 255, 255, 0x3f, 0x02, 0x00, 0x00}, // disable sp 63  
    {0x200c, &op_disable,	 12, 255, 255, 0x00, 0x02, 0x00, 0x00}, // disable db 0  
    {0x201c, &op_disable,	 12, 255, 255, 0x01, 0x02, 0x00, 0x00}, // disable db 1  
    {0x202c, &op_disable,	 12, 255, 255, 0x02, 0x02, 0x00, 0x00}, // disable db 2  
    {0x203c, &op_disable,	 12, 255, 255, 0x03, 0x02, 0x00, 0x00}, // disable db 3  
    {0x204c, &op_disable,	 12, 255, 255, 0x04, 0x02, 0x00, 0x00}, // disable db 4  
    {0x205c, &op_disable,	 12, 255, 255, 0x05, 0x02, 0x00, 0x00}, // disable db 5  
    {0x206c, &op_disable,	 12, 255, 255, 0x06, 0x02, 0x00, 0x00}, // disable db 6  
    {0x207c, &op_disable,	 12, 255, 255, 0x07, 0x02, 0x00, 0x00}, // disable db 7  
    {0x208c, &op_disable,	 12, 255, 255, 0x08, 0x02, 0x00, 0x00}, // disable db 8  
    {0x209c, &op_disable,	 12, 255, 255, 0x09, 0x02, 0x00, 0x00}, // disable db 9  
    {0x20ac, &op_disable,	 12, 255, 255, 0x0a, 0x02, 0x00, 0x00}, // disable db 10  
    {0x20bc, &op_disable,	 12, 255, 255, 0x0b, 0x02, 0x00, 0x00}, // disable db 11  
    {0x20cc, &op_disable,	 12, 255, 255, 0x0c, 0x02, 0x00, 0x00}, // disable db 12  
    {0x20dc, &op_disable,	 12, 255, 255, 0x0d, 0x02, 0x00, 0x00}, // disable db 13  
    {0x20ec, &op_disable,	 12, 255, 255, 0x0e, 0x02, 0x00, 0x00}, // disable db 14  
    {0x20fc, &op_disable,	 12, 255, 255, 0x0f, 0x02, 0x00, 0x00}, // disable db 15  
    {0x210c, &op_disable,	 12, 255, 255, 0x10, 0x02, 0x00, 0x00}, // disable db 16  
    {0x211c, &op_disable,	 12, 255, 255, 0x11, 0x02, 0x00, 0x00}, // disable db 17  
    {0x212c, &op_disable,	 12, 255, 255, 0x12, 0x02, 0x00, 0x00}, // disable db 18  
    {0x213c, &op_disable,	 12, 255, 255, 0x13, 0x02, 0x00, 0x00}, // disable db 19  
    {0x214c, &op_disable,	 12, 255, 255, 0x14, 0x02, 0x00, 0x00}, // disable db 20  
    {0x215c, &op_disable,	 12, 255, 255, 0x15, 0x02, 0x00, 0x00}, // disable db 21  
    {0x216c, &op_disable,	 12, 255, 255, 0x16, 0x02, 0x00, 0x00}, // disable db 22  
    {0x217c, &op_disable,	 12, 255, 255, 0x17, 0x02, 0x00, 0x00}, // disable db 23  
    {0x218c, &op_disable,	 12, 255, 255, 0x18, 0x02, 0x00, 0x00}, // disable db 24  
    {0x219c, &op_disable,	 12, 255, 255, 0x19, 0x02, 0x00, 0x00}, // disable db 25  
    {0x21ac, &op_disable,	 12, 255, 255, 0x1a, 0x02, 0x00, 0x00}, // disable db 26  
    {0x21bc, &op_disable,	 12, 255, 255, 0x1b, 0x02, 0x00, 0x00}, // disable db 27  
    {0x21cc, &op_disable,	 12, 255, 255, 0x1c, 0x02, 0x00, 0x00}, // disable db 28  
    {0x21dc, &op_disable,	 12, 255, 255, 0x1d, 0x02, 0x00, 0x00}, // disable db 29  
    {0x21ec, &op_disable,	 12, 255, 255, 0x1e, 0x02, 0x00, 0x00}, // disable db 30  
    {0x21fc, &op_disable,	 12, 255, 255, 0x1f, 0x02, 0x00, 0x00}, // disable db 31  
    {0x220c, &op_disable,	 12, 255, 255, 0x20, 0x02, 0x00, 0x00}, // disable db 32  
    {0x221c, &op_disable,	 12, 255, 255, 0x21, 0x02, 0x00, 0x00}, // disable db 33  
    {0x222c, &op_disable,	 12, 255, 255, 0x22, 0x02, 0x00, 0x00}, // disable db 34  
    {0x223c, &op_disable,	 12, 255, 255, 0x23, 0x02, 0x00, 0x00}, // disable db 35  
    {0x224c, &op_disable,	 12, 255, 255, 0x24, 0x02, 0x00, 0x00}, // disable db 36  
    {0x225c, &op_disable,	 12, 255, 255, 0x25, 0x02, 0x00, 0x00}, // disable db 37  
    {0x226c, &op_disable,	 12, 255, 255, 0x26, 0x02, 0x00, 0x00}, // disable db 38  
    {0x227c, &op_disable,	 12, 255, 255, 0x27, 0x02, 0x00, 0x00}, // disable db 39  
    {0x228c, &op_disable,	 12, 255, 255, 0x28, 0x02, 0x00, 0x00}, // disable db 40  
    {0x229c, &op_disable,	 12, 255, 255, 0x29, 0x02, 0x00, 0x00}, // disable db 41  
    {0x22ac, &op_disable,	 12, 255, 255, 0x2a, 0x02, 0x00, 0x00}, // disable db 42  
    {0x22bc, &op_disable,	 12, 255, 255, 0x2b, 0x02, 0x00, 0x00}, // disable db 43  
    {0x22cc, &op_disable,	 12, 255, 255, 0x2c, 0x02, 0x00, 0x00}, // disable db 44  
    {0x22dc, &op_disable,	 12, 255, 255, 0x2d, 0x02, 0x00, 0x00}, // disable db 45  
    {0x22ec, &op_disable,	 12, 255, 255, 0x2e, 0x02, 0x00, 0x00}, // disable db 46  
    {0x22fc, &op_disable,	 12, 255, 255, 0x2f, 0x02, 0x00, 0x00}, // disable db 47  
    {0x230c, &op_disable,	 12, 255, 255, 0x30, 0x02, 0x00, 0x00}, // disable db 48  
    {0x231c, &op_disable,	 12, 255, 255, 0x31, 0x02, 0x00, 0x00}, // disable db 49  
    {0x232c, &op_disable,	 12, 255, 255, 0x32, 0x02, 0x00, 0x00}, // disable db 50  
    {0x233c, &op_disable,	 12, 255, 255, 0x33, 0x02, 0x00, 0x00}, // disable db 51  
    {0x234c, &op_disable,	 12, 255, 255, 0x34, 0x02, 0x00, 0x00}, // disable db 52  
    {0x235c, &op_disable,	 12, 255, 255, 0x35, 0x02, 0x00, 0x00}, // disable db 53  
    {0x236c, &op_disable,	 12, 255, 255, 0x36, 0x02, 0x00, 0x00}, // disable db 54  
    {0x237c, &op_disable,	 12, 255, 255, 0x37, 0x02, 0x00, 0x00}, // disable db 55  
    {0x238c, &op_disable,	 12, 255, 255, 0x38, 0x02, 0x00, 0x00}, // disable db 56  
    {0x239c, &op_disable,	 12, 255, 255, 0x39, 0x02, 0x00, 0x00}, // disable db 57  
    {0x23ac, &op_disable,	 12, 255, 255, 0x3a, 0x02, 0x00, 0x00}, // disable db 58  
    {0x23bc, &op_disable,	 12, 255, 255, 0x3b, 0x02, 0x00, 0x00}, // disable db 59  
    {0x23cc, &op_disable,	 12, 255, 255, 0x3c, 0x02, 0x00, 0x00}, // disable db 60  
    {0x23dc, &op_disable,	 12, 255, 255, 0x3d, 0x02, 0x00, 0x00}, // disable db 61  
    {0x23ec, &op_disable,	 12, 255, 255, 0x3e, 0x02, 0x00, 0x00}, // disable db 62  
    {0x23fc, &op_disable,	 12, 255, 255, 0x3f, 0x02, 0x00, 0x00}, // disable db 63  
    {0x200d, &op_disable,	 13, 255, 255, 0x00, 0x02, 0x00, 0x00}, // disable cb 0  
    {0x201d, &op_disable,	 13, 255, 255, 0x01, 0x02, 0x00, 0x00}, // disable cb 1  
    {0x202d, &op_disable,	 13, 255, 255, 0x02, 0x02, 0x00, 0x00}, // disable cb 2  
    {0x203d, &op_disable,	 13, 255, 255, 0x03, 0x02, 0x00, 0x00}, // disable cb 3  
    {0x204d, &op_disable,	 13, 255, 255, 0x04, 0x02, 0x00, 0x00}, // disable cb 4  
    {0x205d, &op_disable,	 13, 255, 255, 0x05, 0x02, 0x00, 0x00}, // disable cb 5  
    {0x206d, &op_disable,	 13, 255, 255, 0x06, 0x02, 0x00, 0x00}, // disable cb 6  
    {0x207d, &op_disable,	 13, 255, 255, 0x07, 0x02, 0x00, 0x00}, // disable cb 7  
    {0x208d, &op_disable,	 13, 255, 255, 0x08, 0x02, 0x00, 0x00}, // disable cb 8  
    {0x209d, &op_disable,	 13, 255, 255, 0x09, 0x02, 0x00, 0x00}, // disable cb 9  
    {0x20ad, &op_disable,	 13, 255, 255, 0x0a, 0x02, 0x00, 0x00}, // disable cb 10  
    {0x20bd, &op_disable,	 13, 255, 255, 0x0b, 0x02, 0x00, 0x00}, // disable cb 11  
    {0x20cd, &op_disable,	 13, 255, 255, 0x0c, 0x02, 0x00, 0x00}, // disable cb 12  
    {0x20dd, &op_disable,	 13, 255, 255, 0x0d, 0x02, 0x00, 0x00}, // disable cb 13  
    {0x20ed, &op_disable,	 13, 255, 255, 0x0e, 0x02, 0x00, 0x00}, // disable cb 14  
    {0x20fd, &op_disable,	 13, 255, 255, 0x0f, 0x02, 0x00, 0x00}, // disable cb 15  
    {0x210d, &op_disable,	 13, 255, 255, 0x10, 0x02, 0x00, 0x00}, // disable cb 16  
    {0x211d, &op_disable,	 13, 255, 255, 0x11, 0x02, 0x00, 0x00}, // disable cb 17  
    {0x212d, &op_disable,	 13, 255, 255, 0x12, 0x02, 0x00, 0x00}, // disable cb 18  
    {0x213d, &op_disable,	 13, 255, 255, 0x13, 0x02, 0x00, 0x00}, // disable cb 19  
    {0x214d, &op_disable,	 13, 255, 255, 0x14, 0x02, 0x00, 0x00}, // disable cb 20  
    {0x215d, &op_disable,	 13, 255, 255, 0x15, 0x02, 0x00, 0x00}, // disable cb 21  
    {0x216d, &op_disable,	 13, 255, 255, 0x16, 0x02, 0x00, 0x00}, // disable cb 22  
    {0x217d, &op_disable,	 13, 255, 255, 0x17, 0x02, 0x00, 0x00}, // disable cb 23  
    {0x218d, &op_disable,	 13, 255, 255, 0x18, 0x02, 0x00, 0x00}, // disable cb 24  
    {0x219d, &op_disable,	 13, 255, 255, 0x19, 0x02, 0x00, 0x00}, // disable cb 25  
    {0x21ad, &op_disable,	 13, 255, 255, 0x1a, 0x02, 0x00, 0x00}, // disable cb 26  
    {0x21bd, &op_disable,	 13, 255, 255, 0x1b, 0x02, 0x00, 0x00}, // disable cb 27  
    {0x21cd, &op_disable,	 13, 255, 255, 0x1c, 0x02, 0x00, 0x00}, // disable cb 28  
    {0x21dd, &op_disable,	 13, 255, 255, 0x1d, 0x02, 0x00, 0x00}, // disable cb 29  
    {0x21ed, &op_disable,	 13, 255, 255, 0x1e, 0x02, 0x00, 0x00}, // disable cb 30  
    {0x21fd, &op_disable,	 13, 255, 255, 0x1f, 0x02, 0x00, 0x00}, // disable cb 31  
    {0x220d, &op_disable,	 13, 255, 255, 0x20, 0x02, 0x00, 0x00}, // disable cb 32  
    {0x221d, &op_disable,	 13, 255, 255, 0x21, 0x02, 0x00, 0x00}, // disable cb 33  
    {0x222d, &op_disable,	 13, 255, 255, 0x22, 0x02, 0x00, 0x00}, // disable cb 34  
    {0x223d, &op_disable,	 13, 255, 255, 0x23, 0x02, 0x00, 0x00}, // disable cb 35  
    {0x224d, &op_disable,	 13, 255, 255, 0x24, 0x02, 0x00, 0x00}, // disable cb 36  
    {0x225d, &op_disable,	 13, 255, 255, 0x25, 0x02, 0x00, 0x00}, // disable cb 37  
    {0x226d, &op_disable,	 13, 255, 255, 0x26, 0x02, 0x00, 0x00}, // disable cb 38  
    {0x227d, &op_disable,	 13, 255, 255, 0x27, 0x02, 0x00, 0x00}, // disable cb 39  
    {0x228d, &op_disable,	 13, 255, 255, 0x28, 0x02, 0x00, 0x00}, // disable cb 40  
    {0x229d, &op_disable,	 13, 255, 255, 0x29, 0x02, 0x00, 0x00}, // disable cb 41  
    {0x22ad, &op_disable,	 13, 255, 255, 0x2a, 0x02, 0x00, 0x00}, // disable cb 42  
    {0x22bd, &op_disable,	 13, 255, 255, 0x2b, 0x02, 0x00, 0x00}, // disable cb 43  
    {0x22cd, &op_disable,	 13, 255, 255, 0x2c, 0x02, 0x00, 0x00}, // disable cb 44  
    {0x22dd, &op_disable,	 13, 255, 255, 0x2d, 0x02, 0x00, 0x00}, // disable cb 45  
    {0x22ed, &op_disable,	 13, 255, 255, 0x2e, 0x02, 0x00, 0x00}, // disable cb 46  
    {0x22fd, &op_disable,	 13, 255, 255, 0x2f, 0x02, 0x00, 0x00}, // disable cb 47  
    {0x230d, &op_disable,	 13, 255, 255, 0x30, 0x02, 0x00, 0x00}, // disable cb 48  
    {0x231d, &op_disable,	 13, 255, 255, 0x31, 0x02, 0x00, 0x00}, // disable cb 49  
    {0x232d, &op_disable,	 13, 255, 255, 0x32, 0x02, 0x00, 0x00}, // disable cb 50  
    {0x233d, &op_disable,	 13, 255, 255, 0x33, 0x02, 0x00, 0x00}, // disable cb 51  
    {0x234d, &op_disable,	 13, 255, 255, 0x34, 0x02, 0x00, 0x00}, // disable cb 52  
    {0x235d, &op_disable,	 13, 255, 255, 0x35, 0x02, 0x00, 0x00}, // disable cb 53  
    {0x236d, &op_disable,	 13, 255, 255, 0x36, 0x02, 0x00, 0x00}, // disable cb 54  
    {0x237d, &op_disable,	 13, 255, 255, 0x37, 0x02, 0x00, 0x00}, // disable cb 55  
    {0x238d, &op_disable,	 13, 255, 255, 0x38, 0x02, 0x00, 0x00}, // disable cb 56  
    {0x239d, &op_disable,	 13, 255, 255, 0x39, 0x02, 0x00, 0x00}, // disable cb 57  
    {0x23ad, &op_disable,	 13, 255, 255, 0x3a, 0x02, 0x00, 0x00}, // disable cb 58  
    {0x23bd, &op_disable,	 13, 255, 255, 0x3b, 0x02, 0x00, 0x00}, // disable cb 59  
    {0x23cd, &op_disable,	 13, 255, 255, 0x3c, 0x02, 0x00, 0x00}, // disable cb 60  
    {0x23dd, &op_disable,	 13, 255, 255, 0x3d, 0x02, 0x00, 0x00}, // disable cb 61  
    {0x23ed, &op_disable,	 13, 255, 255, 0x3e, 0x02, 0x00, 0x00}, // disable cb 62  
    {0x23fd, &op_disable,	 13, 255, 255, 0x3f, 0x02, 0x00, 0x00}, // disable cb 63  
    {0x200e, &op_disable,	 14, 255, 255, 0x00, 0x02, 0x00, 0x00}, // disable pi 0  
    {0x201e, &op_disable,	 14, 255, 255, 0x01, 0x02, 0x00, 0x00}, // disable pi 1  
    {0x202e, &op_disable,	 14, 255, 255, 0x02, 0x02, 0x00, 0x00}, // disable pi 2  
    {0x203e, &op_disable,	 14, 255, 255, 0x03, 0x02, 0x00, 0x00}, // disable pi 3  
    {0x204e, &op_disable,	 14, 255, 255, 0x04, 0x02, 0x00, 0x00}, // disable pi 4  
    {0x205e, &op_disable,	 14, 255, 255, 0x05, 0x02, 0x00, 0x00}, // disable pi 5  
    {0x206e, &op_disable,	 14, 255, 255, 0x06, 0x02, 0x00, 0x00}, // disable pi 6  
    {0x207e, &op_disable,	 14, 255, 255, 0x07, 0x02, 0x00, 0x00}, // disable pi 7  
    {0x208e, &op_disable,	 14, 255, 255, 0x08, 0x02, 0x00, 0x00}, // disable pi 8  
    {0x209e, &op_disable,	 14, 255, 255, 0x09, 0x02, 0x00, 0x00}, // disable pi 9  
    {0x20ae, &op_disable,	 14, 255, 255, 0x0a, 0x02, 0x00, 0x00}, // disable pi 10  
    {0x20be, &op_disable,	 14, 255, 255, 0x0b, 0x02, 0x00, 0x00}, // disable pi 11  
    {0x20ce, &op_disable,	 14, 255, 255, 0x0c, 0x02, 0x00, 0x00}, // disable pi 12  
    {0x20de, &op_disable,	 14, 255, 255, 0x0d, 0x02, 0x00, 0x00}, // disable pi 13  
    {0x20ee, &op_disable,	 14, 255, 255, 0x0e, 0x02, 0x00, 0x00}, // disable pi 14  
    {0x20fe, &op_disable,	 14, 255, 255, 0x0f, 0x02, 0x00, 0x00}, // disable pi 15  
    {0x210e, &op_disable,	 14, 255, 255, 0x10, 0x02, 0x00, 0x00}, // disable pi 16  
    {0x211e, &op_disable,	 14, 255, 255, 0x11, 0x02, 0x00, 0x00}, // disable pi 17  
    {0x212e, &op_disable,	 14, 255, 255, 0x12, 0x02, 0x00, 0x00}, // disable pi 18  
    {0x213e, &op_disable,	 14, 255, 255, 0x13, 0x02, 0x00, 0x00}, // disable pi 19  
    {0x214e, &op_disable,	 14, 255, 255, 0x14, 0x02, 0x00, 0x00}, // disable pi 20  
    {0x215e, &op_disable,	 14, 255, 255, 0x15, 0x02, 0x00, 0x00}, // disable pi 21  
    {0x216e, &op_disable,	 14, 255, 255, 0x16, 0x02, 0x00, 0x00}, // disable pi 22  
    {0x217e, &op_disable,	 14, 255, 255, 0x17, 0x02, 0x00, 0x00}, // disable pi 23  
    {0x218e, &op_disable,	 14, 255, 255, 0x18, 0x02, 0x00, 0x00}, // disable pi 24  
    {0x219e, &op_disable,	 14, 255, 255, 0x19, 0x02, 0x00, 0x00}, // disable pi 25  
    {0x21ae, &op_disable,	 14, 255, 255, 0x1a, 0x02, 0x00, 0x00}, // disable pi 26  
    {0x21be, &op_disable,	 14, 255, 255, 0x1b, 0x02, 0x00, 0x00}, // disable pi 27  
    {0x21ce, &op_disable,	 14, 255, 255, 0x1c, 0x02, 0x00, 0x00}, // disable pi 28  
    {0x21de, &op_disable,	 14, 255, 255, 0x1d, 0x02, 0x00, 0x00}, // disable pi 29  
    {0x21ee, &op_disable,	 14, 255, 255, 0x1e, 0x02, 0x00, 0x00}, // disable pi 30  
    {0x21fe, &op_disable,	 14, 255, 255, 0x1f, 0x02, 0x00, 0x00}, // disable pi 31  
    {0x220e, &op_disable,	 14, 255, 255, 0x20, 0x02, 0x00, 0x00}, // disable pi 32  
    {0x221e, &op_disable,	 14, 255, 255, 0x21, 0x02, 0x00, 0x00}, // disable pi 33  
    {0x222e, &op_disable,	 14, 255, 255, 0x22, 0x02, 0x00, 0x00}, // disable pi 34  
    {0x223e, &op_disable,	 14, 255, 255, 0x23, 0x02, 0x00, 0x00}, // disable pi 35  
    {0x224e, &op_disable,	 14, 255, 255, 0x24, 0x02, 0x00, 0x00}, // disable pi 36  
    {0x225e, &op_disable,	 14, 255, 255, 0x25, 0x02, 0x00, 0x00}, // disable pi 37  
    {0x226e, &op_disable,	 14, 255, 255, 0x26, 0x02, 0x00, 0x00}, // disable pi 38  
    {0x227e, &op_disable,	 14, 255, 255, 0x27, 0x02, 0x00, 0x00}, // disable pi 39  
    {0x228e, &op_disable,	 14, 255, 255, 0x28, 0x02, 0x00, 0x00}, // disable pi 40  
    {0x229e, &op_disable,	 14, 255, 255, 0x29, 0x02, 0x00, 0x00}, // disable pi 41  
    {0x22ae, &op_disable,	 14, 255, 255, 0x2a, 0x02, 0x00, 0x00}, // disable pi 42  
    {0x22be, &op_disable,	 14, 255, 255, 0x2b, 0x02, 0x00, 0x00}, // disable pi 43  
    {0x22ce, &op_disable,	 14, 255, 255, 0x2c, 0x02, 0x00, 0x00}, // disable pi 44  
    {0x22de, &op_disable,	 14, 255, 255, 0x2d, 0x02, 0x00, 0x00}, // disable pi 45  
    {0x22ee, &op_disable,	 14, 255, 255, 0x2e, 0x02, 0x00, 0x00}, // disable pi 46  
    {0x22fe, &op_disable,	 14, 255, 255, 0x2f, 0x02, 0x00, 0x00}, // disable pi 47  
    {0x230e, &op_disable,	 14, 255, 255, 0x30, 0x02, 0x00, 0x00}, // disable pi 48  
    {0x231e, &op_disable,	 14, 255, 255, 0x31, 0x02, 0x00, 0x00}, // disable pi 49  
    {0x232e, &op_disable,	 14, 255, 255, 0x32, 0x02, 0x00, 0x00}, // disable pi 50  
    {0x233e, &op_disable,	 14, 255, 255, 0x33, 0x02, 0x00, 0x00}, // disable pi 51  
    {0x234e, &op_disable,	 14, 255, 255, 0x34, 0x02, 0x00, 0x00}, // disable pi 52  
    {0x235e, &op_disable,	 14, 255, 255, 0x35, 0x02, 0x00, 0x00}, // disable pi 53  
    {0x236e, &op_disable,	 14, 255, 255, 0x36, 0x02, 0x00, 0x00}, // disable pi 54  
    {0x237e, &op_disable,	 14, 255, 255, 0x37, 0x02, 0x00, 0x00}, // disable pi 55  
    {0x238e, &op_disable,	 14, 255, 255, 0x38, 0x02, 0x00, 0x00}, // disable pi 56  
    {0x239e, &op_disable,	 14, 255, 255, 0x39, 0x02, 0x00, 0x00}, // disable pi 57  
    {0x23ae, &op_disable,	 14, 255, 255, 0x3a, 0x02, 0x00, 0x00}, // disable pi 58  
    {0x23be, &op_disable,	 14, 255, 255, 0x3b, 0x02, 0x00, 0x00}, // disable pi 59  
    {0x23ce, &op_disable,	 14, 255, 255, 0x3c, 0x02, 0x00, 0x00}, // disable pi 60  
    {0x23de, &op_disable,	 14, 255, 255, 0x3d, 0x02, 0x00, 0x00}, // disable pi 61  
    {0x23ee, &op_disable,	 14, 255, 255, 0x3e, 0x02, 0x00, 0x00}, // disable pi 62  
    {0x23fe, &op_disable,	 14, 255, 255, 0x3f, 0x02, 0x00, 0x00}, // disable pi 63  
    {0x200f, &op_disable,	 15, 255, 255, 0x00, 0x02, 0x00, 0x00}, // disable status 0  
    {0x201f, &op_disable,	 15, 255, 255, 0x01, 0x02, 0x00, 0x00}, // disable status 1  
    {0x202f, &op_disable,	 15, 255, 255, 0x02, 0x02, 0x00, 0x00}, // disable status 2  
    {0x203f, &op_disable,	 15, 255, 255, 0x03, 0x02, 0x00, 0x00}, // disable status 3  
    {0x204f, &op_disable,	 15, 255, 255, 0x04, 0x02, 0x00, 0x00}, // disable status 4  
    {0x205f, &op_disable,	 15, 255, 255, 0x05, 0x02, 0x00, 0x00}, // disable status 5  
    {0x206f, &op_disable,	 15, 255, 255, 0x06, 0x02, 0x00, 0x00}, // disable status 6  
    {0x207f, &op_disable,	 15, 255, 255, 0x07, 0x02, 0x00, 0x00}, // disable status 7  
    {0x208f, &op_disable,	 15, 255, 255, 0x08, 0x02, 0x00, 0x00}, // disable status 8  
    {0x209f, &op_disable,	 15, 255, 255, 0x09, 0x02, 0x00, 0x00}, // disable status 9  
    {0x20af, &op_disable,	 15, 255, 255, 0x0a, 0x02, 0x00, 0x00}, // disable status 10  
    {0x20bf, &op_disable,	 15, 255, 255, 0x0b, 0x02, 0x00, 0x00}, // disable status 11  
    {0x20cf, &op_disable,	 15, 255, 255, 0x0c, 0x02, 0x00, 0x00}, // disable status 12  
    {0x20df, &op_disable,	 15, 255, 255, 0x0d, 0x02, 0x00, 0x00}, // disable status 13  
    {0x20ef, &op_disable,	 15, 255, 255, 0x0e, 0x02, 0x00, 0x00}, // disable status 14  
    {0x20ff, &op_disable,	 15, 255, 255, 0x0f, 0x02, 0x00, 0x00}, // disable status 15  
    {0x210f, &op_disable,	 15, 255, 255, 0x10, 0x02, 0x00, 0x00}, // disable status 16  
    {0x211f, &op_disable,	 15, 255, 255, 0x11, 0x02, 0x00, 0x00}, // disable status 17  
    {0x212f, &op_disable,	 15, 255, 255, 0x12, 0x02, 0x00, 0x00}, // disable status 18  
    {0x213f, &op_disable,	 15, 255, 255, 0x13, 0x02, 0x00, 0x00}, // disable status 19  
    {0x214f, &op_disable,	 15, 255, 255, 0x14, 0x02, 0x00, 0x00}, // disable status 20  
    {0x215f, &op_disable,	 15, 255, 255, 0x15, 0x02, 0x00, 0x00}, // disable status 21  
    {0x216f, &op_disable,	 15, 255, 255, 0x16, 0x02, 0x00, 0x00}, // disable status 22  
    {0x217f, &op_disable,	 15, 255, 255, 0x17, 0x02, 0x00, 0x00}, // disable status 23  
    {0x218f, &op_disable,	 15, 255, 255, 0x18, 0x02, 0x00, 0x00}, // disable status 24  
    {0x219f, &op_disable,	 15, 255, 255, 0x19, 0x02, 0x00, 0x00}, // disable status 25  
    {0x21af, &op_disable,	 15, 255, 255, 0x1a, 0x02, 0x00, 0x00}, // disable status 26  
    {0x21bf, &op_disable,	 15, 255, 255, 0x1b, 0x02, 0x00, 0x00}, // disable status 27  
    {0x21cf, &op_disable,	 15, 255, 255, 0x1c, 0x02, 0x00, 0x00}, // disable status 28  
    {0x21df, &op_disable,	 15, 255, 255, 0x1d, 0x02, 0x00, 0x00}, // disable status 29  
    {0x21ef, &op_disable,	 15, 255, 255, 0x1e, 0x02, 0x00, 0x00}, // disable status 30  
    {0x21ff, &op_disable,	 15, 255, 255, 0x1f, 0x02, 0x00, 0x00}, // disable status 31  
    {0x220f, &op_disable,	 15, 255, 255, 0x20, 0x02, 0x00, 0x00}, // disable status 32  
    {0x221f, &op_disable,	 15, 255, 255, 0x21, 0x02, 0x00, 0x00}, // disable status 33  
    {0x222f, &op_disable,	 15, 255, 255, 0x22, 0x02, 0x00, 0x00}, // disable status 34  
    {0x223f, &op_disable,	 15, 255, 255, 0x23, 0x02, 0x00, 0x00}, // disable status 35  
    {0x224f, &op_disable,	 15, 255, 255, 0x24, 0x02, 0x00, 0x00}, // disable status 36  
    {0x225f, &op_disable,	 15, 255, 255, 0x25, 0x02, 0x00, 0x00}, // disable status 37  
    {0x226f, &op_disable,	 15, 255, 255, 0x26, 0x02, 0x00, 0x00}, // disable status 38  
    {0x227f, &op_disable,	 15, 255, 255, 0x27, 0x02, 0x00, 0x00}, // disable status 39  
    {0x228f, &op_disable,	 15, 255, 255, 0x28, 0x02, 0x00, 0x00}, // disable status 40  
    {0x229f, &op_disable,	 15, 255, 255, 0x29, 0x02, 0x00, 0x00}, // disable status 41  
    {0x22af, &op_disable,	 15, 255, 255, 0x2a, 0x02, 0x00, 0x00}, // disable status 42  
    {0x22bf, &op_disable,	 15, 255, 255, 0x2b, 0x02, 0x00, 0x00}, // disable status 43  
    {0x22cf, &op_disable,	 15, 255, 255, 0x2c, 0x02, 0x00, 0x00}, // disable status 44  
    {0x22df, &op_disable,	 15, 255, 255, 0x2d, 0x02, 0x00, 0x00}, // disable status 45  
    {0x22ef, &op_disable,	 15, 255, 255, 0x2e, 0x02, 0x00, 0x00}, // disable status 46  
    {0x22ff, &op_disable,	 15, 255, 255, 0x2f, 0x02, 0x00, 0x00}, // disable status 47  
    {0x230f, &op_disable,	 15, 255, 255, 0x30, 0x02, 0x00, 0x00}, // disable status 48  
    {0x231f, &op_disable,	 15, 255, 255, 0x31, 0x02, 0x00, 0x00}, // disable status 49  
    {0x232f, &op_disable,	 15, 255, 255, 0x32, 0x02, 0x00, 0x00}, // disable status 50  
    {0x233f, &op_disable,	 15, 255, 255, 0x33, 0x02, 0x00, 0x00}, // disable status 51  
    {0x234f, &op_disable,	 15, 255, 255, 0x34, 0x02, 0x00, 0x00}, // disable status 52  
    {0x235f, &op_disable,	 15, 255, 255, 0x35, 0x02, 0x00, 0x00}, // disable status 53  
    {0x236f, &op_disable,	 15, 255, 255, 0x36, 0x02, 0x00, 0x00}, // disable status 54  
    {0x237f, &op_disable,	 15, 255, 255, 0x37, 0x02, 0x00, 0x00}, // disable status 55  
    {0x238f, &op_disable,	 15, 255, 255, 0x38, 0x02, 0x00, 0x00}, // disable status 56  
    {0x239f, &op_disable,	 15, 255, 255, 0x39, 0x02, 0x00, 0x00}, // disable status 57  
    {0x23af, &op_disable,	 15, 255, 255, 0x3a, 0x02, 0x00, 0x00}, // disable status 58  
    {0x23bf, &op_disable,	 15, 255, 255, 0x3b, 0x02, 0x00, 0x00}, // disable status 59  
    {0x23cf, &op_disable,	 15, 255, 255, 0x3c, 0x02, 0x00, 0x00}, // disable status 60  
    {0x23df, &op_disable,	 15, 255, 255, 0x3d, 0x02, 0x00, 0x00}, // disable status 61  
    {0x23ef, &op_disable,	 15, 255, 255, 0x3e, 0x02, 0x00, 0x00}, // disable status 62  
    {0x23ff, &op_disable,	 15, 255, 255, 0x3f, 0x02, 0x00, 0x00}, // disable status 63  
    {0x2400, &op_enable,	  0, 255, 255, 0x00, 0x02, 0x00, 0x00}, // enable a 0  
    {0x2410, &op_enable,	  0, 255, 255, 0x01, 0x02, 0x00, 0x00}, // enable a 1  
    {0x2420, &op_enable,	  0, 255, 255, 0x02, 0x02, 0x00, 0x00}, // enable a 2  
    {0x2430, &op_enable,	  0, 255, 255, 0x03, 0x02, 0x00, 0x00}, // enable a 3  
    {0x2440, &op_enable,	  0, 255, 255, 0x04, 0x02, 0x00, 0x00}, // enable a 4  
    {0x2450, &op_enable,	  0, 255, 255, 0x05, 0x02, 0x00, 0x00}, // enable a 5  
    {0x2460, &op_enable,	  0, 255, 255, 0x06, 0x02, 0x00, 0x00}, // enable a 6  
    {0x2470, &op_enable,	  0, 255, 255, 0x07, 0x02, 0x00, 0x00}, // enable a 7  
    {0x2480, &op_enable,	  0, 255, 255, 0x08, 0x02, 0x00, 0x00}, // enable a 8  
    {0x2490, &op_enable,	  0, 255, 255, 0x09, 0x02, 0x00, 0x00}, // enable a 9  
    {0x24a0, &op_enable,	  0, 255, 255, 0x0a, 0x02, 0x00, 0x00}, // enable a 10  
    {0x24b0, &op_enable,	  0, 255, 255, 0x0b, 0x02, 0x00, 0x00}, // enable a 11  
    {0x24c0, &op_enable,	  0, 255, 255, 0x0c, 0x02, 0x00, 0x00}, // enable a 12  
    {0x24d0, &op_enable,	  0, 255, 255, 0x0d, 0x02, 0x00, 0x00}, // enable a 13  
    {0x24e0, &op_enable,	  0, 255, 255, 0x0e, 0x02, 0x00, 0x00}, // enable a 14  
    {0x24f0, &op_enable,	  0, 255, 255, 0x0f, 0x02, 0x00, 0x00}, // enable a 15  
    {0x2500, &op_enable,	  0, 255, 255, 0x10, 0x02, 0x00, 0x00}, // enable a 16  
    {0x2510, &op_enable,	  0, 255, 255, 0x11, 0x02, 0x00, 0x00}, // enable a 17  
    {0x2520, &op_enable,	  0, 255, 255, 0x12, 0x02, 0x00, 0x00}, // enable a 18  
    {0x2530, &op_enable,	  0, 255, 255, 0x13, 0x02, 0x00, 0x00}, // enable a 19  
    {0x2540, &op_enable,	  0, 255, 255, 0x14, 0x02, 0x00, 0x00}, // enable a 20  
    {0x2550, &op_enable,	  0, 255, 255, 0x15, 0x02, 0x00, 0x00}, // enable a 21  
    {0x2560, &op_enable,	  0, 255, 255, 0x16, 0x02, 0x00, 0x00}, // enable a 22  
    {0x2570, &op_enable,	  0, 255, 255, 0x17, 0x02, 0x00, 0x00}, // enable a 23  
    {0x2580, &op_enable,	  0, 255, 255, 0x18, 0x02, 0x00, 0x00}, // enable a 24  
    {0x2590, &op_enable,	  0, 255, 255, 0x19, 0x02, 0x00, 0x00}, // enable a 25  
    {0x25a0, &op_enable,	  0, 255, 255, 0x1a, 0x02, 0x00, 0x00}, // enable a 26  
    {0x25b0, &op_enable,	  0, 255, 255, 0x1b, 0x02, 0x00, 0x00}, // enable a 27  
    {0x25c0, &op_enable,	  0, 255, 255, 0x1c, 0x02, 0x00, 0x00}, // enable a 28  
    {0x25d0, &op_enable,	  0, 255, 255, 0x1d, 0x02, 0x00, 0x00}, // enable a 29  
    {0x25e0, &op_enable,	  0, 255, 255, 0x1e, 0x02, 0x00, 0x00}, // enable a 30  
    {0x25f0, &op_enable,	  0, 255, 255, 0x1f, 0x02, 0x00, 0x00}, // enable a 31  
    {0x2600, &op_enable,	  0, 255, 255, 0x20, 0x02, 0x00, 0x00}, // enable a 32  
    {0x2610, &op_enable,	  0, 255, 255, 0x21, 0x02, 0x00, 0x00}, // enable a 33  
    {0x2620, &op_enable,	  0, 255, 255, 0x22, 0x02, 0x00, 0x00}, // enable a 34  
    {0x2630, &op_enable,	  0, 255, 255, 0x23, 0x02, 0x00, 0x00}, // enable a 35  
    {0x2640, &op_enable,	  0, 255, 255, 0x24, 0x02, 0x00, 0x00}, // enable a 36  
    {0x2650, &op_enable,	  0, 255, 255, 0x25, 0x02, 0x00, 0x00}, // enable a 37  
    {0x2660, &op_enable,	  0, 255, 255, 0x26, 0x02, 0x00, 0x00}, // enable a 38  
    {0x2670, &op_enable,	  0, 255, 255, 0x27, 0x02, 0x00, 0x00}, // enable a 39  
    {0x2680, &op_enable,	  0, 255, 255, 0x28, 0x02, 0x00, 0x00}, // enable a 40  
    {0x2690, &op_enable,	  0, 255, 255, 0x29, 0x02, 0x00, 0x00}, // enable a 41  
    {0x26a0, &op_enable,	  0, 255, 255, 0x2a, 0x02, 0x00, 0x00}, // enable a 42  
    {0x26b0, &op_enable,	  0, 255, 255, 0x2b, 0x02, 0x00, 0x00}, // enable a 43  
    {0x26c0, &op_enable,	  0, 255, 255, 0x2c, 0x02, 0x00, 0x00}, // enable a 44  
    {0x26d0, &op_enable,	  0, 255, 255, 0x2d, 0x02, 0x00, 0x00}, // enable a 45  
    {0x26e0, &op_enable,	  0, 255, 255, 0x2e, 0x02, 0x00, 0x00}, // enable a 46  
    {0x26f0, &op_enable,	  0, 255, 255, 0x2f, 0x02, 0x00, 0x00}, // enable a 47  
    {0x2700, &op_enable,	  0, 255, 255, 0x30, 0x02, 0x00, 0x00}, // enable a 48  
    {0x2710, &op_enable,	  0, 255, 255, 0x31, 0x02, 0x00, 0x00}, // enable a 49  
    {0x2720, &op_enable,	  0, 255, 255, 0x32, 0x02, 0x00, 0x00}, // enable a 50  
    {0x2730, &op_enable,	  0, 255, 255, 0x33, 0x02, 0x00, 0x00}, // enable a 51  
    {0x2740, &op_enable,	  0, 255, 255, 0x34, 0x02, 0x00, 0x00}, // enable a 52  
    {0x2750, &op_enable,	  0, 255, 255, 0x35, 0x02, 0x00, 0x00}, // enable a 53  
    {0x2760, &op_enable,	  0, 255, 255, 0x36, 0x02, 0x00, 0x00}, // enable a 54  
    {0x2770, &op_enable,	  0, 255, 255, 0x37, 0x02, 0x00, 0x00}, // enable a 55  
    {0x2780, &op_enable,	  0, 255, 255, 0x38, 0x02, 0x00, 0x00}, // enable a 56  
    {0x2790, &op_enable,	  0, 255, 255, 0x39, 0x02, 0x00, 0x00}, // enable a 57  
    {0x27a0, &op_enable,	  0, 255, 255, 0x3a, 0x02, 0x00, 0x00}, // enable a 58  
    {0x27b0, &op_enable,	  0, 255, 255, 0x3b, 0x02, 0x00, 0x00}, // enable a 59  
    {0x27c0, &op_enable,	  0, 255, 255, 0x3c, 0x02, 0x00, 0x00}, // enable a 60  
    {0x27d0, &op_enable,	  0, 255, 255, 0x3d, 0x02, 0x00, 0x00}, // enable a 61  
    {0x27e0, &op_enable,	  0, 255, 255, 0x3e, 0x02, 0x00, 0x00}, // enable a 62  
    {0x27f0, &op_enable,	  0, 255, 255, 0x3f, 0x02, 0x00, 0x00}, // enable a 63  
    {0x2401, &op_enable,	  1, 255, 255, 0x00, 0x02, 0x00, 0x00}, // enable b 0  
    {0x2411, &op_enable,	  1, 255, 255, 0x01, 0x02, 0x00, 0x00}, // enable b 1  
    {0x2421, &op_enable,	  1, 255, 255, 0x02, 0x02, 0x00, 0x00}, // enable b 2  
    {0x2431, &op_enable,	  1, 255, 255, 0x03, 0x02, 0x00, 0x00}, // enable b 3  
    {0x2441, &op_enable,	  1, 255, 255, 0x04, 0x02, 0x00, 0x00}, // enable b 4  
    {0x2451, &op_enable,	  1, 255, 255, 0x05, 0x02, 0x00, 0x00}, // enable b 5  
    {0x2461, &op_enable,	  1, 255, 255, 0x06, 0x02, 0x00, 0x00}, // enable b 6  
    {0x2471, &op_enable,	  1, 255, 255, 0x07, 0x02, 0x00, 0x00}, // enable b 7  
    {0x2481, &op_enable,	  1, 255, 255, 0x08, 0x02, 0x00, 0x00}, // enable b 8  
    {0x2491, &op_enable,	  1, 255, 255, 0x09, 0x02, 0x00, 0x00}, // enable b 9  
    {0x24a1, &op_enable,	  1, 255, 255, 0x0a, 0x02, 0x00, 0x00}, // enable b 10  
    {0x24b1, &op_enable,	  1, 255, 255, 0x0b, 0x02, 0x00, 0x00}, // enable b 11  
    {0x24c1, &op_enable,	  1, 255, 255, 0x0c, 0x02, 0x00, 0x00}, // enable b 12  
    {0x24d1, &op_enable,	  1, 255, 255, 0x0d, 0x02, 0x00, 0x00}, // enable b 13  
    {0x24e1, &op_enable,	  1, 255, 255, 0x0e, 0x02, 0x00, 0x00}, // enable b 14  
    {0x24f1, &op_enable,	  1, 255, 255, 0x0f, 0x02, 0x00, 0x00}, // enable b 15  
    {0x2501, &op_enable,	  1, 255, 255, 0x10, 0x02, 0x00, 0x00}, // enable b 16  
    {0x2511, &op_enable,	  1, 255, 255, 0x11, 0x02, 0x00, 0x00}, // enable b 17  
    {0x2521, &op_enable,	  1, 255, 255, 0x12, 0x02, 0x00, 0x00}, // enable b 18  
    {0x2531, &op_enable,	  1, 255, 255, 0x13, 0x02, 0x00, 0x00}, // enable b 19  
    {0x2541, &op_enable,	  1, 255, 255, 0x14, 0x02, 0x00, 0x00}, // enable b 20  
    {0x2551, &op_enable,	  1, 255, 255, 0x15, 0x02, 0x00, 0x00}, // enable b 21  
    {0x2561, &op_enable,	  1, 255, 255, 0x16, 0x02, 0x00, 0x00}, // enable b 22  
    {0x2571, &op_enable,	  1, 255, 255, 0x17, 0x02, 0x00, 0x00}, // enable b 23  
    {0x2581, &op_enable,	  1, 255, 255, 0x18, 0x02, 0x00, 0x00}, // enable b 24  
    {0x2591, &op_enable,	  1, 255, 255, 0x19, 0x02, 0x00, 0x00}, // enable b 25  
    {0x25a1, &op_enable,	  1, 255, 255, 0x1a, 0x02, 0x00, 0x00}, // enable b 26  
    {0x25b1, &op_enable,	  1, 255, 255, 0x1b, 0x02, 0x00, 0x00}, // enable b 27  
    {0x25c1, &op_enable,	  1, 255, 255, 0x1c, 0x02, 0x00, 0x00}, // enable b 28  
    {0x25d1, &op_enable,	  1, 255, 255, 0x1d, 0x02, 0x00, 0x00}, // enable b 29  
    {0x25e1, &op_enable,	  1, 255, 255, 0x1e, 0x02, 0x00, 0x00}, // enable b 30  
    {0x25f1, &op_enable,	  1, 255, 255, 0x1f, 0x02, 0x00, 0x00}, // enable b 31  
    {0x2601, &op_enable,	  1, 255, 255, 0x20, 0x02, 0x00, 0x00}, // enable b 32  
    {0x2611, &op_enable,	  1, 255, 255, 0x21, 0x02, 0x00, 0x00}, // enable b 33  
    {0x2621, &op_enable,	  1, 255, 255, 0x22, 0x02, 0x00, 0x00}, // enable b 34  
    {0x2631, &op_enable,	  1, 255, 255, 0x23, 0x02, 0x00, 0x00}, // enable b 35  
    {0x2641, &op_enable,	  1, 255, 255, 0x24, 0x02, 0x00, 0x00}, // enable b 36  
    {0x2651, &op_enable,	  1, 255, 255, 0x25, 0x02, 0x00, 0x00}, // enable b 37  
    {0x2661, &op_enable,	  1, 255, 255, 0x26, 0x02, 0x00, 0x00}, // enable b 38  
    {0x2671, &op_enable,	  1, 255, 255, 0x27, 0x02, 0x00, 0x00}, // enable b 39  
    {0x2681, &op_enable,	  1, 255, 255, 0x28, 0x02, 0x00, 0x00}, // enable b 40  
    {0x2691, &op_enable,	  1, 255, 255, 0x29, 0x02, 0x00, 0x00}, // enable b 41  
    {0x26a1, &op_enable,	  1, 255, 255, 0x2a, 0x02, 0x00, 0x00}, // enable b 42  
    {0x26b1, &op_enable,	  1, 255, 255, 0x2b, 0x02, 0x00, 0x00}, // enable b 43  
    {0x26c1, &op_enable,	  1, 255, 255, 0x2c, 0x02, 0x00, 0x00}, // enable b 44  
    {0x26d1, &op_enable,	  1, 255, 255, 0x2d, 0x02, 0x00, 0x00}, // enable b 45  
    {0x26e1, &op_enable,	  1, 255, 255, 0x2e, 0x02, 0x00, 0x00}, // enable b 46  
    {0x26f1, &op_enable,	  1, 255, 255, 0x2f, 0x02, 0x00, 0x00}, // enable b 47  
    {0x2701, &op_enable,	  1, 255, 255, 0x30, 0x02, 0x00, 0x00}, // enable b 48  
    {0x2711, &op_enable,	  1, 255, 255, 0x31, 0x02, 0x00, 0x00}, // enable b 49  
    {0x2721, &op_enable,	  1, 255, 255, 0x32, 0x02, 0x00, 0x00}, // enable b 50  
    {0x2731, &op_enable,	  1, 255, 255, 0x33, 0x02, 0x00, 0x00}, // enable b 51  
    {0x2741, &op_enable,	  1, 255, 255, 0x34, 0x02, 0x00, 0x00}, // enable b 52  
    {0x2751, &op_enable,	  1, 255, 255, 0x35, 0x02, 0x00, 0x00}, // enable b 53  
    {0x2761, &op_enable,	  1, 255, 255, 0x36, 0x02, 0x00, 0x00}, // enable b 54  
    {0x2771, &op_enable,	  1, 255, 255, 0x37, 0x02, 0x00, 0x00}, // enable b 55  
    {0x2781, &op_enable,	  1, 255, 255, 0x38, 0x02, 0x00, 0x00}, // enable b 56  
    {0x2791, &op_enable,	  1, 255, 255, 0x39, 0x02, 0x00, 0x00}, // enable b 57  
    {0x27a1, &op_enable,	  1, 255, 255, 0x3a, 0x02, 0x00, 0x00}, // enable b 58  
    {0x27b1, &op_enable,	  1, 255, 255, 0x3b, 0x02, 0x00, 0x00}, // enable b 59  
    {0x27c1, &op_enable,	  1, 255, 255, 0x3c, 0x02, 0x00, 0x00}, // enable b 60  
    {0x27d1, &op_enable,	  1, 255, 255, 0x3d, 0x02, 0x00, 0x00}, // enable b 61  
    {0x27e1, &op_enable,	  1, 255, 255, 0x3e, 0x02, 0x00, 0x00}, // enable b 62  
    {0x27f1, &op_enable,	  1, 255, 255, 0x3f, 0x02, 0x00, 0x00}, // enable b 63  
    {0x2402, &op_enable,	  2, 255, 255, 0x00, 0x02, 0x00, 0x00}, // enable c 0  
    {0x2412, &op_enable,	  2, 255, 255, 0x01, 0x02, 0x00, 0x00}, // enable c 1  
    {0x2422, &op_enable,	  2, 255, 255, 0x02, 0x02, 0x00, 0x00}, // enable c 2  
    {0x2432, &op_enable,	  2, 255, 255, 0x03, 0x02, 0x00, 0x00}, // enable c 3  
    {0x2442, &op_enable,	  2, 255, 255, 0x04, 0x02, 0x00, 0x00}, // enable c 4  
    {0x2452, &op_enable,	  2, 255, 255, 0x05, 0x02, 0x00, 0x00}, // enable c 5  
    {0x2462, &op_enable,	  2, 255, 255, 0x06, 0x02, 0x00, 0x00}, // enable c 6  
    {0x2472, &op_enable,	  2, 255, 255, 0x07, 0x02, 0x00, 0x00}, // enable c 7  
    {0x2482, &op_enable,	  2, 255, 255, 0x08, 0x02, 0x00, 0x00}, // enable c 8  
    {0x2492, &op_enable,	  2, 255, 255, 0x09, 0x02, 0x00, 0x00}, // enable c 9  
    {0x24a2, &op_enable,	  2, 255, 255, 0x0a, 0x02, 0x00, 0x00}, // enable c 10  
    {0x24b2, &op_enable,	  2, 255, 255, 0x0b, 0x02, 0x00, 0x00}, // enable c 11  
    {0x24c2, &op_enable,	  2, 255, 255, 0x0c, 0x02, 0x00, 0x00}, // enable c 12  
    {0x24d2, &op_enable,	  2, 255, 255, 0x0d, 0x02, 0x00, 0x00}, // enable c 13  
    {0x24e2, &op_enable,	  2, 255, 255, 0x0e, 0x02, 0x00, 0x00}, // enable c 14  
    {0x24f2, &op_enable,	  2, 255, 255, 0x0f, 0x02, 0x00, 0x00}, // enable c 15  
    {0x2502, &op_enable,	  2, 255, 255, 0x10, 0x02, 0x00, 0x00}, // enable c 16  
    {0x2512, &op_enable,	  2, 255, 255, 0x11, 0x02, 0x00, 0x00}, // enable c 17  
    {0x2522, &op_enable,	  2, 255, 255, 0x12, 0x02, 0x00, 0x00}, // enable c 18  
    {0x2532, &op_enable,	  2, 255, 255, 0x13, 0x02, 0x00, 0x00}, // enable c 19  
    {0x2542, &op_enable,	  2, 255, 255, 0x14, 0x02, 0x00, 0x00}, // enable c 20  
    {0x2552, &op_enable,	  2, 255, 255, 0x15, 0x02, 0x00, 0x00}, // enable c 21  
    {0x2562, &op_enable,	  2, 255, 255, 0x16, 0x02, 0x00, 0x00}, // enable c 22  
    {0x2572, &op_enable,	  2, 255, 255, 0x17, 0x02, 0x00, 0x00}, // enable c 23  
    {0x2582, &op_enable,	  2, 255, 255, 0x18, 0x02, 0x00, 0x00}, // enable c 24  
    {0x2592, &op_enable,	  2, 255, 255, 0x19, 0x02, 0x00, 0x00}, // enable c 25  
    {0x25a2, &op_enable,	  2, 255, 255, 0x1a, 0x02, 0x00, 0x00}, // enable c 26  
    {0x25b2, &op_enable,	  2, 255, 255, 0x1b, 0x02, 0x00, 0x00}, // enable c 27  
    {0x25c2, &op_enable,	  2, 255, 255, 0x1c, 0x02, 0x00, 0x00}, // enable c 28  
    {0x25d2, &op_enable,	  2, 255, 255, 0x1d, 0x02, 0x00, 0x00}, // enable c 29  
    {0x25e2, &op_enable,	  2, 255, 255, 0x1e, 0x02, 0x00, 0x00}, // enable c 30  
    {0x25f2, &op_enable,	  2, 255, 255, 0x1f, 0x02, 0x00, 0x00}, // enable c 31  
    {0x2602, &op_enable,	  2, 255, 255, 0x20, 0x02, 0x00, 0x00}, // enable c 32  
    {0x2612, &op_enable,	  2, 255, 255, 0x21, 0x02, 0x00, 0x00}, // enable c 33  
    {0x2622, &op_enable,	  2, 255, 255, 0x22, 0x02, 0x00, 0x00}, // enable c 34  
    {0x2632, &op_enable,	  2, 255, 255, 0x23, 0x02, 0x00, 0x00}, // enable c 35  
    {0x2642, &op_enable,	  2, 255, 255, 0x24, 0x02, 0x00, 0x00}, // enable c 36  
    {0x2652, &op_enable,	  2, 255, 255, 0x25, 0x02, 0x00, 0x00}, // enable c 37  
    {0x2662, &op_enable,	  2, 255, 255, 0x26, 0x02, 0x00, 0x00}, // enable c 38  
    {0x2672, &op_enable,	  2, 255, 255, 0x27, 0x02, 0x00, 0x00}, // enable c 39  
    {0x2682, &op_enable,	  2, 255, 255, 0x28, 0x02, 0x00, 0x00}, // enable c 40  
    {0x2692, &op_enable,	  2, 255, 255, 0x29, 0x02, 0x00, 0x00}, // enable c 41  
    {0x26a2, &op_enable,	  2, 255, 255, 0x2a, 0x02, 0x00, 0x00}, // enable c 42  
    {0x26b2, &op_enable,	  2, 255, 255, 0x2b, 0x02, 0x00, 0x00}, // enable c 43  
    {0x26c2, &op_enable,	  2, 255, 255, 0x2c, 0x02, 0x00, 0x00}, // enable c 44  
    {0x26d2, &op_enable,	  2, 255, 255, 0x2d, 0x02, 0x00, 0x00}, // enable c 45  
    {0x26e2, &op_enable,	  2, 255, 255, 0x2e, 0x02, 0x00, 0x00}, // enable c 46  
    {0x26f2, &op_enable,	  2, 255, 255, 0x2f, 0x02, 0x00, 0x00}, // enable c 47  
    {0x2702, &op_enable,	  2, 255, 255, 0x30, 0x02, 0x00, 0x00}, // enable c 48  
    {0x2712, &op_enable,	  2, 255, 255, 0x31, 0x02, 0x00, 0x00}, // enable c 49  
    {0x2722, &op_enable,	  2, 255, 255, 0x32, 0x02, 0x00, 0x00}, // enable c 50  
    {0x2732, &op_enable,	  2, 255, 255, 0x33, 0x02, 0x00, 0x00}, // enable c 51  
    {0x2742, &op_enable,	  2, 255, 255, 0x34, 0x02, 0x00, 0x00}, // enable c 52  
    {0x2752, &op_enable,	  2, 255, 255, 0x35, 0x02, 0x00, 0x00}, // enable c 53  
    {0x2762, &op_enable,	  2, 255, 255, 0x36, 0x02, 0x00, 0x00}, // enable c 54  
    {0x2772, &op_enable,	  2, 255, 255, 0x37, 0x02, 0x00, 0x00}, // enable c 55  
    {0x2782, &op_enable,	  2, 255, 255, 0x38, 0x02, 0x00, 0x00}, // enable c 56  
    {0x2792, &op_enable,	  2, 255, 255, 0x39, 0x02, 0x00, 0x00}, // enable c 57  
    {0x27a2, &op_enable,	  2, 255, 255, 0x3a, 0x02, 0x00, 0x00}, // enable c 58  
    {0x27b2, &op_enable,	  2, 255, 255, 0x3b, 0x02, 0x00, 0x00}, // enable c 59  
    {0x27c2, &op_enable,	  2, 255, 255, 0x3c, 0x02, 0x00, 0x00}, // enable c 60  
    {0x27d2, &op_enable,	  2, 255, 255, 0x3d, 0x02, 0x00, 0x00}, // enable c 61  
    {0x27e2, &op_enable,	  2, 255, 255, 0x3e, 0x02, 0x00, 0x00}, // enable c 62  
    {0x27f2, &op_enable,	  2, 255, 255, 0x3f, 0x02, 0x00, 0x00}, // enable c 63  
    {0x2403, &op_enable,	  3, 255, 255, 0x00, 0x02, 0x00, 0x00}, // enable d 0  
    {0x2413, &op_enable,	  3, 255, 255, 0x01, 0x02, 0x00, 0x00}, // enable d 1  
    {0x2423, &op_enable,	  3, 255, 255, 0x02, 0x02, 0x00, 0x00}, // enable d 2  
    {0x2433, &op_enable,	  3, 255, 255, 0x03, 0x02, 0x00, 0x00}, // enable d 3  
    {0x2443, &op_enable,	  3, 255, 255, 0x04, 0x02, 0x00, 0x00}, // enable d 4  
    {0x2453, &op_enable,	  3, 255, 255, 0x05, 0x02, 0x00, 0x00}, // enable d 5  
    {0x2463, &op_enable,	  3, 255, 255, 0x06, 0x02, 0x00, 0x00}, // enable d 6  
    {0x2473, &op_enable,	  3, 255, 255, 0x07, 0x02, 0x00, 0x00}, // enable d 7  
    {0x2483, &op_enable,	  3, 255, 255, 0x08, 0x02, 0x00, 0x00}, // enable d 8  
    {0x2493, &op_enable,	  3, 255, 255, 0x09, 0x02, 0x00, 0x00}, // enable d 9  
    {0x24a3, &op_enable,	  3, 255, 255, 0x0a, 0x02, 0x00, 0x00}, // enable d 10  
    {0x24b3, &op_enable,	  3, 255, 255, 0x0b, 0x02, 0x00, 0x00}, // enable d 11  
    {0x24c3, &op_enable,	  3, 255, 255, 0x0c, 0x02, 0x00, 0x00}, // enable d 12  
    {0x24d3, &op_enable,	  3, 255, 255, 0x0d, 0x02, 0x00, 0x00}, // enable d 13  
    {0x24e3, &op_enable,	  3, 255, 255, 0x0e, 0x02, 0x00, 0x00}, // enable d 14  
    {0x24f3, &op_enable,	  3, 255, 255, 0x0f, 0x02, 0x00, 0x00}, // enable d 15  
    {0x2503, &op_enable,	  3, 255, 255, 0x10, 0x02, 0x00, 0x00}, // enable d 16  
    {0x2513, &op_enable,	  3, 255, 255, 0x11, 0x02, 0x00, 0x00}, // enable d 17  
    {0x2523, &op_enable,	  3, 255, 255, 0x12, 0x02, 0x00, 0x00}, // enable d 18  
    {0x2533, &op_enable,	  3, 255, 255, 0x13, 0x02, 0x00, 0x00}, // enable d 19  
    {0x2543, &op_enable,	  3, 255, 255, 0x14, 0x02, 0x00, 0x00}, // enable d 20  
    {0x2553, &op_enable,	  3, 255, 255, 0x15, 0x02, 0x00, 0x00}, // enable d 21  
    {0x2563, &op_enable,	  3, 255, 255, 0x16, 0x02, 0x00, 0x00}, // enable d 22  
    {0x2573, &op_enable,	  3, 255, 255, 0x17, 0x02, 0x00, 0x00}, // enable d 23  
    {0x2583, &op_enable,	  3, 255, 255, 0x18, 0x02, 0x00, 0x00}, // enable d 24  
    {0x2593, &op_enable,	  3, 255, 255, 0x19, 0x02, 0x00, 0x00}, // enable d 25  
    {0x25a3, &op_enable,	  3, 255, 255, 0x1a, 0x02, 0x00, 0x00}, // enable d 26  
    {0x25b3, &op_enable,	  3, 255, 255, 0x1b, 0x02, 0x00, 0x00}, // enable d 27  
    {0x25c3, &op_enable,	  3, 255, 255, 0x1c, 0x02, 0x00, 0x00}, // enable d 28  
    {0x25d3, &op_enable,	  3, 255, 255, 0x1d, 0x02, 0x00, 0x00}, // enable d 29  
    {0x25e3, &op_enable,	  3, 255, 255, 0x1e, 0x02, 0x00, 0x00}, // enable d 30  
    {0x25f3, &op_enable,	  3, 255, 255, 0x1f, 0x02, 0x00, 0x00}, // enable d 31  
    {0x2603, &op_enable,	  3, 255, 255, 0x20, 0x02, 0x00, 0x00}, // enable d 32  
    {0x2613, &op_enable,	  3, 255, 255, 0x21, 0x02, 0x00, 0x00}, // enable d 33  
    {0x2623, &op_enable,	  3, 255, 255, 0x22, 0x02, 0x00, 0x00}, // enable d 34  
    {0x2633, &op_enable,	  3, 255, 255, 0x23, 0x02, 0x00, 0x00}, // enable d 35  
    {0x2643, &op_enable,	  3, 255, 255, 0x24, 0x02, 0x00, 0x00}, // enable d 36  
    {0x2653, &op_enable,	  3, 255, 255, 0x25, 0x02, 0x00, 0x00}, // enable d 37  
    {0x2663, &op_enable,	  3, 255, 255, 0x26, 0x02, 0x00, 0x00}, // enable d 38  
    {0x2673, &op_enable,	  3, 255, 255, 0x27, 0x02, 0x00, 0x00}, // enable d 39  
    {0x2683, &op_enable,	  3, 255, 255, 0x28, 0x02, 0x00, 0x00}, // enable d 40  
    {0x2693, &op_enable,	  3, 255, 255, 0x29, 0x02, 0x00, 0x00}, // enable d 41  
    {0x26a3, &op_enable,	  3, 255, 255, 0x2a, 0x02, 0x00, 0x00}, // enable d 42  
    {0x26b3, &op_enable,	  3, 255, 255, 0x2b, 0x02, 0x00, 0x00}, // enable d 43  
    {0x26c3, &op_enable,	  3, 255, 255, 0x2c, 0x02, 0x00, 0x00}, // enable d 44  
    {0x26d3, &op_enable,	  3, 255, 255, 0x2d, 0x02, 0x00, 0x00}, // enable d 45  
    {0x26e3, &op_enable,	  3, 255, 255, 0x2e, 0x02, 0x00, 0x00}, // enable d 46  
    {0x26f3, &op_enable,	  3, 255, 255, 0x2f, 0x02, 0x00, 0x00}, // enable d 47  
    {0x2703, &op_enable,	  3, 255, 255, 0x30, 0x02, 0x00, 0x00}, // enable d 48  
    {0x2713, &op_enable,	  3, 255, 255, 0x31, 0x02, 0x00, 0x00}, // enable d 49  
    {0x2723, &op_enable,	  3, 255, 255, 0x32, 0x02, 0x00, 0x00}, // enable d 50  
    {0x2733, &op_enable,	  3, 255, 255, 0x33, 0x02, 0x00, 0x00}, // enable d 51  
    {0x2743, &op_enable,	  3, 255, 255, 0x34, 0x02, 0x00, 0x00}, // enable d 52  
    {0x2753, &op_enable,	  3, 255, 255, 0x35, 0x02, 0x00, 0x00}, // enable d 53  
    {0x2763, &op_enable,	  3, 255, 255, 0x36, 0x02, 0x00, 0x00}, // enable d 54  
    {0x2773, &op_enable,	  3, 255, 255, 0x37, 0x02, 0x00, 0x00}, // enable d 55  
    {0x2783, &op_enable,	  3, 255, 255, 0x38, 0x02, 0x00, 0x00}, // enable d 56  
    {0x2793, &op_enable,	  3, 255, 255, 0x39, 0x02, 0x00, 0x00}, // enable d 57  
    {0x27a3, &op_enable,	  3, 255, 255, 0x3a, 0x02, 0x00, 0x00}, // enable d 58  
    {0x27b3, &op_enable,	  3, 255, 255, 0x3b, 0x02, 0x00, 0x00}, // enable d 59  
    {0x27c3, &op_enable,	  3, 255, 255, 0x3c, 0x02, 0x00, 0x00}, // enable d 60  
    {0x27d3, &op_enable,	  3, 255, 255, 0x3d, 0x02, 0x00, 0x00}, // enable d 61  
    {0x27e3, &op_enable,	  3, 255, 255, 0x3e, 0x02, 0x00, 0x00}, // enable d 62  
    {0x27f3, &op_enable,	  3, 255, 255, 0x3f, 0x02, 0x00, 0x00}, // enable d 63  
    {0x2404, &op_enable,	  4, 255, 255, 0x00, 0x02, 0x00, 0x00}, // enable e 0  
    {0x2414, &op_enable,	  4, 255, 255, 0x01, 0x02, 0x00, 0x00}, // enable e 1  
    {0x2424, &op_enable,	  4, 255, 255, 0x02, 0x02, 0x00, 0x00}, // enable e 2  
    {0x2434, &op_enable,	  4, 255, 255, 0x03, 0x02, 0x00, 0x00}, // enable e 3  
    {0x2444, &op_enable,	  4, 255, 255, 0x04, 0x02, 0x00, 0x00}, // enable e 4  
    {0x2454, &op_enable,	  4, 255, 255, 0x05, 0x02, 0x00, 0x00}, // enable e 5  
    {0x2464, &op_enable,	  4, 255, 255, 0x06, 0x02, 0x00, 0x00}, // enable e 6  
    {0x2474, &op_enable,	  4, 255, 255, 0x07, 0x02, 0x00, 0x00}, // enable e 7  
    {0x2484, &op_enable,	  4, 255, 255, 0x08, 0x02, 0x00, 0x00}, // enable e 8  
    {0x2494, &op_enable,	  4, 255, 255, 0x09, 0x02, 0x00, 0x00}, // enable e 9  
    {0x24a4, &op_enable,	  4, 255, 255, 0x0a, 0x02, 0x00, 0x00}, // enable e 10  
    {0x24b4, &op_enable,	  4, 255, 255, 0x0b, 0x02, 0x00, 0x00}, // enable e 11  
    {0x24c4, &op_enable,	  4, 255, 255, 0x0c, 0x02, 0x00, 0x00}, // enable e 12  
    {0x24d4, &op_enable,	  4, 255, 255, 0x0d, 0x02, 0x00, 0x00}, // enable e 13  
    {0x24e4, &op_enable,	  4, 255, 255, 0x0e, 0x02, 0x00, 0x00}, // enable e 14  
    {0x24f4, &op_enable,	  4, 255, 255, 0x0f, 0x02, 0x00, 0x00}, // enable e 15  
    {0x2504, &op_enable,	  4, 255, 255, 0x10, 0x02, 0x00, 0x00}, // enable e 16  
    {0x2514, &op_enable,	  4, 255, 255, 0x11, 0x02, 0x00, 0x00}, // enable e 17  
    {0x2524, &op_enable,	  4, 255, 255, 0x12, 0x02, 0x00, 0x00}, // enable e 18  
    {0x2534, &op_enable,	  4, 255, 255, 0x13, 0x02, 0x00, 0x00}, // enable e 19  
    {0x2544, &op_enable,	  4, 255, 255, 0x14, 0x02, 0x00, 0x00}, // enable e 20  
    {0x2554, &op_enable,	  4, 255, 255, 0x15, 0x02, 0x00, 0x00}, // enable e 21  
    {0x2564, &op_enable,	  4, 255, 255, 0x16, 0x02, 0x00, 0x00}, // enable e 22  
    {0x2574, &op_enable,	  4, 255, 255, 0x17, 0x02, 0x00, 0x00}, // enable e 23  
    {0x2584, &op_enable,	  4, 255, 255, 0x18, 0x02, 0x00, 0x00}, // enable e 24  
    {0x2594, &op_enable,	  4, 255, 255, 0x19, 0x02, 0x00, 0x00}, // enable e 25  
    {0x25a4, &op_enable,	  4, 255, 255, 0x1a, 0x02, 0x00, 0x00}, // enable e 26  
    {0x25b4, &op_enable,	  4, 255, 255, 0x1b, 0x02, 0x00, 0x00}, // enable e 27  
    {0x25c4, &op_enable,	  4, 255, 255, 0x1c, 0x02, 0x00, 0x00}, // enable e 28  
    {0x25d4, &op_enable,	  4, 255, 255, 0x1d, 0x02, 0x00, 0x00}, // enable e 29  
    {0x25e4, &op_enable,	  4, 255, 255, 0x1e, 0x02, 0x00, 0x00}, // enable e 30  
    {0x25f4, &op_enable,	  4, 255, 255, 0x1f, 0x02, 0x00, 0x00}, // enable e 31  
    {0x2604, &op_enable,	  4, 255, 255, 0x20, 0x02, 0x00, 0x00}, // enable e 32  
    {0x2614, &op_enable,	  4, 255, 255, 0x21, 0x02, 0x00, 0x00}, // enable e 33  
    {0x2624, &op_enable,	  4, 255, 255, 0x22, 0x02, 0x00, 0x00}, // enable e 34  
    {0x2634, &op_enable,	  4, 255, 255, 0x23, 0x02, 0x00, 0x00}, // enable e 35  
    {0x2644, &op_enable,	  4, 255, 255, 0x24, 0x02, 0x00, 0x00}, // enable e 36  
    {0x2654, &op_enable,	  4, 255, 255, 0x25, 0x02, 0x00, 0x00}, // enable e 37  
    {0x2664, &op_enable,	  4, 255, 255, 0x26, 0x02, 0x00, 0x00}, // enable e 38  
    {0x2674, &op_enable,	  4, 255, 255, 0x27, 0x02, 0x00, 0x00}, // enable e 39  
    {0x2684, &op_enable,	  4, 255, 255, 0x28, 0x02, 0x00, 0x00}, // enable e 40  
    {0x2694, &op_enable,	  4, 255, 255, 0x29, 0x02, 0x00, 0x00}, // enable e 41  
    {0x26a4, &op_enable,	  4, 255, 255, 0x2a, 0x02, 0x00, 0x00}, // enable e 42  
    {0x26b4, &op_enable,	  4, 255, 255, 0x2b, 0x02, 0x00, 0x00}, // enable e 43  
    {0x26c4, &op_enable,	  4, 255, 255, 0x2c, 0x02, 0x00, 0x00}, // enable e 44  
    {0x26d4, &op_enable,	  4, 255, 255, 0x2d, 0x02, 0x00, 0x00}, // enable e 45  
    {0x26e4, &op_enable,	  4, 255, 255, 0x2e, 0x02, 0x00, 0x00}, // enable e 46  
    {0x26f4, &op_enable,	  4, 255, 255, 0x2f, 0x02, 0x00, 0x00}, // enable e 47  
    {0x2704, &op_enable,	  4, 255, 255, 0x30, 0x02, 0x00, 0x00}, // enable e 48  
    {0x2714, &op_enable,	  4, 255, 255, 0x31, 0x02, 0x00, 0x00}, // enable e 49  
    {0x2724, &op_enable,	  4, 255, 255, 0x32, 0x02, 0x00, 0x00}, // enable e 50  
    {0x2734, &op_enable,	  4, 255, 255, 0x33, 0x02, 0x00, 0x00}, // enable e 51  
    {0x2744, &op_enable,	  4, 255, 255, 0x34, 0x02, 0x00, 0x00}, // enable e 52  
    {0x2754, &op_enable,	  4, 255, 255, 0x35, 0x02, 0x00, 0x00}, // enable e 53  
    {0x2764, &op_enable,	  4, 255, 255, 0x36, 0x02, 0x00, 0x00}, // enable e 54  
    {0x2774, &op_enable,	  4, 255, 255, 0x37, 0x02, 0x00, 0x00}, // enable e 55  
    {0x2784, &op_enable,	  4, 255, 255, 0x38, 0x02, 0x00, 0x00}, // enable e 56  
    {0x2794, &op_enable,	  4, 255, 255, 0x39, 0x02, 0x00, 0x00}, // enable e 57  
    {0x27a4, &op_enable,	  4, 255, 255, 0x3a, 0x02, 0x00, 0x00}, // enable e 58  
    {0x27b4, &op_enable,	  4, 255, 255, 0x3b, 0x02, 0x00, 0x00}, // enable e 59  
    {0x27c4, &op_enable,	  4, 255, 255, 0x3c, 0x02, 0x00, 0x00}, // enable e 60  
    {0x27d4, &op_enable,	  4, 255, 255, 0x3d, 0x02, 0x00, 0x00}, // enable e 61  
    {0x27e4, &op_enable,	  4, 255, 255, 0x3e, 0x02, 0x00, 0x00}, // enable e 62  
    {0x27f4, &op_enable,	  4, 255, 255, 0x3f, 0x02, 0x00, 0x00}, // enable e 63  
    {0x2405, &op_enable,	  5, 255, 255, 0x00, 0x02, 0x00, 0x00}, // enable f 0  
    {0x2415, &op_enable,	  5, 255, 255, 0x01, 0x02, 0x00, 0x00}, // enable f 1  
    {0x2425, &op_enable,	  5, 255, 255, 0x02, 0x02, 0x00, 0x00}, // enable f 2  
    {0x2435, &op_enable,	  5, 255, 255, 0x03, 0x02, 0x00, 0x00}, // enable f 3  
    {0x2445, &op_enable,	  5, 255, 255, 0x04, 0x02, 0x00, 0x00}, // enable f 4  
    {0x2455, &op_enable,	  5, 255, 255, 0x05, 0x02, 0x00, 0x00}, // enable f 5  
    {0x2465, &op_enable,	  5, 255, 255, 0x06, 0x02, 0x00, 0x00}, // enable f 6  
    {0x2475, &op_enable,	  5, 255, 255, 0x07, 0x02, 0x00, 0x00}, // enable f 7  
    {0x2485, &op_enable,	  5, 255, 255, 0x08, 0x02, 0x00, 0x00}, // enable f 8  
    {0x2495, &op_enable,	  5, 255, 255, 0x09, 0x02, 0x00, 0x00}, // enable f 9  
    {0x24a5, &op_enable,	  5, 255, 255, 0x0a, 0x02, 0x00, 0x00}, // enable f 10  
    {0x24b5, &op_enable,	  5, 255, 255, 0x0b, 0x02, 0x00, 0x00}, // enable f 11  
    {0x24c5, &op_enable,	  5, 255, 255, 0x0c, 0x02, 0x00, 0x00}, // enable f 12  
    {0x24d5, &op_enable,	  5, 255, 255, 0x0d, 0x02, 0x00, 0x00}, // enable f 13  
    {0x24e5, &op_enable,	  5, 255, 255, 0x0e, 0x02, 0x00, 0x00}, // enable f 14  
    {0x24f5, &op_enable,	  5, 255, 255, 0x0f, 0x02, 0x00, 0x00}, // enable f 15  
    {0x2505, &op_enable,	  5, 255, 255, 0x10, 0x02, 0x00, 0x00}, // enable f 16  
    {0x2515, &op_enable,	  5, 255, 255, 0x11, 0x02, 0x00, 0x00}, // enable f 17  
    {0x2525, &op_enable,	  5, 255, 255, 0x12, 0x02, 0x00, 0x00}, // enable f 18  
    {0x2535, &op_enable,	  5, 255, 255, 0x13, 0x02, 0x00, 0x00}, // enable f 19  
    {0x2545, &op_enable,	  5, 255, 255, 0x14, 0x02, 0x00, 0x00}, // enable f 20  
    {0x2555, &op_enable,	  5, 255, 255, 0x15, 0x02, 0x00, 0x00}, // enable f 21  
    {0x2565, &op_enable,	  5, 255, 255, 0x16, 0x02, 0x00, 0x00}, // enable f 22  
    {0x2575, &op_enable,	  5, 255, 255, 0x17, 0x02, 0x00, 0x00}, // enable f 23  
    {0x2585, &op_enable,	  5, 255, 255, 0x18, 0x02, 0x00, 0x00}, // enable f 24  
    {0x2595, &op_enable,	  5, 255, 255, 0x19, 0x02, 0x00, 0x00}, // enable f 25  
    {0x25a5, &op_enable,	  5, 255, 255, 0x1a, 0x02, 0x00, 0x00}, // enable f 26  
    {0x25b5, &op_enable,	  5, 255, 255, 0x1b, 0x02, 0x00, 0x00}, // enable f 27  
    {0x25c5, &op_enable,	  5, 255, 255, 0x1c, 0x02, 0x00, 0x00}, // enable f 28  
    {0x25d5, &op_enable,	  5, 255, 255, 0x1d, 0x02, 0x00, 0x00}, // enable f 29  
    {0x25e5, &op_enable,	  5, 255, 255, 0x1e, 0x02, 0x00, 0x00}, // enable f 30  
    {0x25f5, &op_enable,	  5, 255, 255, 0x1f, 0x02, 0x00, 0x00}, // enable f 31  
    {0x2605, &op_enable,	  5, 255, 255, 0x20, 0x02, 0x00, 0x00}, // enable f 32  
    {0x2615, &op_enable,	  5, 255, 255, 0x21, 0x02, 0x00, 0x00}, // enable f 33  
    {0x2625, &op_enable,	  5, 255, 255, 0x22, 0x02, 0x00, 0x00}, // enable f 34  
    {0x2635, &op_enable,	  5, 255, 255, 0x23, 0x02, 0x00, 0x00}, // enable f 35  
    {0x2645, &op_enable,	  5, 255, 255, 0x24, 0x02, 0x00, 0x00}, // enable f 36  
    {0x2655, &op_enable,	  5, 255, 255, 0x25, 0x02, 0x00, 0x00}, // enable f 37  
    {0x2665, &op_enable,	  5, 255, 255, 0x26, 0x02, 0x00, 0x00}, // enable f 38  
    {0x2675, &op_enable,	  5, 255, 255, 0x27, 0x02, 0x00, 0x00}, // enable f 39  
    {0x2685, &op_enable,	  5, 255, 255, 0x28, 0x02, 0x00, 0x00}, // enable f 40  
    {0x2695, &op_enable,	  5, 255, 255, 0x29, 0x02, 0x00, 0x00}, // enable f 41  
    {0x26a5, &op_enable,	  5, 255, 255, 0x2a, 0x02, 0x00, 0x00}, // enable f 42  
    {0x26b5, &op_enable,	  5, 255, 255, 0x2b, 0x02, 0x00, 0x00}, // enable f 43  
    {0x26c5, &op_enable,	  5, 255, 255, 0x2c, 0x02, 0x00, 0x00}, // enable f 44  
    {0x26d5, &op_enable,	  5, 255, 255, 0x2d, 0x02, 0x00, 0x00}, // enable f 45  
    {0x26e5, &op_enable,	  5, 255, 255, 0x2e, 0x02, 0x00, 0x00}, // enable f 46  
    {0x26f5, &op_enable,	  5, 255, 255, 0x2f, 0x02, 0x00, 0x00}, // enable f 47  
    {0x2705, &op_enable,	  5, 255, 255, 0x30, 0x02, 0x00, 0x00}, // enable f 48  
    {0x2715, &op_enable,	  5, 255, 255, 0x31, 0x02, 0x00, 0x00}, // enable f 49  
    {0x2725, &op_enable,	  5, 255, 255, 0x32, 0x02, 0x00, 0x00}, // enable f 50  
    {0x2735, &op_enable,	  5, 255, 255, 0x33, 0x02, 0x00, 0x00}, // enable f 51  
    {0x2745, &op_enable,	  5, 255, 255, 0x34, 0x02, 0x00, 0x00}, // enable f 52  
    {0x2755, &op_enable,	  5, 255, 255, 0x35, 0x02, 0x00, 0x00}, // enable f 53  
    {0x2765, &op_enable,	  5, 255, 255, 0x36, 0x02, 0x00, 0x00}, // enable f 54  
    {0x2775, &op_enable,	  5, 255, 255, 0x37, 0x02, 0x00, 0x00}, // enable f 55  
    {0x2785, &op_enable,	  5, 255, 255, 0x38, 0x02, 0x00, 0x00}, // enable f 56  
    {0x2795, &op_enable,	  5, 255, 255, 0x39, 0x02, 0x00, 0x00}, // enable f 57  
    {0x27a5, &op_enable,	  5, 255, 255, 0x3a, 0x02, 0x00, 0x00}, // enable f 58  
    {0x27b5, &op_enable,	  5, 255, 255, 0x3b, 0x02, 0x00, 0x00}, // enable f 59  
    {0x27c5, &op_enable,	  5, 255, 255, 0x3c, 0x02, 0x00, 0x00}, // enable f 60  
    {0x27d5, &op_enable,	  5, 255, 255, 0x3d, 0x02, 0x00, 0x00}, // enable f 61  
    {0x27e5, &op_enable,	  5, 255, 255, 0x3e, 0x02, 0x00, 0x00}, // enable f 62  
    {0x27f5, &op_enable,	  5, 255, 255, 0x3f, 0x02, 0x00, 0x00}, // enable f 63  
    {0x2406, &op_enable,	  6, 255, 255, 0x00, 0x02, 0x00, 0x00}, // enable g 0  
    {0x2416, &op_enable,	  6, 255, 255, 0x01, 0x02, 0x00, 0x00}, // enable g 1  
    {0x2426, &op_enable,	  6, 255, 255, 0x02, 0x02, 0x00, 0x00}, // enable g 2  
    {0x2436, &op_enable,	  6, 255, 255, 0x03, 0x02, 0x00, 0x00}, // enable g 3  
    {0x2446, &op_enable,	  6, 255, 255, 0x04, 0x02, 0x00, 0x00}, // enable g 4  
    {0x2456, &op_enable,	  6, 255, 255, 0x05, 0x02, 0x00, 0x00}, // enable g 5  
    {0x2466, &op_enable,	  6, 255, 255, 0x06, 0x02, 0x00, 0x00}, // enable g 6  
    {0x2476, &op_enable,	  6, 255, 255, 0x07, 0x02, 0x00, 0x00}, // enable g 7  
    {0x2486, &op_enable,	  6, 255, 255, 0x08, 0x02, 0x00, 0x00}, // enable g 8  
    {0x2496, &op_enable,	  6, 255, 255, 0x09, 0x02, 0x00, 0x00}, // enable g 9  
    {0x24a6, &op_enable,	  6, 255, 255, 0x0a, 0x02, 0x00, 0x00}, // enable g 10  
    {0x24b6, &op_enable,	  6, 255, 255, 0x0b, 0x02, 0x00, 0x00}, // enable g 11  
    {0x24c6, &op_enable,	  6, 255, 255, 0x0c, 0x02, 0x00, 0x00}, // enable g 12  
    {0x24d6, &op_enable,	  6, 255, 255, 0x0d, 0x02, 0x00, 0x00}, // enable g 13  
    {0x24e6, &op_enable,	  6, 255, 255, 0x0e, 0x02, 0x00, 0x00}, // enable g 14  
    {0x24f6, &op_enable,	  6, 255, 255, 0x0f, 0x02, 0x00, 0x00}, // enable g 15  
    {0x2506, &op_enable,	  6, 255, 255, 0x10, 0x02, 0x00, 0x00}, // enable g 16  
    {0x2516, &op_enable,	  6, 255, 255, 0x11, 0x02, 0x00, 0x00}, // enable g 17  
    {0x2526, &op_enable,	  6, 255, 255, 0x12, 0x02, 0x00, 0x00}, // enable g 18  
    {0x2536, &op_enable,	  6, 255, 255, 0x13, 0x02, 0x00, 0x00}, // enable g 19  
    {0x2546, &op_enable,	  6, 255, 255, 0x14, 0x02, 0x00, 0x00}, // enable g 20  
    {0x2556, &op_enable,	  6, 255, 255, 0x15, 0x02, 0x00, 0x00}, // enable g 21  
    {0x2566, &op_enable,	  6, 255, 255, 0x16, 0x02, 0x00, 0x00}, // enable g 22  
    {0x2576, &op_enable,	  6, 255, 255, 0x17, 0x02, 0x00, 0x00}, // enable g 23  
    {0x2586, &op_enable,	  6, 255, 255, 0x18, 0x02, 0x00, 0x00}, // enable g 24  
    {0x2596, &op_enable,	  6, 255, 255, 0x19, 0x02, 0x00, 0x00}, // enable g 25  
    {0x25a6, &op_enable,	  6, 255, 255, 0x1a, 0x02, 0x00, 0x00}, // enable g 26  
    {0x25b6, &op_enable,	  6, 255, 255, 0x1b, 0x02, 0x00, 0x00}, // enable g 27  
    {0x25c6, &op_enable,	  6, 255, 255, 0x1c, 0x02, 0x00, 0x00}, // enable g 28  
    {0x25d6, &op_enable,	  6, 255, 255, 0x1d, 0x02, 0x00, 0x00}, // enable g 29  
    {0x25e6, &op_enable,	  6, 255, 255, 0x1e, 0x02, 0x00, 0x00}, // enable g 30  
    {0x25f6, &op_enable,	  6, 255, 255, 0x1f, 0x02, 0x00, 0x00}, // enable g 31  
    {0x2606, &op_enable,	  6, 255, 255, 0x20, 0x02, 0x00, 0x00}, // enable g 32  
    {0x2616, &op_enable,	  6, 255, 255, 0x21, 0x02, 0x00, 0x00}, // enable g 33  
    {0x2626, &op_enable,	  6, 255, 255, 0x22, 0x02, 0x00, 0x00}, // enable g 34  
    {0x2636, &op_enable,	  6, 255, 255, 0x23, 0x02, 0x00, 0x00}, // enable g 35  
    {0x2646, &op_enable,	  6, 255, 255, 0x24, 0x02, 0x00, 0x00}, // enable g 36  
    {0x2656, &op_enable,	  6, 255, 255, 0x25, 0x02, 0x00, 0x00}, // enable g 37  
    {0x2666, &op_enable,	  6, 255, 255, 0x26, 0x02, 0x00, 0x00}, // enable g 38  
    {0x2676, &op_enable,	  6, 255, 255, 0x27, 0x02, 0x00, 0x00}, // enable g 39  
    {0x2686, &op_enable,	  6, 255, 255, 0x28, 0x02, 0x00, 0x00}, // enable g 40  
    {0x2696, &op_enable,	  6, 255, 255, 0x29, 0x02, 0x00, 0x00}, // enable g 41  
    {0x26a6, &op_enable,	  6, 255, 255, 0x2a, 0x02, 0x00, 0x00}, // enable g 42  
    {0x26b6, &op_enable,	  6, 255, 255, 0x2b, 0x02, 0x00, 0x00}, // enable g 43  
    {0x26c6, &op_enable,	  6, 255, 255, 0x2c, 0x02, 0x00, 0x00}, // enable g 44  
    {0x26d6, &op_enable,	  6, 255, 255, 0x2d, 0x02, 0x00, 0x00}, // enable g 45  
    {0x26e6, &op_enable,	  6, 255, 255, 0x2e, 0x02, 0x00, 0x00}, // enable g 46  
    {0x26f6, &op_enable,	  6, 255, 255, 0x2f, 0x02, 0x00, 0x00}, // enable g 47  
    {0x2706, &op_enable,	  6, 255, 255, 0x30, 0x02, 0x00, 0x00}, // enable g 48  
    {0x2716, &op_enable,	  6, 255, 255, 0x31, 0x02, 0x00, 0x00}, // enable g 49  
    {0x2726, &op_enable,	  6, 255, 255, 0x32, 0x02, 0x00, 0x00}, // enable g 50  
    {0x2736, &op_enable,	  6, 255, 255, 0x33, 0x02, 0x00, 0x00}, // enable g 51  
    {0x2746, &op_enable,	  6, 255, 255, 0x34, 0x02, 0x00, 0x00}, // enable g 52  
    {0x2756, &op_enable,	  6, 255, 255, 0x35, 0x02, 0x00, 0x00}, // enable g 53  
    {0x2766, &op_enable,	  6, 255, 255, 0x36, 0x02, 0x00, 0x00}, // enable g 54  
    {0x2776, &op_enable,	  6, 255, 255, 0x37, 0x02, 0x00, 0x00}, // enable g 55  
    {0x2786, &op_enable,	  6, 255, 255, 0x38, 0x02, 0x00, 0x00}, // enable g 56  
    {0x2796, &op_enable,	  6, 255, 255, 0x39, 0x02, 0x00, 0x00}, // enable g 57  
    {0x27a6, &op_enable,	  6, 255, 255, 0x3a, 0x02, 0x00, 0x00}, // enable g 58  
    {0x27b6, &op_enable,	  6, 255, 255, 0x3b, 0x02, 0x00, 0x00}, // enable g 59  
    {0x27c6, &op_enable,	  6, 255, 255, 0x3c, 0x02, 0x00, 0x00}, // enable g 60  
    {0x27d6, &op_enable,	  6, 255, 255, 0x3d, 0x02, 0x00, 0x00}, // enable g 61  
    {0x27e6, &op_enable,	  6, 255, 255, 0x3e, 0x02, 0x00, 0x00}, // enable g 62  
    {0x27f6, &op_enable,	  6, 255, 255, 0x3f, 0x02, 0x00, 0x00}, // enable g 63  
    {0x2407, &op_enable,	  7, 255, 255, 0x00, 0x02, 0x00, 0x00}, // enable h 0  
    {0x2417, &op_enable,	  7, 255, 255, 0x01, 0x02, 0x00, 0x00}, // enable h 1  
    {0x2427, &op_enable,	  7, 255, 255, 0x02, 0x02, 0x00, 0x00}, // enable h 2  
    {0x2437, &op_enable,	  7, 255, 255, 0x03, 0x02, 0x00, 0x00}, // enable h 3  
    {0x2447, &op_enable,	  7, 255, 255, 0x04, 0x02, 0x00, 0x00}, // enable h 4  
    {0x2457, &op_enable,	  7, 255, 255, 0x05, 0x02, 0x00, 0x00}, // enable h 5  
    {0x2467, &op_enable,	  7, 255, 255, 0x06, 0x02, 0x00, 0x00}, // enable h 6  
    {0x2477, &op_enable,	  7, 255, 255, 0x07, 0x02, 0x00, 0x00}, // enable h 7  
    {0x2487, &op_enable,	  7, 255, 255, 0x08, 0x02, 0x00, 0x00}, // enable h 8  
    {0x2497, &op_enable,	  7, 255, 255, 0x09, 0x02, 0x00, 0x00}, // enable h 9  
    {0x24a7, &op_enable,	  7, 255, 255, 0x0a, 0x02, 0x00, 0x00}, // enable h 10  
    {0x24b7, &op_enable,	  7, 255, 255, 0x0b, 0x02, 0x00, 0x00}, // enable h 11  
    {0x24c7, &op_enable,	  7, 255, 255, 0x0c, 0x02, 0x00, 0x00}, // enable h 12  
    {0x24d7, &op_enable,	  7, 255, 255, 0x0d, 0x02, 0x00, 0x00}, // enable h 13  
    {0x24e7, &op_enable,	  7, 255, 255, 0x0e, 0x02, 0x00, 0x00}, // enable h 14  
    {0x24f7, &op_enable,	  7, 255, 255, 0x0f, 0x02, 0x00, 0x00}, // enable h 15  
    {0x2507, &op_enable,	  7, 255, 255, 0x10, 0x02, 0x00, 0x00}, // enable h 16  
    {0x2517, &op_enable,	  7, 255, 255, 0x11, 0x02, 0x00, 0x00}, // enable h 17  
    {0x2527, &op_enable,	  7, 255, 255, 0x12, 0x02, 0x00, 0x00}, // enable h 18  
    {0x2537, &op_enable,	  7, 255, 255, 0x13, 0x02, 0x00, 0x00}, // enable h 19  
    {0x2547, &op_enable,	  7, 255, 255, 0x14, 0x02, 0x00, 0x00}, // enable h 20  
    {0x2557, &op_enable,	  7, 255, 255, 0x15, 0x02, 0x00, 0x00}, // enable h 21  
    {0x2567, &op_enable,	  7, 255, 255, 0x16, 0x02, 0x00, 0x00}, // enable h 22  
    {0x2577, &op_enable,	  7, 255, 255, 0x17, 0x02, 0x00, 0x00}, // enable h 23  
    {0x2587, &op_enable,	  7, 255, 255, 0x18, 0x02, 0x00, 0x00}, // enable h 24  
    {0x2597, &op_enable,	  7, 255, 255, 0x19, 0x02, 0x00, 0x00}, // enable h 25  
    {0x25a7, &op_enable,	  7, 255, 255, 0x1a, 0x02, 0x00, 0x00}, // enable h 26  
    {0x25b7, &op_enable,	  7, 255, 255, 0x1b, 0x02, 0x00, 0x00}, // enable h 27  
    {0x25c7, &op_enable,	  7, 255, 255, 0x1c, 0x02, 0x00, 0x00}, // enable h 28  
    {0x25d7, &op_enable,	  7, 255, 255, 0x1d, 0x02, 0x00, 0x00}, // enable h 29  
    {0x25e7, &op_enable,	  7, 255, 255, 0x1e, 0x02, 0x00, 0x00}, // enable h 30  
    {0x25f7, &op_enable,	  7, 255, 255, 0x1f, 0x02, 0x00, 0x00}, // enable h 31  
    {0x2607, &op_enable,	  7, 255, 255, 0x20, 0x02, 0x00, 0x00}, // enable h 32  
    {0x2617, &op_enable,	  7, 255, 255, 0x21, 0x02, 0x00, 0x00}, // enable h 33  
    {0x2627, &op_enable,	  7, 255, 255, 0x22, 0x02, 0x00, 0x00}, // enable h 34  
    {0x2637, &op_enable,	  7, 255, 255, 0x23, 0x02, 0x00, 0x00}, // enable h 35  
    {0x2647, &op_enable,	  7, 255, 255, 0x24, 0x02, 0x00, 0x00}, // enable h 36  
    {0x2657, &op_enable,	  7, 255, 255, 0x25, 0x02, 0x00, 0x00}, // enable h 37  
    {0x2667, &op_enable,	  7, 255, 255, 0x26, 0x02, 0x00, 0x00}, // enable h 38  
    {0x2677, &op_enable,	  7, 255, 255, 0x27, 0x02, 0x00, 0x00}, // enable h 39  
    {0x2687, &op_enable,	  7, 255, 255, 0x28, 0x02, 0x00, 0x00}, // enable h 40  
    {0x2697, &op_enable,	  7, 255, 255, 0x29, 0x02, 0x00, 0x00}, // enable h 41  
    {0x26a7, &op_enable,	  7, 255, 255, 0x2a, 0x02, 0x00, 0x00}, // enable h 42  
    {0x26b7, &op_enable,	  7, 255, 255, 0x2b, 0x02, 0x00, 0x00}, // enable h 43  
    {0x26c7, &op_enable,	  7, 255, 255, 0x2c, 0x02, 0x00, 0x00}, // enable h 44  
    {0x26d7, &op_enable,	  7, 255, 255, 0x2d, 0x02, 0x00, 0x00}, // enable h 45  
    {0x26e7, &op_enable,	  7, 255, 255, 0x2e, 0x02, 0x00, 0x00}, // enable h 46  
    {0x26f7, &op_enable,	  7, 255, 255, 0x2f, 0x02, 0x00, 0x00}, // enable h 47  
    {0x2707, &op_enable,	  7, 255, 255, 0x30, 0x02, 0x00, 0x00}, // enable h 48  
    {0x2717, &op_enable,	  7, 255, 255, 0x31, 0x02, 0x00, 0x00}, // enable h 49  
    {0x2727, &op_enable,	  7, 255, 255, 0x32, 0x02, 0x00, 0x00}, // enable h 50  
    {0x2737, &op_enable,	  7, 255, 255, 0x33, 0x02, 0x00, 0x00}, // enable h 51  
    {0x2747, &op_enable,	  7, 255, 255, 0x34, 0x02, 0x00, 0x00}, // enable h 52  
    {0x2757, &op_enable,	  7, 255, 255, 0x35, 0x02, 0x00, 0x00}, // enable h 53  
    {0x2767, &op_enable,	  7, 255, 255, 0x36, 0x02, 0x00, 0x00}, // enable h 54  
    {0x2777, &op_enable,	  7, 255, 255, 0x37, 0x02, 0x00, 0x00}, // enable h 55  
    {0x2787, &op_enable,	  7, 255, 255, 0x38, 0x02, 0x00, 0x00}, // enable h 56  
    {0x2797, &op_enable,	  7, 255, 255, 0x39, 0x02, 0x00, 0x00}, // enable h 57  
    {0x27a7, &op_enable,	  7, 255, 255, 0x3a, 0x02, 0x00, 0x00}, // enable h 58  
    {0x27b7, &op_enable,	  7, 255, 255, 0x3b, 0x02, 0x00, 0x00}, // enable h 59  
    {0x27c7, &op_enable,	  7, 255, 255, 0x3c, 0x02, 0x00, 0x00}, // enable h 60  
    {0x27d7, &op_enable,	  7, 255, 255, 0x3d, 0x02, 0x00, 0x00}, // enable h 61  
    {0x27e7, &op_enable,	  7, 255, 255, 0x3e, 0x02, 0x00, 0x00}, // enable h 62  
    {0x27f7, &op_enable,	  7, 255, 255, 0x3f, 0x02, 0x00, 0x00}, // enable h 63  
    {0x2408, &op_enable,	  8, 255, 255, 0x00, 0x02, 0x00, 0x00}, // enable pc 0  
    {0x2418, &op_enable,	  8, 255, 255, 0x01, 0x02, 0x00, 0x00}, // enable pc 1  
    {0x2428, &op_enable,	  8, 255, 255, 0x02, 0x02, 0x00, 0x00}, // enable pc 2  
    {0x2438, &op_enable,	  8, 255, 255, 0x03, 0x02, 0x00, 0x00}, // enable pc 3  
    {0x2448, &op_enable,	  8, 255, 255, 0x04, 0x02, 0x00, 0x00}, // enable pc 4  
    {0x2458, &op_enable,	  8, 255, 255, 0x05, 0x02, 0x00, 0x00}, // enable pc 5  
    {0x2468, &op_enable,	  8, 255, 255, 0x06, 0x02, 0x00, 0x00}, // enable pc 6  
    {0x2478, &op_enable,	  8, 255, 255, 0x07, 0x02, 0x00, 0x00}, // enable pc 7  
    {0x2488, &op_enable,	  8, 255, 255, 0x08, 0x02, 0x00, 0x00}, // enable pc 8  
    {0x2498, &op_enable,	  8, 255, 255, 0x09, 0x02, 0x00, 0x00}, // enable pc 9  
    {0x24a8, &op_enable,	  8, 255, 255, 0x0a, 0x02, 0x00, 0x00}, // enable pc 10  
    {0x24b8, &op_enable,	  8, 255, 255, 0x0b, 0x02, 0x00, 0x00}, // enable pc 11  
    {0x24c8, &op_enable,	  8, 255, 255, 0x0c, 0x02, 0x00, 0x00}, // enable pc 12  
    {0x24d8, &op_enable,	  8, 255, 255, 0x0d, 0x02, 0x00, 0x00}, // enable pc 13  
    {0x24e8, &op_enable,	  8, 255, 255, 0x0e, 0x02, 0x00, 0x00}, // enable pc 14  
    {0x24f8, &op_enable,	  8, 255, 255, 0x0f, 0x02, 0x00, 0x00}, // enable pc 15  
    {0x2508, &op_enable,	  8, 255, 255, 0x10, 0x02, 0x00, 0x00}, // enable pc 16  
    {0x2518, &op_enable,	  8, 255, 255, 0x11, 0x02, 0x00, 0x00}, // enable pc 17  
    {0x2528, &op_enable,	  8, 255, 255, 0x12, 0x02, 0x00, 0x00}, // enable pc 18  
    {0x2538, &op_enable,	  8, 255, 255, 0x13, 0x02, 0x00, 0x00}, // enable pc 19  
    {0x2548, &op_enable,	  8, 255, 255, 0x14, 0x02, 0x00, 0x00}, // enable pc 20  
    {0x2558, &op_enable,	  8, 255, 255, 0x15, 0x02, 0x00, 0x00}, // enable pc 21  
    {0x2568, &op_enable,	  8, 255, 255, 0x16, 0x02, 0x00, 0x00}, // enable pc 22  
    {0x2578, &op_enable,	  8, 255, 255, 0x17, 0x02, 0x00, 0x00}, // enable pc 23  
    {0x2588, &op_enable,	  8, 255, 255, 0x18, 0x02, 0x00, 0x00}, // enable pc 24  
    {0x2598, &op_enable,	  8, 255, 255, 0x19, 0x02, 0x00, 0x00}, // enable pc 25  
    {0x25a8, &op_enable,	  8, 255, 255, 0x1a, 0x02, 0x00, 0x00}, // enable pc 26  
    {0x25b8, &op_enable,	  8, 255, 255, 0x1b, 0x02, 0x00, 0x00}, // enable pc 27  
    {0x25c8, &op_enable,	  8, 255, 255, 0x1c, 0x02, 0x00, 0x00}, // enable pc 28  
    {0x25d8, &op_enable,	  8, 255, 255, 0x1d, 0x02, 0x00, 0x00}, // enable pc 29  
    {0x25e8, &op_enable,	  8, 255, 255, 0x1e, 0x02, 0x00, 0x00}, // enable pc 30  
    {0x25f8, &op_enable,	  8, 255, 255, 0x1f, 0x02, 0x00, 0x00}, // enable pc 31  
    {0x2608, &op_enable,	  8, 255, 255, 0x20, 0x02, 0x00, 0x00}, // enable pc 32  
    {0x2618, &op_enable,	  8, 255, 255, 0x21, 0x02, 0x00, 0x00}, // enable pc 33  
    {0x2628, &op_enable,	  8, 255, 255, 0x22, 0x02, 0x00, 0x00}, // enable pc 34  
    {0x2638, &op_enable,	  8, 255, 255, 0x23, 0x02, 0x00, 0x00}, // enable pc 35  
    {0x2648, &op_enable,	  8, 255, 255, 0x24, 0x02, 0x00, 0x00}, // enable pc 36  
    {0x2658, &op_enable,	  8, 255, 255, 0x25, 0x02, 0x00, 0x00}, // enable pc 37  
    {0x2668, &op_enable,	  8, 255, 255, 0x26, 0x02, 0x00, 0x00}, // enable pc 38  
    {0x2678, &op_enable,	  8, 255, 255, 0x27, 0x02, 0x00, 0x00}, // enable pc 39  
    {0x2688, &op_enable,	  8, 255, 255, 0x28, 0x02, 0x00, 0x00}, // enable pc 40  
    {0x2698, &op_enable,	  8, 255, 255, 0x29, 0x02, 0x00, 0x00}, // enable pc 41  
    {0x26a8, &op_enable,	  8, 255, 255, 0x2a, 0x02, 0x00, 0x00}, // enable pc 42  
    {0x26b8, &op_enable,	  8, 255, 255, 0x2b, 0x02, 0x00, 0x00}, // enable pc 43  
    {0x26c8, &op_enable,	  8, 255, 255, 0x2c, 0x02, 0x00, 0x00}, // enable pc 44  
    {0x26d8, &op_enable,	  8, 255, 255, 0x2d, 0x02, 0x00, 0x00}, // enable pc 45  
    {0x26e8, &op_enable,	  8, 255, 255, 0x2e, 0x02, 0x00, 0x00}, // enable pc 46  
    {0x26f8, &op_enable,	  8, 255, 255, 0x2f, 0x02, 0x00, 0x00}, // enable pc 47  
    {0x2708, &op_enable,	  8, 255, 255, 0x30, 0x02, 0x00, 0x00}, // enable pc 48  
    {0x2718, &op_enable,	  8, 255, 255, 0x31, 0x02, 0x00, 0x00}, // enable pc 49  
    {0x2728, &op_enable,	  8, 255, 255, 0x32, 0x02, 0x00, 0x00}, // enable pc 50  
    {0x2738, &op_enable,	  8, 255, 255, 0x33, 0x02, 0x00, 0x00}, // enable pc 51  
    {0x2748, &op_enable,	  8, 255, 255, 0x34, 0x02, 0x00, 0x00}, // enable pc 52  
    {0x2758, &op_enable,	  8, 255, 255, 0x35, 0x02, 0x00, 0x00}, // enable pc 53  
    {0x2768, &op_enable,	  8, 255, 255, 0x36, 0x02, 0x00, 0x00}, // enable pc 54  
    {0x2778, &op_enable,	  8, 255, 255, 0x37, 0x02, 0x00, 0x00}, // enable pc 55  
    {0x2788, &op_enable,	  8, 255, 255, 0x38, 0x02, 0x00, 0x00}, // enable pc 56  
    {0x2798, &op_enable,	  8, 255, 255, 0x39, 0x02, 0x00, 0x00}, // enable pc 57  
    {0x27a8, &op_enable,	  8, 255, 255, 0x3a, 0x02, 0x00, 0x00}, // enable pc 58  
    {0x27b8, &op_enable,	  8, 255, 255, 0x3b, 0x02, 0x00, 0x00}, // enable pc 59  
    {0x27c8, &op_enable,	  8, 255, 255, 0x3c, 0x02, 0x00, 0x00}, // enable pc 60  
    {0x27d8, &op_enable,	  8, 255, 255, 0x3d, 0x02, 0x00, 0x00}, // enable pc 61  
    {0x27e8, &op_enable,	  8, 255, 255, 0x3e, 0x02, 0x00, 0x00}, // enable pc 62  
    {0x27f8, &op_enable,	  8, 255, 255, 0x3f, 0x02, 0x00, 0x00}, // enable pc 63  
    {0x2409, &op_enable,	  9, 255, 255, 0x00, 0x02, 0x00, 0x00}, // enable ra 0  
    {0x2419, &op_enable,	  9, 255, 255, 0x01, 0x02, 0x00, 0x00}, // enable ra 1  
    {0x2429, &op_enable,	  9, 255, 255, 0x02, 0x02, 0x00, 0x00}, // enable ra 2  
    {0x2439, &op_enable,	  9, 255, 255, 0x03, 0x02, 0x00, 0x00}, // enable ra 3  
    {0x2449, &op_enable,	  9, 255, 255, 0x04, 0x02, 0x00, 0x00}, // enable ra 4  
    {0x2459, &op_enable,	  9, 255, 255, 0x05, 0x02, 0x00, 0x00}, // enable ra 5  
    {0x2469, &op_enable,	  9, 255, 255, 0x06, 0x02, 0x00, 0x00}, // enable ra 6  
    {0x2479, &op_enable,	  9, 255, 255, 0x07, 0x02, 0x00, 0x00}, // enable ra 7  
    {0x2489, &op_enable,	  9, 255, 255, 0x08, 0x02, 0x00, 0x00}, // enable ra 8  
    {0x2499, &op_enable,	  9, 255, 255, 0x09, 0x02, 0x00, 0x00}, // enable ra 9  
    {0x24a9, &op_enable,	  9, 255, 255, 0x0a, 0x02, 0x00, 0x00}, // enable ra 10  
    {0x24b9, &op_enable,	  9, 255, 255, 0x0b, 0x02, 0x00, 0x00}, // enable ra 11  
    {0x24c9, &op_enable,	  9, 255, 255, 0x0c, 0x02, 0x00, 0x00}, // enable ra 12  
    {0x24d9, &op_enable,	  9, 255, 255, 0x0d, 0x02, 0x00, 0x00}, // enable ra 13  
    {0x24e9, &op_enable,	  9, 255, 255, 0x0e, 0x02, 0x00, 0x00}, // enable ra 14  
    {0x24f9, &op_enable,	  9, 255, 255, 0x0f, 0x02, 0x00, 0x00}, // enable ra 15  
    {0x2509, &op_enable,	  9, 255, 255, 0x10, 0x02, 0x00, 0x00}, // enable ra 16  
    {0x2519, &op_enable,	  9, 255, 255, 0x11, 0x02, 0x00, 0x00}, // enable ra 17  
    {0x2529, &op_enable,	  9, 255, 255, 0x12, 0x02, 0x00, 0x00}, // enable ra 18  
    {0x2539, &op_enable,	  9, 255, 255, 0x13, 0x02, 0x00, 0x00}, // enable ra 19  
    {0x2549, &op_enable,	  9, 255, 255, 0x14, 0x02, 0x00, 0x00}, // enable ra 20  
    {0x2559, &op_enable,	  9, 255, 255, 0x15, 0x02, 0x00, 0x00}, // enable ra 21  
    {0x2569, &op_enable,	  9, 255, 255, 0x16, 0x02, 0x00, 0x00}, // enable ra 22  
    {0x2579, &op_enable,	  9, 255, 255, 0x17, 0x02, 0x00, 0x00}, // enable ra 23  
    {0x2589, &op_enable,	  9, 255, 255, 0x18, 0x02, 0x00, 0x00}, // enable ra 24  
    {0x2599, &op_enable,	  9, 255, 255, 0x19, 0x02, 0x00, 0x00}, // enable ra 25  
    {0x25a9, &op_enable,	  9, 255, 255, 0x1a, 0x02, 0x00, 0x00}, // enable ra 26  
    {0x25b9, &op_enable,	  9, 255, 255, 0x1b, 0x02, 0x00, 0x00}, // enable ra 27  
    {0x25c9, &op_enable,	  9, 255, 255, 0x1c, 0x02, 0x00, 0x00}, // enable ra 28  
    {0x25d9, &op_enable,	  9, 255, 255, 0x1d, 0x02, 0x00, 0x00}, // enable ra 29  
    {0x25e9, &op_enable,	  9, 255, 255, 0x1e, 0x02, 0x00, 0x00}, // enable ra 30  
    {0x25f9, &op_enable,	  9, 255, 255, 0x1f, 0x02, 0x00, 0x00}, // enable ra 31  
    {0x2609, &op_enable,	  9, 255, 255, 0x20, 0x02, 0x00, 0x00}, // enable ra 32  
    {0x2619, &op_enable,	  9, 255, 255, 0x21, 0x02, 0x00, 0x00}, // enable ra 33  
    {0x2629, &op_enable,	  9, 255, 255, 0x22, 0x02, 0x00, 0x00}, // enable ra 34  
    {0x2639, &op_enable,	  9, 255, 255, 0x23, 0x02, 0x00, 0x00}, // enable ra 35  
    {0x2649, &op_enable,	  9, 255, 255, 0x24, 0x02, 0x00, 0x00}, // enable ra 36  
    {0x2659, &op_enable,	  9, 255, 255, 0x25, 0x02, 0x00, 0x00}, // enable ra 37  
    {0x2669, &op_enable,	  9, 255, 255, 0x26, 0x02, 0x00, 0x00}, // enable ra 38  
    {0x2679, &op_enable,	  9, 255, 255, 0x27, 0x02, 0x00, 0x00}, // enable ra 39  
    {0x2689, &op_enable,	  9, 255, 255, 0x28, 0x02, 0x00, 0x00}, // enable ra 40  
    {0x2699, &op_enable,	  9, 255, 255, 0x29, 0x02, 0x00, 0x00}, // enable ra 41  
    {0x26a9, &op_enable,	  9, 255, 255, 0x2a, 0x02, 0x00, 0x00}, // enable ra 42  
    {0x26b9, &op_enable,	  9, 255, 255, 0x2b, 0x02, 0x00, 0x00}, // enable ra 43  
    {0x26c9, &op_enable,	  9, 255, 255, 0x2c, 0x02, 0x00, 0x00}, // enable ra 44  
    {0x26d9, &op_enable,	  9, 255, 255, 0x2d, 0x02, 0x00, 0x00}, // enable ra 45  
    {0x26e9, &op_enable,	  9, 255, 255, 0x2e, 0x02, 0x00, 0x00}, // enable ra 46  
    {0x26f9, &op_enable,	  9, 255, 255, 0x2f, 0x02, 0x00, 0x00}, // enable ra 47  
    {0x2709, &op_enable,	  9, 255, 255, 0x30, 0x02, 0x00, 0x00}, // enable ra 48  
    {0x2719, &op_enable,	  9, 255, 255, 0x31, 0x02, 0x00, 0x00}, // enable ra 49  
    {0x2729, &op_enable,	  9, 255, 255, 0x32, 0x02, 0x00, 0x00}, // enable ra 50  
    {0x2739, &op_enable,	  9, 255, 255, 0x33, 0x02, 0x00, 0x00}, // enable ra 51  
    {0x2749, &op_enable,	  9, 255, 255, 0x34, 0x02, 0x00, 0x00}, // enable ra 52  
    {0x2759, &op_enable,	  9, 255, 255, 0x35, 0x02, 0x00, 0x00}, // enable ra 53  
    {0x2769, &op_enable,	  9, 255, 255, 0x36, 0x02, 0x00, 0x00}, // enable ra 54  
    {0x2779, &op_enable,	  9, 255, 255, 0x37, 0x02, 0x00, 0x00}, // enable ra 55  
    {0x2789, &op_enable,	  9, 255, 255, 0x38, 0x02, 0x00, 0x00}, // enable ra 56  
    {0x2799, &op_enable,	  9, 255, 255, 0x39, 0x02, 0x00, 0x00}, // enable ra 57  
    {0x27a9, &op_enable,	  9, 255, 255, 0x3a, 0x02, 0x00, 0x00}, // enable ra 58  
    {0x27b9, &op_enable,	  9, 255, 255, 0x3b, 0x02, 0x00, 0x00}, // enable ra 59  
    {0x27c9, &op_enable,	  9, 255, 255, 0x3c, 0x02, 0x00, 0x00}, // enable ra 60  
    {0x27d9, &op_enable,	  9, 255, 255, 0x3d, 0x02, 0x00, 0x00}, // enable ra 61  
    {0x27e9, &op_enable,	  9, 255, 255, 0x3e, 0x02, 0x00, 0x00}, // enable ra 62  
    {0x27f9, &op_enable,	  9, 255, 255, 0x3f, 0x02, 0x00, 0x00}, // enable ra 63  
    {0x240a, &op_enable,	 10, 255, 255, 0x00, 0x02, 0x00, 0x00}, // enable sb 0  
    {0x241a, &op_enable,	 10, 255, 255, 0x01, 0x02, 0x00, 0x00}, // enable sb 1  
    {0x242a, &op_enable,	 10, 255, 255, 0x02, 0x02, 0x00, 0x00}, // enable sb 2  
    {0x243a, &op_enable,	 10, 255, 255, 0x03, 0x02, 0x00, 0x00}, // enable sb 3  
    {0x244a, &op_enable,	 10, 255, 255, 0x04, 0x02, 0x00, 0x00}, // enable sb 4  
    {0x245a, &op_enable,	 10, 255, 255, 0x05, 0x02, 0x00, 0x00}, // enable sb 5  
    {0x246a, &op_enable,	 10, 255, 255, 0x06, 0x02, 0x00, 0x00}, // enable sb 6  
    {0x247a, &op_enable,	 10, 255, 255, 0x07, 0x02, 0x00, 0x00}, // enable sb 7  
    {0x248a, &op_enable,	 10, 255, 255, 0x08, 0x02, 0x00, 0x00}, // enable sb 8  
    {0x249a, &op_enable,	 10, 255, 255, 0x09, 0x02, 0x00, 0x00}, // enable sb 9  
    {0x24aa, &op_enable,	 10, 255, 255, 0x0a, 0x02, 0x00, 0x00}, // enable sb 10  
    {0x24ba, &op_enable,	 10, 255, 255, 0x0b, 0x02, 0x00, 0x00}, // enable sb 11  
    {0x24ca, &op_enable,	 10, 255, 255, 0x0c, 0x02, 0x00, 0x00}, // enable sb 12  
    {0x24da, &op_enable,	 10, 255, 255, 0x0d, 0x02, 0x00, 0x00}, // enable sb 13  
    {0x24ea, &op_enable,	 10, 255, 255, 0x0e, 0x02, 0x00, 0x00}, // enable sb 14  
    {0x24fa, &op_enable,	 10, 255, 255, 0x0f, 0x02, 0x00, 0x00}, // enable sb 15  
    {0x250a, &op_enable,	 10, 255, 255, 0x10, 0x02, 0x00, 0x00}, // enable sb 16  
    {0x251a, &op_enable,	 10, 255, 255, 0x11, 0x02, 0x00, 0x00}, // enable sb 17  
    {0x252a, &op_enable,	 10, 255, 255, 0x12, 0x02, 0x00, 0x00}, // enable sb 18  
    {0x253a, &op_enable,	 10, 255, 255, 0x13, 0x02, 0x00, 0x00}, // enable sb 19  
    {0x254a, &op_enable,	 10, 255, 255, 0x14, 0x02, 0x00, 0x00}, // enable sb 20  
    {0x255a, &op_enable,	 10, 255, 255, 0x15, 0x02, 0x00, 0x00}, // enable sb 21  
    {0x256a, &op_enable,	 10, 255, 255, 0x16, 0x02, 0x00, 0x00}, // enable sb 22  
    {0x257a, &op_enable,	 10, 255, 255, 0x17, 0x02, 0x00, 0x00}, // enable sb 23  
    {0x258a, &op_enable,	 10, 255, 255, 0x18, 0x02, 0x00, 0x00}, // enable sb 24  
    {0x259a, &op_enable,	 10, 255, 255, 0x19, 0x02, 0x00, 0x00}, // enable sb 25  
    {0x25aa, &op_enable,	 10, 255, 255, 0x1a, 0x02, 0x00, 0x00}, // enable sb 26  
    {0x25ba, &op_enable,	 10, 255, 255, 0x1b, 0x02, 0x00, 0x00}, // enable sb 27  
    {0x25ca, &op_enable,	 10, 255, 255, 0x1c, 0x02, 0x00, 0x00}, // enable sb 28  
    {0x25da, &op_enable,	 10, 255, 255, 0x1d, 0x02, 0x00, 0x00}, // enable sb 29  
    {0x25ea, &op_enable,	 10, 255, 255, 0x1e, 0x02, 0x00, 0x00}, // enable sb 30  
    {0x25fa, &op_enable,	 10, 255, 255, 0x1f, 0x02, 0x00, 0x00}, // enable sb 31  
    {0x260a, &op_enable,	 10, 255, 255, 0x20, 0x02, 0x00, 0x00}, // enable sb 32  
    {0x261a, &op_enable,	 10, 255, 255, 0x21, 0x02, 0x00, 0x00}, // enable sb 33  
    {0x262a, &op_enable,	 10, 255, 255, 0x22, 0x02, 0x00, 0x00}, // enable sb 34  
    {0x263a, &op_enable,	 10, 255, 255, 0x23, 0x02, 0x00, 0x00}, // enable sb 35  
    {0x264a, &op_enable,	 10, 255, 255, 0x24, 0x02, 0x00, 0x00}, // enable sb 36  
    {0x265a, &op_enable,	 10, 255, 255, 0x25, 0x02, 0x00, 0x00}, // enable sb 37  
    {0x266a, &op_enable,	 10, 255, 255, 0x26, 0x02, 0x00, 0x00}, // enable sb 38  
    {0x267a, &op_enable,	 10, 255, 255, 0x27, 0x02, 0x00, 0x00}, // enable sb 39  
    {0x268a, &op_enable,	 10, 255, 255, 0x28, 0x02, 0x00, 0x00}, // enable sb 40  
    {0x269a, &op_enable,	 10, 255, 255, 0x29, 0x02, 0x00, 0x00}, // enable sb 41  
    {0x26aa, &op_enable,	 10, 255, 255, 0x2a, 0x02, 0x00, 0x00}, // enable sb 42  
    {0x26ba, &op_enable,	 10, 255, 255, 0x2b, 0x02, 0x00, 0x00}, // enable sb 43  
    {0x26ca, &op_enable,	 10, 255, 255, 0x2c, 0x02, 0x00, 0x00}, // enable sb 44  
    {0x26da, &op_enable,	 10, 255, 255, 0x2d, 0x02, 0x00, 0x00}, // enable sb 45  
    {0x26ea, &op_enable,	 10, 255, 255, 0x2e, 0x02, 0x00, 0x00}, // enable sb 46  
    {0x26fa, &op_enable,	 10, 255, 255, 0x2f, 0x02, 0x00, 0x00}, // enable sb 47  
    {0x270a, &op_enable,	 10, 255, 255, 0x30, 0x02, 0x00, 0x00}, // enable sb 48  
    {0x271a, &op_enable,	 10, 255, 255, 0x31, 0x02, 0x00, 0x00}, // enable sb 49  
    {0x272a, &op_enable,	 10, 255, 255, 0x32, 0x02, 0x00, 0x00}, // enable sb 50  
    {0x273a, &op_enable,	 10, 255, 255, 0x33, 0x02, 0x00, 0x00}, // enable sb 51  
    {0x274a, &op_enable,	 10, 255, 255, 0x34, 0x02, 0x00, 0x00}, // enable sb 52  
    {0x275a, &op_enable,	 10, 255, 255, 0x35, 0x02, 0x00, 0x00}, // enable sb 53  
    {0x276a, &op_enable,	 10, 255, 255, 0x36, 0x02, 0x00, 0x00}, // enable sb 54  
    {0x277a, &op_enable,	 10, 255, 255, 0x37, 0x02, 0x00, 0x00}, // enable sb 55  
    {0x278a, &op_enable,	 10, 255, 255, 0x38, 0x02, 0x00, 0x00}, // enable sb 56  
    {0x279a, &op_enable,	 10, 255, 255, 0x39, 0x02, 0x00, 0x00}, // enable sb 57  
    {0x27aa, &op_enable,	 10, 255, 255, 0x3a, 0x02, 0x00, 0x00}, // enable sb 58  
    {0x27ba, &op_enable,	 10, 255, 255, 0x3b, 0x02, 0x00, 0x00}, // enable sb 59  
    {0x27ca, &op_enable,	 10, 255, 255, 0x3c, 0x02, 0x00, 0x00}, // enable sb 60  
    {0x27da, &op_enable,	 10, 255, 255, 0x3d, 0x02, 0x00, 0x00}, // enable sb 61  
    {0x27ea, &op_enable,	 10, 255, 255, 0x3e, 0x02, 0x00, 0x00}, // enable sb 62  
    {0x27fa, &op_enable,	 10, 255, 255, 0x3f, 0x02, 0x00, 0x00}, // enable sb 63  
    {0x240b, &op_enable,	 11, 255, 255, 0x00, 0x02, 0x00, 0x00}, // enable sp 0  
    {0x241b, &op_enable,	 11, 255, 255, 0x01, 0x02, 0x00, 0x00}, // enable sp 1  
    {0x242b, &op_enable,	 11, 255, 255, 0x02, 0x02, 0x00, 0x00}, // enable sp 2  
    {0x243b, &op_enable,	 11, 255, 255, 0x03, 0x02, 0x00, 0x00}, // enable sp 3  
    {0x244b, &op_enable,	 11, 255, 255, 0x04, 0x02, 0x00, 0x00}, // enable sp 4  
    {0x245b, &op_enable,	 11, 255, 255, 0x05, 0x02, 0x00, 0x00}, // enable sp 5  
    {0x246b, &op_enable,	 11, 255, 255, 0x06, 0x02, 0x00, 0x00}, // enable sp 6  
    {0x247b, &op_enable,	 11, 255, 255, 0x07, 0x02, 0x00, 0x00}, // enable sp 7  
    {0x248b, &op_enable,	 11, 255, 255, 0x08, 0x02, 0x00, 0x00}, // enable sp 8  
    {0x249b, &op_enable,	 11, 255, 255, 0x09, 0x02, 0x00, 0x00}, // enable sp 9  
    {0x24ab, &op_enable,	 11, 255, 255, 0x0a, 0x02, 0x00, 0x00}, // enable sp 10  
    {0x24bb, &op_enable,	 11, 255, 255, 0x0b, 0x02, 0x00, 0x00}, // enable sp 11  
    {0x24cb, &op_enable,	 11, 255, 255, 0x0c, 0x02, 0x00, 0x00}, // enable sp 12  
    {0x24db, &op_enable,	 11, 255, 255, 0x0d, 0x02, 0x00, 0x00}, // enable sp 13  
    {0x24eb, &op_enable,	 11, 255, 255, 0x0e, 0x02, 0x00, 0x00}, // enable sp 14  
    {0x24fb, &op_enable,	 11, 255, 255, 0x0f, 0x02, 0x00, 0x00}, // enable sp 15  
    {0x250b, &op_enable,	 11, 255, 255, 0x10, 0x02, 0x00, 0x00}, // enable sp 16  
    {0x251b, &op_enable,	 11, 255, 255, 0x11, 0x02, 0x00, 0x00}, // enable sp 17  
    {0x252b, &op_enable,	 11, 255, 255, 0x12, 0x02, 0x00, 0x00}, // enable sp 18  
    {0x253b, &op_enable,	 11, 255, 255, 0x13, 0x02, 0x00, 0x00}, // enable sp 19  
    {0x254b, &op_enable,	 11, 255, 255, 0x14, 0x02, 0x00, 0x00}, // enable sp 20  
    {0x255b, &op_enable,	 11, 255, 255, 0x15, 0x02, 0x00, 0x00}, // enable sp 21  
    {0x256b, &op_enable,	 11, 255, 255, 0x16, 0x02, 0x00, 0x00}, // enable sp 22  
    {0x257b, &op_enable,	 11, 255, 255, 0x17, 0x02, 0x00, 0x00}, // enable sp 23  
    {0x258b, &op_enable,	 11, 255, 255, 0x18, 0x02, 0x00, 0x00}, // enable sp 24  
    {0x259b, &op_enable,	 11, 255, 255, 0x19, 0x02, 0x00, 0x00}, // enable sp 25  
    {0x25ab, &op_enable,	 11, 255, 255, 0x1a, 0x02, 0x00, 0x00}, // enable sp 26  
    {0x25bb, &op_enable,	 11, 255, 255, 0x1b, 0x02, 0x00, 0x00}, // enable sp 27  
    {0x25cb, &op_enable,	 11, 255, 255, 0x1c, 0x02, 0x00, 0x00}, // enable sp 28  
    {0x25db, &op_enable,	 11, 255, 255, 0x1d, 0x02, 0x00, 0x00}, // enable sp 29  
    {0x25eb, &op_enable,	 11, 255, 255, 0x1e, 0x02, 0x00, 0x00}, // enable sp 30  
    {0x25fb, &op_enable,	 11, 255, 255, 0x1f, 0x02, 0x00, 0x00}, // enable sp 31  
    {0x260b, &op_enable,	 11, 255, 255, 0x20, 0x02, 0x00, 0x00}, // enable sp 32  
    {0x261b, &op_enable,	 11, 255, 255, 0x21, 0x02, 0x00, 0x00}, // enable sp 33  
    {0x262b, &op_enable,	 11, 255, 255, 0x22, 0x02, 0x00, 0x00}, // enable sp 34  
    {0x263b, &op_enable,	 11, 255, 255, 0x23, 0x02, 0x00, 0x00}, // enable sp 35  
    {0x264b, &op_enable,	 11, 255, 255, 0x24, 0x02, 0x00, 0x00}, // enable sp 36  
    {0x265b, &op_enable,	 11, 255, 255, 0x25, 0x02, 0x00, 0x00}, // enable sp 37  
    {0x266b, &op_enable,	 11, 255, 255, 0x26, 0x02, 0x00, 0x00}, // enable sp 38  
    {0x267b, &op_enable,	 11, 255, 255, 0x27, 0x02, 0x00, 0x00}, // enable sp 39  
    {0x268b, &op_enable,	 11, 255, 255, 0x28, 0x02, 0x00, 0x00}, // enable sp 40  
    {0x269b, &op_enable,	 11, 255, 255, 0x29, 0x02, 0x00, 0x00}, // enable sp 41  
    {0x26ab, &op_enable,	 11, 255, 255, 0x2a, 0x02, 0x00, 0x00}, // enable sp 42  
    {0x26bb, &op_enable,	 11, 255, 255, 0x2b, 0x02, 0x00, 0x00}, // enable sp 43  
    {0x26cb, &op_enable,	 11, 255, 255, 0x2c, 0x02, 0x00, 0x00}, // enable sp 44  
    {0x26db, &op_enable,	 11, 255, 255, 0x2d, 0x02, 0x00, 0x00}, // enable sp 45  
    {0x26eb, &op_enable,	 11, 255, 255, 0x2e, 0x02, 0x00, 0x00}, // enable sp 46  
    {0x26fb, &op_enable,	 11, 255, 255, 0x2f, 0x02, 0x00, 0x00}, // enable sp 47  
    {0x270b, &op_enable,	 11, 255, 255, 0x30, 0x02, 0x00, 0x00}, // enable sp 48  
    {0x271b, &op_enable,	 11, 255, 255, 0x31, 0x02, 0x00, 0x00}, // enable sp 49  
    {0x272b, &op_enable,	 11, 255, 255, 0x32, 0x02, 0x00, 0x00}, // enable sp 50  
    {0x273b, &op_enable,	 11, 255, 255, 0x33, 0x02, 0x00, 0x00}, // enable sp 51  
    {0x274b, &op_enable,	 11, 255, 255, 0x34, 0x02, 0x00, 0x00}, // enable sp 52  
    {0x275b, &op_enable,	 11, 255, 255, 0x35, 0x02, 0x00, 0x00}, // enable sp 53  
    {0x276b, &op_enable,	 11, 255, 255, 0x36, 0x02, 0x00, 0x00}, // enable sp 54  
    {0x277b, &op_enable,	 11, 255, 255, 0x37, 0x02, 0x00, 0x00}, // enable sp 55  
    {0x278b, &op_enable,	 11, 255, 255, 0x38, 0x02, 0x00, 0x00}, // enable sp 56  
    {0x279b, &op_enable,	 11, 255, 255, 0x39, 0x02, 0x00, 0x00}, // enable sp 57  
    {0x27ab, &op_enable,	 11, 255, 255, 0x3a, 0x02, 0x00, 0x00}, // enable sp 58  
    {0x27bb, &op_enable,	 11, 255, 255, 0x3b, 0x02, 0x00, 0x00}, // enable sp 59  
    {0x27cb, &op_enable,	 11, 255, 255, 0x3c, 0x02, 0x00, 0x00}, // enable sp 60  
    {0x27db, &op_enable,	 11, 255, 255, 0x3d, 0x02, 0x00, 0x00}, // enable sp 61  
    {0x27eb, &op_enable,	 11, 255, 255, 0x3e, 0x02, 0x00, 0x00}, // enable sp 62  
    {0x27fb, &op_enable,	 11, 255, 255, 0x3f, 0x02, 0x00, 0x00}, // enable sp 63  
    {0x240c, &op_enable,	 12, 255, 255, 0x00, 0x02, 0x00, 0x00}, // enable db 0  
    {0x241c, &op_enable,	 12, 255, 255, 0x01, 0x02, 0x00, 0x00}, // enable db 1  
    {0x242c, &op_enable,	 12, 255, 255, 0x02, 0x02, 0x00, 0x00}, // enable db 2  
    {0x243c, &op_enable,	 12, 255, 255, 0x03, 0x02, 0x00, 0x00}, // enable db 3  
    {0x244c, &op_enable,	 12, 255, 255, 0x04, 0x02, 0x00, 0x00}, // enable db 4  
    {0x245c, &op_enable,	 12, 255, 255, 0x05, 0x02, 0x00, 0x00}, // enable db 5  
    {0x246c, &op_enable,	 12, 255, 255, 0x06, 0x02, 0x00, 0x00}, // enable db 6  
    {0x247c, &op_enable,	 12, 255, 255, 0x07, 0x02, 0x00, 0x00}, // enable db 7  
    {0x248c, &op_enable,	 12, 255, 255, 0x08, 0x02, 0x00, 0x00}, // enable db 8  
    {0x249c, &op_enable,	 12, 255, 255, 0x09, 0x02, 0x00, 0x00}, // enable db 9  
    {0x24ac, &op_enable,	 12, 255, 255, 0x0a, 0x02, 0x00, 0x00}, // enable db 10  
    {0x24bc, &op_enable,	 12, 255, 255, 0x0b, 0x02, 0x00, 0x00}, // enable db 11  
    {0x24cc, &op_enable,	 12, 255, 255, 0x0c, 0x02, 0x00, 0x00}, // enable db 12  
    {0x24dc, &op_enable,	 12, 255, 255, 0x0d, 0x02, 0x00, 0x00}, // enable db 13  
    {0x24ec, &op_enable,	 12, 255, 255, 0x0e, 0x02, 0x00, 0x00}, // enable db 14  
    {0x24fc, &op_enable,	 12, 255, 255, 0x0f, 0x02, 0x00, 0x00}, // enable db 15  
    {0x250c, &op_enable,	 12, 255, 255, 0x10, 0x02, 0x00, 0x00}, // enable db 16  
    {0x251c, &op_enable,	 12, 255, 255, 0x11, 0x02, 0x00, 0x00}, // enable db 17  
    {0x252c, &op_enable,	 12, 255, 255, 0x12, 0x02, 0x00, 0x00}, // enable db 18  
    {0x253c, &op_enable,	 12, 255, 255, 0x13, 0x02, 0x00, 0x00}, // enable db 19  
    {0x254c, &op_enable,	 12, 255, 255, 0x14, 0x02, 0x00, 0x00}, // enable db 20  
    {0x255c, &op_enable,	 12, 255, 255, 0x15, 0x02, 0x00, 0x00}, // enable db 21  
    {0x256c, &op_enable,	 12, 255, 255, 0x16, 0x02, 0x00, 0x00}, // enable db 22  
    {0x257c, &op_enable,	 12, 255, 255, 0x17, 0x02, 0x00, 0x00}, // enable db 23  
    {0x258c, &op_enable,	 12, 255, 255, 0x18, 0x02, 0x00, 0x00}, // enable db 24  
    {0x259c, &op_enable,	 12, 255, 255, 0x19, 0x02, 0x00, 0x00}, // enable db 25  
    {0x25ac, &op_enable,	 12, 255, 255, 0x1a, 0x02, 0x00, 0x00}, // enable db 26  
    {0x25bc, &op_enable,	 12, 255, 255, 0x1b, 0x02, 0x00, 0x00}, // enable db 27  
    {0x25cc, &op_enable,	 12, 255, 255, 0x1c, 0x02, 0x00, 0x00}, // enable db 28  
    {0x25dc, &op_enable,	 12, 255, 255, 0x1d, 0x02, 0x00, 0x00}, // enable db 29  
    {0x25ec, &op_enable,	 12, 255, 255, 0x1e, 0x02, 0x00, 0x00}, // enable db 30  
    {0x25fc, &op_enable,	 12, 255, 255, 0x1f, 0x02, 0x00, 0x00}, // enable db 31  
    {0x260c, &op_enable,	 12, 255, 255, 0x20, 0x02, 0x00, 0x00}, // enable db 32  
    {0x261c, &op_enable,	 12, 255, 255, 0x21, 0x02, 0x00, 0x00}, // enable db 33  
    {0x262c, &op_enable,	 12, 255, 255, 0x22, 0x02, 0x00, 0x00}, // enable db 34  
    {0x263c, &op_enable,	 12, 255, 255, 0x23, 0x02, 0x00, 0x00}, // enable db 35  
    {0x264c, &op_enable,	 12, 255, 255, 0x24, 0x02, 0x00, 0x00}, // enable db 36  
    {0x265c, &op_enable,	 12, 255, 255, 0x25, 0x02, 0x00, 0x00}, // enable db 37  
    {0x266c, &op_enable,	 12, 255, 255, 0x26, 0x02, 0x00, 0x00}, // enable db 38  
    {0x267c, &op_enable,	 12, 255, 255, 0x27, 0x02, 0x00, 0x00}, // enable db 39  
    {0x268c, &op_enable,	 12, 255, 255, 0x28, 0x02, 0x00, 0x00}, // enable db 40  
    {0x269c, &op_enable,	 12, 255, 255, 0x29, 0x02, 0x00, 0x00}, // enable db 41  
    {0x26ac, &op_enable,	 12, 255, 255, 0x2a, 0x02, 0x00, 0x00}, // enable db 42  
    {0x26bc, &op_enable,	 12, 255, 255, 0x2b, 0x02, 0x00, 0x00}, // enable db 43  
    {0x26cc, &op_enable,	 12, 255, 255, 0x2c, 0x02, 0x00, 0x00}, // enable db 44  
    {0x26dc, &op_enable,	 12, 255, 255, 0x2d, 0x02, 0x00, 0x00}, // enable db 45  
    {0x26ec, &op_enable,	 12, 255, 255, 0x2e, 0x02, 0x00, 0x00}, // enable db 46  
    {0x26fc, &op_enable,	 12, 255, 255, 0x2f, 0x02, 0x00, 0x00}, // enable db 47  
    {0x270c, &op_enable,	 12, 255, 255, 0x30, 0x02, 0x00, 0x00}, // enable db 48  
    {0x271c, &op_enable,	 12, 255, 255, 0x31, 0x02, 0x00, 0x00}, // enable db 49  
    {0x272c, &op_enable,	 12, 255, 255, 0x32, 0x02, 0x00, 0x00}, // enable db 50  
    {0x273c, &op_enable,	 12, 255, 255, 0x33, 0x02, 0x00, 0x00}, // enable db 51  
    {0x274c, &op_enable,	 12, 255, 255, 0x34, 0x02, 0x00, 0x00}, // enable db 52  
    {0x275c, &op_enable,	 12, 255, 255, 0x35, 0x02, 0x00, 0x00}, // enable db 53  
    {0x276c, &op_enable,	 12, 255, 255, 0x36, 0x02, 0x00, 0x00}, // enable db 54  
    {0x277c, &op_enable,	 12, 255, 255, 0x37, 0x02, 0x00, 0x00}, // enable db 55  
    {0x278c, &op_enable,	 12, 255, 255, 0x38, 0x02, 0x00, 0x00}, // enable db 56  
    {0x279c, &op_enable,	 12, 255, 255, 0x39, 0x02, 0x00, 0x00}, // enable db 57  
    {0x27ac, &op_enable,	 12, 255, 255, 0x3a, 0x02, 0x00, 0x00}, // enable db 58  
    {0x27bc, &op_enable,	 12, 255, 255, 0x3b, 0x02, 0x00, 0x00}, // enable db 59  
    {0x27cc, &op_enable,	 12, 255, 255, 0x3c, 0x02, 0x00, 0x00}, // enable db 60  
    {0x27dc, &op_enable,	 12, 255, 255, 0x3d, 0x02, 0x00, 0x00}, // enable db 61  
    {0x27ec, &op_enable,	 12, 255, 255, 0x3e, 0x02, 0x00, 0x00}, // enable db 62  
    {0x27fc, &op_enable,	 12, 255, 255, 0x3f, 0x02, 0x00, 0x00}, // enable db 63  
    {0x240d, &op_enable,	 13, 255, 255, 0x00, 0x02, 0x00, 0x00}, // enable cb 0  
    {0x241d, &op_enable,	 13, 255, 255, 0x01, 0x02, 0x00, 0x00}, // enable cb 1  
    {0x242d, &op_enable,	 13, 255, 255, 0x02, 0x02, 0x00, 0x00}, // enable cb 2  
    {0x243d, &op_enable,	 13, 255, 255, 0x03, 0x02, 0x00, 0x00}, // enable cb 3  
    {0x244d, &op_enable,	 13, 255, 255, 0x04, 0x02, 0x00, 0x00}, // enable cb 4  
    {0x245d, &op_enable,	 13, 255, 255, 0x05, 0x02, 0x00, 0x00}, // enable cb 5  
    {0x246d, &op_enable,	 13, 255, 255, 0x06, 0x02, 0x00, 0x00}, // enable cb 6  
    {0x247d, &op_enable,	 13, 255, 255, 0x07, 0x02, 0x00, 0x00}, // enable cb 7  
    {0x248d, &op_enable,	 13, 255, 255, 0x08, 0x02, 0x00, 0x00}, // enable cb 8  
    {0x249d, &op_enable,	 13, 255, 255, 0x09, 0x02, 0x00, 0x00}, // enable cb 9  
    {0x24ad, &op_enable,	 13, 255, 255, 0x0a, 0x02, 0x00, 0x00}, // enable cb 10  
    {0x24bd, &op_enable,	 13, 255, 255, 0x0b, 0x02, 0x00, 0x00}, // enable cb 11  
    {0x24cd, &op_enable,	 13, 255, 255, 0x0c, 0x02, 0x00, 0x00}, // enable cb 12  
    {0x24dd, &op_enable,	 13, 255, 255, 0x0d, 0x02, 0x00, 0x00}, // enable cb 13  
    {0x24ed, &op_enable,	 13, 255, 255, 0x0e, 0x02, 0x00, 0x00}, // enable cb 14  
    {0x24fd, &op_enable,	 13, 255, 255, 0x0f, 0x02, 0x00, 0x00}, // enable cb 15  
    {0x250d, &op_enable,	 13, 255, 255, 0x10, 0x02, 0x00, 0x00}, // enable cb 16  
    {0x251d, &op_enable,	 13, 255, 255, 0x11, 0x02, 0x00, 0x00}, // enable cb 17  
    {0x252d, &op_enable,	 13, 255, 255, 0x12, 0x02, 0x00, 0x00}, // enable cb 18  
    {0x253d, &op_enable,	 13, 255, 255, 0x13, 0x02, 0x00, 0x00}, // enable cb 19  
    {0x254d, &op_enable,	 13, 255, 255, 0x14, 0x02, 0x00, 0x00}, // enable cb 20  
    {0x255d, &op_enable,	 13, 255, 255, 0x15, 0x02, 0x00, 0x00}, // enable cb 21  
    {0x256d, &op_enable,	 13, 255, 255, 0x16, 0x02, 0x00, 0x00}, // enable cb 22  
    {0x257d, &op_enable,	 13, 255, 255, 0x17, 0x02, 0x00, 0x00}, // enable cb 23  
    {0x258d, &op_enable,	 13, 255, 255, 0x18, 0x02, 0x00, 0x00}, // enable cb 24  
    {0x259d, &op_enable,	 13, 255, 255, 0x19, 0x02, 0x00, 0x00}, // enable cb 25  
    {0x25ad, &op_enable,	 13, 255, 255, 0x1a, 0x02, 0x00, 0x00}, // enable cb 26  
    {0x25bd, &op_enable,	 13, 255, 255, 0x1b, 0x02, 0x00, 0x00}, // enable cb 27  
    {0x25cd, &op_enable,	 13, 255, 255, 0x1c, 0x02, 0x00, 0x00}, // enable cb 28  
    {0x25dd, &op_enable,	 13, 255, 255, 0x1d, 0x02, 0x00, 0x00}, // enable cb 29  
    {0x25ed, &op_enable,	 13, 255, 255, 0x1e, 0x02, 0x00, 0x00}, // enable cb 30  
    {0x25fd, &op_enable,	 13, 255, 255, 0x1f, 0x02, 0x00, 0x00}, // enable cb 31  
    {0x260d, &op_enable,	 13, 255, 255, 0x20, 0x02, 0x00, 0x00}, // enable cb 32  
    {0x261d, &op_enable,	 13, 255, 255, 0x21, 0x02, 0x00, 0x00}, // enable cb 33  
    {0x262d, &op_enable,	 13, 255, 255, 0x22, 0x02, 0x00, 0x00}, // enable cb 34  
    {0x263d, &op_enable,	 13, 255, 255, 0x23, 0x02, 0x00, 0x00}, // enable cb 35  
    {0x264d, &op_enable,	 13, 255, 255, 0x24, 0x02, 0x00, 0x00}, // enable cb 36  
    {0x265d, &op_enable,	 13, 255, 255, 0x25, 0x02, 0x00, 0x00}, // enable cb 37  
    {0x266d, &op_enable,	 13, 255, 255, 0x26, 0x02, 0x00, 0x00}, // enable cb 38  
    {0x267d, &op_enable,	 13, 255, 255, 0x27, 0x02, 0x00, 0x00}, // enable cb 39  
    {0x268d, &op_enable,	 13, 255, 255, 0x28, 0x02, 0x00, 0x00}, // enable cb 40  
    {0x269d, &op_enable,	 13, 255, 255, 0x29, 0x02, 0x00, 0x00}, // enable cb 41  
    {0x26ad, &op_enable,	 13, 255, 255, 0x2a, 0x02, 0x00, 0x00}, // enable cb 42  
    {0x26bd, &op_enable,	 13, 255, 255, 0x2b, 0x02, 0x00, 0x00}, // enable cb 43  
    {0x26cd, &op_enable,	 13, 255, 255, 0x2c, 0x02, 0x00, 0x00}, // enable cb 44  
    {0x26dd, &op_enable,	 13, 255, 255, 0x2d, 0x02, 0x00, 0x00}, // enable cb 45  
    {0x26ed, &op_enable,	 13, 255, 255, 0x2e, 0x02, 0x00, 0x00}, // enable cb 46  
    {0x26fd, &op_enable,	 13, 255, 255, 0x2f, 0x02, 0x00, 0x00}, // enable cb 47  
    {0x270d, &op_enable,	 13, 255, 255, 0x30, 0x02, 0x00, 0x00}, // enable cb 48  
    {0x271d, &op_enable,	 13, 255, 255, 0x31, 0x02, 0x00, 0x00}, // enable cb 49  
    {0x272d, &op_enable,	 13, 255, 255, 0x32, 0x02, 0x00, 0x00}, // enable cb 50  
    {0x273d, &op_enable,	 13, 255, 255, 0x33, 0x02, 0x00, 0x00}, // enable cb 51  
    {0x274d, &op_enable,	 13, 255, 255, 0x34, 0x02, 0x00, 0x00}, // enable cb 52  
    {0x275d, &op_enable,	 13, 255, 255, 0x35, 0x02, 0x00, 0x00}, // enable cb 53  
    {0x276d, &op_enable,	 13, 255, 255, 0x36, 0x02, 0x00, 0x00}, // enable cb 54  
    {0x277d, &op_enable,	 13, 255, 255, 0x37, 0x02, 0x00, 0x00}, // enable cb 55  
    {0x278d, &op_enable,	 13, 255, 255, 0x38, 0x02, 0x00, 0x00}, // enable cb 56  
    {0x279d, &op_enable,	 13, 255, 255, 0x39, 0x02, 0x00, 0x00}, // enable cb 57  
    {0x27ad, &op_enable,	 13, 255, 255, 0x3a, 0x02, 0x00, 0x00}, // enable cb 58  
    {0x27bd, &op_enable,	 13, 255, 255, 0x3b, 0x02, 0x00, 0x00}, // enable cb 59  
    {0x27cd, &op_enable,	 13, 255, 255, 0x3c, 0x02, 0x00, 0x00}, // enable cb 60  
    {0x27dd, &op_enable,	 13, 255, 255, 0x3d, 0x02, 0x00, 0x00}, // enable cb 61  
    {0x27ed, &op_enable,	 13, 255, 255, 0x3e, 0x02, 0x00, 0x00}, // enable cb 62  
    {0x27fd, &op_enable,	 13, 255, 255, 0x3f, 0x02, 0x00, 0x00}, // enable cb 63  
    {0x240e, &op_enable,	 14, 255, 255, 0x00, 0x02, 0x00, 0x00}, // enable pi 0  
    {0x241e, &op_enable,	 14, 255, 255, 0x01, 0x02, 0x00, 0x00}, // enable pi 1  
    {0x242e, &op_enable,	 14, 255, 255, 0x02, 0x02, 0x00, 0x00}, // enable pi 2  
    {0x243e, &op_enable,	 14, 255, 255, 0x03, 0x02, 0x00, 0x00}, // enable pi 3  
    {0x244e, &op_enable,	 14, 255, 255, 0x04, 0x02, 0x00, 0x00}, // enable pi 4  
    {0x245e, &op_enable,	 14, 255, 255, 0x05, 0x02, 0x00, 0x00}, // enable pi 5  
    {0x246e, &op_enable,	 14, 255, 255, 0x06, 0x02, 0x00, 0x00}, // enable pi 6  
    {0x247e, &op_enable,	 14, 255, 255, 0x07, 0x02, 0x00, 0x00}, // enable pi 7  
    {0x248e, &op_enable,	 14, 255, 255, 0x08, 0x02, 0x00, 0x00}, // enable pi 8  
    {0x249e, &op_enable,	 14, 255, 255, 0x09, 0x02, 0x00, 0x00}, // enable pi 9  
    {0x24ae, &op_enable,	 14, 255, 255, 0x0a, 0x02, 0x00, 0x00}, // enable pi 10  
    {0x24be, &op_enable,	 14, 255, 255, 0x0b, 0x02, 0x00, 0x00}, // enable pi 11  
    {0x24ce, &op_enable,	 14, 255, 255, 0x0c, 0x02, 0x00, 0x00}, // enable pi 12  
    {0x24de, &op_enable,	 14, 255, 255, 0x0d, 0x02, 0x00, 0x00}, // enable pi 13  
    {0x24ee, &op_enable,	 14, 255, 255, 0x0e, 0x02, 0x00, 0x00}, // enable pi 14  
    {0x24fe, &op_enable,	 14, 255, 255, 0x0f, 0x02, 0x00, 0x00}, // enable pi 15  
    {0x250e, &op_enable,	 14, 255, 255, 0x10, 0x02, 0x00, 0x00}, // enable pi 16  
    {0x251e, &op_enable,	 14, 255, 255, 0x11, 0x02, 0x00, 0x00}, // enable pi 17  
    {0x252e, &op_enable,	 14, 255, 255, 0x12, 0x02, 0x00, 0x00}, // enable pi 18  
    {0x253e, &op_enable,	 14, 255, 255, 0x13, 0x02, 0x00, 0x00}, // enable pi 19  
    {0x254e, &op_enable,	 14, 255, 255, 0x14, 0x02, 0x00, 0x00}, // enable pi 20  
    {0x255e, &op_enable,	 14, 255, 255, 0x15, 0x02, 0x00, 0x00}, // enable pi 21  
    {0x256e, &op_enable,	 14, 255, 255, 0x16, 0x02, 0x00, 0x00}, // enable pi 22  
    {0x257e, &op_enable,	 14, 255, 255, 0x17, 0x02, 0x00, 0x00}, // enable pi 23  
    {0x258e, &op_enable,	 14, 255, 255, 0x18, 0x02, 0x00, 0x00}, // enable pi 24  
    {0x259e, &op_enable,	 14, 255, 255, 0x19, 0x02, 0x00, 0x00}, // enable pi 25  
    {0x25ae, &op_enable,	 14, 255, 255, 0x1a, 0x02, 0x00, 0x00}, // enable pi 26  
    {0x25be, &op_enable,	 14, 255, 255, 0x1b, 0x02, 0x00, 0x00}, // enable pi 27  
    {0x25ce, &op_enable,	 14, 255, 255, 0x1c, 0x02, 0x00, 0x00}, // enable pi 28  
    {0x25de, &op_enable,	 14, 255, 255, 0x1d, 0x02, 0x00, 0x00}, // enable pi 29  
    {0x25ee, &op_enable,	 14, 255, 255, 0x1e, 0x02, 0x00, 0x00}, // enable pi 30  
    {0x25fe, &op_enable,	 14, 255, 255, 0x1f, 0x02, 0x00, 0x00}, // enable pi 31  
    {0x260e, &op_enable,	 14, 255, 255, 0x20, 0x02, 0x00, 0x00}, // enable pi 32  
    {0x261e, &op_enable,	 14, 255, 255, 0x21, 0x02, 0x00, 0x00}, // enable pi 33  
    {0x262e, &op_enable,	 14, 255, 255, 0x22, 0x02, 0x00, 0x00}, // enable pi 34  
    {0x263e, &op_enable,	 14, 255, 255, 0x23, 0x02, 0x00, 0x00}, // enable pi 35  
    {0x264e, &op_enable,	 14, 255, 255, 0x24, 0x02, 0x00, 0x00}, // enable pi 36  
    {0x265e, &op_enable,	 14, 255, 255, 0x25, 0x02, 0x00, 0x00}, // enable pi 37  
    {0x266e, &op_enable,	 14, 255, 255, 0x26, 0x02, 0x00, 0x00}, // enable pi 38  
    {0x267e, &op_enable,	 14, 255, 255, 0x27, 0x02, 0x00, 0x00}, // enable pi 39  
    {0x268e, &op_enable,	 14, 255, 255, 0x28, 0x02, 0x00, 0x00}, // enable pi 40  
    {0x269e, &op_enable,	 14, 255, 255, 0x29, 0x02, 0x00, 0x00}, // enable pi 41  
    {0x26ae, &op_enable,	 14, 255, 255, 0x2a, 0x02, 0x00, 0x00}, // enable pi 42  
    {0x26be, &op_enable,	 14, 255, 255, 0x2b, 0x02, 0x00, 0x00}, // enable pi 43  
    {0x26ce, &op_enable,	 14, 255, 255, 0x2c, 0x02, 0x00, 0x00}, // enable pi 44  
    {0x26de, &op_enable,	 14, 255, 255, 0x2d, 0x02, 0x00, 0x00}, // enable pi 45  
    {0x26ee, &op_enable,	 14, 255, 255, 0x2e, 0x02, 0x00, 0x00}, // enable pi 46  
    {0x26fe, &op_enable,	 14, 255, 255, 0x2f, 0x02, 0x00, 0x00}, // enable pi 47  
    {0x270e, &op_enable,	 14, 255, 255, 0x30, 0x02, 0x00, 0x00}, // enable pi 48  
    {0x271e, &op_enable,	 14, 255, 255, 0x31, 0x02, 0x00, 0x00}, // enable pi 49  
    {0x272e, &op_enable,	 14, 255, 255, 0x32, 0x02, 0x00, 0x00}, // enable pi 50  
    {0x273e, &op_enable,	 14, 255, 255, 0x33, 0x02, 0x00, 0x00}, // enable pi 51  
    {0x274e, &op_enable,	 14, 255, 255, 0x34, 0x02, 0x00, 0x00}, // enable pi 52  
    {0x275e, &op_enable,	 14, 255, 255, 0x35, 0x02, 0x00, 0x00}, // enable pi 53  
    {0x276e, &op_enable,	 14, 255, 255, 0x36, 0x02, 0x00, 0x00}, // enable pi 54  
    {0x277e, &op_enable,	 14, 255, 255, 0x37, 0x02, 0x00, 0x00}, // enable pi 55  
    {0x278e, &op_enable,	 14, 255, 255, 0x38, 0x02, 0x00, 0x00}, // enable pi 56  
    {0x279e, &op_enable,	 14, 255, 255, 0x39, 0x02, 0x00, 0x00}, // enable pi 57  
    {0x27ae, &op_enable,	 14, 255, 255, 0x3a, 0x02, 0x00, 0x00}, // enable pi 58  
    {0x27be, &op_enable,	 14, 255, 255, 0x3b, 0x02, 0x00, 0x00}, // enable pi 59  
    {0x27ce, &op_enable,	 14, 255, 255, 0x3c, 0x02, 0x00, 0x00}, // enable pi 60  
    {0x27de, &op_enable,	 14, 255, 255, 0x3d, 0x02, 0x00, 0x00}, // enable pi 61  
    {0x27ee, &op_enable,	 14, 255, 255, 0x3e, 0x02, 0x00, 0x00}, // enable pi 62  
    {0x27fe, &op_enable,	 14, 255, 255, 0x3f, 0x02, 0x00, 0x00}, // enable pi 63  
    {0x240f, &op_enable,	 15, 255, 255, 0x00, 0x02, 0x00, 0x00}, // enable status 0  
    {0x241f, &op_enable,	 15, 255, 255, 0x01, 0x02, 0x00, 0x00}, // enable status 1  
    {0x242f, &op_enable,	 15, 255, 255, 0x02, 0x02, 0x00, 0x00}, // enable status 2  
    {0x243f, &op_enable,	 15, 255, 255, 0x03, 0x02, 0x00, 0x00}, // enable status 3  
    {0x244f, &op_enable,	 15, 255, 255, 0x04, 0x02, 0x00, 0x00}, // enable status 4  
    {0x245f, &op_enable,	 15, 255, 255, 0x05, 0x02, 0x00, 0x00}, // enable status 5  
    {0x246f, &op_enable,	 15, 255, 255, 0x06, 0x02, 0x00, 0x00}, // enable status 6  
    {0x247f, &op_enable,	 15, 255, 255, 0x07, 0x02, 0x00, 0x00}, // enable status 7  
    {0x248f, &op_enable,	 15, 255, 255, 0x08, 0x02, 0x00, 0x00}, // enable status 8  
    {0x249f, &op_enable,	 15, 255, 255, 0x09, 0x02, 0x00, 0x00}, // enable status 9  
    {0x24af, &op_enable,	 15, 255, 255, 0x0a, 0x02, 0x00, 0x00}, // enable status 10  
    {0x24bf, &op_enable,	 15, 255, 255, 0x0b, 0x02, 0x00, 0x00}, // enable status 11  
    {0x24cf, &op_enable,	 15, 255, 255, 0x0c, 0x02, 0x00, 0x00}, // enable status 12  
    {0x24df, &op_enable,	 15, 255, 255, 0x0d, 0x02, 0x00, 0x00}, // enable status 13  
    {0x24ef, &op_enable,	 15, 255, 255, 0x0e, 0x02, 0x00, 0x00}, // enable status 14  
    {0x24ff, &op_enable,	 15, 255, 255, 0x0f, 0x02, 0x00, 0x00}, // enable status 15  
    {0x250f, &op_enable,	 15, 255, 255, 0x10, 0x02, 0x00, 0x00}, // enable status 16  
    {0x251f, &op_enable,	 15, 255, 255, 0x11, 0x02, 0x00, 0x00}, // enable status 17  
    {0x252f, &op_enable,	 15, 255, 255, 0x12, 0x02, 0x00, 0x00}, // enable status 18  
    {0x253f, &op_enable,	 15, 255, 255, 0x13, 0x02, 0x00, 0x00}, // enable status 19  
    {0x254f, &op_enable,	 15, 255, 255, 0x14, 0x02, 0x00, 0x00}, // enable status 20  
    {0x255f, &op_enable,	 15, 255, 255, 0x15, 0x02, 0x00, 0x00}, // enable status 21  
    {0x256f, &op_enable,	 15, 255, 255, 0x16, 0x02, 0x00, 0x00}, // enable status 22  
    {0x257f, &op_enable,	 15, 255, 255, 0x17, 0x02, 0x00, 0x00}, // enable status 23  
    {0x258f, &op_enable,	 15, 255, 255, 0x18, 0x02, 0x00, 0x00}, // enable status 24  
    {0x259f, &op_enable,	 15, 255, 255, 0x19, 0x02, 0x00, 0x00}, // enable status 25  
    {0x25af, &op_enable,	 15, 255, 255, 0x1a, 0x02, 0x00, 0x00}, // enable status 26  
    {0x25bf, &op_enable,	 15, 255, 255, 0x1b, 0x02, 0x00, 0x00}, // enable status 27  
    {0x25cf, &op_enable,	 15, 255, 255, 0x1c, 0x02, 0x00, 0x00}, // enable status 28  
    {0x25df, &op_enable,	 15, 255, 255, 0x1d, 0x02, 0x00, 0x00}, // enable status 29  
    {0x25ef, &op_enable,	 15, 255, 255, 0x1e, 0x02, 0x00, 0x00}, // enable status 30  
    {0x25ff, &op_enable,	 15, 255, 255, 0x1f, 0x02, 0x00, 0x00}, // enable status 31  
    {0x260f, &op_enable,	 15, 255, 255, 0x20, 0x02, 0x00, 0x00}, // enable status 32  
    {0x261f, &op_enable,	 15, 255, 255, 0x21, 0x02, 0x00, 0x00}, // enable status 33  
    {0x262f, &op_enable,	 15, 255, 255, 0x22, 0x02, 0x00, 0x00}, // enable status 34  
    {0x263f, &op_enable,	 15, 255, 255, 0x23, 0x02, 0x00, 0x00}, // enable status 35  
    {0x264f, &op_enable,	 15, 255, 255, 0x24, 0x02, 0x00, 0x00}, // enable status 36  
    {0x265f, &op_enable,	 15, 255, 255, 0x25, 0x02, 0x00, 0x00}, // enable status 37  
    {0x266f, &op_enable,	 15, 255, 255, 0x26, 0x02, 0x00, 0x00}, // enable status 38  
    {0x267f, &op_enable,	 15, 255, 255, 0x27, 0x02, 0x00, 0x00}, // enable status 39  
    {0x268f, &op_enable,	 15, 255, 255, 0x28, 0x02, 0x00, 0x00}, // enable status 40  
    {0x269f, &op_enable,	 15, 255, 255, 0x29, 0x02, 0x00, 0x00}, // enable status 41  
    {0x26af, &op_enable,	 15, 255, 255, 0x2a, 0x02, 0x00, 0x00}, // enable status 42  
    {0x26bf, &op_enable,	 15, 255, 255, 0x2b, 0x02, 0x00, 0x00}, // enable status 43  
    {0x26cf, &op_enable,	 15, 255, 255, 0x2c, 0x02, 0x00, 0x00}, // enable status 44  
    {0x26df, &op_enable,	 15, 255, 255, 0x2d, 0x02, 0x00, 0x00}, // enable status 45  
    {0x26ef, &op_enable,	 15, 255, 255, 0x2e, 0x02, 0x00, 0x00}, // enable status 46  
    {0x26ff, &op_enable,	 15, 255, 255, 0x2f, 0x02, 0x00, 0x00}, // enable status 47  
    {0x270f, &op_enable,	 15, 255, 255, 0x30, 0x02, 0x00, 0x00}, // enable status 48  
    {0x271f, &op_enable,	 15, 255, 255, 0x31, 0x02, 0x00, 0x00}, // enable status 49  
    {0x272f, &op_enable,	 15, 255, 255, 0x32, 0x02, 0x00, 0x00}, // enable status 50  
    {0x273f, &op_enable,	 15, 255, 255, 0x33, 0x02, 0x00, 0x00}, // enable status 51  
    {0x274f, &op_enable,	 15, 255, 255, 0x34, 0x02, 0x00, 0x00}, // enable status 52  
    {0x275f, &op_enable,	 15, 255, 255, 0x35, 0x02, 0x00, 0x00}, // enable status 53  
    {0x276f, &op_enable,	 15, 255, 255, 0x36, 0x02, 0x00, 0x00}, // enable status 54  
    {0x277f, &op_enable,	 15, 255, 255, 0x37, 0x02, 0x00, 0x00}, // enable status 55  
    {0x278f, &op_enable,	 15, 255, 255, 0x38, 0x02, 0x00, 0x00}, // enable status 56  
    {0x279f, &op_enable,	 15, 255, 255, 0x39, 0x02, 0x00, 0x00}, // enable status 57  
    {0x27af, &op_enable,	 15, 255, 255, 0x3a, 0x02, 0x00, 0x00}, // enable status 58  
    {0x27bf, &op_enable,	 15, 255, 255, 0x3b, 0x02, 0x00, 0x00}, // enable status 59  
    {0x27cf, &op_enable,	 15, 255, 255, 0x3c, 0x02, 0x00, 0x00}, // enable status 60  
    {0x27df, &op_enable,	 15, 255, 255, 0x3d, 0x02, 0x00, 0x00}, // enable status 61  
    {0x27ef, &op_enable,	 15, 255, 255, 0x3e, 0x02, 0x00, 0x00}, // enable status 62  
    {0x27ff, &op_enable,	 15, 255, 255, 0x3f, 0x02, 0x00, 0x00}, // enable status 63  
	{0x2c00, &op_test,	  0, 255, 255, 0x00, 0x00, 0x00, 0x00}, // test a 0  
	{0x2c10, &op_test,	  0, 255, 255, 0x01, 0x00, 0x00, 0x00}, // test a 1  
	{0x2c20, &op_test,	  0, 255, 255, 0x02, 0x00, 0x00, 0x00}, // test a 2  
	{0x2c30, &op_test,	  0, 255, 255, 0x03, 0x00, 0x00, 0x00}, // test a 3  
	{0x2c40, &op_test,	  0, 255, 255, 0x04, 0x00, 0x00, 0x00}, // test a 4  
	{0x2c50, &op_test,	  0, 255, 255, 0x05, 0x00, 0x00, 0x00}, // test a 5  
	{0x2c60, &op_test,	  0, 255, 255, 0x06, 0x00, 0x00, 0x00}, // test a 6  
	{0x2c70, &op_test,	  0, 255, 255, 0x07, 0x00, 0x00, 0x00}, // test a 7  
	{0x2c80, &op_test,	  0, 255, 255, 0x08, 0x00, 0x00, 0x00}, // test a 8  
	{0x2c90, &op_test,	  0, 255, 255, 0x09, 0x00, 0x00, 0x00}, // test a 9  
	{0x2ca0, &op_test,	  0, 255, 255, 0x0a, 0x00, 0x00, 0x00}, // test a 10  
	{0x2cb0, &op_test,	  0, 255, 255, 0x0b, 0x00, 0x00, 0x00}, // test a 11  
	{0x2cc0, &op_test,	  0, 255, 255, 0x0c, 0x00, 0x00, 0x00}, // test a 12  
	{0x2cd0, &op_test,	  0, 255, 255, 0x0d, 0x00, 0x00, 0x00}, // test a 13  
	{0x2ce0, &op_test,	  0, 255, 255, 0x0e, 0x00, 0x00, 0x00}, // test a 14  
	{0x2cf0, &op_test,	  0, 255, 255, 0x0f, 0x00, 0x00, 0x00}, // test a 15  
	{0x2d00, &op_test,	  0, 255, 255, 0x10, 0x00, 0x00, 0x00}, // test a 16  
	{0x2d10, &op_test,	  0, 255, 255, 0x11, 0x00, 0x00, 0x00}, // test a 17  
	{0x2d20, &op_test,	  0, 255, 255, 0x12, 0x00, 0x00, 0x00}, // test a 18  
	{0x2d30, &op_test,	  0, 255, 255, 0x13, 0x00, 0x00, 0x00}, // test a 19  
	{0x2d40, &op_test,	  0, 255, 255, 0x14, 0x00, 0x00, 0x00}, // test a 20  
	{0x2d50, &op_test,	  0, 255, 255, 0x15, 0x00, 0x00, 0x00}, // test a 21  
	{0x2d60, &op_test,	  0, 255, 255, 0x16, 0x00, 0x00, 0x00}, // test a 22  
	{0x2d70, &op_test,	  0, 255, 255, 0x17, 0x00, 0x00, 0x00}, // test a 23  
	{0x2d80, &op_test,	  0, 255, 255, 0x18, 0x00, 0x00, 0x00}, // test a 24  
	{0x2d90, &op_test,	  0, 255, 255, 0x19, 0x00, 0x00, 0x00}, // test a 25  
	{0x2da0, &op_test,	  0, 255, 255, 0x1a, 0x00, 0x00, 0x00}, // test a 26  
	{0x2db0, &op_test,	  0, 255, 255, 0x1b, 0x00, 0x00, 0x00}, // test a 27  
	{0x2dc0, &op_test,	  0, 255, 255, 0x1c, 0x00, 0x00, 0x00}, // test a 28  
	{0x2dd0, &op_test,	  0, 255, 255, 0x1d, 0x00, 0x00, 0x00}, // test a 29  
	{0x2de0, &op_test,	  0, 255, 255, 0x1e, 0x00, 0x00, 0x00}, // test a 30  
	{0x2df0, &op_test,	  0, 255, 255, 0x1f, 0x00, 0x00, 0x00}, // test a 31  
	{0x2e00, &op_test,	  0, 255, 255, 0x20, 0x00, 0x00, 0x00}, // test a 32  
	{0x2e10, &op_test,	  0, 255, 255, 0x21, 0x00, 0x00, 0x00}, // test a 33  
	{0x2e20, &op_test,	  0, 255, 255, 0x22, 0x00, 0x00, 0x00}, // test a 34  
	{0x2e30, &op_test,	  0, 255, 255, 0x23, 0x00, 0x00, 0x00}, // test a 35  
	{0x2e40, &op_test,	  0, 255, 255, 0x24, 0x00, 0x00, 0x00}, // test a 36  
	{0x2e50, &op_test,	  0, 255, 255, 0x25, 0x00, 0x00, 0x00}, // test a 37  
	{0x2e60, &op_test,	  0, 255, 255, 0x26, 0x00, 0x00, 0x00}, // test a 38  
	{0x2e70, &op_test,	  0, 255, 255, 0x27, 0x00, 0x00, 0x00}, // test a 39  
	{0x2e80, &op_test,	  0, 255, 255, 0x28, 0x00, 0x00, 0x00}, // test a 40  
	{0x2e90, &op_test,	  0, 255, 255, 0x29, 0x00, 0x00, 0x00}, // test a 41  
	{0x2ea0, &op_test,	  0, 255, 255, 0x2a, 0x00, 0x00, 0x00}, // test a 42  
	{0x2eb0, &op_test,	  0, 255, 255, 0x2b, 0x00, 0x00, 0x00}, // test a 43  
	{0x2ec0, &op_test,	  0, 255, 255, 0x2c, 0x00, 0x00, 0x00}, // test a 44  
	{0x2ed0, &op_test,	  0, 255, 255, 0x2d, 0x00, 0x00, 0x00}, // test a 45  
	{0x2ee0, &op_test,	  0, 255, 255, 0x2e, 0x00, 0x00, 0x00}, // test a 46  
	{0x2ef0, &op_test,	  0, 255, 255, 0x2f, 0x00, 0x00, 0x00}, // test a 47  
	{0x2f00, &op_test,	  0, 255, 255, 0x30, 0x00, 0x00, 0x00}, // test a 48  
	{0x2f10, &op_test,	  0, 255, 255, 0x31, 0x00, 0x00, 0x00}, // test a 49  
	{0x2f20, &op_test,	  0, 255, 255, 0x32, 0x00, 0x00, 0x00}, // test a 50  
	{0x2f30, &op_test,	  0, 255, 255, 0x33, 0x00, 0x00, 0x00}, // test a 51  
	{0x2f40, &op_test,	  0, 255, 255, 0x34, 0x00, 0x00, 0x00}, // test a 52  
	{0x2f50, &op_test,	  0, 255, 255, 0x35, 0x00, 0x00, 0x00}, // test a 53  
	{0x2f60, &op_test,	  0, 255, 255, 0x36, 0x00, 0x00, 0x00}, // test a 54  
	{0x2f70, &op_test,	  0, 255, 255, 0x37, 0x00, 0x00, 0x00}, // test a 55  
	{0x2f80, &op_test,	  0, 255, 255, 0x38, 0x00, 0x00, 0x00}, // test a 56  
	{0x2f90, &op_test,	  0, 255, 255, 0x39, 0x00, 0x00, 0x00}, // test a 57  
	{0x2fa0, &op_test,	  0, 255, 255, 0x3a, 0x00, 0x00, 0x00}, // test a 58  
	{0x2fb0, &op_test,	  0, 255, 255, 0x3b, 0x00, 0x00, 0x00}, // test a 59  
	{0x2fc0, &op_test,	  0, 255, 255, 0x3c, 0x00, 0x00, 0x00}, // test a 60  
	{0x2fd0, &op_test,	  0, 255, 255, 0x3d, 0x00, 0x00, 0x00}, // test a 61  
	{0x2fe0, &op_test,	  0, 255, 255, 0x3e, 0x00, 0x00, 0x00}, // test a 62  
	{0x2ff0, &op_test,	  0, 255, 255, 0x3f, 0x00, 0x00, 0x00}, // test a 63  
	{0x2c01, &op_test,	  1, 255, 255, 0x00, 0x00, 0x00, 0x00}, // test b 0  
	{0x2c11, &op_test,	  1, 255, 255, 0x01, 0x00, 0x00, 0x00}, // test b 1  
	{0x2c21, &op_test,	  1, 255, 255, 0x02, 0x00, 0x00, 0x00}, // test b 2  
	{0x2c31, &op_test,	  1, 255, 255, 0x03, 0x00, 0x00, 0x00}, // test b 3  
	{0x2c41, &op_test,	  1, 255, 255, 0x04, 0x00, 0x00, 0x00}, // test b 4  
	{0x2c51, &op_test,	  1, 255, 255, 0x05, 0x00, 0x00, 0x00}, // test b 5  
	{0x2c61, &op_test,	  1, 255, 255, 0x06, 0x00, 0x00, 0x00}, // test b 6  
	{0x2c71, &op_test,	  1, 255, 255, 0x07, 0x00, 0x00, 0x00}, // test b 7  
	{0x2c81, &op_test,	  1, 255, 255, 0x08, 0x00, 0x00, 0x00}, // test b 8  
	{0x2c91, &op_test,	  1, 255, 255, 0x09, 0x00, 0x00, 0x00}, // test b 9  
	{0x2ca1, &op_test,	  1, 255, 255, 0x0a, 0x00, 0x00, 0x00}, // test b 10  
	{0x2cb1, &op_test,	  1, 255, 255, 0x0b, 0x00, 0x00, 0x00}, // test b 11  
	{0x2cc1, &op_test,	  1, 255, 255, 0x0c, 0x00, 0x00, 0x00}, // test b 12  
	{0x2cd1, &op_test,	  1, 255, 255, 0x0d, 0x00, 0x00, 0x00}, // test b 13  
	{0x2ce1, &op_test,	  1, 255, 255, 0x0e, 0x00, 0x00, 0x00}, // test b 14  
	{0x2cf1, &op_test,	  1, 255, 255, 0x0f, 0x00, 0x00, 0x00}, // test b 15  
	{0x2d01, &op_test,	  1, 255, 255, 0x10, 0x00, 0x00, 0x00}, // test b 16  
	{0x2d11, &op_test,	  1, 255, 255, 0x11, 0x00, 0x00, 0x00}, // test b 17  
	{0x2d21, &op_test,	  1, 255, 255, 0x12, 0x00, 0x00, 0x00}, // test b 18  
	{0x2d31, &op_test,	  1, 255, 255, 0x13, 0x00, 0x00, 0x00}, // test b 19  
	{0x2d41, &op_test,	  1, 255, 255, 0x14, 0x00, 0x00, 0x00}, // test b 20  
	{0x2d51, &op_test,	  1, 255, 255, 0x15, 0x00, 0x00, 0x00}, // test b 21  
	{0x2d61, &op_test,	  1, 255, 255, 0x16, 0x00, 0x00, 0x00}, // test b 22  
	{0x2d71, &op_test,	  1, 255, 255, 0x17, 0x00, 0x00, 0x00}, // test b 23  
	{0x2d81, &op_test,	  1, 255, 255, 0x18, 0x00, 0x00, 0x00}, // test b 24  
	{0x2d91, &op_test,	  1, 255, 255, 0x19, 0x00, 0x00, 0x00}, // test b 25  
	{0x2da1, &op_test,	  1, 255, 255, 0x1a, 0x00, 0x00, 0x00}, // test b 26  
	{0x2db1, &op_test,	  1, 255, 255, 0x1b, 0x00, 0x00, 0x00}, // test b 27  
	{0x2dc1, &op_test,	  1, 255, 255, 0x1c, 0x00, 0x00, 0x00}, // test b 28  
	{0x2dd1, &op_test,	  1, 255, 255, 0x1d, 0x00, 0x00, 0x00}, // test b 29  
	{0x2de1, &op_test,	  1, 255, 255, 0x1e, 0x00, 0x00, 0x00}, // test b 30  
	{0x2df1, &op_test,	  1, 255, 255, 0x1f, 0x00, 0x00, 0x00}, // test b 31  
	{0x2e01, &op_test,	  1, 255, 255, 0x20, 0x00, 0x00, 0x00}, // test b 32  
	{0x2e11, &op_test,	  1, 255, 255, 0x21, 0x00, 0x00, 0x00}, // test b 33  
	{0x2e21, &op_test,	  1, 255, 255, 0x22, 0x00, 0x00, 0x00}, // test b 34  
	{0x2e31, &op_test,	  1, 255, 255, 0x23, 0x00, 0x00, 0x00}, // test b 35  
	{0x2e41, &op_test,	  1, 255, 255, 0x24, 0x00, 0x00, 0x00}, // test b 36  
	{0x2e51, &op_test,	  1, 255, 255, 0x25, 0x00, 0x00, 0x00}, // test b 37  
	{0x2e61, &op_test,	  1, 255, 255, 0x26, 0x00, 0x00, 0x00}, // test b 38  
	{0x2e71, &op_test,	  1, 255, 255, 0x27, 0x00, 0x00, 0x00}, // test b 39  
	{0x2e81, &op_test,	  1, 255, 255, 0x28, 0x00, 0x00, 0x00}, // test b 40  
	{0x2e91, &op_test,	  1, 255, 255, 0x29, 0x00, 0x00, 0x00}, // test b 41  
	{0x2ea1, &op_test,	  1, 255, 255, 0x2a, 0x00, 0x00, 0x00}, // test b 42  
	{0x2eb1, &op_test,	  1, 255, 255, 0x2b, 0x00, 0x00, 0x00}, // test b 43  
	{0x2ec1, &op_test,	  1, 255, 255, 0x2c, 0x00, 0x00, 0x00}, // test b 44  
	{0x2ed1, &op_test,	  1, 255, 255, 0x2d, 0x00, 0x00, 0x00}, // test b 45  
	{0x2ee1, &op_test,	  1, 255, 255, 0x2e, 0x00, 0x00, 0x00}, // test b 46  
	{0x2ef1, &op_test,	  1, 255, 255, 0x2f, 0x00, 0x00, 0x00}, // test b 47  
	{0x2f01, &op_test,	  1, 255, 255, 0x30, 0x00, 0x00, 0x00}, // test b 48  
	{0x2f11, &op_test,	  1, 255, 255, 0x31, 0x00, 0x00, 0x00}, // test b 49  
	{0x2f21, &op_test,	  1, 255, 255, 0x32, 0x00, 0x00, 0x00}, // test b 50  
	{0x2f31, &op_test,	  1, 255, 255, 0x33, 0x00, 0x00, 0x00}, // test b 51  
	{0x2f41, &op_test,	  1, 255, 255, 0x34, 0x00, 0x00, 0x00}, // test b 52  
	{0x2f51, &op_test,	  1, 255, 255, 0x35, 0x00, 0x00, 0x00}, // test b 53  
	{0x2f61, &op_test,	  1, 255, 255, 0x36, 0x00, 0x00, 0x00}, // test b 54  
	{0x2f71, &op_test,	  1, 255, 255, 0x37, 0x00, 0x00, 0x00}, // test b 55  
	{0x2f81, &op_test,	  1, 255, 255, 0x38, 0x00, 0x00, 0x00}, // test b 56  
	{0x2f91, &op_test,	  1, 255, 255, 0x39, 0x00, 0x00, 0x00}, // test b 57  
	{0x2fa1, &op_test,	  1, 255, 255, 0x3a, 0x00, 0x00, 0x00}, // test b 58  
	{0x2fb1, &op_test,	  1, 255, 255, 0x3b, 0x00, 0x00, 0x00}, // test b 59  
	{0x2fc1, &op_test,	  1, 255, 255, 0x3c, 0x00, 0x00, 0x00}, // test b 60  
	{0x2fd1, &op_test,	  1, 255, 255, 0x3d, 0x00, 0x00, 0x00}, // test b 61  
	{0x2fe1, &op_test,	  1, 255, 255, 0x3e, 0x00, 0x00, 0x00}, // test b 62  
	{0x2ff1, &op_test,	  1, 255, 255, 0x3f, 0x00, 0x00, 0x00}, // test b 63  
	{0x2c02, &op_test,	  2, 255, 255, 0x00, 0x00, 0x00, 0x00}, // test c 0  
	{0x2c12, &op_test,	  2, 255, 255, 0x01, 0x00, 0x00, 0x00}, // test c 1  
	{0x2c22, &op_test,	  2, 255, 255, 0x02, 0x00, 0x00, 0x00}, // test c 2  
	{0x2c32, &op_test,	  2, 255, 255, 0x03, 0x00, 0x00, 0x00}, // test c 3  
	{0x2c42, &op_test,	  2, 255, 255, 0x04, 0x00, 0x00, 0x00}, // test c 4  
	{0x2c52, &op_test,	  2, 255, 255, 0x05, 0x00, 0x00, 0x00}, // test c 5  
	{0x2c62, &op_test,	  2, 255, 255, 0x06, 0x00, 0x00, 0x00}, // test c 6  
	{0x2c72, &op_test,	  2, 255, 255, 0x07, 0x00, 0x00, 0x00}, // test c 7  
	{0x2c82, &op_test,	  2, 255, 255, 0x08, 0x00, 0x00, 0x00}, // test c 8  
	{0x2c92, &op_test,	  2, 255, 255, 0x09, 0x00, 0x00, 0x00}, // test c 9  
	{0x2ca2, &op_test,	  2, 255, 255, 0x0a, 0x00, 0x00, 0x00}, // test c 10  
	{0x2cb2, &op_test,	  2, 255, 255, 0x0b, 0x00, 0x00, 0x00}, // test c 11  
	{0x2cc2, &op_test,	  2, 255, 255, 0x0c, 0x00, 0x00, 0x00}, // test c 12  
	{0x2cd2, &op_test,	  2, 255, 255, 0x0d, 0x00, 0x00, 0x00}, // test c 13  
	{0x2ce2, &op_test,	  2, 255, 255, 0x0e, 0x00, 0x00, 0x00}, // test c 14  
	{0x2cf2, &op_test,	  2, 255, 255, 0x0f, 0x00, 0x00, 0x00}, // test c 15  
	{0x2d02, &op_test,	  2, 255, 255, 0x10, 0x00, 0x00, 0x00}, // test c 16  
	{0x2d12, &op_test,	  2, 255, 255, 0x11, 0x00, 0x00, 0x00}, // test c 17  
	{0x2d22, &op_test,	  2, 255, 255, 0x12, 0x00, 0x00, 0x00}, // test c 18  
	{0x2d32, &op_test,	  2, 255, 255, 0x13, 0x00, 0x00, 0x00}, // test c 19  
	{0x2d42, &op_test,	  2, 255, 255, 0x14, 0x00, 0x00, 0x00}, // test c 20  
	{0x2d52, &op_test,	  2, 255, 255, 0x15, 0x00, 0x00, 0x00}, // test c 21  
	{0x2d62, &op_test,	  2, 255, 255, 0x16, 0x00, 0x00, 0x00}, // test c 22  
	{0x2d72, &op_test,	  2, 255, 255, 0x17, 0x00, 0x00, 0x00}, // test c 23  
	{0x2d82, &op_test,	  2, 255, 255, 0x18, 0x00, 0x00, 0x00}, // test c 24  
	{0x2d92, &op_test,	  2, 255, 255, 0x19, 0x00, 0x00, 0x00}, // test c 25  
	{0x2da2, &op_test,	  2, 255, 255, 0x1a, 0x00, 0x00, 0x00}, // test c 26  
	{0x2db2, &op_test,	  2, 255, 255, 0x1b, 0x00, 0x00, 0x00}, // test c 27  
	{0x2dc2, &op_test,	  2, 255, 255, 0x1c, 0x00, 0x00, 0x00}, // test c 28  
	{0x2dd2, &op_test,	  2, 255, 255, 0x1d, 0x00, 0x00, 0x00}, // test c 29  
	{0x2de2, &op_test,	  2, 255, 255, 0x1e, 0x00, 0x00, 0x00}, // test c 30  
	{0x2df2, &op_test,	  2, 255, 255, 0x1f, 0x00, 0x00, 0x00}, // test c 31  
	{0x2e02, &op_test,	  2, 255, 255, 0x20, 0x00, 0x00, 0x00}, // test c 32  
	{0x2e12, &op_test,	  2, 255, 255, 0x21, 0x00, 0x00, 0x00}, // test c 33  
	{0x2e22, &op_test,	  2, 255, 255, 0x22, 0x00, 0x00, 0x00}, // test c 34  
	{0x2e32, &op_test,	  2, 255, 255, 0x23, 0x00, 0x00, 0x00}, // test c 35  
	{0x2e42, &op_test,	  2, 255, 255, 0x24, 0x00, 0x00, 0x00}, // test c 36  
	{0x2e52, &op_test,	  2, 255, 255, 0x25, 0x00, 0x00, 0x00}, // test c 37  
	{0x2e62, &op_test,	  2, 255, 255, 0x26, 0x00, 0x00, 0x00}, // test c 38  
	{0x2e72, &op_test,	  2, 255, 255, 0x27, 0x00, 0x00, 0x00}, // test c 39  
	{0x2e82, &op_test,	  2, 255, 255, 0x28, 0x00, 0x00, 0x00}, // test c 40  
	{0x2e92, &op_test,	  2, 255, 255, 0x29, 0x00, 0x00, 0x00}, // test c 41  
	{0x2ea2, &op_test,	  2, 255, 255, 0x2a, 0x00, 0x00, 0x00}, // test c 42  
	{0x2eb2, &op_test,	  2, 255, 255, 0x2b, 0x00, 0x00, 0x00}, // test c 43  
	{0x2ec2, &op_test,	  2, 255, 255, 0x2c, 0x00, 0x00, 0x00}, // test c 44  
	{0x2ed2, &op_test,	  2, 255, 255, 0x2d, 0x00, 0x00, 0x00}, // test c 45  
	{0x2ee2, &op_test,	  2, 255, 255, 0x2e, 0x00, 0x00, 0x00}, // test c 46  
	{0x2ef2, &op_test,	  2, 255, 255, 0x2f, 0x00, 0x00, 0x00}, // test c 47  
	{0x2f02, &op_test,	  2, 255, 255, 0x30, 0x00, 0x00, 0x00}, // test c 48  
	{0x2f12, &op_test,	  2, 255, 255, 0x31, 0x00, 0x00, 0x00}, // test c 49  
	{0x2f22, &op_test,	  2, 255, 255, 0x32, 0x00, 0x00, 0x00}, // test c 50  
	{0x2f32, &op_test,	  2, 255, 255, 0x33, 0x00, 0x00, 0x00}, // test c 51  
	{0x2f42, &op_test,	  2, 255, 255, 0x34, 0x00, 0x00, 0x00}, // test c 52  
	{0x2f52, &op_test,	  2, 255, 255, 0x35, 0x00, 0x00, 0x00}, // test c 53  
	{0x2f62, &op_test,	  2, 255, 255, 0x36, 0x00, 0x00, 0x00}, // test c 54  
	{0x2f72, &op_test,	  2, 255, 255, 0x37, 0x00, 0x00, 0x00}, // test c 55  
	{0x2f82, &op_test,	  2, 255, 255, 0x38, 0x00, 0x00, 0x00}, // test c 56  
	{0x2f92, &op_test,	  2, 255, 255, 0x39, 0x00, 0x00, 0x00}, // test c 57  
	{0x2fa2, &op_test,	  2, 255, 255, 0x3a, 0x00, 0x00, 0x00}, // test c 58  
	{0x2fb2, &op_test,	  2, 255, 255, 0x3b, 0x00, 0x00, 0x00}, // test c 59  
	{0x2fc2, &op_test,	  2, 255, 255, 0x3c, 0x00, 0x00, 0x00}, // test c 60  
	{0x2fd2, &op_test,	  2, 255, 255, 0x3d, 0x00, 0x00, 0x00}, // test c 61  
	{0x2fe2, &op_test,	  2, 255, 255, 0x3e, 0x00, 0x00, 0x00}, // test c 62  
	{0x2ff2, &op_test,	  2, 255, 255, 0x3f, 0x00, 0x00, 0x00}, // test c 63  
	{0x2c03, &op_test,	  3, 255, 255, 0x00, 0x00, 0x00, 0x00}, // test d 0  
	{0x2c13, &op_test,	  3, 255, 255, 0x01, 0x00, 0x00, 0x00}, // test d 1  
	{0x2c23, &op_test,	  3, 255, 255, 0x02, 0x00, 0x00, 0x00}, // test d 2  
	{0x2c33, &op_test,	  3, 255, 255, 0x03, 0x00, 0x00, 0x00}, // test d 3  
	{0x2c43, &op_test,	  3, 255, 255, 0x04, 0x00, 0x00, 0x00}, // test d 4  
	{0x2c53, &op_test,	  3, 255, 255, 0x05, 0x00, 0x00, 0x00}, // test d 5  
	{0x2c63, &op_test,	  3, 255, 255, 0x06, 0x00, 0x00, 0x00}, // test d 6  
	{0x2c73, &op_test,	  3, 255, 255, 0x07, 0x00, 0x00, 0x00}, // test d 7  
	{0x2c83, &op_test,	  3, 255, 255, 0x08, 0x00, 0x00, 0x00}, // test d 8  
	{0x2c93, &op_test,	  3, 255, 255, 0x09, 0x00, 0x00, 0x00}, // test d 9  
	{0x2ca3, &op_test,	  3, 255, 255, 0x0a, 0x00, 0x00, 0x00}, // test d 10  
	{0x2cb3, &op_test,	  3, 255, 255, 0x0b, 0x00, 0x00, 0x00}, // test d 11  
	{0x2cc3, &op_test,	  3, 255, 255, 0x0c, 0x00, 0x00, 0x00}, // test d 12  
	{0x2cd3, &op_test,	  3, 255, 255, 0x0d, 0x00, 0x00, 0x00}, // test d 13  
	{0x2ce3, &op_test,	  3, 255, 255, 0x0e, 0x00, 0x00, 0x00}, // test d 14  
	{0x2cf3, &op_test,	  3, 255, 255, 0x0f, 0x00, 0x00, 0x00}, // test d 15  
	{0x2d03, &op_test,	  3, 255, 255, 0x10, 0x00, 0x00, 0x00}, // test d 16  
	{0x2d13, &op_test,	  3, 255, 255, 0x11, 0x00, 0x00, 0x00}, // test d 17  
	{0x2d23, &op_test,	  3, 255, 255, 0x12, 0x00, 0x00, 0x00}, // test d 18  
	{0x2d33, &op_test,	  3, 255, 255, 0x13, 0x00, 0x00, 0x00}, // test d 19  
	{0x2d43, &op_test,	  3, 255, 255, 0x14, 0x00, 0x00, 0x00}, // test d 20  
	{0x2d53, &op_test,	  3, 255, 255, 0x15, 0x00, 0x00, 0x00}, // test d 21  
	{0x2d63, &op_test,	  3, 255, 255, 0x16, 0x00, 0x00, 0x00}, // test d 22  
	{0x2d73, &op_test,	  3, 255, 255, 0x17, 0x00, 0x00, 0x00}, // test d 23  
	{0x2d83, &op_test,	  3, 255, 255, 0x18, 0x00, 0x00, 0x00}, // test d 24  
	{0x2d93, &op_test,	  3, 255, 255, 0x19, 0x00, 0x00, 0x00}, // test d 25  
	{0x2da3, &op_test,	  3, 255, 255, 0x1a, 0x00, 0x00, 0x00}, // test d 26  
	{0x2db3, &op_test,	  3, 255, 255, 0x1b, 0x00, 0x00, 0x00}, // test d 27  
	{0x2dc3, &op_test,	  3, 255, 255, 0x1c, 0x00, 0x00, 0x00}, // test d 28  
	{0x2dd3, &op_test,	  3, 255, 255, 0x1d, 0x00, 0x00, 0x00}, // test d 29  
	{0x2de3, &op_test,	  3, 255, 255, 0x1e, 0x00, 0x00, 0x00}, // test d 30  
	{0x2df3, &op_test,	  3, 255, 255, 0x1f, 0x00, 0x00, 0x00}, // test d 31  
	{0x2e03, &op_test,	  3, 255, 255, 0x20, 0x00, 0x00, 0x00}, // test d 32  
	{0x2e13, &op_test,	  3, 255, 255, 0x21, 0x00, 0x00, 0x00}, // test d 33  
	{0x2e23, &op_test,	  3, 255, 255, 0x22, 0x00, 0x00, 0x00}, // test d 34  
	{0x2e33, &op_test,	  3, 255, 255, 0x23, 0x00, 0x00, 0x00}, // test d 35  
	{0x2e43, &op_test,	  3, 255, 255, 0x24, 0x00, 0x00, 0x00}, // test d 36  
	{0x2e53, &op_test,	  3, 255, 255, 0x25, 0x00, 0x00, 0x00}, // test d 37  
	{0x2e63, &op_test,	  3, 255, 255, 0x26, 0x00, 0x00, 0x00}, // test d 38  
	{0x2e73, &op_test,	  3, 255, 255, 0x27, 0x00, 0x00, 0x00}, // test d 39  
	{0x2e83, &op_test,	  3, 255, 255, 0x28, 0x00, 0x00, 0x00}, // test d 40  
	{0x2e93, &op_test,	  3, 255, 255, 0x29, 0x00, 0x00, 0x00}, // test d 41  
	{0x2ea3, &op_test,	  3, 255, 255, 0x2a, 0x00, 0x00, 0x00}, // test d 42  
	{0x2eb3, &op_test,	  3, 255, 255, 0x2b, 0x00, 0x00, 0x00}, // test d 43  
	{0x2ec3, &op_test,	  3, 255, 255, 0x2c, 0x00, 0x00, 0x00}, // test d 44  
	{0x2ed3, &op_test,	  3, 255, 255, 0x2d, 0x00, 0x00, 0x00}, // test d 45  
	{0x2ee3, &op_test,	  3, 255, 255, 0x2e, 0x00, 0x00, 0x00}, // test d 46  
	{0x2ef3, &op_test,	  3, 255, 255, 0x2f, 0x00, 0x00, 0x00}, // test d 47  
	{0x2f03, &op_test,	  3, 255, 255, 0x30, 0x00, 0x00, 0x00}, // test d 48  
	{0x2f13, &op_test,	  3, 255, 255, 0x31, 0x00, 0x00, 0x00}, // test d 49  
	{0x2f23, &op_test,	  3, 255, 255, 0x32, 0x00, 0x00, 0x00}, // test d 50  
	{0x2f33, &op_test,	  3, 255, 255, 0x33, 0x00, 0x00, 0x00}, // test d 51  
	{0x2f43, &op_test,	  3, 255, 255, 0x34, 0x00, 0x00, 0x00}, // test d 52  
	{0x2f53, &op_test,	  3, 255, 255, 0x35, 0x00, 0x00, 0x00}, // test d 53  
	{0x2f63, &op_test,	  3, 255, 255, 0x36, 0x00, 0x00, 0x00}, // test d 54  
	{0x2f73, &op_test,	  3, 255, 255, 0x37, 0x00, 0x00, 0x00}, // test d 55  
	{0x2f83, &op_test,	  3, 255, 255, 0x38, 0x00, 0x00, 0x00}, // test d 56  
	{0x2f93, &op_test,	  3, 255, 255, 0x39, 0x00, 0x00, 0x00}, // test d 57  
	{0x2fa3, &op_test,	  3, 255, 255, 0x3a, 0x00, 0x00, 0x00}, // test d 58  
	{0x2fb3, &op_test,	  3, 255, 255, 0x3b, 0x00, 0x00, 0x00}, // test d 59  
	{0x2fc3, &op_test,	  3, 255, 255, 0x3c, 0x00, 0x00, 0x00}, // test d 60  
	{0x2fd3, &op_test,	  3, 255, 255, 0x3d, 0x00, 0x00, 0x00}, // test d 61  
	{0x2fe3, &op_test,	  3, 255, 255, 0x3e, 0x00, 0x00, 0x00}, // test d 62  
	{0x2ff3, &op_test,	  3, 255, 255, 0x3f, 0x00, 0x00, 0x00}, // test d 63  
	{0x2c04, &op_test,	  4, 255, 255, 0x00, 0x00, 0x00, 0x00}, // test e 0  
	{0x2c14, &op_test,	  4, 255, 255, 0x01, 0x00, 0x00, 0x00}, // test e 1  
	{0x2c24, &op_test,	  4, 255, 255, 0x02, 0x00, 0x00, 0x00}, // test e 2  
	{0x2c34, &op_test,	  4, 255, 255, 0x03, 0x00, 0x00, 0x00}, // test e 3  
	{0x2c44, &op_test,	  4, 255, 255, 0x04, 0x00, 0x00, 0x00}, // test e 4  
	{0x2c54, &op_test,	  4, 255, 255, 0x05, 0x00, 0x00, 0x00}, // test e 5  
	{0x2c64, &op_test,	  4, 255, 255, 0x06, 0x00, 0x00, 0x00}, // test e 6  
	{0x2c74, &op_test,	  4, 255, 255, 0x07, 0x00, 0x00, 0x00}, // test e 7  
	{0x2c84, &op_test,	  4, 255, 255, 0x08, 0x00, 0x00, 0x00}, // test e 8  
	{0x2c94, &op_test,	  4, 255, 255, 0x09, 0x00, 0x00, 0x00}, // test e 9  
	{0x2ca4, &op_test,	  4, 255, 255, 0x0a, 0x00, 0x00, 0x00}, // test e 10  
	{0x2cb4, &op_test,	  4, 255, 255, 0x0b, 0x00, 0x00, 0x00}, // test e 11  
	{0x2cc4, &op_test,	  4, 255, 255, 0x0c, 0x00, 0x00, 0x00}, // test e 12  
	{0x2cd4, &op_test,	  4, 255, 255, 0x0d, 0x00, 0x00, 0x00}, // test e 13  
	{0x2ce4, &op_test,	  4, 255, 255, 0x0e, 0x00, 0x00, 0x00}, // test e 14  
	{0x2cf4, &op_test,	  4, 255, 255, 0x0f, 0x00, 0x00, 0x00}, // test e 15  
	{0x2d04, &op_test,	  4, 255, 255, 0x10, 0x00, 0x00, 0x00}, // test e 16  
	{0x2d14, &op_test,	  4, 255, 255, 0x11, 0x00, 0x00, 0x00}, // test e 17  
	{0x2d24, &op_test,	  4, 255, 255, 0x12, 0x00, 0x00, 0x00}, // test e 18  
	{0x2d34, &op_test,	  4, 255, 255, 0x13, 0x00, 0x00, 0x00}, // test e 19  
	{0x2d44, &op_test,	  4, 255, 255, 0x14, 0x00, 0x00, 0x00}, // test e 20  
	{0x2d54, &op_test,	  4, 255, 255, 0x15, 0x00, 0x00, 0x00}, // test e 21  
	{0x2d64, &op_test,	  4, 255, 255, 0x16, 0x00, 0x00, 0x00}, // test e 22  
	{0x2d74, &op_test,	  4, 255, 255, 0x17, 0x00, 0x00, 0x00}, // test e 23  
	{0x2d84, &op_test,	  4, 255, 255, 0x18, 0x00, 0x00, 0x00}, // test e 24  
	{0x2d94, &op_test,	  4, 255, 255, 0x19, 0x00, 0x00, 0x00}, // test e 25  
	{0x2da4, &op_test,	  4, 255, 255, 0x1a, 0x00, 0x00, 0x00}, // test e 26  
	{0x2db4, &op_test,	  4, 255, 255, 0x1b, 0x00, 0x00, 0x00}, // test e 27  
	{0x2dc4, &op_test,	  4, 255, 255, 0x1c, 0x00, 0x00, 0x00}, // test e 28  
	{0x2dd4, &op_test,	  4, 255, 255, 0x1d, 0x00, 0x00, 0x00}, // test e 29  
	{0x2de4, &op_test,	  4, 255, 255, 0x1e, 0x00, 0x00, 0x00}, // test e 30  
	{0x2df4, &op_test,	  4, 255, 255, 0x1f, 0x00, 0x00, 0x00}, // test e 31  
	{0x2e04, &op_test,	  4, 255, 255, 0x20, 0x00, 0x00, 0x00}, // test e 32  
	{0x2e14, &op_test,	  4, 255, 255, 0x21, 0x00, 0x00, 0x00}, // test e 33  
	{0x2e24, &op_test,	  4, 255, 255, 0x22, 0x00, 0x00, 0x00}, // test e 34  
	{0x2e34, &op_test,	  4, 255, 255, 0x23, 0x00, 0x00, 0x00}, // test e 35  
	{0x2e44, &op_test,	  4, 255, 255, 0x24, 0x00, 0x00, 0x00}, // test e 36  
	{0x2e54, &op_test,	  4, 255, 255, 0x25, 0x00, 0x00, 0x00}, // test e 37  
	{0x2e64, &op_test,	  4, 255, 255, 0x26, 0x00, 0x00, 0x00}, // test e 38  
	{0x2e74, &op_test,	  4, 255, 255, 0x27, 0x00, 0x00, 0x00}, // test e 39  
	{0x2e84, &op_test,	  4, 255, 255, 0x28, 0x00, 0x00, 0x00}, // test e 40  
	{0x2e94, &op_test,	  4, 255, 255, 0x29, 0x00, 0x00, 0x00}, // test e 41  
	{0x2ea4, &op_test,	  4, 255, 255, 0x2a, 0x00, 0x00, 0x00}, // test e 42  
	{0x2eb4, &op_test,	  4, 255, 255, 0x2b, 0x00, 0x00, 0x00}, // test e 43  
	{0x2ec4, &op_test,	  4, 255, 255, 0x2c, 0x00, 0x00, 0x00}, // test e 44  
	{0x2ed4, &op_test,	  4, 255, 255, 0x2d, 0x00, 0x00, 0x00}, // test e 45  
	{0x2ee4, &op_test,	  4, 255, 255, 0x2e, 0x00, 0x00, 0x00}, // test e 46  
	{0x2ef4, &op_test,	  4, 255, 255, 0x2f, 0x00, 0x00, 0x00}, // test e 47  
	{0x2f04, &op_test,	  4, 255, 255, 0x30, 0x00, 0x00, 0x00}, // test e 48  
	{0x2f14, &op_test,	  4, 255, 255, 0x31, 0x00, 0x00, 0x00}, // test e 49  
	{0x2f24, &op_test,	  4, 255, 255, 0x32, 0x00, 0x00, 0x00}, // test e 50  
	{0x2f34, &op_test,	  4, 255, 255, 0x33, 0x00, 0x00, 0x00}, // test e 51  
	{0x2f44, &op_test,	  4, 255, 255, 0x34, 0x00, 0x00, 0x00}, // test e 52  
	{0x2f54, &op_test,	  4, 255, 255, 0x35, 0x00, 0x00, 0x00}, // test e 53  
	{0x2f64, &op_test,	  4, 255, 255, 0x36, 0x00, 0x00, 0x00}, // test e 54  
	{0x2f74, &op_test,	  4, 255, 255, 0x37, 0x00, 0x00, 0x00}, // test e 55  
	{0x2f84, &op_test,	  4, 255, 255, 0x38, 0x00, 0x00, 0x00}, // test e 56  
	{0x2f94, &op_test,	  4, 255, 255, 0x39, 0x00, 0x00, 0x00}, // test e 57  
	{0x2fa4, &op_test,	  4, 255, 255, 0x3a, 0x00, 0x00, 0x00}, // test e 58  
	{0x2fb4, &op_test,	  4, 255, 255, 0x3b, 0x00, 0x00, 0x00}, // test e 59  
	{0x2fc4, &op_test,	  4, 255, 255, 0x3c, 0x00, 0x00, 0x00}, // test e 60  
	{0x2fd4, &op_test,	  4, 255, 255, 0x3d, 0x00, 0x00, 0x00}, // test e 61  
	{0x2fe4, &op_test,	  4, 255, 255, 0x3e, 0x00, 0x00, 0x00}, // test e 62  
	{0x2ff4, &op_test,	  4, 255, 255, 0x3f, 0x00, 0x00, 0x00}, // test e 63  
	{0x2c05, &op_test,	  5, 255, 255, 0x00, 0x00, 0x00, 0x00}, // test f 0  
	{0x2c15, &op_test,	  5, 255, 255, 0x01, 0x00, 0x00, 0x00}, // test f 1  
	{0x2c25, &op_test,	  5, 255, 255, 0x02, 0x00, 0x00, 0x00}, // test f 2  
	{0x2c35, &op_test,	  5, 255, 255, 0x03, 0x00, 0x00, 0x00}, // test f 3  
	{0x2c45, &op_test,	  5, 255, 255, 0x04, 0x00, 0x00, 0x00}, // test f 4  
	{0x2c55, &op_test,	  5, 255, 255, 0x05, 0x00, 0x00, 0x00}, // test f 5  
	{0x2c65, &op_test,	  5, 255, 255, 0x06, 0x00, 0x00, 0x00}, // test f 6  
	{0x2c75, &op_test,	  5, 255, 255, 0x07, 0x00, 0x00, 0x00}, // test f 7  
	{0x2c85, &op_test,	  5, 255, 255, 0x08, 0x00, 0x00, 0x00}, // test f 8  
	{0x2c95, &op_test,	  5, 255, 255, 0x09, 0x00, 0x00, 0x00}, // test f 9  
	{0x2ca5, &op_test,	  5, 255, 255, 0x0a, 0x00, 0x00, 0x00}, // test f 10  
	{0x2cb5, &op_test,	  5, 255, 255, 0x0b, 0x00, 0x00, 0x00}, // test f 11  
	{0x2cc5, &op_test,	  5, 255, 255, 0x0c, 0x00, 0x00, 0x00}, // test f 12  
	{0x2cd5, &op_test,	  5, 255, 255, 0x0d, 0x00, 0x00, 0x00}, // test f 13  
	{0x2ce5, &op_test,	  5, 255, 255, 0x0e, 0x00, 0x00, 0x00}, // test f 14  
	{0x2cf5, &op_test,	  5, 255, 255, 0x0f, 0x00, 0x00, 0x00}, // test f 15  
	{0x2d05, &op_test,	  5, 255, 255, 0x10, 0x00, 0x00, 0x00}, // test f 16  
	{0x2d15, &op_test,	  5, 255, 255, 0x11, 0x00, 0x00, 0x00}, // test f 17  
	{0x2d25, &op_test,	  5, 255, 255, 0x12, 0x00, 0x00, 0x00}, // test f 18  
	{0x2d35, &op_test,	  5, 255, 255, 0x13, 0x00, 0x00, 0x00}, // test f 19  
	{0x2d45, &op_test,	  5, 255, 255, 0x14, 0x00, 0x00, 0x00}, // test f 20  
	{0x2d55, &op_test,	  5, 255, 255, 0x15, 0x00, 0x00, 0x00}, // test f 21  
	{0x2d65, &op_test,	  5, 255, 255, 0x16, 0x00, 0x00, 0x00}, // test f 22  
	{0x2d75, &op_test,	  5, 255, 255, 0x17, 0x00, 0x00, 0x00}, // test f 23  
	{0x2d85, &op_test,	  5, 255, 255, 0x18, 0x00, 0x00, 0x00}, // test f 24  
	{0x2d95, &op_test,	  5, 255, 255, 0x19, 0x00, 0x00, 0x00}, // test f 25  
	{0x2da5, &op_test,	  5, 255, 255, 0x1a, 0x00, 0x00, 0x00}, // test f 26  
	{0x2db5, &op_test,	  5, 255, 255, 0x1b, 0x00, 0x00, 0x00}, // test f 27  
	{0x2dc5, &op_test,	  5, 255, 255, 0x1c, 0x00, 0x00, 0x00}, // test f 28  
	{0x2dd5, &op_test,	  5, 255, 255, 0x1d, 0x00, 0x00, 0x00}, // test f 29  
	{0x2de5, &op_test,	  5, 255, 255, 0x1e, 0x00, 0x00, 0x00}, // test f 30  
	{0x2df5, &op_test,	  5, 255, 255, 0x1f, 0x00, 0x00, 0x00}, // test f 31  
	{0x2e05, &op_test,	  5, 255, 255, 0x20, 0x00, 0x00, 0x00}, // test f 32  
	{0x2e15, &op_test,	  5, 255, 255, 0x21, 0x00, 0x00, 0x00}, // test f 33  
	{0x2e25, &op_test,	  5, 255, 255, 0x22, 0x00, 0x00, 0x00}, // test f 34  
	{0x2e35, &op_test,	  5, 255, 255, 0x23, 0x00, 0x00, 0x00}, // test f 35  
	{0x2e45, &op_test,	  5, 255, 255, 0x24, 0x00, 0x00, 0x00}, // test f 36  
	{0x2e55, &op_test,	  5, 255, 255, 0x25, 0x00, 0x00, 0x00}, // test f 37  
	{0x2e65, &op_test,	  5, 255, 255, 0x26, 0x00, 0x00, 0x00}, // test f 38  
	{0x2e75, &op_test,	  5, 255, 255, 0x27, 0x00, 0x00, 0x00}, // test f 39  
	{0x2e85, &op_test,	  5, 255, 255, 0x28, 0x00, 0x00, 0x00}, // test f 40  
	{0x2e95, &op_test,	  5, 255, 255, 0x29, 0x00, 0x00, 0x00}, // test f 41  
	{0x2ea5, &op_test,	  5, 255, 255, 0x2a, 0x00, 0x00, 0x00}, // test f 42  
	{0x2eb5, &op_test,	  5, 255, 255, 0x2b, 0x00, 0x00, 0x00}, // test f 43  
	{0x2ec5, &op_test,	  5, 255, 255, 0x2c, 0x00, 0x00, 0x00}, // test f 44  
	{0x2ed5, &op_test,	  5, 255, 255, 0x2d, 0x00, 0x00, 0x00}, // test f 45  
	{0x2ee5, &op_test,	  5, 255, 255, 0x2e, 0x00, 0x00, 0x00}, // test f 46  
	{0x2ef5, &op_test,	  5, 255, 255, 0x2f, 0x00, 0x00, 0x00}, // test f 47  
	{0x2f05, &op_test,	  5, 255, 255, 0x30, 0x00, 0x00, 0x00}, // test f 48  
	{0x2f15, &op_test,	  5, 255, 255, 0x31, 0x00, 0x00, 0x00}, // test f 49  
	{0x2f25, &op_test,	  5, 255, 255, 0x32, 0x00, 0x00, 0x00}, // test f 50  
	{0x2f35, &op_test,	  5, 255, 255, 0x33, 0x00, 0x00, 0x00}, // test f 51  
	{0x2f45, &op_test,	  5, 255, 255, 0x34, 0x00, 0x00, 0x00}, // test f 52  
	{0x2f55, &op_test,	  5, 255, 255, 0x35, 0x00, 0x00, 0x00}, // test f 53  
	{0x2f65, &op_test,	  5, 255, 255, 0x36, 0x00, 0x00, 0x00}, // test f 54  
	{0x2f75, &op_test,	  5, 255, 255, 0x37, 0x00, 0x00, 0x00}, // test f 55  
	{0x2f85, &op_test,	  5, 255, 255, 0x38, 0x00, 0x00, 0x00}, // test f 56  
	{0x2f95, &op_test,	  5, 255, 255, 0x39, 0x00, 0x00, 0x00}, // test f 57  
	{0x2fa5, &op_test,	  5, 255, 255, 0x3a, 0x00, 0x00, 0x00}, // test f 58  
	{0x2fb5, &op_test,	  5, 255, 255, 0x3b, 0x00, 0x00, 0x00}, // test f 59  
	{0x2fc5, &op_test,	  5, 255, 255, 0x3c, 0x00, 0x00, 0x00}, // test f 60  
	{0x2fd5, &op_test,	  5, 255, 255, 0x3d, 0x00, 0x00, 0x00}, // test f 61  
	{0x2fe5, &op_test,	  5, 255, 255, 0x3e, 0x00, 0x00, 0x00}, // test f 62  
	{0x2ff5, &op_test,	  5, 255, 255, 0x3f, 0x00, 0x00, 0x00}, // test f 63  
	{0x2c06, &op_test,	  6, 255, 255, 0x00, 0x00, 0x00, 0x00}, // test g 0  
	{0x2c16, &op_test,	  6, 255, 255, 0x01, 0x00, 0x00, 0x00}, // test g 1  
	{0x2c26, &op_test,	  6, 255, 255, 0x02, 0x00, 0x00, 0x00}, // test g 2  
	{0x2c36, &op_test,	  6, 255, 255, 0x03, 0x00, 0x00, 0x00}, // test g 3  
	{0x2c46, &op_test,	  6, 255, 255, 0x04, 0x00, 0x00, 0x00}, // test g 4  
	{0x2c56, &op_test,	  6, 255, 255, 0x05, 0x00, 0x00, 0x00}, // test g 5  
	{0x2c66, &op_test,	  6, 255, 255, 0x06, 0x00, 0x00, 0x00}, // test g 6  
	{0x2c76, &op_test,	  6, 255, 255, 0x07, 0x00, 0x00, 0x00}, // test g 7  
	{0x2c86, &op_test,	  6, 255, 255, 0x08, 0x00, 0x00, 0x00}, // test g 8  
	{0x2c96, &op_test,	  6, 255, 255, 0x09, 0x00, 0x00, 0x00}, // test g 9  
	{0x2ca6, &op_test,	  6, 255, 255, 0x0a, 0x00, 0x00, 0x00}, // test g 10  
	{0x2cb6, &op_test,	  6, 255, 255, 0x0b, 0x00, 0x00, 0x00}, // test g 11  
	{0x2cc6, &op_test,	  6, 255, 255, 0x0c, 0x00, 0x00, 0x00}, // test g 12  
	{0x2cd6, &op_test,	  6, 255, 255, 0x0d, 0x00, 0x00, 0x00}, // test g 13  
	{0x2ce6, &op_test,	  6, 255, 255, 0x0e, 0x00, 0x00, 0x00}, // test g 14  
	{0x2cf6, &op_test,	  6, 255, 255, 0x0f, 0x00, 0x00, 0x00}, // test g 15  
	{0x2d06, &op_test,	  6, 255, 255, 0x10, 0x00, 0x00, 0x00}, // test g 16  
	{0x2d16, &op_test,	  6, 255, 255, 0x11, 0x00, 0x00, 0x00}, // test g 17  
	{0x2d26, &op_test,	  6, 255, 255, 0x12, 0x00, 0x00, 0x00}, // test g 18  
	{0x2d36, &op_test,	  6, 255, 255, 0x13, 0x00, 0x00, 0x00}, // test g 19  
	{0x2d46, &op_test,	  6, 255, 255, 0x14, 0x00, 0x00, 0x00}, // test g 20  
	{0x2d56, &op_test,	  6, 255, 255, 0x15, 0x00, 0x00, 0x00}, // test g 21  
	{0x2d66, &op_test,	  6, 255, 255, 0x16, 0x00, 0x00, 0x00}, // test g 22  
	{0x2d76, &op_test,	  6, 255, 255, 0x17, 0x00, 0x00, 0x00}, // test g 23  
	{0x2d86, &op_test,	  6, 255, 255, 0x18, 0x00, 0x00, 0x00}, // test g 24  
	{0x2d96, &op_test,	  6, 255, 255, 0x19, 0x00, 0x00, 0x00}, // test g 25  
	{0x2da6, &op_test,	  6, 255, 255, 0x1a, 0x00, 0x00, 0x00}, // test g 26  
	{0x2db6, &op_test,	  6, 255, 255, 0x1b, 0x00, 0x00, 0x00}, // test g 27  
	{0x2dc6, &op_test,	  6, 255, 255, 0x1c, 0x00, 0x00, 0x00}, // test g 28  
	{0x2dd6, &op_test,	  6, 255, 255, 0x1d, 0x00, 0x00, 0x00}, // test g 29  
	{0x2de6, &op_test,	  6, 255, 255, 0x1e, 0x00, 0x00, 0x00}, // test g 30  
	{0x2df6, &op_test,	  6, 255, 255, 0x1f, 0x00, 0x00, 0x00}, // test g 31  
	{0x2e06, &op_test,	  6, 255, 255, 0x20, 0x00, 0x00, 0x00}, // test g 32  
	{0x2e16, &op_test,	  6, 255, 255, 0x21, 0x00, 0x00, 0x00}, // test g 33  
	{0x2e26, &op_test,	  6, 255, 255, 0x22, 0x00, 0x00, 0x00}, // test g 34  
	{0x2e36, &op_test,	  6, 255, 255, 0x23, 0x00, 0x00, 0x00}, // test g 35  
	{0x2e46, &op_test,	  6, 255, 255, 0x24, 0x00, 0x00, 0x00}, // test g 36  
	{0x2e56, &op_test,	  6, 255, 255, 0x25, 0x00, 0x00, 0x00}, // test g 37  
	{0x2e66, &op_test,	  6, 255, 255, 0x26, 0x00, 0x00, 0x00}, // test g 38  
	{0x2e76, &op_test,	  6, 255, 255, 0x27, 0x00, 0x00, 0x00}, // test g 39  
	{0x2e86, &op_test,	  6, 255, 255, 0x28, 0x00, 0x00, 0x00}, // test g 40  
	{0x2e96, &op_test,	  6, 255, 255, 0x29, 0x00, 0x00, 0x00}, // test g 41  
	{0x2ea6, &op_test,	  6, 255, 255, 0x2a, 0x00, 0x00, 0x00}, // test g 42  
	{0x2eb6, &op_test,	  6, 255, 255, 0x2b, 0x00, 0x00, 0x00}, // test g 43  
	{0x2ec6, &op_test,	  6, 255, 255, 0x2c, 0x00, 0x00, 0x00}, // test g 44  
	{0x2ed6, &op_test,	  6, 255, 255, 0x2d, 0x00, 0x00, 0x00}, // test g 45  
	{0x2ee6, &op_test,	  6, 255, 255, 0x2e, 0x00, 0x00, 0x00}, // test g 46  
	{0x2ef6, &op_test,	  6, 255, 255, 0x2f, 0x00, 0x00, 0x00}, // test g 47  
	{0x2f06, &op_test,	  6, 255, 255, 0x30, 0x00, 0x00, 0x00}, // test g 48  
	{0x2f16, &op_test,	  6, 255, 255, 0x31, 0x00, 0x00, 0x00}, // test g 49  
	{0x2f26, &op_test,	  6, 255, 255, 0x32, 0x00, 0x00, 0x00}, // test g 50  
	{0x2f36, &op_test,	  6, 255, 255, 0x33, 0x00, 0x00, 0x00}, // test g 51  
	{0x2f46, &op_test,	  6, 255, 255, 0x34, 0x00, 0x00, 0x00}, // test g 52  
	{0x2f56, &op_test,	  6, 255, 255, 0x35, 0x00, 0x00, 0x00}, // test g 53  
	{0x2f66, &op_test,	  6, 255, 255, 0x36, 0x00, 0x00, 0x00}, // test g 54  
	{0x2f76, &op_test,	  6, 255, 255, 0x37, 0x00, 0x00, 0x00}, // test g 55  
	{0x2f86, &op_test,	  6, 255, 255, 0x38, 0x00, 0x00, 0x00}, // test g 56  
	{0x2f96, &op_test,	  6, 255, 255, 0x39, 0x00, 0x00, 0x00}, // test g 57  
	{0x2fa6, &op_test,	  6, 255, 255, 0x3a, 0x00, 0x00, 0x00}, // test g 58  
	{0x2fb6, &op_test,	  6, 255, 255, 0x3b, 0x00, 0x00, 0x00}, // test g 59  
	{0x2fc6, &op_test,	  6, 255, 255, 0x3c, 0x00, 0x00, 0x00}, // test g 60  
	{0x2fd6, &op_test,	  6, 255, 255, 0x3d, 0x00, 0x00, 0x00}, // test g 61  
	{0x2fe6, &op_test,	  6, 255, 255, 0x3e, 0x00, 0x00, 0x00}, // test g 62  
	{0x2ff6, &op_test,	  6, 255, 255, 0x3f, 0x00, 0x00, 0x00}, // test g 63  
	{0x2c07, &op_test,	  7, 255, 255, 0x00, 0x00, 0x00, 0x00}, // test h 0  
	{0x2c17, &op_test,	  7, 255, 255, 0x01, 0x00, 0x00, 0x00}, // test h 1  
	{0x2c27, &op_test,	  7, 255, 255, 0x02, 0x00, 0x00, 0x00}, // test h 2  
	{0x2c37, &op_test,	  7, 255, 255, 0x03, 0x00, 0x00, 0x00}, // test h 3  
	{0x2c47, &op_test,	  7, 255, 255, 0x04, 0x00, 0x00, 0x00}, // test h 4  
	{0x2c57, &op_test,	  7, 255, 255, 0x05, 0x00, 0x00, 0x00}, // test h 5  
	{0x2c67, &op_test,	  7, 255, 255, 0x06, 0x00, 0x00, 0x00}, // test h 6  
	{0x2c77, &op_test,	  7, 255, 255, 0x07, 0x00, 0x00, 0x00}, // test h 7  
	{0x2c87, &op_test,	  7, 255, 255, 0x08, 0x00, 0x00, 0x00}, // test h 8  
	{0x2c97, &op_test,	  7, 255, 255, 0x09, 0x00, 0x00, 0x00}, // test h 9  
	{0x2ca7, &op_test,	  7, 255, 255, 0x0a, 0x00, 0x00, 0x00}, // test h 10  
	{0x2cb7, &op_test,	  7, 255, 255, 0x0b, 0x00, 0x00, 0x00}, // test h 11  
	{0x2cc7, &op_test,	  7, 255, 255, 0x0c, 0x00, 0x00, 0x00}, // test h 12  
	{0x2cd7, &op_test,	  7, 255, 255, 0x0d, 0x00, 0x00, 0x00}, // test h 13  
	{0x2ce7, &op_test,	  7, 255, 255, 0x0e, 0x00, 0x00, 0x00}, // test h 14  
	{0x2cf7, &op_test,	  7, 255, 255, 0x0f, 0x00, 0x00, 0x00}, // test h 15  
	{0x2d07, &op_test,	  7, 255, 255, 0x10, 0x00, 0x00, 0x00}, // test h 16  
	{0x2d17, &op_test,	  7, 255, 255, 0x11, 0x00, 0x00, 0x00}, // test h 17  
	{0x2d27, &op_test,	  7, 255, 255, 0x12, 0x00, 0x00, 0x00}, // test h 18  
	{0x2d37, &op_test,	  7, 255, 255, 0x13, 0x00, 0x00, 0x00}, // test h 19  
	{0x2d47, &op_test,	  7, 255, 255, 0x14, 0x00, 0x00, 0x00}, // test h 20  
	{0x2d57, &op_test,	  7, 255, 255, 0x15, 0x00, 0x00, 0x00}, // test h 21  
	{0x2d67, &op_test,	  7, 255, 255, 0x16, 0x00, 0x00, 0x00}, // test h 22  
	{0x2d77, &op_test,	  7, 255, 255, 0x17, 0x00, 0x00, 0x00}, // test h 23  
	{0x2d87, &op_test,	  7, 255, 255, 0x18, 0x00, 0x00, 0x00}, // test h 24  
	{0x2d97, &op_test,	  7, 255, 255, 0x19, 0x00, 0x00, 0x00}, // test h 25  
	{0x2da7, &op_test,	  7, 255, 255, 0x1a, 0x00, 0x00, 0x00}, // test h 26  
	{0x2db7, &op_test,	  7, 255, 255, 0x1b, 0x00, 0x00, 0x00}, // test h 27  
	{0x2dc7, &op_test,	  7, 255, 255, 0x1c, 0x00, 0x00, 0x00}, // test h 28  
	{0x2dd7, &op_test,	  7, 255, 255, 0x1d, 0x00, 0x00, 0x00}, // test h 29  
	{0x2de7, &op_test,	  7, 255, 255, 0x1e, 0x00, 0x00, 0x00}, // test h 30  
	{0x2df7, &op_test,	  7, 255, 255, 0x1f, 0x00, 0x00, 0x00}, // test h 31  
	{0x2e07, &op_test,	  7, 255, 255, 0x20, 0x00, 0x00, 0x00}, // test h 32  
	{0x2e17, &op_test,	  7, 255, 255, 0x21, 0x00, 0x00, 0x00}, // test h 33  
	{0x2e27, &op_test,	  7, 255, 255, 0x22, 0x00, 0x00, 0x00}, // test h 34  
	{0x2e37, &op_test,	  7, 255, 255, 0x23, 0x00, 0x00, 0x00}, // test h 35  
	{0x2e47, &op_test,	  7, 255, 255, 0x24, 0x00, 0x00, 0x00}, // test h 36  
	{0x2e57, &op_test,	  7, 255, 255, 0x25, 0x00, 0x00, 0x00}, // test h 37  
	{0x2e67, &op_test,	  7, 255, 255, 0x26, 0x00, 0x00, 0x00}, // test h 38  
	{0x2e77, &op_test,	  7, 255, 255, 0x27, 0x00, 0x00, 0x00}, // test h 39  
	{0x2e87, &op_test,	  7, 255, 255, 0x28, 0x00, 0x00, 0x00}, // test h 40  
	{0x2e97, &op_test,	  7, 255, 255, 0x29, 0x00, 0x00, 0x00}, // test h 41  
	{0x2ea7, &op_test,	  7, 255, 255, 0x2a, 0x00, 0x00, 0x00}, // test h 42  
	{0x2eb7, &op_test,	  7, 255, 255, 0x2b, 0x00, 0x00, 0x00}, // test h 43  
	{0x2ec7, &op_test,	  7, 255, 255, 0x2c, 0x00, 0x00, 0x00}, // test h 44  
	{0x2ed7, &op_test,	  7, 255, 255, 0x2d, 0x00, 0x00, 0x00}, // test h 45  
	{0x2ee7, &op_test,	  7, 255, 255, 0x2e, 0x00, 0x00, 0x00}, // test h 46  
	{0x2ef7, &op_test,	  7, 255, 255, 0x2f, 0x00, 0x00, 0x00}, // test h 47  
	{0x2f07, &op_test,	  7, 255, 255, 0x30, 0x00, 0x00, 0x00}, // test h 48  
	{0x2f17, &op_test,	  7, 255, 255, 0x31, 0x00, 0x00, 0x00}, // test h 49  
	{0x2f27, &op_test,	  7, 255, 255, 0x32, 0x00, 0x00, 0x00}, // test h 50  
	{0x2f37, &op_test,	  7, 255, 255, 0x33, 0x00, 0x00, 0x00}, // test h 51  
	{0x2f47, &op_test,	  7, 255, 255, 0x34, 0x00, 0x00, 0x00}, // test h 52  
	{0x2f57, &op_test,	  7, 255, 255, 0x35, 0x00, 0x00, 0x00}, // test h 53  
	{0x2f67, &op_test,	  7, 255, 255, 0x36, 0x00, 0x00, 0x00}, // test h 54  
	{0x2f77, &op_test,	  7, 255, 255, 0x37, 0x00, 0x00, 0x00}, // test h 55  
	{0x2f87, &op_test,	  7, 255, 255, 0x38, 0x00, 0x00, 0x00}, // test h 56  
	{0x2f97, &op_test,	  7, 255, 255, 0x39, 0x00, 0x00, 0x00}, // test h 57  
	{0x2fa7, &op_test,	  7, 255, 255, 0x3a, 0x00, 0x00, 0x00}, // test h 58  
	{0x2fb7, &op_test,	  7, 255, 255, 0x3b, 0x00, 0x00, 0x00}, // test h 59  
	{0x2fc7, &op_test,	  7, 255, 255, 0x3c, 0x00, 0x00, 0x00}, // test h 60  
	{0x2fd7, &op_test,	  7, 255, 255, 0x3d, 0x00, 0x00, 0x00}, // test h 61  
	{0x2fe7, &op_test,	  7, 255, 255, 0x3e, 0x00, 0x00, 0x00}, // test h 62  
	{0x2ff7, &op_test,	  7, 255, 255, 0x3f, 0x00, 0x00, 0x00}, // test h 63  
	{0x2c08, &op_test,	  8, 255, 255, 0x00, 0x00, 0x00, 0x00}, // test pc 0  
	{0x2c18, &op_test,	  8, 255, 255, 0x01, 0x00, 0x00, 0x00}, // test pc 1  
	{0x2c28, &op_test,	  8, 255, 255, 0x02, 0x00, 0x00, 0x00}, // test pc 2  
	{0x2c38, &op_test,	  8, 255, 255, 0x03, 0x00, 0x00, 0x00}, // test pc 3  
	{0x2c48, &op_test,	  8, 255, 255, 0x04, 0x00, 0x00, 0x00}, // test pc 4  
	{0x2c58, &op_test,	  8, 255, 255, 0x05, 0x00, 0x00, 0x00}, // test pc 5  
	{0x2c68, &op_test,	  8, 255, 255, 0x06, 0x00, 0x00, 0x00}, // test pc 6  
	{0x2c78, &op_test,	  8, 255, 255, 0x07, 0x00, 0x00, 0x00}, // test pc 7  
	{0x2c88, &op_test,	  8, 255, 255, 0x08, 0x00, 0x00, 0x00}, // test pc 8  
	{0x2c98, &op_test,	  8, 255, 255, 0x09, 0x00, 0x00, 0x00}, // test pc 9  
	{0x2ca8, &op_test,	  8, 255, 255, 0x0a, 0x00, 0x00, 0x00}, // test pc 10  
	{0x2cb8, &op_test,	  8, 255, 255, 0x0b, 0x00, 0x00, 0x00}, // test pc 11  
	{0x2cc8, &op_test,	  8, 255, 255, 0x0c, 0x00, 0x00, 0x00}, // test pc 12  
	{0x2cd8, &op_test,	  8, 255, 255, 0x0d, 0x00, 0x00, 0x00}, // test pc 13  
	{0x2ce8, &op_test,	  8, 255, 255, 0x0e, 0x00, 0x00, 0x00}, // test pc 14  
	{0x2cf8, &op_test,	  8, 255, 255, 0x0f, 0x00, 0x00, 0x00}, // test pc 15  
	{0x2d08, &op_test,	  8, 255, 255, 0x10, 0x00, 0x00, 0x00}, // test pc 16  
	{0x2d18, &op_test,	  8, 255, 255, 0x11, 0x00, 0x00, 0x00}, // test pc 17  
	{0x2d28, &op_test,	  8, 255, 255, 0x12, 0x00, 0x00, 0x00}, // test pc 18  
	{0x2d38, &op_test,	  8, 255, 255, 0x13, 0x00, 0x00, 0x00}, // test pc 19  
	{0x2d48, &op_test,	  8, 255, 255, 0x14, 0x00, 0x00, 0x00}, // test pc 20  
	{0x2d58, &op_test,	  8, 255, 255, 0x15, 0x00, 0x00, 0x00}, // test pc 21  
	{0x2d68, &op_test,	  8, 255, 255, 0x16, 0x00, 0x00, 0x00}, // test pc 22  
	{0x2d78, &op_test,	  8, 255, 255, 0x17, 0x00, 0x00, 0x00}, // test pc 23  
	{0x2d88, &op_test,	  8, 255, 255, 0x18, 0x00, 0x00, 0x00}, // test pc 24  
	{0x2d98, &op_test,	  8, 255, 255, 0x19, 0x00, 0x00, 0x00}, // test pc 25  
	{0x2da8, &op_test,	  8, 255, 255, 0x1a, 0x00, 0x00, 0x00}, // test pc 26  
	{0x2db8, &op_test,	  8, 255, 255, 0x1b, 0x00, 0x00, 0x00}, // test pc 27  
	{0x2dc8, &op_test,	  8, 255, 255, 0x1c, 0x00, 0x00, 0x00}, // test pc 28  
	{0x2dd8, &op_test,	  8, 255, 255, 0x1d, 0x00, 0x00, 0x00}, // test pc 29  
	{0x2de8, &op_test,	  8, 255, 255, 0x1e, 0x00, 0x00, 0x00}, // test pc 30  
	{0x2df8, &op_test,	  8, 255, 255, 0x1f, 0x00, 0x00, 0x00}, // test pc 31  
	{0x2e08, &op_test,	  8, 255, 255, 0x20, 0x00, 0x00, 0x00}, // test pc 32  
	{0x2e18, &op_test,	  8, 255, 255, 0x21, 0x00, 0x00, 0x00}, // test pc 33  
	{0x2e28, &op_test,	  8, 255, 255, 0x22, 0x00, 0x00, 0x00}, // test pc 34  
	{0x2e38, &op_test,	  8, 255, 255, 0x23, 0x00, 0x00, 0x00}, // test pc 35  
	{0x2e48, &op_test,	  8, 255, 255, 0x24, 0x00, 0x00, 0x00}, // test pc 36  
	{0x2e58, &op_test,	  8, 255, 255, 0x25, 0x00, 0x00, 0x00}, // test pc 37  
	{0x2e68, &op_test,	  8, 255, 255, 0x26, 0x00, 0x00, 0x00}, // test pc 38  
	{0x2e78, &op_test,	  8, 255, 255, 0x27, 0x00, 0x00, 0x00}, // test pc 39  
	{0x2e88, &op_test,	  8, 255, 255, 0x28, 0x00, 0x00, 0x00}, // test pc 40  
	{0x2e98, &op_test,	  8, 255, 255, 0x29, 0x00, 0x00, 0x00}, // test pc 41  
	{0x2ea8, &op_test,	  8, 255, 255, 0x2a, 0x00, 0x00, 0x00}, // test pc 42  
	{0x2eb8, &op_test,	  8, 255, 255, 0x2b, 0x00, 0x00, 0x00}, // test pc 43  
	{0x2ec8, &op_test,	  8, 255, 255, 0x2c, 0x00, 0x00, 0x00}, // test pc 44  
	{0x2ed8, &op_test,	  8, 255, 255, 0x2d, 0x00, 0x00, 0x00}, // test pc 45  
	{0x2ee8, &op_test,	  8, 255, 255, 0x2e, 0x00, 0x00, 0x00}, // test pc 46  
	{0x2ef8, &op_test,	  8, 255, 255, 0x2f, 0x00, 0x00, 0x00}, // test pc 47  
	{0x2f08, &op_test,	  8, 255, 255, 0x30, 0x00, 0x00, 0x00}, // test pc 48  
	{0x2f18, &op_test,	  8, 255, 255, 0x31, 0x00, 0x00, 0x00}, // test pc 49  
	{0x2f28, &op_test,	  8, 255, 255, 0x32, 0x00, 0x00, 0x00}, // test pc 50  
	{0x2f38, &op_test,	  8, 255, 255, 0x33, 0x00, 0x00, 0x00}, // test pc 51  
	{0x2f48, &op_test,	  8, 255, 255, 0x34, 0x00, 0x00, 0x00}, // test pc 52  
	{0x2f58, &op_test,	  8, 255, 255, 0x35, 0x00, 0x00, 0x00}, // test pc 53  
	{0x2f68, &op_test,	  8, 255, 255, 0x36, 0x00, 0x00, 0x00}, // test pc 54  
	{0x2f78, &op_test,	  8, 255, 255, 0x37, 0x00, 0x00, 0x00}, // test pc 55  
	{0x2f88, &op_test,	  8, 255, 255, 0x38, 0x00, 0x00, 0x00}, // test pc 56  
	{0x2f98, &op_test,	  8, 255, 255, 0x39, 0x00, 0x00, 0x00}, // test pc 57  
	{0x2fa8, &op_test,	  8, 255, 255, 0x3a, 0x00, 0x00, 0x00}, // test pc 58  
	{0x2fb8, &op_test,	  8, 255, 255, 0x3b, 0x00, 0x00, 0x00}, // test pc 59  
	{0x2fc8, &op_test,	  8, 255, 255, 0x3c, 0x00, 0x00, 0x00}, // test pc 60  
	{0x2fd8, &op_test,	  8, 255, 255, 0x3d, 0x00, 0x00, 0x00}, // test pc 61  
	{0x2fe8, &op_test,	  8, 255, 255, 0x3e, 0x00, 0x00, 0x00}, // test pc 62  
	{0x2ff8, &op_test,	  8, 255, 255, 0x3f, 0x00, 0x00, 0x00}, // test pc 63  
	{0x2c09, &op_test,	  9, 255, 255, 0x00, 0x00, 0x00, 0x00}, // test ra 0  
	{0x2c19, &op_test,	  9, 255, 255, 0x01, 0x00, 0x00, 0x00}, // test ra 1  
	{0x2c29, &op_test,	  9, 255, 255, 0x02, 0x00, 0x00, 0x00}, // test ra 2  
	{0x2c39, &op_test,	  9, 255, 255, 0x03, 0x00, 0x00, 0x00}, // test ra 3  
	{0x2c49, &op_test,	  9, 255, 255, 0x04, 0x00, 0x00, 0x00}, // test ra 4  
	{0x2c59, &op_test,	  9, 255, 255, 0x05, 0x00, 0x00, 0x00}, // test ra 5  
	{0x2c69, &op_test,	  9, 255, 255, 0x06, 0x00, 0x00, 0x00}, // test ra 6  
	{0x2c79, &op_test,	  9, 255, 255, 0x07, 0x00, 0x00, 0x00}, // test ra 7  
	{0x2c89, &op_test,	  9, 255, 255, 0x08, 0x00, 0x00, 0x00}, // test ra 8  
	{0x2c99, &op_test,	  9, 255, 255, 0x09, 0x00, 0x00, 0x00}, // test ra 9  
	{0x2ca9, &op_test,	  9, 255, 255, 0x0a, 0x00, 0x00, 0x00}, // test ra 10  
	{0x2cb9, &op_test,	  9, 255, 255, 0x0b, 0x00, 0x00, 0x00}, // test ra 11  
	{0x2cc9, &op_test,	  9, 255, 255, 0x0c, 0x00, 0x00, 0x00}, // test ra 12  
	{0x2cd9, &op_test,	  9, 255, 255, 0x0d, 0x00, 0x00, 0x00}, // test ra 13  
	{0x2ce9, &op_test,	  9, 255, 255, 0x0e, 0x00, 0x00, 0x00}, // test ra 14  
	{0x2cf9, &op_test,	  9, 255, 255, 0x0f, 0x00, 0x00, 0x00}, // test ra 15  
	{0x2d09, &op_test,	  9, 255, 255, 0x10, 0x00, 0x00, 0x00}, // test ra 16  
	{0x2d19, &op_test,	  9, 255, 255, 0x11, 0x00, 0x00, 0x00}, // test ra 17  
	{0x2d29, &op_test,	  9, 255, 255, 0x12, 0x00, 0x00, 0x00}, // test ra 18  
	{0x2d39, &op_test,	  9, 255, 255, 0x13, 0x00, 0x00, 0x00}, // test ra 19  
	{0x2d49, &op_test,	  9, 255, 255, 0x14, 0x00, 0x00, 0x00}, // test ra 20  
	{0x2d59, &op_test,	  9, 255, 255, 0x15, 0x00, 0x00, 0x00}, // test ra 21  
	{0x2d69, &op_test,	  9, 255, 255, 0x16, 0x00, 0x00, 0x00}, // test ra 22  
	{0x2d79, &op_test,	  9, 255, 255, 0x17, 0x00, 0x00, 0x00}, // test ra 23  
	{0x2d89, &op_test,	  9, 255, 255, 0x18, 0x00, 0x00, 0x00}, // test ra 24  
	{0x2d99, &op_test,	  9, 255, 255, 0x19, 0x00, 0x00, 0x00}, // test ra 25  
	{0x2da9, &op_test,	  9, 255, 255, 0x1a, 0x00, 0x00, 0x00}, // test ra 26  
	{0x2db9, &op_test,	  9, 255, 255, 0x1b, 0x00, 0x00, 0x00}, // test ra 27  
	{0x2dc9, &op_test,	  9, 255, 255, 0x1c, 0x00, 0x00, 0x00}, // test ra 28  
	{0x2dd9, &op_test,	  9, 255, 255, 0x1d, 0x00, 0x00, 0x00}, // test ra 29  
	{0x2de9, &op_test,	  9, 255, 255, 0x1e, 0x00, 0x00, 0x00}, // test ra 30  
	{0x2df9, &op_test,	  9, 255, 255, 0x1f, 0x00, 0x00, 0x00}, // test ra 31  
	{0x2e09, &op_test,	  9, 255, 255, 0x20, 0x00, 0x00, 0x00}, // test ra 32  
	{0x2e19, &op_test,	  9, 255, 255, 0x21, 0x00, 0x00, 0x00}, // test ra 33  
	{0x2e29, &op_test,	  9, 255, 255, 0x22, 0x00, 0x00, 0x00}, // test ra 34  
	{0x2e39, &op_test,	  9, 255, 255, 0x23, 0x00, 0x00, 0x00}, // test ra 35  
	{0x2e49, &op_test,	  9, 255, 255, 0x24, 0x00, 0x00, 0x00}, // test ra 36  
	{0x2e59, &op_test,	  9, 255, 255, 0x25, 0x00, 0x00, 0x00}, // test ra 37  
	{0x2e69, &op_test,	  9, 255, 255, 0x26, 0x00, 0x00, 0x00}, // test ra 38  
	{0x2e79, &op_test,	  9, 255, 255, 0x27, 0x00, 0x00, 0x00}, // test ra 39  
	{0x2e89, &op_test,	  9, 255, 255, 0x28, 0x00, 0x00, 0x00}, // test ra 40  
	{0x2e99, &op_test,	  9, 255, 255, 0x29, 0x00, 0x00, 0x00}, // test ra 41  
	{0x2ea9, &op_test,	  9, 255, 255, 0x2a, 0x00, 0x00, 0x00}, // test ra 42  
	{0x2eb9, &op_test,	  9, 255, 255, 0x2b, 0x00, 0x00, 0x00}, // test ra 43  
	{0x2ec9, &op_test,	  9, 255, 255, 0x2c, 0x00, 0x00, 0x00}, // test ra 44  
	{0x2ed9, &op_test,	  9, 255, 255, 0x2d, 0x00, 0x00, 0x00}, // test ra 45  
	{0x2ee9, &op_test,	  9, 255, 255, 0x2e, 0x00, 0x00, 0x00}, // test ra 46  
	{0x2ef9, &op_test,	  9, 255, 255, 0x2f, 0x00, 0x00, 0x00}, // test ra 47  
	{0x2f09, &op_test,	  9, 255, 255, 0x30, 0x00, 0x00, 0x00}, // test ra 48  
	{0x2f19, &op_test,	  9, 255, 255, 0x31, 0x00, 0x00, 0x00}, // test ra 49  
	{0x2f29, &op_test,	  9, 255, 255, 0x32, 0x00, 0x00, 0x00}, // test ra 50  
	{0x2f39, &op_test,	  9, 255, 255, 0x33, 0x00, 0x00, 0x00}, // test ra 51  
	{0x2f49, &op_test,	  9, 255, 255, 0x34, 0x00, 0x00, 0x00}, // test ra 52  
	{0x2f59, &op_test,	  9, 255, 255, 0x35, 0x00, 0x00, 0x00}, // test ra 53  
	{0x2f69, &op_test,	  9, 255, 255, 0x36, 0x00, 0x00, 0x00}, // test ra 54  
	{0x2f79, &op_test,	  9, 255, 255, 0x37, 0x00, 0x00, 0x00}, // test ra 55  
	{0x2f89, &op_test,	  9, 255, 255, 0x38, 0x00, 0x00, 0x00}, // test ra 56  
	{0x2f99, &op_test,	  9, 255, 255, 0x39, 0x00, 0x00, 0x00}, // test ra 57  
	{0x2fa9, &op_test,	  9, 255, 255, 0x3a, 0x00, 0x00, 0x00}, // test ra 58  
	{0x2fb9, &op_test,	  9, 255, 255, 0x3b, 0x00, 0x00, 0x00}, // test ra 59  
	{0x2fc9, &op_test,	  9, 255, 255, 0x3c, 0x00, 0x00, 0x00}, // test ra 60  
	{0x2fd9, &op_test,	  9, 255, 255, 0x3d, 0x00, 0x00, 0x00}, // test ra 61  
	{0x2fe9, &op_test,	  9, 255, 255, 0x3e, 0x00, 0x00, 0x00}, // test ra 62  
	{0x2ff9, &op_test,	  9, 255, 255, 0x3f, 0x00, 0x00, 0x00}, // test ra 63  
	{0x2c0a, &op_test,	 10, 255, 255, 0x00, 0x00, 0x00, 0x00}, // test sb 0  
	{0x2c1a, &op_test,	 10, 255, 255, 0x01, 0x00, 0x00, 0x00}, // test sb 1  
	{0x2c2a, &op_test,	 10, 255, 255, 0x02, 0x00, 0x00, 0x00}, // test sb 2  
	{0x2c3a, &op_test,	 10, 255, 255, 0x03, 0x00, 0x00, 0x00}, // test sb 3  
	{0x2c4a, &op_test,	 10, 255, 255, 0x04, 0x00, 0x00, 0x00}, // test sb 4  
	{0x2c5a, &op_test,	 10, 255, 255, 0x05, 0x00, 0x00, 0x00}, // test sb 5  
	{0x2c6a, &op_test,	 10, 255, 255, 0x06, 0x00, 0x00, 0x00}, // test sb 6  
	{0x2c7a, &op_test,	 10, 255, 255, 0x07, 0x00, 0x00, 0x00}, // test sb 7  
	{0x2c8a, &op_test,	 10, 255, 255, 0x08, 0x00, 0x00, 0x00}, // test sb 8  
	{0x2c9a, &op_test,	 10, 255, 255, 0x09, 0x00, 0x00, 0x00}, // test sb 9  
	{0x2caa, &op_test,	 10, 255, 255, 0x0a, 0x00, 0x00, 0x00}, // test sb 10  
	{0x2cba, &op_test,	 10, 255, 255, 0x0b, 0x00, 0x00, 0x00}, // test sb 11  
	{0x2cca, &op_test,	 10, 255, 255, 0x0c, 0x00, 0x00, 0x00}, // test sb 12  
	{0x2cda, &op_test,	 10, 255, 255, 0x0d, 0x00, 0x00, 0x00}, // test sb 13  
	{0x2cea, &op_test,	 10, 255, 255, 0x0e, 0x00, 0x00, 0x00}, // test sb 14  
	{0x2cfa, &op_test,	 10, 255, 255, 0x0f, 0x00, 0x00, 0x00}, // test sb 15  
	{0x2d0a, &op_test,	 10, 255, 255, 0x10, 0x00, 0x00, 0x00}, // test sb 16  
	{0x2d1a, &op_test,	 10, 255, 255, 0x11, 0x00, 0x00, 0x00}, // test sb 17  
	{0x2d2a, &op_test,	 10, 255, 255, 0x12, 0x00, 0x00, 0x00}, // test sb 18  
	{0x2d3a, &op_test,	 10, 255, 255, 0x13, 0x00, 0x00, 0x00}, // test sb 19  
	{0x2d4a, &op_test,	 10, 255, 255, 0x14, 0x00, 0x00, 0x00}, // test sb 20  
	{0x2d5a, &op_test,	 10, 255, 255, 0x15, 0x00, 0x00, 0x00}, // test sb 21  
	{0x2d6a, &op_test,	 10, 255, 255, 0x16, 0x00, 0x00, 0x00}, // test sb 22  
	{0x2d7a, &op_test,	 10, 255, 255, 0x17, 0x00, 0x00, 0x00}, // test sb 23  
	{0x2d8a, &op_test,	 10, 255, 255, 0x18, 0x00, 0x00, 0x00}, // test sb 24  
	{0x2d9a, &op_test,	 10, 255, 255, 0x19, 0x00, 0x00, 0x00}, // test sb 25  
	{0x2daa, &op_test,	 10, 255, 255, 0x1a, 0x00, 0x00, 0x00}, // test sb 26  
	{0x2dba, &op_test,	 10, 255, 255, 0x1b, 0x00, 0x00, 0x00}, // test sb 27  
	{0x2dca, &op_test,	 10, 255, 255, 0x1c, 0x00, 0x00, 0x00}, // test sb 28  
	{0x2dda, &op_test,	 10, 255, 255, 0x1d, 0x00, 0x00, 0x00}, // test sb 29  
	{0x2dea, &op_test,	 10, 255, 255, 0x1e, 0x00, 0x00, 0x00}, // test sb 30  
	{0x2dfa, &op_test,	 10, 255, 255, 0x1f, 0x00, 0x00, 0x00}, // test sb 31  
	{0x2e0a, &op_test,	 10, 255, 255, 0x20, 0x00, 0x00, 0x00}, // test sb 32  
	{0x2e1a, &op_test,	 10, 255, 255, 0x21, 0x00, 0x00, 0x00}, // test sb 33  
	{0x2e2a, &op_test,	 10, 255, 255, 0x22, 0x00, 0x00, 0x00}, // test sb 34  
	{0x2e3a, &op_test,	 10, 255, 255, 0x23, 0x00, 0x00, 0x00}, // test sb 35  
	{0x2e4a, &op_test,	 10, 255, 255, 0x24, 0x00, 0x00, 0x00}, // test sb 36  
	{0x2e5a, &op_test,	 10, 255, 255, 0x25, 0x00, 0x00, 0x00}, // test sb 37  
	{0x2e6a, &op_test,	 10, 255, 255, 0x26, 0x00, 0x00, 0x00}, // test sb 38  
	{0x2e7a, &op_test,	 10, 255, 255, 0x27, 0x00, 0x00, 0x00}, // test sb 39  
	{0x2e8a, &op_test,	 10, 255, 255, 0x28, 0x00, 0x00, 0x00}, // test sb 40  
	{0x2e9a, &op_test,	 10, 255, 255, 0x29, 0x00, 0x00, 0x00}, // test sb 41  
	{0x2eaa, &op_test,	 10, 255, 255, 0x2a, 0x00, 0x00, 0x00}, // test sb 42  
	{0x2eba, &op_test,	 10, 255, 255, 0x2b, 0x00, 0x00, 0x00}, // test sb 43  
	{0x2eca, &op_test,	 10, 255, 255, 0x2c, 0x00, 0x00, 0x00}, // test sb 44  
	{0x2eda, &op_test,	 10, 255, 255, 0x2d, 0x00, 0x00, 0x00}, // test sb 45  
	{0x2eea, &op_test,	 10, 255, 255, 0x2e, 0x00, 0x00, 0x00}, // test sb 46  
	{0x2efa, &op_test,	 10, 255, 255, 0x2f, 0x00, 0x00, 0x00}, // test sb 47  
	{0x2f0a, &op_test,	 10, 255, 255, 0x30, 0x00, 0x00, 0x00}, // test sb 48  
	{0x2f1a, &op_test,	 10, 255, 255, 0x31, 0x00, 0x00, 0x00}, // test sb 49  
	{0x2f2a, &op_test,	 10, 255, 255, 0x32, 0x00, 0x00, 0x00}, // test sb 50  
	{0x2f3a, &op_test,	 10, 255, 255, 0x33, 0x00, 0x00, 0x00}, // test sb 51  
	{0x2f4a, &op_test,	 10, 255, 255, 0x34, 0x00, 0x00, 0x00}, // test sb 52  
	{0x2f5a, &op_test,	 10, 255, 255, 0x35, 0x00, 0x00, 0x00}, // test sb 53  
	{0x2f6a, &op_test,	 10, 255, 255, 0x36, 0x00, 0x00, 0x00}, // test sb 54  
	{0x2f7a, &op_test,	 10, 255, 255, 0x37, 0x00, 0x00, 0x00}, // test sb 55  
	{0x2f8a, &op_test,	 10, 255, 255, 0x38, 0x00, 0x00, 0x00}, // test sb 56  
	{0x2f9a, &op_test,	 10, 255, 255, 0x39, 0x00, 0x00, 0x00}, // test sb 57  
	{0x2faa, &op_test,	 10, 255, 255, 0x3a, 0x00, 0x00, 0x00}, // test sb 58  
	{0x2fba, &op_test,	 10, 255, 255, 0x3b, 0x00, 0x00, 0x00}, // test sb 59  
	{0x2fca, &op_test,	 10, 255, 255, 0x3c, 0x00, 0x00, 0x00}, // test sb 60  
	{0x2fda, &op_test,	 10, 255, 255, 0x3d, 0x00, 0x00, 0x00}, // test sb 61  
	{0x2fea, &op_test,	 10, 255, 255, 0x3e, 0x00, 0x00, 0x00}, // test sb 62  
	{0x2ffa, &op_test,	 10, 255, 255, 0x3f, 0x00, 0x00, 0x00}, // test sb 63  
	{0x2c0b, &op_test,	 11, 255, 255, 0x00, 0x00, 0x00, 0x00}, // test sp 0  
	{0x2c1b, &op_test,	 11, 255, 255, 0x01, 0x00, 0x00, 0x00}, // test sp 1  
	{0x2c2b, &op_test,	 11, 255, 255, 0x02, 0x00, 0x00, 0x00}, // test sp 2  
	{0x2c3b, &op_test,	 11, 255, 255, 0x03, 0x00, 0x00, 0x00}, // test sp 3  
	{0x2c4b, &op_test,	 11, 255, 255, 0x04, 0x00, 0x00, 0x00}, // test sp 4  
	{0x2c5b, &op_test,	 11, 255, 255, 0x05, 0x00, 0x00, 0x00}, // test sp 5  
	{0x2c6b, &op_test,	 11, 255, 255, 0x06, 0x00, 0x00, 0x00}, // test sp 6  
	{0x2c7b, &op_test,	 11, 255, 255, 0x07, 0x00, 0x00, 0x00}, // test sp 7  
	{0x2c8b, &op_test,	 11, 255, 255, 0x08, 0x00, 0x00, 0x00}, // test sp 8  
	{0x2c9b, &op_test,	 11, 255, 255, 0x09, 0x00, 0x00, 0x00}, // test sp 9  
	{0x2cab, &op_test,	 11, 255, 255, 0x0a, 0x00, 0x00, 0x00}, // test sp 10  
	{0x2cbb, &op_test,	 11, 255, 255, 0x0b, 0x00, 0x00, 0x00}, // test sp 11  
	{0x2ccb, &op_test,	 11, 255, 255, 0x0c, 0x00, 0x00, 0x00}, // test sp 12  
	{0x2cdb, &op_test,	 11, 255, 255, 0x0d, 0x00, 0x00, 0x00}, // test sp 13  
	{0x2ceb, &op_test,	 11, 255, 255, 0x0e, 0x00, 0x00, 0x00}, // test sp 14  
	{0x2cfb, &op_test,	 11, 255, 255, 0x0f, 0x00, 0x00, 0x00}, // test sp 15  
	{0x2d0b, &op_test,	 11, 255, 255, 0x10, 0x00, 0x00, 0x00}, // test sp 16  
	{0x2d1b, &op_test,	 11, 255, 255, 0x11, 0x00, 0x00, 0x00}, // test sp 17  
	{0x2d2b, &op_test,	 11, 255, 255, 0x12, 0x00, 0x00, 0x00}, // test sp 18  
	{0x2d3b, &op_test,	 11, 255, 255, 0x13, 0x00, 0x00, 0x00}, // test sp 19  
	{0x2d4b, &op_test,	 11, 255, 255, 0x14, 0x00, 0x00, 0x00}, // test sp 20  
	{0x2d5b, &op_test,	 11, 255, 255, 0x15, 0x00, 0x00, 0x00}, // test sp 21  
	{0x2d6b, &op_test,	 11, 255, 255, 0x16, 0x00, 0x00, 0x00}, // test sp 22  
	{0x2d7b, &op_test,	 11, 255, 255, 0x17, 0x00, 0x00, 0x00}, // test sp 23  
	{0x2d8b, &op_test,	 11, 255, 255, 0x18, 0x00, 0x00, 0x00}, // test sp 24  
	{0x2d9b, &op_test,	 11, 255, 255, 0x19, 0x00, 0x00, 0x00}, // test sp 25  
	{0x2dab, &op_test,	 11, 255, 255, 0x1a, 0x00, 0x00, 0x00}, // test sp 26  
	{0x2dbb, &op_test,	 11, 255, 255, 0x1b, 0x00, 0x00, 0x00}, // test sp 27  
	{0x2dcb, &op_test,	 11, 255, 255, 0x1c, 0x00, 0x00, 0x00}, // test sp 28  
	{0x2ddb, &op_test,	 11, 255, 255, 0x1d, 0x00, 0x00, 0x00}, // test sp 29  
	{0x2deb, &op_test,	 11, 255, 255, 0x1e, 0x00, 0x00, 0x00}, // test sp 30  
	{0x2dfb, &op_test,	 11, 255, 255, 0x1f, 0x00, 0x00, 0x00}, // test sp 31  
	{0x2e0b, &op_test,	 11, 255, 255, 0x20, 0x00, 0x00, 0x00}, // test sp 32  
	{0x2e1b, &op_test,	 11, 255, 255, 0x21, 0x00, 0x00, 0x00}, // test sp 33  
	{0x2e2b, &op_test,	 11, 255, 255, 0x22, 0x00, 0x00, 0x00}, // test sp 34  
	{0x2e3b, &op_test,	 11, 255, 255, 0x23, 0x00, 0x00, 0x00}, // test sp 35  
	{0x2e4b, &op_test,	 11, 255, 255, 0x24, 0x00, 0x00, 0x00}, // test sp 36  
	{0x2e5b, &op_test,	 11, 255, 255, 0x25, 0x00, 0x00, 0x00}, // test sp 37  
	{0x2e6b, &op_test,	 11, 255, 255, 0x26, 0x00, 0x00, 0x00}, // test sp 38  
	{0x2e7b, &op_test,	 11, 255, 255, 0x27, 0x00, 0x00, 0x00}, // test sp 39  
	{0x2e8b, &op_test,	 11, 255, 255, 0x28, 0x00, 0x00, 0x00}, // test sp 40  
	{0x2e9b, &op_test,	 11, 255, 255, 0x29, 0x00, 0x00, 0x00}, // test sp 41  
	{0x2eab, &op_test,	 11, 255, 255, 0x2a, 0x00, 0x00, 0x00}, // test sp 42  
	{0x2ebb, &op_test,	 11, 255, 255, 0x2b, 0x00, 0x00, 0x00}, // test sp 43  
	{0x2ecb, &op_test,	 11, 255, 255, 0x2c, 0x00, 0x00, 0x00}, // test sp 44  
	{0x2edb, &op_test,	 11, 255, 255, 0x2d, 0x00, 0x00, 0x00}, // test sp 45  
	{0x2eeb, &op_test,	 11, 255, 255, 0x2e, 0x00, 0x00, 0x00}, // test sp 46  
	{0x2efb, &op_test,	 11, 255, 255, 0x2f, 0x00, 0x00, 0x00}, // test sp 47  
	{0x2f0b, &op_test,	 11, 255, 255, 0x30, 0x00, 0x00, 0x00}, // test sp 48  
	{0x2f1b, &op_test,	 11, 255, 255, 0x31, 0x00, 0x00, 0x00}, // test sp 49  
	{0x2f2b, &op_test,	 11, 255, 255, 0x32, 0x00, 0x00, 0x00}, // test sp 50  
	{0x2f3b, &op_test,	 11, 255, 255, 0x33, 0x00, 0x00, 0x00}, // test sp 51  
	{0x2f4b, &op_test,	 11, 255, 255, 0x34, 0x00, 0x00, 0x00}, // test sp 52  
	{0x2f5b, &op_test,	 11, 255, 255, 0x35, 0x00, 0x00, 0x00}, // test sp 53  
	{0x2f6b, &op_test,	 11, 255, 255, 0x36, 0x00, 0x00, 0x00}, // test sp 54  
	{0x2f7b, &op_test,	 11, 255, 255, 0x37, 0x00, 0x00, 0x00}, // test sp 55  
	{0x2f8b, &op_test,	 11, 255, 255, 0x38, 0x00, 0x00, 0x00}, // test sp 56  
	{0x2f9b, &op_test,	 11, 255, 255, 0x39, 0x00, 0x00, 0x00}, // test sp 57  
	{0x2fab, &op_test,	 11, 255, 255, 0x3a, 0x00, 0x00, 0x00}, // test sp 58  
	{0x2fbb, &op_test,	 11, 255, 255, 0x3b, 0x00, 0x00, 0x00}, // test sp 59  
	{0x2fcb, &op_test,	 11, 255, 255, 0x3c, 0x00, 0x00, 0x00}, // test sp 60  
	{0x2fdb, &op_test,	 11, 255, 255, 0x3d, 0x00, 0x00, 0x00}, // test sp 61  
	{0x2feb, &op_test,	 11, 255, 255, 0x3e, 0x00, 0x00, 0x00}, // test sp 62  
	{0x2ffb, &op_test,	 11, 255, 255, 0x3f, 0x00, 0x00, 0x00}, // test sp 63  
	{0x2c0c, &op_test,	 12, 255, 255, 0x00, 0x00, 0x00, 0x00}, // test db 0  
	{0x2c1c, &op_test,	 12, 255, 255, 0x01, 0x00, 0x00, 0x00}, // test db 1  
	{0x2c2c, &op_test,	 12, 255, 255, 0x02, 0x00, 0x00, 0x00}, // test db 2  
	{0x2c3c, &op_test,	 12, 255, 255, 0x03, 0x00, 0x00, 0x00}, // test db 3  
	{0x2c4c, &op_test,	 12, 255, 255, 0x04, 0x00, 0x00, 0x00}, // test db 4  
	{0x2c5c, &op_test,	 12, 255, 255, 0x05, 0x00, 0x00, 0x00}, // test db 5  
	{0x2c6c, &op_test,	 12, 255, 255, 0x06, 0x00, 0x00, 0x00}, // test db 6  
	{0x2c7c, &op_test,	 12, 255, 255, 0x07, 0x00, 0x00, 0x00}, // test db 7  
	{0x2c8c, &op_test,	 12, 255, 255, 0x08, 0x00, 0x00, 0x00}, // test db 8  
	{0x2c9c, &op_test,	 12, 255, 255, 0x09, 0x00, 0x00, 0x00}, // test db 9  
	{0x2cac, &op_test,	 12, 255, 255, 0x0a, 0x00, 0x00, 0x00}, // test db 10  
	{0x2cbc, &op_test,	 12, 255, 255, 0x0b, 0x00, 0x00, 0x00}, // test db 11  
	{0x2ccc, &op_test,	 12, 255, 255, 0x0c, 0x00, 0x00, 0x00}, // test db 12  
	{0x2cdc, &op_test,	 12, 255, 255, 0x0d, 0x00, 0x00, 0x00}, // test db 13  
	{0x2cec, &op_test,	 12, 255, 255, 0x0e, 0x00, 0x00, 0x00}, // test db 14  
	{0x2cfc, &op_test,	 12, 255, 255, 0x0f, 0x00, 0x00, 0x00}, // test db 15  
	{0x2d0c, &op_test,	 12, 255, 255, 0x10, 0x00, 0x00, 0x00}, // test db 16  
	{0x2d1c, &op_test,	 12, 255, 255, 0x11, 0x00, 0x00, 0x00}, // test db 17  
	{0x2d2c, &op_test,	 12, 255, 255, 0x12, 0x00, 0x00, 0x00}, // test db 18  
	{0x2d3c, &op_test,	 12, 255, 255, 0x13, 0x00, 0x00, 0x00}, // test db 19  
	{0x2d4c, &op_test,	 12, 255, 255, 0x14, 0x00, 0x00, 0x00}, // test db 20  
	{0x2d5c, &op_test,	 12, 255, 255, 0x15, 0x00, 0x00, 0x00}, // test db 21  
	{0x2d6c, &op_test,	 12, 255, 255, 0x16, 0x00, 0x00, 0x00}, // test db 22  
	{0x2d7c, &op_test,	 12, 255, 255, 0x17, 0x00, 0x00, 0x00}, // test db 23  
	{0x2d8c, &op_test,	 12, 255, 255, 0x18, 0x00, 0x00, 0x00}, // test db 24  
	{0x2d9c, &op_test,	 12, 255, 255, 0x19, 0x00, 0x00, 0x00}, // test db 25  
	{0x2dac, &op_test,	 12, 255, 255, 0x1a, 0x00, 0x00, 0x00}, // test db 26  
	{0x2dbc, &op_test,	 12, 255, 255, 0x1b, 0x00, 0x00, 0x00}, // test db 27  
	{0x2dcc, &op_test,	 12, 255, 255, 0x1c, 0x00, 0x00, 0x00}, // test db 28  
	{0x2ddc, &op_test,	 12, 255, 255, 0x1d, 0x00, 0x00, 0x00}, // test db 29  
	{0x2dec, &op_test,	 12, 255, 255, 0x1e, 0x00, 0x00, 0x00}, // test db 30  
	{0x2dfc, &op_test,	 12, 255, 255, 0x1f, 0x00, 0x00, 0x00}, // test db 31  
	{0x2e0c, &op_test,	 12, 255, 255, 0x20, 0x00, 0x00, 0x00}, // test db 32  
	{0x2e1c, &op_test,	 12, 255, 255, 0x21, 0x00, 0x00, 0x00}, // test db 33  
	{0x2e2c, &op_test,	 12, 255, 255, 0x22, 0x00, 0x00, 0x00}, // test db 34  
	{0x2e3c, &op_test,	 12, 255, 255, 0x23, 0x00, 0x00, 0x00}, // test db 35  
	{0x2e4c, &op_test,	 12, 255, 255, 0x24, 0x00, 0x00, 0x00}, // test db 36  
	{0x2e5c, &op_test,	 12, 255, 255, 0x25, 0x00, 0x00, 0x00}, // test db 37  
	{0x2e6c, &op_test,	 12, 255, 255, 0x26, 0x00, 0x00, 0x00}, // test db 38  
	{0x2e7c, &op_test,	 12, 255, 255, 0x27, 0x00, 0x00, 0x00}, // test db 39  
	{0x2e8c, &op_test,	 12, 255, 255, 0x28, 0x00, 0x00, 0x00}, // test db 40  
	{0x2e9c, &op_test,	 12, 255, 255, 0x29, 0x00, 0x00, 0x00}, // test db 41  
	{0x2eac, &op_test,	 12, 255, 255, 0x2a, 0x00, 0x00, 0x00}, // test db 42  
	{0x2ebc, &op_test,	 12, 255, 255, 0x2b, 0x00, 0x00, 0x00}, // test db 43  
	{0x2ecc, &op_test,	 12, 255, 255, 0x2c, 0x00, 0x00, 0x00}, // test db 44  
	{0x2edc, &op_test,	 12, 255, 255, 0x2d, 0x00, 0x00, 0x00}, // test db 45  
	{0x2eec, &op_test,	 12, 255, 255, 0x2e, 0x00, 0x00, 0x00}, // test db 46  
	{0x2efc, &op_test,	 12, 255, 255, 0x2f, 0x00, 0x00, 0x00}, // test db 47  
	{0x2f0c, &op_test,	 12, 255, 255, 0x30, 0x00, 0x00, 0x00}, // test db 48  
	{0x2f1c, &op_test,	 12, 255, 255, 0x31, 0x00, 0x00, 0x00}, // test db 49  
	{0x2f2c, &op_test,	 12, 255, 255, 0x32, 0x00, 0x00, 0x00}, // test db 50  
	{0x2f3c, &op_test,	 12, 255, 255, 0x33, 0x00, 0x00, 0x00}, // test db 51  
	{0x2f4c, &op_test,	 12, 255, 255, 0x34, 0x00, 0x00, 0x00}, // test db 52  
	{0x2f5c, &op_test,	 12, 255, 255, 0x35, 0x00, 0x00, 0x00}, // test db 53  
	{0x2f6c, &op_test,	 12, 255, 255, 0x36, 0x00, 0x00, 0x00}, // test db 54  
	{0x2f7c, &op_test,	 12, 255, 255, 0x37, 0x00, 0x00, 0x00}, // test db 55  
	{0x2f8c, &op_test,	 12, 255, 255, 0x38, 0x00, 0x00, 0x00}, // test db 56  
	{0x2f9c, &op_test,	 12, 255, 255, 0x39, 0x00, 0x00, 0x00}, // test db 57  
	{0x2fac, &op_test,	 12, 255, 255, 0x3a, 0x00, 0x00, 0x00}, // test db 58  
	{0x2fbc, &op_test,	 12, 255, 255, 0x3b, 0x00, 0x00, 0x00}, // test db 59  
	{0x2fcc, &op_test,	 12, 255, 255, 0x3c, 0x00, 0x00, 0x00}, // test db 60  
	{0x2fdc, &op_test,	 12, 255, 255, 0x3d, 0x00, 0x00, 0x00}, // test db 61  
	{0x2fec, &op_test,	 12, 255, 255, 0x3e, 0x00, 0x00, 0x00}, // test db 62  
	{0x2ffc, &op_test,	 12, 255, 255, 0x3f, 0x00, 0x00, 0x00}, // test db 63  
	{0x2c0d, &op_test,	 13, 255, 255, 0x00, 0x00, 0x00, 0x00}, // test cb 0  
	{0x2c1d, &op_test,	 13, 255, 255, 0x01, 0x00, 0x00, 0x00}, // test cb 1  
	{0x2c2d, &op_test,	 13, 255, 255, 0x02, 0x00, 0x00, 0x00}, // test cb 2  
	{0x2c3d, &op_test,	 13, 255, 255, 0x03, 0x00, 0x00, 0x00}, // test cb 3  
	{0x2c4d, &op_test,	 13, 255, 255, 0x04, 0x00, 0x00, 0x00}, // test cb 4  
	{0x2c5d, &op_test,	 13, 255, 255, 0x05, 0x00, 0x00, 0x00}, // test cb 5  
	{0x2c6d, &op_test,	 13, 255, 255, 0x06, 0x00, 0x00, 0x00}, // test cb 6  
	{0x2c7d, &op_test,	 13, 255, 255, 0x07, 0x00, 0x00, 0x00}, // test cb 7  
	{0x2c8d, &op_test,	 13, 255, 255, 0x08, 0x00, 0x00, 0x00}, // test cb 8  
	{0x2c9d, &op_test,	 13, 255, 255, 0x09, 0x00, 0x00, 0x00}, // test cb 9  
	{0x2cad, &op_test,	 13, 255, 255, 0x0a, 0x00, 0x00, 0x00}, // test cb 10  
	{0x2cbd, &op_test,	 13, 255, 255, 0x0b, 0x00, 0x00, 0x00}, // test cb 11  
	{0x2ccd, &op_test,	 13, 255, 255, 0x0c, 0x00, 0x00, 0x00}, // test cb 12  
	{0x2cdd, &op_test,	 13, 255, 255, 0x0d, 0x00, 0x00, 0x00}, // test cb 13  
	{0x2ced, &op_test,	 13, 255, 255, 0x0e, 0x00, 0x00, 0x00}, // test cb 14  
	{0x2cfd, &op_test,	 13, 255, 255, 0x0f, 0x00, 0x00, 0x00}, // test cb 15  
	{0x2d0d, &op_test,	 13, 255, 255, 0x10, 0x00, 0x00, 0x00}, // test cb 16  
	{0x2d1d, &op_test,	 13, 255, 255, 0x11, 0x00, 0x00, 0x00}, // test cb 17  
	{0x2d2d, &op_test,	 13, 255, 255, 0x12, 0x00, 0x00, 0x00}, // test cb 18  
	{0x2d3d, &op_test,	 13, 255, 255, 0x13, 0x00, 0x00, 0x00}, // test cb 19  
	{0x2d4d, &op_test,	 13, 255, 255, 0x14, 0x00, 0x00, 0x00}, // test cb 20  
	{0x2d5d, &op_test,	 13, 255, 255, 0x15, 0x00, 0x00, 0x00}, // test cb 21  
	{0x2d6d, &op_test,	 13, 255, 255, 0x16, 0x00, 0x00, 0x00}, // test cb 22  
	{0x2d7d, &op_test,	 13, 255, 255, 0x17, 0x00, 0x00, 0x00}, // test cb 23  
	{0x2d8d, &op_test,	 13, 255, 255, 0x18, 0x00, 0x00, 0x00}, // test cb 24  
	{0x2d9d, &op_test,	 13, 255, 255, 0x19, 0x00, 0x00, 0x00}, // test cb 25  
	{0x2dad, &op_test,	 13, 255, 255, 0x1a, 0x00, 0x00, 0x00}, // test cb 26  
	{0x2dbd, &op_test,	 13, 255, 255, 0x1b, 0x00, 0x00, 0x00}, // test cb 27  
	{0x2dcd, &op_test,	 13, 255, 255, 0x1c, 0x00, 0x00, 0x00}, // test cb 28  
	{0x2ddd, &op_test,	 13, 255, 255, 0x1d, 0x00, 0x00, 0x00}, // test cb 29  
	{0x2ded, &op_test,	 13, 255, 255, 0x1e, 0x00, 0x00, 0x00}, // test cb 30  
	{0x2dfd, &op_test,	 13, 255, 255, 0x1f, 0x00, 0x00, 0x00}, // test cb 31  
	{0x2e0d, &op_test,	 13, 255, 255, 0x20, 0x00, 0x00, 0x00}, // test cb 32  
	{0x2e1d, &op_test,	 13, 255, 255, 0x21, 0x00, 0x00, 0x00}, // test cb 33  
	{0x2e2d, &op_test,	 13, 255, 255, 0x22, 0x00, 0x00, 0x00}, // test cb 34  
	{0x2e3d, &op_test,	 13, 255, 255, 0x23, 0x00, 0x00, 0x00}, // test cb 35  
	{0x2e4d, &op_test,	 13, 255, 255, 0x24, 0x00, 0x00, 0x00}, // test cb 36  
	{0x2e5d, &op_test,	 13, 255, 255, 0x25, 0x00, 0x00, 0x00}, // test cb 37  
	{0x2e6d, &op_test,	 13, 255, 255, 0x26, 0x00, 0x00, 0x00}, // test cb 38  
	{0x2e7d, &op_test,	 13, 255, 255, 0x27, 0x00, 0x00, 0x00}, // test cb 39  
	{0x2e8d, &op_test,	 13, 255, 255, 0x28, 0x00, 0x00, 0x00}, // test cb 40  
	{0x2e9d, &op_test,	 13, 255, 255, 0x29, 0x00, 0x00, 0x00}, // test cb 41  
	{0x2ead, &op_test,	 13, 255, 255, 0x2a, 0x00, 0x00, 0x00}, // test cb 42  
	{0x2ebd, &op_test,	 13, 255, 255, 0x2b, 0x00, 0x00, 0x00}, // test cb 43  
	{0x2ecd, &op_test,	 13, 255, 255, 0x2c, 0x00, 0x00, 0x00}, // test cb 44  
	{0x2edd, &op_test,	 13, 255, 255, 0x2d, 0x00, 0x00, 0x00}, // test cb 45  
	{0x2eed, &op_test,	 13, 255, 255, 0x2e, 0x00, 0x00, 0x00}, // test cb 46  
	{0x2efd, &op_test,	 13, 255, 255, 0x2f, 0x00, 0x00, 0x00}, // test cb 47  
	{0x2f0d, &op_test,	 13, 255, 255, 0x30, 0x00, 0x00, 0x00}, // test cb 48  
	{0x2f1d, &op_test,	 13, 255, 255, 0x31, 0x00, 0x00, 0x00}, // test cb 49  
	{0x2f2d, &op_test,	 13, 255, 255, 0x32, 0x00, 0x00, 0x00}, // test cb 50  
	{0x2f3d, &op_test,	 13, 255, 255, 0x33, 0x00, 0x00, 0x00}, // test cb 51  
	{0x2f4d, &op_test,	 13, 255, 255, 0x34, 0x00, 0x00, 0x00}, // test cb 52  
	{0x2f5d, &op_test,	 13, 255, 255, 0x35, 0x00, 0x00, 0x00}, // test cb 53  
	{0x2f6d, &op_test,	 13, 255, 255, 0x36, 0x00, 0x00, 0x00}, // test cb 54  
	{0x2f7d, &op_test,	 13, 255, 255, 0x37, 0x00, 0x00, 0x00}, // test cb 55  
	{0x2f8d, &op_test,	 13, 255, 255, 0x38, 0x00, 0x00, 0x00}, // test cb 56  
	{0x2f9d, &op_test,	 13, 255, 255, 0x39, 0x00, 0x00, 0x00}, // test cb 57  
	{0x2fad, &op_test,	 13, 255, 255, 0x3a, 0x00, 0x00, 0x00}, // test cb 58  
	{0x2fbd, &op_test,	 13, 255, 255, 0x3b, 0x00, 0x00, 0x00}, // test cb 59  
	{0x2fcd, &op_test,	 13, 255, 255, 0x3c, 0x00, 0x00, 0x00}, // test cb 60  
	{0x2fdd, &op_test,	 13, 255, 255, 0x3d, 0x00, 0x00, 0x00}, // test cb 61  
	{0x2fed, &op_test,	 13, 255, 255, 0x3e, 0x00, 0x00, 0x00}, // test cb 62  
	{0x2ffd, &op_test,	 13, 255, 255, 0x3f, 0x00, 0x00, 0x00}, // test cb 63  
	{0x2c0e, &op_test,	 14, 255, 255, 0x00, 0x00, 0x00, 0x00}, // test pi 0  
	{0x2c1e, &op_test,	 14, 255, 255, 0x01, 0x00, 0x00, 0x00}, // test pi 1  
	{0x2c2e, &op_test,	 14, 255, 255, 0x02, 0x00, 0x00, 0x00}, // test pi 2  
	{0x2c3e, &op_test,	 14, 255, 255, 0x03, 0x00, 0x00, 0x00}, // test pi 3  
	{0x2c4e, &op_test,	 14, 255, 255, 0x04, 0x00, 0x00, 0x00}, // test pi 4  
	{0x2c5e, &op_test,	 14, 255, 255, 0x05, 0x00, 0x00, 0x00}, // test pi 5  
	{0x2c6e, &op_test,	 14, 255, 255, 0x06, 0x00, 0x00, 0x00}, // test pi 6  
	{0x2c7e, &op_test,	 14, 255, 255, 0x07, 0x00, 0x00, 0x00}, // test pi 7  
	{0x2c8e, &op_test,	 14, 255, 255, 0x08, 0x00, 0x00, 0x00}, // test pi 8  
	{0x2c9e, &op_test,	 14, 255, 255, 0x09, 0x00, 0x00, 0x00}, // test pi 9  
	{0x2cae, &op_test,	 14, 255, 255, 0x0a, 0x00, 0x00, 0x00}, // test pi 10  
	{0x2cbe, &op_test,	 14, 255, 255, 0x0b, 0x00, 0x00, 0x00}, // test pi 11  
	{0x2cce, &op_test,	 14, 255, 255, 0x0c, 0x00, 0x00, 0x00}, // test pi 12  
	{0x2cde, &op_test,	 14, 255, 255, 0x0d, 0x00, 0x00, 0x00}, // test pi 13  
	{0x2cee, &op_test,	 14, 255, 255, 0x0e, 0x00, 0x00, 0x00}, // test pi 14  
	{0x2cfe, &op_test,	 14, 255, 255, 0x0f, 0x00, 0x00, 0x00}, // test pi 15  
	{0x2d0e, &op_test,	 14, 255, 255, 0x10, 0x00, 0x00, 0x00}, // test pi 16  
	{0x2d1e, &op_test,	 14, 255, 255, 0x11, 0x00, 0x00, 0x00}, // test pi 17  
	{0x2d2e, &op_test,	 14, 255, 255, 0x12, 0x00, 0x00, 0x00}, // test pi 18  
	{0x2d3e, &op_test,	 14, 255, 255, 0x13, 0x00, 0x00, 0x00}, // test pi 19  
	{0x2d4e, &op_test,	 14, 255, 255, 0x14, 0x00, 0x00, 0x00}, // test pi 20  
	{0x2d5e, &op_test,	 14, 255, 255, 0x15, 0x00, 0x00, 0x00}, // test pi 21  
	{0x2d6e, &op_test,	 14, 255, 255, 0x16, 0x00, 0x00, 0x00}, // test pi 22  
	{0x2d7e, &op_test,	 14, 255, 255, 0x17, 0x00, 0x00, 0x00}, // test pi 23  
	{0x2d8e, &op_test,	 14, 255, 255, 0x18, 0x00, 0x00, 0x00}, // test pi 24  
	{0x2d9e, &op_test,	 14, 255, 255, 0x19, 0x00, 0x00, 0x00}, // test pi 25  
	{0x2dae, &op_test,	 14, 255, 255, 0x1a, 0x00, 0x00, 0x00}, // test pi 26  
	{0x2dbe, &op_test,	 14, 255, 255, 0x1b, 0x00, 0x00, 0x00}, // test pi 27  
	{0x2dce, &op_test,	 14, 255, 255, 0x1c, 0x00, 0x00, 0x00}, // test pi 28  
	{0x2dde, &op_test,	 14, 255, 255, 0x1d, 0x00, 0x00, 0x00}, // test pi 29  
	{0x2dee, &op_test,	 14, 255, 255, 0x1e, 0x00, 0x00, 0x00}, // test pi 30  
	{0x2dfe, &op_test,	 14, 255, 255, 0x1f, 0x00, 0x00, 0x00}, // test pi 31  
	{0x2e0e, &op_test,	 14, 255, 255, 0x20, 0x00, 0x00, 0x00}, // test pi 32  
	{0x2e1e, &op_test,	 14, 255, 255, 0x21, 0x00, 0x00, 0x00}, // test pi 33  
	{0x2e2e, &op_test,	 14, 255, 255, 0x22, 0x00, 0x00, 0x00}, // test pi 34  
	{0x2e3e, &op_test,	 14, 255, 255, 0x23, 0x00, 0x00, 0x00}, // test pi 35  
	{0x2e4e, &op_test,	 14, 255, 255, 0x24, 0x00, 0x00, 0x00}, // test pi 36  
	{0x2e5e, &op_test,	 14, 255, 255, 0x25, 0x00, 0x00, 0x00}, // test pi 37  
	{0x2e6e, &op_test,	 14, 255, 255, 0x26, 0x00, 0x00, 0x00}, // test pi 38  
	{0x2e7e, &op_test,	 14, 255, 255, 0x27, 0x00, 0x00, 0x00}, // test pi 39  
	{0x2e8e, &op_test,	 14, 255, 255, 0x28, 0x00, 0x00, 0x00}, // test pi 40  
	{0x2e9e, &op_test,	 14, 255, 255, 0x29, 0x00, 0x00, 0x00}, // test pi 41  
	{0x2eae, &op_test,	 14, 255, 255, 0x2a, 0x00, 0x00, 0x00}, // test pi 42  
	{0x2ebe, &op_test,	 14, 255, 255, 0x2b, 0x00, 0x00, 0x00}, // test pi 43  
	{0x2ece, &op_test,	 14, 255, 255, 0x2c, 0x00, 0x00, 0x00}, // test pi 44  
	{0x2ede, &op_test,	 14, 255, 255, 0x2d, 0x00, 0x00, 0x00}, // test pi 45  
	{0x2eee, &op_test,	 14, 255, 255, 0x2e, 0x00, 0x00, 0x00}, // test pi 46  
	{0x2efe, &op_test,	 14, 255, 255, 0x2f, 0x00, 0x00, 0x00}, // test pi 47  
	{0x2f0e, &op_test,	 14, 255, 255, 0x30, 0x00, 0x00, 0x00}, // test pi 48  
	{0x2f1e, &op_test,	 14, 255, 255, 0x31, 0x00, 0x00, 0x00}, // test pi 49  
	{0x2f2e, &op_test,	 14, 255, 255, 0x32, 0x00, 0x00, 0x00}, // test pi 50  
	{0x2f3e, &op_test,	 14, 255, 255, 0x33, 0x00, 0x00, 0x00}, // test pi 51  
	{0x2f4e, &op_test,	 14, 255, 255, 0x34, 0x00, 0x00, 0x00}, // test pi 52  
	{0x2f5e, &op_test,	 14, 255, 255, 0x35, 0x00, 0x00, 0x00}, // test pi 53  
	{0x2f6e, &op_test,	 14, 255, 255, 0x36, 0x00, 0x00, 0x00}, // test pi 54  
	{0x2f7e, &op_test,	 14, 255, 255, 0x37, 0x00, 0x00, 0x00}, // test pi 55  
	{0x2f8e, &op_test,	 14, 255, 255, 0x38, 0x00, 0x00, 0x00}, // test pi 56  
	{0x2f9e, &op_test,	 14, 255, 255, 0x39, 0x00, 0x00, 0x00}, // test pi 57  
	{0x2fae, &op_test,	 14, 255, 255, 0x3a, 0x00, 0x00, 0x00}, // test pi 58  
	{0x2fbe, &op_test,	 14, 255, 255, 0x3b, 0x00, 0x00, 0x00}, // test pi 59  
	{0x2fce, &op_test,	 14, 255, 255, 0x3c, 0x00, 0x00, 0x00}, // test pi 60  
	{0x2fde, &op_test,	 14, 255, 255, 0x3d, 0x00, 0x00, 0x00}, // test pi 61  
	{0x2fee, &op_test,	 14, 255, 255, 0x3e, 0x00, 0x00, 0x00}, // test pi 62  
	{0x2ffe, &op_test,	 14, 255, 255, 0x3f, 0x00, 0x00, 0x00}, // test pi 63  
	{0x2c0f, &op_test,	 15, 255, 255, 0x00, 0x00, 0x00, 0x00}, // test status 0  
	{0x2c1f, &op_test,	 15, 255, 255, 0x01, 0x00, 0x00, 0x00}, // test status 1  
	{0x2c2f, &op_test,	 15, 255, 255, 0x02, 0x00, 0x00, 0x00}, // test status 2  
	{0x2c3f, &op_test,	 15, 255, 255, 0x03, 0x00, 0x00, 0x00}, // test status 3  
	{0x2c4f, &op_test,	 15, 255, 255, 0x04, 0x00, 0x00, 0x00}, // test status 4  
	{0x2c5f, &op_test,	 15, 255, 255, 0x05, 0x00, 0x00, 0x00}, // test status 5  
	{0x2c6f, &op_test,	 15, 255, 255, 0x06, 0x00, 0x00, 0x00}, // test status 6  
	{0x2c7f, &op_test,	 15, 255, 255, 0x07, 0x00, 0x00, 0x00}, // test status 7  
	{0x2c8f, &op_test,	 15, 255, 255, 0x08, 0x00, 0x00, 0x00}, // test status 8  
	{0x2c9f, &op_test,	 15, 255, 255, 0x09, 0x00, 0x00, 0x00}, // test status 9  
	{0x2caf, &op_test,	 15, 255, 255, 0x0a, 0x00, 0x00, 0x00}, // test status 10  
	{0x2cbf, &op_test,	 15, 255, 255, 0x0b, 0x00, 0x00, 0x00}, // test status 11  
	{0x2ccf, &op_test,	 15, 255, 255, 0x0c, 0x00, 0x00, 0x00}, // test status 12  
	{0x2cdf, &op_test,	 15, 255, 255, 0x0d, 0x00, 0x00, 0x00}, // test status 13  
	{0x2cef, &op_test,	 15, 255, 255, 0x0e, 0x00, 0x00, 0x00}, // test status 14  
	{0x2cff, &op_test,	 15, 255, 255, 0x0f, 0x00, 0x00, 0x00}, // test status 15  
	{0x2d0f, &op_test,	 15, 255, 255, 0x10, 0x00, 0x00, 0x00}, // test status 16  
	{0x2d1f, &op_test,	 15, 255, 255, 0x11, 0x00, 0x00, 0x00}, // test status 17  
	{0x2d2f, &op_test,	 15, 255, 255, 0x12, 0x00, 0x00, 0x00}, // test status 18  
	{0x2d3f, &op_test,	 15, 255, 255, 0x13, 0x00, 0x00, 0x00}, // test status 19  
	{0x2d4f, &op_test,	 15, 255, 255, 0x14, 0x00, 0x00, 0x00}, // test status 20  
	{0x2d5f, &op_test,	 15, 255, 255, 0x15, 0x00, 0x00, 0x00}, // test status 21  
	{0x2d6f, &op_test,	 15, 255, 255, 0x16, 0x00, 0x00, 0x00}, // test status 22  
	{0x2d7f, &op_test,	 15, 255, 255, 0x17, 0x00, 0x00, 0x00}, // test status 23  
	{0x2d8f, &op_test,	 15, 255, 255, 0x18, 0x00, 0x00, 0x00}, // test status 24  
	{0x2d9f, &op_test,	 15, 255, 255, 0x19, 0x00, 0x00, 0x00}, // test status 25  
	{0x2daf, &op_test,	 15, 255, 255, 0x1a, 0x00, 0x00, 0x00}, // test status 26  
	{0x2dbf, &op_test,	 15, 255, 255, 0x1b, 0x00, 0x00, 0x00}, // test status 27  
	{0x2dcf, &op_test,	 15, 255, 255, 0x1c, 0x00, 0x00, 0x00}, // test status 28  
	{0x2ddf, &op_test,	 15, 255, 255, 0x1d, 0x00, 0x00, 0x00}, // test status 29  
	{0x2def, &op_test,	 15, 255, 255, 0x1e, 0x00, 0x00, 0x00}, // test status 30  
	{0x2dff, &op_test,	 15, 255, 255, 0x1f, 0x00, 0x00, 0x00}, // test status 31  
	{0x2e0f, &op_test,	 15, 255, 255, 0x20, 0x00, 0x00, 0x00}, // test status 32  
	{0x2e1f, &op_test,	 15, 255, 255, 0x21, 0x00, 0x00, 0x00}, // test status 33  
	{0x2e2f, &op_test,	 15, 255, 255, 0x22, 0x00, 0x00, 0x00}, // test status 34  
	{0x2e3f, &op_test,	 15, 255, 255, 0x23, 0x00, 0x00, 0x00}, // test status 35  
	{0x2e4f, &op_test,	 15, 255, 255, 0x24, 0x00, 0x00, 0x00}, // test status 36  
	{0x2e5f, &op_test,	 15, 255, 255, 0x25, 0x00, 0x00, 0x00}, // test status 37  
	{0x2e6f, &op_test,	 15, 255, 255, 0x26, 0x00, 0x00, 0x00}, // test status 38  
	{0x2e7f, &op_test,	 15, 255, 255, 0x27, 0x00, 0x00, 0x00}, // test status 39  
	{0x2e8f, &op_test,	 15, 255, 255, 0x28, 0x00, 0x00, 0x00}, // test status 40  
	{0x2e9f, &op_test,	 15, 255, 255, 0x29, 0x00, 0x00, 0x00}, // test status 41  
	{0x2eaf, &op_test,	 15, 255, 255, 0x2a, 0x00, 0x00, 0x00}, // test status 42  
	{0x2ebf, &op_test,	 15, 255, 255, 0x2b, 0x00, 0x00, 0x00}, // test status 43  
	{0x2ecf, &op_test,	 15, 255, 255, 0x2c, 0x00, 0x00, 0x00}, // test status 44  
	{0x2edf, &op_test,	 15, 255, 255, 0x2d, 0x00, 0x00, 0x00}, // test status 45  
	{0x2eef, &op_test,	 15, 255, 255, 0x2e, 0x00, 0x00, 0x00}, // test status 46  
	{0x2eff, &op_test,	 15, 255, 255, 0x2f, 0x00, 0x00, 0x00}, // test status 47  
	{0x2f0f, &op_test,	 15, 255, 255, 0x30, 0x00, 0x00, 0x00}, // test status 48  
	{0x2f1f, &op_test,	 15, 255, 255, 0x31, 0x00, 0x00, 0x00}, // test status 49  
	{0x2f2f, &op_test,	 15, 255, 255, 0x32, 0x00, 0x00, 0x00}, // test status 50  
	{0x2f3f, &op_test,	 15, 255, 255, 0x33, 0x00, 0x00, 0x00}, // test status 51  
	{0x2f4f, &op_test,	 15, 255, 255, 0x34, 0x00, 0x00, 0x00}, // test status 52  
	{0x2f5f, &op_test,	 15, 255, 255, 0x35, 0x00, 0x00, 0x00}, // test status 53  
	{0x2f6f, &op_test,	 15, 255, 255, 0x36, 0x00, 0x00, 0x00}, // test status 54  
	{0x2f7f, &op_test,	 15, 255, 255, 0x37, 0x00, 0x00, 0x00}, // test status 55  
	{0x2f8f, &op_test,	 15, 255, 255, 0x38, 0x00, 0x00, 0x00}, // test status 56  
	{0x2f9f, &op_test,	 15, 255, 255, 0x39, 0x00, 0x00, 0x00}, // test status 57  
	{0x2faf, &op_test,	 15, 255, 255, 0x3a, 0x00, 0x00, 0x00}, // test status 58  
	{0x2fbf, &op_test,	 15, 255, 255, 0x3b, 0x00, 0x00, 0x00}, // test status 59  
	{0x2fcf, &op_test,	 15, 255, 255, 0x3c, 0x00, 0x00, 0x00}, // test status 60  
	{0x2fdf, &op_test,	 15, 255, 255, 0x3d, 0x00, 0x00, 0x00}, // test status 61  
	{0x2fef, &op_test,	 15, 255, 255, 0x3e, 0x00, 0x00, 0x00}, // test status 62  
	{0x2fff, &op_test,	 15, 255, 255, 0x3f, 0x00, 0x00, 0x00}, // test status 63  
	{0x3000, &op_update,	  0,   0,   0, 0xff, 0x00, 0x00, 0x00}, // update a a a 
	{0x3100, &op_update,	  0,   0,   1, 0xff, 0x00, 0x00, 0x00}, // update a a b 
	{0x3200, &op_update,	  0,   0,   2, 0xff, 0x00, 0x00, 0x00}, // update a a c 
	{0x3300, &op_update,	  0,   0,   3, 0xff, 0x00, 0x00, 0x00}, // update a a d 
	{0x3400, &op_update,	  0,   0,   4, 0xff, 0x00, 0x00, 0x00}, // update a a e 
	{0x3500, &op_update,	  0,   0,   5, 0xff, 0x00, 0x00, 0x00}, // update a a f 
	{0x3600, &op_update,	  0,   0,   6, 0xff, 0x00, 0x00, 0x00}, // update a a g 
	{0x3700, &op_update,	  0,   0,   7, 0xff, 0x00, 0x00, 0x00}, // update a a h 
	{0x3800, &op_update,	  0,   0,   8, 0xff, 0x00, 0x00, 0x00}, // update a a pc 
	{0x3900, &op_update,	  0,   0,   9, 0xff, 0x00, 0x00, 0x00}, // update a a ra 
	{0x3a00, &op_update,	  0,   0,  10, 0xff, 0x00, 0x00, 0x00}, // update a a sb 
	{0x3b00, &op_update,	  0,   0,  11, 0xff, 0x00, 0x00, 0x00}, // update a a sp 
	{0x3c00, &op_update,	  0,   0,  12, 0xff, 0x00, 0x00, 0x00}, // update a a db 
	{0x3d00, &op_update,	  0,   0,  13, 0xff, 0x00, 0x00, 0x00}, // update a a cb 
	{0x3e00, &op_update,	  0,   0,  14, 0xff, 0x00, 0x00, 0x00}, // update a a pi 
	{0x3f00, &op_update,	  0,   0,   8, 0xff, 0x00, 0x04, 0x00}, // update a a <literal> 
	{0x3010, &op_update,	  0,   1,   0, 0xff, 0x00, 0x00, 0x00}, // update a b a 
	{0x3110, &op_update,	  0,   1,   1, 0xff, 0x00, 0x00, 0x00}, // update a b b 
	{0x3210, &op_update,	  0,   1,   2, 0xff, 0x00, 0x00, 0x00}, // update a b c 
	{0x3310, &op_update,	  0,   1,   3, 0xff, 0x00, 0x00, 0x00}, // update a b d 
	{0x3410, &op_update,	  0,   1,   4, 0xff, 0x00, 0x00, 0x00}, // update a b e 
	{0x3510, &op_update,	  0,   1,   5, 0xff, 0x00, 0x00, 0x00}, // update a b f 
	{0x3610, &op_update,	  0,   1,   6, 0xff, 0x00, 0x00, 0x00}, // update a b g 
	{0x3710, &op_update,	  0,   1,   7, 0xff, 0x00, 0x00, 0x00}, // update a b h 
	{0x3810, &op_update,	  0,   1,   8, 0xff, 0x00, 0x00, 0x00}, // update a b pc 
	{0x3910, &op_update,	  0,   1,   9, 0xff, 0x00, 0x00, 0x00}, // update a b ra 
	{0x3a10, &op_update,	  0,   1,  10, 0xff, 0x00, 0x00, 0x00}, // update a b sb 
	{0x3b10, &op_update,	  0,   1,  11, 0xff, 0x00, 0x00, 0x00}, // update a b sp 
	{0x3c10, &op_update,	  0,   1,  12, 0xff, 0x00, 0x00, 0x00}, // update a b db 
	{0x3d10, &op_update,	  0,   1,  13, 0xff, 0x00, 0x00, 0x00}, // update a b cb 
	{0x3e10, &op_update,	  0,   1,  14, 0xff, 0x00, 0x00, 0x00}, // update a b pi 
	{0x3f10, &op_update,	  0,   1,   8, 0xff, 0x00, 0x04, 0x00}, // update a b <literal> 
	{0x3020, &op_update,	  0,   2,   0, 0xff, 0x00, 0x00, 0x00}, // update a c a 
	{0x3120, &op_update,	  0,   2,   1, 0xff, 0x00, 0x00, 0x00}, // update a c b 
	{0x3220, &op_update,	  0,   2,   2, 0xff, 0x00, 0x00, 0x00}, // update a c c 
	{0x3320, &op_update,	  0,   2,   3, 0xff, 0x00, 0x00, 0x00}, // update a c d 
	{0x3420, &op_update,	  0,   2,   4, 0xff, 0x00, 0x00, 0x00}, // update a c e 
	{0x3520, &op_update,	  0,   2,   5, 0xff, 0x00, 0x00, 0x00}, // update a c f 
	{0x3620, &op_update,	  0,   2,   6, 0xff, 0x00, 0x00, 0x00}, // update a c g 
	{0x3720, &op_update,	  0,   2,   7, 0xff, 0x00, 0x00, 0x00}, // update a c h 
	{0x3820, &op_update,	  0,   2,   8, 0xff, 0x00, 0x00, 0x00}, // update a c pc 
	{0x3920, &op_update,	  0,   2,   9, 0xff, 0x00, 0x00, 0x00}, // update a c ra 
	{0x3a20, &op_update,	  0,   2,  10, 0xff, 0x00, 0x00, 0x00}, // update a c sb 
	{0x3b20, &op_update,	  0,   2,  11, 0xff, 0x00, 0x00, 0x00}, // update a c sp 
	{0x3c20, &op_update,	  0,   2,  12, 0xff, 0x00, 0x00, 0x00}, // update a c db 
	{0x3d20, &op_update,	  0,   2,  13, 0xff, 0x00, 0x00, 0x00}, // update a c cb 
	{0x3e20, &op_update,	  0,   2,  14, 0xff, 0x00, 0x00, 0x00}, // update a c pi 
	{0x3f20, &op_update,	  0,   2,   8, 0xff, 0x00, 0x04, 0x00}, // update a c <literal> 
	{0x3030, &op_update,	  0,   3,   0, 0xff, 0x00, 0x00, 0x00}, // update a d a 
	{0x3130, &op_update,	  0,   3,   1, 0xff, 0x00, 0x00, 0x00}, // update a d b 
	{0x3230, &op_update,	  0,   3,   2, 0xff, 0x00, 0x00, 0x00}, // update a d c 
	{0x3330, &op_update,	  0,   3,   3, 0xff, 0x00, 0x00, 0x00}, // update a d d 
	{0x3430, &op_update,	  0,   3,   4, 0xff, 0x00, 0x00, 0x00}, // update a d e 
	{0x3530, &op_update,	  0,   3,   5, 0xff, 0x00, 0x00, 0x00}, // update a d f 
	{0x3630, &op_update,	  0,   3,   6, 0xff, 0x00, 0x00, 0x00}, // update a d g 
	{0x3730, &op_update,	  0,   3,   7, 0xff, 0x00, 0x00, 0x00}, // update a d h 
	{0x3830, &op_update,	  0,   3,   8, 0xff, 0x00, 0x00, 0x00}, // update a d pc 
	{0x3930, &op_update,	  0,   3,   9, 0xff, 0x00, 0x00, 0x00}, // update a d ra 
	{0x3a30, &op_update,	  0,   3,  10, 0xff, 0x00, 0x00, 0x00}, // update a d sb 
	{0x3b30, &op_update,	  0,   3,  11, 0xff, 0x00, 0x00, 0x00}, // update a d sp 
	{0x3c30, &op_update,	  0,   3,  12, 0xff, 0x00, 0x00, 0x00}, // update a d db 
	{0x3d30, &op_update,	  0,   3,  13, 0xff, 0x00, 0x00, 0x00}, // update a d cb 
	{0x3e30, &op_update,	  0,   3,  14, 0xff, 0x00, 0x00, 0x00}, // update a d pi 
	{0x3f30, &op_update,	  0,   3,   8, 0xff, 0x00, 0x04, 0x00}, // update a d <literal> 
	{0x3040, &op_update,	  0,   4,   0, 0xff, 0x00, 0x00, 0x00}, // update a e a 
	{0x3140, &op_update,	  0,   4,   1, 0xff, 0x00, 0x00, 0x00}, // update a e b 
	{0x3240, &op_update,	  0,   4,   2, 0xff, 0x00, 0x00, 0x00}, // update a e c 
	{0x3340, &op_update,	  0,   4,   3, 0xff, 0x00, 0x00, 0x00}, // update a e d 
	{0x3440, &op_update,	  0,   4,   4, 0xff, 0x00, 0x00, 0x00}, // update a e e 
	{0x3540, &op_update,	  0,   4,   5, 0xff, 0x00, 0x00, 0x00}, // update a e f 
	{0x3640, &op_update,	  0,   4,   6, 0xff, 0x00, 0x00, 0x00}, // update a e g 
	{0x3740, &op_update,	  0,   4,   7, 0xff, 0x00, 0x00, 0x00}, // update a e h 
	{0x3840, &op_update,	  0,   4,   8, 0xff, 0x00, 0x00, 0x00}, // update a e pc 
	{0x3940, &op_update,	  0,   4,   9, 0xff, 0x00, 0x00, 0x00}, // update a e ra 
	{0x3a40, &op_update,	  0,   4,  10, 0xff, 0x00, 0x00, 0x00}, // update a e sb 
	{0x3b40, &op_update,	  0,   4,  11, 0xff, 0x00, 0x00, 0x00}, // update a e sp 
	{0x3c40, &op_update,	  0,   4,  12, 0xff, 0x00, 0x00, 0x00}, // update a e db 
	{0x3d40, &op_update,	  0,   4,  13, 0xff, 0x00, 0x00, 0x00}, // update a e cb 
	{0x3e40, &op_update,	  0,   4,  14, 0xff, 0x00, 0x00, 0x00}, // update a e pi 
	{0x3f40, &op_update,	  0,   4,   8, 0xff, 0x00, 0x04, 0x00}, // update a e <literal> 
	{0x3050, &op_update,	  0,   5,   0, 0xff, 0x00, 0x00, 0x00}, // update a f a 
	{0x3150, &op_update,	  0,   5,   1, 0xff, 0x00, 0x00, 0x00}, // update a f b 
	{0x3250, &op_update,	  0,   5,   2, 0xff, 0x00, 0x00, 0x00}, // update a f c 
	{0x3350, &op_update,	  0,   5,   3, 0xff, 0x00, 0x00, 0x00}, // update a f d 
	{0x3450, &op_update,	  0,   5,   4, 0xff, 0x00, 0x00, 0x00}, // update a f e 
	{0x3550, &op_update,	  0,   5,   5, 0xff, 0x00, 0x00, 0x00}, // update a f f 
	{0x3650, &op_update,	  0,   5,   6, 0xff, 0x00, 0x00, 0x00}, // update a f g 
	{0x3750, &op_update,	  0,   5,   7, 0xff, 0x00, 0x00, 0x00}, // update a f h 
	{0x3850, &op_update,	  0,   5,   8, 0xff, 0x00, 0x00, 0x00}, // update a f pc 
	{0x3950, &op_update,	  0,   5,   9, 0xff, 0x00, 0x00, 0x00}, // update a f ra 
	{0x3a50, &op_update,	  0,   5,  10, 0xff, 0x00, 0x00, 0x00}, // update a f sb 
	{0x3b50, &op_update,	  0,   5,  11, 0xff, 0x00, 0x00, 0x00}, // update a f sp 
	{0x3c50, &op_update,	  0,   5,  12, 0xff, 0x00, 0x00, 0x00}, // update a f db 
	{0x3d50, &op_update,	  0,   5,  13, 0xff, 0x00, 0x00, 0x00}, // update a f cb 
	{0x3e50, &op_update,	  0,   5,  14, 0xff, 0x00, 0x00, 0x00}, // update a f pi 
	{0x3f50, &op_update,	  0,   5,   8, 0xff, 0x00, 0x04, 0x00}, // update a f <literal> 
	{0x3060, &op_update,	  0,   6,   0, 0xff, 0x00, 0x00, 0x00}, // update a g a 
	{0x3160, &op_update,	  0,   6,   1, 0xff, 0x00, 0x00, 0x00}, // update a g b 
	{0x3260, &op_update,	  0,   6,   2, 0xff, 0x00, 0x00, 0x00}, // update a g c 
	{0x3360, &op_update,	  0,   6,   3, 0xff, 0x00, 0x00, 0x00}, // update a g d 
	{0x3460, &op_update,	  0,   6,   4, 0xff, 0x00, 0x00, 0x00}, // update a g e 
	{0x3560, &op_update,	  0,   6,   5, 0xff, 0x00, 0x00, 0x00}, // update a g f 
	{0x3660, &op_update,	  0,   6,   6, 0xff, 0x00, 0x00, 0x00}, // update a g g 
	{0x3760, &op_update,	  0,   6,   7, 0xff, 0x00, 0x00, 0x00}, // update a g h 
	{0x3860, &op_update,	  0,   6,   8, 0xff, 0x00, 0x00, 0x00}, // update a g pc 
	{0x3960, &op_update,	  0,   6,   9, 0xff, 0x00, 0x00, 0x00}, // update a g ra 
	{0x3a60, &op_update,	  0,   6,  10, 0xff, 0x00, 0x00, 0x00}, // update a g sb 
	{0x3b60, &op_update,	  0,   6,  11, 0xff, 0x00, 0x00, 0x00}, // update a g sp 
	{0x3c60, &op_update,	  0,   6,  12, 0xff, 0x00, 0x00, 0x00}, // update a g db 
	{0x3d60, &op_update,	  0,   6,  13, 0xff, 0x00, 0x00, 0x00}, // update a g cb 
	{0x3e60, &op_update,	  0,   6,  14, 0xff, 0x00, 0x00, 0x00}, // update a g pi 
	{0x3f60, &op_update,	  0,   6,   8, 0xff, 0x00, 0x04, 0x00}, // update a g <literal> 
	{0x3070, &op_update,	  0,   7,   0, 0xff, 0x00, 0x00, 0x00}, // update a h a 
	{0x3170, &op_update,	  0,   7,   1, 0xff, 0x00, 0x00, 0x00}, // update a h b 
	{0x3270, &op_update,	  0,   7,   2, 0xff, 0x00, 0x00, 0x00}, // update a h c 
	{0x3370, &op_update,	  0,   7,   3, 0xff, 0x00, 0x00, 0x00}, // update a h d 
	{0x3470, &op_update,	  0,   7,   4, 0xff, 0x00, 0x00, 0x00}, // update a h e 
	{0x3570, &op_update,	  0,   7,   5, 0xff, 0x00, 0x00, 0x00}, // update a h f 
	{0x3670, &op_update,	  0,   7,   6, 0xff, 0x00, 0x00, 0x00}, // update a h g 
	{0x3770, &op_update,	  0,   7,   7, 0xff, 0x00, 0x00, 0x00}, // update a h h 
	{0x3870, &op_update,	  0,   7,   8, 0xff, 0x00, 0x00, 0x00}, // update a h pc 
	{0x3970, &op_update,	  0,   7,   9, 0xff, 0x00, 0x00, 0x00}, // update a h ra 
	{0x3a70, &op_update,	  0,   7,  10, 0xff, 0x00, 0x00, 0x00}, // update a h sb 
	{0x3b70, &op_update,	  0,   7,  11, 0xff, 0x00, 0x00, 0x00}, // update a h sp 
	{0x3c70, &op_update,	  0,   7,  12, 0xff, 0x00, 0x00, 0x00}, // update a h db 
	{0x3d70, &op_update,	  0,   7,  13, 0xff, 0x00, 0x00, 0x00}, // update a h cb 
	{0x3e70, &op_update,	  0,   7,  14, 0xff, 0x00, 0x00, 0x00}, // update a h pi 
	{0x3f70, &op_update,	  0,   7,   8, 0xff, 0x00, 0x04, 0x00}, // update a h <literal> 
	{0x3080, &op_update,	  0,   8,   0, 0xff, 0x00, 0x00, 0x00}, // update a pc a 
	{0x3180, &op_update,	  0,   8,   1, 0xff, 0x00, 0x00, 0x00}, // update a pc b 
	{0x3280, &op_update,	  0,   8,   2, 0xff, 0x00, 0x00, 0x00}, // update a pc c 
	{0x3380, &op_update,	  0,   8,   3, 0xff, 0x00, 0x00, 0x00}, // update a pc d 
	{0x3480, &op_update,	  0,   8,   4, 0xff, 0x00, 0x00, 0x00}, // update a pc e 
	{0x3580, &op_update,	  0,   8,   5, 0xff, 0x00, 0x00, 0x00}, // update a pc f 
	{0x3680, &op_update,	  0,   8,   6, 0xff, 0x00, 0x00, 0x00}, // update a pc g 
	{0x3780, &op_update,	  0,   8,   7, 0xff, 0x00, 0x00, 0x00}, // update a pc h 
	{0x3880, &op_update,	  0,   8,   8, 0xff, 0x00, 0x00, 0x00}, // update a pc pc 
	{0x3980, &op_update,	  0,   8,   9, 0xff, 0x00, 0x00, 0x00}, // update a pc ra 
	{0x3a80, &op_update,	  0,   8,  10, 0xff, 0x00, 0x00, 0x00}, // update a pc sb 
	{0x3b80, &op_update,	  0,   8,  11, 0xff, 0x00, 0x00, 0x00}, // update a pc sp 
	{0x3c80, &op_update,	  0,   8,  12, 0xff, 0x00, 0x00, 0x00}, // update a pc db 
	{0x3d80, &op_update,	  0,   8,  13, 0xff, 0x00, 0x00, 0x00}, // update a pc cb 
	{0x3e80, &op_update,	  0,   8,  14, 0xff, 0x00, 0x00, 0x00}, // update a pc pi 
	{0x3f80, &op_update,	  0,   8,   8, 0xff, 0x00, 0x04, 0x00}, // update a pc <literal> 
	{0x3090, &op_update,	  0,   9,   0, 0xff, 0x00, 0x00, 0x00}, // update a ra a 
	{0x3190, &op_update,	  0,   9,   1, 0xff, 0x00, 0x00, 0x00}, // update a ra b 
	{0x3290, &op_update,	  0,   9,   2, 0xff, 0x00, 0x00, 0x00}, // update a ra c 
	{0x3390, &op_update,	  0,   9,   3, 0xff, 0x00, 0x00, 0x00}, // update a ra d 
	{0x3490, &op_update,	  0,   9,   4, 0xff, 0x00, 0x00, 0x00}, // update a ra e 
	{0x3590, &op_update,	  0,   9,   5, 0xff, 0x00, 0x00, 0x00}, // update a ra f 
	{0x3690, &op_update,	  0,   9,   6, 0xff, 0x00, 0x00, 0x00}, // update a ra g 
	{0x3790, &op_update,	  0,   9,   7, 0xff, 0x00, 0x00, 0x00}, // update a ra h 
	{0x3890, &op_update,	  0,   9,   8, 0xff, 0x00, 0x00, 0x00}, // update a ra pc 
	{0x3990, &op_update,	  0,   9,   9, 0xff, 0x00, 0x00, 0x00}, // update a ra ra 
	{0x3a90, &op_update,	  0,   9,  10, 0xff, 0x00, 0x00, 0x00}, // update a ra sb 
	{0x3b90, &op_update,	  0,   9,  11, 0xff, 0x00, 0x00, 0x00}, // update a ra sp 
	{0x3c90, &op_update,	  0,   9,  12, 0xff, 0x00, 0x00, 0x00}, // update a ra db 
	{0x3d90, &op_update,	  0,   9,  13, 0xff, 0x00, 0x00, 0x00}, // update a ra cb 
	{0x3e90, &op_update,	  0,   9,  14, 0xff, 0x00, 0x00, 0x00}, // update a ra pi 
	{0x3f90, &op_update,	  0,   9,   8, 0xff, 0x00, 0x04, 0x00}, // update a ra <literal> 
	{0x30a0, &op_update,	  0,  10,   0, 0xff, 0x00, 0x00, 0x00}, // update a sb a 
	{0x31a0, &op_update,	  0,  10,   1, 0xff, 0x00, 0x00, 0x00}, // update a sb b 
	{0x32a0, &op_update,	  0,  10,   2, 0xff, 0x00, 0x00, 0x00}, // update a sb c 
	{0x33a0, &op_update,	  0,  10,   3, 0xff, 0x00, 0x00, 0x00}, // update a sb d 
	{0x34a0, &op_update,	  0,  10,   4, 0xff, 0x00, 0x00, 0x00}, // update a sb e 
	{0x35a0, &op_update,	  0,  10,   5, 0xff, 0x00, 0x00, 0x00}, // update a sb f 
	{0x36a0, &op_update,	  0,  10,   6, 0xff, 0x00, 0x00, 0x00}, // update a sb g 
	{0x37a0, &op_update,	  0,  10,   7, 0xff, 0x00, 0x00, 0x00}, // update a sb h 
	{0x38a0, &op_update,	  0,  10,   8, 0xff, 0x00, 0x00, 0x00}, // update a sb pc 
	{0x39a0, &op_update,	  0,  10,   9, 0xff, 0x00, 0x00, 0x00}, // update a sb ra 
	{0x3aa0, &op_update,	  0,  10,  10, 0xff, 0x00, 0x00, 0x00}, // update a sb sb 
	{0x3ba0, &op_update,	  0,  10,  11, 0xff, 0x00, 0x00, 0x00}, // update a sb sp 
	{0x3ca0, &op_update,	  0,  10,  12, 0xff, 0x00, 0x00, 0x00}, // update a sb db 
	{0x3da0, &op_update,	  0,  10,  13, 0xff, 0x00, 0x00, 0x00}, // update a sb cb 
	{0x3ea0, &op_update,	  0,  10,  14, 0xff, 0x00, 0x00, 0x00}, // update a sb pi 
	{0x3fa0, &op_update,	  0,  10,   8, 0xff, 0x00, 0x04, 0x00}, // update a sb <literal> 
	{0x30b0, &op_update,	  0,  11,   0, 0xff, 0x00, 0x00, 0x00}, // update a sp a 
	{0x31b0, &op_update,	  0,  11,   1, 0xff, 0x00, 0x00, 0x00}, // update a sp b 
	{0x32b0, &op_update,	  0,  11,   2, 0xff, 0x00, 0x00, 0x00}, // update a sp c 
	{0x33b0, &op_update,	  0,  11,   3, 0xff, 0x00, 0x00, 0x00}, // update a sp d 
	{0x34b0, &op_update,	  0,  11,   4, 0xff, 0x00, 0x00, 0x00}, // update a sp e 
	{0x35b0, &op_update,	  0,  11,   5, 0xff, 0x00, 0x00, 0x00}, // update a sp f 
	{0x36b0, &op_update,	  0,  11,   6, 0xff, 0x00, 0x00, 0x00}, // update a sp g 
	{0x37b0, &op_update,	  0,  11,   7, 0xff, 0x00, 0x00, 0x00}, // update a sp h 
	{0x38b0, &op_update,	  0,  11,   8, 0xff, 0x00, 0x00, 0x00}, // update a sp pc 
	{0x39b0, &op_update,	  0,  11,   9, 0xff, 0x00, 0x00, 0x00}, // update a sp ra 
	{0x3ab0, &op_update,	  0,  11,  10, 0xff, 0x00, 0x00, 0x00}, // update a sp sb 
	{0x3bb0, &op_update,	  0,  11,  11, 0xff, 0x00, 0x00, 0x00}, // update a sp sp 
	{0x3cb0, &op_update,	  0,  11,  12, 0xff, 0x00, 0x00, 0x00}, // update a sp db 
	{0x3db0, &op_update,	  0,  11,  13, 0xff, 0x00, 0x00, 0x00}, // update a sp cb 
	{0x3eb0, &op_update,	  0,  11,  14, 0xff, 0x00, 0x00, 0x00}, // update a sp pi 
	{0x3fb0, &op_update,	  0,  11,   8, 0xff, 0x00, 0x04, 0x00}, // update a sp <literal> 
	{0x30c0, &op_update,	  0,  12,   0, 0xff, 0x00, 0x00, 0x00}, // update a db a 
	{0x31c0, &op_update,	  0,  12,   1, 0xff, 0x00, 0x00, 0x00}, // update a db b 
	{0x32c0, &op_update,	  0,  12,   2, 0xff, 0x00, 0x00, 0x00}, // update a db c 
	{0x33c0, &op_update,	  0,  12,   3, 0xff, 0x00, 0x00, 0x00}, // update a db d 
	{0x34c0, &op_update,	  0,  12,   4, 0xff, 0x00, 0x00, 0x00}, // update a db e 
	{0x35c0, &op_update,	  0,  12,   5, 0xff, 0x00, 0x00, 0x00}, // update a db f 
	{0x36c0, &op_update,	  0,  12,   6, 0xff, 0x00, 0x00, 0x00}, // update a db g 
	{0x37c0, &op_update,	  0,  12,   7, 0xff, 0x00, 0x00, 0x00}, // update a db h 
	{0x38c0, &op_update,	  0,  12,   8, 0xff, 0x00, 0x00, 0x00}, // update a db pc 
	{0x39c0, &op_update,	  0,  12,   9, 0xff, 0x00, 0x00, 0x00}, // update a db ra 
	{0x3ac0, &op_update,	  0,  12,  10, 0xff, 0x00, 0x00, 0x00}, // update a db sb 
	{0x3bc0, &op_update,	  0,  12,  11, 0xff, 0x00, 0x00, 0x00}, // update a db sp 
	{0x3cc0, &op_update,	  0,  12,  12, 0xff, 0x00, 0x00, 0x00}, // update a db db 
	{0x3dc0, &op_update,	  0,  12,  13, 0xff, 0x00, 0x00, 0x00}, // update a db cb 
	{0x3ec0, &op_update,	  0,  12,  14, 0xff, 0x00, 0x00, 0x00}, // update a db pi 
	{0x3fc0, &op_update,	  0,  12,   8, 0xff, 0x00, 0x04, 0x00}, // update a db <literal> 
	{0x30d0, &op_update,	  0,  13,   0, 0xff, 0x00, 0x00, 0x00}, // update a cb a 
	{0x31d0, &op_update,	  0,  13,   1, 0xff, 0x00, 0x00, 0x00}, // update a cb b 
	{0x32d0, &op_update,	  0,  13,   2, 0xff, 0x00, 0x00, 0x00}, // update a cb c 
	{0x33d0, &op_update,	  0,  13,   3, 0xff, 0x00, 0x00, 0x00}, // update a cb d 
	{0x34d0, &op_update,	  0,  13,   4, 0xff, 0x00, 0x00, 0x00}, // update a cb e 
	{0x35d0, &op_update,	  0,  13,   5, 0xff, 0x00, 0x00, 0x00}, // update a cb f 
	{0x36d0, &op_update,	  0,  13,   6, 0xff, 0x00, 0x00, 0x00}, // update a cb g 
	{0x37d0, &op_update,	  0,  13,   7, 0xff, 0x00, 0x00, 0x00}, // update a cb h 
	{0x38d0, &op_update,	  0,  13,   8, 0xff, 0x00, 0x00, 0x00}, // update a cb pc 
	{0x39d0, &op_update,	  0,  13,   9, 0xff, 0x00, 0x00, 0x00}, // update a cb ra 
	{0x3ad0, &op_update,	  0,  13,  10, 0xff, 0x00, 0x00, 0x00}, // update a cb sb 
	{0x3bd0, &op_update,	  0,  13,  11, 0xff, 0x00, 0x00, 0x00}, // update a cb sp 
	{0x3cd0, &op_update,	  0,  13,  12, 0xff, 0x00, 0x00, 0x00}, // update a cb db 
	{0x3dd0, &op_update,	  0,  13,  13, 0xff, 0x00, 0x00, 0x00}, // update a cb cb 
	{0x3ed0, &op_update,	  0,  13,  14, 0xff, 0x00, 0x00, 0x00}, // update a cb pi 
	{0x3fd0, &op_update,	  0,  13,   8, 0xff, 0x00, 0x04, 0x00}, // update a cb <literal> 
	{0x30e0, &op_update,	  0,  14,   0, 0xff, 0x00, 0x00, 0x00}, // update a pi a 
	{0x31e0, &op_update,	  0,  14,   1, 0xff, 0x00, 0x00, 0x00}, // update a pi b 
	{0x32e0, &op_update,	  0,  14,   2, 0xff, 0x00, 0x00, 0x00}, // update a pi c 
	{0x33e0, &op_update,	  0,  14,   3, 0xff, 0x00, 0x00, 0x00}, // update a pi d 
	{0x34e0, &op_update,	  0,  14,   4, 0xff, 0x00, 0x00, 0x00}, // update a pi e 
	{0x35e0, &op_update,	  0,  14,   5, 0xff, 0x00, 0x00, 0x00}, // update a pi f 
	{0x36e0, &op_update,	  0,  14,   6, 0xff, 0x00, 0x00, 0x00}, // update a pi g 
	{0x37e0, &op_update,	  0,  14,   7, 0xff, 0x00, 0x00, 0x00}, // update a pi h 
	{0x38e0, &op_update,	  0,  14,   8, 0xff, 0x00, 0x00, 0x00}, // update a pi pc 
	{0x39e0, &op_update,	  0,  14,   9, 0xff, 0x00, 0x00, 0x00}, // update a pi ra 
	{0x3ae0, &op_update,	  0,  14,  10, 0xff, 0x00, 0x00, 0x00}, // update a pi sb 
	{0x3be0, &op_update,	  0,  14,  11, 0xff, 0x00, 0x00, 0x00}, // update a pi sp 
	{0x3ce0, &op_update,	  0,  14,  12, 0xff, 0x00, 0x00, 0x00}, // update a pi db 
	{0x3de0, &op_update,	  0,  14,  13, 0xff, 0x00, 0x00, 0x00}, // update a pi cb 
	{0x3ee0, &op_update,	  0,  14,  14, 0xff, 0x00, 0x00, 0x00}, // update a pi pi 
	{0x3fe0, &op_update,	  0,  14,   8, 0xff, 0x00, 0x04, 0x00}, // update a pi <literal> 
	{0x30f0, &op_update,	  0,  15,   0, 0xff, 0x00, 0x00, 0x00}, // update a status a 
	{0x31f0, &op_update,	  0,  15,   1, 0xff, 0x00, 0x00, 0x00}, // update a status b 
	{0x32f0, &op_update,	  0,  15,   2, 0xff, 0x00, 0x00, 0x00}, // update a status c 
	{0x33f0, &op_update,	  0,  15,   3, 0xff, 0x00, 0x00, 0x00}, // update a status d 
	{0x34f0, &op_update,	  0,  15,   4, 0xff, 0x00, 0x00, 0x00}, // update a status e 
	{0x35f0, &op_update,	  0,  15,   5, 0xff, 0x00, 0x00, 0x00}, // update a status f 
	{0x36f0, &op_update,	  0,  15,   6, 0xff, 0x00, 0x00, 0x00}, // update a status g 
	{0x37f0, &op_update,	  0,  15,   7, 0xff, 0x00, 0x00, 0x00}, // update a status h 
	{0x38f0, &op_update,	  0,  15,   8, 0xff, 0x00, 0x00, 0x00}, // update a status pc 
	{0x39f0, &op_update,	  0,  15,   9, 0xff, 0x00, 0x00, 0x00}, // update a status ra 
	{0x3af0, &op_update,	  0,  15,  10, 0xff, 0x00, 0x00, 0x00}, // update a status sb 
	{0x3bf0, &op_update,	  0,  15,  11, 0xff, 0x00, 0x00, 0x00}, // update a status sp 
	{0x3cf0, &op_update,	  0,  15,  12, 0xff, 0x00, 0x00, 0x00}, // update a status db 
	{0x3df0, &op_update,	  0,  15,  13, 0xff, 0x00, 0x00, 0x00}, // update a status cb 
	{0x3ef0, &op_update,	  0,  15,  14, 0xff, 0x00, 0x00, 0x00}, // update a status pi 
	{0x3ff0, &op_update,	  0,  15,   8, 0xff, 0x00, 0x04, 0x00}, // update a status <literal> 
	{0x3001, &op_update,	  1,   0,   0, 0xff, 0x00, 0x00, 0x00}, // update b a a 
	{0x3101, &op_update,	  1,   0,   1, 0xff, 0x00, 0x00, 0x00}, // update b a b 
	{0x3201, &op_update,	  1,   0,   2, 0xff, 0x00, 0x00, 0x00}, // update b a c 
	{0x3301, &op_update,	  1,   0,   3, 0xff, 0x00, 0x00, 0x00}, // update b a d 
	{0x3401, &op_update,	  1,   0,   4, 0xff, 0x00, 0x00, 0x00}, // update b a e 
	{0x3501, &op_update,	  1,   0,   5, 0xff, 0x00, 0x00, 0x00}, // update b a f 
	{0x3601, &op_update,	  1,   0,   6, 0xff, 0x00, 0x00, 0x00}, // update b a g 
	{0x3701, &op_update,	  1,   0,   7, 0xff, 0x00, 0x00, 0x00}, // update b a h 
	{0x3801, &op_update,	  1,   0,   8, 0xff, 0x00, 0x00, 0x00}, // update b a pc 
	{0x3901, &op_update,	  1,   0,   9, 0xff, 0x00, 0x00, 0x00}, // update b a ra 
	{0x3a01, &op_update,	  1,   0,  10, 0xff, 0x00, 0x00, 0x00}, // update b a sb 
	{0x3b01, &op_update,	  1,   0,  11, 0xff, 0x00, 0x00, 0x00}, // update b a sp 
	{0x3c01, &op_update,	  1,   0,  12, 0xff, 0x00, 0x00, 0x00}, // update b a db 
	{0x3d01, &op_update,	  1,   0,  13, 0xff, 0x00, 0x00, 0x00}, // update b a cb 
	{0x3e01, &op_update,	  1,   0,  14, 0xff, 0x00, 0x00, 0x00}, // update b a pi 
	{0x3f01, &op_update,	  1,   0,   8, 0xff, 0x00, 0x04, 0x00}, // update b a <literal> 
	{0x3011, &op_update,	  1,   1,   0, 0xff, 0x00, 0x00, 0x00}, // update b b a 
	{0x3111, &op_update,	  1,   1,   1, 0xff, 0x00, 0x00, 0x00}, // update b b b 
	{0x3211, &op_update,	  1,   1,   2, 0xff, 0x00, 0x00, 0x00}, // update b b c 
	{0x3311, &op_update,	  1,   1,   3, 0xff, 0x00, 0x00, 0x00}, // update b b d 
	{0x3411, &op_update,	  1,   1,   4, 0xff, 0x00, 0x00, 0x00}, // update b b e 
	{0x3511, &op_update,	  1,   1,   5, 0xff, 0x00, 0x00, 0x00}, // update b b f 
	{0x3611, &op_update,	  1,   1,   6, 0xff, 0x00, 0x00, 0x00}, // update b b g 
	{0x3711, &op_update,	  1,   1,   7, 0xff, 0x00, 0x00, 0x00}, // update b b h 
	{0x3811, &op_update,	  1,   1,   8, 0xff, 0x00, 0x00, 0x00}, // update b b pc 
	{0x3911, &op_update,	  1,   1,   9, 0xff, 0x00, 0x00, 0x00}, // update b b ra 
	{0x3a11, &op_update,	  1,   1,  10, 0xff, 0x00, 0x00, 0x00}, // update b b sb 
	{0x3b11, &op_update,	  1,   1,  11, 0xff, 0x00, 0x00, 0x00}, // update b b sp 
	{0x3c11, &op_update,	  1,   1,  12, 0xff, 0x00, 0x00, 0x00}, // update b b db 
	{0x3d11, &op_update,	  1,   1,  13, 0xff, 0x00, 0x00, 0x00}, // update b b cb 
	{0x3e11, &op_update,	  1,   1,  14, 0xff, 0x00, 0x00, 0x00}, // update b b pi 
	{0x3f11, &op_update,	  1,   1,   8, 0xff, 0x00, 0x04, 0x00}, // update b b <literal> 
	{0x3021, &op_update,	  1,   2,   0, 0xff, 0x00, 0x00, 0x00}, // update b c a 
	{0x3121, &op_update,	  1,   2,   1, 0xff, 0x00, 0x00, 0x00}, // update b c b 
	{0x3221, &op_update,	  1,   2,   2, 0xff, 0x00, 0x00, 0x00}, // update b c c 
	{0x3321, &op_update,	  1,   2,   3, 0xff, 0x00, 0x00, 0x00}, // update b c d 
	{0x3421, &op_update,	  1,   2,   4, 0xff, 0x00, 0x00, 0x00}, // update b c e 
	{0x3521, &op_update,	  1,   2,   5, 0xff, 0x00, 0x00, 0x00}, // update b c f 
	{0x3621, &op_update,	  1,   2,   6, 0xff, 0x00, 0x00, 0x00}, // update b c g 
	{0x3721, &op_update,	  1,   2,   7, 0xff, 0x00, 0x00, 0x00}, // update b c h 
	{0x3821, &op_update,	  1,   2,   8, 0xff, 0x00, 0x00, 0x00}, // update b c pc 
	{0x3921, &op_update,	  1,   2,   9, 0xff, 0x00, 0x00, 0x00}, // update b c ra 
	{0x3a21, &op_update,	  1,   2,  10, 0xff, 0x00, 0x00, 0x00}, // update b c sb 
	{0x3b21, &op_update,	  1,   2,  11, 0xff, 0x00, 0x00, 0x00}, // update b c sp 
	{0x3c21, &op_update,	  1,   2,  12, 0xff, 0x00, 0x00, 0x00}, // update b c db 
	{0x3d21, &op_update,	  1,   2,  13, 0xff, 0x00, 0x00, 0x00}, // update b c cb 
	{0x3e21, &op_update,	  1,   2,  14, 0xff, 0x00, 0x00, 0x00}, // update b c pi 
	{0x3f21, &op_update,	  1,   2,   8, 0xff, 0x00, 0x04, 0x00}, // update b c <literal> 
	{0x3031, &op_update,	  1,   3,   0, 0xff, 0x00, 0x00, 0x00}, // update b d a 
	{0x3131, &op_update,	  1,   3,   1, 0xff, 0x00, 0x00, 0x00}, // update b d b 
	{0x3231, &op_update,	  1,   3,   2, 0xff, 0x00, 0x00, 0x00}, // update b d c 
	{0x3331, &op_update,	  1,   3,   3, 0xff, 0x00, 0x00, 0x00}, // update b d d 
	{0x3431, &op_update,	  1,   3,   4, 0xff, 0x00, 0x00, 0x00}, // update b d e 
	{0x3531, &op_update,	  1,   3,   5, 0xff, 0x00, 0x00, 0x00}, // update b d f 
	{0x3631, &op_update,	  1,   3,   6, 0xff, 0x00, 0x00, 0x00}, // update b d g 
	{0x3731, &op_update,	  1,   3,   7, 0xff, 0x00, 0x00, 0x00}, // update b d h 
	{0x3831, &op_update,	  1,   3,   8, 0xff, 0x00, 0x00, 0x00}, // update b d pc 
	{0x3931, &op_update,	  1,   3,   9, 0xff, 0x00, 0x00, 0x00}, // update b d ra 
	{0x3a31, &op_update,	  1,   3,  10, 0xff, 0x00, 0x00, 0x00}, // update b d sb 
	{0x3b31, &op_update,	  1,   3,  11, 0xff, 0x00, 0x00, 0x00}, // update b d sp 
	{0x3c31, &op_update,	  1,   3,  12, 0xff, 0x00, 0x00, 0x00}, // update b d db 
	{0x3d31, &op_update,	  1,   3,  13, 0xff, 0x00, 0x00, 0x00}, // update b d cb 
	{0x3e31, &op_update,	  1,   3,  14, 0xff, 0x00, 0x00, 0x00}, // update b d pi 
	{0x3f31, &op_update,	  1,   3,   8, 0xff, 0x00, 0x04, 0x00}, // update b d <literal> 
	{0x3041, &op_update,	  1,   4,   0, 0xff, 0x00, 0x00, 0x00}, // update b e a 
	{0x3141, &op_update,	  1,   4,   1, 0xff, 0x00, 0x00, 0x00}, // update b e b 
	{0x3241, &op_update,	  1,   4,   2, 0xff, 0x00, 0x00, 0x00}, // update b e c 
	{0x3341, &op_update,	  1,   4,   3, 0xff, 0x00, 0x00, 0x00}, // update b e d 
	{0x3441, &op_update,	  1,   4,   4, 0xff, 0x00, 0x00, 0x00}, // update b e e 
	{0x3541, &op_update,	  1,   4,   5, 0xff, 0x00, 0x00, 0x00}, // update b e f 
	{0x3641, &op_update,	  1,   4,   6, 0xff, 0x00, 0x00, 0x00}, // update b e g 
	{0x3741, &op_update,	  1,   4,   7, 0xff, 0x00, 0x00, 0x00}, // update b e h 
	{0x3841, &op_update,	  1,   4,   8, 0xff, 0x00, 0x00, 0x00}, // update b e pc 
	{0x3941, &op_update,	  1,   4,   9, 0xff, 0x00, 0x00, 0x00}, // update b e ra 
	{0x3a41, &op_update,	  1,   4,  10, 0xff, 0x00, 0x00, 0x00}, // update b e sb 
	{0x3b41, &op_update,	  1,   4,  11, 0xff, 0x00, 0x00, 0x00}, // update b e sp 
	{0x3c41, &op_update,	  1,   4,  12, 0xff, 0x00, 0x00, 0x00}, // update b e db 
	{0x3d41, &op_update,	  1,   4,  13, 0xff, 0x00, 0x00, 0x00}, // update b e cb 
	{0x3e41, &op_update,	  1,   4,  14, 0xff, 0x00, 0x00, 0x00}, // update b e pi 
	{0x3f41, &op_update,	  1,   4,   8, 0xff, 0x00, 0x04, 0x00}, // update b e <literal> 
	{0x3051, &op_update,	  1,   5,   0, 0xff, 0x00, 0x00, 0x00}, // update b f a 
	{0x3151, &op_update,	  1,   5,   1, 0xff, 0x00, 0x00, 0x00}, // update b f b 
	{0x3251, &op_update,	  1,   5,   2, 0xff, 0x00, 0x00, 0x00}, // update b f c 
	{0x3351, &op_update,	  1,   5,   3, 0xff, 0x00, 0x00, 0x00}, // update b f d 
	{0x3451, &op_update,	  1,   5,   4, 0xff, 0x00, 0x00, 0x00}, // update b f e 
	{0x3551, &op_update,	  1,   5,   5, 0xff, 0x00, 0x00, 0x00}, // update b f f 
	{0x3651, &op_update,	  1,   5,   6, 0xff, 0x00, 0x00, 0x00}, // update b f g 
	{0x3751, &op_update,	  1,   5,   7, 0xff, 0x00, 0x00, 0x00}, // update b f h 
	{0x3851, &op_update,	  1,   5,   8, 0xff, 0x00, 0x00, 0x00}, // update b f pc 
	{0x3951, &op_update,	  1,   5,   9, 0xff, 0x00, 0x00, 0x00}, // update b f ra 
	{0x3a51, &op_update,	  1,   5,  10, 0xff, 0x00, 0x00, 0x00}, // update b f sb 
	{0x3b51, &op_update,	  1,   5,  11, 0xff, 0x00, 0x00, 0x00}, // update b f sp 
	{0x3c51, &op_update,	  1,   5,  12, 0xff, 0x00, 0x00, 0x00}, // update b f db 
	{0x3d51, &op_update,	  1,   5,  13, 0xff, 0x00, 0x00, 0x00}, // update b f cb 
	{0x3e51, &op_update,	  1,   5,  14, 0xff, 0x00, 0x00, 0x00}, // update b f pi 
	{0x3f51, &op_update,	  1,   5,   8, 0xff, 0x00, 0x04, 0x00}, // update b f <literal> 
	{0x3061, &op_update,	  1,   6,   0, 0xff, 0x00, 0x00, 0x00}, // update b g a 
	{0x3161, &op_update,	  1,   6,   1, 0xff, 0x00, 0x00, 0x00}, // update b g b 
	{0x3261, &op_update,	  1,   6,   2, 0xff, 0x00, 0x00, 0x00}, // update b g c 
	{0x3361, &op_update,	  1,   6,   3, 0xff, 0x00, 0x00, 0x00}, // update b g d 
	{0x3461, &op_update,	  1,   6,   4, 0xff, 0x00, 0x00, 0x00}, // update b g e 
	{0x3561, &op_update,	  1,   6,   5, 0xff, 0x00, 0x00, 0x00}, // update b g f 
	{0x3661, &op_update,	  1,   6,   6, 0xff, 0x00, 0x00, 0x00}, // update b g g 
	{0x3761, &op_update,	  1,   6,   7, 0xff, 0x00, 0x00, 0x00}, // update b g h 
	{0x3861, &op_update,	  1,   6,   8, 0xff, 0x00, 0x00, 0x00}, // update b g pc 
	{0x3961, &op_update,	  1,   6,   9, 0xff, 0x00, 0x00, 0x00}, // update b g ra 
	{0x3a61, &op_update,	  1,   6,  10, 0xff, 0x00, 0x00, 0x00}, // update b g sb 
	{0x3b61, &op_update,	  1,   6,  11, 0xff, 0x00, 0x00, 0x00}, // update b g sp 
	{0x3c61, &op_update,	  1,   6,  12, 0xff, 0x00, 0x00, 0x00}, // update b g db 
	{0x3d61, &op_update,	  1,   6,  13, 0xff, 0x00, 0x00, 0x00}, // update b g cb 
	{0x3e61, &op_update,	  1,   6,  14, 0xff, 0x00, 0x00, 0x00}, // update b g pi 
	{0x3f61, &op_update,	  1,   6,   8, 0xff, 0x00, 0x04, 0x00}, // update b g <literal> 
	{0x3071, &op_update,	  1,   7,   0, 0xff, 0x00, 0x00, 0x00}, // update b h a 
	{0x3171, &op_update,	  1,   7,   1, 0xff, 0x00, 0x00, 0x00}, // update b h b 
	{0x3271, &op_update,	  1,   7,   2, 0xff, 0x00, 0x00, 0x00}, // update b h c 
	{0x3371, &op_update,	  1,   7,   3, 0xff, 0x00, 0x00, 0x00}, // update b h d 
	{0x3471, &op_update,	  1,   7,   4, 0xff, 0x00, 0x00, 0x00}, // update b h e 
	{0x3571, &op_update,	  1,   7,   5, 0xff, 0x00, 0x00, 0x00}, // update b h f 
	{0x3671, &op_update,	  1,   7,   6, 0xff, 0x00, 0x00, 0x00}, // update b h g 
	{0x3771, &op_update,	  1,   7,   7, 0xff, 0x00, 0x00, 0x00}, // update b h h 
	{0x3871, &op_update,	  1,   7,   8, 0xff, 0x00, 0x00, 0x00}, // update b h pc 
	{0x3971, &op_update,	  1,   7,   9, 0xff, 0x00, 0x00, 0x00}, // update b h ra 
	{0x3a71, &op_update,	  1,   7,  10, 0xff, 0x00, 0x00, 0x00}, // update b h sb 
	{0x3b71, &op_update,	  1,   7,  11, 0xff, 0x00, 0x00, 0x00}, // update b h sp 
	{0x3c71, &op_update,	  1,   7,  12, 0xff, 0x00, 0x00, 0x00}, // update b h db 
	{0x3d71, &op_update,	  1,   7,  13, 0xff, 0x00, 0x00, 0x00}, // update b h cb 
	{0x3e71, &op_update,	  1,   7,  14, 0xff, 0x00, 0x00, 0x00}, // update b h pi 
	{0x3f71, &op_update,	  1,   7,   8, 0xff, 0x00, 0x04, 0x00}, // update b h <literal> 
	{0x3081, &op_update,	  1,   8,   0, 0xff, 0x00, 0x00, 0x00}, // update b pc a 
	{0x3181, &op_update,	  1,   8,   1, 0xff, 0x00, 0x00, 0x00}, // update b pc b 
	{0x3281, &op_update,	  1,   8,   2, 0xff, 0x00, 0x00, 0x00}, // update b pc c 
	{0x3381, &op_update,	  1,   8,   3, 0xff, 0x00, 0x00, 0x00}, // update b pc d 
	{0x3481, &op_update,	  1,   8,   4, 0xff, 0x00, 0x00, 0x00}, // update b pc e 
	{0x3581, &op_update,	  1,   8,   5, 0xff, 0x00, 0x00, 0x00}, // update b pc f 
	{0x3681, &op_update,	  1,   8,   6, 0xff, 0x00, 0x00, 0x00}, // update b pc g 
	{0x3781, &op_update,	  1,   8,   7, 0xff, 0x00, 0x00, 0x00}, // update b pc h 
	{0x3881, &op_update,	  1,   8,   8, 0xff, 0x00, 0x00, 0x00}, // update b pc pc 
	{0x3981, &op_update,	  1,   8,   9, 0xff, 0x00, 0x00, 0x00}, // update b pc ra 
	{0x3a81, &op_update,	  1,   8,  10, 0xff, 0x00, 0x00, 0x00}, // update b pc sb 
	{0x3b81, &op_update,	  1,   8,  11, 0xff, 0x00, 0x00, 0x00}, // update b pc sp 
	{0x3c81, &op_update,	  1,   8,  12, 0xff, 0x00, 0x00, 0x00}, // update b pc db 
	{0x3d81, &op_update,	  1,   8,  13, 0xff, 0x00, 0x00, 0x00}, // update b pc cb 
	{0x3e81, &op_update,	  1,   8,  14, 0xff, 0x00, 0x00, 0x00}, // update b pc pi 
	{0x3f81, &op_update,	  1,   8,   8, 0xff, 0x00, 0x04, 0x00}, // update b pc <literal> 
	{0x3091, &op_update,	  1,   9,   0, 0xff, 0x00, 0x00, 0x00}, // update b ra a 
	{0x3191, &op_update,	  1,   9,   1, 0xff, 0x00, 0x00, 0x00}, // update b ra b 
	{0x3291, &op_update,	  1,   9,   2, 0xff, 0x00, 0x00, 0x00}, // update b ra c 
	{0x3391, &op_update,	  1,   9,   3, 0xff, 0x00, 0x00, 0x00}, // update b ra d 
	{0x3491, &op_update,	  1,   9,   4, 0xff, 0x00, 0x00, 0x00}, // update b ra e 
	{0x3591, &op_update,	  1,   9,   5, 0xff, 0x00, 0x00, 0x00}, // update b ra f 
	{0x3691, &op_update,	  1,   9,   6, 0xff, 0x00, 0x00, 0x00}, // update b ra g 
	{0x3791, &op_update,	  1,   9,   7, 0xff, 0x00, 0x00, 0x00}, // update b ra h 
	{0x3891, &op_update,	  1,   9,   8, 0xff, 0x00, 0x00, 0x00}, // update b ra pc 
	{0x3991, &op_update,	  1,   9,   9, 0xff, 0x00, 0x00, 0x00}, // update b ra ra 
	{0x3a91, &op_update,	  1,   9,  10, 0xff, 0x00, 0x00, 0x00}, // update b ra sb 
	{0x3b91, &op_update,	  1,   9,  11, 0xff, 0x00, 0x00, 0x00}, // update b ra sp 
	{0x3c91, &op_update,	  1,   9,  12, 0xff, 0x00, 0x00, 0x00}, // update b ra db 
	{0x3d91, &op_update,	  1,   9,  13, 0xff, 0x00, 0x00, 0x00}, // update b ra cb 
	{0x3e91, &op_update,	  1,   9,  14, 0xff, 0x00, 0x00, 0x00}, // update b ra pi 
	{0x3f91, &op_update,	  1,   9,   8, 0xff, 0x00, 0x04, 0x00}, // update b ra <literal> 
	{0x30a1, &op_update,	  1,  10,   0, 0xff, 0x00, 0x00, 0x00}, // update b sb a 
	{0x31a1, &op_update,	  1,  10,   1, 0xff, 0x00, 0x00, 0x00}, // update b sb b 
	{0x32a1, &op_update,	  1,  10,   2, 0xff, 0x00, 0x00, 0x00}, // update b sb c 
	{0x33a1, &op_update,	  1,  10,   3, 0xff, 0x00, 0x00, 0x00}, // update b sb d 
	{0x34a1, &op_update,	  1,  10,   4, 0xff, 0x00, 0x00, 0x00}, // update b sb e 
	{0x35a1, &op_update,	  1,  10,   5, 0xff, 0x00, 0x00, 0x00}, // update b sb f 
	{0x36a1, &op_update,	  1,  10,   6, 0xff, 0x00, 0x00, 0x00}, // update b sb g 
	{0x37a1, &op_update,	  1,  10,   7, 0xff, 0x00, 0x00, 0x00}, // update b sb h 
	{0x38a1, &op_update,	  1,  10,   8, 0xff, 0x00, 0x00, 0x00}, // update b sb pc 
	{0x39a1, &op_update,	  1,  10,   9, 0xff, 0x00, 0x00, 0x00}, // update b sb ra 
	{0x3aa1, &op_update,	  1,  10,  10, 0xff, 0x00, 0x00, 0x00}, // update b sb sb 
	{0x3ba1, &op_update,	  1,  10,  11, 0xff, 0x00, 0x00, 0x00}, // update b sb sp 
	{0x3ca1, &op_update,	  1,  10,  12, 0xff, 0x00, 0x00, 0x00}, // update b sb db 
	{0x3da1, &op_update,	  1,  10,  13, 0xff, 0x00, 0x00, 0x00}, // update b sb cb 
	{0x3ea1, &op_update,	  1,  10,  14, 0xff, 0x00, 0x00, 0x00}, // update b sb pi 
	{0x3fa1, &op_update,	  1,  10,   8, 0xff, 0x00, 0x04, 0x00}, // update b sb <literal> 
	{0x30b1, &op_update,	  1,  11,   0, 0xff, 0x00, 0x00, 0x00}, // update b sp a 
	{0x31b1, &op_update,	  1,  11,   1, 0xff, 0x00, 0x00, 0x00}, // update b sp b 
	{0x32b1, &op_update,	  1,  11,   2, 0xff, 0x00, 0x00, 0x00}, // update b sp c 
	{0x33b1, &op_update,	  1,  11,   3, 0xff, 0x00, 0x00, 0x00}, // update b sp d 
	{0x34b1, &op_update,	  1,  11,   4, 0xff, 0x00, 0x00, 0x00}, // update b sp e 
	{0x35b1, &op_update,	  1,  11,   5, 0xff, 0x00, 0x00, 0x00}, // update b sp f 
	{0x36b1, &op_update,	  1,  11,   6, 0xff, 0x00, 0x00, 0x00}, // update b sp g 
	{0x37b1, &op_update,	  1,  11,   7, 0xff, 0x00, 0x00, 0x00}, // update b sp h 
	{0x38b1, &op_update,	  1,  11,   8, 0xff, 0x00, 0x00, 0x00}, // update b sp pc 
	{0x39b1, &op_update,	  1,  11,   9, 0xff, 0x00, 0x00, 0x00}, // update b sp ra 
	{0x3ab1, &op_update,	  1,  11,  10, 0xff, 0x00, 0x00, 0x00}, // update b sp sb 
	{0x3bb1, &op_update,	  1,  11,  11, 0xff, 0x00, 0x00, 0x00}, // update b sp sp 
	{0x3cb1, &op_update,	  1,  11,  12, 0xff, 0x00, 0x00, 0x00}, // update b sp db 
	{0x3db1, &op_update,	  1,  11,  13, 0xff, 0x00, 0x00, 0x00}, // update b sp cb 
	{0x3eb1, &op_update,	  1,  11,  14, 0xff, 0x00, 0x00, 0x00}, // update b sp pi 
	{0x3fb1, &op_update,	  1,  11,   8, 0xff, 0x00, 0x04, 0x00}, // update b sp <literal> 
	{0x30c1, &op_update,	  1,  12,   0, 0xff, 0x00, 0x00, 0x00}, // update b db a 
	{0x31c1, &op_update,	  1,  12,   1, 0xff, 0x00, 0x00, 0x00}, // update b db b 
	{0x32c1, &op_update,	  1,  12,   2, 0xff, 0x00, 0x00, 0x00}, // update b db c 
	{0x33c1, &op_update,	  1,  12,   3, 0xff, 0x00, 0x00, 0x00}, // update b db d 
	{0x34c1, &op_update,	  1,  12,   4, 0xff, 0x00, 0x00, 0x00}, // update b db e 
	{0x35c1, &op_update,	  1,  12,   5, 0xff, 0x00, 0x00, 0x00}, // update b db f 
	{0x36c1, &op_update,	  1,  12,   6, 0xff, 0x00, 0x00, 0x00}, // update b db g 
	{0x37c1, &op_update,	  1,  12,   7, 0xff, 0x00, 0x00, 0x00}, // update b db h 
	{0x38c1, &op_update,	  1,  12,   8, 0xff, 0x00, 0x00, 0x00}, // update b db pc 
	{0x39c1, &op_update,	  1,  12,   9, 0xff, 0x00, 0x00, 0x00}, // update b db ra 
	{0x3ac1, &op_update,	  1,  12,  10, 0xff, 0x00, 0x00, 0x00}, // update b db sb 
	{0x3bc1, &op_update,	  1,  12,  11, 0xff, 0x00, 0x00, 0x00}, // update b db sp 
	{0x3cc1, &op_update,	  1,  12,  12, 0xff, 0x00, 0x00, 0x00}, // update b db db 
	{0x3dc1, &op_update,	  1,  12,  13, 0xff, 0x00, 0x00, 0x00}, // update b db cb 
	{0x3ec1, &op_update,	  1,  12,  14, 0xff, 0x00, 0x00, 0x00}, // update b db pi 
	{0x3fc1, &op_update,	  1,  12,   8, 0xff, 0x00, 0x04, 0x00}, // update b db <literal> 
	{0x30d1, &op_update,	  1,  13,   0, 0xff, 0x00, 0x00, 0x00}, // update b cb a 
	{0x31d1, &op_update,	  1,  13,   1, 0xff, 0x00, 0x00, 0x00}, // update b cb b 
	{0x32d1, &op_update,	  1,  13,   2, 0xff, 0x00, 0x00, 0x00}, // update b cb c 
	{0x33d1, &op_update,	  1,  13,   3, 0xff, 0x00, 0x00, 0x00}, // update b cb d 
	{0x34d1, &op_update,	  1,  13,   4, 0xff, 0x00, 0x00, 0x00}, // update b cb e 
	{0x35d1, &op_update,	  1,  13,   5, 0xff, 0x00, 0x00, 0x00}, // update b cb f 
	{0x36d1, &op_update,	  1,  13,   6, 0xff, 0x00, 0x00, 0x00}, // update b cb g 
	{0x37d1, &op_update,	  1,  13,   7, 0xff, 0x00, 0x00, 0x00}, // update b cb h 
	{0x38d1, &op_update,	  1,  13,   8, 0xff, 0x00, 0x00, 0x00}, // update b cb pc 
	{0x39d1, &op_update,	  1,  13,   9, 0xff, 0x00, 0x00, 0x00}, // update b cb ra 
	{0x3ad1, &op_update,	  1,  13,  10, 0xff, 0x00, 0x00, 0x00}, // update b cb sb 
	{0x3bd1, &op_update,	  1,  13,  11, 0xff, 0x00, 0x00, 0x00}, // update b cb sp 
	{0x3cd1, &op_update,	  1,  13,  12, 0xff, 0x00, 0x00, 0x00}, // update b cb db 
	{0x3dd1, &op_update,	  1,  13,  13, 0xff, 0x00, 0x00, 0x00}, // update b cb cb 
	{0x3ed1, &op_update,	  1,  13,  14, 0xff, 0x00, 0x00, 0x00}, // update b cb pi 
	{0x3fd1, &op_update,	  1,  13,   8, 0xff, 0x00, 0x04, 0x00}, // update b cb <literal> 
	{0x30e1, &op_update,	  1,  14,   0, 0xff, 0x00, 0x00, 0x00}, // update b pi a 
	{0x31e1, &op_update,	  1,  14,   1, 0xff, 0x00, 0x00, 0x00}, // update b pi b 
	{0x32e1, &op_update,	  1,  14,   2, 0xff, 0x00, 0x00, 0x00}, // update b pi c 
	{0x33e1, &op_update,	  1,  14,   3, 0xff, 0x00, 0x00, 0x00}, // update b pi d 
	{0x34e1, &op_update,	  1,  14,   4, 0xff, 0x00, 0x00, 0x00}, // update b pi e 
	{0x35e1, &op_update,	  1,  14,   5, 0xff, 0x00, 0x00, 0x00}, // update b pi f 
	{0x36e1, &op_update,	  1,  14,   6, 0xff, 0x00, 0x00, 0x00}, // update b pi g 
	{0x37e1, &op_update,	  1,  14,   7, 0xff, 0x00, 0x00, 0x00}, // update b pi h 
	{0x38e1, &op_update,	  1,  14,   8, 0xff, 0x00, 0x00, 0x00}, // update b pi pc 
	{0x39e1, &op_update,	  1,  14,   9, 0xff, 0x00, 0x00, 0x00}, // update b pi ra 
	{0x3ae1, &op_update,	  1,  14,  10, 0xff, 0x00, 0x00, 0x00}, // update b pi sb 
	{0x3be1, &op_update,	  1,  14,  11, 0xff, 0x00, 0x00, 0x00}, // update b pi sp 
	{0x3ce1, &op_update,	  1,  14,  12, 0xff, 0x00, 0x00, 0x00}, // update b pi db 
	{0x3de1, &op_update,	  1,  14,  13, 0xff, 0x00, 0x00, 0x00}, // update b pi cb 
	{0x3ee1, &op_update,	  1,  14,  14, 0xff, 0x00, 0x00, 0x00}, // update b pi pi 
	{0x3fe1, &op_update,	  1,  14,   8, 0xff, 0x00, 0x04, 0x00}, // update b pi <literal> 
	{0x30f1, &op_update,	  1,  15,   0, 0xff, 0x00, 0x00, 0x00}, // update b status a 
	{0x31f1, &op_update,	  1,  15,   1, 0xff, 0x00, 0x00, 0x00}, // update b status b 
	{0x32f1, &op_update,	  1,  15,   2, 0xff, 0x00, 0x00, 0x00}, // update b status c 
	{0x33f1, &op_update,	  1,  15,   3, 0xff, 0x00, 0x00, 0x00}, // update b status d 
	{0x34f1, &op_update,	  1,  15,   4, 0xff, 0x00, 0x00, 0x00}, // update b status e 
	{0x35f1, &op_update,	  1,  15,   5, 0xff, 0x00, 0x00, 0x00}, // update b status f 
	{0x36f1, &op_update,	  1,  15,   6, 0xff, 0x00, 0x00, 0x00}, // update b status g 
	{0x37f1, &op_update,	  1,  15,   7, 0xff, 0x00, 0x00, 0x00}, // update b status h 
	{0x38f1, &op_update,	  1,  15,   8, 0xff, 0x00, 0x00, 0x00}, // update b status pc 
	{0x39f1, &op_update,	  1,  15,   9, 0xff, 0x00, 0x00, 0x00}, // update b status ra 
	{0x3af1, &op_update,	  1,  15,  10, 0xff, 0x00, 0x00, 0x00}, // update b status sb 
	{0x3bf1, &op_update,	  1,  15,  11, 0xff, 0x00, 0x00, 0x00}, // update b status sp 
	{0x3cf1, &op_update,	  1,  15,  12, 0xff, 0x00, 0x00, 0x00}, // update b status db 
	{0x3df1, &op_update,	  1,  15,  13, 0xff, 0x00, 0x00, 0x00}, // update b status cb 
	{0x3ef1, &op_update,	  1,  15,  14, 0xff, 0x00, 0x00, 0x00}, // update b status pi 
	{0x3ff1, &op_update,	  1,  15,   8, 0xff, 0x00, 0x04, 0x00}, // update b status <literal> 
	{0x3002, &op_update,	  2,   0,   0, 0xff, 0x00, 0x00, 0x00}, // update c a a 
	{0x3102, &op_update,	  2,   0,   1, 0xff, 0x00, 0x00, 0x00}, // update c a b 
	{0x3202, &op_update,	  2,   0,   2, 0xff, 0x00, 0x00, 0x00}, // update c a c 
	{0x3302, &op_update,	  2,   0,   3, 0xff, 0x00, 0x00, 0x00}, // update c a d 
	{0x3402, &op_update,	  2,   0,   4, 0xff, 0x00, 0x00, 0x00}, // update c a e 
	{0x3502, &op_update,	  2,   0,   5, 0xff, 0x00, 0x00, 0x00}, // update c a f 
	{0x3602, &op_update,	  2,   0,   6, 0xff, 0x00, 0x00, 0x00}, // update c a g 
	{0x3702, &op_update,	  2,   0,   7, 0xff, 0x00, 0x00, 0x00}, // update c a h 
	{0x3802, &op_update,	  2,   0,   8, 0xff, 0x00, 0x00, 0x00}, // update c a pc 
	{0x3902, &op_update,	  2,   0,   9, 0xff, 0x00, 0x00, 0x00}, // update c a ra 
	{0x3a02, &op_update,	  2,   0,  10, 0xff, 0x00, 0x00, 0x00}, // update c a sb 
	{0x3b02, &op_update,	  2,   0,  11, 0xff, 0x00, 0x00, 0x00}, // update c a sp 
	{0x3c02, &op_update,	  2,   0,  12, 0xff, 0x00, 0x00, 0x00}, // update c a db 
	{0x3d02, &op_update,	  2,   0,  13, 0xff, 0x00, 0x00, 0x00}, // update c a cb 
	{0x3e02, &op_update,	  2,   0,  14, 0xff, 0x00, 0x00, 0x00}, // update c a pi 
	{0x3f02, &op_update,	  2,   0,   8, 0xff, 0x00, 0x04, 0x00}, // update c a <literal> 
	{0x3012, &op_update,	  2,   1,   0, 0xff, 0x00, 0x00, 0x00}, // update c b a 
	{0x3112, &op_update,	  2,   1,   1, 0xff, 0x00, 0x00, 0x00}, // update c b b 
	{0x3212, &op_update,	  2,   1,   2, 0xff, 0x00, 0x00, 0x00}, // update c b c 
	{0x3312, &op_update,	  2,   1,   3, 0xff, 0x00, 0x00, 0x00}, // update c b d 
	{0x3412, &op_update,	  2,   1,   4, 0xff, 0x00, 0x00, 0x00}, // update c b e 
	{0x3512, &op_update,	  2,   1,   5, 0xff, 0x00, 0x00, 0x00}, // update c b f 
	{0x3612, &op_update,	  2,   1,   6, 0xff, 0x00, 0x00, 0x00}, // update c b g 
	{0x3712, &op_update,	  2,   1,   7, 0xff, 0x00, 0x00, 0x00}, // update c b h 
	{0x3812, &op_update,	  2,   1,   8, 0xff, 0x00, 0x00, 0x00}, // update c b pc 
	{0x3912, &op_update,	  2,   1,   9, 0xff, 0x00, 0x00, 0x00}, // update c b ra 
	{0x3a12, &op_update,	  2,   1,  10, 0xff, 0x00, 0x00, 0x00}, // update c b sb 
	{0x3b12, &op_update,	  2,   1,  11, 0xff, 0x00, 0x00, 0x00}, // update c b sp 
	{0x3c12, &op_update,	  2,   1,  12, 0xff, 0x00, 0x00, 0x00}, // update c b db 
	{0x3d12, &op_update,	  2,   1,  13, 0xff, 0x00, 0x00, 0x00}, // update c b cb 
	{0x3e12, &op_update,	  2,   1,  14, 0xff, 0x00, 0x00, 0x00}, // update c b pi 
	{0x3f12, &op_update,	  2,   1,   8, 0xff, 0x00, 0x04, 0x00}, // update c b <literal> 
	{0x3022, &op_update,	  2,   2,   0, 0xff, 0x00, 0x00, 0x00}, // update c c a 
	{0x3122, &op_update,	  2,   2,   1, 0xff, 0x00, 0x00, 0x00}, // update c c b 
	{0x3222, &op_update,	  2,   2,   2, 0xff, 0x00, 0x00, 0x00}, // update c c c 
	{0x3322, &op_update,	  2,   2,   3, 0xff, 0x00, 0x00, 0x00}, // update c c d 
	{0x3422, &op_update,	  2,   2,   4, 0xff, 0x00, 0x00, 0x00}, // update c c e 
	{0x3522, &op_update,	  2,   2,   5, 0xff, 0x00, 0x00, 0x00}, // update c c f 
	{0x3622, &op_update,	  2,   2,   6, 0xff, 0x00, 0x00, 0x00}, // update c c g 
	{0x3722, &op_update,	  2,   2,   7, 0xff, 0x00, 0x00, 0x00}, // update c c h 
	{0x3822, &op_update,	  2,   2,   8, 0xff, 0x00, 0x00, 0x00}, // update c c pc 
	{0x3922, &op_update,	  2,   2,   9, 0xff, 0x00, 0x00, 0x00}, // update c c ra 
	{0x3a22, &op_update,	  2,   2,  10, 0xff, 0x00, 0x00, 0x00}, // update c c sb 
	{0x3b22, &op_update,	  2,   2,  11, 0xff, 0x00, 0x00, 0x00}, // update c c sp 
	{0x3c22, &op_update,	  2,   2,  12, 0xff, 0x00, 0x00, 0x00}, // update c c db 
	{0x3d22, &op_update,	  2,   2,  13, 0xff, 0x00, 0x00, 0x00}, // update c c cb 
	{0x3e22, &op_update,	  2,   2,  14, 0xff, 0x00, 0x00, 0x00}, // update c c pi 
	{0x3f22, &op_update,	  2,   2,   8, 0xff, 0x00, 0x04, 0x00}, // update c c <literal> 
	{0x3032, &op_update,	  2,   3,   0, 0xff, 0x00, 0x00, 0x00}, // update c d a 
	{0x3132, &op_update,	  2,   3,   1, 0xff, 0x00, 0x00, 0x00}, // update c d b 
	{0x3232, &op_update,	  2,   3,   2, 0xff, 0x00, 0x00, 0x00}, // update c d c 
	{0x3332, &op_update,	  2,   3,   3, 0xff, 0x00, 0x00, 0x00}, // update c d d 
	{0x3432, &op_update,	  2,   3,   4, 0xff, 0x00, 0x00, 0x00}, // update c d e 
	{0x3532, &op_update,	  2,   3,   5, 0xff, 0x00, 0x00, 0x00}, // update c d f 
	{0x3632, &op_update,	  2,   3,   6, 0xff, 0x00, 0x00, 0x00}, // update c d g 
	{0x3732, &op_update,	  2,   3,   7, 0xff, 0x00, 0x00, 0x00}, // update c d h 
	{0x3832, &op_update,	  2,   3,   8, 0xff, 0x00, 0x00, 0x00}, // update c d pc 
	{0x3932, &op_update,	  2,   3,   9, 0xff, 0x00, 0x00, 0x00}, // update c d ra 
	{0x3a32, &op_update,	  2,   3,  10, 0xff, 0x00, 0x00, 0x00}, // update c d sb 
	{0x3b32, &op_update,	  2,   3,  11, 0xff, 0x00, 0x00, 0x00}, // update c d sp 
	{0x3c32, &op_update,	  2,   3,  12, 0xff, 0x00, 0x00, 0x00}, // update c d db 
	{0x3d32, &op_update,	  2,   3,  13, 0xff, 0x00, 0x00, 0x00}, // update c d cb 
	{0x3e32, &op_update,	  2,   3,  14, 0xff, 0x00, 0x00, 0x00}, // update c d pi 
	{0x3f32, &op_update,	  2,   3,   8, 0xff, 0x00, 0x04, 0x00}, // update c d <literal> 
	{0x3042, &op_update,	  2,   4,   0, 0xff, 0x00, 0x00, 0x00}, // update c e a 
	{0x3142, &op_update,	  2,   4,   1, 0xff, 0x00, 0x00, 0x00}, // update c e b 
	{0x3242, &op_update,	  2,   4,   2, 0xff, 0x00, 0x00, 0x00}, // update c e c 
	{0x3342, &op_update,	  2,   4,   3, 0xff, 0x00, 0x00, 0x00}, // update c e d 
	{0x3442, &op_update,	  2,   4,   4, 0xff, 0x00, 0x00, 0x00}, // update c e e 
	{0x3542, &op_update,	  2,   4,   5, 0xff, 0x00, 0x00, 0x00}, // update c e f 
	{0x3642, &op_update,	  2,   4,   6, 0xff, 0x00, 0x00, 0x00}, // update c e g 
	{0x3742, &op_update,	  2,   4,   7, 0xff, 0x00, 0x00, 0x00}, // update c e h 
	{0x3842, &op_update,	  2,   4,   8, 0xff, 0x00, 0x00, 0x00}, // update c e pc 
	{0x3942, &op_update,	  2,   4,   9, 0xff, 0x00, 0x00, 0x00}, // update c e ra 
	{0x3a42, &op_update,	  2,   4,  10, 0xff, 0x00, 0x00, 0x00}, // update c e sb 
	{0x3b42, &op_update,	  2,   4,  11, 0xff, 0x00, 0x00, 0x00}, // update c e sp 
	{0x3c42, &op_update,	  2,   4,  12, 0xff, 0x00, 0x00, 0x00}, // update c e db 
	{0x3d42, &op_update,	  2,   4,  13, 0xff, 0x00, 0x00, 0x00}, // update c e cb 
	{0x3e42, &op_update,	  2,   4,  14, 0xff, 0x00, 0x00, 0x00}, // update c e pi 
	{0x3f42, &op_update,	  2,   4,   8, 0xff, 0x00, 0x04, 0x00}, // update c e <literal> 
	{0x3052, &op_update,	  2,   5,   0, 0xff, 0x00, 0x00, 0x00}, // update c f a 
	{0x3152, &op_update,	  2,   5,   1, 0xff, 0x00, 0x00, 0x00}, // update c f b 
	{0x3252, &op_update,	  2,   5,   2, 0xff, 0x00, 0x00, 0x00}, // update c f c 
	{0x3352, &op_update,	  2,   5,   3, 0xff, 0x00, 0x00, 0x00}, // update c f d 
	{0x3452, &op_update,	  2,   5,   4, 0xff, 0x00, 0x00, 0x00}, // update c f e 
	{0x3552, &op_update,	  2,   5,   5, 0xff, 0x00, 0x00, 0x00}, // update c f f 
	{0x3652, &op_update,	  2,   5,   6, 0xff, 0x00, 0x00, 0x00}, // update c f g 
	{0x3752, &op_update,	  2,   5,   7, 0xff, 0x00, 0x00, 0x00}, // update c f h 
	{0x3852, &op_update,	  2,   5,   8, 0xff, 0x00, 0x00, 0x00}, // update c f pc 
	{0x3952, &op_update,	  2,   5,   9, 0xff, 0x00, 0x00, 0x00}, // update c f ra 
	{0x3a52, &op_update,	  2,   5,  10, 0xff, 0x00, 0x00, 0x00}, // update c f sb 
	{0x3b52, &op_update,	  2,   5,  11, 0xff, 0x00, 0x00, 0x00}, // update c f sp 
	{0x3c52, &op_update,	  2,   5,  12, 0xff, 0x00, 0x00, 0x00}, // update c f db 
	{0x3d52, &op_update,	  2,   5,  13, 0xff, 0x00, 0x00, 0x00}, // update c f cb 
	{0x3e52, &op_update,	  2,   5,  14, 0xff, 0x00, 0x00, 0x00}, // update c f pi 
	{0x3f52, &op_update,	  2,   5,   8, 0xff, 0x00, 0x04, 0x00}, // update c f <literal> 
	{0x3062, &op_update,	  2,   6,   0, 0xff, 0x00, 0x00, 0x00}, // update c g a 
	{0x3162, &op_update,	  2,   6,   1, 0xff, 0x00, 0x00, 0x00}, // update c g b 
	{0x3262, &op_update,	  2,   6,   2, 0xff, 0x00, 0x00, 0x00}, // update c g c 
	{0x3362, &op_update,	  2,   6,   3, 0xff, 0x00, 0x00, 0x00}, // update c g d 
	{0x3462, &op_update,	  2,   6,   4, 0xff, 0x00, 0x00, 0x00}, // update c g e 
	{0x3562, &op_update,	  2,   6,   5, 0xff, 0x00, 0x00, 0x00}, // update c g f 
	{0x3662, &op_update,	  2,   6,   6, 0xff, 0x00, 0x00, 0x00}, // update c g g 
	{0x3762, &op_update,	  2,   6,   7, 0xff, 0x00, 0x00, 0x00}, // update c g h 
	{0x3862, &op_update,	  2,   6,   8, 0xff, 0x00, 0x00, 0x00}, // update c g pc 
	{0x3962, &op_update,	  2,   6,   9, 0xff, 0x00, 0x00, 0x00}, // update c g ra 
	{0x3a62, &op_update,	  2,   6,  10, 0xff, 0x00, 0x00, 0x00}, // update c g sb 
	{0x3b62, &op_update,	  2,   6,  11, 0xff, 0x00, 0x00, 0x00}, // update c g sp 
	{0x3c62, &op_update,	  2,   6,  12, 0xff, 0x00, 0x00, 0x00}, // update c g db 
	{0x3d62, &op_update,	  2,   6,  13, 0xff, 0x00, 0x00, 0x00}, // update c g cb 
	{0x3e62, &op_update,	  2,   6,  14, 0xff, 0x00, 0x00, 0x00}, // update c g pi 
	{0x3f62, &op_update,	  2,   6,   8, 0xff, 0x00, 0x04, 0x00}, // update c g <literal> 
	{0x3072, &op_update,	  2,   7,   0, 0xff, 0x00, 0x00, 0x00}, // update c h a 
	{0x3172, &op_update,	  2,   7,   1, 0xff, 0x00, 0x00, 0x00}, // update c h b 
	{0x3272, &op_update,	  2,   7,   2, 0xff, 0x00, 0x00, 0x00}, // update c h c 
	{0x3372, &op_update,	  2,   7,   3, 0xff, 0x00, 0x00, 0x00}, // update c h d 
	{0x3472, &op_update,	  2,   7,   4, 0xff, 0x00, 0x00, 0x00}, // update c h e 
	{0x3572, &op_update,	  2,   7,   5, 0xff, 0x00, 0x00, 0x00}, // update c h f 
	{0x3672, &op_update,	  2,   7,   6, 0xff, 0x00, 0x00, 0x00}, // update c h g 
	{0x3772, &op_update,	  2,   7,   7, 0xff, 0x00, 0x00, 0x00}, // update c h h 
	{0x3872, &op_update,	  2,   7,   8, 0xff, 0x00, 0x00, 0x00}, // update c h pc 
	{0x3972, &op_update,	  2,   7,   9, 0xff, 0x00, 0x00, 0x00}, // update c h ra 
	{0x3a72, &op_update,	  2,   7,  10, 0xff, 0x00, 0x00, 0x00}, // update c h sb 
	{0x3b72, &op_update,	  2,   7,  11, 0xff, 0x00, 0x00, 0x00}, // update c h sp 
	{0x3c72, &op_update,	  2,   7,  12, 0xff, 0x00, 0x00, 0x00}, // update c h db 
	{0x3d72, &op_update,	  2,   7,  13, 0xff, 0x00, 0x00, 0x00}, // update c h cb 
	{0x3e72, &op_update,	  2,   7,  14, 0xff, 0x00, 0x00, 0x00}, // update c h pi 
	{0x3f72, &op_update,	  2,   7,   8, 0xff, 0x00, 0x04, 0x00}, // update c h <literal> 
	{0x3082, &op_update,	  2,   8,   0, 0xff, 0x00, 0x00, 0x00}, // update c pc a 
	{0x3182, &op_update,	  2,   8,   1, 0xff, 0x00, 0x00, 0x00}, // update c pc b 
	{0x3282, &op_update,	  2,   8,   2, 0xff, 0x00, 0x00, 0x00}, // update c pc c 
	{0x3382, &op_update,	  2,   8,   3, 0xff, 0x00, 0x00, 0x00}, // update c pc d 
	{0x3482, &op_update,	  2,   8,   4, 0xff, 0x00, 0x00, 0x00}, // update c pc e 
	{0x3582, &op_update,	  2,   8,   5, 0xff, 0x00, 0x00, 0x00}, // update c pc f 
	{0x3682, &op_update,	  2,   8,   6, 0xff, 0x00, 0x00, 0x00}, // update c pc g 
	{0x3782, &op_update,	  2,   8,   7, 0xff, 0x00, 0x00, 0x00}, // update c pc h 
	{0x3882, &op_update,	  2,   8,   8, 0xff, 0x00, 0x00, 0x00}, // update c pc pc 
	{0x3982, &op_update,	  2,   8,   9, 0xff, 0x00, 0x00, 0x00}, // update c pc ra 
	{0x3a82, &op_update,	  2,   8,  10, 0xff, 0x00, 0x00, 0x00}, // update c pc sb 
	{0x3b82, &op_update,	  2,   8,  11, 0xff, 0x00, 0x00, 0x00}, // update c pc sp 
	{0x3c82, &op_update,	  2,   8,  12, 0xff, 0x00, 0x00, 0x00}, // update c pc db 
	{0x3d82, &op_update,	  2,   8,  13, 0xff, 0x00, 0x00, 0x00}, // update c pc cb 
	{0x3e82, &op_update,	  2,   8,  14, 0xff, 0x00, 0x00, 0x00}, // update c pc pi 
	{0x3f82, &op_update,	  2,   8,   8, 0xff, 0x00, 0x04, 0x00}, // update c pc <literal> 
	{0x3092, &op_update,	  2,   9,   0, 0xff, 0x00, 0x00, 0x00}, // update c ra a 
	{0x3192, &op_update,	  2,   9,   1, 0xff, 0x00, 0x00, 0x00}, // update c ra b 
	{0x3292, &op_update,	  2,   9,   2, 0xff, 0x00, 0x00, 0x00}, // update c ra c 
	{0x3392, &op_update,	  2,   9,   3, 0xff, 0x00, 0x00, 0x00}, // update c ra d 
	{0x3492, &op_update,	  2,   9,   4, 0xff, 0x00, 0x00, 0x00}, // update c ra e 
	{0x3592, &op_update,	  2,   9,   5, 0xff, 0x00, 0x00, 0x00}, // update c ra f 
	{0x3692, &op_update,	  2,   9,   6, 0xff, 0x00, 0x00, 0x00}, // update c ra g 
	{0x3792, &op_update,	  2,   9,   7, 0xff, 0x00, 0x00, 0x00}, // update c ra h 
	{0x3892, &op_update,	  2,   9,   8, 0xff, 0x00, 0x00, 0x00}, // update c ra pc 
	{0x3992, &op_update,	  2,   9,   9, 0xff, 0x00, 0x00, 0x00}, // update c ra ra 
	{0x3a92, &op_update,	  2,   9,  10, 0xff, 0x00, 0x00, 0x00}, // update c ra sb 
	{0x3b92, &op_update,	  2,   9,  11, 0xff, 0x00, 0x00, 0x00}, // update c ra sp 
	{0x3c92, &op_update,	  2,   9,  12, 0xff, 0x00, 0x00, 0x00}, // update c ra db 
	{0x3d92, &op_update,	  2,   9,  13, 0xff, 0x00, 0x00, 0x00}, // update c ra cb 
	{0x3e92, &op_update,	  2,   9,  14, 0xff, 0x00, 0x00, 0x00}, // update c ra pi 
	{0x3f92, &op_update,	  2,   9,   8, 0xff, 0x00, 0x04, 0x00}, // update c ra <literal> 
	{0x30a2, &op_update,	  2,  10,   0, 0xff, 0x00, 0x00, 0x00}, // update c sb a 
	{0x31a2, &op_update,	  2,  10,   1, 0xff, 0x00, 0x00, 0x00}, // update c sb b 
	{0x32a2, &op_update,	  2,  10,   2, 0xff, 0x00, 0x00, 0x00}, // update c sb c 
	{0x33a2, &op_update,	  2,  10,   3, 0xff, 0x00, 0x00, 0x00}, // update c sb d 
	{0x34a2, &op_update,	  2,  10,   4, 0xff, 0x00, 0x00, 0x00}, // update c sb e 
	{0x35a2, &op_update,	  2,  10,   5, 0xff, 0x00, 0x00, 0x00}, // update c sb f 
	{0x36a2, &op_update,	  2,  10,   6, 0xff, 0x00, 0x00, 0x00}, // update c sb g 
	{0x37a2, &op_update,	  2,  10,   7, 0xff, 0x00, 0x00, 0x00}, // update c sb h 
	{0x38a2, &op_update,	  2,  10,   8, 0xff, 0x00, 0x00, 0x00}, // update c sb pc 
	{0x39a2, &op_update,	  2,  10,   9, 0xff, 0x00, 0x00, 0x00}, // update c sb ra 
	{0x3aa2, &op_update,	  2,  10,  10, 0xff, 0x00, 0x00, 0x00}, // update c sb sb 
	{0x3ba2, &op_update,	  2,  10,  11, 0xff, 0x00, 0x00, 0x00}, // update c sb sp 
	{0x3ca2, &op_update,	  2,  10,  12, 0xff, 0x00, 0x00, 0x00}, // update c sb db 
	{0x3da2, &op_update,	  2,  10,  13, 0xff, 0x00, 0x00, 0x00}, // update c sb cb 
	{0x3ea2, &op_update,	  2,  10,  14, 0xff, 0x00, 0x00, 0x00}, // update c sb pi 
	{0x3fa2, &op_update,	  2,  10,   8, 0xff, 0x00, 0x04, 0x00}, // update c sb <literal> 
	{0x30b2, &op_update,	  2,  11,   0, 0xff, 0x00, 0x00, 0x00}, // update c sp a 
	{0x31b2, &op_update,	  2,  11,   1, 0xff, 0x00, 0x00, 0x00}, // update c sp b 
	{0x32b2, &op_update,	  2,  11,   2, 0xff, 0x00, 0x00, 0x00}, // update c sp c 
	{0x33b2, &op_update,	  2,  11,   3, 0xff, 0x00, 0x00, 0x00}, // update c sp d 
	{0x34b2, &op_update,	  2,  11,   4, 0xff, 0x00, 0x00, 0x00}, // update c sp e 
	{0x35b2, &op_update,	  2,  11,   5, 0xff, 0x00, 0x00, 0x00}, // update c sp f 
	{0x36b2, &op_update,	  2,  11,   6, 0xff, 0x00, 0x00, 0x00}, // update c sp g 
	{0x37b2, &op_update,	  2,  11,   7, 0xff, 0x00, 0x00, 0x00}, // update c sp h 
	{0x38b2, &op_update,	  2,  11,   8, 0xff, 0x00, 0x00, 0x00}, // update c sp pc 
	{0x39b2, &op_update,	  2,  11,   9, 0xff, 0x00, 0x00, 0x00}, // update c sp ra 
	{0x3ab2, &op_update,	  2,  11,  10, 0xff, 0x00, 0x00, 0x00}, // update c sp sb 
	{0x3bb2, &op_update,	  2,  11,  11, 0xff, 0x00, 0x00, 0x00}, // update c sp sp 
	{0x3cb2, &op_update,	  2,  11,  12, 0xff, 0x00, 0x00, 0x00}, // update c sp db 
	{0x3db2, &op_update,	  2,  11,  13, 0xff, 0x00, 0x00, 0x00}, // update c sp cb 
	{0x3eb2, &op_update,	  2,  11,  14, 0xff, 0x00, 0x00, 0x00}, // update c sp pi 
	{0x3fb2, &op_update,	  2,  11,   8, 0xff, 0x00, 0x04, 0x00}, // update c sp <literal> 
	{0x30c2, &op_update,	  2,  12,   0, 0xff, 0x00, 0x00, 0x00}, // update c db a 
	{0x31c2, &op_update,	  2,  12,   1, 0xff, 0x00, 0x00, 0x00}, // update c db b 
	{0x32c2, &op_update,	  2,  12,   2, 0xff, 0x00, 0x00, 0x00}, // update c db c 
	{0x33c2, &op_update,	  2,  12,   3, 0xff, 0x00, 0x00, 0x00}, // update c db d 
	{0x34c2, &op_update,	  2,  12,   4, 0xff, 0x00, 0x00, 0x00}, // update c db e 
	{0x35c2, &op_update,	  2,  12,   5, 0xff, 0x00, 0x00, 0x00}, // update c db f 
	{0x36c2, &op_update,	  2,  12,   6, 0xff, 0x00, 0x00, 0x00}, // update c db g 
	{0x37c2, &op_update,	  2,  12,   7, 0xff, 0x00, 0x00, 0x00}, // update c db h 
	{0x38c2, &op_update,	  2,  12,   8, 0xff, 0x00, 0x00, 0x00}, // update c db pc 
	{0x39c2, &op_update,	  2,  12,   9, 0xff, 0x00, 0x00, 0x00}, // update c db ra 
	{0x3ac2, &op_update,	  2,  12,  10, 0xff, 0x00, 0x00, 0x00}, // update c db sb 
	{0x3bc2, &op_update,	  2,  12,  11, 0xff, 0x00, 0x00, 0x00}, // update c db sp 
	{0x3cc2, &op_update,	  2,  12,  12, 0xff, 0x00, 0x00, 0x00}, // update c db db 
	{0x3dc2, &op_update,	  2,  12,  13, 0xff, 0x00, 0x00, 0x00}, // update c db cb 
	{0x3ec2, &op_update,	  2,  12,  14, 0xff, 0x00, 0x00, 0x00}, // update c db pi 
	{0x3fc2, &op_update,	  2,  12,   8, 0xff, 0x00, 0x04, 0x00}, // update c db <literal> 
	{0x30d2, &op_update,	  2,  13,   0, 0xff, 0x00, 0x00, 0x00}, // update c cb a 
	{0x31d2, &op_update,	  2,  13,   1, 0xff, 0x00, 0x00, 0x00}, // update c cb b 
	{0x32d2, &op_update,	  2,  13,   2, 0xff, 0x00, 0x00, 0x00}, // update c cb c 
	{0x33d2, &op_update,	  2,  13,   3, 0xff, 0x00, 0x00, 0x00}, // update c cb d 
	{0x34d2, &op_update,	  2,  13,   4, 0xff, 0x00, 0x00, 0x00}, // update c cb e 
	{0x35d2, &op_update,	  2,  13,   5, 0xff, 0x00, 0x00, 0x00}, // update c cb f 
	{0x36d2, &op_update,	  2,  13,   6, 0xff, 0x00, 0x00, 0x00}, // update c cb g 
	{0x37d2, &op_update,	  2,  13,   7, 0xff, 0x00, 0x00, 0x00}, // update c cb h 
	{0x38d2, &op_update,	  2,  13,   8, 0xff, 0x00, 0x00, 0x00}, // update c cb pc 
	{0x39d2, &op_update,	  2,  13,   9, 0xff, 0x00, 0x00, 0x00}, // update c cb ra 
	{0x3ad2, &op_update,	  2,  13,  10, 0xff, 0x00, 0x00, 0x00}, // update c cb sb 
	{0x3bd2, &op_update,	  2,  13,  11, 0xff, 0x00, 0x00, 0x00}, // update c cb sp 
	{0x3cd2, &op_update,	  2,  13,  12, 0xff, 0x00, 0x00, 0x00}, // update c cb db 
	{0x3dd2, &op_update,	  2,  13,  13, 0xff, 0x00, 0x00, 0x00}, // update c cb cb 
	{0x3ed2, &op_update,	  2,  13,  14, 0xff, 0x00, 0x00, 0x00}, // update c cb pi 
	{0x3fd2, &op_update,	  2,  13,   8, 0xff, 0x00, 0x04, 0x00}, // update c cb <literal> 
	{0x30e2, &op_update,	  2,  14,   0, 0xff, 0x00, 0x00, 0x00}, // update c pi a 
	{0x31e2, &op_update,	  2,  14,   1, 0xff, 0x00, 0x00, 0x00}, // update c pi b 
	{0x32e2, &op_update,	  2,  14,   2, 0xff, 0x00, 0x00, 0x00}, // update c pi c 
	{0x33e2, &op_update,	  2,  14,   3, 0xff, 0x00, 0x00, 0x00}, // update c pi d 
	{0x34e2, &op_update,	  2,  14,   4, 0xff, 0x00, 0x00, 0x00}, // update c pi e 
	{0x35e2, &op_update,	  2,  14,   5, 0xff, 0x00, 0x00, 0x00}, // update c pi f 
	{0x36e2, &op_update,	  2,  14,   6, 0xff, 0x00, 0x00, 0x00}, // update c pi g 
	{0x37e2, &op_update,	  2,  14,   7, 0xff, 0x00, 0x00, 0x00}, // update c pi h 
	{0x38e2, &op_update,	  2,  14,   8, 0xff, 0x00, 0x00, 0x00}, // update c pi pc 
	{0x39e2, &op_update,	  2,  14,   9, 0xff, 0x00, 0x00, 0x00}, // update c pi ra 
	{0x3ae2, &op_update,	  2,  14,  10, 0xff, 0x00, 0x00, 0x00}, // update c pi sb 
	{0x3be2, &op_update,	  2,  14,  11, 0xff, 0x00, 0x00, 0x00}, // update c pi sp 
	{0x3ce2, &op_update,	  2,  14,  12, 0xff, 0x00, 0x00, 0x00}, // update c pi db 
	{0x3de2, &op_update,	  2,  14,  13, 0xff, 0x00, 0x00, 0x00}, // update c pi cb 
	{0x3ee2, &op_update,	  2,  14,  14, 0xff, 0x00, 0x00, 0x00}, // update c pi pi 
	{0x3fe2, &op_update,	  2,  14,   8, 0xff, 0x00, 0x04, 0x00}, // update c pi <literal> 
	{0x30f2, &op_update,	  2,  15,   0, 0xff, 0x00, 0x00, 0x00}, // update c status a 
	{0x31f2, &op_update,	  2,  15,   1, 0xff, 0x00, 0x00, 0x00}, // update c status b 
	{0x32f2, &op_update,	  2,  15,   2, 0xff, 0x00, 0x00, 0x00}, // update c status c 
	{0x33f2, &op_update,	  2,  15,   3, 0xff, 0x00, 0x00, 0x00}, // update c status d 
	{0x34f2, &op_update,	  2,  15,   4, 0xff, 0x00, 0x00, 0x00}, // update c status e 
	{0x35f2, &op_update,	  2,  15,   5, 0xff, 0x00, 0x00, 0x00}, // update c status f 
	{0x36f2, &op_update,	  2,  15,   6, 0xff, 0x00, 0x00, 0x00}, // update c status g 
	{0x37f2, &op_update,	  2,  15,   7, 0xff, 0x00, 0x00, 0x00}, // update c status h 
	{0x38f2, &op_update,	  2,  15,   8, 0xff, 0x00, 0x00, 0x00}, // update c status pc 
	{0x39f2, &op_update,	  2,  15,   9, 0xff, 0x00, 0x00, 0x00}, // update c status ra 
	{0x3af2, &op_update,	  2,  15,  10, 0xff, 0x00, 0x00, 0x00}, // update c status sb 
	{0x3bf2, &op_update,	  2,  15,  11, 0xff, 0x00, 0x00, 0x00}, // update c status sp 
	{0x3cf2, &op_update,	  2,  15,  12, 0xff, 0x00, 0x00, 0x00}, // update c status db 
	{0x3df2, &op_update,	  2,  15,  13, 0xff, 0x00, 0x00, 0x00}, // update c status cb 
	{0x3ef2, &op_update,	  2,  15,  14, 0xff, 0x00, 0x00, 0x00}, // update c status pi 
	{0x3ff2, &op_update,	  2,  15,   8, 0xff, 0x00, 0x04, 0x00}, // update c status <literal> 
	{0x3003, &op_update,	  3,   0,   0, 0xff, 0x00, 0x00, 0x00}, // update d a a 
	{0x3103, &op_update,	  3,   0,   1, 0xff, 0x00, 0x00, 0x00}, // update d a b 
	{0x3203, &op_update,	  3,   0,   2, 0xff, 0x00, 0x00, 0x00}, // update d a c 
	{0x3303, &op_update,	  3,   0,   3, 0xff, 0x00, 0x00, 0x00}, // update d a d 
	{0x3403, &op_update,	  3,   0,   4, 0xff, 0x00, 0x00, 0x00}, // update d a e 
	{0x3503, &op_update,	  3,   0,   5, 0xff, 0x00, 0x00, 0x00}, // update d a f 
	{0x3603, &op_update,	  3,   0,   6, 0xff, 0x00, 0x00, 0x00}, // update d a g 
	{0x3703, &op_update,	  3,   0,   7, 0xff, 0x00, 0x00, 0x00}, // update d a h 
	{0x3803, &op_update,	  3,   0,   8, 0xff, 0x00, 0x00, 0x00}, // update d a pc 
	{0x3903, &op_update,	  3,   0,   9, 0xff, 0x00, 0x00, 0x00}, // update d a ra 
	{0x3a03, &op_update,	  3,   0,  10, 0xff, 0x00, 0x00, 0x00}, // update d a sb 
	{0x3b03, &op_update,	  3,   0,  11, 0xff, 0x00, 0x00, 0x00}, // update d a sp 
	{0x3c03, &op_update,	  3,   0,  12, 0xff, 0x00, 0x00, 0x00}, // update d a db 
	{0x3d03, &op_update,	  3,   0,  13, 0xff, 0x00, 0x00, 0x00}, // update d a cb 
	{0x3e03, &op_update,	  3,   0,  14, 0xff, 0x00, 0x00, 0x00}, // update d a pi 
	{0x3f03, &op_update,	  3,   0,   8, 0xff, 0x00, 0x04, 0x00}, // update d a <literal> 
	{0x3013, &op_update,	  3,   1,   0, 0xff, 0x00, 0x00, 0x00}, // update d b a 
	{0x3113, &op_update,	  3,   1,   1, 0xff, 0x00, 0x00, 0x00}, // update d b b 
	{0x3213, &op_update,	  3,   1,   2, 0xff, 0x00, 0x00, 0x00}, // update d b c 
	{0x3313, &op_update,	  3,   1,   3, 0xff, 0x00, 0x00, 0x00}, // update d b d 
	{0x3413, &op_update,	  3,   1,   4, 0xff, 0x00, 0x00, 0x00}, // update d b e 
	{0x3513, &op_update,	  3,   1,   5, 0xff, 0x00, 0x00, 0x00}, // update d b f 
	{0x3613, &op_update,	  3,   1,   6, 0xff, 0x00, 0x00, 0x00}, // update d b g 
	{0x3713, &op_update,	  3,   1,   7, 0xff, 0x00, 0x00, 0x00}, // update d b h 
	{0x3813, &op_update,	  3,   1,   8, 0xff, 0x00, 0x00, 0x00}, // update d b pc 
	{0x3913, &op_update,	  3,   1,   9, 0xff, 0x00, 0x00, 0x00}, // update d b ra 
	{0x3a13, &op_update,	  3,   1,  10, 0xff, 0x00, 0x00, 0x00}, // update d b sb 
	{0x3b13, &op_update,	  3,   1,  11, 0xff, 0x00, 0x00, 0x00}, // update d b sp 
	{0x3c13, &op_update,	  3,   1,  12, 0xff, 0x00, 0x00, 0x00}, // update d b db 
	{0x3d13, &op_update,	  3,   1,  13, 0xff, 0x00, 0x00, 0x00}, // update d b cb 
	{0x3e13, &op_update,	  3,   1,  14, 0xff, 0x00, 0x00, 0x00}, // update d b pi 
	{0x3f13, &op_update,	  3,   1,   8, 0xff, 0x00, 0x04, 0x00}, // update d b <literal> 
	{0x3023, &op_update,	  3,   2,   0, 0xff, 0x00, 0x00, 0x00}, // update d c a 
	{0x3123, &op_update,	  3,   2,   1, 0xff, 0x00, 0x00, 0x00}, // update d c b 
	{0x3223, &op_update,	  3,   2,   2, 0xff, 0x00, 0x00, 0x00}, // update d c c 
	{0x3323, &op_update,	  3,   2,   3, 0xff, 0x00, 0x00, 0x00}, // update d c d 
	{0x3423, &op_update,	  3,   2,   4, 0xff, 0x00, 0x00, 0x00}, // update d c e 
	{0x3523, &op_update,	  3,   2,   5, 0xff, 0x00, 0x00, 0x00}, // update d c f 
	{0x3623, &op_update,	  3,   2,   6, 0xff, 0x00, 0x00, 0x00}, // update d c g 
	{0x3723, &op_update,	  3,   2,   7, 0xff, 0x00, 0x00, 0x00}, // update d c h 
	{0x3823, &op_update,	  3,   2,   8, 0xff, 0x00, 0x00, 0x00}, // update d c pc 
	{0x3923, &op_update,	  3,   2,   9, 0xff, 0x00, 0x00, 0x00}, // update d c ra 
	{0x3a23, &op_update,	  3,   2,  10, 0xff, 0x00, 0x00, 0x00}, // update d c sb 
	{0x3b23, &op_update,	  3,   2,  11, 0xff, 0x00, 0x00, 0x00}, // update d c sp 
	{0x3c23, &op_update,	  3,   2,  12, 0xff, 0x00, 0x00, 0x00}, // update d c db 
	{0x3d23, &op_update,	  3,   2,  13, 0xff, 0x00, 0x00, 0x00}, // update d c cb 
	{0x3e23, &op_update,	  3,   2,  14, 0xff, 0x00, 0x00, 0x00}, // update d c pi 
	{0x3f23, &op_update,	  3,   2,   8, 0xff, 0x00, 0x04, 0x00}, // update d c <literal> 
	{0x3033, &op_update,	  3,   3,   0, 0xff, 0x00, 0x00, 0x00}, // update d d a 
	{0x3133, &op_update,	  3,   3,   1, 0xff, 0x00, 0x00, 0x00}, // update d d b 
	{0x3233, &op_update,	  3,   3,   2, 0xff, 0x00, 0x00, 0x00}, // update d d c 
	{0x3333, &op_update,	  3,   3,   3, 0xff, 0x00, 0x00, 0x00}, // update d d d 
	{0x3433, &op_update,	  3,   3,   4, 0xff, 0x00, 0x00, 0x00}, // update d d e 
	{0x3533, &op_update,	  3,   3,   5, 0xff, 0x00, 0x00, 0x00}, // update d d f 
	{0x3633, &op_update,	  3,   3,   6, 0xff, 0x00, 0x00, 0x00}, // update d d g 
	{0x3733, &op_update,	  3,   3,   7, 0xff, 0x00, 0x00, 0x00}, // update d d h 
	{0x3833, &op_update,	  3,   3,   8, 0xff, 0x00, 0x00, 0x00}, // update d d pc 
	{0x3933, &op_update,	  3,   3,   9, 0xff, 0x00, 0x00, 0x00}, // update d d ra 
	{0x3a33, &op_update,	  3,   3,  10, 0xff, 0x00, 0x00, 0x00}, // update d d sb 
	{0x3b33, &op_update,	  3,   3,  11, 0xff, 0x00, 0x00, 0x00}, // update d d sp 
	{0x3c33, &op_update,	  3,   3,  12, 0xff, 0x00, 0x00, 0x00}, // update d d db 
	{0x3d33, &op_update,	  3,   3,  13, 0xff, 0x00, 0x00, 0x00}, // update d d cb 
	{0x3e33, &op_update,	  3,   3,  14, 0xff, 0x00, 0x00, 0x00}, // update d d pi 
	{0x3f33, &op_update,	  3,   3,   8, 0xff, 0x00, 0x04, 0x00}, // update d d <literal> 
	{0x3043, &op_update,	  3,   4,   0, 0xff, 0x00, 0x00, 0x00}, // update d e a 
	{0x3143, &op_update,	  3,   4,   1, 0xff, 0x00, 0x00, 0x00}, // update d e b 
	{0x3243, &op_update,	  3,   4,   2, 0xff, 0x00, 0x00, 0x00}, // update d e c 
	{0x3343, &op_update,	  3,   4,   3, 0xff, 0x00, 0x00, 0x00}, // update d e d 
	{0x3443, &op_update,	  3,   4,   4, 0xff, 0x00, 0x00, 0x00}, // update d e e 
	{0x3543, &op_update,	  3,   4,   5, 0xff, 0x00, 0x00, 0x00}, // update d e f 
	{0x3643, &op_update,	  3,   4,   6, 0xff, 0x00, 0x00, 0x00}, // update d e g 
	{0x3743, &op_update,	  3,   4,   7, 0xff, 0x00, 0x00, 0x00}, // update d e h 
	{0x3843, &op_update,	  3,   4,   8, 0xff, 0x00, 0x00, 0x00}, // update d e pc 
	{0x3943, &op_update,	  3,   4,   9, 0xff, 0x00, 0x00, 0x00}, // update d e ra 
	{0x3a43, &op_update,	  3,   4,  10, 0xff, 0x00, 0x00, 0x00}, // update d e sb 
	{0x3b43, &op_update,	  3,   4,  11, 0xff, 0x00, 0x00, 0x00}, // update d e sp 
	{0x3c43, &op_update,	  3,   4,  12, 0xff, 0x00, 0x00, 0x00}, // update d e db 
	{0x3d43, &op_update,	  3,   4,  13, 0xff, 0x00, 0x00, 0x00}, // update d e cb 
	{0x3e43, &op_update,	  3,   4,  14, 0xff, 0x00, 0x00, 0x00}, // update d e pi 
	{0x3f43, &op_update,	  3,   4,   8, 0xff, 0x00, 0x04, 0x00}, // update d e <literal> 
	{0x3053, &op_update,	  3,   5,   0, 0xff, 0x00, 0x00, 0x00}, // update d f a 
	{0x3153, &op_update,	  3,   5,   1, 0xff, 0x00, 0x00, 0x00}, // update d f b 
	{0x3253, &op_update,	  3,   5,   2, 0xff, 0x00, 0x00, 0x00}, // update d f c 
	{0x3353, &op_update,	  3,   5,   3, 0xff, 0x00, 0x00, 0x00}, // update d f d 
	{0x3453, &op_update,	  3,   5,   4, 0xff, 0x00, 0x00, 0x00}, // update d f e 
	{0x3553, &op_update,	  3,   5,   5, 0xff, 0x00, 0x00, 0x00}, // update d f f 
	{0x3653, &op_update,	  3,   5,   6, 0xff, 0x00, 0x00, 0x00}, // update d f g 
	{0x3753, &op_update,	  3,   5,   7, 0xff, 0x00, 0x00, 0x00}, // update d f h 
	{0x3853, &op_update,	  3,   5,   8, 0xff, 0x00, 0x00, 0x00}, // update d f pc 
	{0x3953, &op_update,	  3,   5,   9, 0xff, 0x00, 0x00, 0x00}, // update d f ra 
	{0x3a53, &op_update,	  3,   5,  10, 0xff, 0x00, 0x00, 0x00}, // update d f sb 
	{0x3b53, &op_update,	  3,   5,  11, 0xff, 0x00, 0x00, 0x00}, // update d f sp 
	{0x3c53, &op_update,	  3,   5,  12, 0xff, 0x00, 0x00, 0x00}, // update d f db 
	{0x3d53, &op_update,	  3,   5,  13, 0xff, 0x00, 0x00, 0x00}, // update d f cb 
	{0x3e53, &op_update,	  3,   5,  14, 0xff, 0x00, 0x00, 0x00}, // update d f pi 
	{0x3f53, &op_update,	  3,   5,   8, 0xff, 0x00, 0x04, 0x00}, // update d f <literal> 
	{0x3063, &op_update,	  3,   6,   0, 0xff, 0x00, 0x00, 0x00}, // update d g a 
	{0x3163, &op_update,	  3,   6,   1, 0xff, 0x00, 0x00, 0x00}, // update d g b 
	{0x3263, &op_update,	  3,   6,   2, 0xff, 0x00, 0x00, 0x00}, // update d g c 
	{0x3363, &op_update,	  3,   6,   3, 0xff, 0x00, 0x00, 0x00}, // update d g d 
	{0x3463, &op_update,	  3,   6,   4, 0xff, 0x00, 0x00, 0x00}, // update d g e 
	{0x3563, &op_update,	  3,   6,   5, 0xff, 0x00, 0x00, 0x00}, // update d g f 
	{0x3663, &op_update,	  3,   6,   6, 0xff, 0x00, 0x00, 0x00}, // update d g g 
	{0x3763, &op_update,	  3,   6,   7, 0xff, 0x00, 0x00, 0x00}, // update d g h 
	{0x3863, &op_update,	  3,   6,   8, 0xff, 0x00, 0x00, 0x00}, // update d g pc 
	{0x3963, &op_update,	  3,   6,   9, 0xff, 0x00, 0x00, 0x00}, // update d g ra 
	{0x3a63, &op_update,	  3,   6,  10, 0xff, 0x00, 0x00, 0x00}, // update d g sb 
	{0x3b63, &op_update,	  3,   6,  11, 0xff, 0x00, 0x00, 0x00}, // update d g sp 
	{0x3c63, &op_update,	  3,   6,  12, 0xff, 0x00, 0x00, 0x00}, // update d g db 
	{0x3d63, &op_update,	  3,   6,  13, 0xff, 0x00, 0x00, 0x00}, // update d g cb 
	{0x3e63, &op_update,	  3,   6,  14, 0xff, 0x00, 0x00, 0x00}, // update d g pi 
	{0x3f63, &op_update,	  3,   6,   8, 0xff, 0x00, 0x04, 0x00}, // update d g <literal> 
	{0x3073, &op_update,	  3,   7,   0, 0xff, 0x00, 0x00, 0x00}, // update d h a 
	{0x3173, &op_update,	  3,   7,   1, 0xff, 0x00, 0x00, 0x00}, // update d h b 
	{0x3273, &op_update,	  3,   7,   2, 0xff, 0x00, 0x00, 0x00}, // update d h c 
	{0x3373, &op_update,	  3,   7,   3, 0xff, 0x00, 0x00, 0x00}, // update d h d 
	{0x3473, &op_update,	  3,   7,   4, 0xff, 0x00, 0x00, 0x00}, // update d h e 
	{0x3573, &op_update,	  3,   7,   5, 0xff, 0x00, 0x00, 0x00}, // update d h f 
	{0x3673, &op_update,	  3,   7,   6, 0xff, 0x00, 0x00, 0x00}, // update d h g 
	{0x3773, &op_update,	  3,   7,   7, 0xff, 0x00, 0x00, 0x00}, // update d h h 
	{0x3873, &op_update,	  3,   7,   8, 0xff, 0x00, 0x00, 0x00}, // update d h pc 
	{0x3973, &op_update,	  3,   7,   9, 0xff, 0x00, 0x00, 0x00}, // update d h ra 
	{0x3a73, &op_update,	  3,   7,  10, 0xff, 0x00, 0x00, 0x00}, // update d h sb 
	{0x3b73, &op_update,	  3,   7,  11, 0xff, 0x00, 0x00, 0x00}, // update d h sp 
	{0x3c73, &op_update,	  3,   7,  12, 0xff, 0x00, 0x00, 0x00}, // update d h db 
	{0x3d73, &op_update,	  3,   7,  13, 0xff, 0x00, 0x00, 0x00}, // update d h cb 
	{0x3e73, &op_update,	  3,   7,  14, 0xff, 0x00, 0x00, 0x00}, // update d h pi 
	{0x3f73, &op_update,	  3,   7,   8, 0xff, 0x00, 0x04, 0x00}, // update d h <literal> 
	{0x3083, &op_update,	  3,   8,   0, 0xff, 0x00, 0x00, 0x00}, // update d pc a 
	{0x3183, &op_update,	  3,   8,   1, 0xff, 0x00, 0x00, 0x00}, // update d pc b 
	{0x3283, &op_update,	  3,   8,   2, 0xff, 0x00, 0x00, 0x00}, // update d pc c 
	{0x3383, &op_update,	  3,   8,   3, 0xff, 0x00, 0x00, 0x00}, // update d pc d 
	{0x3483, &op_update,	  3,   8,   4, 0xff, 0x00, 0x00, 0x00}, // update d pc e 
	{0x3583, &op_update,	  3,   8,   5, 0xff, 0x00, 0x00, 0x00}, // update d pc f 
	{0x3683, &op_update,	  3,   8,   6, 0xff, 0x00, 0x00, 0x00}, // update d pc g 
	{0x3783, &op_update,	  3,   8,   7, 0xff, 0x00, 0x00, 0x00}, // update d pc h 
	{0x3883, &op_update,	  3,   8,   8, 0xff, 0x00, 0x00, 0x00}, // update d pc pc 
	{0x3983, &op_update,	  3,   8,   9, 0xff, 0x00, 0x00, 0x00}, // update d pc ra 
	{0x3a83, &op_update,	  3,   8,  10, 0xff, 0x00, 0x00, 0x00}, // update d pc sb 
	{0x3b83, &op_update,	  3,   8,  11, 0xff, 0x00, 0x00, 0x00}, // update d pc sp 
	{0x3c83, &op_update,	  3,   8,  12, 0xff, 0x00, 0x00, 0x00}, // update d pc db 
	{0x3d83, &op_update,	  3,   8,  13, 0xff, 0x00, 0x00, 0x00}, // update d pc cb 
	{0x3e83, &op_update,	  3,   8,  14, 0xff, 0x00, 0x00, 0x00}, // update d pc pi 
	{0x3f83, &op_update,	  3,   8,   8, 0xff, 0x00, 0x04, 0x00}, // update d pc <literal> 
	{0x3093, &op_update,	  3,   9,   0, 0xff, 0x00, 0x00, 0x00}, // update d ra a 
	{0x3193, &op_update,	  3,   9,   1, 0xff, 0x00, 0x00, 0x00}, // update d ra b 
	{0x3293, &op_update,	  3,   9,   2, 0xff, 0x00, 0x00, 0x00}, // update d ra c 
	{0x3393, &op_update,	  3,   9,   3, 0xff, 0x00, 0x00, 0x00}, // update d ra d 
	{0x3493, &op_update,	  3,   9,   4, 0xff, 0x00, 0x00, 0x00}, // update d ra e 
	{0x3593, &op_update,	  3,   9,   5, 0xff, 0x00, 0x00, 0x00}, // update d ra f 
	{0x3693, &op_update,	  3,   9,   6, 0xff, 0x00, 0x00, 0x00}, // update d ra g 
	{0x3793, &op_update,	  3,   9,   7, 0xff, 0x00, 0x00, 0x00}, // update d ra h 
	{0x3893, &op_update,	  3,   9,   8, 0xff, 0x00, 0x00, 0x00}, // update d ra pc 
	{0x3993, &op_update,	  3,   9,   9, 0xff, 0x00, 0x00, 0x00}, // update d ra ra 
	{0x3a93, &op_update,	  3,   9,  10, 0xff, 0x00, 0x00, 0x00}, // update d ra sb 
	{0x3b93, &op_update,	  3,   9,  11, 0xff, 0x00, 0x00, 0x00}, // update d ra sp 
	{0x3c93, &op_update,	  3,   9,  12, 0xff, 0x00, 0x00, 0x00}, // update d ra db 
	{0x3d93, &op_update,	  3,   9,  13, 0xff, 0x00, 0x00, 0x00}, // update d ra cb 
	{0x3e93, &op_update,	  3,   9,  14, 0xff, 0x00, 0x00, 0x00}, // update d ra pi 
	{0x3f93, &op_update,	  3,   9,   8, 0xff, 0x00, 0x04, 0x00}, // update d ra <literal> 
	{0x30a3, &op_update,	  3,  10,   0, 0xff, 0x00, 0x00, 0x00}, // update d sb a 
	{0x31a3, &op_update,	  3,  10,   1, 0xff, 0x00, 0x00, 0x00}, // update d sb b 
	{0x32a3, &op_update,	  3,  10,   2, 0xff, 0x00, 0x00, 0x00}, // update d sb c 
	{0x33a3, &op_update,	  3,  10,   3, 0xff, 0x00, 0x00, 0x00}, // update d sb d 
	{0x34a3, &op_update,	  3,  10,   4, 0xff, 0x00, 0x00, 0x00}, // update d sb e 
	{0x35a3, &op_update,	  3,  10,   5, 0xff, 0x00, 0x00, 0x00}, // update d sb f 
	{0x36a3, &op_update,	  3,  10,   6, 0xff, 0x00, 0x00, 0x00}, // update d sb g 
	{0x37a3, &op_update,	  3,  10,   7, 0xff, 0x00, 0x00, 0x00}, // update d sb h 
	{0x38a3, &op_update,	  3,  10,   8, 0xff, 0x00, 0x00, 0x00}, // update d sb pc 
	{0x39a3, &op_update,	  3,  10,   9, 0xff, 0x00, 0x00, 0x00}, // update d sb ra 
	{0x3aa3, &op_update,	  3,  10,  10, 0xff, 0x00, 0x00, 0x00}, // update d sb sb 
	{0x3ba3, &op_update,	  3,  10,  11, 0xff, 0x00, 0x00, 0x00}, // update d sb sp 
	{0x3ca3, &op_update,	  3,  10,  12, 0xff, 0x00, 0x00, 0x00}, // update d sb db 
	{0x3da3, &op_update,	  3,  10,  13, 0xff, 0x00, 0x00, 0x00}, // update d sb cb 
	{0x3ea3, &op_update,	  3,  10,  14, 0xff, 0x00, 0x00, 0x00}, // update d sb pi 
	{0x3fa3, &op_update,	  3,  10,   8, 0xff, 0x00, 0x04, 0x00}, // update d sb <literal> 
	{0x30b3, &op_update,	  3,  11,   0, 0xff, 0x00, 0x00, 0x00}, // update d sp a 
	{0x31b3, &op_update,	  3,  11,   1, 0xff, 0x00, 0x00, 0x00}, // update d sp b 
	{0x32b3, &op_update,	  3,  11,   2, 0xff, 0x00, 0x00, 0x00}, // update d sp c 
	{0x33b3, &op_update,	  3,  11,   3, 0xff, 0x00, 0x00, 0x00}, // update d sp d 
	{0x34b3, &op_update,	  3,  11,   4, 0xff, 0x00, 0x00, 0x00}, // update d sp e 
	{0x35b3, &op_update,	  3,  11,   5, 0xff, 0x00, 0x00, 0x00}, // update d sp f 
	{0x36b3, &op_update,	  3,  11,   6, 0xff, 0x00, 0x00, 0x00}, // update d sp g 
	{0x37b3, &op_update,	  3,  11,   7, 0xff, 0x00, 0x00, 0x00}, // update d sp h 
	{0x38b3, &op_update,	  3,  11,   8, 0xff, 0x00, 0x00, 0x00}, // update d sp pc 
	{0x39b3, &op_update,	  3,  11,   9, 0xff, 0x00, 0x00, 0x00}, // update d sp ra 
	{0x3ab3, &op_update,	  3,  11,  10, 0xff, 0x00, 0x00, 0x00}, // update d sp sb 
	{0x3bb3, &op_update,	  3,  11,  11, 0xff, 0x00, 0x00, 0x00}, // update d sp sp 
	{0x3cb3, &op_update,	  3,  11,  12, 0xff, 0x00, 0x00, 0x00}, // update d sp db 
	{0x3db3, &op_update,	  3,  11,  13, 0xff, 0x00, 0x00, 0x00}, // update d sp cb 
	{0x3eb3, &op_update,	  3,  11,  14, 0xff, 0x00, 0x00, 0x00}, // update d sp pi 
	{0x3fb3, &op_update,	  3,  11,   8, 0xff, 0x00, 0x04, 0x00}, // update d sp <literal> 
	{0x30c3, &op_update,	  3,  12,   0, 0xff, 0x00, 0x00, 0x00}, // update d db a 
	{0x31c3, &op_update,	  3,  12,   1, 0xff, 0x00, 0x00, 0x00}, // update d db b 
	{0x32c3, &op_update,	  3,  12,   2, 0xff, 0x00, 0x00, 0x00}, // update d db c 
	{0x33c3, &op_update,	  3,  12,   3, 0xff, 0x00, 0x00, 0x00}, // update d db d 
	{0x34c3, &op_update,	  3,  12,   4, 0xff, 0x00, 0x00, 0x00}, // update d db e 
	{0x35c3, &op_update,	  3,  12,   5, 0xff, 0x00, 0x00, 0x00}, // update d db f 
	{0x36c3, &op_update,	  3,  12,   6, 0xff, 0x00, 0x00, 0x00}, // update d db g 
	{0x37c3, &op_update,	  3,  12,   7, 0xff, 0x00, 0x00, 0x00}, // update d db h 
	{0x38c3, &op_update,	  3,  12,   8, 0xff, 0x00, 0x00, 0x00}, // update d db pc 
	{0x39c3, &op_update,	  3,  12,   9, 0xff, 0x00, 0x00, 0x00}, // update d db ra 
	{0x3ac3, &op_update,	  3,  12,  10, 0xff, 0x00, 0x00, 0x00}, // update d db sb 
	{0x3bc3, &op_update,	  3,  12,  11, 0xff, 0x00, 0x00, 0x00}, // update d db sp 
	{0x3cc3, &op_update,	  3,  12,  12, 0xff, 0x00, 0x00, 0x00}, // update d db db 
	{0x3dc3, &op_update,	  3,  12,  13, 0xff, 0x00, 0x00, 0x00}, // update d db cb 
	{0x3ec3, &op_update,	  3,  12,  14, 0xff, 0x00, 0x00, 0x00}, // update d db pi 
	{0x3fc3, &op_update,	  3,  12,   8, 0xff, 0x00, 0x04, 0x00}, // update d db <literal> 
	{0x30d3, &op_update,	  3,  13,   0, 0xff, 0x00, 0x00, 0x00}, // update d cb a 
	{0x31d3, &op_update,	  3,  13,   1, 0xff, 0x00, 0x00, 0x00}, // update d cb b 
	{0x32d3, &op_update,	  3,  13,   2, 0xff, 0x00, 0x00, 0x00}, // update d cb c 
	{0x33d3, &op_update,	  3,  13,   3, 0xff, 0x00, 0x00, 0x00}, // update d cb d 
	{0x34d3, &op_update,	  3,  13,   4, 0xff, 0x00, 0x00, 0x00}, // update d cb e 
	{0x35d3, &op_update,	  3,  13,   5, 0xff, 0x00, 0x00, 0x00}, // update d cb f 
	{0x36d3, &op_update,	  3,  13,   6, 0xff, 0x00, 0x00, 0x00}, // update d cb g 
	{0x37d3, &op_update,	  3,  13,   7, 0xff, 0x00, 0x00, 0x00}, // update d cb h 
	{0x38d3, &op_update,	  3,  13,   8, 0xff, 0x00, 0x00, 0x00}, // update d cb pc 
	{0x39d3, &op_update,	  3,  13,   9, 0xff, 0x00, 0x00, 0x00}, // update d cb ra 
	{0x3ad3, &op_update,	  3,  13,  10, 0xff, 0x00, 0x00, 0x00}, // update d cb sb 
	{0x3bd3, &op_update,	  3,  13,  11, 0xff, 0x00, 0x00, 0x00}, // update d cb sp 
	{0x3cd3, &op_update,	  3,  13,  12, 0xff, 0x00, 0x00, 0x00}, // update d cb db 
	{0x3dd3, &op_update,	  3,  13,  13, 0xff, 0x00, 0x00, 0x00}, // update d cb cb 
	{0x3ed3, &op_update,	  3,  13,  14, 0xff, 0x00, 0x00, 0x00}, // update d cb pi 
	{0x3fd3, &op_update,	  3,  13,   8, 0xff, 0x00, 0x04, 0x00}, // update d cb <literal> 
	{0x30e3, &op_update,	  3,  14,   0, 0xff, 0x00, 0x00, 0x00}, // update d pi a 
	{0x31e3, &op_update,	  3,  14,   1, 0xff, 0x00, 0x00, 0x00}, // update d pi b 
	{0x32e3, &op_update,	  3,  14,   2, 0xff, 0x00, 0x00, 0x00}, // update d pi c 
	{0x33e3, &op_update,	  3,  14,   3, 0xff, 0x00, 0x00, 0x00}, // update d pi d 
	{0x34e3, &op_update,	  3,  14,   4, 0xff, 0x00, 0x00, 0x00}, // update d pi e 
	{0x35e3, &op_update,	  3,  14,   5, 0xff, 0x00, 0x00, 0x00}, // update d pi f 
	{0x36e3, &op_update,	  3,  14,   6, 0xff, 0x00, 0x00, 0x00}, // update d pi g 
	{0x37e3, &op_update,	  3,  14,   7, 0xff, 0x00, 0x00, 0x00}, // update d pi h 
	{0x38e3, &op_update,	  3,  14,   8, 0xff, 0x00, 0x00, 0x00}, // update d pi pc 
	{0x39e3, &op_update,	  3,  14,   9, 0xff, 0x00, 0x00, 0x00}, // update d pi ra 
	{0x3ae3, &op_update,	  3,  14,  10, 0xff, 0x00, 0x00, 0x00}, // update d pi sb 
	{0x3be3, &op_update,	  3,  14,  11, 0xff, 0x00, 0x00, 0x00}, // update d pi sp 
	{0x3ce3, &op_update,	  3,  14,  12, 0xff, 0x00, 0x00, 0x00}, // update d pi db 
	{0x3de3, &op_update,	  3,  14,  13, 0xff, 0x00, 0x00, 0x00}, // update d pi cb 
	{0x3ee3, &op_update,	  3,  14,  14, 0xff, 0x00, 0x00, 0x00}, // update d pi pi 
	{0x3fe3, &op_update,	  3,  14,   8, 0xff, 0x00, 0x04, 0x00}, // update d pi <literal> 
	{0x30f3, &op_update,	  3,  15,   0, 0xff, 0x00, 0x00, 0x00}, // update d status a 
	{0x31f3, &op_update,	  3,  15,   1, 0xff, 0x00, 0x00, 0x00}, // update d status b 
	{0x32f3, &op_update,	  3,  15,   2, 0xff, 0x00, 0x00, 0x00}, // update d status c 
	{0x33f3, &op_update,	  3,  15,   3, 0xff, 0x00, 0x00, 0x00}, // update d status d 
	{0x34f3, &op_update,	  3,  15,   4, 0xff, 0x00, 0x00, 0x00}, // update d status e 
	{0x35f3, &op_update,	  3,  15,   5, 0xff, 0x00, 0x00, 0x00}, // update d status f 
	{0x36f3, &op_update,	  3,  15,   6, 0xff, 0x00, 0x00, 0x00}, // update d status g 
	{0x37f3, &op_update,	  3,  15,   7, 0xff, 0x00, 0x00, 0x00}, // update d status h 
	{0x38f3, &op_update,	  3,  15,   8, 0xff, 0x00, 0x00, 0x00}, // update d status pc 
	{0x39f3, &op_update,	  3,  15,   9, 0xff, 0x00, 0x00, 0x00}, // update d status ra 
	{0x3af3, &op_update,	  3,  15,  10, 0xff, 0x00, 0x00, 0x00}, // update d status sb 
	{0x3bf3, &op_update,	  3,  15,  11, 0xff, 0x00, 0x00, 0x00}, // update d status sp 
	{0x3cf3, &op_update,	  3,  15,  12, 0xff, 0x00, 0x00, 0x00}, // update d status db 
	{0x3df3, &op_update,	  3,  15,  13, 0xff, 0x00, 0x00, 0x00}, // update d status cb 
	{0x3ef3, &op_update,	  3,  15,  14, 0xff, 0x00, 0x00, 0x00}, // update d status pi 
	{0x3ff3, &op_update,	  3,  15,   8, 0xff, 0x00, 0x04, 0x00}, // update d status <literal> 
	{0x3004, &op_update,	  4,   0,   0, 0xff, 0x00, 0x00, 0x00}, // update e a a 
	{0x3104, &op_update,	  4,   0,   1, 0xff, 0x00, 0x00, 0x00}, // update e a b 
	{0x3204, &op_update,	  4,   0,   2, 0xff, 0x00, 0x00, 0x00}, // update e a c 
	{0x3304, &op_update,	  4,   0,   3, 0xff, 0x00, 0x00, 0x00}, // update e a d 
	{0x3404, &op_update,	  4,   0,   4, 0xff, 0x00, 0x00, 0x00}, // update e a e 
	{0x3504, &op_update,	  4,   0,   5, 0xff, 0x00, 0x00, 0x00}, // update e a f 
	{0x3604, &op_update,	  4,   0,   6, 0xff, 0x00, 0x00, 0x00}, // update e a g 
	{0x3704, &op_update,	  4,   0,   7, 0xff, 0x00, 0x00, 0x00}, // update e a h 
	{0x3804, &op_update,	  4,   0,   8, 0xff, 0x00, 0x00, 0x00}, // update e a pc 
	{0x3904, &op_update,	  4,   0,   9, 0xff, 0x00, 0x00, 0x00}, // update e a ra 
	{0x3a04, &op_update,	  4,   0,  10, 0xff, 0x00, 0x00, 0x00}, // update e a sb 
	{0x3b04, &op_update,	  4,   0,  11, 0xff, 0x00, 0x00, 0x00}, // update e a sp 
	{0x3c04, &op_update,	  4,   0,  12, 0xff, 0x00, 0x00, 0x00}, // update e a db 
	{0x3d04, &op_update,	  4,   0,  13, 0xff, 0x00, 0x00, 0x00}, // update e a cb 
	{0x3e04, &op_update,	  4,   0,  14, 0xff, 0x00, 0x00, 0x00}, // update e a pi 
	{0x3f04, &op_update,	  4,   0,   8, 0xff, 0x00, 0x04, 0x00}, // update e a <literal> 
	{0x3014, &op_update,	  4,   1,   0, 0xff, 0x00, 0x00, 0x00}, // update e b a 
	{0x3114, &op_update,	  4,   1,   1, 0xff, 0x00, 0x00, 0x00}, // update e b b 
	{0x3214, &op_update,	  4,   1,   2, 0xff, 0x00, 0x00, 0x00}, // update e b c 
	{0x3314, &op_update,	  4,   1,   3, 0xff, 0x00, 0x00, 0x00}, // update e b d 
	{0x3414, &op_update,	  4,   1,   4, 0xff, 0x00, 0x00, 0x00}, // update e b e 
	{0x3514, &op_update,	  4,   1,   5, 0xff, 0x00, 0x00, 0x00}, // update e b f 
	{0x3614, &op_update,	  4,   1,   6, 0xff, 0x00, 0x00, 0x00}, // update e b g 
	{0x3714, &op_update,	  4,   1,   7, 0xff, 0x00, 0x00, 0x00}, // update e b h 
	{0x3814, &op_update,	  4,   1,   8, 0xff, 0x00, 0x00, 0x00}, // update e b pc 
	{0x3914, &op_update,	  4,   1,   9, 0xff, 0x00, 0x00, 0x00}, // update e b ra 
	{0x3a14, &op_update,	  4,   1,  10, 0xff, 0x00, 0x00, 0x00}, // update e b sb 
	{0x3b14, &op_update,	  4,   1,  11, 0xff, 0x00, 0x00, 0x00}, // update e b sp 
	{0x3c14, &op_update,	  4,   1,  12, 0xff, 0x00, 0x00, 0x00}, // update e b db 
	{0x3d14, &op_update,	  4,   1,  13, 0xff, 0x00, 0x00, 0x00}, // update e b cb 
	{0x3e14, &op_update,	  4,   1,  14, 0xff, 0x00, 0x00, 0x00}, // update e b pi 
	{0x3f14, &op_update,	  4,   1,   8, 0xff, 0x00, 0x04, 0x00}, // update e b <literal> 
	{0x3024, &op_update,	  4,   2,   0, 0xff, 0x00, 0x00, 0x00}, // update e c a 
	{0x3124, &op_update,	  4,   2,   1, 0xff, 0x00, 0x00, 0x00}, // update e c b 
	{0x3224, &op_update,	  4,   2,   2, 0xff, 0x00, 0x00, 0x00}, // update e c c 
	{0x3324, &op_update,	  4,   2,   3, 0xff, 0x00, 0x00, 0x00}, // update e c d 
	{0x3424, &op_update,	  4,   2,   4, 0xff, 0x00, 0x00, 0x00}, // update e c e 
	{0x3524, &op_update,	  4,   2,   5, 0xff, 0x00, 0x00, 0x00}, // update e c f 
	{0x3624, &op_update,	  4,   2,   6, 0xff, 0x00, 0x00, 0x00}, // update e c g 
	{0x3724, &op_update,	  4,   2,   7, 0xff, 0x00, 0x00, 0x00}, // update e c h 
	{0x3824, &op_update,	  4,   2,   8, 0xff, 0x00, 0x00, 0x00}, // update e c pc 
	{0x3924, &op_update,	  4,   2,   9, 0xff, 0x00, 0x00, 0x00}, // update e c ra 
	{0x3a24, &op_update,	  4,   2,  10, 0xff, 0x00, 0x00, 0x00}, // update e c sb 
	{0x3b24, &op_update,	  4,   2,  11, 0xff, 0x00, 0x00, 0x00}, // update e c sp 
	{0x3c24, &op_update,	  4,   2,  12, 0xff, 0x00, 0x00, 0x00}, // update e c db 
	{0x3d24, &op_update,	  4,   2,  13, 0xff, 0x00, 0x00, 0x00}, // update e c cb 
	{0x3e24, &op_update,	  4,   2,  14, 0xff, 0x00, 0x00, 0x00}, // update e c pi 
	{0x3f24, &op_update,	  4,   2,   8, 0xff, 0x00, 0x04, 0x00}, // update e c <literal> 
	{0x3034, &op_update,	  4,   3,   0, 0xff, 0x00, 0x00, 0x00}, // update e d a 
	{0x3134, &op_update,	  4,   3,   1, 0xff, 0x00, 0x00, 0x00}, // update e d b 
	{0x3234, &op_update,	  4,   3,   2, 0xff, 0x00, 0x00, 0x00}, // update e d c 
	{0x3334, &op_update,	  4,   3,   3, 0xff, 0x00, 0x00, 0x00}, // update e d d 
	{0x3434, &op_update,	  4,   3,   4, 0xff, 0x00, 0x00, 0x00}, // update e d e 
	{0x3534, &op_update,	  4,   3,   5, 0xff, 0x00, 0x00, 0x00}, // update e d f 
	{0x3634, &op_update,	  4,   3,   6, 0xff, 0x00, 0x00, 0x00}, // update e d g 
	{0x3734, &op_update,	  4,   3,   7, 0xff, 0x00, 0x00, 0x00}, // update e d h 
	{0x3834, &op_update,	  4,   3,   8, 0xff, 0x00, 0x00, 0x00}, // update e d pc 
	{0x3934, &op_update,	  4,   3,   9, 0xff, 0x00, 0x00, 0x00}, // update e d ra 
	{0x3a34, &op_update,	  4,   3,  10, 0xff, 0x00, 0x00, 0x00}, // update e d sb 
	{0x3b34, &op_update,	  4,   3,  11, 0xff, 0x00, 0x00, 0x00}, // update e d sp 
	{0x3c34, &op_update,	  4,   3,  12, 0xff, 0x00, 0x00, 0x00}, // update e d db 
	{0x3d34, &op_update,	  4,   3,  13, 0xff, 0x00, 0x00, 0x00}, // update e d cb 
	{0x3e34, &op_update,	  4,   3,  14, 0xff, 0x00, 0x00, 0x00}, // update e d pi 
	{0x3f34, &op_update,	  4,   3,   8, 0xff, 0x00, 0x04, 0x00}, // update e d <literal> 
	{0x3044, &op_update,	  4,   4,   0, 0xff, 0x00, 0x00, 0x00}, // update e e a 
	{0x3144, &op_update,	  4,   4,   1, 0xff, 0x00, 0x00, 0x00}, // update e e b 
	{0x3244, &op_update,	  4,   4,   2, 0xff, 0x00, 0x00, 0x00}, // update e e c 
	{0x3344, &op_update,	  4,   4,   3, 0xff, 0x00, 0x00, 0x00}, // update e e d 
	{0x3444, &op_update,	  4,   4,   4, 0xff, 0x00, 0x00, 0x00}, // update e e e 
	{0x3544, &op_update,	  4,   4,   5, 0xff, 0x00, 0x00, 0x00}, // update e e f 
	{0x3644, &op_update,	  4,   4,   6, 0xff, 0x00, 0x00, 0x00}, // update e e g 
	{0x3744, &op_update,	  4,   4,   7, 0xff, 0x00, 0x00, 0x00}, // update e e h 
	{0x3844, &op_update,	  4,   4,   8, 0xff, 0x00, 0x00, 0x00}, // update e e pc 
	{0x3944, &op_update,	  4,   4,   9, 0xff, 0x00, 0x00, 0x00}, // update e e ra 
	{0x3a44, &op_update,	  4,   4,  10, 0xff, 0x00, 0x00, 0x00}, // update e e sb 
	{0x3b44, &op_update,	  4,   4,  11, 0xff, 0x00, 0x00, 0x00}, // update e e sp 
	{0x3c44, &op_update,	  4,   4,  12, 0xff, 0x00, 0x00, 0x00}, // update e e db 
	{0x3d44, &op_update,	  4,   4,  13, 0xff, 0x00, 0x00, 0x00}, // update e e cb 
	{0x3e44, &op_update,	  4,   4,  14, 0xff, 0x00, 0x00, 0x00}, // update e e pi 
	{0x3f44, &op_update,	  4,   4,   8, 0xff, 0x00, 0x04, 0x00}, // update e e <literal> 
	{0x3054, &op_update,	  4,   5,   0, 0xff, 0x00, 0x00, 0x00}, // update e f a 
	{0x3154, &op_update,	  4,   5,   1, 0xff, 0x00, 0x00, 0x00}, // update e f b 
	{0x3254, &op_update,	  4,   5,   2, 0xff, 0x00, 0x00, 0x00}, // update e f c 
	{0x3354, &op_update,	  4,   5,   3, 0xff, 0x00, 0x00, 0x00}, // update e f d 
	{0x3454, &op_update,	  4,   5,   4, 0xff, 0x00, 0x00, 0x00}, // update e f e 
	{0x3554, &op_update,	  4,   5,   5, 0xff, 0x00, 0x00, 0x00}, // update e f f 
	{0x3654, &op_update,	  4,   5,   6, 0xff, 0x00, 0x00, 0x00}, // update e f g 
	{0x3754, &op_update,	  4,   5,   7, 0xff, 0x00, 0x00, 0x00}, // update e f h 
	{0x3854, &op_update,	  4,   5,   8, 0xff, 0x00, 0x00, 0x00}, // update e f pc 
	{0x3954, &op_update,	  4,   5,   9, 0xff, 0x00, 0x00, 0x00}, // update e f ra 
	{0x3a54, &op_update,	  4,   5,  10, 0xff, 0x00, 0x00, 0x00}, // update e f sb 
	{0x3b54, &op_update,	  4,   5,  11, 0xff, 0x00, 0x00, 0x00}, // update e f sp 
	{0x3c54, &op_update,	  4,   5,  12, 0xff, 0x00, 0x00, 0x00}, // update e f db 
	{0x3d54, &op_update,	  4,   5,  13, 0xff, 0x00, 0x00, 0x00}, // update e f cb 
	{0x3e54, &op_update,	  4,   5,  14, 0xff, 0x00, 0x00, 0x00}, // update e f pi 
	{0x3f54, &op_update,	  4,   5,   8, 0xff, 0x00, 0x04, 0x00}, // update e f <literal> 
	{0x3064, &op_update,	  4,   6,   0, 0xff, 0x00, 0x00, 0x00}, // update e g a 
	{0x3164, &op_update,	  4,   6,   1, 0xff, 0x00, 0x00, 0x00}, // update e g b 
	{0x3264, &op_update,	  4,   6,   2, 0xff, 0x00, 0x00, 0x00}, // update e g c 
	{0x3364, &op_update,	  4,   6,   3, 0xff, 0x00, 0x00, 0x00}, // update e g d 
	{0x3464, &op_update,	  4,   6,   4, 0xff, 0x00, 0x00, 0x00}, // update e g e 
	{0x3564, &op_update,	  4,   6,   5, 0xff, 0x00, 0x00, 0x00}, // update e g f 
	{0x3664, &op_update,	  4,   6,   6, 0xff, 0x00, 0x00, 0x00}, // update e g g 
	{0x3764, &op_update,	  4,   6,   7, 0xff, 0x00, 0x00, 0x00}, // update e g h 
	{0x3864, &op_update,	  4,   6,   8, 0xff, 0x00, 0x00, 0x00}, // update e g pc 
	{0x3964, &op_update,	  4,   6,   9, 0xff, 0x00, 0x00, 0x00}, // update e g ra 
	{0x3a64, &op_update,	  4,   6,  10, 0xff, 0x00, 0x00, 0x00}, // update e g sb 
	{0x3b64, &op_update,	  4,   6,  11, 0xff, 0x00, 0x00, 0x00}, // update e g sp 
	{0x3c64, &op_update,	  4,   6,  12, 0xff, 0x00, 0x00, 0x00}, // update e g db 
	{0x3d64, &op_update,	  4,   6,  13, 0xff, 0x00, 0x00, 0x00}, // update e g cb 
	{0x3e64, &op_update,	  4,   6,  14, 0xff, 0x00, 0x00, 0x00}, // update e g pi 
	{0x3f64, &op_update,	  4,   6,   8, 0xff, 0x00, 0x04, 0x00}, // update e g <literal> 
	{0x3074, &op_update,	  4,   7,   0, 0xff, 0x00, 0x00, 0x00}, // update e h a 
	{0x3174, &op_update,	  4,   7,   1, 0xff, 0x00, 0x00, 0x00}, // update e h b 
	{0x3274, &op_update,	  4,   7,   2, 0xff, 0x00, 0x00, 0x00}, // update e h c 
	{0x3374, &op_update,	  4,   7,   3, 0xff, 0x00, 0x00, 0x00}, // update e h d 
	{0x3474, &op_update,	  4,   7,   4, 0xff, 0x00, 0x00, 0x00}, // update e h e 
	{0x3574, &op_update,	  4,   7,   5, 0xff, 0x00, 0x00, 0x00}, // update e h f 
	{0x3674, &op_update,	  4,   7,   6, 0xff, 0x00, 0x00, 0x00}, // update e h g 
	{0x3774, &op_update,	  4,   7,   7, 0xff, 0x00, 0x00, 0x00}, // update e h h 
	{0x3874, &op_update,	  4,   7,   8, 0xff, 0x00, 0x00, 0x00}, // update e h pc 
	{0x3974, &op_update,	  4,   7,   9, 0xff, 0x00, 0x00, 0x00}, // update e h ra 
	{0x3a74, &op_update,	  4,   7,  10, 0xff, 0x00, 0x00, 0x00}, // update e h sb 
	{0x3b74, &op_update,	  4,   7,  11, 0xff, 0x00, 0x00, 0x00}, // update e h sp 
	{0x3c74, &op_update,	  4,   7,  12, 0xff, 0x00, 0x00, 0x00}, // update e h db 
	{0x3d74, &op_update,	  4,   7,  13, 0xff, 0x00, 0x00, 0x00}, // update e h cb 
	{0x3e74, &op_update,	  4,   7,  14, 0xff, 0x00, 0x00, 0x00}, // update e h pi 
	{0x3f74, &op_update,	  4,   7,   8, 0xff, 0x00, 0x04, 0x00}, // update e h <literal> 
	{0x3084, &op_update,	  4,   8,   0, 0xff, 0x00, 0x00, 0x00}, // update e pc a 
	{0x3184, &op_update,	  4,   8,   1, 0xff, 0x00, 0x00, 0x00}, // update e pc b 
	{0x3284, &op_update,	  4,   8,   2, 0xff, 0x00, 0x00, 0x00}, // update e pc c 
	{0x3384, &op_update,	  4,   8,   3, 0xff, 0x00, 0x00, 0x00}, // update e pc d 
	{0x3484, &op_update,	  4,   8,   4, 0xff, 0x00, 0x00, 0x00}, // update e pc e 
	{0x3584, &op_update,	  4,   8,   5, 0xff, 0x00, 0x00, 0x00}, // update e pc f 
	{0x3684, &op_update,	  4,   8,   6, 0xff, 0x00, 0x00, 0x00}, // update e pc g 
	{0x3784, &op_update,	  4,   8,   7, 0xff, 0x00, 0x00, 0x00}, // update e pc h 
	{0x3884, &op_update,	  4,   8,   8, 0xff, 0x00, 0x00, 0x00}, // update e pc pc 
	{0x3984, &op_update,	  4,   8,   9, 0xff, 0x00, 0x00, 0x00}, // update e pc ra 
	{0x3a84, &op_update,	  4,   8,  10, 0xff, 0x00, 0x00, 0x00}, // update e pc sb 
	{0x3b84, &op_update,	  4,   8,  11, 0xff, 0x00, 0x00, 0x00}, // update e pc sp 
	{0x3c84, &op_update,	  4,   8,  12, 0xff, 0x00, 0x00, 0x00}, // update e pc db 
	{0x3d84, &op_update,	  4,   8,  13, 0xff, 0x00, 0x00, 0x00}, // update e pc cb 
	{0x3e84, &op_update,	  4,   8,  14, 0xff, 0x00, 0x00, 0x00}, // update e pc pi 
	{0x3f84, &op_update,	  4,   8,   8, 0xff, 0x00, 0x04, 0x00}, // update e pc <literal> 
	{0x3094, &op_update,	  4,   9,   0, 0xff, 0x00, 0x00, 0x00}, // update e ra a 
	{0x3194, &op_update,	  4,   9,   1, 0xff, 0x00, 0x00, 0x00}, // update e ra b 
	{0x3294, &op_update,	  4,   9,   2, 0xff, 0x00, 0x00, 0x00}, // update e ra c 
	{0x3394, &op_update,	  4,   9,   3, 0xff, 0x00, 0x00, 0x00}, // update e ra d 
	{0x3494, &op_update,	  4,   9,   4, 0xff, 0x00, 0x00, 0x00}, // update e ra e 
	{0x3594, &op_update,	  4,   9,   5, 0xff, 0x00, 0x00, 0x00}, // update e ra f 
	{0x3694, &op_update,	  4,   9,   6, 0xff, 0x00, 0x00, 0x00}, // update e ra g 
	{0x3794, &op_update,	  4,   9,   7, 0xff, 0x00, 0x00, 0x00}, // update e ra h 
	{0x3894, &op_update,	  4,   9,   8, 0xff, 0x00, 0x00, 0x00}, // update e ra pc 
	{0x3994, &op_update,	  4,   9,   9, 0xff, 0x00, 0x00, 0x00}, // update e ra ra 
	{0x3a94, &op_update,	  4,   9,  10, 0xff, 0x00, 0x00, 0x00}, // update e ra sb 
	{0x3b94, &op_update,	  4,   9,  11, 0xff, 0x00, 0x00, 0x00}, // update e ra sp 
	{0x3c94, &op_update,	  4,   9,  12, 0xff, 0x00, 0x00, 0x00}, // update e ra db 
	{0x3d94, &op_update,	  4,   9,  13, 0xff, 0x00, 0x00, 0x00}, // update e ra cb 
	{0x3e94, &op_update,	  4,   9,  14, 0xff, 0x00, 0x00, 0x00}, // update e ra pi 
	{0x3f94, &op_update,	  4,   9,   8, 0xff, 0x00, 0x04, 0x00}, // update e ra <literal> 
	{0x30a4, &op_update,	  4,  10,   0, 0xff, 0x00, 0x00, 0x00}, // update e sb a 
	{0x31a4, &op_update,	  4,  10,   1, 0xff, 0x00, 0x00, 0x00}, // update e sb b 
	{0x32a4, &op_update,	  4,  10,   2, 0xff, 0x00, 0x00, 0x00}, // update e sb c 
	{0x33a4, &op_update,	  4,  10,   3, 0xff, 0x00, 0x00, 0x00}, // update e sb d 
	{0x34a4, &op_update,	  4,  10,   4, 0xff, 0x00, 0x00, 0x00}, // update e sb e 
	{0x35a4, &op_update,	  4,  10,   5, 0xff, 0x00, 0x00, 0x00}, // update e sb f 
	{0x36a4, &op_update,	  4,  10,   6, 0xff, 0x00, 0x00, 0x00}, // update e sb g 
	{0x37a4, &op_update,	  4,  10,   7, 0xff, 0x00, 0x00, 0x00}, // update e sb h 
	{0x38a4, &op_update,	  4,  10,   8, 0xff, 0x00, 0x00, 0x00}, // update e sb pc 
	{0x39a4, &op_update,	  4,  10,   9, 0xff, 0x00, 0x00, 0x00}, // update e sb ra 
	{0x3aa4, &op_update,	  4,  10,  10, 0xff, 0x00, 0x00, 0x00}, // update e sb sb 
	{0x3ba4, &op_update,	  4,  10,  11, 0xff, 0x00, 0x00, 0x00}, // update e sb sp 
	{0x3ca4, &op_update,	  4,  10,  12, 0xff, 0x00, 0x00, 0x00}, // update e sb db 
	{0x3da4, &op_update,	  4,  10,  13, 0xff, 0x00, 0x00, 0x00}, // update e sb cb 
	{0x3ea4, &op_update,	  4,  10,  14, 0xff, 0x00, 0x00, 0x00}, // update e sb pi 
	{0x3fa4, &op_update,	  4,  10,   8, 0xff, 0x00, 0x04, 0x00}, // update e sb <literal> 
	{0x30b4, &op_update,	  4,  11,   0, 0xff, 0x00, 0x00, 0x00}, // update e sp a 
	{0x31b4, &op_update,	  4,  11,   1, 0xff, 0x00, 0x00, 0x00}, // update e sp b 
	{0x32b4, &op_update,	  4,  11,   2, 0xff, 0x00, 0x00, 0x00}, // update e sp c 
	{0x33b4, &op_update,	  4,  11,   3, 0xff, 0x00, 0x00, 0x00}, // update e sp d 
	{0x34b4, &op_update,	  4,  11,   4, 0xff, 0x00, 0x00, 0x00}, // update e sp e 
	{0x35b4, &op_update,	  4,  11,   5, 0xff, 0x00, 0x00, 0x00}, // update e sp f 
	{0x36b4, &op_update,	  4,  11,   6, 0xff, 0x00, 0x00, 0x00}, // update e sp g 
	{0x37b4, &op_update,	  4,  11,   7, 0xff, 0x00, 0x00, 0x00}, // update e sp h 
	{0x38b4, &op_update,	  4,  11,   8, 0xff, 0x00, 0x00, 0x00}, // update e sp pc 
	{0x39b4, &op_update,	  4,  11,   9, 0xff, 0x00, 0x00, 0x00}, // update e sp ra 
	{0x3ab4, &op_update,	  4,  11,  10, 0xff, 0x00, 0x00, 0x00}, // update e sp sb 
	{0x3bb4, &op_update,	  4,  11,  11, 0xff, 0x00, 0x00, 0x00}, // update e sp sp 
	{0x3cb4, &op_update,	  4,  11,  12, 0xff, 0x00, 0x00, 0x00}, // update e sp db 
	{0x3db4, &op_update,	  4,  11,  13, 0xff, 0x00, 0x00, 0x00}, // update e sp cb 
	{0x3eb4, &op_update,	  4,  11,  14, 0xff, 0x00, 0x00, 0x00}, // update e sp pi 
	{0x3fb4, &op_update,	  4,  11,   8, 0xff, 0x00, 0x04, 0x00}, // update e sp <literal> 
	{0x30c4, &op_update,	  4,  12,   0, 0xff, 0x00, 0x00, 0x00}, // update e db a 
	{0x31c4, &op_update,	  4,  12,   1, 0xff, 0x00, 0x00, 0x00}, // update e db b 
	{0x32c4, &op_update,	  4,  12,   2, 0xff, 0x00, 0x00, 0x00}, // update e db c 
	{0x33c4, &op_update,	  4,  12,   3, 0xff, 0x00, 0x00, 0x00}, // update e db d 
	{0x34c4, &op_update,	  4,  12,   4, 0xff, 0x00, 0x00, 0x00}, // update e db e 
	{0x35c4, &op_update,	  4,  12,   5, 0xff, 0x00, 0x00, 0x00}, // update e db f 
	{0x36c4, &op_update,	  4,  12,   6, 0xff, 0x00, 0x00, 0x00}, // update e db g 
	{0x37c4, &op_update,	  4,  12,   7, 0xff, 0x00, 0x00, 0x00}, // update e db h 
	{0x38c4, &op_update,	  4,  12,   8, 0xff, 0x00, 0x00, 0x00}, // update e db pc 
	{0x39c4, &op_update,	  4,  12,   9, 0xff, 0x00, 0x00, 0x00}, // update e db ra 
	{0x3ac4, &op_update,	  4,  12,  10, 0xff, 0x00, 0x00, 0x00}, // update e db sb 
	{0x3bc4, &op_update,	  4,  12,  11, 0xff, 0x00, 0x00, 0x00}, // update e db sp 
	{0x3cc4, &op_update,	  4,  12,  12, 0xff, 0x00, 0x00, 0x00}, // update e db db 
	{0x3dc4, &op_update,	  4,  12,  13, 0xff, 0x00, 0x00, 0x00}, // update e db cb 
	{0x3ec4, &op_update,	  4,  12,  14, 0xff, 0x00, 0x00, 0x00}, // update e db pi 
	{0x3fc4, &op_update,	  4,  12,   8, 0xff, 0x00, 0x04, 0x00}, // update e db <literal> 
	{0x30d4, &op_update,	  4,  13,   0, 0xff, 0x00, 0x00, 0x00}, // update e cb a 
	{0x31d4, &op_update,	  4,  13,   1, 0xff, 0x00, 0x00, 0x00}, // update e cb b 
	{0x32d4, &op_update,	  4,  13,   2, 0xff, 0x00, 0x00, 0x00}, // update e cb c 
	{0x33d4, &op_update,	  4,  13,   3, 0xff, 0x00, 0x00, 0x00}, // update e cb d 
	{0x34d4, &op_update,	  4,  13,   4, 0xff, 0x00, 0x00, 0x00}, // update e cb e 
	{0x35d4, &op_update,	  4,  13,   5, 0xff, 0x00, 0x00, 0x00}, // update e cb f 
	{0x36d4, &op_update,	  4,  13,   6, 0xff, 0x00, 0x00, 0x00}, // update e cb g 
	{0x37d4, &op_update,	  4,  13,   7, 0xff, 0x00, 0x00, 0x00}, // update e cb h 
	{0x38d4, &op_update,	  4,  13,   8, 0xff, 0x00, 0x00, 0x00}, // update e cb pc 
	{0x39d4, &op_update,	  4,  13,   9, 0xff, 0x00, 0x00, 0x00}, // update e cb ra 
	{0x3ad4, &op_update,	  4,  13,  10, 0xff, 0x00, 0x00, 0x00}, // update e cb sb 
	{0x3bd4, &op_update,	  4,  13,  11, 0xff, 0x00, 0x00, 0x00}, // update e cb sp 
	{0x3cd4, &op_update,	  4,  13,  12, 0xff, 0x00, 0x00, 0x00}, // update e cb db 
	{0x3dd4, &op_update,	  4,  13,  13, 0xff, 0x00, 0x00, 0x00}, // update e cb cb 
	{0x3ed4, &op_update,	  4,  13,  14, 0xff, 0x00, 0x00, 0x00}, // update e cb pi 
	{0x3fd4, &op_update,	  4,  13,   8, 0xff, 0x00, 0x04, 0x00}, // update e cb <literal> 
	{0x30e4, &op_update,	  4,  14,   0, 0xff, 0x00, 0x00, 0x00}, // update e pi a 
	{0x31e4, &op_update,	  4,  14,   1, 0xff, 0x00, 0x00, 0x00}, // update e pi b 
	{0x32e4, &op_update,	  4,  14,   2, 0xff, 0x00, 0x00, 0x00}, // update e pi c 
	{0x33e4, &op_update,	  4,  14,   3, 0xff, 0x00, 0x00, 0x00}, // update e pi d 
	{0x34e4, &op_update,	  4,  14,   4, 0xff, 0x00, 0x00, 0x00}, // update e pi e 
	{0x35e4, &op_update,	  4,  14,   5, 0xff, 0x00, 0x00, 0x00}, // update e pi f 
	{0x36e4, &op_update,	  4,  14,   6, 0xff, 0x00, 0x00, 0x00}, // update e pi g 
	{0x37e4, &op_update,	  4,  14,   7, 0xff, 0x00, 0x00, 0x00}, // update e pi h 
	{0x38e4, &op_update,	  4,  14,   8, 0xff, 0x00, 0x00, 0x00}, // update e pi pc 
	{0x39e4, &op_update,	  4,  14,   9, 0xff, 0x00, 0x00, 0x00}, // update e pi ra 
	{0x3ae4, &op_update,	  4,  14,  10, 0xff, 0x00, 0x00, 0x00}, // update e pi sb 
	{0x3be4, &op_update,	  4,  14,  11, 0xff, 0x00, 0x00, 0x00}, // update e pi sp 
	{0x3ce4, &op_update,	  4,  14,  12, 0xff, 0x00, 0x00, 0x00}, // update e pi db 
	{0x3de4, &op_update,	  4,  14,  13, 0xff, 0x00, 0x00, 0x00}, // update e pi cb 
	{0x3ee4, &op_update,	  4,  14,  14, 0xff, 0x00, 0x00, 0x00}, // update e pi pi 
	{0x3fe4, &op_update,	  4,  14,   8, 0xff, 0x00, 0x04, 0x00}, // update e pi <literal> 
	{0x30f4, &op_update,	  4,  15,   0, 0xff, 0x00, 0x00, 0x00}, // update e status a 
	{0x31f4, &op_update,	  4,  15,   1, 0xff, 0x00, 0x00, 0x00}, // update e status b 
	{0x32f4, &op_update,	  4,  15,   2, 0xff, 0x00, 0x00, 0x00}, // update e status c 
	{0x33f4, &op_update,	  4,  15,   3, 0xff, 0x00, 0x00, 0x00}, // update e status d 
	{0x34f4, &op_update,	  4,  15,   4, 0xff, 0x00, 0x00, 0x00}, // update e status e 
	{0x35f4, &op_update,	  4,  15,   5, 0xff, 0x00, 0x00, 0x00}, // update e status f 
	{0x36f4, &op_update,	  4,  15,   6, 0xff, 0x00, 0x00, 0x00}, // update e status g 
	{0x37f4, &op_update,	  4,  15,   7, 0xff, 0x00, 0x00, 0x00}, // update e status h 
	{0x38f4, &op_update,	  4,  15,   8, 0xff, 0x00, 0x00, 0x00}, // update e status pc 
	{0x39f4, &op_update,	  4,  15,   9, 0xff, 0x00, 0x00, 0x00}, // update e status ra 
	{0x3af4, &op_update,	  4,  15,  10, 0xff, 0x00, 0x00, 0x00}, // update e status sb 
	{0x3bf4, &op_update,	  4,  15,  11, 0xff, 0x00, 0x00, 0x00}, // update e status sp 
	{0x3cf4, &op_update,	  4,  15,  12, 0xff, 0x00, 0x00, 0x00}, // update e status db 
	{0x3df4, &op_update,	  4,  15,  13, 0xff, 0x00, 0x00, 0x00}, // update e status cb 
	{0x3ef4, &op_update,	  4,  15,  14, 0xff, 0x00, 0x00, 0x00}, // update e status pi 
	{0x3ff4, &op_update,	  4,  15,   8, 0xff, 0x00, 0x04, 0x00}, // update e status <literal> 
	{0x3005, &op_update,	  5,   0,   0, 0xff, 0x00, 0x00, 0x00}, // update f a a 
	{0x3105, &op_update,	  5,   0,   1, 0xff, 0x00, 0x00, 0x00}, // update f a b 
	{0x3205, &op_update,	  5,   0,   2, 0xff, 0x00, 0x00, 0x00}, // update f a c 
	{0x3305, &op_update,	  5,   0,   3, 0xff, 0x00, 0x00, 0x00}, // update f a d 
	{0x3405, &op_update,	  5,   0,   4, 0xff, 0x00, 0x00, 0x00}, // update f a e 
	{0x3505, &op_update,	  5,   0,   5, 0xff, 0x00, 0x00, 0x00}, // update f a f 
	{0x3605, &op_update,	  5,   0,   6, 0xff, 0x00, 0x00, 0x00}, // update f a g 
	{0x3705, &op_update,	  5,   0,   7, 0xff, 0x00, 0x00, 0x00}, // update f a h 
	{0x3805, &op_update,	  5,   0,   8, 0xff, 0x00, 0x00, 0x00}, // update f a pc 
	{0x3905, &op_update,	  5,   0,   9, 0xff, 0x00, 0x00, 0x00}, // update f a ra 
	{0x3a05, &op_update,	  5,   0,  10, 0xff, 0x00, 0x00, 0x00}, // update f a sb 
	{0x3b05, &op_update,	  5,   0,  11, 0xff, 0x00, 0x00, 0x00}, // update f a sp 
	{0x3c05, &op_update,	  5,   0,  12, 0xff, 0x00, 0x00, 0x00}, // update f a db 
	{0x3d05, &op_update,	  5,   0,  13, 0xff, 0x00, 0x00, 0x00}, // update f a cb 
	{0x3e05, &op_update,	  5,   0,  14, 0xff, 0x00, 0x00, 0x00}, // update f a pi 
	{0x3f05, &op_update,	  5,   0,   8, 0xff, 0x00, 0x04, 0x00}, // update f a <literal> 
	{0x3015, &op_update,	  5,   1,   0, 0xff, 0x00, 0x00, 0x00}, // update f b a 
	{0x3115, &op_update,	  5,   1,   1, 0xff, 0x00, 0x00, 0x00}, // update f b b 
	{0x3215, &op_update,	  5,   1,   2, 0xff, 0x00, 0x00, 0x00}, // update f b c 
	{0x3315, &op_update,	  5,   1,   3, 0xff, 0x00, 0x00, 0x00}, // update f b d 
	{0x3415, &op_update,	  5,   1,   4, 0xff, 0x00, 0x00, 0x00}, // update f b e 
	{0x3515, &op_update,	  5,   1,   5, 0xff, 0x00, 0x00, 0x00}, // update f b f 
	{0x3615, &op_update,	  5,   1,   6, 0xff, 0x00, 0x00, 0x00}, // update f b g 
	{0x3715, &op_update,	  5,   1,   7, 0xff, 0x00, 0x00, 0x00}, // update f b h 
	{0x3815, &op_update,	  5,   1,   8, 0xff, 0x00, 0x00, 0x00}, // update f b pc 
	{0x3915, &op_update,	  5,   1,   9, 0xff, 0x00, 0x00, 0x00}, // update f b ra 
	{0x3a15, &op_update,	  5,   1,  10, 0xff, 0x00, 0x00, 0x00}, // update f b sb 
	{0x3b15, &op_update,	  5,   1,  11, 0xff, 0x00, 0x00, 0x00}, // update f b sp 
	{0x3c15, &op_update,	  5,   1,  12, 0xff, 0x00, 0x00, 0x00}, // update f b db 
	{0x3d15, &op_update,	  5,   1,  13, 0xff, 0x00, 0x00, 0x00}, // update f b cb 
	{0x3e15, &op_update,	  5,   1,  14, 0xff, 0x00, 0x00, 0x00}, // update f b pi 
	{0x3f15, &op_update,	  5,   1,   8, 0xff, 0x00, 0x04, 0x00}, // update f b <literal> 
	{0x3025, &op_update,	  5,   2,   0, 0xff, 0x00, 0x00, 0x00}, // update f c a 
	{0x3125, &op_update,	  5,   2,   1, 0xff, 0x00, 0x00, 0x00}, // update f c b 
	{0x3225, &op_update,	  5,   2,   2, 0xff, 0x00, 0x00, 0x00}, // update f c c 
	{0x3325, &op_update,	  5,   2,   3, 0xff, 0x00, 0x00, 0x00}, // update f c d 
	{0x3425, &op_update,	  5,   2,   4, 0xff, 0x00, 0x00, 0x00}, // update f c e 
	{0x3525, &op_update,	  5,   2,   5, 0xff, 0x00, 0x00, 0x00}, // update f c f 
	{0x3625, &op_update,	  5,   2,   6, 0xff, 0x00, 0x00, 0x00}, // update f c g 
	{0x3725, &op_update,	  5,   2,   7, 0xff, 0x00, 0x00, 0x00}, // update f c h 
	{0x3825, &op_update,	  5,   2,   8, 0xff, 0x00, 0x00, 0x00}, // update f c pc 
	{0x3925, &op_update,	  5,   2,   9, 0xff, 0x00, 0x00, 0x00}, // update f c ra 
	{0x3a25, &op_update,	  5,   2,  10, 0xff, 0x00, 0x00, 0x00}, // update f c sb 
	{0x3b25, &op_update,	  5,   2,  11, 0xff, 0x00, 0x00, 0x00}, // update f c sp 
	{0x3c25, &op_update,	  5,   2,  12, 0xff, 0x00, 0x00, 0x00}, // update f c db 
	{0x3d25, &op_update,	  5,   2,  13, 0xff, 0x00, 0x00, 0x00}, // update f c cb 
	{0x3e25, &op_update,	  5,   2,  14, 0xff, 0x00, 0x00, 0x00}, // update f c pi 
	{0x3f25, &op_update,	  5,   2,   8, 0xff, 0x00, 0x04, 0x00}, // update f c <literal> 
	{0x3035, &op_update,	  5,   3,   0, 0xff, 0x00, 0x00, 0x00}, // update f d a 
	{0x3135, &op_update,	  5,   3,   1, 0xff, 0x00, 0x00, 0x00}, // update f d b 
	{0x3235, &op_update,	  5,   3,   2, 0xff, 0x00, 0x00, 0x00}, // update f d c 
	{0x3335, &op_update,	  5,   3,   3, 0xff, 0x00, 0x00, 0x00}, // update f d d 
	{0x3435, &op_update,	  5,   3,   4, 0xff, 0x00, 0x00, 0x00}, // update f d e 
	{0x3535, &op_update,	  5,   3,   5, 0xff, 0x00, 0x00, 0x00}, // update f d f 
	{0x3635, &op_update,	  5,   3,   6, 0xff, 0x00, 0x00, 0x00}, // update f d g 
	{0x3735, &op_update,	  5,   3,   7, 0xff, 0x00, 0x00, 0x00}, // update f d h 
	{0x3835, &op_update,	  5,   3,   8, 0xff, 0x00, 0x00, 0x00}, // update f d pc 
	{0x3935, &op_update,	  5,   3,   9, 0xff, 0x00, 0x00, 0x00}, // update f d ra 
	{0x3a35, &op_update,	  5,   3,  10, 0xff, 0x00, 0x00, 0x00}, // update f d sb 
	{0x3b35, &op_update,	  5,   3,  11, 0xff, 0x00, 0x00, 0x00}, // update f d sp 
	{0x3c35, &op_update,	  5,   3,  12, 0xff, 0x00, 0x00, 0x00}, // update f d db 
	{0x3d35, &op_update,	  5,   3,  13, 0xff, 0x00, 0x00, 0x00}, // update f d cb 
	{0x3e35, &op_update,	  5,   3,  14, 0xff, 0x00, 0x00, 0x00}, // update f d pi 
	{0x3f35, &op_update,	  5,   3,   8, 0xff, 0x00, 0x04, 0x00}, // update f d <literal> 
	{0x3045, &op_update,	  5,   4,   0, 0xff, 0x00, 0x00, 0x00}, // update f e a 
	{0x3145, &op_update,	  5,   4,   1, 0xff, 0x00, 0x00, 0x00}, // update f e b 
	{0x3245, &op_update,	  5,   4,   2, 0xff, 0x00, 0x00, 0x00}, // update f e c 
	{0x3345, &op_update,	  5,   4,   3, 0xff, 0x00, 0x00, 0x00}, // update f e d 
	{0x3445, &op_update,	  5,   4,   4, 0xff, 0x00, 0x00, 0x00}, // update f e e 
	{0x3545, &op_update,	  5,   4,   5, 0xff, 0x00, 0x00, 0x00}, // update f e f 
	{0x3645, &op_update,	  5,   4,   6, 0xff, 0x00, 0x00, 0x00}, // update f e g 
	{0x3745, &op_update,	  5,   4,   7, 0xff, 0x00, 0x00, 0x00}, // update f e h 
	{0x3845, &op_update,	  5,   4,   8, 0xff, 0x00, 0x00, 0x00}, // update f e pc 
	{0x3945, &op_update,	  5,   4,   9, 0xff, 0x00, 0x00, 0x00}, // update f e ra 
	{0x3a45, &op_update,	  5,   4,  10, 0xff, 0x00, 0x00, 0x00}, // update f e sb 
	{0x3b45, &op_update,	  5,   4,  11, 0xff, 0x00, 0x00, 0x00}, // update f e sp 
	{0x3c45, &op_update,	  5,   4,  12, 0xff, 0x00, 0x00, 0x00}, // update f e db 
	{0x3d45, &op_update,	  5,   4,  13, 0xff, 0x00, 0x00, 0x00}, // update f e cb 
	{0x3e45, &op_update,	  5,   4,  14, 0xff, 0x00, 0x00, 0x00}, // update f e pi 
	{0x3f45, &op_update,	  5,   4,   8, 0xff, 0x00, 0x04, 0x00}, // update f e <literal> 
	{0x3055, &op_update,	  5,   5,   0, 0xff, 0x00, 0x00, 0x00}, // update f f a 
	{0x3155, &op_update,	  5,   5,   1, 0xff, 0x00, 0x00, 0x00}, // update f f b 
	{0x3255, &op_update,	  5,   5,   2, 0xff, 0x00, 0x00, 0x00}, // update f f c 
	{0x3355, &op_update,	  5,   5,   3, 0xff, 0x00, 0x00, 0x00}, // update f f d 
	{0x3455, &op_update,	  5,   5,   4, 0xff, 0x00, 0x00, 0x00}, // update f f e 
	{0x3555, &op_update,	  5,   5,   5, 0xff, 0x00, 0x00, 0x00}, // update f f f 
	{0x3655, &op_update,	  5,   5,   6, 0xff, 0x00, 0x00, 0x00}, // update f f g 
	{0x3755, &op_update,	  5,   5,   7, 0xff, 0x00, 0x00, 0x00}, // update f f h 
	{0x3855, &op_update,	  5,   5,   8, 0xff, 0x00, 0x00, 0x00}, // update f f pc 
	{0x3955, &op_update,	  5,   5,   9, 0xff, 0x00, 0x00, 0x00}, // update f f ra 
	{0x3a55, &op_update,	  5,   5,  10, 0xff, 0x00, 0x00, 0x00}, // update f f sb 
	{0x3b55, &op_update,	  5,   5,  11, 0xff, 0x00, 0x00, 0x00}, // update f f sp 
	{0x3c55, &op_update,	  5,   5,  12, 0xff, 0x00, 0x00, 0x00}, // update f f db 
	{0x3d55, &op_update,	  5,   5,  13, 0xff, 0x00, 0x00, 0x00}, // update f f cb 
	{0x3e55, &op_update,	  5,   5,  14, 0xff, 0x00, 0x00, 0x00}, // update f f pi 
	{0x3f55, &op_update,	  5,   5,   8, 0xff, 0x00, 0x04, 0x00}, // update f f <literal> 
	{0x3065, &op_update,	  5,   6,   0, 0xff, 0x00, 0x00, 0x00}, // update f g a 
	{0x3165, &op_update,	  5,   6,   1, 0xff, 0x00, 0x00, 0x00}, // update f g b 
	{0x3265, &op_update,	  5,   6,   2, 0xff, 0x00, 0x00, 0x00}, // update f g c 
	{0x3365, &op_update,	  5,   6,   3, 0xff, 0x00, 0x00, 0x00}, // update f g d 
	{0x3465, &op_update,	  5,   6,   4, 0xff, 0x00, 0x00, 0x00}, // update f g e 
	{0x3565, &op_update,	  5,   6,   5, 0xff, 0x00, 0x00, 0x00}, // update f g f 
	{0x3665, &op_update,	  5,   6,   6, 0xff, 0x00, 0x00, 0x00}, // update f g g 
	{0x3765, &op_update,	  5,   6,   7, 0xff, 0x00, 0x00, 0x00}, // update f g h 
	{0x3865, &op_update,	  5,   6,   8, 0xff, 0x00, 0x00, 0x00}, // update f g pc 
	{0x3965, &op_update,	  5,   6,   9, 0xff, 0x00, 0x00, 0x00}, // update f g ra 
	{0x3a65, &op_update,	  5,   6,  10, 0xff, 0x00, 0x00, 0x00}, // update f g sb 
	{0x3b65, &op_update,	  5,   6,  11, 0xff, 0x00, 0x00, 0x00}, // update f g sp 
	{0x3c65, &op_update,	  5,   6,  12, 0xff, 0x00, 0x00, 0x00}, // update f g db 
	{0x3d65, &op_update,	  5,   6,  13, 0xff, 0x00, 0x00, 0x00}, // update f g cb 
	{0x3e65, &op_update,	  5,   6,  14, 0xff, 0x00, 0x00, 0x00}, // update f g pi 
	{0x3f65, &op_update,	  5,   6,   8, 0xff, 0x00, 0x04, 0x00}, // update f g <literal> 
	{0x3075, &op_update,	  5,   7,   0, 0xff, 0x00, 0x00, 0x00}, // update f h a 
	{0x3175, &op_update,	  5,   7,   1, 0xff, 0x00, 0x00, 0x00}, // update f h b 
	{0x3275, &op_update,	  5,   7,   2, 0xff, 0x00, 0x00, 0x00}, // update f h c 
	{0x3375, &op_update,	  5,   7,   3, 0xff, 0x00, 0x00, 0x00}, // update f h d 
	{0x3475, &op_update,	  5,   7,   4, 0xff, 0x00, 0x00, 0x00}, // update f h e 
	{0x3575, &op_update,	  5,   7,   5, 0xff, 0x00, 0x00, 0x00}, // update f h f 
	{0x3675, &op_update,	  5,   7,   6, 0xff, 0x00, 0x00, 0x00}, // update f h g 
	{0x3775, &op_update,	  5,   7,   7, 0xff, 0x00, 0x00, 0x00}, // update f h h 
	{0x3875, &op_update,	  5,   7,   8, 0xff, 0x00, 0x00, 0x00}, // update f h pc 
	{0x3975, &op_update,	  5,   7,   9, 0xff, 0x00, 0x00, 0x00}, // update f h ra 
	{0x3a75, &op_update,	  5,   7,  10, 0xff, 0x00, 0x00, 0x00}, // update f h sb 
	{0x3b75, &op_update,	  5,   7,  11, 0xff, 0x00, 0x00, 0x00}, // update f h sp 
	{0x3c75, &op_update,	  5,   7,  12, 0xff, 0x00, 0x00, 0x00}, // update f h db 
	{0x3d75, &op_update,	  5,   7,  13, 0xff, 0x00, 0x00, 0x00}, // update f h cb 
	{0x3e75, &op_update,	  5,   7,  14, 0xff, 0x00, 0x00, 0x00}, // update f h pi 
	{0x3f75, &op_update,	  5,   7,   8, 0xff, 0x00, 0x04, 0x00}, // update f h <literal> 
	{0x3085, &op_update,	  5,   8,   0, 0xff, 0x00, 0x00, 0x00}, // update f pc a 
	{0x3185, &op_update,	  5,   8,   1, 0xff, 0x00, 0x00, 0x00}, // update f pc b 
	{0x3285, &op_update,	  5,   8,   2, 0xff, 0x00, 0x00, 0x00}, // update f pc c 
	{0x3385, &op_update,	  5,   8,   3, 0xff, 0x00, 0x00, 0x00}, // update f pc d 
	{0x3485, &op_update,	  5,   8,   4, 0xff, 0x00, 0x00, 0x00}, // update f pc e 
	{0x3585, &op_update,	  5,   8,   5, 0xff, 0x00, 0x00, 0x00}, // update f pc f 
	{0x3685, &op_update,	  5,   8,   6, 0xff, 0x00, 0x00, 0x00}, // update f pc g 
	{0x3785, &op_update,	  5,   8,   7, 0xff, 0x00, 0x00, 0x00}, // update f pc h 
	{0x3885, &op_update,	  5,   8,   8, 0xff, 0x00, 0x00, 0x00}, // update f pc pc 
	{0x3985, &op_update,	  5,   8,   9, 0xff, 0x00, 0x00, 0x00}, // update f pc ra 
	{0x3a85, &op_update,	  5,   8,  10, 0xff, 0x00, 0x00, 0x00}, // update f pc sb 
	{0x3b85, &op_update,	  5,   8,  11, 0xff, 0x00, 0x00, 0x00}, // update f pc sp 
	{0x3c85, &op_update,	  5,   8,  12, 0xff, 0x00, 0x00, 0x00}, // update f pc db 
	{0x3d85, &op_update,	  5,   8,  13, 0xff, 0x00, 0x00, 0x00}, // update f pc cb 
	{0x3e85, &op_update,	  5,   8,  14, 0xff, 0x00, 0x00, 0x00}, // update f pc pi 
	{0x3f85, &op_update,	  5,   8,   8, 0xff, 0x00, 0x04, 0x00}, // update f pc <literal> 
	{0x3095, &op_update,	  5,   9,   0, 0xff, 0x00, 0x00, 0x00}, // update f ra a 
	{0x3195, &op_update,	  5,   9,   1, 0xff, 0x00, 0x00, 0x00}, // update f ra b 
	{0x3295, &op_update,	  5,   9,   2, 0xff, 0x00, 0x00, 0x00}, // update f ra c 
	{0x3395, &op_update,	  5,   9,   3, 0xff, 0x00, 0x00, 0x00}, // update f ra d 
	{0x3495, &op_update,	  5,   9,   4, 0xff, 0x00, 0x00, 0x00}, // update f ra e 
	{0x3595, &op_update,	  5,   9,   5, 0xff, 0x00, 0x00, 0x00}, // update f ra f 
	{0x3695, &op_update,	  5,   9,   6, 0xff, 0x00, 0x00, 0x00}, // update f ra g 
	{0x3795, &op_update,	  5,   9,   7, 0xff, 0x00, 0x00, 0x00}, // update f ra h 
	{0x3895, &op_update,	  5,   9,   8, 0xff, 0x00, 0x00, 0x00}, // update f ra pc 
	{0x3995, &op_update,	  5,   9,   9, 0xff, 0x00, 0x00, 0x00}, // update f ra ra 
	{0x3a95, &op_update,	  5,   9,  10, 0xff, 0x00, 0x00, 0x00}, // update f ra sb 
	{0x3b95, &op_update,	  5,   9,  11, 0xff, 0x00, 0x00, 0x00}, // update f ra sp 
	{0x3c95, &op_update,	  5,   9,  12, 0xff, 0x00, 0x00, 0x00}, // update f ra db 
	{0x3d95, &op_update,	  5,   9,  13, 0xff, 0x00, 0x00, 0x00}, // update f ra cb 
	{0x3e95, &op_update,	  5,   9,  14, 0xff, 0x00, 0x00, 0x00}, // update f ra pi 
	{0x3f95, &op_update,	  5,   9,   8, 0xff, 0x00, 0x04, 0x00}, // update f ra <literal> 
	{0x30a5, &op_update,	  5,  10,   0, 0xff, 0x00, 0x00, 0x00}, // update f sb a 
	{0x31a5, &op_update,	  5,  10,   1, 0xff, 0x00, 0x00, 0x00}, // update f sb b 
	{0x32a5, &op_update,	  5,  10,   2, 0xff, 0x00, 0x00, 0x00}, // update f sb c 
	{0x33a5, &op_update,	  5,  10,   3, 0xff, 0x00, 0x00, 0x00}, // update f sb d 
	{0x34a5, &op_update,	  5,  10,   4, 0xff, 0x00, 0x00, 0x00}, // update f sb e 
	{0x35a5, &op_update,	  5,  10,   5, 0xff, 0x00, 0x00, 0x00}, // update f sb f 
	{0x36a5, &op_update,	  5,  10,   6, 0xff, 0x00, 0x00, 0x00}, // update f sb g 
	{0x37a5, &op_update,	  5,  10,   7, 0xff, 0x00, 0x00, 0x00}, // update f sb h 
	{0x38a5, &op_update,	  5,  10,   8, 0xff, 0x00, 0x00, 0x00}, // update f sb pc 
	{0x39a5, &op_update,	  5,  10,   9, 0xff, 0x00, 0x00, 0x00}, // update f sb ra 
	{0x3aa5, &op_update,	  5,  10,  10, 0xff, 0x00, 0x00, 0x00}, // update f sb sb 
	{0x3ba5, &op_update,	  5,  10,  11, 0xff, 0x00, 0x00, 0x00}, // update f sb sp 
	{0x3ca5, &op_update,	  5,  10,  12, 0xff, 0x00, 0x00, 0x00}, // update f sb db 
	{0x3da5, &op_update,	  5,  10,  13, 0xff, 0x00, 0x00, 0x00}, // update f sb cb 
	{0x3ea5, &op_update,	  5,  10,  14, 0xff, 0x00, 0x00, 0x00}, // update f sb pi 
	{0x3fa5, &op_update,	  5,  10,   8, 0xff, 0x00, 0x04, 0x00}, // update f sb <literal> 
	{0x30b5, &op_update,	  5,  11,   0, 0xff, 0x00, 0x00, 0x00}, // update f sp a 
	{0x31b5, &op_update,	  5,  11,   1, 0xff, 0x00, 0x00, 0x00}, // update f sp b 
	{0x32b5, &op_update,	  5,  11,   2, 0xff, 0x00, 0x00, 0x00}, // update f sp c 
	{0x33b5, &op_update,	  5,  11,   3, 0xff, 0x00, 0x00, 0x00}, // update f sp d 
	{0x34b5, &op_update,	  5,  11,   4, 0xff, 0x00, 0x00, 0x00}, // update f sp e 
	{0x35b5, &op_update,	  5,  11,   5, 0xff, 0x00, 0x00, 0x00}, // update f sp f 
	{0x36b5, &op_update,	  5,  11,   6, 0xff, 0x00, 0x00, 0x00}, // update f sp g 
	{0x37b5, &op_update,	  5,  11,   7, 0xff, 0x00, 0x00, 0x00}, // update f sp h 
	{0x38b5, &op_update,	  5,  11,   8, 0xff, 0x00, 0x00, 0x00}, // update f sp pc 
	{0x39b5, &op_update,	  5,  11,   9, 0xff, 0x00, 0x00, 0x00}, // update f sp ra 
	{0x3ab5, &op_update,	  5,  11,  10, 0xff, 0x00, 0x00, 0x00}, // update f sp sb 
	{0x3bb5, &op_update,	  5,  11,  11, 0xff, 0x00, 0x00, 0x00}, // update f sp sp 
	{0x3cb5, &op_update,	  5,  11,  12, 0xff, 0x00, 0x00, 0x00}, // update f sp db 
	{0x3db5, &op_update,	  5,  11,  13, 0xff, 0x00, 0x00, 0x00}, // update f sp cb 
	{0x3eb5, &op_update,	  5,  11,  14, 0xff, 0x00, 0x00, 0x00}, // update f sp pi 
	{0x3fb5, &op_update,	  5,  11,   8, 0xff, 0x00, 0x04, 0x00}, // update f sp <literal> 
	{0x30c5, &op_update,	  5,  12,   0, 0xff, 0x00, 0x00, 0x00}, // update f db a 
	{0x31c5, &op_update,	  5,  12,   1, 0xff, 0x00, 0x00, 0x00}, // update f db b 
	{0x32c5, &op_update,	  5,  12,   2, 0xff, 0x00, 0x00, 0x00}, // update f db c 
	{0x33c5, &op_update,	  5,  12,   3, 0xff, 0x00, 0x00, 0x00}, // update f db d 
	{0x34c5, &op_update,	  5,  12,   4, 0xff, 0x00, 0x00, 0x00}, // update f db e 
	{0x35c5, &op_update,	  5,  12,   5, 0xff, 0x00, 0x00, 0x00}, // update f db f 
	{0x36c5, &op_update,	  5,  12,   6, 0xff, 0x00, 0x00, 0x00}, // update f db g 
	{0x37c5, &op_update,	  5,  12,   7, 0xff, 0x00, 0x00, 0x00}, // update f db h 
	{0x38c5, &op_update,	  5,  12,   8, 0xff, 0x00, 0x00, 0x00}, // update f db pc 
	{0x39c5, &op_update,	  5,  12,   9, 0xff, 0x00, 0x00, 0x00}, // update f db ra 
	{0x3ac5, &op_update,	  5,  12,  10, 0xff, 0x00, 0x00, 0x00}, // update f db sb 
	{0x3bc5, &op_update,	  5,  12,  11, 0xff, 0x00, 0x00, 0x00}, // update f db sp 
	{0x3cc5, &op_update,	  5,  12,  12, 0xff, 0x00, 0x00, 0x00}, // update f db db 
	{0x3dc5, &op_update,	  5,  12,  13, 0xff, 0x00, 0x00, 0x00}, // update f db cb 
	{0x3ec5, &op_update,	  5,  12,  14, 0xff, 0x00, 0x00, 0x00}, // update f db pi 
	{0x3fc5, &op_update,	  5,  12,   8, 0xff, 0x00, 0x04, 0x00}, // update f db <literal> 
	{0x30d5, &op_update,	  5,  13,   0, 0xff, 0x00, 0x00, 0x00}, // update f cb a 
	{0x31d5, &op_update,	  5,  13,   1, 0xff, 0x00, 0x00, 0x00}, // update f cb b 
	{0x32d5, &op_update,	  5,  13,   2, 0xff, 0x00, 0x00, 0x00}, // update f cb c 
	{0x33d5, &op_update,	  5,  13,   3, 0xff, 0x00, 0x00, 0x00}, // update f cb d 
	{0x34d5, &op_update,	  5,  13,   4, 0xff, 0x00, 0x00, 0x00}, // update f cb e 
	{0x35d5, &op_update,	  5,  13,   5, 0xff, 0x00, 0x00, 0x00}, // update f cb f 
	{0x36d5, &op_update,	  5,  13,   6, 0xff, 0x00, 0x00, 0x00}, // update f cb g 
	{0x37d5, &op_update,	  5,  13,   7, 0xff, 0x00, 0x00, 0x00}, // update f cb h 
	{0x38d5, &op_update,	  5,  13,   8, 0xff, 0x00, 0x00, 0x00}, // update f cb pc 
	{0x39d5, &op_update,	  5,  13,   9, 0xff, 0x00, 0x00, 0x00}, // update f cb ra 
	{0x3ad5, &op_update,	  5,  13,  10, 0xff, 0x00, 0x00, 0x00}, // update f cb sb 
	{0x3bd5, &op_update,	  5,  13,  11, 0xff, 0x00, 0x00, 0x00}, // update f cb sp 
	{0x3cd5, &op_update,	  5,  13,  12, 0xff, 0x00, 0x00, 0x00}, // update f cb db 
	{0x3dd5, &op_update,	  5,  13,  13, 0xff, 0x00, 0x00, 0x00}, // update f cb cb 
	{0x3ed5, &op_update,	  5,  13,  14, 0xff, 0x00, 0x00, 0x00}, // update f cb pi 
	{0x3fd5, &op_update,	  5,  13,   8, 0xff, 0x00, 0x04, 0x00}, // update f cb <literal> 
	{0x30e5, &op_update,	  5,  14,   0, 0xff, 0x00, 0x00, 0x00}, // update f pi a 
	{0x31e5, &op_update,	  5,  14,   1, 0xff, 0x00, 0x00, 0x00}, // update f pi b 
	{0x32e5, &op_update,	  5,  14,   2, 0xff, 0x00, 0x00, 0x00}, // update f pi c 
	{0x33e5, &op_update,	  5,  14,   3, 0xff, 0x00, 0x00, 0x00}, // update f pi d 
	{0x34e5, &op_update,	  5,  14,   4, 0xff, 0x00, 0x00, 0x00}, // update f pi e 
	{0x35e5, &op_update,	  5,  14,   5, 0xff, 0x00, 0x00, 0x00}, // update f pi f 
	{0x36e5, &op_update,	  5,  14,   6, 0xff, 0x00, 0x00, 0x00}, // update f pi g 
	{0x37e5, &op_update,	  5,  14,   7, 0xff, 0x00, 0x00, 0x00}, // update f pi h 
	{0x38e5, &op_update,	  5,  14,   8, 0xff, 0x00, 0x00, 0x00}, // update f pi pc 
	{0x39e5, &op_update,	  5,  14,   9, 0xff, 0x00, 0x00, 0x00}, // update f pi ra 
	{0x3ae5, &op_update,	  5,  14,  10, 0xff, 0x00, 0x00, 0x00}, // update f pi sb 
	{0x3be5, &op_update,	  5,  14,  11, 0xff, 0x00, 0x00, 0x00}, // update f pi sp 
	{0x3ce5, &op_update,	  5,  14,  12, 0xff, 0x00, 0x00, 0x00}, // update f pi db 
	{0x3de5, &op_update,	  5,  14,  13, 0xff, 0x00, 0x00, 0x00}, // update f pi cb 
	{0x3ee5, &op_update,	  5,  14,  14, 0xff, 0x00, 0x00, 0x00}, // update f pi pi 
	{0x3fe5, &op_update,	  5,  14,   8, 0xff, 0x00, 0x04, 0x00}, // update f pi <literal> 
	{0x30f5, &op_update,	  5,  15,   0, 0xff, 0x00, 0x00, 0x00}, // update f status a 
	{0x31f5, &op_update,	  5,  15,   1, 0xff, 0x00, 0x00, 0x00}, // update f status b 
	{0x32f5, &op_update,	  5,  15,   2, 0xff, 0x00, 0x00, 0x00}, // update f status c 
	{0x33f5, &op_update,	  5,  15,   3, 0xff, 0x00, 0x00, 0x00}, // update f status d 
	{0x34f5, &op_update,	  5,  15,   4, 0xff, 0x00, 0x00, 0x00}, // update f status e 
	{0x35f5, &op_update,	  5,  15,   5, 0xff, 0x00, 0x00, 0x00}, // update f status f 
	{0x36f5, &op_update,	  5,  15,   6, 0xff, 0x00, 0x00, 0x00}, // update f status g 
	{0x37f5, &op_update,	  5,  15,   7, 0xff, 0x00, 0x00, 0x00}, // update f status h 
	{0x38f5, &op_update,	  5,  15,   8, 0xff, 0x00, 0x00, 0x00}, // update f status pc 
	{0x39f5, &op_update,	  5,  15,   9, 0xff, 0x00, 0x00, 0x00}, // update f status ra 
	{0x3af5, &op_update,	  5,  15,  10, 0xff, 0x00, 0x00, 0x00}, // update f status sb 
	{0x3bf5, &op_update,	  5,  15,  11, 0xff, 0x00, 0x00, 0x00}, // update f status sp 
	{0x3cf5, &op_update,	  5,  15,  12, 0xff, 0x00, 0x00, 0x00}, // update f status db 
	{0x3df5, &op_update,	  5,  15,  13, 0xff, 0x00, 0x00, 0x00}, // update f status cb 
	{0x3ef5, &op_update,	  5,  15,  14, 0xff, 0x00, 0x00, 0x00}, // update f status pi 
	{0x3ff5, &op_update,	  5,  15,   8, 0xff, 0x00, 0x04, 0x00}, // update f status <literal> 
	{0x3006, &op_update,	  6,   0,   0, 0xff, 0x00, 0x00, 0x00}, // update g a a 
	{0x3106, &op_update,	  6,   0,   1, 0xff, 0x00, 0x00, 0x00}, // update g a b 
	{0x3206, &op_update,	  6,   0,   2, 0xff, 0x00, 0x00, 0x00}, // update g a c 
	{0x3306, &op_update,	  6,   0,   3, 0xff, 0x00, 0x00, 0x00}, // update g a d 
	{0x3406, &op_update,	  6,   0,   4, 0xff, 0x00, 0x00, 0x00}, // update g a e 
	{0x3506, &op_update,	  6,   0,   5, 0xff, 0x00, 0x00, 0x00}, // update g a f 
	{0x3606, &op_update,	  6,   0,   6, 0xff, 0x00, 0x00, 0x00}, // update g a g 
	{0x3706, &op_update,	  6,   0,   7, 0xff, 0x00, 0x00, 0x00}, // update g a h 
	{0x3806, &op_update,	  6,   0,   8, 0xff, 0x00, 0x00, 0x00}, // update g a pc 
	{0x3906, &op_update,	  6,   0,   9, 0xff, 0x00, 0x00, 0x00}, // update g a ra 
	{0x3a06, &op_update,	  6,   0,  10, 0xff, 0x00, 0x00, 0x00}, // update g a sb 
	{0x3b06, &op_update,	  6,   0,  11, 0xff, 0x00, 0x00, 0x00}, // update g a sp 
	{0x3c06, &op_update,	  6,   0,  12, 0xff, 0x00, 0x00, 0x00}, // update g a db 
	{0x3d06, &op_update,	  6,   0,  13, 0xff, 0x00, 0x00, 0x00}, // update g a cb 
	{0x3e06, &op_update,	  6,   0,  14, 0xff, 0x00, 0x00, 0x00}, // update g a pi 
	{0x3f06, &op_update,	  6,   0,   8, 0xff, 0x00, 0x04, 0x00}, // update g a <literal> 
	{0x3016, &op_update,	  6,   1,   0, 0xff, 0x00, 0x00, 0x00}, // update g b a 
	{0x3116, &op_update,	  6,   1,   1, 0xff, 0x00, 0x00, 0x00}, // update g b b 
	{0x3216, &op_update,	  6,   1,   2, 0xff, 0x00, 0x00, 0x00}, // update g b c 
	{0x3316, &op_update,	  6,   1,   3, 0xff, 0x00, 0x00, 0x00}, // update g b d 
	{0x3416, &op_update,	  6,   1,   4, 0xff, 0x00, 0x00, 0x00}, // update g b e 
	{0x3516, &op_update,	  6,   1,   5, 0xff, 0x00, 0x00, 0x00}, // update g b f 
	{0x3616, &op_update,	  6,   1,   6, 0xff, 0x00, 0x00, 0x00}, // update g b g 
	{0x3716, &op_update,	  6,   1,   7, 0xff, 0x00, 0x00, 0x00}, // update g b h 
	{0x3816, &op_update,	  6,   1,   8, 0xff, 0x00, 0x00, 0x00}, // update g b pc 
	{0x3916, &op_update,	  6,   1,   9, 0xff, 0x00, 0x00, 0x00}, // update g b ra 
	{0x3a16, &op_update,	  6,   1,  10, 0xff, 0x00, 0x00, 0x00}, // update g b sb 
	{0x3b16, &op_update,	  6,   1,  11, 0xff, 0x00, 0x00, 0x00}, // update g b sp 
	{0x3c16, &op_update,	  6,   1,  12, 0xff, 0x00, 0x00, 0x00}, // update g b db 
	{0x3d16, &op_update,	  6,   1,  13, 0xff, 0x00, 0x00, 0x00}, // update g b cb 
	{0x3e16, &op_update,	  6,   1,  14, 0xff, 0x00, 0x00, 0x00}, // update g b pi 
	{0x3f16, &op_update,	  6,   1,   8, 0xff, 0x00, 0x04, 0x00}, // update g b <literal> 
	{0x3026, &op_update,	  6,   2,   0, 0xff, 0x00, 0x00, 0x00}, // update g c a 
	{0x3126, &op_update,	  6,   2,   1, 0xff, 0x00, 0x00, 0x00}, // update g c b 
	{0x3226, &op_update,	  6,   2,   2, 0xff, 0x00, 0x00, 0x00}, // update g c c 
	{0x3326, &op_update,	  6,   2,   3, 0xff, 0x00, 0x00, 0x00}, // update g c d 
	{0x3426, &op_update,	  6,   2,   4, 0xff, 0x00, 0x00, 0x00}, // update g c e 
	{0x3526, &op_update,	  6,   2,   5, 0xff, 0x00, 0x00, 0x00}, // update g c f 
	{0x3626, &op_update,	  6,   2,   6, 0xff, 0x00, 0x00, 0x00}, // update g c g 
	{0x3726, &op_update,	  6,   2,   7, 0xff, 0x00, 0x00, 0x00}, // update g c h 
	{0x3826, &op_update,	  6,   2,   8, 0xff, 0x00, 0x00, 0x00}, // update g c pc 
	{0x3926, &op_update,	  6,   2,   9, 0xff, 0x00, 0x00, 0x00}, // update g c ra 
	{0x3a26, &op_update,	  6,   2,  10, 0xff, 0x00, 0x00, 0x00}, // update g c sb 
	{0x3b26, &op_update,	  6,   2,  11, 0xff, 0x00, 0x00, 0x00}, // update g c sp 
	{0x3c26, &op_update,	  6,   2,  12, 0xff, 0x00, 0x00, 0x00}, // update g c db 
	{0x3d26, &op_update,	  6,   2,  13, 0xff, 0x00, 0x00, 0x00}, // update g c cb 
	{0x3e26, &op_update,	  6,   2,  14, 0xff, 0x00, 0x00, 0x00}, // update g c pi 
	{0x3f26, &op_update,	  6,   2,   8, 0xff, 0x00, 0x04, 0x00}, // update g c <literal> 
	{0x3036, &op_update,	  6,   3,   0, 0xff, 0x00, 0x00, 0x00}, // update g d a 
	{0x3136, &op_update,	  6,   3,   1, 0xff, 0x00, 0x00, 0x00}, // update g d b 
	{0x3236, &op_update,	  6,   3,   2, 0xff, 0x00, 0x00, 0x00}, // update g d c 
	{0x3336, &op_update,	  6,   3,   3, 0xff, 0x00, 0x00, 0x00}, // update g d d 
	{0x3436, &op_update,	  6,   3,   4, 0xff, 0x00, 0x00, 0x00}, // update g d e 
	{0x3536, &op_update,	  6,   3,   5, 0xff, 0x00, 0x00, 0x00}, // update g d f 
	{0x3636, &op_update,	  6,   3,   6, 0xff, 0x00, 0x00, 0x00}, // update g d g 
	{0x3736, &op_update,	  6,   3,   7, 0xff, 0x00, 0x00, 0x00}, // update g d h 
	{0x3836, &op_update,	  6,   3,   8, 0xff, 0x00, 0x00, 0x00}, // update g d pc 
	{0x3936, &op_update,	  6,   3,   9, 0xff, 0x00, 0x00, 0x00}, // update g d ra 
	{0x3a36, &op_update,	  6,   3,  10, 0xff, 0x00, 0x00, 0x00}, // update g d sb 
	{0x3b36, &op_update,	  6,   3,  11, 0xff, 0x00, 0x00, 0x00}, // update g d sp 
	{0x3c36, &op_update,	  6,   3,  12, 0xff, 0x00, 0x00, 0x00}, // update g d db 
	{0x3d36, &op_update,	  6,   3,  13, 0xff, 0x00, 0x00, 0x00}, // update g d cb 
	{0x3e36, &op_update,	  6,   3,  14, 0xff, 0x00, 0x00, 0x00}, // update g d pi 
	{0x3f36, &op_update,	  6,   3,   8, 0xff, 0x00, 0x04, 0x00}, // update g d <literal> 
	{0x3046, &op_update,	  6,   4,   0, 0xff, 0x00, 0x00, 0x00}, // update g e a 
	{0x3146, &op_update,	  6,   4,   1, 0xff, 0x00, 0x00, 0x00}, // update g e b 
	{0x3246, &op_update,	  6,   4,   2, 0xff, 0x00, 0x00, 0x00}, // update g e c 
	{0x3346, &op_update,	  6,   4,   3, 0xff, 0x00, 0x00, 0x00}, // update g e d 
	{0x3446, &op_update,	  6,   4,   4, 0xff, 0x00, 0x00, 0x00}, // update g e e 
	{0x3546, &op_update,	  6,   4,   5, 0xff, 0x00, 0x00, 0x00}, // update g e f 
	{0x3646, &op_update,	  6,   4,   6, 0xff, 0x00, 0x00, 0x00}, // update g e g 
	{0x3746, &op_update,	  6,   4,   7, 0xff, 0x00, 0x00, 0x00}, // update g e h 
	{0x3846, &op_update,	  6,   4,   8, 0xff, 0x00, 0x00, 0x00}, // update g e pc 
	{0x3946, &op_update,	  6,   4,   9, 0xff, 0x00, 0x00, 0x00}, // update g e ra 
	{0x3a46, &op_update,	  6,   4,  10, 0xff, 0x00, 0x00, 0x00}, // update g e sb 
	{0x3b46, &op_update,	  6,   4,  11, 0xff, 0x00, 0x00, 0x00}, // update g e sp 
	{0x3c46, &op_update,	  6,   4,  12, 0xff, 0x00, 0x00, 0x00}, // update g e db 
	{0x3d46, &op_update,	  6,   4,  13, 0xff, 0x00, 0x00, 0x00}, // update g e cb 
	{0x3e46, &op_update,	  6,   4,  14, 0xff, 0x00, 0x00, 0x00}, // update g e pi 
	{0x3f46, &op_update,	  6,   4,   8, 0xff, 0x00, 0x04, 0x00}, // update g e <literal> 
	{0x3056, &op_update,	  6,   5,   0, 0xff, 0x00, 0x00, 0x00}, // update g f a 
	{0x3156, &op_update,	  6,   5,   1, 0xff, 0x00, 0x00, 0x00}, // update g f b 
	{0x3256, &op_update,	  6,   5,   2, 0xff, 0x00, 0x00, 0x00}, // update g f c 
	{0x3356, &op_update,	  6,   5,   3, 0xff, 0x00, 0x00, 0x00}, // update g f d 
	{0x3456, &op_update,	  6,   5,   4, 0xff, 0x00, 0x00, 0x00}, // update g f e 
	{0x3556, &op_update,	  6,   5,   5, 0xff, 0x00, 0x00, 0x00}, // update g f f 
	{0x3656, &op_update,	  6,   5,   6, 0xff, 0x00, 0x00, 0x00}, // update g f g 
	{0x3756, &op_update,	  6,   5,   7, 0xff, 0x00, 0x00, 0x00}, // update g f h 
	{0x3856, &op_update,	  6,   5,   8, 0xff, 0x00, 0x00, 0x00}, // update g f pc 
	{0x3956, &op_update,	  6,   5,   9, 0xff, 0x00, 0x00, 0x00}, // update g f ra 
	{0x3a56, &op_update,	  6,   5,  10, 0xff, 0x00, 0x00, 0x00}, // update g f sb 
	{0x3b56, &op_update,	  6,   5,  11, 0xff, 0x00, 0x00, 0x00}, // update g f sp 
	{0x3c56, &op_update,	  6,   5,  12, 0xff, 0x00, 0x00, 0x00}, // update g f db 
	{0x3d56, &op_update,	  6,   5,  13, 0xff, 0x00, 0x00, 0x00}, // update g f cb 
	{0x3e56, &op_update,	  6,   5,  14, 0xff, 0x00, 0x00, 0x00}, // update g f pi 
	{0x3f56, &op_update,	  6,   5,   8, 0xff, 0x00, 0x04, 0x00}, // update g f <literal> 
	{0x3066, &op_update,	  6,   6,   0, 0xff, 0x00, 0x00, 0x00}, // update g g a 
	{0x3166, &op_update,	  6,   6,   1, 0xff, 0x00, 0x00, 0x00}, // update g g b 
	{0x3266, &op_update,	  6,   6,   2, 0xff, 0x00, 0x00, 0x00}, // update g g c 
	{0x3366, &op_update,	  6,   6,   3, 0xff, 0x00, 0x00, 0x00}, // update g g d 
	{0x3466, &op_update,	  6,   6,   4, 0xff, 0x00, 0x00, 0x00}, // update g g e 
	{0x3566, &op_update,	  6,   6,   5, 0xff, 0x00, 0x00, 0x00}, // update g g f 
	{0x3666, &op_update,	  6,   6,   6, 0xff, 0x00, 0x00, 0x00}, // update g g g 
	{0x3766, &op_update,	  6,   6,   7, 0xff, 0x00, 0x00, 0x00}, // update g g h 
	{0x3866, &op_update,	  6,   6,   8, 0xff, 0x00, 0x00, 0x00}, // update g g pc 
	{0x3966, &op_update,	  6,   6,   9, 0xff, 0x00, 0x00, 0x00}, // update g g ra 
	{0x3a66, &op_update,	  6,   6,  10, 0xff, 0x00, 0x00, 0x00}, // update g g sb 
	{0x3b66, &op_update,	  6,   6,  11, 0xff, 0x00, 0x00, 0x00}, // update g g sp 
	{0x3c66, &op_update,	  6,   6,  12, 0xff, 0x00, 0x00, 0x00}, // update g g db 
	{0x3d66, &op_update,	  6,   6,  13, 0xff, 0x00, 0x00, 0x00}, // update g g cb 
	{0x3e66, &op_update,	  6,   6,  14, 0xff, 0x00, 0x00, 0x00}, // update g g pi 
	{0x3f66, &op_update,	  6,   6,   8, 0xff, 0x00, 0x04, 0x00}, // update g g <literal> 
	{0x3076, &op_update,	  6,   7,   0, 0xff, 0x00, 0x00, 0x00}, // update g h a 
	{0x3176, &op_update,	  6,   7,   1, 0xff, 0x00, 0x00, 0x00}, // update g h b 
	{0x3276, &op_update,	  6,   7,   2, 0xff, 0x00, 0x00, 0x00}, // update g h c 
	{0x3376, &op_update,	  6,   7,   3, 0xff, 0x00, 0x00, 0x00}, // update g h d 
	{0x3476, &op_update,	  6,   7,   4, 0xff, 0x00, 0x00, 0x00}, // update g h e 
	{0x3576, &op_update,	  6,   7,   5, 0xff, 0x00, 0x00, 0x00}, // update g h f 
	{0x3676, &op_update,	  6,   7,   6, 0xff, 0x00, 0x00, 0x00}, // update g h g 
	{0x3776, &op_update,	  6,   7,   7, 0xff, 0x00, 0x00, 0x00}, // update g h h 
	{0x3876, &op_update,	  6,   7,   8, 0xff, 0x00, 0x00, 0x00}, // update g h pc 
	{0x3976, &op_update,	  6,   7,   9, 0xff, 0x00, 0x00, 0x00}, // update g h ra 
	{0x3a76, &op_update,	  6,   7,  10, 0xff, 0x00, 0x00, 0x00}, // update g h sb 
	{0x3b76, &op_update,	  6,   7,  11, 0xff, 0x00, 0x00, 0x00}, // update g h sp 
	{0x3c76, &op_update,	  6,   7,  12, 0xff, 0x00, 0x00, 0x00}, // update g h db 
	{0x3d76, &op_update,	  6,   7,  13, 0xff, 0x00, 0x00, 0x00}, // update g h cb 
	{0x3e76, &op_update,	  6,   7,  14, 0xff, 0x00, 0x00, 0x00}, // update g h pi 
	{0x3f76, &op_update,	  6,   7,   8, 0xff, 0x00, 0x04, 0x00}, // update g h <literal> 
	{0x3086, &op_update,	  6,   8,   0, 0xff, 0x00, 0x00, 0x00}, // update g pc a 
	{0x3186, &op_update,	  6,   8,   1, 0xff, 0x00, 0x00, 0x00}, // update g pc b 
	{0x3286, &op_update,	  6,   8,   2, 0xff, 0x00, 0x00, 0x00}, // update g pc c 
	{0x3386, &op_update,	  6,   8,   3, 0xff, 0x00, 0x00, 0x00}, // update g pc d 
	{0x3486, &op_update,	  6,   8,   4, 0xff, 0x00, 0x00, 0x00}, // update g pc e 
	{0x3586, &op_update,	  6,   8,   5, 0xff, 0x00, 0x00, 0x00}, // update g pc f 
	{0x3686, &op_update,	  6,   8,   6, 0xff, 0x00, 0x00, 0x00}, // update g pc g 
	{0x3786, &op_update,	  6,   8,   7, 0xff, 0x00, 0x00, 0x00}, // update g pc h 
	{0x3886, &op_update,	  6,   8,   8, 0xff, 0x00, 0x00, 0x00}, // update g pc pc 
	{0x3986, &op_update,	  6,   8,   9, 0xff, 0x00, 0x00, 0x00}, // update g pc ra 
	{0x3a86, &op_update,	  6,   8,  10, 0xff, 0x00, 0x00, 0x00}, // update g pc sb 
	{0x3b86, &op_update,	  6,   8,  11, 0xff, 0x00, 0x00, 0x00}, // update g pc sp 
	{0x3c86, &op_update,	  6,   8,  12, 0xff, 0x00, 0x00, 0x00}, // update g pc db 
	{0x3d86, &op_update,	  6,   8,  13, 0xff, 0x00, 0x00, 0x00}, // update g pc cb 
	{0x3e86, &op_update,	  6,   8,  14, 0xff, 0x00, 0x00, 0x00}, // update g pc pi 
	{0x3f86, &op_update,	  6,   8,   8, 0xff, 0x00, 0x04, 0x00}, // update g pc <literal> 
	{0x3096, &op_update,	  6,   9,   0, 0xff, 0x00, 0x00, 0x00}, // update g ra a 
	{0x3196, &op_update,	  6,   9,   1, 0xff, 0x00, 0x00, 0x00}, // update g ra b 
	{0x3296, &op_update,	  6,   9,   2, 0xff, 0x00, 0x00, 0x00}, // update g ra c 
	{0x3396, &op_update,	  6,   9,   3, 0xff, 0x00, 0x00, 0x00}, // update g ra d 
	{0x3496, &op_update,	  6,   9,   4, 0xff, 0x00, 0x00, 0x00}, // update g ra e 
	{0x3596, &op_update,	  6,   9,   5, 0xff, 0x00, 0x00, 0x00}, // update g ra f 
	{0x3696, &op_update,	  6,   9,   6, 0xff, 0x00, 0x00, 0x00}, // update g ra g 
	{0x3796, &op_update,	  6,   9,   7, 0xff, 0x00, 0x00, 0x00}, // update g ra h 
	{0x3896, &op_update,	  6,   9,   8, 0xff, 0x00, 0x00, 0x00}, // update g ra pc 
	{0x3996, &op_update,	  6,   9,   9, 0xff, 0x00, 0x00, 0x00}, // update g ra ra 
	{0x3a96, &op_update,	  6,   9,  10, 0xff, 0x00, 0x00, 0x00}, // update g ra sb 
	{0x3b96, &op_update,	  6,   9,  11, 0xff, 0x00, 0x00, 0x00}, // update g ra sp 
	{0x3c96, &op_update,	  6,   9,  12, 0xff, 0x00, 0x00, 0x00}, // update g ra db 
	{0x3d96, &op_update,	  6,   9,  13, 0xff, 0x00, 0x00, 0x00}, // update g ra cb 
	{0x3e96, &op_update,	  6,   9,  14, 0xff, 0x00, 0x00, 0x00}, // update g ra pi 
	{0x3f96, &op_update,	  6,   9,   8, 0xff, 0x00, 0x04, 0x00}, // update g ra <literal> 
	{0x30a6, &op_update,	  6,  10,   0, 0xff, 0x00, 0x00, 0x00}, // update g sb a 
	{0x31a6, &op_update,	  6,  10,   1, 0xff, 0x00, 0x00, 0x00}, // update g sb b 
	{0x32a6, &op_update,	  6,  10,   2, 0xff, 0x00, 0x00, 0x00}, // update g sb c 
	{0x33a6, &op_update,	  6,  10,   3, 0xff, 0x00, 0x00, 0x00}, // update g sb d 
	{0x34a6, &op_update,	  6,  10,   4, 0xff, 0x00, 0x00, 0x00}, // update g sb e 
	{0x35a6, &op_update,	  6,  10,   5, 0xff, 0x00, 0x00, 0x00}, // update g sb f 
	{0x36a6, &op_update,	  6,  10,   6, 0xff, 0x00, 0x00, 0x00}, // update g sb g 
	{0x37a6, &op_update,	  6,  10,   7, 0xff, 0x00, 0x00, 0x00}, // update g sb h 
	{0x38a6, &op_update,	  6,  10,   8, 0xff, 0x00, 0x00, 0x00}, // update g sb pc 
	{0x39a6, &op_update,	  6,  10,   9, 0xff, 0x00, 0x00, 0x00}, // update g sb ra 
	{0x3aa6, &op_update,	  6,  10,  10, 0xff, 0x00, 0x00, 0x00}, // update g sb sb 
	{0x3ba6, &op_update,	  6,  10,  11, 0xff, 0x00, 0x00, 0x00}, // update g sb sp 
	{0x3ca6, &op_update,	  6,  10,  12, 0xff, 0x00, 0x00, 0x00}, // update g sb db 
	{0x3da6, &op_update,	  6,  10,  13, 0xff, 0x00, 0x00, 0x00}, // update g sb cb 
	{0x3ea6, &op_update,	  6,  10,  14, 0xff, 0x00, 0x00, 0x00}, // update g sb pi 
	{0x3fa6, &op_update,	  6,  10,   8, 0xff, 0x00, 0x04, 0x00}, // update g sb <literal> 
	{0x30b6, &op_update,	  6,  11,   0, 0xff, 0x00, 0x00, 0x00}, // update g sp a 
	{0x31b6, &op_update,	  6,  11,   1, 0xff, 0x00, 0x00, 0x00}, // update g sp b 
	{0x32b6, &op_update,	  6,  11,   2, 0xff, 0x00, 0x00, 0x00}, // update g sp c 
	{0x33b6, &op_update,	  6,  11,   3, 0xff, 0x00, 0x00, 0x00}, // update g sp d 
	{0x34b6, &op_update,	  6,  11,   4, 0xff, 0x00, 0x00, 0x00}, // update g sp e 
	{0x35b6, &op_update,	  6,  11,   5, 0xff, 0x00, 0x00, 0x00}, // update g sp f 
	{0x36b6, &op_update,	  6,  11,   6, 0xff, 0x00, 0x00, 0x00}, // update g sp g 
	{0x37b6, &op_update,	  6,  11,   7, 0xff, 0x00, 0x00, 0x00}, // update g sp h 
	{0x38b6, &op_update,	  6,  11,   8, 0xff, 0x00, 0x00, 0x00}, // update g sp pc 
	{0x39b6, &op_update,	  6,  11,   9, 0xff, 0x00, 0x00, 0x00}, // update g sp ra 
	{0x3ab6, &op_update,	  6,  11,  10, 0xff, 0x00, 0x00, 0x00}, // update g sp sb 
	{0x3bb6, &op_update,	  6,  11,  11, 0xff, 0x00, 0x00, 0x00}, // update g sp sp 
	{0x3cb6, &op_update,	  6,  11,  12, 0xff, 0x00, 0x00, 0x00}, // update g sp db 
	{0x3db6, &op_update,	  6,  11,  13, 0xff, 0x00, 0x00, 0x00}, // update g sp cb 
	{0x3eb6, &op_update,	  6,  11,  14, 0xff, 0x00, 0x00, 0x00}, // update g sp pi 
	{0x3fb6, &op_update,	  6,  11,   8, 0xff, 0x00, 0x04, 0x00}, // update g sp <literal> 
	{0x30c6, &op_update,	  6,  12,   0, 0xff, 0x00, 0x00, 0x00}, // update g db a 
	{0x31c6, &op_update,	  6,  12,   1, 0xff, 0x00, 0x00, 0x00}, // update g db b 
	{0x32c6, &op_update,	  6,  12,   2, 0xff, 0x00, 0x00, 0x00}, // update g db c 
	{0x33c6, &op_update,	  6,  12,   3, 0xff, 0x00, 0x00, 0x00}, // update g db d 
	{0x34c6, &op_update,	  6,  12,   4, 0xff, 0x00, 0x00, 0x00}, // update g db e 
	{0x35c6, &op_update,	  6,  12,   5, 0xff, 0x00, 0x00, 0x00}, // update g db f 
	{0x36c6, &op_update,	  6,  12,   6, 0xff, 0x00, 0x00, 0x00}, // update g db g 
	{0x37c6, &op_update,	  6,  12,   7, 0xff, 0x00, 0x00, 0x00}, // update g db h 
	{0x38c6, &op_update,	  6,  12,   8, 0xff, 0x00, 0x00, 0x00}, // update g db pc 
	{0x39c6, &op_update,	  6,  12,   9, 0xff, 0x00, 0x00, 0x00}, // update g db ra 
	{0x3ac6, &op_update,	  6,  12,  10, 0xff, 0x00, 0x00, 0x00}, // update g db sb 
	{0x3bc6, &op_update,	  6,  12,  11, 0xff, 0x00, 0x00, 0x00}, // update g db sp 
	{0x3cc6, &op_update,	  6,  12,  12, 0xff, 0x00, 0x00, 0x00}, // update g db db 
	{0x3dc6, &op_update,	  6,  12,  13, 0xff, 0x00, 0x00, 0x00}, // update g db cb 
	{0x3ec6, &op_update,	  6,  12,  14, 0xff, 0x00, 0x00, 0x00}, // update g db pi 
	{0x3fc6, &op_update,	  6,  12,   8, 0xff, 0x00, 0x04, 0x00}, // update g db <literal> 
	{0x30d6, &op_update,	  6,  13,   0, 0xff, 0x00, 0x00, 0x00}, // update g cb a 
	{0x31d6, &op_update,	  6,  13,   1, 0xff, 0x00, 0x00, 0x00}, // update g cb b 
	{0x32d6, &op_update,	  6,  13,   2, 0xff, 0x00, 0x00, 0x00}, // update g cb c 
	{0x33d6, &op_update,	  6,  13,   3, 0xff, 0x00, 0x00, 0x00}, // update g cb d 
	{0x34d6, &op_update,	  6,  13,   4, 0xff, 0x00, 0x00, 0x00}, // update g cb e 
	{0x35d6, &op_update,	  6,  13,   5, 0xff, 0x00, 0x00, 0x00}, // update g cb f 
	{0x36d6, &op_update,	  6,  13,   6, 0xff, 0x00, 0x00, 0x00}, // update g cb g 
	{0x37d6, &op_update,	  6,  13,   7, 0xff, 0x00, 0x00, 0x00}, // update g cb h 
	{0x38d6, &op_update,	  6,  13,   8, 0xff, 0x00, 0x00, 0x00}, // update g cb pc 
	{0x39d6, &op_update,	  6,  13,   9, 0xff, 0x00, 0x00, 0x00}, // update g cb ra 
	{0x3ad6, &op_update,	  6,  13,  10, 0xff, 0x00, 0x00, 0x00}, // update g cb sb 
	{0x3bd6, &op_update,	  6,  13,  11, 0xff, 0x00, 0x00, 0x00}, // update g cb sp 
	{0x3cd6, &op_update,	  6,  13,  12, 0xff, 0x00, 0x00, 0x00}, // update g cb db 
	{0x3dd6, &op_update,	  6,  13,  13, 0xff, 0x00, 0x00, 0x00}, // update g cb cb 
	{0x3ed6, &op_update,	  6,  13,  14, 0xff, 0x00, 0x00, 0x00}, // update g cb pi 
	{0x3fd6, &op_update,	  6,  13,   8, 0xff, 0x00, 0x04, 0x00}, // update g cb <literal> 
	{0x30e6, &op_update,	  6,  14,   0, 0xff, 0x00, 0x00, 0x00}, // update g pi a 
	{0x31e6, &op_update,	  6,  14,   1, 0xff, 0x00, 0x00, 0x00}, // update g pi b 
	{0x32e6, &op_update,	  6,  14,   2, 0xff, 0x00, 0x00, 0x00}, // update g pi c 
	{0x33e6, &op_update,	  6,  14,   3, 0xff, 0x00, 0x00, 0x00}, // update g pi d 
	{0x34e6, &op_update,	  6,  14,   4, 0xff, 0x00, 0x00, 0x00}, // update g pi e 
	{0x35e6, &op_update,	  6,  14,   5, 0xff, 0x00, 0x00, 0x00}, // update g pi f 
	{0x36e6, &op_update,	  6,  14,   6, 0xff, 0x00, 0x00, 0x00}, // update g pi g 
	{0x37e6, &op_update,	  6,  14,   7, 0xff, 0x00, 0x00, 0x00}, // update g pi h 
	{0x38e6, &op_update,	  6,  14,   8, 0xff, 0x00, 0x00, 0x00}, // update g pi pc 
	{0x39e6, &op_update,	  6,  14,   9, 0xff, 0x00, 0x00, 0x00}, // update g pi ra 
	{0x3ae6, &op_update,	  6,  14,  10, 0xff, 0x00, 0x00, 0x00}, // update g pi sb 
	{0x3be6, &op_update,	  6,  14,  11, 0xff, 0x00, 0x00, 0x00}, // update g pi sp 
	{0x3ce6, &op_update,	  6,  14,  12, 0xff, 0x00, 0x00, 0x00}, // update g pi db 
	{0x3de6, &op_update,	  6,  14,  13, 0xff, 0x00, 0x00, 0x00}, // update g pi cb 
	{0x3ee6, &op_update,	  6,  14,  14, 0xff, 0x00, 0x00, 0x00}, // update g pi pi 
	{0x3fe6, &op_update,	  6,  14,   8, 0xff, 0x00, 0x04, 0x00}, // update g pi <literal> 
	{0x30f6, &op_update,	  6,  15,   0, 0xff, 0x00, 0x00, 0x00}, // update g status a 
	{0x31f6, &op_update,	  6,  15,   1, 0xff, 0x00, 0x00, 0x00}, // update g status b 
	{0x32f6, &op_update,	  6,  15,   2, 0xff, 0x00, 0x00, 0x00}, // update g status c 
	{0x33f6, &op_update,	  6,  15,   3, 0xff, 0x00, 0x00, 0x00}, // update g status d 
	{0x34f6, &op_update,	  6,  15,   4, 0xff, 0x00, 0x00, 0x00}, // update g status e 
	{0x35f6, &op_update,	  6,  15,   5, 0xff, 0x00, 0x00, 0x00}, // update g status f 
	{0x36f6, &op_update,	  6,  15,   6, 0xff, 0x00, 0x00, 0x00}, // update g status g 
	{0x37f6, &op_update,	  6,  15,   7, 0xff, 0x00, 0x00, 0x00}, // update g status h 
	{0x38f6, &op_update,	  6,  15,   8, 0xff, 0x00, 0x00, 0x00}, // update g status pc 
	{0x39f6, &op_update,	  6,  15,   9, 0xff, 0x00, 0x00, 0x00}, // update g status ra 
	{0x3af6, &op_update,	  6,  15,  10, 0xff, 0x00, 0x00, 0x00}, // update g status sb 
	{0x3bf6, &op_update,	  6,  15,  11, 0xff, 0x00, 0x00, 0x00}, // update g status sp 
	{0x3cf6, &op_update,	  6,  15,  12, 0xff, 0x00, 0x00, 0x00}, // update g status db 
	{0x3df6, &op_update,	  6,  15,  13, 0xff, 0x00, 0x00, 0x00}, // update g status cb 
	{0x3ef6, &op_update,	  6,  15,  14, 0xff, 0x00, 0x00, 0x00}, // update g status pi 
	{0x3ff6, &op_update,	  6,  15,   8, 0xff, 0x00, 0x04, 0x00}, // update g status <literal> 
	{0x3007, &op_update,	  7,   0,   0, 0xff, 0x00, 0x00, 0x00}, // update h a a 
	{0x3107, &op_update,	  7,   0,   1, 0xff, 0x00, 0x00, 0x00}, // update h a b 
	{0x3207, &op_update,	  7,   0,   2, 0xff, 0x00, 0x00, 0x00}, // update h a c 
	{0x3307, &op_update,	  7,   0,   3, 0xff, 0x00, 0x00, 0x00}, // update h a d 
	{0x3407, &op_update,	  7,   0,   4, 0xff, 0x00, 0x00, 0x00}, // update h a e 
	{0x3507, &op_update,	  7,   0,   5, 0xff, 0x00, 0x00, 0x00}, // update h a f 
	{0x3607, &op_update,	  7,   0,   6, 0xff, 0x00, 0x00, 0x00}, // update h a g 
	{0x3707, &op_update,	  7,   0,   7, 0xff, 0x00, 0x00, 0x00}, // update h a h 
	{0x3807, &op_update,	  7,   0,   8, 0xff, 0x00, 0x00, 0x00}, // update h a pc 
	{0x3907, &op_update,	  7,   0,   9, 0xff, 0x00, 0x00, 0x00}, // update h a ra 
	{0x3a07, &op_update,	  7,   0,  10, 0xff, 0x00, 0x00, 0x00}, // update h a sb 
	{0x3b07, &op_update,	  7,   0,  11, 0xff, 0x00, 0x00, 0x00}, // update h a sp 
	{0x3c07, &op_update,	  7,   0,  12, 0xff, 0x00, 0x00, 0x00}, // update h a db 
	{0x3d07, &op_update,	  7,   0,  13, 0xff, 0x00, 0x00, 0x00}, // update h a cb 
	{0x3e07, &op_update,	  7,   0,  14, 0xff, 0x00, 0x00, 0x00}, // update h a pi 
	{0x3f07, &op_update,	  7,   0,   8, 0xff, 0x00, 0x04, 0x00}, // update h a <literal> 
	{0x3017, &op_update,	  7,   1,   0, 0xff, 0x00, 0x00, 0x00}, // update h b a 
	{0x3117, &op_update,	  7,   1,   1, 0xff, 0x00, 0x00, 0x00}, // update h b b 
	{0x3217, &op_update,	  7,   1,   2, 0xff, 0x00, 0x00, 0x00}, // update h b c 
	{0x3317, &op_update,	  7,   1,   3, 0xff, 0x00, 0x00, 0x00}, // update h b d 
	{0x3417, &op_update,	  7,   1,   4, 0xff, 0x00, 0x00, 0x00}, // update h b e 
	{0x3517, &op_update,	  7,   1,   5, 0xff, 0x00, 0x00, 0x00}, // update h b f 
	{0x3617, &op_update,	  7,   1,   6, 0xff, 0x00, 0x00, 0x00}, // update h b g 
	{0x3717, &op_update,	  7,   1,   7, 0xff, 0x00, 0x00, 0x00}, // update h b h 
	{0x3817, &op_update,	  7,   1,   8, 0xff, 0x00, 0x00, 0x00}, // update h b pc 
	{0x3917, &op_update,	  7,   1,   9, 0xff, 0x00, 0x00, 0x00}, // update h b ra 
	{0x3a17, &op_update,	  7,   1,  10, 0xff, 0x00, 0x00, 0x00}, // update h b sb 
	{0x3b17, &op_update,	  7,   1,  11, 0xff, 0x00, 0x00, 0x00}, // update h b sp 
	{0x3c17, &op_update,	  7,   1,  12, 0xff, 0x00, 0x00, 0x00}, // update h b db 
	{0x3d17, &op_update,	  7,   1,  13, 0xff, 0x00, 0x00, 0x00}, // update h b cb 
	{0x3e17, &op_update,	  7,   1,  14, 0xff, 0x00, 0x00, 0x00}, // update h b pi 
	{0x3f17, &op_update,	  7,   1,   8, 0xff, 0x00, 0x04, 0x00}, // update h b <literal> 
	{0x3027, &op_update,	  7,   2,   0, 0xff, 0x00, 0x00, 0x00}, // update h c a 
	{0x3127, &op_update,	  7,   2,   1, 0xff, 0x00, 0x00, 0x00}, // update h c b 
	{0x3227, &op_update,	  7,   2,   2, 0xff, 0x00, 0x00, 0x00}, // update h c c 
	{0x3327, &op_update,	  7,   2,   3, 0xff, 0x00, 0x00, 0x00}, // update h c d 
	{0x3427, &op_update,	  7,   2,   4, 0xff, 0x00, 0x00, 0x00}, // update h c e 
	{0x3527, &op_update,	  7,   2,   5, 0xff, 0x00, 0x00, 0x00}, // update h c f 
	{0x3627, &op_update,	  7,   2,   6, 0xff, 0x00, 0x00, 0x00}, // update h c g 
	{0x3727, &op_update,	  7,   2,   7, 0xff, 0x00, 0x00, 0x00}, // update h c h 
	{0x3827, &op_update,	  7,   2,   8, 0xff, 0x00, 0x00, 0x00}, // update h c pc 
	{0x3927, &op_update,	  7,   2,   9, 0xff, 0x00, 0x00, 0x00}, // update h c ra 
	{0x3a27, &op_update,	  7,   2,  10, 0xff, 0x00, 0x00, 0x00}, // update h c sb 
	{0x3b27, &op_update,	  7,   2,  11, 0xff, 0x00, 0x00, 0x00}, // update h c sp 
	{0x3c27, &op_update,	  7,   2,  12, 0xff, 0x00, 0x00, 0x00}, // update h c db 
	{0x3d27, &op_update,	  7,   2,  13, 0xff, 0x00, 0x00, 0x00}, // update h c cb 
	{0x3e27, &op_update,	  7,   2,  14, 0xff, 0x00, 0x00, 0x00}, // update h c pi 
	{0x3f27, &op_update,	  7,   2,   8, 0xff, 0x00, 0x04, 0x00}, // update h c <literal> 
	{0x3037, &op_update,	  7,   3,   0, 0xff, 0x00, 0x00, 0x00}, // update h d a 
	{0x3137, &op_update,	  7,   3,   1, 0xff, 0x00, 0x00, 0x00}, // update h d b 
	{0x3237, &op_update,	  7,   3,   2, 0xff, 0x00, 0x00, 0x00}, // update h d c 
	{0x3337, &op_update,	  7,   3,   3, 0xff, 0x00, 0x00, 0x00}, // update h d d 
	{0x3437, &op_update,	  7,   3,   4, 0xff, 0x00, 0x00, 0x00}, // update h d e 
	{0x3537, &op_update,	  7,   3,   5, 0xff, 0x00, 0x00, 0x00}, // update h d f 
	{0x3637, &op_update,	  7,   3,   6, 0xff, 0x00, 0x00, 0x00}, // update h d g 
	{0x3737, &op_update,	  7,   3,   7, 0xff, 0x00, 0x00, 0x00}, // update h d h 
	{0x3837, &op_update,	  7,   3,   8, 0xff, 0x00, 0x00, 0x00}, // update h d pc 
	{0x3937, &op_update,	  7,   3,   9, 0xff, 0x00, 0x00, 0x00}, // update h d ra 
	{0x3a37, &op_update,	  7,   3,  10, 0xff, 0x00, 0x00, 0x00}, // update h d sb 
	{0x3b37, &op_update,	  7,   3,  11, 0xff, 0x00, 0x00, 0x00}, // update h d sp 
	{0x3c37, &op_update,	  7,   3,  12, 0xff, 0x00, 0x00, 0x00}, // update h d db 
	{0x3d37, &op_update,	  7,   3,  13, 0xff, 0x00, 0x00, 0x00}, // update h d cb 
	{0x3e37, &op_update,	  7,   3,  14, 0xff, 0x00, 0x00, 0x00}, // update h d pi 
	{0x3f37, &op_update,	  7,   3,   8, 0xff, 0x00, 0x04, 0x00}, // update h d <literal> 
	{0x3047, &op_update,	  7,   4,   0, 0xff, 0x00, 0x00, 0x00}, // update h e a 
	{0x3147, &op_update,	  7,   4,   1, 0xff, 0x00, 0x00, 0x00}, // update h e b 
	{0x3247, &op_update,	  7,   4,   2, 0xff, 0x00, 0x00, 0x00}, // update h e c 
	{0x3347, &op_update,	  7,   4,   3, 0xff, 0x00, 0x00, 0x00}, // update h e d 
	{0x3447, &op_update,	  7,   4,   4, 0xff, 0x00, 0x00, 0x00}, // update h e e 
	{0x3547, &op_update,	  7,   4,   5, 0xff, 0x00, 0x00, 0x00}, // update h e f 
	{0x3647, &op_update,	  7,   4,   6, 0xff, 0x00, 0x00, 0x00}, // update h e g 
	{0x3747, &op_update,	  7,   4,   7, 0xff, 0x00, 0x00, 0x00}, // update h e h 
	{0x3847, &op_update,	  7,   4,   8, 0xff, 0x00, 0x00, 0x00}, // update h e pc 
	{0x3947, &op_update,	  7,   4,   9, 0xff, 0x00, 0x00, 0x00}, // update h e ra 
	{0x3a47, &op_update,	  7,   4,  10, 0xff, 0x00, 0x00, 0x00}, // update h e sb 
	{0x3b47, &op_update,	  7,   4,  11, 0xff, 0x00, 0x00, 0x00}, // update h e sp 
	{0x3c47, &op_update,	  7,   4,  12, 0xff, 0x00, 0x00, 0x00}, // update h e db 
	{0x3d47, &op_update,	  7,   4,  13, 0xff, 0x00, 0x00, 0x00}, // update h e cb 
	{0x3e47, &op_update,	  7,   4,  14, 0xff, 0x00, 0x00, 0x00}, // update h e pi 
	{0x3f47, &op_update,	  7,   4,   8, 0xff, 0x00, 0x04, 0x00}, // update h e <literal> 
	{0x3057, &op_update,	  7,   5,   0, 0xff, 0x00, 0x00, 0x00}, // update h f a 
	{0x3157, &op_update,	  7,   5,   1, 0xff, 0x00, 0x00, 0x00}, // update h f b 
	{0x3257, &op_update,	  7,   5,   2, 0xff, 0x00, 0x00, 0x00}, // update h f c 
	{0x3357, &op_update,	  7,   5,   3, 0xff, 0x00, 0x00, 0x00}, // update h f d 
	{0x3457, &op_update,	  7,   5,   4, 0xff, 0x00, 0x00, 0x00}, // update h f e 
	{0x3557, &op_update,	  7,   5,   5, 0xff, 0x00, 0x00, 0x00}, // update h f f 
	{0x3657, &op_update,	  7,   5,   6, 0xff, 0x00, 0x00, 0x00}, // update h f g 
	{0x3757, &op_update,	  7,   5,   7, 0xff, 0x00, 0x00, 0x00}, // update h f h 
	{0x3857, &op_update,	  7,   5,   8, 0xff, 0x00, 0x00, 0x00}, // update h f pc 
	{0x3957, &op_update,	  7,   5,   9, 0xff, 0x00, 0x00, 0x00}, // update h f ra 
	{0x3a57, &op_update,	  7,   5,  10, 0xff, 0x00, 0x00, 0x00}, // update h f sb 
	{0x3b57, &op_update,	  7,   5,  11, 0xff, 0x00, 0x00, 0x00}, // update h f sp 
	{0x3c57, &op_update,	  7,   5,  12, 0xff, 0x00, 0x00, 0x00}, // update h f db 
	{0x3d57, &op_update,	  7,   5,  13, 0xff, 0x00, 0x00, 0x00}, // update h f cb 
	{0x3e57, &op_update,	  7,   5,  14, 0xff, 0x00, 0x00, 0x00}, // update h f pi 
	{0x3f57, &op_update,	  7,   5,   8, 0xff, 0x00, 0x04, 0x00}, // update h f <literal> 
	{0x3067, &op_update,	  7,   6,   0, 0xff, 0x00, 0x00, 0x00}, // update h g a 
	{0x3167, &op_update,	  7,   6,   1, 0xff, 0x00, 0x00, 0x00}, // update h g b 
	{0x3267, &op_update,	  7,   6,   2, 0xff, 0x00, 0x00, 0x00}, // update h g c 
	{0x3367, &op_update,	  7,   6,   3, 0xff, 0x00, 0x00, 0x00}, // update h g d 
	{0x3467, &op_update,	  7,   6,   4, 0xff, 0x00, 0x00, 0x00}, // update h g e 
	{0x3567, &op_update,	  7,   6,   5, 0xff, 0x00, 0x00, 0x00}, // update h g f 
	{0x3667, &op_update,	  7,   6,   6, 0xff, 0x00, 0x00, 0x00}, // update h g g 
	{0x3767, &op_update,	  7,   6,   7, 0xff, 0x00, 0x00, 0x00}, // update h g h 
	{0x3867, &op_update,	  7,   6,   8, 0xff, 0x00, 0x00, 0x00}, // update h g pc 
	{0x3967, &op_update,	  7,   6,   9, 0xff, 0x00, 0x00, 0x00}, // update h g ra 
	{0x3a67, &op_update,	  7,   6,  10, 0xff, 0x00, 0x00, 0x00}, // update h g sb 
	{0x3b67, &op_update,	  7,   6,  11, 0xff, 0x00, 0x00, 0x00}, // update h g sp 
	{0x3c67, &op_update,	  7,   6,  12, 0xff, 0x00, 0x00, 0x00}, // update h g db 
	{0x3d67, &op_update,	  7,   6,  13, 0xff, 0x00, 0x00, 0x00}, // update h g cb 
	{0x3e67, &op_update,	  7,   6,  14, 0xff, 0x00, 0x00, 0x00}, // update h g pi 
	{0x3f67, &op_update,	  7,   6,   8, 0xff, 0x00, 0x04, 0x00}, // update h g <literal> 
	{0x3077, &op_update,	  7,   7,   0, 0xff, 0x00, 0x00, 0x00}, // update h h a 
	{0x3177, &op_update,	  7,   7,   1, 0xff, 0x00, 0x00, 0x00}, // update h h b 
	{0x3277, &op_update,	  7,   7,   2, 0xff, 0x00, 0x00, 0x00}, // update h h c 
	{0x3377, &op_update,	  7,   7,   3, 0xff, 0x00, 0x00, 0x00}, // update h h d 
	{0x3477, &op_update,	  7,   7,   4, 0xff, 0x00, 0x00, 0x00}, // update h h e 
	{0x3577, &op_update,	  7,   7,   5, 0xff, 0x00, 0x00, 0x00}, // update h h f 
	{0x3677, &op_update,	  7,   7,   6, 0xff, 0x00, 0x00, 0x00}, // update h h g 
	{0x3777, &op_update,	  7,   7,   7, 0xff, 0x00, 0x00, 0x00}, // update h h h 
	{0x3877, &op_update,	  7,   7,   8, 0xff, 0x00, 0x00, 0x00}, // update h h pc 
	{0x3977, &op_update,	  7,   7,   9, 0xff, 0x00, 0x00, 0x00}, // update h h ra 
	{0x3a77, &op_update,	  7,   7,  10, 0xff, 0x00, 0x00, 0x00}, // update h h sb 
	{0x3b77, &op_update,	  7,   7,  11, 0xff, 0x00, 0x00, 0x00}, // update h h sp 
	{0x3c77, &op_update,	  7,   7,  12, 0xff, 0x00, 0x00, 0x00}, // update h h db 
	{0x3d77, &op_update,	  7,   7,  13, 0xff, 0x00, 0x00, 0x00}, // update h h cb 
	{0x3e77, &op_update,	  7,   7,  14, 0xff, 0x00, 0x00, 0x00}, // update h h pi 
	{0x3f77, &op_update,	  7,   7,   8, 0xff, 0x00, 0x04, 0x00}, // update h h <literal> 
	{0x3087, &op_update,	  7,   8,   0, 0xff, 0x00, 0x00, 0x00}, // update h pc a 
	{0x3187, &op_update,	  7,   8,   1, 0xff, 0x00, 0x00, 0x00}, // update h pc b 
	{0x3287, &op_update,	  7,   8,   2, 0xff, 0x00, 0x00, 0x00}, // update h pc c 
	{0x3387, &op_update,	  7,   8,   3, 0xff, 0x00, 0x00, 0x00}, // update h pc d 
	{0x3487, &op_update,	  7,   8,   4, 0xff, 0x00, 0x00, 0x00}, // update h pc e 
	{0x3587, &op_update,	  7,   8,   5, 0xff, 0x00, 0x00, 0x00}, // update h pc f 
	{0x3687, &op_update,	  7,   8,   6, 0xff, 0x00, 0x00, 0x00}, // update h pc g 
	{0x3787, &op_update,	  7,   8,   7, 0xff, 0x00, 0x00, 0x00}, // update h pc h 
	{0x3887, &op_update,	  7,   8,   8, 0xff, 0x00, 0x00, 0x00}, // update h pc pc 
	{0x3987, &op_update,	  7,   8,   9, 0xff, 0x00, 0x00, 0x00}, // update h pc ra 
	{0x3a87, &op_update,	  7,   8,  10, 0xff, 0x00, 0x00, 0x00}, // update h pc sb 
	{0x3b87, &op_update,	  7,   8,  11, 0xff, 0x00, 0x00, 0x00}, // update h pc sp 
	{0x3c87, &op_update,	  7,   8,  12, 0xff, 0x00, 0x00, 0x00}, // update h pc db 
	{0x3d87, &op_update,	  7,   8,  13, 0xff, 0x00, 0x00, 0x00}, // update h pc cb 
	{0x3e87, &op_update,	  7,   8,  14, 0xff, 0x00, 0x00, 0x00}, // update h pc pi 
	{0x3f87, &op_update,	  7,   8,   8, 0xff, 0x00, 0x04, 0x00}, // update h pc <literal> 
	{0x3097, &op_update,	  7,   9,   0, 0xff, 0x00, 0x00, 0x00}, // update h ra a 
	{0x3197, &op_update,	  7,   9,   1, 0xff, 0x00, 0x00, 0x00}, // update h ra b 
	{0x3297, &op_update,	  7,   9,   2, 0xff, 0x00, 0x00, 0x00}, // update h ra c 
	{0x3397, &op_update,	  7,   9,   3, 0xff, 0x00, 0x00, 0x00}, // update h ra d 
	{0x3497, &op_update,	  7,   9,   4, 0xff, 0x00, 0x00, 0x00}, // update h ra e 
	{0x3597, &op_update,	  7,   9,   5, 0xff, 0x00, 0x00, 0x00}, // update h ra f 
	{0x3697, &op_update,	  7,   9,   6, 0xff, 0x00, 0x00, 0x00}, // update h ra g 
	{0x3797, &op_update,	  7,   9,   7, 0xff, 0x00, 0x00, 0x00}, // update h ra h 
	{0x3897, &op_update,	  7,   9,   8, 0xff, 0x00, 0x00, 0x00}, // update h ra pc 
	{0x3997, &op_update,	  7,   9,   9, 0xff, 0x00, 0x00, 0x00}, // update h ra ra 
	{0x3a97, &op_update,	  7,   9,  10, 0xff, 0x00, 0x00, 0x00}, // update h ra sb 
	{0x3b97, &op_update,	  7,   9,  11, 0xff, 0x00, 0x00, 0x00}, // update h ra sp 
	{0x3c97, &op_update,	  7,   9,  12, 0xff, 0x00, 0x00, 0x00}, // update h ra db 
	{0x3d97, &op_update,	  7,   9,  13, 0xff, 0x00, 0x00, 0x00}, // update h ra cb 
	{0x3e97, &op_update,	  7,   9,  14, 0xff, 0x00, 0x00, 0x00}, // update h ra pi 
	{0x3f97, &op_update,	  7,   9,   8, 0xff, 0x00, 0x04, 0x00}, // update h ra <literal> 
	{0x30a7, &op_update,	  7,  10,   0, 0xff, 0x00, 0x00, 0x00}, // update h sb a 
	{0x31a7, &op_update,	  7,  10,   1, 0xff, 0x00, 0x00, 0x00}, // update h sb b 
	{0x32a7, &op_update,	  7,  10,   2, 0xff, 0x00, 0x00, 0x00}, // update h sb c 
	{0x33a7, &op_update,	  7,  10,   3, 0xff, 0x00, 0x00, 0x00}, // update h sb d 
	{0x34a7, &op_update,	  7,  10,   4, 0xff, 0x00, 0x00, 0x00}, // update h sb e 
	{0x35a7, &op_update,	  7,  10,   5, 0xff, 0x00, 0x00, 0x00}, // update h sb f 
	{0x36a7, &op_update,	  7,  10,   6, 0xff, 0x00, 0x00, 0x00}, // update h sb g 
	{0x37a7, &op_update,	  7,  10,   7, 0xff, 0x00, 0x00, 0x00}, // update h sb h 
	{0x38a7, &op_update,	  7,  10,   8, 0xff, 0x00, 0x00, 0x00}, // update h sb pc 
	{0x39a7, &op_update,	  7,  10,   9, 0xff, 0x00, 0x00, 0x00}, // update h sb ra 
	{0x3aa7, &op_update,	  7,  10,  10, 0xff, 0x00, 0x00, 0x00}, // update h sb sb 
	{0x3ba7, &op_update,	  7,  10,  11, 0xff, 0x00, 0x00, 0x00}, // update h sb sp 
	{0x3ca7, &op_update,	  7,  10,  12, 0xff, 0x00, 0x00, 0x00}, // update h sb db 
	{0x3da7, &op_update,	  7,  10,  13, 0xff, 0x00, 0x00, 0x00}, // update h sb cb 
	{0x3ea7, &op_update,	  7,  10,  14, 0xff, 0x00, 0x00, 0x00}, // update h sb pi 
	{0x3fa7, &op_update,	  7,  10,   8, 0xff, 0x00, 0x04, 0x00}, // update h sb <literal> 
	{0x30b7, &op_update,	  7,  11,   0, 0xff, 0x00, 0x00, 0x00}, // update h sp a 
	{0x31b7, &op_update,	  7,  11,   1, 0xff, 0x00, 0x00, 0x00}, // update h sp b 
	{0x32b7, &op_update,	  7,  11,   2, 0xff, 0x00, 0x00, 0x00}, // update h sp c 
	{0x33b7, &op_update,	  7,  11,   3, 0xff, 0x00, 0x00, 0x00}, // update h sp d 
	{0x34b7, &op_update,	  7,  11,   4, 0xff, 0x00, 0x00, 0x00}, // update h sp e 
	{0x35b7, &op_update,	  7,  11,   5, 0xff, 0x00, 0x00, 0x00}, // update h sp f 
	{0x36b7, &op_update,	  7,  11,   6, 0xff, 0x00, 0x00, 0x00}, // update h sp g 
	{0x37b7, &op_update,	  7,  11,   7, 0xff, 0x00, 0x00, 0x00}, // update h sp h 
	{0x38b7, &op_update,	  7,  11,   8, 0xff, 0x00, 0x00, 0x00}, // update h sp pc 
	{0x39b7, &op_update,	  7,  11,   9, 0xff, 0x00, 0x00, 0x00}, // update h sp ra 
	{0x3ab7, &op_update,	  7,  11,  10, 0xff, 0x00, 0x00, 0x00}, // update h sp sb 
	{0x3bb7, &op_update,	  7,  11,  11, 0xff, 0x00, 0x00, 0x00}, // update h sp sp 
	{0x3cb7, &op_update,	  7,  11,  12, 0xff, 0x00, 0x00, 0x00}, // update h sp db 
	{0x3db7, &op_update,	  7,  11,  13, 0xff, 0x00, 0x00, 0x00}, // update h sp cb 
	{0x3eb7, &op_update,	  7,  11,  14, 0xff, 0x00, 0x00, 0x00}, // update h sp pi 
	{0x3fb7, &op_update,	  7,  11,   8, 0xff, 0x00, 0x04, 0x00}, // update h sp <literal> 
	{0x30c7, &op_update,	  7,  12,   0, 0xff, 0x00, 0x00, 0x00}, // update h db a 
	{0x31c7, &op_update,	  7,  12,   1, 0xff, 0x00, 0x00, 0x00}, // update h db b 
	{0x32c7, &op_update,	  7,  12,   2, 0xff, 0x00, 0x00, 0x00}, // update h db c 
	{0x33c7, &op_update,	  7,  12,   3, 0xff, 0x00, 0x00, 0x00}, // update h db d 
	{0x34c7, &op_update,	  7,  12,   4, 0xff, 0x00, 0x00, 0x00}, // update h db e 
	{0x35c7, &op_update,	  7,  12,   5, 0xff, 0x00, 0x00, 0x00}, // update h db f 
	{0x36c7, &op_update,	  7,  12,   6, 0xff, 0x00, 0x00, 0x00}, // update h db g 
	{0x37c7, &op_update,	  7,  12,   7, 0xff, 0x00, 0x00, 0x00}, // update h db h 
	{0x38c7, &op_update,	  7,  12,   8, 0xff, 0x00, 0x00, 0x00}, // update h db pc 
	{0x39c7, &op_update,	  7,  12,   9, 0xff, 0x00, 0x00, 0x00}, // update h db ra 
	{0x3ac7, &op_update,	  7,  12,  10, 0xff, 0x00, 0x00, 0x00}, // update h db sb 
	{0x3bc7, &op_update,	  7,  12,  11, 0xff, 0x00, 0x00, 0x00}, // update h db sp 
	{0x3cc7, &op_update,	  7,  12,  12, 0xff, 0x00, 0x00, 0x00}, // update h db db 
	{0x3dc7, &op_update,	  7,  12,  13, 0xff, 0x00, 0x00, 0x00}, // update h db cb 
	{0x3ec7, &op_update,	  7,  12,  14, 0xff, 0x00, 0x00, 0x00}, // update h db pi 
	{0x3fc7, &op_update,	  7,  12,   8, 0xff, 0x00, 0x04, 0x00}, // update h db <literal> 
	{0x30d7, &op_update,	  7,  13,   0, 0xff, 0x00, 0x00, 0x00}, // update h cb a 
	{0x31d7, &op_update,	  7,  13,   1, 0xff, 0x00, 0x00, 0x00}, // update h cb b 
	{0x32d7, &op_update,	  7,  13,   2, 0xff, 0x00, 0x00, 0x00}, // update h cb c 
	{0x33d7, &op_update,	  7,  13,   3, 0xff, 0x00, 0x00, 0x00}, // update h cb d 
	{0x34d7, &op_update,	  7,  13,   4, 0xff, 0x00, 0x00, 0x00}, // update h cb e 
	{0x35d7, &op_update,	  7,  13,   5, 0xff, 0x00, 0x00, 0x00}, // update h cb f 
	{0x36d7, &op_update,	  7,  13,   6, 0xff, 0x00, 0x00, 0x00}, // update h cb g 
	{0x37d7, &op_update,	  7,  13,   7, 0xff, 0x00, 0x00, 0x00}, // update h cb h 
	{0x38d7, &op_update,	  7,  13,   8, 0xff, 0x00, 0x00, 0x00}, // update h cb pc 
	{0x39d7, &op_update,	  7,  13,   9, 0xff, 0x00, 0x00, 0x00}, // update h cb ra 
	{0x3ad7, &op_update,	  7,  13,  10, 0xff, 0x00, 0x00, 0x00}, // update h cb sb 
	{0x3bd7, &op_update,	  7,  13,  11, 0xff, 0x00, 0x00, 0x00}, // update h cb sp 
	{0x3cd7, &op_update,	  7,  13,  12, 0xff, 0x00, 0x00, 0x00}, // update h cb db 
	{0x3dd7, &op_update,	  7,  13,  13, 0xff, 0x00, 0x00, 0x00}, // update h cb cb 
	{0x3ed7, &op_update,	  7,  13,  14, 0xff, 0x00, 0x00, 0x00}, // update h cb pi 
	{0x3fd7, &op_update,	  7,  13,   8, 0xff, 0x00, 0x04, 0x00}, // update h cb <literal> 
	{0x30e7, &op_update,	  7,  14,   0, 0xff, 0x00, 0x00, 0x00}, // update h pi a 
	{0x31e7, &op_update,	  7,  14,   1, 0xff, 0x00, 0x00, 0x00}, // update h pi b 
	{0x32e7, &op_update,	  7,  14,   2, 0xff, 0x00, 0x00, 0x00}, // update h pi c 
	{0x33e7, &op_update,	  7,  14,   3, 0xff, 0x00, 0x00, 0x00}, // update h pi d 
	{0x34e7, &op_update,	  7,  14,   4, 0xff, 0x00, 0x00, 0x00}, // update h pi e 
	{0x35e7, &op_update,	  7,  14,   5, 0xff, 0x00, 0x00, 0x00}, // update h pi f 
	{0x36e7, &op_update,	  7,  14,   6, 0xff, 0x00, 0x00, 0x00}, // update h pi g 
	{0x37e7, &op_update,	  7,  14,   7, 0xff, 0x00, 0x00, 0x00}, // update h pi h 
	{0x38e7, &op_update,	  7,  14,   8, 0xff, 0x00, 0x00, 0x00}, // update h pi pc 
	{0x39e7, &op_update,	  7,  14,   9, 0xff, 0x00, 0x00, 0x00}, // update h pi ra 
	{0x3ae7, &op_update,	  7,  14,  10, 0xff, 0x00, 0x00, 0x00}, // update h pi sb 
	{0x3be7, &op_update,	  7,  14,  11, 0xff, 0x00, 0x00, 0x00}, // update h pi sp 
	{0x3ce7, &op_update,	  7,  14,  12, 0xff, 0x00, 0x00, 0x00}, // update h pi db 
	{0x3de7, &op_update,	  7,  14,  13, 0xff, 0x00, 0x00, 0x00}, // update h pi cb 
	{0x3ee7, &op_update,	  7,  14,  14, 0xff, 0x00, 0x00, 0x00}, // update h pi pi 
	{0x3fe7, &op_update,	  7,  14,   8, 0xff, 0x00, 0x04, 0x00}, // update h pi <literal> 
	{0x30f7, &op_update,	  7,  15,   0, 0xff, 0x00, 0x00, 0x00}, // update h status a 
	{0x31f7, &op_update,	  7,  15,   1, 0xff, 0x00, 0x00, 0x00}, // update h status b 
	{0x32f7, &op_update,	  7,  15,   2, 0xff, 0x00, 0x00, 0x00}, // update h status c 
	{0x33f7, &op_update,	  7,  15,   3, 0xff, 0x00, 0x00, 0x00}, // update h status d 
	{0x34f7, &op_update,	  7,  15,   4, 0xff, 0x00, 0x00, 0x00}, // update h status e 
	{0x35f7, &op_update,	  7,  15,   5, 0xff, 0x00, 0x00, 0x00}, // update h status f 
	{0x36f7, &op_update,	  7,  15,   6, 0xff, 0x00, 0x00, 0x00}, // update h status g 
	{0x37f7, &op_update,	  7,  15,   7, 0xff, 0x00, 0x00, 0x00}, // update h status h 
	{0x38f7, &op_update,	  7,  15,   8, 0xff, 0x00, 0x00, 0x00}, // update h status pc 
	{0x39f7, &op_update,	  7,  15,   9, 0xff, 0x00, 0x00, 0x00}, // update h status ra 
	{0x3af7, &op_update,	  7,  15,  10, 0xff, 0x00, 0x00, 0x00}, // update h status sb 
	{0x3bf7, &op_update,	  7,  15,  11, 0xff, 0x00, 0x00, 0x00}, // update h status sp 
	{0x3cf7, &op_update,	  7,  15,  12, 0xff, 0x00, 0x00, 0x00}, // update h status db 
	{0x3df7, &op_update,	  7,  15,  13, 0xff, 0x00, 0x00, 0x00}, // update h status cb 
	{0x3ef7, &op_update,	  7,  15,  14, 0xff, 0x00, 0x00, 0x00}, // update h status pi 
	{0x3ff7, &op_update,	  7,  15,   8, 0xff, 0x00, 0x04, 0x00}, // update h status <literal> 
	{0x3008, &op_update,	  8,   0,   0, 0xff, 0x00, 0x00, 0x00}, // update pc a a 
	{0x3108, &op_update,	  8,   0,   1, 0xff, 0x00, 0x00, 0x00}, // update pc a b 
	{0x3208, &op_update,	  8,   0,   2, 0xff, 0x00, 0x00, 0x00}, // update pc a c 
	{0x3308, &op_update,	  8,   0,   3, 0xff, 0x00, 0x00, 0x00}, // update pc a d 
	{0x3408, &op_update,	  8,   0,   4, 0xff, 0x00, 0x00, 0x00}, // update pc a e 
	{0x3508, &op_update,	  8,   0,   5, 0xff, 0x00, 0x00, 0x00}, // update pc a f 
	{0x3608, &op_update,	  8,   0,   6, 0xff, 0x00, 0x00, 0x00}, // update pc a g 
	{0x3708, &op_update,	  8,   0,   7, 0xff, 0x00, 0x00, 0x00}, // update pc a h 
	{0x3808, &op_update,	  8,   0,   8, 0xff, 0x00, 0x00, 0x00}, // update pc a pc 
	{0x3908, &op_update,	  8,   0,   9, 0xff, 0x00, 0x00, 0x00}, // update pc a ra 
	{0x3a08, &op_update,	  8,   0,  10, 0xff, 0x00, 0x00, 0x00}, // update pc a sb 
	{0x3b08, &op_update,	  8,   0,  11, 0xff, 0x00, 0x00, 0x00}, // update pc a sp 
	{0x3c08, &op_update,	  8,   0,  12, 0xff, 0x00, 0x00, 0x00}, // update pc a db 
	{0x3d08, &op_update,	  8,   0,  13, 0xff, 0x00, 0x00, 0x00}, // update pc a cb 
	{0x3e08, &op_update,	  8,   0,  14, 0xff, 0x00, 0x00, 0x00}, // update pc a pi 
	{0x3f08, &op_update,	  8,   0,   8, 0xff, 0x00, 0x04, 0x00}, // update pc a <literal> 
	{0x3018, &op_update,	  8,   1,   0, 0xff, 0x00, 0x00, 0x00}, // update pc b a 
	{0x3118, &op_update,	  8,   1,   1, 0xff, 0x00, 0x00, 0x00}, // update pc b b 
	{0x3218, &op_update,	  8,   1,   2, 0xff, 0x00, 0x00, 0x00}, // update pc b c 
	{0x3318, &op_update,	  8,   1,   3, 0xff, 0x00, 0x00, 0x00}, // update pc b d 
	{0x3418, &op_update,	  8,   1,   4, 0xff, 0x00, 0x00, 0x00}, // update pc b e 
	{0x3518, &op_update,	  8,   1,   5, 0xff, 0x00, 0x00, 0x00}, // update pc b f 
	{0x3618, &op_update,	  8,   1,   6, 0xff, 0x00, 0x00, 0x00}, // update pc b g 
	{0x3718, &op_update,	  8,   1,   7, 0xff, 0x00, 0x00, 0x00}, // update pc b h 
	{0x3818, &op_update,	  8,   1,   8, 0xff, 0x00, 0x00, 0x00}, // update pc b pc 
	{0x3918, &op_update,	  8,   1,   9, 0xff, 0x00, 0x00, 0x00}, // update pc b ra 
	{0x3a18, &op_update,	  8,   1,  10, 0xff, 0x00, 0x00, 0x00}, // update pc b sb 
	{0x3b18, &op_update,	  8,   1,  11, 0xff, 0x00, 0x00, 0x00}, // update pc b sp 
	{0x3c18, &op_update,	  8,   1,  12, 0xff, 0x00, 0x00, 0x00}, // update pc b db 
	{0x3d18, &op_update,	  8,   1,  13, 0xff, 0x00, 0x00, 0x00}, // update pc b cb 
	{0x3e18, &op_update,	  8,   1,  14, 0xff, 0x00, 0x00, 0x00}, // update pc b pi 
	{0x3f18, &op_update,	  8,   1,   8, 0xff, 0x00, 0x04, 0x00}, // update pc b <literal> 
	{0x3028, &op_update,	  8,   2,   0, 0xff, 0x00, 0x00, 0x00}, // update pc c a 
	{0x3128, &op_update,	  8,   2,   1, 0xff, 0x00, 0x00, 0x00}, // update pc c b 
	{0x3228, &op_update,	  8,   2,   2, 0xff, 0x00, 0x00, 0x00}, // update pc c c 
	{0x3328, &op_update,	  8,   2,   3, 0xff, 0x00, 0x00, 0x00}, // update pc c d 
	{0x3428, &op_update,	  8,   2,   4, 0xff, 0x00, 0x00, 0x00}, // update pc c e 
	{0x3528, &op_update,	  8,   2,   5, 0xff, 0x00, 0x00, 0x00}, // update pc c f 
	{0x3628, &op_update,	  8,   2,   6, 0xff, 0x00, 0x00, 0x00}, // update pc c g 
	{0x3728, &op_update,	  8,   2,   7, 0xff, 0x00, 0x00, 0x00}, // update pc c h 
	{0x3828, &op_update,	  8,   2,   8, 0xff, 0x00, 0x00, 0x00}, // update pc c pc 
	{0x3928, &op_update,	  8,   2,   9, 0xff, 0x00, 0x00, 0x00}, // update pc c ra 
	{0x3a28, &op_update,	  8,   2,  10, 0xff, 0x00, 0x00, 0x00}, // update pc c sb 
	{0x3b28, &op_update,	  8,   2,  11, 0xff, 0x00, 0x00, 0x00}, // update pc c sp 
	{0x3c28, &op_update,	  8,   2,  12, 0xff, 0x00, 0x00, 0x00}, // update pc c db 
	{0x3d28, &op_update,	  8,   2,  13, 0xff, 0x00, 0x00, 0x00}, // update pc c cb 
	{0x3e28, &op_update,	  8,   2,  14, 0xff, 0x00, 0x00, 0x00}, // update pc c pi 
	{0x3f28, &op_update,	  8,   2,   8, 0xff, 0x00, 0x04, 0x00}, // update pc c <literal> 
	{0x3038, &op_update,	  8,   3,   0, 0xff, 0x00, 0x00, 0x00}, // update pc d a 
	{0x3138, &op_update,	  8,   3,   1, 0xff, 0x00, 0x00, 0x00}, // update pc d b 
	{0x3238, &op_update,	  8,   3,   2, 0xff, 0x00, 0x00, 0x00}, // update pc d c 
	{0x3338, &op_update,	  8,   3,   3, 0xff, 0x00, 0x00, 0x00}, // update pc d d 
	{0x3438, &op_update,	  8,   3,   4, 0xff, 0x00, 0x00, 0x00}, // update pc d e 
	{0x3538, &op_update,	  8,   3,   5, 0xff, 0x00, 0x00, 0x00}, // update pc d f 
	{0x3638, &op_update,	  8,   3,   6, 0xff, 0x00, 0x00, 0x00}, // update pc d g 
	{0x3738, &op_update,	  8,   3,   7, 0xff, 0x00, 0x00, 0x00}, // update pc d h 
	{0x3838, &op_update,	  8,   3,   8, 0xff, 0x00, 0x00, 0x00}, // update pc d pc 
	{0x3938, &op_update,	  8,   3,   9, 0xff, 0x00, 0x00, 0x00}, // update pc d ra 
	{0x3a38, &op_update,	  8,   3,  10, 0xff, 0x00, 0x00, 0x00}, // update pc d sb 
	{0x3b38, &op_update,	  8,   3,  11, 0xff, 0x00, 0x00, 0x00}, // update pc d sp 
	{0x3c38, &op_update,	  8,   3,  12, 0xff, 0x00, 0x00, 0x00}, // update pc d db 
	{0x3d38, &op_update,	  8,   3,  13, 0xff, 0x00, 0x00, 0x00}, // update pc d cb 
	{0x3e38, &op_update,	  8,   3,  14, 0xff, 0x00, 0x00, 0x00}, // update pc d pi 
	{0x3f38, &op_update,	  8,   3,   8, 0xff, 0x00, 0x04, 0x00}, // update pc d <literal> 
	{0x3048, &op_update,	  8,   4,   0, 0xff, 0x00, 0x00, 0x00}, // update pc e a 
	{0x3148, &op_update,	  8,   4,   1, 0xff, 0x00, 0x00, 0x00}, // update pc e b 
	{0x3248, &op_update,	  8,   4,   2, 0xff, 0x00, 0x00, 0x00}, // update pc e c 
	{0x3348, &op_update,	  8,   4,   3, 0xff, 0x00, 0x00, 0x00}, // update pc e d 
	{0x3448, &op_update,	  8,   4,   4, 0xff, 0x00, 0x00, 0x00}, // update pc e e 
	{0x3548, &op_update,	  8,   4,   5, 0xff, 0x00, 0x00, 0x00}, // update pc e f 
	{0x3648, &op_update,	  8,   4,   6, 0xff, 0x00, 0x00, 0x00}, // update pc e g 
	{0x3748, &op_update,	  8,   4,   7, 0xff, 0x00, 0x00, 0x00}, // update pc e h 
	{0x3848, &op_update,	  8,   4,   8, 0xff, 0x00, 0x00, 0x00}, // update pc e pc 
	{0x3948, &op_update,	  8,   4,   9, 0xff, 0x00, 0x00, 0x00}, // update pc e ra 
	{0x3a48, &op_update,	  8,   4,  10, 0xff, 0x00, 0x00, 0x00}, // update pc e sb 
	{0x3b48, &op_update,	  8,   4,  11, 0xff, 0x00, 0x00, 0x00}, // update pc e sp 
	{0x3c48, &op_update,	  8,   4,  12, 0xff, 0x00, 0x00, 0x00}, // update pc e db 
	{0x3d48, &op_update,	  8,   4,  13, 0xff, 0x00, 0x00, 0x00}, // update pc e cb 
	{0x3e48, &op_update,	  8,   4,  14, 0xff, 0x00, 0x00, 0x00}, // update pc e pi 
	{0x3f48, &op_update,	  8,   4,   8, 0xff, 0x00, 0x04, 0x00}, // update pc e <literal> 
	{0x3058, &op_update,	  8,   5,   0, 0xff, 0x00, 0x00, 0x00}, // update pc f a 
	{0x3158, &op_update,	  8,   5,   1, 0xff, 0x00, 0x00, 0x00}, // update pc f b 
	{0x3258, &op_update,	  8,   5,   2, 0xff, 0x00, 0x00, 0x00}, // update pc f c 
	{0x3358, &op_update,	  8,   5,   3, 0xff, 0x00, 0x00, 0x00}, // update pc f d 
	{0x3458, &op_update,	  8,   5,   4, 0xff, 0x00, 0x00, 0x00}, // update pc f e 
	{0x3558, &op_update,	  8,   5,   5, 0xff, 0x00, 0x00, 0x00}, // update pc f f 
	{0x3658, &op_update,	  8,   5,   6, 0xff, 0x00, 0x00, 0x00}, // update pc f g 
	{0x3758, &op_update,	  8,   5,   7, 0xff, 0x00, 0x00, 0x00}, // update pc f h 
	{0x3858, &op_update,	  8,   5,   8, 0xff, 0x00, 0x00, 0x00}, // update pc f pc 
	{0x3958, &op_update,	  8,   5,   9, 0xff, 0x00, 0x00, 0x00}, // update pc f ra 
	{0x3a58, &op_update,	  8,   5,  10, 0xff, 0x00, 0x00, 0x00}, // update pc f sb 
	{0x3b58, &op_update,	  8,   5,  11, 0xff, 0x00, 0x00, 0x00}, // update pc f sp 
	{0x3c58, &op_update,	  8,   5,  12, 0xff, 0x00, 0x00, 0x00}, // update pc f db 
	{0x3d58, &op_update,	  8,   5,  13, 0xff, 0x00, 0x00, 0x00}, // update pc f cb 
	{0x3e58, &op_update,	  8,   5,  14, 0xff, 0x00, 0x00, 0x00}, // update pc f pi 
	{0x3f58, &op_update,	  8,   5,   8, 0xff, 0x00, 0x04, 0x00}, // update pc f <literal> 
	{0x3068, &op_update,	  8,   6,   0, 0xff, 0x00, 0x00, 0x00}, // update pc g a 
	{0x3168, &op_update,	  8,   6,   1, 0xff, 0x00, 0x00, 0x00}, // update pc g b 
	{0x3268, &op_update,	  8,   6,   2, 0xff, 0x00, 0x00, 0x00}, // update pc g c 
	{0x3368, &op_update,	  8,   6,   3, 0xff, 0x00, 0x00, 0x00}, // update pc g d 
	{0x3468, &op_update,	  8,   6,   4, 0xff, 0x00, 0x00, 0x00}, // update pc g e 
	{0x3568, &op_update,	  8,   6,   5, 0xff, 0x00, 0x00, 0x00}, // update pc g f 
	{0x3668, &op_update,	  8,   6,   6, 0xff, 0x00, 0x00, 0x00}, // update pc g g 
	{0x3768, &op_update,	  8,   6,   7, 0xff, 0x00, 0x00, 0x00}, // update pc g h 
	{0x3868, &op_update,	  8,   6,   8, 0xff, 0x00, 0x00, 0x00}, // update pc g pc 
	{0x3968, &op_update,	  8,   6,   9, 0xff, 0x00, 0x00, 0x00}, // update pc g ra 
	{0x3a68, &op_update,	  8,   6,  10, 0xff, 0x00, 0x00, 0x00}, // update pc g sb 
	{0x3b68, &op_update,	  8,   6,  11, 0xff, 0x00, 0x00, 0x00}, // update pc g sp 
	{0x3c68, &op_update,	  8,   6,  12, 0xff, 0x00, 0x00, 0x00}, // update pc g db 
	{0x3d68, &op_update,	  8,   6,  13, 0xff, 0x00, 0x00, 0x00}, // update pc g cb 
	{0x3e68, &op_update,	  8,   6,  14, 0xff, 0x00, 0x00, 0x00}, // update pc g pi 
	{0x3f68, &op_update,	  8,   6,   8, 0xff, 0x00, 0x04, 0x00}, // update pc g <literal> 
	{0x3078, &op_update,	  8,   7,   0, 0xff, 0x00, 0x00, 0x00}, // update pc h a 
	{0x3178, &op_update,	  8,   7,   1, 0xff, 0x00, 0x00, 0x00}, // update pc h b 
	{0x3278, &op_update,	  8,   7,   2, 0xff, 0x00, 0x00, 0x00}, // update pc h c 
	{0x3378, &op_update,	  8,   7,   3, 0xff, 0x00, 0x00, 0x00}, // update pc h d 
	{0x3478, &op_update,	  8,   7,   4, 0xff, 0x00, 0x00, 0x00}, // update pc h e 
	{0x3578, &op_update,	  8,   7,   5, 0xff, 0x00, 0x00, 0x00}, // update pc h f 
	{0x3678, &op_update,	  8,   7,   6, 0xff, 0x00, 0x00, 0x00}, // update pc h g 
	{0x3778, &op_update,	  8,   7,   7, 0xff, 0x00, 0x00, 0x00}, // update pc h h 
	{0x3878, &op_update,	  8,   7,   8, 0xff, 0x00, 0x00, 0x00}, // update pc h pc 
	{0x3978, &op_update,	  8,   7,   9, 0xff, 0x00, 0x00, 0x00}, // update pc h ra 
	{0x3a78, &op_update,	  8,   7,  10, 0xff, 0x00, 0x00, 0x00}, // update pc h sb 
	{0x3b78, &op_update,	  8,   7,  11, 0xff, 0x00, 0x00, 0x00}, // update pc h sp 
	{0x3c78, &op_update,	  8,   7,  12, 0xff, 0x00, 0x00, 0x00}, // update pc h db 
	{0x3d78, &op_update,	  8,   7,  13, 0xff, 0x00, 0x00, 0x00}, // update pc h cb 
	{0x3e78, &op_update,	  8,   7,  14, 0xff, 0x00, 0x00, 0x00}, // update pc h pi 
	{0x3f78, &op_update,	  8,   7,   8, 0xff, 0x00, 0x04, 0x00}, // update pc h <literal> 
	{0x3088, &op_update,	  8,   8,   0, 0xff, 0x00, 0x00, 0x00}, // update pc pc a 
	{0x3188, &op_update,	  8,   8,   1, 0xff, 0x00, 0x00, 0x00}, // update pc pc b 
	{0x3288, &op_update,	  8,   8,   2, 0xff, 0x00, 0x00, 0x00}, // update pc pc c 
	{0x3388, &op_update,	  8,   8,   3, 0xff, 0x00, 0x00, 0x00}, // update pc pc d 
	{0x3488, &op_update,	  8,   8,   4, 0xff, 0x00, 0x00, 0x00}, // update pc pc e 
	{0x3588, &op_update,	  8,   8,   5, 0xff, 0x00, 0x00, 0x00}, // update pc pc f 
	{0x3688, &op_update,	  8,   8,   6, 0xff, 0x00, 0x00, 0x00}, // update pc pc g 
	{0x3788, &op_update,	  8,   8,   7, 0xff, 0x00, 0x00, 0x00}, // update pc pc h 
	{0x3888, &op_update,	  8,   8,   8, 0xff, 0x00, 0x00, 0x00}, // update pc pc pc 
	{0x3988, &op_update,	  8,   8,   9, 0xff, 0x00, 0x00, 0x00}, // update pc pc ra 
	{0x3a88, &op_update,	  8,   8,  10, 0xff, 0x00, 0x00, 0x00}, // update pc pc sb 
	{0x3b88, &op_update,	  8,   8,  11, 0xff, 0x00, 0x00, 0x00}, // update pc pc sp 
	{0x3c88, &op_update,	  8,   8,  12, 0xff, 0x00, 0x00, 0x00}, // update pc pc db 
	{0x3d88, &op_update,	  8,   8,  13, 0xff, 0x00, 0x00, 0x00}, // update pc pc cb 
	{0x3e88, &op_update,	  8,   8,  14, 0xff, 0x00, 0x00, 0x00}, // update pc pc pi 
	{0x3f88, &op_update,	  8,   8,   8, 0xff, 0x00, 0x04, 0x00}, // update pc pc <literal> 
	{0x3098, &op_update,	  8,   9,   0, 0xff, 0x00, 0x00, 0x00}, // update pc ra a 
	{0x3198, &op_update,	  8,   9,   1, 0xff, 0x00, 0x00, 0x00}, // update pc ra b 
	{0x3298, &op_update,	  8,   9,   2, 0xff, 0x00, 0x00, 0x00}, // update pc ra c 
	{0x3398, &op_update,	  8,   9,   3, 0xff, 0x00, 0x00, 0x00}, // update pc ra d 
	{0x3498, &op_update,	  8,   9,   4, 0xff, 0x00, 0x00, 0x00}, // update pc ra e 
	{0x3598, &op_update,	  8,   9,   5, 0xff, 0x00, 0x00, 0x00}, // update pc ra f 
	{0x3698, &op_update,	  8,   9,   6, 0xff, 0x00, 0x00, 0x00}, // update pc ra g 
	{0x3798, &op_update,	  8,   9,   7, 0xff, 0x00, 0x00, 0x00}, // update pc ra h 
	{0x3898, &op_update,	  8,   9,   8, 0xff, 0x00, 0x00, 0x00}, // update pc ra pc 
	{0x3998, &op_update,	  8,   9,   9, 0xff, 0x00, 0x00, 0x00}, // update pc ra ra 
	{0x3a98, &op_update,	  8,   9,  10, 0xff, 0x00, 0x00, 0x00}, // update pc ra sb 
	{0x3b98, &op_update,	  8,   9,  11, 0xff, 0x00, 0x00, 0x00}, // update pc ra sp 
	{0x3c98, &op_update,	  8,   9,  12, 0xff, 0x00, 0x00, 0x00}, // update pc ra db 
	{0x3d98, &op_update,	  8,   9,  13, 0xff, 0x00, 0x00, 0x00}, // update pc ra cb 
	{0x3e98, &op_update,	  8,   9,  14, 0xff, 0x00, 0x00, 0x00}, // update pc ra pi 
	{0x3f98, &op_update,	  8,   9,   8, 0xff, 0x00, 0x04, 0x00}, // update pc ra <literal> 
	{0x30a8, &op_update,	  8,  10,   0, 0xff, 0x00, 0x00, 0x00}, // update pc sb a 
	{0x31a8, &op_update,	  8,  10,   1, 0xff, 0x00, 0x00, 0x00}, // update pc sb b 
	{0x32a8, &op_update,	  8,  10,   2, 0xff, 0x00, 0x00, 0x00}, // update pc sb c 
	{0x33a8, &op_update,	  8,  10,   3, 0xff, 0x00, 0x00, 0x00}, // update pc sb d 
	{0x34a8, &op_update,	  8,  10,   4, 0xff, 0x00, 0x00, 0x00}, // update pc sb e 
	{0x35a8, &op_update,	  8,  10,   5, 0xff, 0x00, 0x00, 0x00}, // update pc sb f 
	{0x36a8, &op_update,	  8,  10,   6, 0xff, 0x00, 0x00, 0x00}, // update pc sb g 
	{0x37a8, &op_update,	  8,  10,   7, 0xff, 0x00, 0x00, 0x00}, // update pc sb h 
	{0x38a8, &op_update,	  8,  10,   8, 0xff, 0x00, 0x00, 0x00}, // update pc sb pc 
	{0x39a8, &op_update,	  8,  10,   9, 0xff, 0x00, 0x00, 0x00}, // update pc sb ra 
	{0x3aa8, &op_update,	  8,  10,  10, 0xff, 0x00, 0x00, 0x00}, // update pc sb sb 
	{0x3ba8, &op_update,	  8,  10,  11, 0xff, 0x00, 0x00, 0x00}, // update pc sb sp 
	{0x3ca8, &op_update,	  8,  10,  12, 0xff, 0x00, 0x00, 0x00}, // update pc sb db 
	{0x3da8, &op_update,	  8,  10,  13, 0xff, 0x00, 0x00, 0x00}, // update pc sb cb 
	{0x3ea8, &op_update,	  8,  10,  14, 0xff, 0x00, 0x00, 0x00}, // update pc sb pi 
	{0x3fa8, &op_update,	  8,  10,   8, 0xff, 0x00, 0x04, 0x00}, // update pc sb <literal> 
	{0x30b8, &op_update,	  8,  11,   0, 0xff, 0x00, 0x00, 0x00}, // update pc sp a 
	{0x31b8, &op_update,	  8,  11,   1, 0xff, 0x00, 0x00, 0x00}, // update pc sp b 
	{0x32b8, &op_update,	  8,  11,   2, 0xff, 0x00, 0x00, 0x00}, // update pc sp c 
	{0x33b8, &op_update,	  8,  11,   3, 0xff, 0x00, 0x00, 0x00}, // update pc sp d 
	{0x34b8, &op_update,	  8,  11,   4, 0xff, 0x00, 0x00, 0x00}, // update pc sp e 
	{0x35b8, &op_update,	  8,  11,   5, 0xff, 0x00, 0x00, 0x00}, // update pc sp f 
	{0x36b8, &op_update,	  8,  11,   6, 0xff, 0x00, 0x00, 0x00}, // update pc sp g 
	{0x37b8, &op_update,	  8,  11,   7, 0xff, 0x00, 0x00, 0x00}, // update pc sp h 
	{0x38b8, &op_update,	  8,  11,   8, 0xff, 0x00, 0x00, 0x00}, // update pc sp pc 
	{0x39b8, &op_update,	  8,  11,   9, 0xff, 0x00, 0x00, 0x00}, // update pc sp ra 
	{0x3ab8, &op_update,	  8,  11,  10, 0xff, 0x00, 0x00, 0x00}, // update pc sp sb 
	{0x3bb8, &op_update,	  8,  11,  11, 0xff, 0x00, 0x00, 0x00}, // update pc sp sp 
	{0x3cb8, &op_update,	  8,  11,  12, 0xff, 0x00, 0x00, 0x00}, // update pc sp db 
	{0x3db8, &op_update,	  8,  11,  13, 0xff, 0x00, 0x00, 0x00}, // update pc sp cb 
	{0x3eb8, &op_update,	  8,  11,  14, 0xff, 0x00, 0x00, 0x00}, // update pc sp pi 
	{0x3fb8, &op_update,	  8,  11,   8, 0xff, 0x00, 0x04, 0x00}, // update pc sp <literal> 
	{0x30c8, &op_update,	  8,  12,   0, 0xff, 0x00, 0x00, 0x00}, // update pc db a 
	{0x31c8, &op_update,	  8,  12,   1, 0xff, 0x00, 0x00, 0x00}, // update pc db b 
	{0x32c8, &op_update,	  8,  12,   2, 0xff, 0x00, 0x00, 0x00}, // update pc db c 
	{0x33c8, &op_update,	  8,  12,   3, 0xff, 0x00, 0x00, 0x00}, // update pc db d 
	{0x34c8, &op_update,	  8,  12,   4, 0xff, 0x00, 0x00, 0x00}, // update pc db e 
	{0x35c8, &op_update,	  8,  12,   5, 0xff, 0x00, 0x00, 0x00}, // update pc db f 
	{0x36c8, &op_update,	  8,  12,   6, 0xff, 0x00, 0x00, 0x00}, // update pc db g 
	{0x37c8, &op_update,	  8,  12,   7, 0xff, 0x00, 0x00, 0x00}, // update pc db h 
	{0x38c8, &op_update,	  8,  12,   8, 0xff, 0x00, 0x00, 0x00}, // update pc db pc 
	{0x39c8, &op_update,	  8,  12,   9, 0xff, 0x00, 0x00, 0x00}, // update pc db ra 
	{0x3ac8, &op_update,	  8,  12,  10, 0xff, 0x00, 0x00, 0x00}, // update pc db sb 
	{0x3bc8, &op_update,	  8,  12,  11, 0xff, 0x00, 0x00, 0x00}, // update pc db sp 
	{0x3cc8, &op_update,	  8,  12,  12, 0xff, 0x00, 0x00, 0x00}, // update pc db db 
	{0x3dc8, &op_update,	  8,  12,  13, 0xff, 0x00, 0x00, 0x00}, // update pc db cb 
	{0x3ec8, &op_update,	  8,  12,  14, 0xff, 0x00, 0x00, 0x00}, // update pc db pi 
	{0x3fc8, &op_update,	  8,  12,   8, 0xff, 0x00, 0x04, 0x00}, // update pc db <literal> 
	{0x30d8, &op_update,	  8,  13,   0, 0xff, 0x00, 0x00, 0x00}, // update pc cb a 
	{0x31d8, &op_update,	  8,  13,   1, 0xff, 0x00, 0x00, 0x00}, // update pc cb b 
	{0x32d8, &op_update,	  8,  13,   2, 0xff, 0x00, 0x00, 0x00}, // update pc cb c 
	{0x33d8, &op_update,	  8,  13,   3, 0xff, 0x00, 0x00, 0x00}, // update pc cb d 
	{0x34d8, &op_update,	  8,  13,   4, 0xff, 0x00, 0x00, 0x00}, // update pc cb e 
	{0x35d8, &op_update,	  8,  13,   5, 0xff, 0x00, 0x00, 0x00}, // update pc cb f 
	{0x36d8, &op_update,	  8,  13,   6, 0xff, 0x00, 0x00, 0x00}, // update pc cb g 
	{0x37d8, &op_update,	  8,  13,   7, 0xff, 0x00, 0x00, 0x00}, // update pc cb h 
	{0x38d8, &op_update,	  8,  13,   8, 0xff, 0x00, 0x00, 0x00}, // update pc cb pc 
	{0x39d8, &op_update,	  8,  13,   9, 0xff, 0x00, 0x00, 0x00}, // update pc cb ra 
	{0x3ad8, &op_update,	  8,  13,  10, 0xff, 0x00, 0x00, 0x00}, // update pc cb sb 
	{0x3bd8, &op_update,	  8,  13,  11, 0xff, 0x00, 0x00, 0x00}, // update pc cb sp 
	{0x3cd8, &op_update,	  8,  13,  12, 0xff, 0x00, 0x00, 0x00}, // update pc cb db 
	{0x3dd8, &op_update,	  8,  13,  13, 0xff, 0x00, 0x00, 0x00}, // update pc cb cb 
	{0x3ed8, &op_update,	  8,  13,  14, 0xff, 0x00, 0x00, 0x00}, // update pc cb pi 
	{0x3fd8, &op_update,	  8,  13,   8, 0xff, 0x00, 0x04, 0x00}, // update pc cb <literal> 
	{0x30e8, &op_update,	  8,  14,   0, 0xff, 0x00, 0x00, 0x00}, // update pc pi a 
	{0x31e8, &op_update,	  8,  14,   1, 0xff, 0x00, 0x00, 0x00}, // update pc pi b 
	{0x32e8, &op_update,	  8,  14,   2, 0xff, 0x00, 0x00, 0x00}, // update pc pi c 
	{0x33e8, &op_update,	  8,  14,   3, 0xff, 0x00, 0x00, 0x00}, // update pc pi d 
	{0x34e8, &op_update,	  8,  14,   4, 0xff, 0x00, 0x00, 0x00}, // update pc pi e 
	{0x35e8, &op_update,	  8,  14,   5, 0xff, 0x00, 0x00, 0x00}, // update pc pi f 
	{0x36e8, &op_update,	  8,  14,   6, 0xff, 0x00, 0x00, 0x00}, // update pc pi g 
	{0x37e8, &op_update,	  8,  14,   7, 0xff, 0x00, 0x00, 0x00}, // update pc pi h 
	{0x38e8, &op_update,	  8,  14,   8, 0xff, 0x00, 0x00, 0x00}, // update pc pi pc 
	{0x39e8, &op_update,	  8,  14,   9, 0xff, 0x00, 0x00, 0x00}, // update pc pi ra 
	{0x3ae8, &op_update,	  8,  14,  10, 0xff, 0x00, 0x00, 0x00}, // update pc pi sb 
	{0x3be8, &op_update,	  8,  14,  11, 0xff, 0x00, 0x00, 0x00}, // update pc pi sp 
	{0x3ce8, &op_update,	  8,  14,  12, 0xff, 0x00, 0x00, 0x00}, // update pc pi db 
	{0x3de8, &op_update,	  8,  14,  13, 0xff, 0x00, 0x00, 0x00}, // update pc pi cb 
	{0x3ee8, &op_update,	  8,  14,  14, 0xff, 0x00, 0x00, 0x00}, // update pc pi pi 
	{0x3fe8, &op_update,	  8,  14,   8, 0xff, 0x00, 0x04, 0x00}, // update pc pi <literal> 
	{0x30f8, &op_update,	  8,  15,   0, 0xff, 0x00, 0x00, 0x00}, // update pc status a 
	{0x31f8, &op_update,	  8,  15,   1, 0xff, 0x00, 0x00, 0x00}, // update pc status b 
	{0x32f8, &op_update,	  8,  15,   2, 0xff, 0x00, 0x00, 0x00}, // update pc status c 
	{0x33f8, &op_update,	  8,  15,   3, 0xff, 0x00, 0x00, 0x00}, // update pc status d 
	{0x34f8, &op_update,	  8,  15,   4, 0xff, 0x00, 0x00, 0x00}, // update pc status e 
	{0x35f8, &op_update,	  8,  15,   5, 0xff, 0x00, 0x00, 0x00}, // update pc status f 
	{0x36f8, &op_update,	  8,  15,   6, 0xff, 0x00, 0x00, 0x00}, // update pc status g 
	{0x37f8, &op_update,	  8,  15,   7, 0xff, 0x00, 0x00, 0x00}, // update pc status h 
	{0x38f8, &op_update,	  8,  15,   8, 0xff, 0x00, 0x00, 0x00}, // update pc status pc 
	{0x39f8, &op_update,	  8,  15,   9, 0xff, 0x00, 0x00, 0x00}, // update pc status ra 
	{0x3af8, &op_update,	  8,  15,  10, 0xff, 0x00, 0x00, 0x00}, // update pc status sb 
	{0x3bf8, &op_update,	  8,  15,  11, 0xff, 0x00, 0x00, 0x00}, // update pc status sp 
	{0x3cf8, &op_update,	  8,  15,  12, 0xff, 0x00, 0x00, 0x00}, // update pc status db 
	{0x3df8, &op_update,	  8,  15,  13, 0xff, 0x00, 0x00, 0x00}, // update pc status cb 
	{0x3ef8, &op_update,	  8,  15,  14, 0xff, 0x00, 0x00, 0x00}, // update pc status pi 
	{0x3ff8, &op_update,	  8,  15,   8, 0xff, 0x00, 0x04, 0x00}, // update pc status <literal> 
	{0x3009, &op_update,	  9,   0,   0, 0xff, 0x00, 0x00, 0x00}, // update ra a a 
	{0x3109, &op_update,	  9,   0,   1, 0xff, 0x00, 0x00, 0x00}, // update ra a b 
	{0x3209, &op_update,	  9,   0,   2, 0xff, 0x00, 0x00, 0x00}, // update ra a c 
	{0x3309, &op_update,	  9,   0,   3, 0xff, 0x00, 0x00, 0x00}, // update ra a d 
	{0x3409, &op_update,	  9,   0,   4, 0xff, 0x00, 0x00, 0x00}, // update ra a e 
	{0x3509, &op_update,	  9,   0,   5, 0xff, 0x00, 0x00, 0x00}, // update ra a f 
	{0x3609, &op_update,	  9,   0,   6, 0xff, 0x00, 0x00, 0x00}, // update ra a g 
	{0x3709, &op_update,	  9,   0,   7, 0xff, 0x00, 0x00, 0x00}, // update ra a h 
	{0x3809, &op_update,	  9,   0,   8, 0xff, 0x00, 0x00, 0x00}, // update ra a pc 
	{0x3909, &op_update,	  9,   0,   9, 0xff, 0x00, 0x00, 0x00}, // update ra a ra 
	{0x3a09, &op_update,	  9,   0,  10, 0xff, 0x00, 0x00, 0x00}, // update ra a sb 
	{0x3b09, &op_update,	  9,   0,  11, 0xff, 0x00, 0x00, 0x00}, // update ra a sp 
	{0x3c09, &op_update,	  9,   0,  12, 0xff, 0x00, 0x00, 0x00}, // update ra a db 
	{0x3d09, &op_update,	  9,   0,  13, 0xff, 0x00, 0x00, 0x00}, // update ra a cb 
	{0x3e09, &op_update,	  9,   0,  14, 0xff, 0x00, 0x00, 0x00}, // update ra a pi 
	{0x3f09, &op_update,	  9,   0,   8, 0xff, 0x00, 0x04, 0x00}, // update ra a <literal> 
	{0x3019, &op_update,	  9,   1,   0, 0xff, 0x00, 0x00, 0x00}, // update ra b a 
	{0x3119, &op_update,	  9,   1,   1, 0xff, 0x00, 0x00, 0x00}, // update ra b b 
	{0x3219, &op_update,	  9,   1,   2, 0xff, 0x00, 0x00, 0x00}, // update ra b c 
	{0x3319, &op_update,	  9,   1,   3, 0xff, 0x00, 0x00, 0x00}, // update ra b d 
	{0x3419, &op_update,	  9,   1,   4, 0xff, 0x00, 0x00, 0x00}, // update ra b e 
	{0x3519, &op_update,	  9,   1,   5, 0xff, 0x00, 0x00, 0x00}, // update ra b f 
	{0x3619, &op_update,	  9,   1,   6, 0xff, 0x00, 0x00, 0x00}, // update ra b g 
	{0x3719, &op_update,	  9,   1,   7, 0xff, 0x00, 0x00, 0x00}, // update ra b h 
	{0x3819, &op_update,	  9,   1,   8, 0xff, 0x00, 0x00, 0x00}, // update ra b pc 
	{0x3919, &op_update,	  9,   1,   9, 0xff, 0x00, 0x00, 0x00}, // update ra b ra 
	{0x3a19, &op_update,	  9,   1,  10, 0xff, 0x00, 0x00, 0x00}, // update ra b sb 
	{0x3b19, &op_update,	  9,   1,  11, 0xff, 0x00, 0x00, 0x00}, // update ra b sp 
	{0x3c19, &op_update,	  9,   1,  12, 0xff, 0x00, 0x00, 0x00}, // update ra b db 
	{0x3d19, &op_update,	  9,   1,  13, 0xff, 0x00, 0x00, 0x00}, // update ra b cb 
	{0x3e19, &op_update,	  9,   1,  14, 0xff, 0x00, 0x00, 0x00}, // update ra b pi 
	{0x3f19, &op_update,	  9,   1,   8, 0xff, 0x00, 0x04, 0x00}, // update ra b <literal> 
	{0x3029, &op_update,	  9,   2,   0, 0xff, 0x00, 0x00, 0x00}, // update ra c a 
	{0x3129, &op_update,	  9,   2,   1, 0xff, 0x00, 0x00, 0x00}, // update ra c b 
	{0x3229, &op_update,	  9,   2,   2, 0xff, 0x00, 0x00, 0x00}, // update ra c c 
	{0x3329, &op_update,	  9,   2,   3, 0xff, 0x00, 0x00, 0x00}, // update ra c d 
	{0x3429, &op_update,	  9,   2,   4, 0xff, 0x00, 0x00, 0x00}, // update ra c e 
	{0x3529, &op_update,	  9,   2,   5, 0xff, 0x00, 0x00, 0x00}, // update ra c f 
	{0x3629, &op_update,	  9,   2,   6, 0xff, 0x00, 0x00, 0x00}, // update ra c g 
	{0x3729, &op_update,	  9,   2,   7, 0xff, 0x00, 0x00, 0x00}, // update ra c h 
	{0x3829, &op_update,	  9,   2,   8, 0xff, 0x00, 0x00, 0x00}, // update ra c pc 
	{0x3929, &op_update,	  9,   2,   9, 0xff, 0x00, 0x00, 0x00}, // update ra c ra 
	{0x3a29, &op_update,	  9,   2,  10, 0xff, 0x00, 0x00, 0x00}, // update ra c sb 
	{0x3b29, &op_update,	  9,   2,  11, 0xff, 0x00, 0x00, 0x00}, // update ra c sp 
	{0x3c29, &op_update,	  9,   2,  12, 0xff, 0x00, 0x00, 0x00}, // update ra c db 
	{0x3d29, &op_update,	  9,   2,  13, 0xff, 0x00, 0x00, 0x00}, // update ra c cb 
	{0x3e29, &op_update,	  9,   2,  14, 0xff, 0x00, 0x00, 0x00}, // update ra c pi 
	{0x3f29, &op_update,	  9,   2,   8, 0xff, 0x00, 0x04, 0x00}, // update ra c <literal> 
	{0x3039, &op_update,	  9,   3,   0, 0xff, 0x00, 0x00, 0x00}, // update ra d a 
	{0x3139, &op_update,	  9,   3,   1, 0xff, 0x00, 0x00, 0x00}, // update ra d b 
	{0x3239, &op_update,	  9,   3,   2, 0xff, 0x00, 0x00, 0x00}, // update ra d c 
	{0x3339, &op_update,	  9,   3,   3, 0xff, 0x00, 0x00, 0x00}, // update ra d d 
	{0x3439, &op_update,	  9,   3,   4, 0xff, 0x00, 0x00, 0x00}, // update ra d e 
	{0x3539, &op_update,	  9,   3,   5, 0xff, 0x00, 0x00, 0x00}, // update ra d f 
	{0x3639, &op_update,	  9,   3,   6, 0xff, 0x00, 0x00, 0x00}, // update ra d g 
	{0x3739, &op_update,	  9,   3,   7, 0xff, 0x00, 0x00, 0x00}, // update ra d h 
	{0x3839, &op_update,	  9,   3,   8, 0xff, 0x00, 0x00, 0x00}, // update ra d pc 
	{0x3939, &op_update,	  9,   3,   9, 0xff, 0x00, 0x00, 0x00}, // update ra d ra 
	{0x3a39, &op_update,	  9,   3,  10, 0xff, 0x00, 0x00, 0x00}, // update ra d sb 
	{0x3b39, &op_update,	  9,   3,  11, 0xff, 0x00, 0x00, 0x00}, // update ra d sp 
	{0x3c39, &op_update,	  9,   3,  12, 0xff, 0x00, 0x00, 0x00}, // update ra d db 
	{0x3d39, &op_update,	  9,   3,  13, 0xff, 0x00, 0x00, 0x00}, // update ra d cb 
	{0x3e39, &op_update,	  9,   3,  14, 0xff, 0x00, 0x00, 0x00}, // update ra d pi 
	{0x3f39, &op_update,	  9,   3,   8, 0xff, 0x00, 0x04, 0x00}, // update ra d <literal> 
	{0x3049, &op_update,	  9,   4,   0, 0xff, 0x00, 0x00, 0x00}, // update ra e a 
	{0x3149, &op_update,	  9,   4,   1, 0xff, 0x00, 0x00, 0x00}, // update ra e b 
	{0x3249, &op_update,	  9,   4,   2, 0xff, 0x00, 0x00, 0x00}, // update ra e c 
	{0x3349, &op_update,	  9,   4,   3, 0xff, 0x00, 0x00, 0x00}, // update ra e d 
	{0x3449, &op_update,	  9,   4,   4, 0xff, 0x00, 0x00, 0x00}, // update ra e e 
	{0x3549, &op_update,	  9,   4,   5, 0xff, 0x00, 0x00, 0x00}, // update ra e f 
	{0x3649, &op_update,	  9,   4,   6, 0xff, 0x00, 0x00, 0x00}, // update ra e g 
	{0x3749, &op_update,	  9,   4,   7, 0xff, 0x00, 0x00, 0x00}, // update ra e h 
	{0x3849, &op_update,	  9,   4,   8, 0xff, 0x00, 0x00, 0x00}, // update ra e pc 
	{0x3949, &op_update,	  9,   4,   9, 0xff, 0x00, 0x00, 0x00}, // update ra e ra 
	{0x3a49, &op_update,	  9,   4,  10, 0xff, 0x00, 0x00, 0x00}, // update ra e sb 
	{0x3b49, &op_update,	  9,   4,  11, 0xff, 0x00, 0x00, 0x00}, // update ra e sp 
	{0x3c49, &op_update,	  9,   4,  12, 0xff, 0x00, 0x00, 0x00}, // update ra e db 
	{0x3d49, &op_update,	  9,   4,  13, 0xff, 0x00, 0x00, 0x00}, // update ra e cb 
	{0x3e49, &op_update,	  9,   4,  14, 0xff, 0x00, 0x00, 0x00}, // update ra e pi 
	{0x3f49, &op_update,	  9,   4,   8, 0xff, 0x00, 0x04, 0x00}, // update ra e <literal> 
	{0x3059, &op_update,	  9,   5,   0, 0xff, 0x00, 0x00, 0x00}, // update ra f a 
	{0x3159, &op_update,	  9,   5,   1, 0xff, 0x00, 0x00, 0x00}, // update ra f b 
	{0x3259, &op_update,	  9,   5,   2, 0xff, 0x00, 0x00, 0x00}, // update ra f c 
	{0x3359, &op_update,	  9,   5,   3, 0xff, 0x00, 0x00, 0x00}, // update ra f d 
	{0x3459, &op_update,	  9,   5,   4, 0xff, 0x00, 0x00, 0x00}, // update ra f e 
	{0x3559, &op_update,	  9,   5,   5, 0xff, 0x00, 0x00, 0x00}, // update ra f f 
	{0x3659, &op_update,	  9,   5,   6, 0xff, 0x00, 0x00, 0x00}, // update ra f g 
	{0x3759, &op_update,	  9,   5,   7, 0xff, 0x00, 0x00, 0x00}, // update ra f h 
	{0x3859, &op_update,	  9,   5,   8, 0xff, 0x00, 0x00, 0x00}, // update ra f pc 
	{0x3959, &op_update,	  9,   5,   9, 0xff, 0x00, 0x00, 0x00}, // update ra f ra 
	{0x3a59, &op_update,	  9,   5,  10, 0xff, 0x00, 0x00, 0x00}, // update ra f sb 
	{0x3b59, &op_update,	  9,   5,  11, 0xff, 0x00, 0x00, 0x00}, // update ra f sp 
	{0x3c59, &op_update,	  9,   5,  12, 0xff, 0x00, 0x00, 0x00}, // update ra f db 
	{0x3d59, &op_update,	  9,   5,  13, 0xff, 0x00, 0x00, 0x00}, // update ra f cb 
	{0x3e59, &op_update,	  9,   5,  14, 0xff, 0x00, 0x00, 0x00}, // update ra f pi 
	{0x3f59, &op_update,	  9,   5,   8, 0xff, 0x00, 0x04, 0x00}, // update ra f <literal> 
	{0x3069, &op_update,	  9,   6,   0, 0xff, 0x00, 0x00, 0x00}, // update ra g a 
	{0x3169, &op_update,	  9,   6,   1, 0xff, 0x00, 0x00, 0x00}, // update ra g b 
	{0x3269, &op_update,	  9,   6,   2, 0xff, 0x00, 0x00, 0x00}, // update ra g c 
	{0x3369, &op_update,	  9,   6,   3, 0xff, 0x00, 0x00, 0x00}, // update ra g d 
	{0x3469, &op_update,	  9,   6,   4, 0xff, 0x00, 0x00, 0x00}, // update ra g e 
	{0x3569, &op_update,	  9,   6,   5, 0xff, 0x00, 0x00, 0x00}, // update ra g f 
	{0x3669, &op_update,	  9,   6,   6, 0xff, 0x00, 0x00, 0x00}, // update ra g g 
	{0x3769, &op_update,	  9,   6,   7, 0xff, 0x00, 0x00, 0x00}, // update ra g h 
	{0x3869, &op_update,	  9,   6,   8, 0xff, 0x00, 0x00, 0x00}, // update ra g pc 
	{0x3969, &op_update,	  9,   6,   9, 0xff, 0x00, 0x00, 0x00}, // update ra g ra 
	{0x3a69, &op_update,	  9,   6,  10, 0xff, 0x00, 0x00, 0x00}, // update ra g sb 
	{0x3b69, &op_update,	  9,   6,  11, 0xff, 0x00, 0x00, 0x00}, // update ra g sp 
	{0x3c69, &op_update,	  9,   6,  12, 0xff, 0x00, 0x00, 0x00}, // update ra g db 
	{0x3d69, &op_update,	  9,   6,  13, 0xff, 0x00, 0x00, 0x00}, // update ra g cb 
	{0x3e69, &op_update,	  9,   6,  14, 0xff, 0x00, 0x00, 0x00}, // update ra g pi 
	{0x3f69, &op_update,	  9,   6,   8, 0xff, 0x00, 0x04, 0x00}, // update ra g <literal> 
	{0x3079, &op_update,	  9,   7,   0, 0xff, 0x00, 0x00, 0x00}, // update ra h a 
	{0x3179, &op_update,	  9,   7,   1, 0xff, 0x00, 0x00, 0x00}, // update ra h b 
	{0x3279, &op_update,	  9,   7,   2, 0xff, 0x00, 0x00, 0x00}, // update ra h c 
	{0x3379, &op_update,	  9,   7,   3, 0xff, 0x00, 0x00, 0x00}, // update ra h d 
	{0x3479, &op_update,	  9,   7,   4, 0xff, 0x00, 0x00, 0x00}, // update ra h e 
	{0x3579, &op_update,	  9,   7,   5, 0xff, 0x00, 0x00, 0x00}, // update ra h f 
	{0x3679, &op_update,	  9,   7,   6, 0xff, 0x00, 0x00, 0x00}, // update ra h g 
	{0x3779, &op_update,	  9,   7,   7, 0xff, 0x00, 0x00, 0x00}, // update ra h h 
	{0x3879, &op_update,	  9,   7,   8, 0xff, 0x00, 0x00, 0x00}, // update ra h pc 
	{0x3979, &op_update,	  9,   7,   9, 0xff, 0x00, 0x00, 0x00}, // update ra h ra 
	{0x3a79, &op_update,	  9,   7,  10, 0xff, 0x00, 0x00, 0x00}, // update ra h sb 
	{0x3b79, &op_update,	  9,   7,  11, 0xff, 0x00, 0x00, 0x00}, // update ra h sp 
	{0x3c79, &op_update,	  9,   7,  12, 0xff, 0x00, 0x00, 0x00}, // update ra h db 
	{0x3d79, &op_update,	  9,   7,  13, 0xff, 0x00, 0x00, 0x00}, // update ra h cb 
	{0x3e79, &op_update,	  9,   7,  14, 0xff, 0x00, 0x00, 0x00}, // update ra h pi 
	{0x3f79, &op_update,	  9,   7,   8, 0xff, 0x00, 0x04, 0x00}, // update ra h <literal> 
	{0x3089, &op_update,	  9,   8,   0, 0xff, 0x00, 0x00, 0x00}, // update ra pc a 
	{0x3189, &op_update,	  9,   8,   1, 0xff, 0x00, 0x00, 0x00}, // update ra pc b 
	{0x3289, &op_update,	  9,   8,   2, 0xff, 0x00, 0x00, 0x00}, // update ra pc c 
	{0x3389, &op_update,	  9,   8,   3, 0xff, 0x00, 0x00, 0x00}, // update ra pc d 
	{0x3489, &op_update,	  9,   8,   4, 0xff, 0x00, 0x00, 0x00}, // update ra pc e 
	{0x3589, &op_update,	  9,   8,   5, 0xff, 0x00, 0x00, 0x00}, // update ra pc f 
	{0x3689, &op_update,	  9,   8,   6, 0xff, 0x00, 0x00, 0x00}, // update ra pc g 
	{0x3789, &op_update,	  9,   8,   7, 0xff, 0x00, 0x00, 0x00}, // update ra pc h 
	{0x3889, &op_update,	  9,   8,   8, 0xff, 0x00, 0x00, 0x00}, // update ra pc pc 
	{0x3989, &op_update,	  9,   8,   9, 0xff, 0x00, 0x00, 0x00}, // update ra pc ra 
	{0x3a89, &op_update,	  9,   8,  10, 0xff, 0x00, 0x00, 0x00}, // update ra pc sb 
	{0x3b89, &op_update,	  9,   8,  11, 0xff, 0x00, 0x00, 0x00}, // update ra pc sp 
	{0x3c89, &op_update,	  9,   8,  12, 0xff, 0x00, 0x00, 0x00}, // update ra pc db 
	{0x3d89, &op_update,	  9,   8,  13, 0xff, 0x00, 0x00, 0x00}, // update ra pc cb 
	{0x3e89, &op_update,	  9,   8,  14, 0xff, 0x00, 0x00, 0x00}, // update ra pc pi 
	{0x3f89, &op_update,	  9,   8,   8, 0xff, 0x00, 0x04, 0x00}, // update ra pc <literal> 
	{0x3099, &op_update,	  9,   9,   0, 0xff, 0x00, 0x00, 0x00}, // update ra ra a 
	{0x3199, &op_update,	  9,   9,   1, 0xff, 0x00, 0x00, 0x00}, // update ra ra b 
	{0x3299, &op_update,	  9,   9,   2, 0xff, 0x00, 0x00, 0x00}, // update ra ra c 
	{0x3399, &op_update,	  9,   9,   3, 0xff, 0x00, 0x00, 0x00}, // update ra ra d 
	{0x3499, &op_update,	  9,   9,   4, 0xff, 0x00, 0x00, 0x00}, // update ra ra e 
	{0x3599, &op_update,	  9,   9,   5, 0xff, 0x00, 0x00, 0x00}, // update ra ra f 
	{0x3699, &op_update,	  9,   9,   6, 0xff, 0x00, 0x00, 0x00}, // update ra ra g 
	{0x3799, &op_update,	  9,   9,   7, 0xff, 0x00, 0x00, 0x00}, // update ra ra h 
	{0x3899, &op_update,	  9,   9,   8, 0xff, 0x00, 0x00, 0x00}, // update ra ra pc 
	{0x3999, &op_update,	  9,   9,   9, 0xff, 0x00, 0x00, 0x00}, // update ra ra ra 
	{0x3a99, &op_update,	  9,   9,  10, 0xff, 0x00, 0x00, 0x00}, // update ra ra sb 
	{0x3b99, &op_update,	  9,   9,  11, 0xff, 0x00, 0x00, 0x00}, // update ra ra sp 
	{0x3c99, &op_update,	  9,   9,  12, 0xff, 0x00, 0x00, 0x00}, // update ra ra db 
	{0x3d99, &op_update,	  9,   9,  13, 0xff, 0x00, 0x00, 0x00}, // update ra ra cb 
	{0x3e99, &op_update,	  9,   9,  14, 0xff, 0x00, 0x00, 0x00}, // update ra ra pi 
	{0x3f99, &op_update,	  9,   9,   8, 0xff, 0x00, 0x04, 0x00}, // update ra ra <literal> 
	{0x30a9, &op_update,	  9,  10,   0, 0xff, 0x00, 0x00, 0x00}, // update ra sb a 
	{0x31a9, &op_update,	  9,  10,   1, 0xff, 0x00, 0x00, 0x00}, // update ra sb b 
	{0x32a9, &op_update,	  9,  10,   2, 0xff, 0x00, 0x00, 0x00}, // update ra sb c 
	{0x33a9, &op_update,	  9,  10,   3, 0xff, 0x00, 0x00, 0x00}, // update ra sb d 
	{0x34a9, &op_update,	  9,  10,   4, 0xff, 0x00, 0x00, 0x00}, // update ra sb e 
	{0x35a9, &op_update,	  9,  10,   5, 0xff, 0x00, 0x00, 0x00}, // update ra sb f 
	{0x36a9, &op_update,	  9,  10,   6, 0xff, 0x00, 0x00, 0x00}, // update ra sb g 
	{0x37a9, &op_update,	  9,  10,   7, 0xff, 0x00, 0x00, 0x00}, // update ra sb h 
	{0x38a9, &op_update,	  9,  10,   8, 0xff, 0x00, 0x00, 0x00}, // update ra sb pc 
	{0x39a9, &op_update,	  9,  10,   9, 0xff, 0x00, 0x00, 0x00}, // update ra sb ra 
	{0x3aa9, &op_update,	  9,  10,  10, 0xff, 0x00, 0x00, 0x00}, // update ra sb sb 
	{0x3ba9, &op_update,	  9,  10,  11, 0xff, 0x00, 0x00, 0x00}, // update ra sb sp 
	{0x3ca9, &op_update,	  9,  10,  12, 0xff, 0x00, 0x00, 0x00}, // update ra sb db 
	{0x3da9, &op_update,	  9,  10,  13, 0xff, 0x00, 0x00, 0x00}, // update ra sb cb 
	{0x3ea9, &op_update,	  9,  10,  14, 0xff, 0x00, 0x00, 0x00}, // update ra sb pi 
	{0x3fa9, &op_update,	  9,  10,   8, 0xff, 0x00, 0x04, 0x00}, // update ra sb <literal> 
	{0x30b9, &op_update,	  9,  11,   0, 0xff, 0x00, 0x00, 0x00}, // update ra sp a 
	{0x31b9, &op_update,	  9,  11,   1, 0xff, 0x00, 0x00, 0x00}, // update ra sp b 
	{0x32b9, &op_update,	  9,  11,   2, 0xff, 0x00, 0x00, 0x00}, // update ra sp c 
	{0x33b9, &op_update,	  9,  11,   3, 0xff, 0x00, 0x00, 0x00}, // update ra sp d 
	{0x34b9, &op_update,	  9,  11,   4, 0xff, 0x00, 0x00, 0x00}, // update ra sp e 
	{0x35b9, &op_update,	  9,  11,   5, 0xff, 0x00, 0x00, 0x00}, // update ra sp f 
	{0x36b9, &op_update,	  9,  11,   6, 0xff, 0x00, 0x00, 0x00}, // update ra sp g 
	{0x37b9, &op_update,	  9,  11,   7, 0xff, 0x00, 0x00, 0x00}, // update ra sp h 
	{0x38b9, &op_update,	  9,  11,   8, 0xff, 0x00, 0x00, 0x00}, // update ra sp pc 
	{0x39b9, &op_update,	  9,  11,   9, 0xff, 0x00, 0x00, 0x00}, // update ra sp ra 
	{0x3ab9, &op_update,	  9,  11,  10, 0xff, 0x00, 0x00, 0x00}, // update ra sp sb 
	{0x3bb9, &op_update,	  9,  11,  11, 0xff, 0x00, 0x00, 0x00}, // update ra sp sp 
	{0x3cb9, &op_update,	  9,  11,  12, 0xff, 0x00, 0x00, 0x00}, // update ra sp db 
	{0x3db9, &op_update,	  9,  11,  13, 0xff, 0x00, 0x00, 0x00}, // update ra sp cb 
	{0x3eb9, &op_update,	  9,  11,  14, 0xff, 0x00, 0x00, 0x00}, // update ra sp pi 
	{0x3fb9, &op_update,	  9,  11,   8, 0xff, 0x00, 0x04, 0x00}, // update ra sp <literal> 
	{0x30c9, &op_update,	  9,  12,   0, 0xff, 0x00, 0x00, 0x00}, // update ra db a 
	{0x31c9, &op_update,	  9,  12,   1, 0xff, 0x00, 0x00, 0x00}, // update ra db b 
	{0x32c9, &op_update,	  9,  12,   2, 0xff, 0x00, 0x00, 0x00}, // update ra db c 
	{0x33c9, &op_update,	  9,  12,   3, 0xff, 0x00, 0x00, 0x00}, // update ra db d 
	{0x34c9, &op_update,	  9,  12,   4, 0xff, 0x00, 0x00, 0x00}, // update ra db e 
	{0x35c9, &op_update,	  9,  12,   5, 0xff, 0x00, 0x00, 0x00}, // update ra db f 
	{0x36c9, &op_update,	  9,  12,   6, 0xff, 0x00, 0x00, 0x00}, // update ra db g 
	{0x37c9, &op_update,	  9,  12,   7, 0xff, 0x00, 0x00, 0x00}, // update ra db h 
	{0x38c9, &op_update,	  9,  12,   8, 0xff, 0x00, 0x00, 0x00}, // update ra db pc 
	{0x39c9, &op_update,	  9,  12,   9, 0xff, 0x00, 0x00, 0x00}, // update ra db ra 
	{0x3ac9, &op_update,	  9,  12,  10, 0xff, 0x00, 0x00, 0x00}, // update ra db sb 
	{0x3bc9, &op_update,	  9,  12,  11, 0xff, 0x00, 0x00, 0x00}, // update ra db sp 
	{0x3cc9, &op_update,	  9,  12,  12, 0xff, 0x00, 0x00, 0x00}, // update ra db db 
	{0x3dc9, &op_update,	  9,  12,  13, 0xff, 0x00, 0x00, 0x00}, // update ra db cb 
	{0x3ec9, &op_update,	  9,  12,  14, 0xff, 0x00, 0x00, 0x00}, // update ra db pi 
	{0x3fc9, &op_update,	  9,  12,   8, 0xff, 0x00, 0x04, 0x00}, // update ra db <literal> 
	{0x30d9, &op_update,	  9,  13,   0, 0xff, 0x00, 0x00, 0x00}, // update ra cb a 
	{0x31d9, &op_update,	  9,  13,   1, 0xff, 0x00, 0x00, 0x00}, // update ra cb b 
	{0x32d9, &op_update,	  9,  13,   2, 0xff, 0x00, 0x00, 0x00}, // update ra cb c 
	{0x33d9, &op_update,	  9,  13,   3, 0xff, 0x00, 0x00, 0x00}, // update ra cb d 
	{0x34d9, &op_update,	  9,  13,   4, 0xff, 0x00, 0x00, 0x00}, // update ra cb e 
	{0x35d9, &op_update,	  9,  13,   5, 0xff, 0x00, 0x00, 0x00}, // update ra cb f 
	{0x36d9, &op_update,	  9,  13,   6, 0xff, 0x00, 0x00, 0x00}, // update ra cb g 
	{0x37d9, &op_update,	  9,  13,   7, 0xff, 0x00, 0x00, 0x00}, // update ra cb h 
	{0x38d9, &op_update,	  9,  13,   8, 0xff, 0x00, 0x00, 0x00}, // update ra cb pc 
	{0x39d9, &op_update,	  9,  13,   9, 0xff, 0x00, 0x00, 0x00}, // update ra cb ra 
	{0x3ad9, &op_update,	  9,  13,  10, 0xff, 0x00, 0x00, 0x00}, // update ra cb sb 
	{0x3bd9, &op_update,	  9,  13,  11, 0xff, 0x00, 0x00, 0x00}, // update ra cb sp 
	{0x3cd9, &op_update,	  9,  13,  12, 0xff, 0x00, 0x00, 0x00}, // update ra cb db 
	{0x3dd9, &op_update,	  9,  13,  13, 0xff, 0x00, 0x00, 0x00}, // update ra cb cb 
	{0x3ed9, &op_update,	  9,  13,  14, 0xff, 0x00, 0x00, 0x00}, // update ra cb pi 
	{0x3fd9, &op_update,	  9,  13,   8, 0xff, 0x00, 0x04, 0x00}, // update ra cb <literal> 
	{0x30e9, &op_update,	  9,  14,   0, 0xff, 0x00, 0x00, 0x00}, // update ra pi a 
	{0x31e9, &op_update,	  9,  14,   1, 0xff, 0x00, 0x00, 0x00}, // update ra pi b 
	{0x32e9, &op_update,	  9,  14,   2, 0xff, 0x00, 0x00, 0x00}, // update ra pi c 
	{0x33e9, &op_update,	  9,  14,   3, 0xff, 0x00, 0x00, 0x00}, // update ra pi d 
	{0x34e9, &op_update,	  9,  14,   4, 0xff, 0x00, 0x00, 0x00}, // update ra pi e 
	{0x35e9, &op_update,	  9,  14,   5, 0xff, 0x00, 0x00, 0x00}, // update ra pi f 
	{0x36e9, &op_update,	  9,  14,   6, 0xff, 0x00, 0x00, 0x00}, // update ra pi g 
	{0x37e9, &op_update,	  9,  14,   7, 0xff, 0x00, 0x00, 0x00}, // update ra pi h 
	{0x38e9, &op_update,	  9,  14,   8, 0xff, 0x00, 0x00, 0x00}, // update ra pi pc 
	{0x39e9, &op_update,	  9,  14,   9, 0xff, 0x00, 0x00, 0x00}, // update ra pi ra 
	{0x3ae9, &op_update,	  9,  14,  10, 0xff, 0x00, 0x00, 0x00}, // update ra pi sb 
	{0x3be9, &op_update,	  9,  14,  11, 0xff, 0x00, 0x00, 0x00}, // update ra pi sp 
	{0x3ce9, &op_update,	  9,  14,  12, 0xff, 0x00, 0x00, 0x00}, // update ra pi db 
	{0x3de9, &op_update,	  9,  14,  13, 0xff, 0x00, 0x00, 0x00}, // update ra pi cb 
	{0x3ee9, &op_update,	  9,  14,  14, 0xff, 0x00, 0x00, 0x00}, // update ra pi pi 
	{0x3fe9, &op_update,	  9,  14,   8, 0xff, 0x00, 0x04, 0x00}, // update ra pi <literal> 
	{0x30f9, &op_update,	  9,  15,   0, 0xff, 0x00, 0x00, 0x00}, // update ra status a 
	{0x31f9, &op_update,	  9,  15,   1, 0xff, 0x00, 0x00, 0x00}, // update ra status b 
	{0x32f9, &op_update,	  9,  15,   2, 0xff, 0x00, 0x00, 0x00}, // update ra status c 
	{0x33f9, &op_update,	  9,  15,   3, 0xff, 0x00, 0x00, 0x00}, // update ra status d 
	{0x34f9, &op_update,	  9,  15,   4, 0xff, 0x00, 0x00, 0x00}, // update ra status e 
	{0x35f9, &op_update,	  9,  15,   5, 0xff, 0x00, 0x00, 0x00}, // update ra status f 
	{0x36f9, &op_update,	  9,  15,   6, 0xff, 0x00, 0x00, 0x00}, // update ra status g 
	{0x37f9, &op_update,	  9,  15,   7, 0xff, 0x00, 0x00, 0x00}, // update ra status h 
	{0x38f9, &op_update,	  9,  15,   8, 0xff, 0x00, 0x00, 0x00}, // update ra status pc 
	{0x39f9, &op_update,	  9,  15,   9, 0xff, 0x00, 0x00, 0x00}, // update ra status ra 
	{0x3af9, &op_update,	  9,  15,  10, 0xff, 0x00, 0x00, 0x00}, // update ra status sb 
	{0x3bf9, &op_update,	  9,  15,  11, 0xff, 0x00, 0x00, 0x00}, // update ra status sp 
	{0x3cf9, &op_update,	  9,  15,  12, 0xff, 0x00, 0x00, 0x00}, // update ra status db 
	{0x3df9, &op_update,	  9,  15,  13, 0xff, 0x00, 0x00, 0x00}, // update ra status cb 
	{0x3ef9, &op_update,	  9,  15,  14, 0xff, 0x00, 0x00, 0x00}, // update ra status pi 
	{0x3ff9, &op_update,	  9,  15,   8, 0xff, 0x00, 0x04, 0x00}, // update ra status <literal> 
	{0x300a, &op_update,	 10,   0,   0, 0xff, 0x00, 0x00, 0x00}, // update sb a a 
	{0x310a, &op_update,	 10,   0,   1, 0xff, 0x00, 0x00, 0x00}, // update sb a b 
	{0x320a, &op_update,	 10,   0,   2, 0xff, 0x00, 0x00, 0x00}, // update sb a c 
	{0x330a, &op_update,	 10,   0,   3, 0xff, 0x00, 0x00, 0x00}, // update sb a d 
	{0x340a, &op_update,	 10,   0,   4, 0xff, 0x00, 0x00, 0x00}, // update sb a e 
	{0x350a, &op_update,	 10,   0,   5, 0xff, 0x00, 0x00, 0x00}, // update sb a f 
	{0x360a, &op_update,	 10,   0,   6, 0xff, 0x00, 0x00, 0x00}, // update sb a g 
	{0x370a, &op_update,	 10,   0,   7, 0xff, 0x00, 0x00, 0x00}, // update sb a h 
	{0x380a, &op_update,	 10,   0,   8, 0xff, 0x00, 0x00, 0x00}, // update sb a pc 
	{0x390a, &op_update,	 10,   0,   9, 0xff, 0x00, 0x00, 0x00}, // update sb a ra 
	{0x3a0a, &op_update,	 10,   0,  10, 0xff, 0x00, 0x00, 0x00}, // update sb a sb 
	{0x3b0a, &op_update,	 10,   0,  11, 0xff, 0x00, 0x00, 0x00}, // update sb a sp 
	{0x3c0a, &op_update,	 10,   0,  12, 0xff, 0x00, 0x00, 0x00}, // update sb a db 
	{0x3d0a, &op_update,	 10,   0,  13, 0xff, 0x00, 0x00, 0x00}, // update sb a cb 
	{0x3e0a, &op_update,	 10,   0,  14, 0xff, 0x00, 0x00, 0x00}, // update sb a pi 
	{0x3f0a, &op_update,	 10,   0,   8, 0xff, 0x00, 0x04, 0x00}, // update sb a <literal> 
	{0x301a, &op_update,	 10,   1,   0, 0xff, 0x00, 0x00, 0x00}, // update sb b a 
	{0x311a, &op_update,	 10,   1,   1, 0xff, 0x00, 0x00, 0x00}, // update sb b b 
	{0x321a, &op_update,	 10,   1,   2, 0xff, 0x00, 0x00, 0x00}, // update sb b c 
	{0x331a, &op_update,	 10,   1,   3, 0xff, 0x00, 0x00, 0x00}, // update sb b d 
	{0x341a, &op_update,	 10,   1,   4, 0xff, 0x00, 0x00, 0x00}, // update sb b e 
	{0x351a, &op_update,	 10,   1,   5, 0xff, 0x00, 0x00, 0x00}, // update sb b f 
	{0x361a, &op_update,	 10,   1,   6, 0xff, 0x00, 0x00, 0x00}, // update sb b g 
	{0x371a, &op_update,	 10,   1,   7, 0xff, 0x00, 0x00, 0x00}, // update sb b h 
	{0x381a, &op_update,	 10,   1,   8, 0xff, 0x00, 0x00, 0x00}, // update sb b pc 
	{0x391a, &op_update,	 10,   1,   9, 0xff, 0x00, 0x00, 0x00}, // update sb b ra 
	{0x3a1a, &op_update,	 10,   1,  10, 0xff, 0x00, 0x00, 0x00}, // update sb b sb 
	{0x3b1a, &op_update,	 10,   1,  11, 0xff, 0x00, 0x00, 0x00}, // update sb b sp 
	{0x3c1a, &op_update,	 10,   1,  12, 0xff, 0x00, 0x00, 0x00}, // update sb b db 
	{0x3d1a, &op_update,	 10,   1,  13, 0xff, 0x00, 0x00, 0x00}, // update sb b cb 
	{0x3e1a, &op_update,	 10,   1,  14, 0xff, 0x00, 0x00, 0x00}, // update sb b pi 
	{0x3f1a, &op_update,	 10,   1,   8, 0xff, 0x00, 0x04, 0x00}, // update sb b <literal> 
	{0x302a, &op_update,	 10,   2,   0, 0xff, 0x00, 0x00, 0x00}, // update sb c a 
	{0x312a, &op_update,	 10,   2,   1, 0xff, 0x00, 0x00, 0x00}, // update sb c b 
	{0x322a, &op_update,	 10,   2,   2, 0xff, 0x00, 0x00, 0x00}, // update sb c c 
	{0x332a, &op_update,	 10,   2,   3, 0xff, 0x00, 0x00, 0x00}, // update sb c d 
	{0x342a, &op_update,	 10,   2,   4, 0xff, 0x00, 0x00, 0x00}, // update sb c e 
	{0x352a, &op_update,	 10,   2,   5, 0xff, 0x00, 0x00, 0x00}, // update sb c f 
	{0x362a, &op_update,	 10,   2,   6, 0xff, 0x00, 0x00, 0x00}, // update sb c g 
	{0x372a, &op_update,	 10,   2,   7, 0xff, 0x00, 0x00, 0x00}, // update sb c h 
	{0x382a, &op_update,	 10,   2,   8, 0xff, 0x00, 0x00, 0x00}, // update sb c pc 
	{0x392a, &op_update,	 10,   2,   9, 0xff, 0x00, 0x00, 0x00}, // update sb c ra 
	{0x3a2a, &op_update,	 10,   2,  10, 0xff, 0x00, 0x00, 0x00}, // update sb c sb 
	{0x3b2a, &op_update,	 10,   2,  11, 0xff, 0x00, 0x00, 0x00}, // update sb c sp 
	{0x3c2a, &op_update,	 10,   2,  12, 0xff, 0x00, 0x00, 0x00}, // update sb c db 
	{0x3d2a, &op_update,	 10,   2,  13, 0xff, 0x00, 0x00, 0x00}, // update sb c cb 
	{0x3e2a, &op_update,	 10,   2,  14, 0xff, 0x00, 0x00, 0x00}, // update sb c pi 
	{0x3f2a, &op_update,	 10,   2,   8, 0xff, 0x00, 0x04, 0x00}, // update sb c <literal> 
	{0x303a, &op_update,	 10,   3,   0, 0xff, 0x00, 0x00, 0x00}, // update sb d a 
	{0x313a, &op_update,	 10,   3,   1, 0xff, 0x00, 0x00, 0x00}, // update sb d b 
	{0x323a, &op_update,	 10,   3,   2, 0xff, 0x00, 0x00, 0x00}, // update sb d c 
	{0x333a, &op_update,	 10,   3,   3, 0xff, 0x00, 0x00, 0x00}, // update sb d d 
	{0x343a, &op_update,	 10,   3,   4, 0xff, 0x00, 0x00, 0x00}, // update sb d e 
	{0x353a, &op_update,	 10,   3,   5, 0xff, 0x00, 0x00, 0x00}, // update sb d f 
	{0x363a, &op_update,	 10,   3,   6, 0xff, 0x00, 0x00, 0x00}, // update sb d g 
	{0x373a, &op_update,	 10,   3,   7, 0xff, 0x00, 0x00, 0x00}, // update sb d h 
	{0x383a, &op_update,	 10,   3,   8, 0xff, 0x00, 0x00, 0x00}, // update sb d pc 
	{0x393a, &op_update,	 10,   3,   9, 0xff, 0x00, 0x00, 0x00}, // update sb d ra 
	{0x3a3a, &op_update,	 10,   3,  10, 0xff, 0x00, 0x00, 0x00}, // update sb d sb 
	{0x3b3a, &op_update,	 10,   3,  11, 0xff, 0x00, 0x00, 0x00}, // update sb d sp 
	{0x3c3a, &op_update,	 10,   3,  12, 0xff, 0x00, 0x00, 0x00}, // update sb d db 
	{0x3d3a, &op_update,	 10,   3,  13, 0xff, 0x00, 0x00, 0x00}, // update sb d cb 
	{0x3e3a, &op_update,	 10,   3,  14, 0xff, 0x00, 0x00, 0x00}, // update sb d pi 
	{0x3f3a, &op_update,	 10,   3,   8, 0xff, 0x00, 0x04, 0x00}, // update sb d <literal> 
	{0x304a, &op_update,	 10,   4,   0, 0xff, 0x00, 0x00, 0x00}, // update sb e a 
	{0x314a, &op_update,	 10,   4,   1, 0xff, 0x00, 0x00, 0x00}, // update sb e b 
	{0x324a, &op_update,	 10,   4,   2, 0xff, 0x00, 0x00, 0x00}, // update sb e c 
	{0x334a, &op_update,	 10,   4,   3, 0xff, 0x00, 0x00, 0x00}, // update sb e d 
	{0x344a, &op_update,	 10,   4,   4, 0xff, 0x00, 0x00, 0x00}, // update sb e e 
	{0x354a, &op_update,	 10,   4,   5, 0xff, 0x00, 0x00, 0x00}, // update sb e f 
	{0x364a, &op_update,	 10,   4,   6, 0xff, 0x00, 0x00, 0x00}, // update sb e g 
	{0x374a, &op_update,	 10,   4,   7, 0xff, 0x00, 0x00, 0x00}, // update sb e h 
	{0x384a, &op_update,	 10,   4,   8, 0xff, 0x00, 0x00, 0x00}, // update sb e pc 
	{0x394a, &op_update,	 10,   4,   9, 0xff, 0x00, 0x00, 0x00}, // update sb e ra 
	{0x3a4a, &op_update,	 10,   4,  10, 0xff, 0x00, 0x00, 0x00}, // update sb e sb 
	{0x3b4a, &op_update,	 10,   4,  11, 0xff, 0x00, 0x00, 0x00}, // update sb e sp 
	{0x3c4a, &op_update,	 10,   4,  12, 0xff, 0x00, 0x00, 0x00}, // update sb e db 
	{0x3d4a, &op_update,	 10,   4,  13, 0xff, 0x00, 0x00, 0x00}, // update sb e cb 
	{0x3e4a, &op_update,	 10,   4,  14, 0xff, 0x00, 0x00, 0x00}, // update sb e pi 
	{0x3f4a, &op_update,	 10,   4,   8, 0xff, 0x00, 0x04, 0x00}, // update sb e <literal> 
	{0x305a, &op_update,	 10,   5,   0, 0xff, 0x00, 0x00, 0x00}, // update sb f a 
	{0x315a, &op_update,	 10,   5,   1, 0xff, 0x00, 0x00, 0x00}, // update sb f b 
	{0x325a, &op_update,	 10,   5,   2, 0xff, 0x00, 0x00, 0x00}, // update sb f c 
	{0x335a, &op_update,	 10,   5,   3, 0xff, 0x00, 0x00, 0x00}, // update sb f d 
	{0x345a, &op_update,	 10,   5,   4, 0xff, 0x00, 0x00, 0x00}, // update sb f e 
	{0x355a, &op_update,	 10,   5,   5, 0xff, 0x00, 0x00, 0x00}, // update sb f f 
	{0x365a, &op_update,	 10,   5,   6, 0xff, 0x00, 0x00, 0x00}, // update sb f g 
	{0x375a, &op_update,	 10,   5,   7, 0xff, 0x00, 0x00, 0x00}, // update sb f h 
	{0x385a, &op_update,	 10,   5,   8, 0xff, 0x00, 0x00, 0x00}, // update sb f pc 
	{0x395a, &op_update,	 10,   5,   9, 0xff, 0x00, 0x00, 0x00}, // update sb f ra 
	{0x3a5a, &op_update,	 10,   5,  10, 0xff, 0x00, 0x00, 0x00}, // update sb f sb 
	{0x3b5a, &op_update,	 10,   5,  11, 0xff, 0x00, 0x00, 0x00}, // update sb f sp 
	{0x3c5a, &op_update,	 10,   5,  12, 0xff, 0x00, 0x00, 0x00}, // update sb f db 
	{0x3d5a, &op_update,	 10,   5,  13, 0xff, 0x00, 0x00, 0x00}, // update sb f cb 
	{0x3e5a, &op_update,	 10,   5,  14, 0xff, 0x00, 0x00, 0x00}, // update sb f pi 
	{0x3f5a, &op_update,	 10,   5,   8, 0xff, 0x00, 0x04, 0x00}, // update sb f <literal> 
	{0x306a, &op_update,	 10,   6,   0, 0xff, 0x00, 0x00, 0x00}, // update sb g a 
	{0x316a, &op_update,	 10,   6,   1, 0xff, 0x00, 0x00, 0x00}, // update sb g b 
	{0x326a, &op_update,	 10,   6,   2, 0xff, 0x00, 0x00, 0x00}, // update sb g c 
	{0x336a, &op_update,	 10,   6,   3, 0xff, 0x00, 0x00, 0x00}, // update sb g d 
	{0x346a, &op_update,	 10,   6,   4, 0xff, 0x00, 0x00, 0x00}, // update sb g e 
	{0x356a, &op_update,	 10,   6,   5, 0xff, 0x00, 0x00, 0x00}, // update sb g f 
	{0x366a, &op_update,	 10,   6,   6, 0xff, 0x00, 0x00, 0x00}, // update sb g g 
	{0x376a, &op_update,	 10,   6,   7, 0xff, 0x00, 0x00, 0x00}, // update sb g h 
	{0x386a, &op_update,	 10,   6,   8, 0xff, 0x00, 0x00, 0x00}, // update sb g pc 
	{0x396a, &op_update,	 10,   6,   9, 0xff, 0x00, 0x00, 0x00}, // update sb g ra 
	{0x3a6a, &op_update,	 10,   6,  10, 0xff, 0x00, 0x00, 0x00}, // update sb g sb 
	{0x3b6a, &op_update,	 10,   6,  11, 0xff, 0x00, 0x00, 0x00}, // update sb g sp 
	{0x3c6a, &op_update,	 10,   6,  12, 0xff, 0x00, 0x00, 0x00}, // update sb g db 
	{0x3d6a, &op_update,	 10,   6,  13, 0xff, 0x00, 0x00, 0x00}, // update sb g cb 
	{0x3e6a, &op_update,	 10,   6,  14, 0xff, 0x00, 0x00, 0x00}, // update sb g pi 
	{0x3f6a, &op_update,	 10,   6,   8, 0xff, 0x00, 0x04, 0x00}, // update sb g <literal> 
	{0x307a, &op_update,	 10,   7,   0, 0xff, 0x00, 0x00, 0x00}, // update sb h a 
	{0x317a, &op_update,	 10,   7,   1, 0xff, 0x00, 0x00, 0x00}, // update sb h b 
	{0x327a, &op_update,	 10,   7,   2, 0xff, 0x00, 0x00, 0x00}, // update sb h c 
	{0x337a, &op_update,	 10,   7,   3, 0xff, 0x00, 0x00, 0x00}, // update sb h d 
	{0x347a, &op_update,	 10,   7,   4, 0xff, 0x00, 0x00, 0x00}, // update sb h e 
	{0x357a, &op_update,	 10,   7,   5, 0xff, 0x00, 0x00, 0x00}, // update sb h f 
	{0x367a, &op_update,	 10,   7,   6, 0xff, 0x00, 0x00, 0x00}, // update sb h g 
	{0x377a, &op_update,	 10,   7,   7, 0xff, 0x00, 0x00, 0x00}, // update sb h h 
	{0x387a, &op_update,	 10,   7,   8, 0xff, 0x00, 0x00, 0x00}, // update sb h pc 
	{0x397a, &op_update,	 10,   7,   9, 0xff, 0x00, 0x00, 0x00}, // update sb h ra 
	{0x3a7a, &op_update,	 10,   7,  10, 0xff, 0x00, 0x00, 0x00}, // update sb h sb 
	{0x3b7a, &op_update,	 10,   7,  11, 0xff, 0x00, 0x00, 0x00}, // update sb h sp 
	{0x3c7a, &op_update,	 10,   7,  12, 0xff, 0x00, 0x00, 0x00}, // update sb h db 
	{0x3d7a, &op_update,	 10,   7,  13, 0xff, 0x00, 0x00, 0x00}, // update sb h cb 
	{0x3e7a, &op_update,	 10,   7,  14, 0xff, 0x00, 0x00, 0x00}, // update sb h pi 
	{0x3f7a, &op_update,	 10,   7,   8, 0xff, 0x00, 0x04, 0x00}, // update sb h <literal> 
	{0x308a, &op_update,	 10,   8,   0, 0xff, 0x00, 0x00, 0x00}, // update sb pc a 
	{0x318a, &op_update,	 10,   8,   1, 0xff, 0x00, 0x00, 0x00}, // update sb pc b 
	{0x328a, &op_update,	 10,   8,   2, 0xff, 0x00, 0x00, 0x00}, // update sb pc c 
	{0x338a, &op_update,	 10,   8,   3, 0xff, 0x00, 0x00, 0x00}, // update sb pc d 
	{0x348a, &op_update,	 10,   8,   4, 0xff, 0x00, 0x00, 0x00}, // update sb pc e 
	{0x358a, &op_update,	 10,   8,   5, 0xff, 0x00, 0x00, 0x00}, // update sb pc f 
	{0x368a, &op_update,	 10,   8,   6, 0xff, 0x00, 0x00, 0x00}, // update sb pc g 
	{0x378a, &op_update,	 10,   8,   7, 0xff, 0x00, 0x00, 0x00}, // update sb pc h 
	{0x388a, &op_update,	 10,   8,   8, 0xff, 0x00, 0x00, 0x00}, // update sb pc pc 
	{0x398a, &op_update,	 10,   8,   9, 0xff, 0x00, 0x00, 0x00}, // update sb pc ra 
	{0x3a8a, &op_update,	 10,   8,  10, 0xff, 0x00, 0x00, 0x00}, // update sb pc sb 
	{0x3b8a, &op_update,	 10,   8,  11, 0xff, 0x00, 0x00, 0x00}, // update sb pc sp 
	{0x3c8a, &op_update,	 10,   8,  12, 0xff, 0x00, 0x00, 0x00}, // update sb pc db 
	{0x3d8a, &op_update,	 10,   8,  13, 0xff, 0x00, 0x00, 0x00}, // update sb pc cb 
	{0x3e8a, &op_update,	 10,   8,  14, 0xff, 0x00, 0x00, 0x00}, // update sb pc pi 
	{0x3f8a, &op_update,	 10,   8,   8, 0xff, 0x00, 0x04, 0x00}, // update sb pc <literal> 
	{0x309a, &op_update,	 10,   9,   0, 0xff, 0x00, 0x00, 0x00}, // update sb ra a 
	{0x319a, &op_update,	 10,   9,   1, 0xff, 0x00, 0x00, 0x00}, // update sb ra b 
	{0x329a, &op_update,	 10,   9,   2, 0xff, 0x00, 0x00, 0x00}, // update sb ra c 
	{0x339a, &op_update,	 10,   9,   3, 0xff, 0x00, 0x00, 0x00}, // update sb ra d 
	{0x349a, &op_update,	 10,   9,   4, 0xff, 0x00, 0x00, 0x00}, // update sb ra e 
	{0x359a, &op_update,	 10,   9,   5, 0xff, 0x00, 0x00, 0x00}, // update sb ra f 
	{0x369a, &op_update,	 10,   9,   6, 0xff, 0x00, 0x00, 0x00}, // update sb ra g 
	{0x379a, &op_update,	 10,   9,   7, 0xff, 0x00, 0x00, 0x00}, // update sb ra h 
	{0x389a, &op_update,	 10,   9,   8, 0xff, 0x00, 0x00, 0x00}, // update sb ra pc 
	{0x399a, &op_update,	 10,   9,   9, 0xff, 0x00, 0x00, 0x00}, // update sb ra ra 
	{0x3a9a, &op_update,	 10,   9,  10, 0xff, 0x00, 0x00, 0x00}, // update sb ra sb 
	{0x3b9a, &op_update,	 10,   9,  11, 0xff, 0x00, 0x00, 0x00}, // update sb ra sp 
	{0x3c9a, &op_update,	 10,   9,  12, 0xff, 0x00, 0x00, 0x00}, // update sb ra db 
	{0x3d9a, &op_update,	 10,   9,  13, 0xff, 0x00, 0x00, 0x00}, // update sb ra cb 
	{0x3e9a, &op_update,	 10,   9,  14, 0xff, 0x00, 0x00, 0x00}, // update sb ra pi 
	{0x3f9a, &op_update,	 10,   9,   8, 0xff, 0x00, 0x04, 0x00}, // update sb ra <literal> 
	{0x30aa, &op_update,	 10,  10,   0, 0xff, 0x00, 0x00, 0x00}, // update sb sb a 
	{0x31aa, &op_update,	 10,  10,   1, 0xff, 0x00, 0x00, 0x00}, // update sb sb b 
	{0x32aa, &op_update,	 10,  10,   2, 0xff, 0x00, 0x00, 0x00}, // update sb sb c 
	{0x33aa, &op_update,	 10,  10,   3, 0xff, 0x00, 0x00, 0x00}, // update sb sb d 
	{0x34aa, &op_update,	 10,  10,   4, 0xff, 0x00, 0x00, 0x00}, // update sb sb e 
	{0x35aa, &op_update,	 10,  10,   5, 0xff, 0x00, 0x00, 0x00}, // update sb sb f 
	{0x36aa, &op_update,	 10,  10,   6, 0xff, 0x00, 0x00, 0x00}, // update sb sb g 
	{0x37aa, &op_update,	 10,  10,   7, 0xff, 0x00, 0x00, 0x00}, // update sb sb h 
	{0x38aa, &op_update,	 10,  10,   8, 0xff, 0x00, 0x00, 0x00}, // update sb sb pc 
	{0x39aa, &op_update,	 10,  10,   9, 0xff, 0x00, 0x00, 0x00}, // update sb sb ra 
	{0x3aaa, &op_update,	 10,  10,  10, 0xff, 0x00, 0x00, 0x00}, // update sb sb sb 
	{0x3baa, &op_update,	 10,  10,  11, 0xff, 0x00, 0x00, 0x00}, // update sb sb sp 
	{0x3caa, &op_update,	 10,  10,  12, 0xff, 0x00, 0x00, 0x00}, // update sb sb db 
	{0x3daa, &op_update,	 10,  10,  13, 0xff, 0x00, 0x00, 0x00}, // update sb sb cb 
	{0x3eaa, &op_update,	 10,  10,  14, 0xff, 0x00, 0x00, 0x00}, // update sb sb pi 
	{0x3faa, &op_update,	 10,  10,   8, 0xff, 0x00, 0x04, 0x00}, // update sb sb <literal> 
	{0x30ba, &op_update,	 10,  11,   0, 0xff, 0x00, 0x00, 0x00}, // update sb sp a 
	{0x31ba, &op_update,	 10,  11,   1, 0xff, 0x00, 0x00, 0x00}, // update sb sp b 
	{0x32ba, &op_update,	 10,  11,   2, 0xff, 0x00, 0x00, 0x00}, // update sb sp c 
	{0x33ba, &op_update,	 10,  11,   3, 0xff, 0x00, 0x00, 0x00}, // update sb sp d 
	{0x34ba, &op_update,	 10,  11,   4, 0xff, 0x00, 0x00, 0x00}, // update sb sp e 
	{0x35ba, &op_update,	 10,  11,   5, 0xff, 0x00, 0x00, 0x00}, // update sb sp f 
	{0x36ba, &op_update,	 10,  11,   6, 0xff, 0x00, 0x00, 0x00}, // update sb sp g 
	{0x37ba, &op_update,	 10,  11,   7, 0xff, 0x00, 0x00, 0x00}, // update sb sp h 
	{0x38ba, &op_update,	 10,  11,   8, 0xff, 0x00, 0x00, 0x00}, // update sb sp pc 
	{0x39ba, &op_update,	 10,  11,   9, 0xff, 0x00, 0x00, 0x00}, // update sb sp ra 
	{0x3aba, &op_update,	 10,  11,  10, 0xff, 0x00, 0x00, 0x00}, // update sb sp sb 
	{0x3bba, &op_update,	 10,  11,  11, 0xff, 0x00, 0x00, 0x00}, // update sb sp sp 
	{0x3cba, &op_update,	 10,  11,  12, 0xff, 0x00, 0x00, 0x00}, // update sb sp db 
	{0x3dba, &op_update,	 10,  11,  13, 0xff, 0x00, 0x00, 0x00}, // update sb sp cb 
	{0x3eba, &op_update,	 10,  11,  14, 0xff, 0x00, 0x00, 0x00}, // update sb sp pi 
	{0x3fba, &op_update,	 10,  11,   8, 0xff, 0x00, 0x04, 0x00}, // update sb sp <literal> 
	{0x30ca, &op_update,	 10,  12,   0, 0xff, 0x00, 0x00, 0x00}, // update sb db a 
	{0x31ca, &op_update,	 10,  12,   1, 0xff, 0x00, 0x00, 0x00}, // update sb db b 
	{0x32ca, &op_update,	 10,  12,   2, 0xff, 0x00, 0x00, 0x00}, // update sb db c 
	{0x33ca, &op_update,	 10,  12,   3, 0xff, 0x00, 0x00, 0x00}, // update sb db d 
	{0x34ca, &op_update,	 10,  12,   4, 0xff, 0x00, 0x00, 0x00}, // update sb db e 
	{0x35ca, &op_update,	 10,  12,   5, 0xff, 0x00, 0x00, 0x00}, // update sb db f 
	{0x36ca, &op_update,	 10,  12,   6, 0xff, 0x00, 0x00, 0x00}, // update sb db g 
	{0x37ca, &op_update,	 10,  12,   7, 0xff, 0x00, 0x00, 0x00}, // update sb db h 
	{0x38ca, &op_update,	 10,  12,   8, 0xff, 0x00, 0x00, 0x00}, // update sb db pc 
	{0x39ca, &op_update,	 10,  12,   9, 0xff, 0x00, 0x00, 0x00}, // update sb db ra 
	{0x3aca, &op_update,	 10,  12,  10, 0xff, 0x00, 0x00, 0x00}, // update sb db sb 
	{0x3bca, &op_update,	 10,  12,  11, 0xff, 0x00, 0x00, 0x00}, // update sb db sp 
	{0x3cca, &op_update,	 10,  12,  12, 0xff, 0x00, 0x00, 0x00}, // update sb db db 
	{0x3dca, &op_update,	 10,  12,  13, 0xff, 0x00, 0x00, 0x00}, // update sb db cb 
	{0x3eca, &op_update,	 10,  12,  14, 0xff, 0x00, 0x00, 0x00}, // update sb db pi 
	{0x3fca, &op_update,	 10,  12,   8, 0xff, 0x00, 0x04, 0x00}, // update sb db <literal> 
	{0x30da, &op_update,	 10,  13,   0, 0xff, 0x00, 0x00, 0x00}, // update sb cb a 
	{0x31da, &op_update,	 10,  13,   1, 0xff, 0x00, 0x00, 0x00}, // update sb cb b 
	{0x32da, &op_update,	 10,  13,   2, 0xff, 0x00, 0x00, 0x00}, // update sb cb c 
	{0x33da, &op_update,	 10,  13,   3, 0xff, 0x00, 0x00, 0x00}, // update sb cb d 
	{0x34da, &op_update,	 10,  13,   4, 0xff, 0x00, 0x00, 0x00}, // update sb cb e 
	{0x35da, &op_update,	 10,  13,   5, 0xff, 0x00, 0x00, 0x00}, // update sb cb f 
	{0x36da, &op_update,	 10,  13,   6, 0xff, 0x00, 0x00, 0x00}, // update sb cb g 
	{0x37da, &op_update,	 10,  13,   7, 0xff, 0x00, 0x00, 0x00}, // update sb cb h 
	{0x38da, &op_update,	 10,  13,   8, 0xff, 0x00, 0x00, 0x00}, // update sb cb pc 
	{0x39da, &op_update,	 10,  13,   9, 0xff, 0x00, 0x00, 0x00}, // update sb cb ra 
	{0x3ada, &op_update,	 10,  13,  10, 0xff, 0x00, 0x00, 0x00}, // update sb cb sb 
	{0x3bda, &op_update,	 10,  13,  11, 0xff, 0x00, 0x00, 0x00}, // update sb cb sp 
	{0x3cda, &op_update,	 10,  13,  12, 0xff, 0x00, 0x00, 0x00}, // update sb cb db 
	{0x3dda, &op_update,	 10,  13,  13, 0xff, 0x00, 0x00, 0x00}, // update sb cb cb 
	{0x3eda, &op_update,	 10,  13,  14, 0xff, 0x00, 0x00, 0x00}, // update sb cb pi 
	{0x3fda, &op_update,	 10,  13,   8, 0xff, 0x00, 0x04, 0x00}, // update sb cb <literal> 
	{0x30ea, &op_update,	 10,  14,   0, 0xff, 0x00, 0x00, 0x00}, // update sb pi a 
	{0x31ea, &op_update,	 10,  14,   1, 0xff, 0x00, 0x00, 0x00}, // update sb pi b 
	{0x32ea, &op_update,	 10,  14,   2, 0xff, 0x00, 0x00, 0x00}, // update sb pi c 
	{0x33ea, &op_update,	 10,  14,   3, 0xff, 0x00, 0x00, 0x00}, // update sb pi d 
	{0x34ea, &op_update,	 10,  14,   4, 0xff, 0x00, 0x00, 0x00}, // update sb pi e 
	{0x35ea, &op_update,	 10,  14,   5, 0xff, 0x00, 0x00, 0x00}, // update sb pi f 
	{0x36ea, &op_update,	 10,  14,   6, 0xff, 0x00, 0x00, 0x00}, // update sb pi g 
	{0x37ea, &op_update,	 10,  14,   7, 0xff, 0x00, 0x00, 0x00}, // update sb pi h 
	{0x38ea, &op_update,	 10,  14,   8, 0xff, 0x00, 0x00, 0x00}, // update sb pi pc 
	{0x39ea, &op_update,	 10,  14,   9, 0xff, 0x00, 0x00, 0x00}, // update sb pi ra 
	{0x3aea, &op_update,	 10,  14,  10, 0xff, 0x00, 0x00, 0x00}, // update sb pi sb 
	{0x3bea, &op_update,	 10,  14,  11, 0xff, 0x00, 0x00, 0x00}, // update sb pi sp 
	{0x3cea, &op_update,	 10,  14,  12, 0xff, 0x00, 0x00, 0x00}, // update sb pi db 
	{0x3dea, &op_update,	 10,  14,  13, 0xff, 0x00, 0x00, 0x00}, // update sb pi cb 
	{0x3eea, &op_update,	 10,  14,  14, 0xff, 0x00, 0x00, 0x00}, // update sb pi pi 
	{0x3fea, &op_update,	 10,  14,   8, 0xff, 0x00, 0x04, 0x00}, // update sb pi <literal> 
	{0x30fa, &op_update,	 10,  15,   0, 0xff, 0x00, 0x00, 0x00}, // update sb status a 
	{0x31fa, &op_update,	 10,  15,   1, 0xff, 0x00, 0x00, 0x00}, // update sb status b 
	{0x32fa, &op_update,	 10,  15,   2, 0xff, 0x00, 0x00, 0x00}, // update sb status c 
	{0x33fa, &op_update,	 10,  15,   3, 0xff, 0x00, 0x00, 0x00}, // update sb status d 
	{0x34fa, &op_update,	 10,  15,   4, 0xff, 0x00, 0x00, 0x00}, // update sb status e 
	{0x35fa, &op_update,	 10,  15,   5, 0xff, 0x00, 0x00, 0x00}, // update sb status f 
	{0x36fa, &op_update,	 10,  15,   6, 0xff, 0x00, 0x00, 0x00}, // update sb status g 
	{0x37fa, &op_update,	 10,  15,   7, 0xff, 0x00, 0x00, 0x00}, // update sb status h 
	{0x38fa, &op_update,	 10,  15,   8, 0xff, 0x00, 0x00, 0x00}, // update sb status pc 
	{0x39fa, &op_update,	 10,  15,   9, 0xff, 0x00, 0x00, 0x00}, // update sb status ra 
	{0x3afa, &op_update,	 10,  15,  10, 0xff, 0x00, 0x00, 0x00}, // update sb status sb 
	{0x3bfa, &op_update,	 10,  15,  11, 0xff, 0x00, 0x00, 0x00}, // update sb status sp 
	{0x3cfa, &op_update,	 10,  15,  12, 0xff, 0x00, 0x00, 0x00}, // update sb status db 
	{0x3dfa, &op_update,	 10,  15,  13, 0xff, 0x00, 0x00, 0x00}, // update sb status cb 
	{0x3efa, &op_update,	 10,  15,  14, 0xff, 0x00, 0x00, 0x00}, // update sb status pi 
	{0x3ffa, &op_update,	 10,  15,   8, 0xff, 0x00, 0x04, 0x00}, // update sb status <literal> 
	{0x300b, &op_update,	 11,   0,   0, 0xff, 0x00, 0x00, 0x00}, // update sp a a 
	{0x310b, &op_update,	 11,   0,   1, 0xff, 0x00, 0x00, 0x00}, // update sp a b 
	{0x320b, &op_update,	 11,   0,   2, 0xff, 0x00, 0x00, 0x00}, // update sp a c 
	{0x330b, &op_update,	 11,   0,   3, 0xff, 0x00, 0x00, 0x00}, // update sp a d 
	{0x340b, &op_update,	 11,   0,   4, 0xff, 0x00, 0x00, 0x00}, // update sp a e 
	{0x350b, &op_update,	 11,   0,   5, 0xff, 0x00, 0x00, 0x00}, // update sp a f 
	{0x360b, &op_update,	 11,   0,   6, 0xff, 0x00, 0x00, 0x00}, // update sp a g 
	{0x370b, &op_update,	 11,   0,   7, 0xff, 0x00, 0x00, 0x00}, // update sp a h 
	{0x380b, &op_update,	 11,   0,   8, 0xff, 0x00, 0x00, 0x00}, // update sp a pc 
	{0x390b, &op_update,	 11,   0,   9, 0xff, 0x00, 0x00, 0x00}, // update sp a ra 
	{0x3a0b, &op_update,	 11,   0,  10, 0xff, 0x00, 0x00, 0x00}, // update sp a sb 
	{0x3b0b, &op_update,	 11,   0,  11, 0xff, 0x00, 0x00, 0x00}, // update sp a sp 
	{0x3c0b, &op_update,	 11,   0,  12, 0xff, 0x00, 0x00, 0x00}, // update sp a db 
	{0x3d0b, &op_update,	 11,   0,  13, 0xff, 0x00, 0x00, 0x00}, // update sp a cb 
	{0x3e0b, &op_update,	 11,   0,  14, 0xff, 0x00, 0x00, 0x00}, // update sp a pi 
	{0x3f0b, &op_update,	 11,   0,   8, 0xff, 0x00, 0x04, 0x00}, // update sp a <literal> 
	{0x301b, &op_update,	 11,   1,   0, 0xff, 0x00, 0x00, 0x00}, // update sp b a 
	{0x311b, &op_update,	 11,   1,   1, 0xff, 0x00, 0x00, 0x00}, // update sp b b 
	{0x321b, &op_update,	 11,   1,   2, 0xff, 0x00, 0x00, 0x00}, // update sp b c 
	{0x331b, &op_update,	 11,   1,   3, 0xff, 0x00, 0x00, 0x00}, // update sp b d 
	{0x341b, &op_update,	 11,   1,   4, 0xff, 0x00, 0x00, 0x00}, // update sp b e 
	{0x351b, &op_update,	 11,   1,   5, 0xff, 0x00, 0x00, 0x00}, // update sp b f 
	{0x361b, &op_update,	 11,   1,   6, 0xff, 0x00, 0x00, 0x00}, // update sp b g 
	{0x371b, &op_update,	 11,   1,   7, 0xff, 0x00, 0x00, 0x00}, // update sp b h 
	{0x381b, &op_update,	 11,   1,   8, 0xff, 0x00, 0x00, 0x00}, // update sp b pc 
	{0x391b, &op_update,	 11,   1,   9, 0xff, 0x00, 0x00, 0x00}, // update sp b ra 
	{0x3a1b, &op_update,	 11,   1,  10, 0xff, 0x00, 0x00, 0x00}, // update sp b sb 
	{0x3b1b, &op_update,	 11,   1,  11, 0xff, 0x00, 0x00, 0x00}, // update sp b sp 
	{0x3c1b, &op_update,	 11,   1,  12, 0xff, 0x00, 0x00, 0x00}, // update sp b db 
	{0x3d1b, &op_update,	 11,   1,  13, 0xff, 0x00, 0x00, 0x00}, // update sp b cb 
	{0x3e1b, &op_update,	 11,   1,  14, 0xff, 0x00, 0x00, 0x00}, // update sp b pi 
	{0x3f1b, &op_update,	 11,   1,   8, 0xff, 0x00, 0x04, 0x00}, // update sp b <literal> 
	{0x302b, &op_update,	 11,   2,   0, 0xff, 0x00, 0x00, 0x00}, // update sp c a 
	{0x312b, &op_update,	 11,   2,   1, 0xff, 0x00, 0x00, 0x00}, // update sp c b 
	{0x322b, &op_update,	 11,   2,   2, 0xff, 0x00, 0x00, 0x00}, // update sp c c 
	{0x332b, &op_update,	 11,   2,   3, 0xff, 0x00, 0x00, 0x00}, // update sp c d 
	{0x342b, &op_update,	 11,   2,   4, 0xff, 0x00, 0x00, 0x00}, // update sp c e 
	{0x352b, &op_update,	 11,   2,   5, 0xff, 0x00, 0x00, 0x00}, // update sp c f 
	{0x362b, &op_update,	 11,   2,   6, 0xff, 0x00, 0x00, 0x00}, // update sp c g 
	{0x372b, &op_update,	 11,   2,   7, 0xff, 0x00, 0x00, 0x00}, // update sp c h 
	{0x382b, &op_update,	 11,   2,   8, 0xff, 0x00, 0x00, 0x00}, // update sp c pc 
	{0x392b, &op_update,	 11,   2,   9, 0xff, 0x00, 0x00, 0x00}, // update sp c ra 
	{0x3a2b, &op_update,	 11,   2,  10, 0xff, 0x00, 0x00, 0x00}, // update sp c sb 
	{0x3b2b, &op_update,	 11,   2,  11, 0xff, 0x00, 0x00, 0x00}, // update sp c sp 
	{0x3c2b, &op_update,	 11,   2,  12, 0xff, 0x00, 0x00, 0x00}, // update sp c db 
	{0x3d2b, &op_update,	 11,   2,  13, 0xff, 0x00, 0x00, 0x00}, // update sp c cb 
	{0x3e2b, &op_update,	 11,   2,  14, 0xff, 0x00, 0x00, 0x00}, // update sp c pi 
	{0x3f2b, &op_update,	 11,   2,   8, 0xff, 0x00, 0x04, 0x00}, // update sp c <literal> 
	{0x303b, &op_update,	 11,   3,   0, 0xff, 0x00, 0x00, 0x00}, // update sp d a 
	{0x313b, &op_update,	 11,   3,   1, 0xff, 0x00, 0x00, 0x00}, // update sp d b 
	{0x323b, &op_update,	 11,   3,   2, 0xff, 0x00, 0x00, 0x00}, // update sp d c 
	{0x333b, &op_update,	 11,   3,   3, 0xff, 0x00, 0x00, 0x00}, // update sp d d 
	{0x343b, &op_update,	 11,   3,   4, 0xff, 0x00, 0x00, 0x00}, // update sp d e 
	{0x353b, &op_update,	 11,   3,   5, 0xff, 0x00, 0x00, 0x00}, // update sp d f 
	{0x363b, &op_update,	 11,   3,   6, 0xff, 0x00, 0x00, 0x00}, // update sp d g 
	{0x373b, &op_update,	 11,   3,   7, 0xff, 0x00, 0x00, 0x00}, // update sp d h 
	{0x383b, &op_update,	 11,   3,   8, 0xff, 0x00, 0x00, 0x00}, // update sp d pc 
	{0x393b, &op_update,	 11,   3,   9, 0xff, 0x00, 0x00, 0x00}, // update sp d ra 
	{0x3a3b, &op_update,	 11,   3,  10, 0xff, 0x00, 0x00, 0x00}, // update sp d sb 
	{0x3b3b, &op_update,	 11,   3,  11, 0xff, 0x00, 0x00, 0x00}, // update sp d sp 
	{0x3c3b, &op_update,	 11,   3,  12, 0xff, 0x00, 0x00, 0x00}, // update sp d db 
	{0x3d3b, &op_update,	 11,   3,  13, 0xff, 0x00, 0x00, 0x00}, // update sp d cb 
	{0x3e3b, &op_update,	 11,   3,  14, 0xff, 0x00, 0x00, 0x00}, // update sp d pi 
	{0x3f3b, &op_update,	 11,   3,   8, 0xff, 0x00, 0x04, 0x00}, // update sp d <literal> 
	{0x304b, &op_update,	 11,   4,   0, 0xff, 0x00, 0x00, 0x00}, // update sp e a 
	{0x314b, &op_update,	 11,   4,   1, 0xff, 0x00, 0x00, 0x00}, // update sp e b 
	{0x324b, &op_update,	 11,   4,   2, 0xff, 0x00, 0x00, 0x00}, // update sp e c 
	{0x334b, &op_update,	 11,   4,   3, 0xff, 0x00, 0x00, 0x00}, // update sp e d 
	{0x344b, &op_update,	 11,   4,   4, 0xff, 0x00, 0x00, 0x00}, // update sp e e 
	{0x354b, &op_update,	 11,   4,   5, 0xff, 0x00, 0x00, 0x00}, // update sp e f 
	{0x364b, &op_update,	 11,   4,   6, 0xff, 0x00, 0x00, 0x00}, // update sp e g 
	{0x374b, &op_update,	 11,   4,   7, 0xff, 0x00, 0x00, 0x00}, // update sp e h 
	{0x384b, &op_update,	 11,   4,   8, 0xff, 0x00, 0x00, 0x00}, // update sp e pc 
	{0x394b, &op_update,	 11,   4,   9, 0xff, 0x00, 0x00, 0x00}, // update sp e ra 
	{0x3a4b, &op_update,	 11,   4,  10, 0xff, 0x00, 0x00, 0x00}, // update sp e sb 
	{0x3b4b, &op_update,	 11,   4,  11, 0xff, 0x00, 0x00, 0x00}, // update sp e sp 
	{0x3c4b, &op_update,	 11,   4,  12, 0xff, 0x00, 0x00, 0x00}, // update sp e db 
	{0x3d4b, &op_update,	 11,   4,  13, 0xff, 0x00, 0x00, 0x00}, // update sp e cb 
	{0x3e4b, &op_update,	 11,   4,  14, 0xff, 0x00, 0x00, 0x00}, // update sp e pi 
	{0x3f4b, &op_update,	 11,   4,   8, 0xff, 0x00, 0x04, 0x00}, // update sp e <literal> 
	{0x305b, &op_update,	 11,   5,   0, 0xff, 0x00, 0x00, 0x00}, // update sp f a 
	{0x315b, &op_update,	 11,   5,   1, 0xff, 0x00, 0x00, 0x00}, // update sp f b 
	{0x325b, &op_update,	 11,   5,   2, 0xff, 0x00, 0x00, 0x00}, // update sp f c 
	{0x335b, &op_update,	 11,   5,   3, 0xff, 0x00, 0x00, 0x00}, // update sp f d 
	{0x345b, &op_update,	 11,   5,   4, 0xff, 0x00, 0x00, 0x00}, // update sp f e 
	{0x355b, &op_update,	 11,   5,   5, 0xff, 0x00, 0x00, 0x00}, // update sp f f 
	{0x365b, &op_update,	 11,   5,   6, 0xff, 0x00, 0x00, 0x00}, // update sp f g 
	{0x375b, &op_update,	 11,   5,   7, 0xff, 0x00, 0x00, 0x00}, // update sp f h 
	{0x385b, &op_update,	 11,   5,   8, 0xff, 0x00, 0x00, 0x00}, // update sp f pc 
	{0x395b, &op_update,	 11,   5,   9, 0xff, 0x00, 0x00, 0x00}, // update sp f ra 
	{0x3a5b, &op_update,	 11,   5,  10, 0xff, 0x00, 0x00, 0x00}, // update sp f sb 
	{0x3b5b, &op_update,	 11,   5,  11, 0xff, 0x00, 0x00, 0x00}, // update sp f sp 
	{0x3c5b, &op_update,	 11,   5,  12, 0xff, 0x00, 0x00, 0x00}, // update sp f db 
	{0x3d5b, &op_update,	 11,   5,  13, 0xff, 0x00, 0x00, 0x00}, // update sp f cb 
	{0x3e5b, &op_update,	 11,   5,  14, 0xff, 0x00, 0x00, 0x00}, // update sp f pi 
	{0x3f5b, &op_update,	 11,   5,   8, 0xff, 0x00, 0x04, 0x00}, // update sp f <literal> 
	{0x306b, &op_update,	 11,   6,   0, 0xff, 0x00, 0x00, 0x00}, // update sp g a 
	{0x316b, &op_update,	 11,   6,   1, 0xff, 0x00, 0x00, 0x00}, // update sp g b 
	{0x326b, &op_update,	 11,   6,   2, 0xff, 0x00, 0x00, 0x00}, // update sp g c 
	{0x336b, &op_update,	 11,   6,   3, 0xff, 0x00, 0x00, 0x00}, // update sp g d 
	{0x346b, &op_update,	 11,   6,   4, 0xff, 0x00, 0x00, 0x00}, // update sp g e 
	{0x356b, &op_update,	 11,   6,   5, 0xff, 0x00, 0x00, 0x00}, // update sp g f 
	{0x366b, &op_update,	 11,   6,   6, 0xff, 0x00, 0x00, 0x00}, // update sp g g 
	{0x376b, &op_update,	 11,   6,   7, 0xff, 0x00, 0x00, 0x00}, // update sp g h 
	{0x386b, &op_update,	 11,   6,   8, 0xff, 0x00, 0x00, 0x00}, // update sp g pc 
	{0x396b, &op_update,	 11,   6,   9, 0xff, 0x00, 0x00, 0x00}, // update sp g ra 
	{0x3a6b, &op_update,	 11,   6,  10, 0xff, 0x00, 0x00, 0x00}, // update sp g sb 
	{0x3b6b, &op_update,	 11,   6,  11, 0xff, 0x00, 0x00, 0x00}, // update sp g sp 
	{0x3c6b, &op_update,	 11,   6,  12, 0xff, 0x00, 0x00, 0x00}, // update sp g db 
	{0x3d6b, &op_update,	 11,   6,  13, 0xff, 0x00, 0x00, 0x00}, // update sp g cb 
	{0x3e6b, &op_update,	 11,   6,  14, 0xff, 0x00, 0x00, 0x00}, // update sp g pi 
	{0x3f6b, &op_update,	 11,   6,   8, 0xff, 0x00, 0x04, 0x00}, // update sp g <literal> 
	{0x307b, &op_update,	 11,   7,   0, 0xff, 0x00, 0x00, 0x00}, // update sp h a 
	{0x317b, &op_update,	 11,   7,   1, 0xff, 0x00, 0x00, 0x00}, // update sp h b 
	{0x327b, &op_update,	 11,   7,   2, 0xff, 0x00, 0x00, 0x00}, // update sp h c 
	{0x337b, &op_update,	 11,   7,   3, 0xff, 0x00, 0x00, 0x00}, // update sp h d 
	{0x347b, &op_update,	 11,   7,   4, 0xff, 0x00, 0x00, 0x00}, // update sp h e 
	{0x357b, &op_update,	 11,   7,   5, 0xff, 0x00, 0x00, 0x00}, // update sp h f 
	{0x367b, &op_update,	 11,   7,   6, 0xff, 0x00, 0x00, 0x00}, // update sp h g 
	{0x377b, &op_update,	 11,   7,   7, 0xff, 0x00, 0x00, 0x00}, // update sp h h 
	{0x387b, &op_update,	 11,   7,   8, 0xff, 0x00, 0x00, 0x00}, // update sp h pc 
	{0x397b, &op_update,	 11,   7,   9, 0xff, 0x00, 0x00, 0x00}, // update sp h ra 
	{0x3a7b, &op_update,	 11,   7,  10, 0xff, 0x00, 0x00, 0x00}, // update sp h sb 
	{0x3b7b, &op_update,	 11,   7,  11, 0xff, 0x00, 0x00, 0x00}, // update sp h sp 
	{0x3c7b, &op_update,	 11,   7,  12, 0xff, 0x00, 0x00, 0x00}, // update sp h db 
	{0x3d7b, &op_update,	 11,   7,  13, 0xff, 0x00, 0x00, 0x00}, // update sp h cb 
	{0x3e7b, &op_update,	 11,   7,  14, 0xff, 0x00, 0x00, 0x00}, // update sp h pi 
	{0x3f7b, &op_update,	 11,   7,   8, 0xff, 0x00, 0x04, 0x00}, // update sp h <literal> 
	{0x308b, &op_update,	 11,   8,   0, 0xff, 0x00, 0x00, 0x00}, // update sp pc a 
	{0x318b, &op_update,	 11,   8,   1, 0xff, 0x00, 0x00, 0x00}, // update sp pc b 
	{0x328b, &op_update,	 11,   8,   2, 0xff, 0x00, 0x00, 0x00}, // update sp pc c 
	{0x338b, &op_update,	 11,   8,   3, 0xff, 0x00, 0x00, 0x00}, // update sp pc d 
	{0x348b, &op_update,	 11,   8,   4, 0xff, 0x00, 0x00, 0x00}, // update sp pc e 
	{0x358b, &op_update,	 11,   8,   5, 0xff, 0x00, 0x00, 0x00}, // update sp pc f 
	{0x368b, &op_update,	 11,   8,   6, 0xff, 0x00, 0x00, 0x00}, // update sp pc g 
	{0x378b, &op_update,	 11,   8,   7, 0xff, 0x00, 0x00, 0x00}, // update sp pc h 
	{0x388b, &op_update,	 11,   8,   8, 0xff, 0x00, 0x00, 0x00}, // update sp pc pc 
	{0x398b, &op_update,	 11,   8,   9, 0xff, 0x00, 0x00, 0x00}, // update sp pc ra 
	{0x3a8b, &op_update,	 11,   8,  10, 0xff, 0x00, 0x00, 0x00}, // update sp pc sb 
	{0x3b8b, &op_update,	 11,   8,  11, 0xff, 0x00, 0x00, 0x00}, // update sp pc sp 
	{0x3c8b, &op_update,	 11,   8,  12, 0xff, 0x00, 0x00, 0x00}, // update sp pc db 
	{0x3d8b, &op_update,	 11,   8,  13, 0xff, 0x00, 0x00, 0x00}, // update sp pc cb 
	{0x3e8b, &op_update,	 11,   8,  14, 0xff, 0x00, 0x00, 0x00}, // update sp pc pi 
	{0x3f8b, &op_update,	 11,   8,   8, 0xff, 0x00, 0x04, 0x00}, // update sp pc <literal> 
	{0x309b, &op_update,	 11,   9,   0, 0xff, 0x00, 0x00, 0x00}, // update sp ra a 
	{0x319b, &op_update,	 11,   9,   1, 0xff, 0x00, 0x00, 0x00}, // update sp ra b 
	{0x329b, &op_update,	 11,   9,   2, 0xff, 0x00, 0x00, 0x00}, // update sp ra c 
	{0x339b, &op_update,	 11,   9,   3, 0xff, 0x00, 0x00, 0x00}, // update sp ra d 
	{0x349b, &op_update,	 11,   9,   4, 0xff, 0x00, 0x00, 0x00}, // update sp ra e 
	{0x359b, &op_update,	 11,   9,   5, 0xff, 0x00, 0x00, 0x00}, // update sp ra f 
	{0x369b, &op_update,	 11,   9,   6, 0xff, 0x00, 0x00, 0x00}, // update sp ra g 
	{0x379b, &op_update,	 11,   9,   7, 0xff, 0x00, 0x00, 0x00}, // update sp ra h 
	{0x389b, &op_update,	 11,   9,   8, 0xff, 0x00, 0x00, 0x00}, // update sp ra pc 
	{0x399b, &op_update,	 11,   9,   9, 0xff, 0x00, 0x00, 0x00}, // update sp ra ra 
	{0x3a9b, &op_update,	 11,   9,  10, 0xff, 0x00, 0x00, 0x00}, // update sp ra sb 
	{0x3b9b, &op_update,	 11,   9,  11, 0xff, 0x00, 0x00, 0x00}, // update sp ra sp 
	{0x3c9b, &op_update,	 11,   9,  12, 0xff, 0x00, 0x00, 0x00}, // update sp ra db 
	{0x3d9b, &op_update,	 11,   9,  13, 0xff, 0x00, 0x00, 0x00}, // update sp ra cb 
	{0x3e9b, &op_update,	 11,   9,  14, 0xff, 0x00, 0x00, 0x00}, // update sp ra pi 
	{0x3f9b, &op_update,	 11,   9,   8, 0xff, 0x00, 0x04, 0x00}, // update sp ra <literal> 
	{0x30ab, &op_update,	 11,  10,   0, 0xff, 0x00, 0x00, 0x00}, // update sp sb a 
	{0x31ab, &op_update,	 11,  10,   1, 0xff, 0x00, 0x00, 0x00}, // update sp sb b 
	{0x32ab, &op_update,	 11,  10,   2, 0xff, 0x00, 0x00, 0x00}, // update sp sb c 
	{0x33ab, &op_update,	 11,  10,   3, 0xff, 0x00, 0x00, 0x00}, // update sp sb d 
	{0x34ab, &op_update,	 11,  10,   4, 0xff, 0x00, 0x00, 0x00}, // update sp sb e 
	{0x35ab, &op_update,	 11,  10,   5, 0xff, 0x00, 0x00, 0x00}, // update sp sb f 
	{0x36ab, &op_update,	 11,  10,   6, 0xff, 0x00, 0x00, 0x00}, // update sp sb g 
	{0x37ab, &op_update,	 11,  10,   7, 0xff, 0x00, 0x00, 0x00}, // update sp sb h 
	{0x38ab, &op_update,	 11,  10,   8, 0xff, 0x00, 0x00, 0x00}, // update sp sb pc 
	{0x39ab, &op_update,	 11,  10,   9, 0xff, 0x00, 0x00, 0x00}, // update sp sb ra 
	{0x3aab, &op_update,	 11,  10,  10, 0xff, 0x00, 0x00, 0x00}, // update sp sb sb 
	{0x3bab, &op_update,	 11,  10,  11, 0xff, 0x00, 0x00, 0x00}, // update sp sb sp 
	{0x3cab, &op_update,	 11,  10,  12, 0xff, 0x00, 0x00, 0x00}, // update sp sb db 
	{0x3dab, &op_update,	 11,  10,  13, 0xff, 0x00, 0x00, 0x00}, // update sp sb cb 
	{0x3eab, &op_update,	 11,  10,  14, 0xff, 0x00, 0x00, 0x00}, // update sp sb pi 
	{0x3fab, &op_update,	 11,  10,   8, 0xff, 0x00, 0x04, 0x00}, // update sp sb <literal> 
	{0x30bb, &op_update,	 11,  11,   0, 0xff, 0x00, 0x00, 0x00}, // update sp sp a 
	{0x31bb, &op_update,	 11,  11,   1, 0xff, 0x00, 0x00, 0x00}, // update sp sp b 
	{0x32bb, &op_update,	 11,  11,   2, 0xff, 0x00, 0x00, 0x00}, // update sp sp c 
	{0x33bb, &op_update,	 11,  11,   3, 0xff, 0x00, 0x00, 0x00}, // update sp sp d 
	{0x34bb, &op_update,	 11,  11,   4, 0xff, 0x00, 0x00, 0x00}, // update sp sp e 
	{0x35bb, &op_update,	 11,  11,   5, 0xff, 0x00, 0x00, 0x00}, // update sp sp f 
	{0x36bb, &op_update,	 11,  11,   6, 0xff, 0x00, 0x00, 0x00}, // update sp sp g 
	{0x37bb, &op_update,	 11,  11,   7, 0xff, 0x00, 0x00, 0x00}, // update sp sp h 
	{0x38bb, &op_update,	 11,  11,   8, 0xff, 0x00, 0x00, 0x00}, // update sp sp pc 
	{0x39bb, &op_update,	 11,  11,   9, 0xff, 0x00, 0x00, 0x00}, // update sp sp ra 
	{0x3abb, &op_update,	 11,  11,  10, 0xff, 0x00, 0x00, 0x00}, // update sp sp sb 
	{0x3bbb, &op_update,	 11,  11,  11, 0xff, 0x00, 0x00, 0x00}, // update sp sp sp 
	{0x3cbb, &op_update,	 11,  11,  12, 0xff, 0x00, 0x00, 0x00}, // update sp sp db 
	{0x3dbb, &op_update,	 11,  11,  13, 0xff, 0x00, 0x00, 0x00}, // update sp sp cb 
	{0x3ebb, &op_update,	 11,  11,  14, 0xff, 0x00, 0x00, 0x00}, // update sp sp pi 
	{0x3fbb, &op_update,	 11,  11,   8, 0xff, 0x00, 0x04, 0x00}, // update sp sp <literal> 
	{0x30cb, &op_update,	 11,  12,   0, 0xff, 0x00, 0x00, 0x00}, // update sp db a 
	{0x31cb, &op_update,	 11,  12,   1, 0xff, 0x00, 0x00, 0x00}, // update sp db b 
	{0x32cb, &op_update,	 11,  12,   2, 0xff, 0x00, 0x00, 0x00}, // update sp db c 
	{0x33cb, &op_update,	 11,  12,   3, 0xff, 0x00, 0x00, 0x00}, // update sp db d 
	{0x34cb, &op_update,	 11,  12,   4, 0xff, 0x00, 0x00, 0x00}, // update sp db e 
	{0x35cb, &op_update,	 11,  12,   5, 0xff, 0x00, 0x00, 0x00}, // update sp db f 
	{0x36cb, &op_update,	 11,  12,   6, 0xff, 0x00, 0x00, 0x00}, // update sp db g 
	{0x37cb, &op_update,	 11,  12,   7, 0xff, 0x00, 0x00, 0x00}, // update sp db h 
	{0x38cb, &op_update,	 11,  12,   8, 0xff, 0x00, 0x00, 0x00}, // update sp db pc 
	{0x39cb, &op_update,	 11,  12,   9, 0xff, 0x00, 0x00, 0x00}, // update sp db ra 
	{0x3acb, &op_update,	 11,  12,  10, 0xff, 0x00, 0x00, 0x00}, // update sp db sb 
	{0x3bcb, &op_update,	 11,  12,  11, 0xff, 0x00, 0x00, 0x00}, // update sp db sp 
	{0x3ccb, &op_update,	 11,  12,  12, 0xff, 0x00, 0x00, 0x00}, // update sp db db 
	{0x3dcb, &op_update,	 11,  12,  13, 0xff, 0x00, 0x00, 0x00}, // update sp db cb 
	{0x3ecb, &op_update,	 11,  12,  14, 0xff, 0x00, 0x00, 0x00}, // update sp db pi 
	{0x3fcb, &op_update,	 11,  12,   8, 0xff, 0x00, 0x04, 0x00}, // update sp db <literal> 
	{0x30db, &op_update,	 11,  13,   0, 0xff, 0x00, 0x00, 0x00}, // update sp cb a 
	{0x31db, &op_update,	 11,  13,   1, 0xff, 0x00, 0x00, 0x00}, // update sp cb b 
	{0x32db, &op_update,	 11,  13,   2, 0xff, 0x00, 0x00, 0x00}, // update sp cb c 
	{0x33db, &op_update,	 11,  13,   3, 0xff, 0x00, 0x00, 0x00}, // update sp cb d 
	{0x34db, &op_update,	 11,  13,   4, 0xff, 0x00, 0x00, 0x00}, // update sp cb e 
	{0x35db, &op_update,	 11,  13,   5, 0xff, 0x00, 0x00, 0x00}, // update sp cb f 
	{0x36db, &op_update,	 11,  13,   6, 0xff, 0x00, 0x00, 0x00}, // update sp cb g 
	{0x37db, &op_update,	 11,  13,   7, 0xff, 0x00, 0x00, 0x00}, // update sp cb h 
	{0x38db, &op_update,	 11,  13,   8, 0xff, 0x00, 0x00, 0x00}, // update sp cb pc 
	{0x39db, &op_update,	 11,  13,   9, 0xff, 0x00, 0x00, 0x00}, // update sp cb ra 
	{0x3adb, &op_update,	 11,  13,  10, 0xff, 0x00, 0x00, 0x00}, // update sp cb sb 
	{0x3bdb, &op_update,	 11,  13,  11, 0xff, 0x00, 0x00, 0x00}, // update sp cb sp 
	{0x3cdb, &op_update,	 11,  13,  12, 0xff, 0x00, 0x00, 0x00}, // update sp cb db 
	{0x3ddb, &op_update,	 11,  13,  13, 0xff, 0x00, 0x00, 0x00}, // update sp cb cb 
	{0x3edb, &op_update,	 11,  13,  14, 0xff, 0x00, 0x00, 0x00}, // update sp cb pi 
	{0x3fdb, &op_update,	 11,  13,   8, 0xff, 0x00, 0x04, 0x00}, // update sp cb <literal> 
	{0x30eb, &op_update,	 11,  14,   0, 0xff, 0x00, 0x00, 0x00}, // update sp pi a 
	{0x31eb, &op_update,	 11,  14,   1, 0xff, 0x00, 0x00, 0x00}, // update sp pi b 
	{0x32eb, &op_update,	 11,  14,   2, 0xff, 0x00, 0x00, 0x00}, // update sp pi c 
	{0x33eb, &op_update,	 11,  14,   3, 0xff, 0x00, 0x00, 0x00}, // update sp pi d 
	{0x34eb, &op_update,	 11,  14,   4, 0xff, 0x00, 0x00, 0x00}, // update sp pi e 
	{0x35eb, &op_update,	 11,  14,   5, 0xff, 0x00, 0x00, 0x00}, // update sp pi f 
	{0x36eb, &op_update,	 11,  14,   6, 0xff, 0x00, 0x00, 0x00}, // update sp pi g 
	{0x37eb, &op_update,	 11,  14,   7, 0xff, 0x00, 0x00, 0x00}, // update sp pi h 
	{0x38eb, &op_update,	 11,  14,   8, 0xff, 0x00, 0x00, 0x00}, // update sp pi pc 
	{0x39eb, &op_update,	 11,  14,   9, 0xff, 0x00, 0x00, 0x00}, // update sp pi ra 
	{0x3aeb, &op_update,	 11,  14,  10, 0xff, 0x00, 0x00, 0x00}, // update sp pi sb 
	{0x3beb, &op_update,	 11,  14,  11, 0xff, 0x00, 0x00, 0x00}, // update sp pi sp 
	{0x3ceb, &op_update,	 11,  14,  12, 0xff, 0x00, 0x00, 0x00}, // update sp pi db 
	{0x3deb, &op_update,	 11,  14,  13, 0xff, 0x00, 0x00, 0x00}, // update sp pi cb 
	{0x3eeb, &op_update,	 11,  14,  14, 0xff, 0x00, 0x00, 0x00}, // update sp pi pi 
	{0x3feb, &op_update,	 11,  14,   8, 0xff, 0x00, 0x04, 0x00}, // update sp pi <literal> 
	{0x30fb, &op_update,	 11,  15,   0, 0xff, 0x00, 0x00, 0x00}, // update sp status a 
	{0x31fb, &op_update,	 11,  15,   1, 0xff, 0x00, 0x00, 0x00}, // update sp status b 
	{0x32fb, &op_update,	 11,  15,   2, 0xff, 0x00, 0x00, 0x00}, // update sp status c 
	{0x33fb, &op_update,	 11,  15,   3, 0xff, 0x00, 0x00, 0x00}, // update sp status d 
	{0x34fb, &op_update,	 11,  15,   4, 0xff, 0x00, 0x00, 0x00}, // update sp status e 
	{0x35fb, &op_update,	 11,  15,   5, 0xff, 0x00, 0x00, 0x00}, // update sp status f 
	{0x36fb, &op_update,	 11,  15,   6, 0xff, 0x00, 0x00, 0x00}, // update sp status g 
	{0x37fb, &op_update,	 11,  15,   7, 0xff, 0x00, 0x00, 0x00}, // update sp status h 
	{0x38fb, &op_update,	 11,  15,   8, 0xff, 0x00, 0x00, 0x00}, // update sp status pc 
	{0x39fb, &op_update,	 11,  15,   9, 0xff, 0x00, 0x00, 0x00}, // update sp status ra 
	{0x3afb, &op_update,	 11,  15,  10, 0xff, 0x00, 0x00, 0x00}, // update sp status sb 
	{0x3bfb, &op_update,	 11,  15,  11, 0xff, 0x00, 0x00, 0x00}, // update sp status sp 
	{0x3cfb, &op_update,	 11,  15,  12, 0xff, 0x00, 0x00, 0x00}, // update sp status db 
	{0x3dfb, &op_update,	 11,  15,  13, 0xff, 0x00, 0x00, 0x00}, // update sp status cb 
	{0x3efb, &op_update,	 11,  15,  14, 0xff, 0x00, 0x00, 0x00}, // update sp status pi 
	{0x3ffb, &op_update,	 11,  15,   8, 0xff, 0x00, 0x04, 0x00}, // update sp status <literal> 
	{0x300c, &op_update,	 12,   0,   0, 0xff, 0x00, 0x00, 0x00}, // update db a a 
	{0x310c, &op_update,	 12,   0,   1, 0xff, 0x00, 0x00, 0x00}, // update db a b 
	{0x320c, &op_update,	 12,   0,   2, 0xff, 0x00, 0x00, 0x00}, // update db a c 
	{0x330c, &op_update,	 12,   0,   3, 0xff, 0x00, 0x00, 0x00}, // update db a d 
	{0x340c, &op_update,	 12,   0,   4, 0xff, 0x00, 0x00, 0x00}, // update db a e 
	{0x350c, &op_update,	 12,   0,   5, 0xff, 0x00, 0x00, 0x00}, // update db a f 
	{0x360c, &op_update,	 12,   0,   6, 0xff, 0x00, 0x00, 0x00}, // update db a g 
	{0x370c, &op_update,	 12,   0,   7, 0xff, 0x00, 0x00, 0x00}, // update db a h 
	{0x380c, &op_update,	 12,   0,   8, 0xff, 0x00, 0x00, 0x00}, // update db a pc 
	{0x390c, &op_update,	 12,   0,   9, 0xff, 0x00, 0x00, 0x00}, // update db a ra 
	{0x3a0c, &op_update,	 12,   0,  10, 0xff, 0x00, 0x00, 0x00}, // update db a sb 
	{0x3b0c, &op_update,	 12,   0,  11, 0xff, 0x00, 0x00, 0x00}, // update db a sp 
	{0x3c0c, &op_update,	 12,   0,  12, 0xff, 0x00, 0x00, 0x00}, // update db a db 
	{0x3d0c, &op_update,	 12,   0,  13, 0xff, 0x00, 0x00, 0x00}, // update db a cb 
	{0x3e0c, &op_update,	 12,   0,  14, 0xff, 0x00, 0x00, 0x00}, // update db a pi 
	{0x3f0c, &op_update,	 12,   0,   8, 0xff, 0x00, 0x04, 0x00}, // update db a <literal> 
	{0x301c, &op_update,	 12,   1,   0, 0xff, 0x00, 0x00, 0x00}, // update db b a 
	{0x311c, &op_update,	 12,   1,   1, 0xff, 0x00, 0x00, 0x00}, // update db b b 
	{0x321c, &op_update,	 12,   1,   2, 0xff, 0x00, 0x00, 0x00}, // update db b c 
	{0x331c, &op_update,	 12,   1,   3, 0xff, 0x00, 0x00, 0x00}, // update db b d 
	{0x341c, &op_update,	 12,   1,   4, 0xff, 0x00, 0x00, 0x00}, // update db b e 
	{0x351c, &op_update,	 12,   1,   5, 0xff, 0x00, 0x00, 0x00}, // update db b f 
	{0x361c, &op_update,	 12,   1,   6, 0xff, 0x00, 0x00, 0x00}, // update db b g 
	{0x371c, &op_update,	 12,   1,   7, 0xff, 0x00, 0x00, 0x00}, // update db b h 
	{0x381c, &op_update,	 12,   1,   8, 0xff, 0x00, 0x00, 0x00}, // update db b pc 
	{0x391c, &op_update,	 12,   1,   9, 0xff, 0x00, 0x00, 0x00}, // update db b ra 
	{0x3a1c, &op_update,	 12,   1,  10, 0xff, 0x00, 0x00, 0x00}, // update db b sb 
	{0x3b1c, &op_update,	 12,   1,  11, 0xff, 0x00, 0x00, 0x00}, // update db b sp 
	{0x3c1c, &op_update,	 12,   1,  12, 0xff, 0x00, 0x00, 0x00}, // update db b db 
	{0x3d1c, &op_update,	 12,   1,  13, 0xff, 0x00, 0x00, 0x00}, // update db b cb 
	{0x3e1c, &op_update,	 12,   1,  14, 0xff, 0x00, 0x00, 0x00}, // update db b pi 
	{0x3f1c, &op_update,	 12,   1,   8, 0xff, 0x00, 0x04, 0x00}, // update db b <literal> 
	{0x302c, &op_update,	 12,   2,   0, 0xff, 0x00, 0x00, 0x00}, // update db c a 
	{0x312c, &op_update,	 12,   2,   1, 0xff, 0x00, 0x00, 0x00}, // update db c b 
	{0x322c, &op_update,	 12,   2,   2, 0xff, 0x00, 0x00, 0x00}, // update db c c 
	{0x332c, &op_update,	 12,   2,   3, 0xff, 0x00, 0x00, 0x00}, // update db c d 
	{0x342c, &op_update,	 12,   2,   4, 0xff, 0x00, 0x00, 0x00}, // update db c e 
	{0x352c, &op_update,	 12,   2,   5, 0xff, 0x00, 0x00, 0x00}, // update db c f 
	{0x362c, &op_update,	 12,   2,   6, 0xff, 0x00, 0x00, 0x00}, // update db c g 
	{0x372c, &op_update,	 12,   2,   7, 0xff, 0x00, 0x00, 0x00}, // update db c h 
	{0x382c, &op_update,	 12,   2,   8, 0xff, 0x00, 0x00, 0x00}, // update db c pc 
	{0x392c, &op_update,	 12,   2,   9, 0xff, 0x00, 0x00, 0x00}, // update db c ra 
	{0x3a2c, &op_update,	 12,   2,  10, 0xff, 0x00, 0x00, 0x00}, // update db c sb 
	{0x3b2c, &op_update,	 12,   2,  11, 0xff, 0x00, 0x00, 0x00}, // update db c sp 
	{0x3c2c, &op_update,	 12,   2,  12, 0xff, 0x00, 0x00, 0x00}, // update db c db 
	{0x3d2c, &op_update,	 12,   2,  13, 0xff, 0x00, 0x00, 0x00}, // update db c cb 
	{0x3e2c, &op_update,	 12,   2,  14, 0xff, 0x00, 0x00, 0x00}, // update db c pi 
	{0x3f2c, &op_update,	 12,   2,   8, 0xff, 0x00, 0x04, 0x00}, // update db c <literal> 
	{0x303c, &op_update,	 12,   3,   0, 0xff, 0x00, 0x00, 0x00}, // update db d a 
	{0x313c, &op_update,	 12,   3,   1, 0xff, 0x00, 0x00, 0x00}, // update db d b 
	{0x323c, &op_update,	 12,   3,   2, 0xff, 0x00, 0x00, 0x00}, // update db d c 
	{0x333c, &op_update,	 12,   3,   3, 0xff, 0x00, 0x00, 0x00}, // update db d d 
	{0x343c, &op_update,	 12,   3,   4, 0xff, 0x00, 0x00, 0x00}, // update db d e 
	{0x353c, &op_update,	 12,   3,   5, 0xff, 0x00, 0x00, 0x00}, // update db d f 
	{0x363c, &op_update,	 12,   3,   6, 0xff, 0x00, 0x00, 0x00}, // update db d g 
	{0x373c, &op_update,	 12,   3,   7, 0xff, 0x00, 0x00, 0x00}, // update db d h 
	{0x383c, &op_update,	 12,   3,   8, 0xff, 0x00, 0x00, 0x00}, // update db d pc 
	{0x393c, &op_update,	 12,   3,   9, 0xff, 0x00, 0x00, 0x00}, // update db d ra 
	{0x3a3c, &op_update,	 12,   3,  10, 0xff, 0x00, 0x00, 0x00}, // update db d sb 
	{0x3b3c, &op_update,	 12,   3,  11, 0xff, 0x00, 0x00, 0x00}, // update db d sp 
	{0x3c3c, &op_update,	 12,   3,  12, 0xff, 0x00, 0x00, 0x00}, // update db d db 
	{0x3d3c, &op_update,	 12,   3,  13, 0xff, 0x00, 0x00, 0x00}, // update db d cb 
	{0x3e3c, &op_update,	 12,   3,  14, 0xff, 0x00, 0x00, 0x00}, // update db d pi 
	{0x3f3c, &op_update,	 12,   3,   8, 0xff, 0x00, 0x04, 0x00}, // update db d <literal> 
	{0x304c, &op_update,	 12,   4,   0, 0xff, 0x00, 0x00, 0x00}, // update db e a 
	{0x314c, &op_update,	 12,   4,   1, 0xff, 0x00, 0x00, 0x00}, // update db e b 
	{0x324c, &op_update,	 12,   4,   2, 0xff, 0x00, 0x00, 0x00}, // update db e c 
	{0x334c, &op_update,	 12,   4,   3, 0xff, 0x00, 0x00, 0x00}, // update db e d 
	{0x344c, &op_update,	 12,   4,   4, 0xff, 0x00, 0x00, 0x00}, // update db e e 
	{0x354c, &op_update,	 12,   4,   5, 0xff, 0x00, 0x00, 0x00}, // update db e f 
	{0x364c, &op_update,	 12,   4,   6, 0xff, 0x00, 0x00, 0x00}, // update db e g 
	{0x374c, &op_update,	 12,   4,   7, 0xff, 0x00, 0x00, 0x00}, // update db e h 
	{0x384c, &op_update,	 12,   4,   8, 0xff, 0x00, 0x00, 0x00}, // update db e pc 
	{0x394c, &op_update,	 12,   4,   9, 0xff, 0x00, 0x00, 0x00}, // update db e ra 
	{0x3a4c, &op_update,	 12,   4,  10, 0xff, 0x00, 0x00, 0x00}, // update db e sb 
	{0x3b4c, &op_update,	 12,   4,  11, 0xff, 0x00, 0x00, 0x00}, // update db e sp 
	{0x3c4c, &op_update,	 12,   4,  12, 0xff, 0x00, 0x00, 0x00}, // update db e db 
	{0x3d4c, &op_update,	 12,   4,  13, 0xff, 0x00, 0x00, 0x00}, // update db e cb 
	{0x3e4c, &op_update,	 12,   4,  14, 0xff, 0x00, 0x00, 0x00}, // update db e pi 
	{0x3f4c, &op_update,	 12,   4,   8, 0xff, 0x00, 0x04, 0x00}, // update db e <literal> 
	{0x305c, &op_update,	 12,   5,   0, 0xff, 0x00, 0x00, 0x00}, // update db f a 
	{0x315c, &op_update,	 12,   5,   1, 0xff, 0x00, 0x00, 0x00}, // update db f b 
	{0x325c, &op_update,	 12,   5,   2, 0xff, 0x00, 0x00, 0x00}, // update db f c 
	{0x335c, &op_update,	 12,   5,   3, 0xff, 0x00, 0x00, 0x00}, // update db f d 
	{0x345c, &op_update,	 12,   5,   4, 0xff, 0x00, 0x00, 0x00}, // update db f e 
	{0x355c, &op_update,	 12,   5,   5, 0xff, 0x00, 0x00, 0x00}, // update db f f 
	{0x365c, &op_update,	 12,   5,   6, 0xff, 0x00, 0x00, 0x00}, // update db f g 
	{0x375c, &op_update,	 12,   5,   7, 0xff, 0x00, 0x00, 0x00}, // update db f h 
	{0x385c, &op_update,	 12,   5,   8, 0xff, 0x00, 0x00, 0x00}, // update db f pc 
	{0x395c, &op_update,	 12,   5,   9, 0xff, 0x00, 0x00, 0x00}, // update db f ra 
	{0x3a5c, &op_update,	 12,   5,  10, 0xff, 0x00, 0x00, 0x00}, // update db f sb 
	{0x3b5c, &op_update,	 12,   5,  11, 0xff, 0x00, 0x00, 0x00}, // update db f sp 
	{0x3c5c, &op_update,	 12,   5,  12, 0xff, 0x00, 0x00, 0x00}, // update db f db 
	{0x3d5c, &op_update,	 12,   5,  13, 0xff, 0x00, 0x00, 0x00}, // update db f cb 
	{0x3e5c, &op_update,	 12,   5,  14, 0xff, 0x00, 0x00, 0x00}, // update db f pi 
	{0x3f5c, &op_update,	 12,   5,   8, 0xff, 0x00, 0x04, 0x00}, // update db f <literal> 
	{0x306c, &op_update,	 12,   6,   0, 0xff, 0x00, 0x00, 0x00}, // update db g a 
	{0x316c, &op_update,	 12,   6,   1, 0xff, 0x00, 0x00, 0x00}, // update db g b 
	{0x326c, &op_update,	 12,   6,   2, 0xff, 0x00, 0x00, 0x00}, // update db g c 
	{0x336c, &op_update,	 12,   6,   3, 0xff, 0x00, 0x00, 0x00}, // update db g d 
	{0x346c, &op_update,	 12,   6,   4, 0xff, 0x00, 0x00, 0x00}, // update db g e 
	{0x356c, &op_update,	 12,   6,   5, 0xff, 0x00, 0x00, 0x00}, // update db g f 
	{0x366c, &op_update,	 12,   6,   6, 0xff, 0x00, 0x00, 0x00}, // update db g g 
	{0x376c, &op_update,	 12,   6,   7, 0xff, 0x00, 0x00, 0x00}, // update db g h 
	{0x386c, &op_update,	 12,   6,   8, 0xff, 0x00, 0x00, 0x00}, // update db g pc 
	{0x396c, &op_update,	 12,   6,   9, 0xff, 0x00, 0x00, 0x00}, // update db g ra 
	{0x3a6c, &op_update,	 12,   6,  10, 0xff, 0x00, 0x00, 0x00}, // update db g sb 
	{0x3b6c, &op_update,	 12,   6,  11, 0xff, 0x00, 0x00, 0x00}, // update db g sp 
	{0x3c6c, &op_update,	 12,   6,  12, 0xff, 0x00, 0x00, 0x00}, // update db g db 
	{0x3d6c, &op_update,	 12,   6,  13, 0xff, 0x00, 0x00, 0x00}, // update db g cb 
	{0x3e6c, &op_update,	 12,   6,  14, 0xff, 0x00, 0x00, 0x00}, // update db g pi 
	{0x3f6c, &op_update,	 12,   6,   8, 0xff, 0x00, 0x04, 0x00}, // update db g <literal> 
	{0x307c, &op_update,	 12,   7,   0, 0xff, 0x00, 0x00, 0x00}, // update db h a 
	{0x317c, &op_update,	 12,   7,   1, 0xff, 0x00, 0x00, 0x00}, // update db h b 
	{0x327c, &op_update,	 12,   7,   2, 0xff, 0x00, 0x00, 0x00}, // update db h c 
	{0x337c, &op_update,	 12,   7,   3, 0xff, 0x00, 0x00, 0x00}, // update db h d 
	{0x347c, &op_update,	 12,   7,   4, 0xff, 0x00, 0x00, 0x00}, // update db h e 
	{0x357c, &op_update,	 12,   7,   5, 0xff, 0x00, 0x00, 0x00}, // update db h f 
	{0x367c, &op_update,	 12,   7,   6, 0xff, 0x00, 0x00, 0x00}, // update db h g 
	{0x377c, &op_update,	 12,   7,   7, 0xff, 0x00, 0x00, 0x00}, // update db h h 
	{0x387c, &op_update,	 12,   7,   8, 0xff, 0x00, 0x00, 0x00}, // update db h pc 
	{0x397c, &op_update,	 12,   7,   9, 0xff, 0x00, 0x00, 0x00}, // update db h ra 
	{0x3a7c, &op_update,	 12,   7,  10, 0xff, 0x00, 0x00, 0x00}, // update db h sb 
	{0x3b7c, &op_update,	 12,   7,  11, 0xff, 0x00, 0x00, 0x00}, // update db h sp 
	{0x3c7c, &op_update,	 12,   7,  12, 0xff, 0x00, 0x00, 0x00}, // update db h db 
	{0x3d7c, &op_update,	 12,   7,  13, 0xff, 0x00, 0x00, 0x00}, // update db h cb 
	{0x3e7c, &op_update,	 12,   7,  14, 0xff, 0x00, 0x00, 0x00}, // update db h pi 
	{0x3f7c, &op_update,	 12,   7,   8, 0xff, 0x00, 0x04, 0x00}, // update db h <literal> 
	{0x308c, &op_update,	 12,   8,   0, 0xff, 0x00, 0x00, 0x00}, // update db pc a 
	{0x318c, &op_update,	 12,   8,   1, 0xff, 0x00, 0x00, 0x00}, // update db pc b 
	{0x328c, &op_update,	 12,   8,   2, 0xff, 0x00, 0x00, 0x00}, // update db pc c 
	{0x338c, &op_update,	 12,   8,   3, 0xff, 0x00, 0x00, 0x00}, // update db pc d 
	{0x348c, &op_update,	 12,   8,   4, 0xff, 0x00, 0x00, 0x00}, // update db pc e 
	{0x358c, &op_update,	 12,   8,   5, 0xff, 0x00, 0x00, 0x00}, // update db pc f 
	{0x368c, &op_update,	 12,   8,   6, 0xff, 0x00, 0x00, 0x00}, // update db pc g 
	{0x378c, &op_update,	 12,   8,   7, 0xff, 0x00, 0x00, 0x00}, // update db pc h 
	{0x388c, &op_update,	 12,   8,   8, 0xff, 0x00, 0x00, 0x00}, // update db pc pc 
	{0x398c, &op_update,	 12,   8,   9, 0xff, 0x00, 0x00, 0x00}, // update db pc ra 
	{0x3a8c, &op_update,	 12,   8,  10, 0xff, 0x00, 0x00, 0x00}, // update db pc sb 
	{0x3b8c, &op_update,	 12,   8,  11, 0xff, 0x00, 0x00, 0x00}, // update db pc sp 
	{0x3c8c, &op_update,	 12,   8,  12, 0xff, 0x00, 0x00, 0x00}, // update db pc db 
	{0x3d8c, &op_update,	 12,   8,  13, 0xff, 0x00, 0x00, 0x00}, // update db pc cb 
	{0x3e8c, &op_update,	 12,   8,  14, 0xff, 0x00, 0x00, 0x00}, // update db pc pi 
	{0x3f8c, &op_update,	 12,   8,   8, 0xff, 0x00, 0x04, 0x00}, // update db pc <literal> 
	{0x309c, &op_update,	 12,   9,   0, 0xff, 0x00, 0x00, 0x00}, // update db ra a 
	{0x319c, &op_update,	 12,   9,   1, 0xff, 0x00, 0x00, 0x00}, // update db ra b 
	{0x329c, &op_update,	 12,   9,   2, 0xff, 0x00, 0x00, 0x00}, // update db ra c 
	{0x339c, &op_update,	 12,   9,   3, 0xff, 0x00, 0x00, 0x00}, // update db ra d 
	{0x349c, &op_update,	 12,   9,   4, 0xff, 0x00, 0x00, 0x00}, // update db ra e 
	{0x359c, &op_update,	 12,   9,   5, 0xff, 0x00, 0x00, 0x00}, // update db ra f 
	{0x369c, &op_update,	 12,   9,   6, 0xff, 0x00, 0x00, 0x00}, // update db ra g 
	{0x379c, &op_update,	 12,   9,   7, 0xff, 0x00, 0x00, 0x00}, // update db ra h 
	{0x389c, &op_update,	 12,   9,   8, 0xff, 0x00, 0x00, 0x00}, // update db ra pc 
	{0x399c, &op_update,	 12,   9,   9, 0xff, 0x00, 0x00, 0x00}, // update db ra ra 
	{0x3a9c, &op_update,	 12,   9,  10, 0xff, 0x00, 0x00, 0x00}, // update db ra sb 
	{0x3b9c, &op_update,	 12,   9,  11, 0xff, 0x00, 0x00, 0x00}, // update db ra sp 
	{0x3c9c, &op_update,	 12,   9,  12, 0xff, 0x00, 0x00, 0x00}, // update db ra db 
	{0x3d9c, &op_update,	 12,   9,  13, 0xff, 0x00, 0x00, 0x00}, // update db ra cb 
	{0x3e9c, &op_update,	 12,   9,  14, 0xff, 0x00, 0x00, 0x00}, // update db ra pi 
	{0x3f9c, &op_update,	 12,   9,   8, 0xff, 0x00, 0x04, 0x00}, // update db ra <literal> 
	{0x30ac, &op_update,	 12,  10,   0, 0xff, 0x00, 0x00, 0x00}, // update db sb a 
	{0x31ac, &op_update,	 12,  10,   1, 0xff, 0x00, 0x00, 0x00}, // update db sb b 
	{0x32ac, &op_update,	 12,  10,   2, 0xff, 0x00, 0x00, 0x00}, // update db sb c 
	{0x33ac, &op_update,	 12,  10,   3, 0xff, 0x00, 0x00, 0x00}, // update db sb d 
	{0x34ac, &op_update,	 12,  10,   4, 0xff, 0x00, 0x00, 0x00}, // update db sb e 
	{0x35ac, &op_update,	 12,  10,   5, 0xff, 0x00, 0x00, 0x00}, // update db sb f 
	{0x36ac, &op_update,	 12,  10,   6, 0xff, 0x00, 0x00, 0x00}, // update db sb g 
	{0x37ac, &op_update,	 12,  10,   7, 0xff, 0x00, 0x00, 0x00}, // update db sb h 
	{0x38ac, &op_update,	 12,  10,   8, 0xff, 0x00, 0x00, 0x00}, // update db sb pc 
	{0x39ac, &op_update,	 12,  10,   9, 0xff, 0x00, 0x00, 0x00}, // update db sb ra 
	{0x3aac, &op_update,	 12,  10,  10, 0xff, 0x00, 0x00, 0x00}, // update db sb sb 
	{0x3bac, &op_update,	 12,  10,  11, 0xff, 0x00, 0x00, 0x00}, // update db sb sp 
	{0x3cac, &op_update,	 12,  10,  12, 0xff, 0x00, 0x00, 0x00}, // update db sb db 
	{0x3dac, &op_update,	 12,  10,  13, 0xff, 0x00, 0x00, 0x00}, // update db sb cb 
	{0x3eac, &op_update,	 12,  10,  14, 0xff, 0x00, 0x00, 0x00}, // update db sb pi 
	{0x3fac, &op_update,	 12,  10,   8, 0xff, 0x00, 0x04, 0x00}, // update db sb <literal> 
	{0x30bc, &op_update,	 12,  11,   0, 0xff, 0x00, 0x00, 0x00}, // update db sp a 
	{0x31bc, &op_update,	 12,  11,   1, 0xff, 0x00, 0x00, 0x00}, // update db sp b 
	{0x32bc, &op_update,	 12,  11,   2, 0xff, 0x00, 0x00, 0x00}, // update db sp c 
	{0x33bc, &op_update,	 12,  11,   3, 0xff, 0x00, 0x00, 0x00}, // update db sp d 
	{0x34bc, &op_update,	 12,  11,   4, 0xff, 0x00, 0x00, 0x00}, // update db sp e 
	{0x35bc, &op_update,	 12,  11,   5, 0xff, 0x00, 0x00, 0x00}, // update db sp f 
	{0x36bc, &op_update,	 12,  11,   6, 0xff, 0x00, 0x00, 0x00}, // update db sp g 
	{0x37bc, &op_update,	 12,  11,   7, 0xff, 0x00, 0x00, 0x00}, // update db sp h 
	{0x38bc, &op_update,	 12,  11,   8, 0xff, 0x00, 0x00, 0x00}, // update db sp pc 
	{0x39bc, &op_update,	 12,  11,   9, 0xff, 0x00, 0x00, 0x00}, // update db sp ra 
	{0x3abc, &op_update,	 12,  11,  10, 0xff, 0x00, 0x00, 0x00}, // update db sp sb 
	{0x3bbc, &op_update,	 12,  11,  11, 0xff, 0x00, 0x00, 0x00}, // update db sp sp 
	{0x3cbc, &op_update,	 12,  11,  12, 0xff, 0x00, 0x00, 0x00}, // update db sp db 
	{0x3dbc, &op_update,	 12,  11,  13, 0xff, 0x00, 0x00, 0x00}, // update db sp cb 
	{0x3ebc, &op_update,	 12,  11,  14, 0xff, 0x00, 0x00, 0x00}, // update db sp pi 
	{0x3fbc, &op_update,	 12,  11,   8, 0xff, 0x00, 0x04, 0x00}, // update db sp <literal> 
	{0x30cc, &op_update,	 12,  12,   0, 0xff, 0x00, 0x00, 0x00}, // update db db a 
	{0x31cc, &op_update,	 12,  12,   1, 0xff, 0x00, 0x00, 0x00}, // update db db b 
	{0x32cc, &op_update,	 12,  12,   2, 0xff, 0x00, 0x00, 0x00}, // update db db c 
	{0x33cc, &op_update,	 12,  12,   3, 0xff, 0x00, 0x00, 0x00}, // update db db d 
	{0x34cc, &op_update,	 12,  12,   4, 0xff, 0x00, 0x00, 0x00}, // update db db e 
	{0x35cc, &op_update,	 12,  12,   5, 0xff, 0x00, 0x00, 0x00}, // update db db f 
	{0x36cc, &op_update,	 12,  12,   6, 0xff, 0x00, 0x00, 0x00}, // update db db g 
	{0x37cc, &op_update,	 12,  12,   7, 0xff, 0x00, 0x00, 0x00}, // update db db h 
	{0x38cc, &op_update,	 12,  12,   8, 0xff, 0x00, 0x00, 0x00}, // update db db pc 
	{0x39cc, &op_update,	 12,  12,   9, 0xff, 0x00, 0x00, 0x00}, // update db db ra 
	{0x3acc, &op_update,	 12,  12,  10, 0xff, 0x00, 0x00, 0x00}, // update db db sb 
	{0x3bcc, &op_update,	 12,  12,  11, 0xff, 0x00, 0x00, 0x00}, // update db db sp 
	{0x3ccc, &op_update,	 12,  12,  12, 0xff, 0x00, 0x00, 0x00}, // update db db db 
	{0x3dcc, &op_update,	 12,  12,  13, 0xff, 0x00, 0x00, 0x00}, // update db db cb 
	{0x3ecc, &op_update,	 12,  12,  14, 0xff, 0x00, 0x00, 0x00}, // update db db pi 
	{0x3fcc, &op_update,	 12,  12,   8, 0xff, 0x00, 0x04, 0x00}, // update db db <literal> 
	{0x30dc, &op_update,	 12,  13,   0, 0xff, 0x00, 0x00, 0x00}, // update db cb a 
	{0x31dc, &op_update,	 12,  13,   1, 0xff, 0x00, 0x00, 0x00}, // update db cb b 
	{0x32dc, &op_update,	 12,  13,   2, 0xff, 0x00, 0x00, 0x00}, // update db cb c 
	{0x33dc, &op_update,	 12,  13,   3, 0xff, 0x00, 0x00, 0x00}, // update db cb d 
	{0x34dc, &op_update,	 12,  13,   4, 0xff, 0x00, 0x00, 0x00}, // update db cb e 
	{0x35dc, &op_update,	 12,  13,   5, 0xff, 0x00, 0x00, 0x00}, // update db cb f 
	{0x36dc, &op_update,	 12,  13,   6, 0xff, 0x00, 0x00, 0x00}, // update db cb g 
	{0x37dc, &op_update,	 12,  13,   7, 0xff, 0x00, 0x00, 0x00}, // update db cb h 
	{0x38dc, &op_update,	 12,  13,   8, 0xff, 0x00, 0x00, 0x00}, // update db cb pc 
	{0x39dc, &op_update,	 12,  13,   9, 0xff, 0x00, 0x00, 0x00}, // update db cb ra 
	{0x3adc, &op_update,	 12,  13,  10, 0xff, 0x00, 0x00, 0x00}, // update db cb sb 
	{0x3bdc, &op_update,	 12,  13,  11, 0xff, 0x00, 0x00, 0x00}, // update db cb sp 
	{0x3cdc, &op_update,	 12,  13,  12, 0xff, 0x00, 0x00, 0x00}, // update db cb db 
	{0x3ddc, &op_update,	 12,  13,  13, 0xff, 0x00, 0x00, 0x00}, // update db cb cb 
	{0x3edc, &op_update,	 12,  13,  14, 0xff, 0x00, 0x00, 0x00}, // update db cb pi 
	{0x3fdc, &op_update,	 12,  13,   8, 0xff, 0x00, 0x04, 0x00}, // update db cb <literal> 
	{0x30ec, &op_update,	 12,  14,   0, 0xff, 0x00, 0x00, 0x00}, // update db pi a 
	{0x31ec, &op_update,	 12,  14,   1, 0xff, 0x00, 0x00, 0x00}, // update db pi b 
	{0x32ec, &op_update,	 12,  14,   2, 0xff, 0x00, 0x00, 0x00}, // update db pi c 
	{0x33ec, &op_update,	 12,  14,   3, 0xff, 0x00, 0x00, 0x00}, // update db pi d 
	{0x34ec, &op_update,	 12,  14,   4, 0xff, 0x00, 0x00, 0x00}, // update db pi e 
	{0x35ec, &op_update,	 12,  14,   5, 0xff, 0x00, 0x00, 0x00}, // update db pi f 
	{0x36ec, &op_update,	 12,  14,   6, 0xff, 0x00, 0x00, 0x00}, // update db pi g 
	{0x37ec, &op_update,	 12,  14,   7, 0xff, 0x00, 0x00, 0x00}, // update db pi h 
	{0x38ec, &op_update,	 12,  14,   8, 0xff, 0x00, 0x00, 0x00}, // update db pi pc 
	{0x39ec, &op_update,	 12,  14,   9, 0xff, 0x00, 0x00, 0x00}, // update db pi ra 
	{0x3aec, &op_update,	 12,  14,  10, 0xff, 0x00, 0x00, 0x00}, // update db pi sb 
	{0x3bec, &op_update,	 12,  14,  11, 0xff, 0x00, 0x00, 0x00}, // update db pi sp 
	{0x3cec, &op_update,	 12,  14,  12, 0xff, 0x00, 0x00, 0x00}, // update db pi db 
	{0x3dec, &op_update,	 12,  14,  13, 0xff, 0x00, 0x00, 0x00}, // update db pi cb 
	{0x3eec, &op_update,	 12,  14,  14, 0xff, 0x00, 0x00, 0x00}, // update db pi pi 
	{0x3fec, &op_update,	 12,  14,   8, 0xff, 0x00, 0x04, 0x00}, // update db pi <literal> 
	{0x30fc, &op_update,	 12,  15,   0, 0xff, 0x00, 0x00, 0x00}, // update db status a 
	{0x31fc, &op_update,	 12,  15,   1, 0xff, 0x00, 0x00, 0x00}, // update db status b 
	{0x32fc, &op_update,	 12,  15,   2, 0xff, 0x00, 0x00, 0x00}, // update db status c 
	{0x33fc, &op_update,	 12,  15,   3, 0xff, 0x00, 0x00, 0x00}, // update db status d 
	{0x34fc, &op_update,	 12,  15,   4, 0xff, 0x00, 0x00, 0x00}, // update db status e 
	{0x35fc, &op_update,	 12,  15,   5, 0xff, 0x00, 0x00, 0x00}, // update db status f 
	{0x36fc, &op_update,	 12,  15,   6, 0xff, 0x00, 0x00, 0x00}, // update db status g 
	{0x37fc, &op_update,	 12,  15,   7, 0xff, 0x00, 0x00, 0x00}, // update db status h 
	{0x38fc, &op_update,	 12,  15,   8, 0xff, 0x00, 0x00, 0x00}, // update db status pc 
	{0x39fc, &op_update,	 12,  15,   9, 0xff, 0x00, 0x00, 0x00}, // update db status ra 
	{0x3afc, &op_update,	 12,  15,  10, 0xff, 0x00, 0x00, 0x00}, // update db status sb 
	{0x3bfc, &op_update,	 12,  15,  11, 0xff, 0x00, 0x00, 0x00}, // update db status sp 
	{0x3cfc, &op_update,	 12,  15,  12, 0xff, 0x00, 0x00, 0x00}, // update db status db 
	{0x3dfc, &op_update,	 12,  15,  13, 0xff, 0x00, 0x00, 0x00}, // update db status cb 
	{0x3efc, &op_update,	 12,  15,  14, 0xff, 0x00, 0x00, 0x00}, // update db status pi 
	{0x3ffc, &op_update,	 12,  15,   8, 0xff, 0x00, 0x04, 0x00}, // update db status <literal> 
	{0x300d, &op_update,	 13,   0,   0, 0xff, 0x00, 0x00, 0x00}, // update cb a a 
	{0x310d, &op_update,	 13,   0,   1, 0xff, 0x00, 0x00, 0x00}, // update cb a b 
	{0x320d, &op_update,	 13,   0,   2, 0xff, 0x00, 0x00, 0x00}, // update cb a c 
	{0x330d, &op_update,	 13,   0,   3, 0xff, 0x00, 0x00, 0x00}, // update cb a d 
	{0x340d, &op_update,	 13,   0,   4, 0xff, 0x00, 0x00, 0x00}, // update cb a e 
	{0x350d, &op_update,	 13,   0,   5, 0xff, 0x00, 0x00, 0x00}, // update cb a f 
	{0x360d, &op_update,	 13,   0,   6, 0xff, 0x00, 0x00, 0x00}, // update cb a g 
	{0x370d, &op_update,	 13,   0,   7, 0xff, 0x00, 0x00, 0x00}, // update cb a h 
	{0x380d, &op_update,	 13,   0,   8, 0xff, 0x00, 0x00, 0x00}, // update cb a pc 
	{0x390d, &op_update,	 13,   0,   9, 0xff, 0x00, 0x00, 0x00}, // update cb a ra 
	{0x3a0d, &op_update,	 13,   0,  10, 0xff, 0x00, 0x00, 0x00}, // update cb a sb 
	{0x3b0d, &op_update,	 13,   0,  11, 0xff, 0x00, 0x00, 0x00}, // update cb a sp 
	{0x3c0d, &op_update,	 13,   0,  12, 0xff, 0x00, 0x00, 0x00}, // update cb a db 
	{0x3d0d, &op_update,	 13,   0,  13, 0xff, 0x00, 0x00, 0x00}, // update cb a cb 
	{0x3e0d, &op_update,	 13,   0,  14, 0xff, 0x00, 0x00, 0x00}, // update cb a pi 
	{0x3f0d, &op_update,	 13,   0,   8, 0xff, 0x00, 0x04, 0x00}, // update cb a <literal> 
	{0x301d, &op_update,	 13,   1,   0, 0xff, 0x00, 0x00, 0x00}, // update cb b a 
	{0x311d, &op_update,	 13,   1,   1, 0xff, 0x00, 0x00, 0x00}, // update cb b b 
	{0x321d, &op_update,	 13,   1,   2, 0xff, 0x00, 0x00, 0x00}, // update cb b c 
	{0x331d, &op_update,	 13,   1,   3, 0xff, 0x00, 0x00, 0x00}, // update cb b d 
	{0x341d, &op_update,	 13,   1,   4, 0xff, 0x00, 0x00, 0x00}, // update cb b e 
	{0x351d, &op_update,	 13,   1,   5, 0xff, 0x00, 0x00, 0x00}, // update cb b f 
	{0x361d, &op_update,	 13,   1,   6, 0xff, 0x00, 0x00, 0x00}, // update cb b g 
	{0x371d, &op_update,	 13,   1,   7, 0xff, 0x00, 0x00, 0x00}, // update cb b h 
	{0x381d, &op_update,	 13,   1,   8, 0xff, 0x00, 0x00, 0x00}, // update cb b pc 
	{0x391d, &op_update,	 13,   1,   9, 0xff, 0x00, 0x00, 0x00}, // update cb b ra 
	{0x3a1d, &op_update,	 13,   1,  10, 0xff, 0x00, 0x00, 0x00}, // update cb b sb 
	{0x3b1d, &op_update,	 13,   1,  11, 0xff, 0x00, 0x00, 0x00}, // update cb b sp 
	{0x3c1d, &op_update,	 13,   1,  12, 0xff, 0x00, 0x00, 0x00}, // update cb b db 
	{0x3d1d, &op_update,	 13,   1,  13, 0xff, 0x00, 0x00, 0x00}, // update cb b cb 
	{0x3e1d, &op_update,	 13,   1,  14, 0xff, 0x00, 0x00, 0x00}, // update cb b pi 
	{0x3f1d, &op_update,	 13,   1,   8, 0xff, 0x00, 0x04, 0x00}, // update cb b <literal> 
	{0x302d, &op_update,	 13,   2,   0, 0xff, 0x00, 0x00, 0x00}, // update cb c a 
	{0x312d, &op_update,	 13,   2,   1, 0xff, 0x00, 0x00, 0x00}, // update cb c b 
	{0x322d, &op_update,	 13,   2,   2, 0xff, 0x00, 0x00, 0x00}, // update cb c c 
	{0x332d, &op_update,	 13,   2,   3, 0xff, 0x00, 0x00, 0x00}, // update cb c d 
	{0x342d, &op_update,	 13,   2,   4, 0xff, 0x00, 0x00, 0x00}, // update cb c e 
	{0x352d, &op_update,	 13,   2,   5, 0xff, 0x00, 0x00, 0x00}, // update cb c f 
	{0x362d, &op_update,	 13,   2,   6, 0xff, 0x00, 0x00, 0x00}, // update cb c g 
	{0x372d, &op_update,	 13,   2,   7, 0xff, 0x00, 0x00, 0x00}, // update cb c h 
	{0x382d, &op_update,	 13,   2,   8, 0xff, 0x00, 0x00, 0x00}, // update cb c pc 
	{0x392d, &op_update,	 13,   2,   9, 0xff, 0x00, 0x00, 0x00}, // update cb c ra 
	{0x3a2d, &op_update,	 13,   2,  10, 0xff, 0x00, 0x00, 0x00}, // update cb c sb 
	{0x3b2d, &op_update,	 13,   2,  11, 0xff, 0x00, 0x00, 0x00}, // update cb c sp 
	{0x3c2d, &op_update,	 13,   2,  12, 0xff, 0x00, 0x00, 0x00}, // update cb c db 
	{0x3d2d, &op_update,	 13,   2,  13, 0xff, 0x00, 0x00, 0x00}, // update cb c cb 
	{0x3e2d, &op_update,	 13,   2,  14, 0xff, 0x00, 0x00, 0x00}, // update cb c pi 
	{0x3f2d, &op_update,	 13,   2,   8, 0xff, 0x00, 0x04, 0x00}, // update cb c <literal> 
	{0x303d, &op_update,	 13,   3,   0, 0xff, 0x00, 0x00, 0x00}, // update cb d a 
	{0x313d, &op_update,	 13,   3,   1, 0xff, 0x00, 0x00, 0x00}, // update cb d b 
	{0x323d, &op_update,	 13,   3,   2, 0xff, 0x00, 0x00, 0x00}, // update cb d c 
	{0x333d, &op_update,	 13,   3,   3, 0xff, 0x00, 0x00, 0x00}, // update cb d d 
	{0x343d, &op_update,	 13,   3,   4, 0xff, 0x00, 0x00, 0x00}, // update cb d e 
	{0x353d, &op_update,	 13,   3,   5, 0xff, 0x00, 0x00, 0x00}, // update cb d f 
	{0x363d, &op_update,	 13,   3,   6, 0xff, 0x00, 0x00, 0x00}, // update cb d g 
	{0x373d, &op_update,	 13,   3,   7, 0xff, 0x00, 0x00, 0x00}, // update cb d h 
	{0x383d, &op_update,	 13,   3,   8, 0xff, 0x00, 0x00, 0x00}, // update cb d pc 
	{0x393d, &op_update,	 13,   3,   9, 0xff, 0x00, 0x00, 0x00}, // update cb d ra 
	{0x3a3d, &op_update,	 13,   3,  10, 0xff, 0x00, 0x00, 0x00}, // update cb d sb 
	{0x3b3d, &op_update,	 13,   3,  11, 0xff, 0x00, 0x00, 0x00}, // update cb d sp 
	{0x3c3d, &op_update,	 13,   3,  12, 0xff, 0x00, 0x00, 0x00}, // update cb d db 
	{0x3d3d, &op_update,	 13,   3,  13, 0xff, 0x00, 0x00, 0x00}, // update cb d cb 
	{0x3e3d, &op_update,	 13,   3,  14, 0xff, 0x00, 0x00, 0x00}, // update cb d pi 
	{0x3f3d, &op_update,	 13,   3,   8, 0xff, 0x00, 0x04, 0x00}, // update cb d <literal> 
	{0x304d, &op_update,	 13,   4,   0, 0xff, 0x00, 0x00, 0x00}, // update cb e a 
	{0x314d, &op_update,	 13,   4,   1, 0xff, 0x00, 0x00, 0x00}, // update cb e b 
	{0x324d, &op_update,	 13,   4,   2, 0xff, 0x00, 0x00, 0x00}, // update cb e c 
	{0x334d, &op_update,	 13,   4,   3, 0xff, 0x00, 0x00, 0x00}, // update cb e d 
	{0x344d, &op_update,	 13,   4,   4, 0xff, 0x00, 0x00, 0x00}, // update cb e e 
	{0x354d, &op_update,	 13,   4,   5, 0xff, 0x00, 0x00, 0x00}, // update cb e f 
	{0x364d, &op_update,	 13,   4,   6, 0xff, 0x00, 0x00, 0x00}, // update cb e g 
	{0x374d, &op_update,	 13,   4,   7, 0xff, 0x00, 0x00, 0x00}, // update cb e h 
	{0x384d, &op_update,	 13,   4,   8, 0xff, 0x00, 0x00, 0x00}, // update cb e pc 
	{0x394d, &op_update,	 13,   4,   9, 0xff, 0x00, 0x00, 0x00}, // update cb e ra 
	{0x3a4d, &op_update,	 13,   4,  10, 0xff, 0x00, 0x00, 0x00}, // update cb e sb 
	{0x3b4d, &op_update,	 13,   4,  11, 0xff, 0x00, 0x00, 0x00}, // update cb e sp 
	{0x3c4d, &op_update,	 13,   4,  12, 0xff, 0x00, 0x00, 0x00}, // update cb e db 
	{0x3d4d, &op_update,	 13,   4,  13, 0xff, 0x00, 0x00, 0x00}, // update cb e cb 
	{0x3e4d, &op_update,	 13,   4,  14, 0xff, 0x00, 0x00, 0x00}, // update cb e pi 
	{0x3f4d, &op_update,	 13,   4,   8, 0xff, 0x00, 0x04, 0x00}, // update cb e <literal> 
	{0x305d, &op_update,	 13,   5,   0, 0xff, 0x00, 0x00, 0x00}, // update cb f a 
	{0x315d, &op_update,	 13,   5,   1, 0xff, 0x00, 0x00, 0x00}, // update cb f b 
	{0x325d, &op_update,	 13,   5,   2, 0xff, 0x00, 0x00, 0x00}, // update cb f c 
	{0x335d, &op_update,	 13,   5,   3, 0xff, 0x00, 0x00, 0x00}, // update cb f d 
	{0x345d, &op_update,	 13,   5,   4, 0xff, 0x00, 0x00, 0x00}, // update cb f e 
	{0x355d, &op_update,	 13,   5,   5, 0xff, 0x00, 0x00, 0x00}, // update cb f f 
	{0x365d, &op_update,	 13,   5,   6, 0xff, 0x00, 0x00, 0x00}, // update cb f g 
	{0x375d, &op_update,	 13,   5,   7, 0xff, 0x00, 0x00, 0x00}, // update cb f h 
	{0x385d, &op_update,	 13,   5,   8, 0xff, 0x00, 0x00, 0x00}, // update cb f pc 
	{0x395d, &op_update,	 13,   5,   9, 0xff, 0x00, 0x00, 0x00}, // update cb f ra 
	{0x3a5d, &op_update,	 13,   5,  10, 0xff, 0x00, 0x00, 0x00}, // update cb f sb 
	{0x3b5d, &op_update,	 13,   5,  11, 0xff, 0x00, 0x00, 0x00}, // update cb f sp 
	{0x3c5d, &op_update,	 13,   5,  12, 0xff, 0x00, 0x00, 0x00}, // update cb f db 
	{0x3d5d, &op_update,	 13,   5,  13, 0xff, 0x00, 0x00, 0x00}, // update cb f cb 
	{0x3e5d, &op_update,	 13,   5,  14, 0xff, 0x00, 0x00, 0x00}, // update cb f pi 
	{0x3f5d, &op_update,	 13,   5,   8, 0xff, 0x00, 0x04, 0x00}, // update cb f <literal> 
	{0x306d, &op_update,	 13,   6,   0, 0xff, 0x00, 0x00, 0x00}, // update cb g a 
	{0x316d, &op_update,	 13,   6,   1, 0xff, 0x00, 0x00, 0x00}, // update cb g b 
	{0x326d, &op_update,	 13,   6,   2, 0xff, 0x00, 0x00, 0x00}, // update cb g c 
	{0x336d, &op_update,	 13,   6,   3, 0xff, 0x00, 0x00, 0x00}, // update cb g d 
	{0x346d, &op_update,	 13,   6,   4, 0xff, 0x00, 0x00, 0x00}, // update cb g e 
	{0x356d, &op_update,	 13,   6,   5, 0xff, 0x00, 0x00, 0x00}, // update cb g f 
	{0x366d, &op_update,	 13,   6,   6, 0xff, 0x00, 0x00, 0x00}, // update cb g g 
	{0x376d, &op_update,	 13,   6,   7, 0xff, 0x00, 0x00, 0x00}, // update cb g h 
	{0x386d, &op_update,	 13,   6,   8, 0xff, 0x00, 0x00, 0x00}, // update cb g pc 
	{0x396d, &op_update,	 13,   6,   9, 0xff, 0x00, 0x00, 0x00}, // update cb g ra 
	{0x3a6d, &op_update,	 13,   6,  10, 0xff, 0x00, 0x00, 0x00}, // update cb g sb 
	{0x3b6d, &op_update,	 13,   6,  11, 0xff, 0x00, 0x00, 0x00}, // update cb g sp 
	{0x3c6d, &op_update,	 13,   6,  12, 0xff, 0x00, 0x00, 0x00}, // update cb g db 
	{0x3d6d, &op_update,	 13,   6,  13, 0xff, 0x00, 0x00, 0x00}, // update cb g cb 
	{0x3e6d, &op_update,	 13,   6,  14, 0xff, 0x00, 0x00, 0x00}, // update cb g pi 
	{0x3f6d, &op_update,	 13,   6,   8, 0xff, 0x00, 0x04, 0x00}, // update cb g <literal> 
	{0x307d, &op_update,	 13,   7,   0, 0xff, 0x00, 0x00, 0x00}, // update cb h a 
	{0x317d, &op_update,	 13,   7,   1, 0xff, 0x00, 0x00, 0x00}, // update cb h b 
	{0x327d, &op_update,	 13,   7,   2, 0xff, 0x00, 0x00, 0x00}, // update cb h c 
	{0x337d, &op_update,	 13,   7,   3, 0xff, 0x00, 0x00, 0x00}, // update cb h d 
	{0x347d, &op_update,	 13,   7,   4, 0xff, 0x00, 0x00, 0x00}, // update cb h e 
	{0x357d, &op_update,	 13,   7,   5, 0xff, 0x00, 0x00, 0x00}, // update cb h f 
	{0x367d, &op_update,	 13,   7,   6, 0xff, 0x00, 0x00, 0x00}, // update cb h g 
	{0x377d, &op_update,	 13,   7,   7, 0xff, 0x00, 0x00, 0x00}, // update cb h h 
	{0x387d, &op_update,	 13,   7,   8, 0xff, 0x00, 0x00, 0x00}, // update cb h pc 
	{0x397d, &op_update,	 13,   7,   9, 0xff, 0x00, 0x00, 0x00}, // update cb h ra 
	{0x3a7d, &op_update,	 13,   7,  10, 0xff, 0x00, 0x00, 0x00}, // update cb h sb 
	{0x3b7d, &op_update,	 13,   7,  11, 0xff, 0x00, 0x00, 0x00}, // update cb h sp 
	{0x3c7d, &op_update,	 13,   7,  12, 0xff, 0x00, 0x00, 0x00}, // update cb h db 
	{0x3d7d, &op_update,	 13,   7,  13, 0xff, 0x00, 0x00, 0x00}, // update cb h cb 
	{0x3e7d, &op_update,	 13,   7,  14, 0xff, 0x00, 0x00, 0x00}, // update cb h pi 
	{0x3f7d, &op_update,	 13,   7,   8, 0xff, 0x00, 0x04, 0x00}, // update cb h <literal> 
	{0x308d, &op_update,	 13,   8,   0, 0xff, 0x00, 0x00, 0x00}, // update cb pc a 
	{0x318d, &op_update,	 13,   8,   1, 0xff, 0x00, 0x00, 0x00}, // update cb pc b 
	{0x328d, &op_update,	 13,   8,   2, 0xff, 0x00, 0x00, 0x00}, // update cb pc c 
	{0x338d, &op_update,	 13,   8,   3, 0xff, 0x00, 0x00, 0x00}, // update cb pc d 
	{0x348d, &op_update,	 13,   8,   4, 0xff, 0x00, 0x00, 0x00}, // update cb pc e 
	{0x358d, &op_update,	 13,   8,   5, 0xff, 0x00, 0x00, 0x00}, // update cb pc f 
	{0x368d, &op_update,	 13,   8,   6, 0xff, 0x00, 0x00, 0x00}, // update cb pc g 
	{0x378d, &op_update,	 13,   8,   7, 0xff, 0x00, 0x00, 0x00}, // update cb pc h 
	{0x388d, &op_update,	 13,   8,   8, 0xff, 0x00, 0x00, 0x00}, // update cb pc pc 
	{0x398d, &op_update,	 13,   8,   9, 0xff, 0x00, 0x00, 0x00}, // update cb pc ra 
	{0x3a8d, &op_update,	 13,   8,  10, 0xff, 0x00, 0x00, 0x00}, // update cb pc sb 
	{0x3b8d, &op_update,	 13,   8,  11, 0xff, 0x00, 0x00, 0x00}, // update cb pc sp 
	{0x3c8d, &op_update,	 13,   8,  12, 0xff, 0x00, 0x00, 0x00}, // update cb pc db 
	{0x3d8d, &op_update,	 13,   8,  13, 0xff, 0x00, 0x00, 0x00}, // update cb pc cb 
	{0x3e8d, &op_update,	 13,   8,  14, 0xff, 0x00, 0x00, 0x00}, // update cb pc pi 
	{0x3f8d, &op_update,	 13,   8,   8, 0xff, 0x00, 0x04, 0x00}, // update cb pc <literal> 
	{0x309d, &op_update,	 13,   9,   0, 0xff, 0x00, 0x00, 0x00}, // update cb ra a 
	{0x319d, &op_update,	 13,   9,   1, 0xff, 0x00, 0x00, 0x00}, // update cb ra b 
	{0x329d, &op_update,	 13,   9,   2, 0xff, 0x00, 0x00, 0x00}, // update cb ra c 
	{0x339d, &op_update,	 13,   9,   3, 0xff, 0x00, 0x00, 0x00}, // update cb ra d 
	{0x349d, &op_update,	 13,   9,   4, 0xff, 0x00, 0x00, 0x00}, // update cb ra e 
	{0x359d, &op_update,	 13,   9,   5, 0xff, 0x00, 0x00, 0x00}, // update cb ra f 
	{0x369d, &op_update,	 13,   9,   6, 0xff, 0x00, 0x00, 0x00}, // update cb ra g 
	{0x379d, &op_update,	 13,   9,   7, 0xff, 0x00, 0x00, 0x00}, // update cb ra h 
	{0x389d, &op_update,	 13,   9,   8, 0xff, 0x00, 0x00, 0x00}, // update cb ra pc 
	{0x399d, &op_update,	 13,   9,   9, 0xff, 0x00, 0x00, 0x00}, // update cb ra ra 
	{0x3a9d, &op_update,	 13,   9,  10, 0xff, 0x00, 0x00, 0x00}, // update cb ra sb 
	{0x3b9d, &op_update,	 13,   9,  11, 0xff, 0x00, 0x00, 0x00}, // update cb ra sp 
	{0x3c9d, &op_update,	 13,   9,  12, 0xff, 0x00, 0x00, 0x00}, // update cb ra db 
	{0x3d9d, &op_update,	 13,   9,  13, 0xff, 0x00, 0x00, 0x00}, // update cb ra cb 
	{0x3e9d, &op_update,	 13,   9,  14, 0xff, 0x00, 0x00, 0x00}, // update cb ra pi 
	{0x3f9d, &op_update,	 13,   9,   8, 0xff, 0x00, 0x04, 0x00}, // update cb ra <literal> 
	{0x30ad, &op_update,	 13,  10,   0, 0xff, 0x00, 0x00, 0x00}, // update cb sb a 
	{0x31ad, &op_update,	 13,  10,   1, 0xff, 0x00, 0x00, 0x00}, // update cb sb b 
	{0x32ad, &op_update,	 13,  10,   2, 0xff, 0x00, 0x00, 0x00}, // update cb sb c 
	{0x33ad, &op_update,	 13,  10,   3, 0xff, 0x00, 0x00, 0x00}, // update cb sb d 
	{0x34ad, &op_update,	 13,  10,   4, 0xff, 0x00, 0x00, 0x00}, // update cb sb e 
	{0x35ad, &op_update,	 13,  10,   5, 0xff, 0x00, 0x00, 0x00}, // update cb sb f 
	{0x36ad, &op_update,	 13,  10,   6, 0xff, 0x00, 0x00, 0x00}, // update cb sb g 
	{0x37ad, &op_update,	 13,  10,   7, 0xff, 0x00, 0x00, 0x00}, // update cb sb h 
	{0x38ad, &op_update,	 13,  10,   8, 0xff, 0x00, 0x00, 0x00}, // update cb sb pc 
	{0x39ad, &op_update,	 13,  10,   9, 0xff, 0x00, 0x00, 0x00}, // update cb sb ra 
	{0x3aad, &op_update,	 13,  10,  10, 0xff, 0x00, 0x00, 0x00}, // update cb sb sb 
	{0x3bad, &op_update,	 13,  10,  11, 0xff, 0x00, 0x00, 0x00}, // update cb sb sp 
	{0x3cad, &op_update,	 13,  10,  12, 0xff, 0x00, 0x00, 0x00}, // update cb sb db 
	{0x3dad, &op_update,	 13,  10,  13, 0xff, 0x00, 0x00, 0x00}, // update cb sb cb 
	{0x3ead, &op_update,	 13,  10,  14, 0xff, 0x00, 0x00, 0x00}, // update cb sb pi 
	{0x3fad, &op_update,	 13,  10,   8, 0xff, 0x00, 0x04, 0x00}, // update cb sb <literal> 
	{0x30bd, &op_update,	 13,  11,   0, 0xff, 0x00, 0x00, 0x00}, // update cb sp a 
	{0x31bd, &op_update,	 13,  11,   1, 0xff, 0x00, 0x00, 0x00}, // update cb sp b 
	{0x32bd, &op_update,	 13,  11,   2, 0xff, 0x00, 0x00, 0x00}, // update cb sp c 
	{0x33bd, &op_update,	 13,  11,   3, 0xff, 0x00, 0x00, 0x00}, // update cb sp d 
	{0x34bd, &op_update,	 13,  11,   4, 0xff, 0x00, 0x00, 0x00}, // update cb sp e 
	{0x35bd, &op_update,	 13,  11,   5, 0xff, 0x00, 0x00, 0x00}, // update cb sp f 
	{0x36bd, &op_update,	 13,  11,   6, 0xff, 0x00, 0x00, 0x00}, // update cb sp g 
	{0x37bd, &op_update,	 13,  11,   7, 0xff, 0x00, 0x00, 0x00}, // update cb sp h 
	{0x38bd, &op_update,	 13,  11,   8, 0xff, 0x00, 0x00, 0x00}, // update cb sp pc 
	{0x39bd, &op_update,	 13,  11,   9, 0xff, 0x00, 0x00, 0x00}, // update cb sp ra 
	{0x3abd, &op_update,	 13,  11,  10, 0xff, 0x00, 0x00, 0x00}, // update cb sp sb 
	{0x3bbd, &op_update,	 13,  11,  11, 0xff, 0x00, 0x00, 0x00}, // update cb sp sp 
	{0x3cbd, &op_update,	 13,  11,  12, 0xff, 0x00, 0x00, 0x00}, // update cb sp db 
	{0x3dbd, &op_update,	 13,  11,  13, 0xff, 0x00, 0x00, 0x00}, // update cb sp cb 
	{0x3ebd, &op_update,	 13,  11,  14, 0xff, 0x00, 0x00, 0x00}, // update cb sp pi 
	{0x3fbd, &op_update,	 13,  11,   8, 0xff, 0x00, 0x04, 0x00}, // update cb sp <literal> 
	{0x30cd, &op_update,	 13,  12,   0, 0xff, 0x00, 0x00, 0x00}, // update cb db a 
	{0x31cd, &op_update,	 13,  12,   1, 0xff, 0x00, 0x00, 0x00}, // update cb db b 
	{0x32cd, &op_update,	 13,  12,   2, 0xff, 0x00, 0x00, 0x00}, // update cb db c 
	{0x33cd, &op_update,	 13,  12,   3, 0xff, 0x00, 0x00, 0x00}, // update cb db d 
	{0x34cd, &op_update,	 13,  12,   4, 0xff, 0x00, 0x00, 0x00}, // update cb db e 
	{0x35cd, &op_update,	 13,  12,   5, 0xff, 0x00, 0x00, 0x00}, // update cb db f 
	{0x36cd, &op_update,	 13,  12,   6, 0xff, 0x00, 0x00, 0x00}, // update cb db g 
	{0x37cd, &op_update,	 13,  12,   7, 0xff, 0x00, 0x00, 0x00}, // update cb db h 
	{0x38cd, &op_update,	 13,  12,   8, 0xff, 0x00, 0x00, 0x00}, // update cb db pc 
	{0x39cd, &op_update,	 13,  12,   9, 0xff, 0x00, 0x00, 0x00}, // update cb db ra 
	{0x3acd, &op_update,	 13,  12,  10, 0xff, 0x00, 0x00, 0x00}, // update cb db sb 
	{0x3bcd, &op_update,	 13,  12,  11, 0xff, 0x00, 0x00, 0x00}, // update cb db sp 
	{0x3ccd, &op_update,	 13,  12,  12, 0xff, 0x00, 0x00, 0x00}, // update cb db db 
	{0x3dcd, &op_update,	 13,  12,  13, 0xff, 0x00, 0x00, 0x00}, // update cb db cb 
	{0x3ecd, &op_update,	 13,  12,  14, 0xff, 0x00, 0x00, 0x00}, // update cb db pi 
	{0x3fcd, &op_update,	 13,  12,   8, 0xff, 0x00, 0x04, 0x00}, // update cb db <literal> 
	{0x30dd, &op_update,	 13,  13,   0, 0xff, 0x00, 0x00, 0x00}, // update cb cb a 
	{0x31dd, &op_update,	 13,  13,   1, 0xff, 0x00, 0x00, 0x00}, // update cb cb b 
	{0x32dd, &op_update,	 13,  13,   2, 0xff, 0x00, 0x00, 0x00}, // update cb cb c 
	{0x33dd, &op_update,	 13,  13,   3, 0xff, 0x00, 0x00, 0x00}, // update cb cb d 
	{0x34dd, &op_update,	 13,  13,   4, 0xff, 0x00, 0x00, 0x00}, // update cb cb e 
	{0x35dd, &op_update,	 13,  13,   5, 0xff, 0x00, 0x00, 0x00}, // update cb cb f 
	{0x36dd, &op_update,	 13,  13,   6, 0xff, 0x00, 0x00, 0x00}, // update cb cb g 
	{0x37dd, &op_update,	 13,  13,   7, 0xff, 0x00, 0x00, 0x00}, // update cb cb h 
	{0x38dd, &op_update,	 13,  13,   8, 0xff, 0x00, 0x00, 0x00}, // update cb cb pc 
	{0x39dd, &op_update,	 13,  13,   9, 0xff, 0x00, 0x00, 0x00}, // update cb cb ra 
	{0x3add, &op_update,	 13,  13,  10, 0xff, 0x00, 0x00, 0x00}, // update cb cb sb 
	{0x3bdd, &op_update,	 13,  13,  11, 0xff, 0x00, 0x00, 0x00}, // update cb cb sp 
	{0x3cdd, &op_update,	 13,  13,  12, 0xff, 0x00, 0x00, 0x00}, // update cb cb db 
	{0x3ddd, &op_update,	 13,  13,  13, 0xff, 0x00, 0x00, 0x00}, // update cb cb cb 
	{0x3edd, &op_update,	 13,  13,  14, 0xff, 0x00, 0x00, 0x00}, // update cb cb pi 
	{0x3fdd, &op_update,	 13,  13,   8, 0xff, 0x00, 0x04, 0x00}, // update cb cb <literal> 
	{0x30ed, &op_update,	 13,  14,   0, 0xff, 0x00, 0x00, 0x00}, // update cb pi a 
	{0x31ed, &op_update,	 13,  14,   1, 0xff, 0x00, 0x00, 0x00}, // update cb pi b 
	{0x32ed, &op_update,	 13,  14,   2, 0xff, 0x00, 0x00, 0x00}, // update cb pi c 
	{0x33ed, &op_update,	 13,  14,   3, 0xff, 0x00, 0x00, 0x00}, // update cb pi d 
	{0x34ed, &op_update,	 13,  14,   4, 0xff, 0x00, 0x00, 0x00}, // update cb pi e 
	{0x35ed, &op_update,	 13,  14,   5, 0xff, 0x00, 0x00, 0x00}, // update cb pi f 
	{0x36ed, &op_update,	 13,  14,   6, 0xff, 0x00, 0x00, 0x00}, // update cb pi g 
	{0x37ed, &op_update,	 13,  14,   7, 0xff, 0x00, 0x00, 0x00}, // update cb pi h 
	{0x38ed, &op_update,	 13,  14,   8, 0xff, 0x00, 0x00, 0x00}, // update cb pi pc 
	{0x39ed, &op_update,	 13,  14,   9, 0xff, 0x00, 0x00, 0x00}, // update cb pi ra 
	{0x3aed, &op_update,	 13,  14,  10, 0xff, 0x00, 0x00, 0x00}, // update cb pi sb 
	{0x3bed, &op_update,	 13,  14,  11, 0xff, 0x00, 0x00, 0x00}, // update cb pi sp 
	{0x3ced, &op_update,	 13,  14,  12, 0xff, 0x00, 0x00, 0x00}, // update cb pi db 
	{0x3ded, &op_update,	 13,  14,  13, 0xff, 0x00, 0x00, 0x00}, // update cb pi cb 
	{0x3eed, &op_update,	 13,  14,  14, 0xff, 0x00, 0x00, 0x00}, // update cb pi pi 
	{0x3fed, &op_update,	 13,  14,   8, 0xff, 0x00, 0x04, 0x00}, // update cb pi <literal> 
	{0x30fd, &op_update,	 13,  15,   0, 0xff, 0x00, 0x00, 0x00}, // update cb status a 
	{0x31fd, &op_update,	 13,  15,   1, 0xff, 0x00, 0x00, 0x00}, // update cb status b 
	{0x32fd, &op_update,	 13,  15,   2, 0xff, 0x00, 0x00, 0x00}, // update cb status c 
	{0x33fd, &op_update,	 13,  15,   3, 0xff, 0x00, 0x00, 0x00}, // update cb status d 
	{0x34fd, &op_update,	 13,  15,   4, 0xff, 0x00, 0x00, 0x00}, // update cb status e 
	{0x35fd, &op_update,	 13,  15,   5, 0xff, 0x00, 0x00, 0x00}, // update cb status f 
	{0x36fd, &op_update,	 13,  15,   6, 0xff, 0x00, 0x00, 0x00}, // update cb status g 
	{0x37fd, &op_update,	 13,  15,   7, 0xff, 0x00, 0x00, 0x00}, // update cb status h 
	{0x38fd, &op_update,	 13,  15,   8, 0xff, 0x00, 0x00, 0x00}, // update cb status pc 
	{0x39fd, &op_update,	 13,  15,   9, 0xff, 0x00, 0x00, 0x00}, // update cb status ra 
	{0x3afd, &op_update,	 13,  15,  10, 0xff, 0x00, 0x00, 0x00}, // update cb status sb 
	{0x3bfd, &op_update,	 13,  15,  11, 0xff, 0x00, 0x00, 0x00}, // update cb status sp 
	{0x3cfd, &op_update,	 13,  15,  12, 0xff, 0x00, 0x00, 0x00}, // update cb status db 
	{0x3dfd, &op_update,	 13,  15,  13, 0xff, 0x00, 0x00, 0x00}, // update cb status cb 
	{0x3efd, &op_update,	 13,  15,  14, 0xff, 0x00, 0x00, 0x00}, // update cb status pi 
	{0x3ffd, &op_update,	 13,  15,   8, 0xff, 0x00, 0x04, 0x00}, // update cb status <literal> 
	{0x300e, &op_update,	 14,   0,   0, 0xff, 0x00, 0x00, 0x00}, // update pi a a 
	{0x310e, &op_update,	 14,   0,   1, 0xff, 0x00, 0x00, 0x00}, // update pi a b 
	{0x320e, &op_update,	 14,   0,   2, 0xff, 0x00, 0x00, 0x00}, // update pi a c 
	{0x330e, &op_update,	 14,   0,   3, 0xff, 0x00, 0x00, 0x00}, // update pi a d 
	{0x340e, &op_update,	 14,   0,   4, 0xff, 0x00, 0x00, 0x00}, // update pi a e 
	{0x350e, &op_update,	 14,   0,   5, 0xff, 0x00, 0x00, 0x00}, // update pi a f 
	{0x360e, &op_update,	 14,   0,   6, 0xff, 0x00, 0x00, 0x00}, // update pi a g 
	{0x370e, &op_update,	 14,   0,   7, 0xff, 0x00, 0x00, 0x00}, // update pi a h 
	{0x380e, &op_update,	 14,   0,   8, 0xff, 0x00, 0x00, 0x00}, // update pi a pc 
	{0x390e, &op_update,	 14,   0,   9, 0xff, 0x00, 0x00, 0x00}, // update pi a ra 
	{0x3a0e, &op_update,	 14,   0,  10, 0xff, 0x00, 0x00, 0x00}, // update pi a sb 
	{0x3b0e, &op_update,	 14,   0,  11, 0xff, 0x00, 0x00, 0x00}, // update pi a sp 
	{0x3c0e, &op_update,	 14,   0,  12, 0xff, 0x00, 0x00, 0x00}, // update pi a db 
	{0x3d0e, &op_update,	 14,   0,  13, 0xff, 0x00, 0x00, 0x00}, // update pi a cb 
	{0x3e0e, &op_update,	 14,   0,  14, 0xff, 0x00, 0x00, 0x00}, // update pi a pi 
	{0x3f0e, &op_update,	 14,   0,   8, 0xff, 0x00, 0x04, 0x00}, // update pi a <literal> 
	{0x301e, &op_update,	 14,   1,   0, 0xff, 0x00, 0x00, 0x00}, // update pi b a 
	{0x311e, &op_update,	 14,   1,   1, 0xff, 0x00, 0x00, 0x00}, // update pi b b 
	{0x321e, &op_update,	 14,   1,   2, 0xff, 0x00, 0x00, 0x00}, // update pi b c 
	{0x331e, &op_update,	 14,   1,   3, 0xff, 0x00, 0x00, 0x00}, // update pi b d 
	{0x341e, &op_update,	 14,   1,   4, 0xff, 0x00, 0x00, 0x00}, // update pi b e 
	{0x351e, &op_update,	 14,   1,   5, 0xff, 0x00, 0x00, 0x00}, // update pi b f 
	{0x361e, &op_update,	 14,   1,   6, 0xff, 0x00, 0x00, 0x00}, // update pi b g 
	{0x371e, &op_update,	 14,   1,   7, 0xff, 0x00, 0x00, 0x00}, // update pi b h 
	{0x381e, &op_update,	 14,   1,   8, 0xff, 0x00, 0x00, 0x00}, // update pi b pc 
	{0x391e, &op_update,	 14,   1,   9, 0xff, 0x00, 0x00, 0x00}, // update pi b ra 
	{0x3a1e, &op_update,	 14,   1,  10, 0xff, 0x00, 0x00, 0x00}, // update pi b sb 
	{0x3b1e, &op_update,	 14,   1,  11, 0xff, 0x00, 0x00, 0x00}, // update pi b sp 
	{0x3c1e, &op_update,	 14,   1,  12, 0xff, 0x00, 0x00, 0x00}, // update pi b db 
	{0x3d1e, &op_update,	 14,   1,  13, 0xff, 0x00, 0x00, 0x00}, // update pi b cb 
	{0x3e1e, &op_update,	 14,   1,  14, 0xff, 0x00, 0x00, 0x00}, // update pi b pi 
	{0x3f1e, &op_update,	 14,   1,   8, 0xff, 0x00, 0x04, 0x00}, // update pi b <literal> 
	{0x302e, &op_update,	 14,   2,   0, 0xff, 0x00, 0x00, 0x00}, // update pi c a 
	{0x312e, &op_update,	 14,   2,   1, 0xff, 0x00, 0x00, 0x00}, // update pi c b 
	{0x322e, &op_update,	 14,   2,   2, 0xff, 0x00, 0x00, 0x00}, // update pi c c 
	{0x332e, &op_update,	 14,   2,   3, 0xff, 0x00, 0x00, 0x00}, // update pi c d 
	{0x342e, &op_update,	 14,   2,   4, 0xff, 0x00, 0x00, 0x00}, // update pi c e 
	{0x352e, &op_update,	 14,   2,   5, 0xff, 0x00, 0x00, 0x00}, // update pi c f 
	{0x362e, &op_update,	 14,   2,   6, 0xff, 0x00, 0x00, 0x00}, // update pi c g 
	{0x372e, &op_update,	 14,   2,   7, 0xff, 0x00, 0x00, 0x00}, // update pi c h 
	{0x382e, &op_update,	 14,   2,   8, 0xff, 0x00, 0x00, 0x00}, // update pi c pc 
	{0x392e, &op_update,	 14,   2,   9, 0xff, 0x00, 0x00, 0x00}, // update pi c ra 
	{0x3a2e, &op_update,	 14,   2,  10, 0xff, 0x00, 0x00, 0x00}, // update pi c sb 
	{0x3b2e, &op_update,	 14,   2,  11, 0xff, 0x00, 0x00, 0x00}, // update pi c sp 
	{0x3c2e, &op_update,	 14,   2,  12, 0xff, 0x00, 0x00, 0x00}, // update pi c db 
	{0x3d2e, &op_update,	 14,   2,  13, 0xff, 0x00, 0x00, 0x00}, // update pi c cb 
	{0x3e2e, &op_update,	 14,   2,  14, 0xff, 0x00, 0x00, 0x00}, // update pi c pi 
	{0x3f2e, &op_update,	 14,   2,   8, 0xff, 0x00, 0x04, 0x00}, // update pi c <literal> 
	{0x303e, &op_update,	 14,   3,   0, 0xff, 0x00, 0x00, 0x00}, // update pi d a 
	{0x313e, &op_update,	 14,   3,   1, 0xff, 0x00, 0x00, 0x00}, // update pi d b 
	{0x323e, &op_update,	 14,   3,   2, 0xff, 0x00, 0x00, 0x00}, // update pi d c 
	{0x333e, &op_update,	 14,   3,   3, 0xff, 0x00, 0x00, 0x00}, // update pi d d 
	{0x343e, &op_update,	 14,   3,   4, 0xff, 0x00, 0x00, 0x00}, // update pi d e 
	{0x353e, &op_update,	 14,   3,   5, 0xff, 0x00, 0x00, 0x00}, // update pi d f 
	{0x363e, &op_update,	 14,   3,   6, 0xff, 0x00, 0x00, 0x00}, // update pi d g 
	{0x373e, &op_update,	 14,   3,   7, 0xff, 0x00, 0x00, 0x00}, // update pi d h 
	{0x383e, &op_update,	 14,   3,   8, 0xff, 0x00, 0x00, 0x00}, // update pi d pc 
	{0x393e, &op_update,	 14,   3,   9, 0xff, 0x00, 0x00, 0x00}, // update pi d ra 
	{0x3a3e, &op_update,	 14,   3,  10, 0xff, 0x00, 0x00, 0x00}, // update pi d sb 
	{0x3b3e, &op_update,	 14,   3,  11, 0xff, 0x00, 0x00, 0x00}, // update pi d sp 
	{0x3c3e, &op_update,	 14,   3,  12, 0xff, 0x00, 0x00, 0x00}, // update pi d db 
	{0x3d3e, &op_update,	 14,   3,  13, 0xff, 0x00, 0x00, 0x00}, // update pi d cb 
	{0x3e3e, &op_update,	 14,   3,  14, 0xff, 0x00, 0x00, 0x00}, // update pi d pi 
	{0x3f3e, &op_update,	 14,   3,   8, 0xff, 0x00, 0x04, 0x00}, // update pi d <literal> 
	{0x304e, &op_update,	 14,   4,   0, 0xff, 0x00, 0x00, 0x00}, // update pi e a 
	{0x314e, &op_update,	 14,   4,   1, 0xff, 0x00, 0x00, 0x00}, // update pi e b 
	{0x324e, &op_update,	 14,   4,   2, 0xff, 0x00, 0x00, 0x00}, // update pi e c 
	{0x334e, &op_update,	 14,   4,   3, 0xff, 0x00, 0x00, 0x00}, // update pi e d 
	{0x344e, &op_update,	 14,   4,   4, 0xff, 0x00, 0x00, 0x00}, // update pi e e 
	{0x354e, &op_update,	 14,   4,   5, 0xff, 0x00, 0x00, 0x00}, // update pi e f 
	{0x364e, &op_update,	 14,   4,   6, 0xff, 0x00, 0x00, 0x00}, // update pi e g 
	{0x374e, &op_update,	 14,   4,   7, 0xff, 0x00, 0x00, 0x00}, // update pi e h 
	{0x384e, &op_update,	 14,   4,   8, 0xff, 0x00, 0x00, 0x00}, // update pi e pc 
	{0x394e, &op_update,	 14,   4,   9, 0xff, 0x00, 0x00, 0x00}, // update pi e ra 
	{0x3a4e, &op_update,	 14,   4,  10, 0xff, 0x00, 0x00, 0x00}, // update pi e sb 
	{0x3b4e, &op_update,	 14,   4,  11, 0xff, 0x00, 0x00, 0x00}, // update pi e sp 
	{0x3c4e, &op_update,	 14,   4,  12, 0xff, 0x00, 0x00, 0x00}, // update pi e db 
	{0x3d4e, &op_update,	 14,   4,  13, 0xff, 0x00, 0x00, 0x00}, // update pi e cb 
	{0x3e4e, &op_update,	 14,   4,  14, 0xff, 0x00, 0x00, 0x00}, // update pi e pi 
	{0x3f4e, &op_update,	 14,   4,   8, 0xff, 0x00, 0x04, 0x00}, // update pi e <literal> 
	{0x305e, &op_update,	 14,   5,   0, 0xff, 0x00, 0x00, 0x00}, // update pi f a 
	{0x315e, &op_update,	 14,   5,   1, 0xff, 0x00, 0x00, 0x00}, // update pi f b 
	{0x325e, &op_update,	 14,   5,   2, 0xff, 0x00, 0x00, 0x00}, // update pi f c 
	{0x335e, &op_update,	 14,   5,   3, 0xff, 0x00, 0x00, 0x00}, // update pi f d 
	{0x345e, &op_update,	 14,   5,   4, 0xff, 0x00, 0x00, 0x00}, // update pi f e 
	{0x355e, &op_update,	 14,   5,   5, 0xff, 0x00, 0x00, 0x00}, // update pi f f 
	{0x365e, &op_update,	 14,   5,   6, 0xff, 0x00, 0x00, 0x00}, // update pi f g 
	{0x375e, &op_update,	 14,   5,   7, 0xff, 0x00, 0x00, 0x00}, // update pi f h 
	{0x385e, &op_update,	 14,   5,   8, 0xff, 0x00, 0x00, 0x00}, // update pi f pc 
	{0x395e, &op_update,	 14,   5,   9, 0xff, 0x00, 0x00, 0x00}, // update pi f ra 
	{0x3a5e, &op_update,	 14,   5,  10, 0xff, 0x00, 0x00, 0x00}, // update pi f sb 
	{0x3b5e, &op_update,	 14,   5,  11, 0xff, 0x00, 0x00, 0x00}, // update pi f sp 
	{0x3c5e, &op_update,	 14,   5,  12, 0xff, 0x00, 0x00, 0x00}, // update pi f db 
	{0x3d5e, &op_update,	 14,   5,  13, 0xff, 0x00, 0x00, 0x00}, // update pi f cb 
	{0x3e5e, &op_update,	 14,   5,  14, 0xff, 0x00, 0x00, 0x00}, // update pi f pi 
	{0x3f5e, &op_update,	 14,   5,   8, 0xff, 0x00, 0x04, 0x00}, // update pi f <literal> 
	{0x306e, &op_update,	 14,   6,   0, 0xff, 0x00, 0x00, 0x00}, // update pi g a 
	{0x316e, &op_update,	 14,   6,   1, 0xff, 0x00, 0x00, 0x00}, // update pi g b 
	{0x326e, &op_update,	 14,   6,   2, 0xff, 0x00, 0x00, 0x00}, // update pi g c 
	{0x336e, &op_update,	 14,   6,   3, 0xff, 0x00, 0x00, 0x00}, // update pi g d 
	{0x346e, &op_update,	 14,   6,   4, 0xff, 0x00, 0x00, 0x00}, // update pi g e 
	{0x356e, &op_update,	 14,   6,   5, 0xff, 0x00, 0x00, 0x00}, // update pi g f 
	{0x366e, &op_update,	 14,   6,   6, 0xff, 0x00, 0x00, 0x00}, // update pi g g 
	{0x376e, &op_update,	 14,   6,   7, 0xff, 0x00, 0x00, 0x00}, // update pi g h 
	{0x386e, &op_update,	 14,   6,   8, 0xff, 0x00, 0x00, 0x00}, // update pi g pc 
	{0x396e, &op_update,	 14,   6,   9, 0xff, 0x00, 0x00, 0x00}, // update pi g ra 
	{0x3a6e, &op_update,	 14,   6,  10, 0xff, 0x00, 0x00, 0x00}, // update pi g sb 
	{0x3b6e, &op_update,	 14,   6,  11, 0xff, 0x00, 0x00, 0x00}, // update pi g sp 
	{0x3c6e, &op_update,	 14,   6,  12, 0xff, 0x00, 0x00, 0x00}, // update pi g db 
	{0x3d6e, &op_update,	 14,   6,  13, 0xff, 0x00, 0x00, 0x00}, // update pi g cb 
	{0x3e6e, &op_update,	 14,   6,  14, 0xff, 0x00, 0x00, 0x00}, // update pi g pi 
	{0x3f6e, &op_update,	 14,   6,   8, 0xff, 0x00, 0x04, 0x00}, // update pi g <literal> 
	{0x307e, &op_update,	 14,   7,   0, 0xff, 0x00, 0x00, 0x00}, // update pi h a 
	{0x317e, &op_update,	 14,   7,   1, 0xff, 0x00, 0x00, 0x00}, // update pi h b 
	{0x327e, &op_update,	 14,   7,   2, 0xff, 0x00, 0x00, 0x00}, // update pi h c 
	{0x337e, &op_update,	 14,   7,   3, 0xff, 0x00, 0x00, 0x00}, // update pi h d 
	{0x347e, &op_update,	 14,   7,   4, 0xff, 0x00, 0x00, 0x00}, // update pi h e 
	{0x357e, &op_update,	 14,   7,   5, 0xff, 0x00, 0x00, 0x00}, // update pi h f 
	{0x367e, &op_update,	 14,   7,   6, 0xff, 0x00, 0x00, 0x00}, // update pi h g 
	{0x377e, &op_update,	 14,   7,   7, 0xff, 0x00, 0x00, 0x00}, // update pi h h 
	{0x387e, &op_update,	 14,   7,   8, 0xff, 0x00, 0x00, 0x00}, // update pi h pc 
	{0x397e, &op_update,	 14,   7,   9, 0xff, 0x00, 0x00, 0x00}, // update pi h ra 
	{0x3a7e, &op_update,	 14,   7,  10, 0xff, 0x00, 0x00, 0x00}, // update pi h sb 
	{0x3b7e, &op_update,	 14,   7,  11, 0xff, 0x00, 0x00, 0x00}, // update pi h sp 
	{0x3c7e, &op_update,	 14,   7,  12, 0xff, 0x00, 0x00, 0x00}, // update pi h db 
	{0x3d7e, &op_update,	 14,   7,  13, 0xff, 0x00, 0x00, 0x00}, // update pi h cb 
	{0x3e7e, &op_update,	 14,   7,  14, 0xff, 0x00, 0x00, 0x00}, // update pi h pi 
	{0x3f7e, &op_update,	 14,   7,   8, 0xff, 0x00, 0x04, 0x00}, // update pi h <literal> 
	{0x308e, &op_update,	 14,   8,   0, 0xff, 0x00, 0x00, 0x00}, // update pi pc a 
	{0x318e, &op_update,	 14,   8,   1, 0xff, 0x00, 0x00, 0x00}, // update pi pc b 
	{0x328e, &op_update,	 14,   8,   2, 0xff, 0x00, 0x00, 0x00}, // update pi pc c 
	{0x338e, &op_update,	 14,   8,   3, 0xff, 0x00, 0x00, 0x00}, // update pi pc d 
	{0x348e, &op_update,	 14,   8,   4, 0xff, 0x00, 0x00, 0x00}, // update pi pc e 
	{0x358e, &op_update,	 14,   8,   5, 0xff, 0x00, 0x00, 0x00}, // update pi pc f 
	{0x368e, &op_update,	 14,   8,   6, 0xff, 0x00, 0x00, 0x00}, // update pi pc g 
	{0x378e, &op_update,	 14,   8,   7, 0xff, 0x00, 0x00, 0x00}, // update pi pc h 
	{0x388e, &op_update,	 14,   8,   8, 0xff, 0x00, 0x00, 0x00}, // update pi pc pc 
	{0x398e, &op_update,	 14,   8,   9, 0xff, 0x00, 0x00, 0x00}, // update pi pc ra 
	{0x3a8e, &op_update,	 14,   8,  10, 0xff, 0x00, 0x00, 0x00}, // update pi pc sb 
	{0x3b8e, &op_update,	 14,   8,  11, 0xff, 0x00, 0x00, 0x00}, // update pi pc sp 
	{0x3c8e, &op_update,	 14,   8,  12, 0xff, 0x00, 0x00, 0x00}, // update pi pc db 
	{0x3d8e, &op_update,	 14,   8,  13, 0xff, 0x00, 0x00, 0x00}, // update pi pc cb 
	{0x3e8e, &op_update,	 14,   8,  14, 0xff, 0x00, 0x00, 0x00}, // update pi pc pi 
	{0x3f8e, &op_update,	 14,   8,   8, 0xff, 0x00, 0x04, 0x00}, // update pi pc <literal> 
	{0x309e, &op_update,	 14,   9,   0, 0xff, 0x00, 0x00, 0x00}, // update pi ra a 
	{0x319e, &op_update,	 14,   9,   1, 0xff, 0x00, 0x00, 0x00}, // update pi ra b 
	{0x329e, &op_update,	 14,   9,   2, 0xff, 0x00, 0x00, 0x00}, // update pi ra c 
	{0x339e, &op_update,	 14,   9,   3, 0xff, 0x00, 0x00, 0x00}, // update pi ra d 
	{0x349e, &op_update,	 14,   9,   4, 0xff, 0x00, 0x00, 0x00}, // update pi ra e 
	{0x359e, &op_update,	 14,   9,   5, 0xff, 0x00, 0x00, 0x00}, // update pi ra f 
	{0x369e, &op_update,	 14,   9,   6, 0xff, 0x00, 0x00, 0x00}, // update pi ra g 
	{0x379e, &op_update,	 14,   9,   7, 0xff, 0x00, 0x00, 0x00}, // update pi ra h 
	{0x389e, &op_update,	 14,   9,   8, 0xff, 0x00, 0x00, 0x00}, // update pi ra pc 
	{0x399e, &op_update,	 14,   9,   9, 0xff, 0x00, 0x00, 0x00}, // update pi ra ra 
	{0x3a9e, &op_update,	 14,   9,  10, 0xff, 0x00, 0x00, 0x00}, // update pi ra sb 
	{0x3b9e, &op_update,	 14,   9,  11, 0xff, 0x00, 0x00, 0x00}, // update pi ra sp 
	{0x3c9e, &op_update,	 14,   9,  12, 0xff, 0x00, 0x00, 0x00}, // update pi ra db 
	{0x3d9e, &op_update,	 14,   9,  13, 0xff, 0x00, 0x00, 0x00}, // update pi ra cb 
	{0x3e9e, &op_update,	 14,   9,  14, 0xff, 0x00, 0x00, 0x00}, // update pi ra pi 
	{0x3f9e, &op_update,	 14,   9,   8, 0xff, 0x00, 0x04, 0x00}, // update pi ra <literal> 
	{0x30ae, &op_update,	 14,  10,   0, 0xff, 0x00, 0x00, 0x00}, // update pi sb a 
	{0x31ae, &op_update,	 14,  10,   1, 0xff, 0x00, 0x00, 0x00}, // update pi sb b 
	{0x32ae, &op_update,	 14,  10,   2, 0xff, 0x00, 0x00, 0x00}, // update pi sb c 
	{0x33ae, &op_update,	 14,  10,   3, 0xff, 0x00, 0x00, 0x00}, // update pi sb d 
	{0x34ae, &op_update,	 14,  10,   4, 0xff, 0x00, 0x00, 0x00}, // update pi sb e 
	{0x35ae, &op_update,	 14,  10,   5, 0xff, 0x00, 0x00, 0x00}, // update pi sb f 
	{0x36ae, &op_update,	 14,  10,   6, 0xff, 0x00, 0x00, 0x00}, // update pi sb g 
	{0x37ae, &op_update,	 14,  10,   7, 0xff, 0x00, 0x00, 0x00}, // update pi sb h 
	{0x38ae, &op_update,	 14,  10,   8, 0xff, 0x00, 0x00, 0x00}, // update pi sb pc 
	{0x39ae, &op_update,	 14,  10,   9, 0xff, 0x00, 0x00, 0x00}, // update pi sb ra 
	{0x3aae, &op_update,	 14,  10,  10, 0xff, 0x00, 0x00, 0x00}, // update pi sb sb 
	{0x3bae, &op_update,	 14,  10,  11, 0xff, 0x00, 0x00, 0x00}, // update pi sb sp 
	{0x3cae, &op_update,	 14,  10,  12, 0xff, 0x00, 0x00, 0x00}, // update pi sb db 
	{0x3dae, &op_update,	 14,  10,  13, 0xff, 0x00, 0x00, 0x00}, // update pi sb cb 
	{0x3eae, &op_update,	 14,  10,  14, 0xff, 0x00, 0x00, 0x00}, // update pi sb pi 
	{0x3fae, &op_update,	 14,  10,   8, 0xff, 0x00, 0x04, 0x00}, // update pi sb <literal> 
	{0x30be, &op_update,	 14,  11,   0, 0xff, 0x00, 0x00, 0x00}, // update pi sp a 
	{0x31be, &op_update,	 14,  11,   1, 0xff, 0x00, 0x00, 0x00}, // update pi sp b 
	{0x32be, &op_update,	 14,  11,   2, 0xff, 0x00, 0x00, 0x00}, // update pi sp c 
	{0x33be, &op_update,	 14,  11,   3, 0xff, 0x00, 0x00, 0x00}, // update pi sp d 
	{0x34be, &op_update,	 14,  11,   4, 0xff, 0x00, 0x00, 0x00}, // update pi sp e 
	{0x35be, &op_update,	 14,  11,   5, 0xff, 0x00, 0x00, 0x00}, // update pi sp f 
	{0x36be, &op_update,	 14,  11,   6, 0xff, 0x00, 0x00, 0x00}, // update pi sp g 
	{0x37be, &op_update,	 14,  11,   7, 0xff, 0x00, 0x00, 0x00}, // update pi sp h 
	{0x38be, &op_update,	 14,  11,   8, 0xff, 0x00, 0x00, 0x00}, // update pi sp pc 
	{0x39be, &op_update,	 14,  11,   9, 0xff, 0x00, 0x00, 0x00}, // update pi sp ra 
	{0x3abe, &op_update,	 14,  11,  10, 0xff, 0x00, 0x00, 0x00}, // update pi sp sb 
	{0x3bbe, &op_update,	 14,  11,  11, 0xff, 0x00, 0x00, 0x00}, // update pi sp sp 
	{0x3cbe, &op_update,	 14,  11,  12, 0xff, 0x00, 0x00, 0x00}, // update pi sp db 
	{0x3dbe, &op_update,	 14,  11,  13, 0xff, 0x00, 0x00, 0x00}, // update pi sp cb 
	{0x3ebe, &op_update,	 14,  11,  14, 0xff, 0x00, 0x00, 0x00}, // update pi sp pi 
	{0x3fbe, &op_update,	 14,  11,   8, 0xff, 0x00, 0x04, 0x00}, // update pi sp <literal> 
	{0x30ce, &op_update,	 14,  12,   0, 0xff, 0x00, 0x00, 0x00}, // update pi db a 
	{0x31ce, &op_update,	 14,  12,   1, 0xff, 0x00, 0x00, 0x00}, // update pi db b 
	{0x32ce, &op_update,	 14,  12,   2, 0xff, 0x00, 0x00, 0x00}, // update pi db c 
	{0x33ce, &op_update,	 14,  12,   3, 0xff, 0x00, 0x00, 0x00}, // update pi db d 
	{0x34ce, &op_update,	 14,  12,   4, 0xff, 0x00, 0x00, 0x00}, // update pi db e 
	{0x35ce, &op_update,	 14,  12,   5, 0xff, 0x00, 0x00, 0x00}, // update pi db f 
	{0x36ce, &op_update,	 14,  12,   6, 0xff, 0x00, 0x00, 0x00}, // update pi db g 
	{0x37ce, &op_update,	 14,  12,   7, 0xff, 0x00, 0x00, 0x00}, // update pi db h 
	{0x38ce, &op_update,	 14,  12,   8, 0xff, 0x00, 0x00, 0x00}, // update pi db pc 
	{0x39ce, &op_update,	 14,  12,   9, 0xff, 0x00, 0x00, 0x00}, // update pi db ra 
	{0x3ace, &op_update,	 14,  12,  10, 0xff, 0x00, 0x00, 0x00}, // update pi db sb 
	{0x3bce, &op_update,	 14,  12,  11, 0xff, 0x00, 0x00, 0x00}, // update pi db sp 
	{0x3cce, &op_update,	 14,  12,  12, 0xff, 0x00, 0x00, 0x00}, // update pi db db 
	{0x3dce, &op_update,	 14,  12,  13, 0xff, 0x00, 0x00, 0x00}, // update pi db cb 
	{0x3ece, &op_update,	 14,  12,  14, 0xff, 0x00, 0x00, 0x00}, // update pi db pi 
	{0x3fce, &op_update,	 14,  12,   8, 0xff, 0x00, 0x04, 0x00}, // update pi db <literal> 
	{0x30de, &op_update,	 14,  13,   0, 0xff, 0x00, 0x00, 0x00}, // update pi cb a 
	{0x31de, &op_update,	 14,  13,   1, 0xff, 0x00, 0x00, 0x00}, // update pi cb b 
	{0x32de, &op_update,	 14,  13,   2, 0xff, 0x00, 0x00, 0x00}, // update pi cb c 
	{0x33de, &op_update,	 14,  13,   3, 0xff, 0x00, 0x00, 0x00}, // update pi cb d 
	{0x34de, &op_update,	 14,  13,   4, 0xff, 0x00, 0x00, 0x00}, // update pi cb e 
	{0x35de, &op_update,	 14,  13,   5, 0xff, 0x00, 0x00, 0x00}, // update pi cb f 
	{0x36de, &op_update,	 14,  13,   6, 0xff, 0x00, 0x00, 0x00}, // update pi cb g 
	{0x37de, &op_update,	 14,  13,   7, 0xff, 0x00, 0x00, 0x00}, // update pi cb h 
	{0x38de, &op_update,	 14,  13,   8, 0xff, 0x00, 0x00, 0x00}, // update pi cb pc 
	{0x39de, &op_update,	 14,  13,   9, 0xff, 0x00, 0x00, 0x00}, // update pi cb ra 
	{0x3ade, &op_update,	 14,  13,  10, 0xff, 0x00, 0x00, 0x00}, // update pi cb sb 
	{0x3bde, &op_update,	 14,  13,  11, 0xff, 0x00, 0x00, 0x00}, // update pi cb sp 
	{0x3cde, &op_update,	 14,  13,  12, 0xff, 0x00, 0x00, 0x00}, // update pi cb db 
	{0x3dde, &op_update,	 14,  13,  13, 0xff, 0x00, 0x00, 0x00}, // update pi cb cb 
	{0x3ede, &op_update,	 14,  13,  14, 0xff, 0x00, 0x00, 0x00}, // update pi cb pi 
	{0x3fde, &op_update,	 14,  13,   8, 0xff, 0x00, 0x04, 0x00}, // update pi cb <literal> 
	{0x30ee, &op_update,	 14,  14,   0, 0xff, 0x00, 0x00, 0x00}, // update pi pi a 
	{0x31ee, &op_update,	 14,  14,   1, 0xff, 0x00, 0x00, 0x00}, // update pi pi b 
	{0x32ee, &op_update,	 14,  14,   2, 0xff, 0x00, 0x00, 0x00}, // update pi pi c 
	{0x33ee, &op_update,	 14,  14,   3, 0xff, 0x00, 0x00, 0x00}, // update pi pi d 
	{0x34ee, &op_update,	 14,  14,   4, 0xff, 0x00, 0x00, 0x00}, // update pi pi e 
	{0x35ee, &op_update,	 14,  14,   5, 0xff, 0x00, 0x00, 0x00}, // update pi pi f 
	{0x36ee, &op_update,	 14,  14,   6, 0xff, 0x00, 0x00, 0x00}, // update pi pi g 
	{0x37ee, &op_update,	 14,  14,   7, 0xff, 0x00, 0x00, 0x00}, // update pi pi h 
	{0x38ee, &op_update,	 14,  14,   8, 0xff, 0x00, 0x00, 0x00}, // update pi pi pc 
	{0x39ee, &op_update,	 14,  14,   9, 0xff, 0x00, 0x00, 0x00}, // update pi pi ra 
	{0x3aee, &op_update,	 14,  14,  10, 0xff, 0x00, 0x00, 0x00}, // update pi pi sb 
	{0x3bee, &op_update,	 14,  14,  11, 0xff, 0x00, 0x00, 0x00}, // update pi pi sp 
	{0x3cee, &op_update,	 14,  14,  12, 0xff, 0x00, 0x00, 0x00}, // update pi pi db 
	{0x3dee, &op_update,	 14,  14,  13, 0xff, 0x00, 0x00, 0x00}, // update pi pi cb 
	{0x3eee, &op_update,	 14,  14,  14, 0xff, 0x00, 0x00, 0x00}, // update pi pi pi 
	{0x3fee, &op_update,	 14,  14,   8, 0xff, 0x00, 0x04, 0x00}, // update pi pi <literal> 
	{0x30fe, &op_update,	 14,  15,   0, 0xff, 0x00, 0x00, 0x00}, // update pi status a 
	{0x31fe, &op_update,	 14,  15,   1, 0xff, 0x00, 0x00, 0x00}, // update pi status b 
	{0x32fe, &op_update,	 14,  15,   2, 0xff, 0x00, 0x00, 0x00}, // update pi status c 
	{0x33fe, &op_update,	 14,  15,   3, 0xff, 0x00, 0x00, 0x00}, // update pi status d 
	{0x34fe, &op_update,	 14,  15,   4, 0xff, 0x00, 0x00, 0x00}, // update pi status e 
	{0x35fe, &op_update,	 14,  15,   5, 0xff, 0x00, 0x00, 0x00}, // update pi status f 
	{0x36fe, &op_update,	 14,  15,   6, 0xff, 0x00, 0x00, 0x00}, // update pi status g 
	{0x37fe, &op_update,	 14,  15,   7, 0xff, 0x00, 0x00, 0x00}, // update pi status h 
	{0x38fe, &op_update,	 14,  15,   8, 0xff, 0x00, 0x00, 0x00}, // update pi status pc 
	{0x39fe, &op_update,	 14,  15,   9, 0xff, 0x00, 0x00, 0x00}, // update pi status ra 
	{0x3afe, &op_update,	 14,  15,  10, 0xff, 0x00, 0x00, 0x00}, // update pi status sb 
	{0x3bfe, &op_update,	 14,  15,  11, 0xff, 0x00, 0x00, 0x00}, // update pi status sp 
	{0x3cfe, &op_update,	 14,  15,  12, 0xff, 0x00, 0x00, 0x00}, // update pi status db 
	{0x3dfe, &op_update,	 14,  15,  13, 0xff, 0x00, 0x00, 0x00}, // update pi status cb 
	{0x3efe, &op_update,	 14,  15,  14, 0xff, 0x00, 0x00, 0x00}, // update pi status pi 
	{0x3ffe, &op_update,	 14,  15,   8, 0xff, 0x00, 0x04, 0x00}, // update pi status <literal> 
	{0x300f, &op_update,	 15,   0,   0, 0xff, 0x00, 0x00, 0x00}, // update status a a 
	{0x310f, &op_update,	 15,   0,   1, 0xff, 0x00, 0x00, 0x00}, // update status a b 
	{0x320f, &op_update,	 15,   0,   2, 0xff, 0x00, 0x00, 0x00}, // update status a c 
	{0x330f, &op_update,	 15,   0,   3, 0xff, 0x00, 0x00, 0x00}, // update status a d 
	{0x340f, &op_update,	 15,   0,   4, 0xff, 0x00, 0x00, 0x00}, // update status a e 
	{0x350f, &op_update,	 15,   0,   5, 0xff, 0x00, 0x00, 0x00}, // update status a f 
	{0x360f, &op_update,	 15,   0,   6, 0xff, 0x00, 0x00, 0x00}, // update status a g 
	{0x370f, &op_update,	 15,   0,   7, 0xff, 0x00, 0x00, 0x00}, // update status a h 
	{0x380f, &op_update,	 15,   0,   8, 0xff, 0x00, 0x00, 0x00}, // update status a pc 
	{0x390f, &op_update,	 15,   0,   9, 0xff, 0x00, 0x00, 0x00}, // update status a ra 
	{0x3a0f, &op_update,	 15,   0,  10, 0xff, 0x00, 0x00, 0x00}, // update status a sb 
	{0x3b0f, &op_update,	 15,   0,  11, 0xff, 0x00, 0x00, 0x00}, // update status a sp 
	{0x3c0f, &op_update,	 15,   0,  12, 0xff, 0x00, 0x00, 0x00}, // update status a db 
	{0x3d0f, &op_update,	 15,   0,  13, 0xff, 0x00, 0x00, 0x00}, // update status a cb 
	{0x3e0f, &op_update,	 15,   0,  14, 0xff, 0x00, 0x00, 0x00}, // update status a pi 
	{0x3f0f, &op_update,	 15,   0,   8, 0xff, 0x00, 0x04, 0x00}, // update status a <literal> 
	{0x301f, &op_update,	 15,   1,   0, 0xff, 0x00, 0x00, 0x00}, // update status b a 
	{0x311f, &op_update,	 15,   1,   1, 0xff, 0x00, 0x00, 0x00}, // update status b b 
	{0x321f, &op_update,	 15,   1,   2, 0xff, 0x00, 0x00, 0x00}, // update status b c 
	{0x331f, &op_update,	 15,   1,   3, 0xff, 0x00, 0x00, 0x00}, // update status b d 
	{0x341f, &op_update,	 15,   1,   4, 0xff, 0x00, 0x00, 0x00}, // update status b e 
	{0x351f, &op_update,	 15,   1,   5, 0xff, 0x00, 0x00, 0x00}, // update status b f 
	{0x361f, &op_update,	 15,   1,   6, 0xff, 0x00, 0x00, 0x00}, // update status b g 
	{0x371f, &op_update,	 15,   1,   7, 0xff, 0x00, 0x00, 0x00}, // update status b h 
	{0x381f, &op_update,	 15,   1,   8, 0xff, 0x00, 0x00, 0x00}, // update status b pc 
	{0x391f, &op_update,	 15,   1,   9, 0xff, 0x00, 0x00, 0x00}, // update status b ra 
	{0x3a1f, &op_update,	 15,   1,  10, 0xff, 0x00, 0x00, 0x00}, // update status b sb 
	{0x3b1f, &op_update,	 15,   1,  11, 0xff, 0x00, 0x00, 0x00}, // update status b sp 
	{0x3c1f, &op_update,	 15,   1,  12, 0xff, 0x00, 0x00, 0x00}, // update status b db 
	{0x3d1f, &op_update,	 15,   1,  13, 0xff, 0x00, 0x00, 0x00}, // update status b cb 
	{0x3e1f, &op_update,	 15,   1,  14, 0xff, 0x00, 0x00, 0x00}, // update status b pi 
	{0x3f1f, &op_update,	 15,   1,   8, 0xff, 0x00, 0x04, 0x00}, // update status b <literal> 
	{0x302f, &op_update,	 15,   2,   0, 0xff, 0x00, 0x00, 0x00}, // update status c a 
	{0x312f, &op_update,	 15,   2,   1, 0xff, 0x00, 0x00, 0x00}, // update status c b 
	{0x322f, &op_update,	 15,   2,   2, 0xff, 0x00, 0x00, 0x00}, // update status c c 
	{0x332f, &op_update,	 15,   2,   3, 0xff, 0x00, 0x00, 0x00}, // update status c d 
	{0x342f, &op_update,	 15,   2,   4, 0xff, 0x00, 0x00, 0x00}, // update status c e 
	{0x352f, &op_update,	 15,   2,   5, 0xff, 0x00, 0x00, 0x00}, // update status c f 
	{0x362f, &op_update,	 15,   2,   6, 0xff, 0x00, 0x00, 0x00}, // update status c g 
	{0x372f, &op_update,	 15,   2,   7, 0xff, 0x00, 0x00, 0x00}, // update status c h 
	{0x382f, &op_update,	 15,   2,   8, 0xff, 0x00, 0x00, 0x00}, // update status c pc 
	{0x392f, &op_update,	 15,   2,   9, 0xff, 0x00, 0x00, 0x00}, // update status c ra 
	{0x3a2f, &op_update,	 15,   2,  10, 0xff, 0x00, 0x00, 0x00}, // update status c sb 
	{0x3b2f, &op_update,	 15,   2,  11, 0xff, 0x00, 0x00, 0x00}, // update status c sp 
	{0x3c2f, &op_update,	 15,   2,  12, 0xff, 0x00, 0x00, 0x00}, // update status c db 
	{0x3d2f, &op_update,	 15,   2,  13, 0xff, 0x00, 0x00, 0x00}, // update status c cb 
	{0x3e2f, &op_update,	 15,   2,  14, 0xff, 0x00, 0x00, 0x00}, // update status c pi 
	{0x3f2f, &op_update,	 15,   2,   8, 0xff, 0x00, 0x04, 0x00}, // update status c <literal> 
	{0x303f, &op_update,	 15,   3,   0, 0xff, 0x00, 0x00, 0x00}, // update status d a 
	{0x313f, &op_update,	 15,   3,   1, 0xff, 0x00, 0x00, 0x00}, // update status d b 
	{0x323f, &op_update,	 15,   3,   2, 0xff, 0x00, 0x00, 0x00}, // update status d c 
	{0x333f, &op_update,	 15,   3,   3, 0xff, 0x00, 0x00, 0x00}, // update status d d 
	{0x343f, &op_update,	 15,   3,   4, 0xff, 0x00, 0x00, 0x00}, // update status d e 
	{0x353f, &op_update,	 15,   3,   5, 0xff, 0x00, 0x00, 0x00}, // update status d f 
	{0x363f, &op_update,	 15,   3,   6, 0xff, 0x00, 0x00, 0x00}, // update status d g 
	{0x373f, &op_update,	 15,   3,   7, 0xff, 0x00, 0x00, 0x00}, // update status d h 
	{0x383f, &op_update,	 15,   3,   8, 0xff, 0x00, 0x00, 0x00}, // update status d pc 
	{0x393f, &op_update,	 15,   3,   9, 0xff, 0x00, 0x00, 0x00}, // update status d ra 
	{0x3a3f, &op_update,	 15,   3,  10, 0xff, 0x00, 0x00, 0x00}, // update status d sb 
	{0x3b3f, &op_update,	 15,   3,  11, 0xff, 0x00, 0x00, 0x00}, // update status d sp 
	{0x3c3f, &op_update,	 15,   3,  12, 0xff, 0x00, 0x00, 0x00}, // update status d db 
	{0x3d3f, &op_update,	 15,   3,  13, 0xff, 0x00, 0x00, 0x00}, // update status d cb 
	{0x3e3f, &op_update,	 15,   3,  14, 0xff, 0x00, 0x00, 0x00}, // update status d pi 
	{0x3f3f, &op_update,	 15,   3,   8, 0xff, 0x00, 0x04, 0x00}, // update status d <literal> 
	{0x304f, &op_update,	 15,   4,   0, 0xff, 0x00, 0x00, 0x00}, // update status e a 
	{0x314f, &op_update,	 15,   4,   1, 0xff, 0x00, 0x00, 0x00}, // update status e b 
	{0x324f, &op_update,	 15,   4,   2, 0xff, 0x00, 0x00, 0x00}, // update status e c 
	{0x334f, &op_update,	 15,   4,   3, 0xff, 0x00, 0x00, 0x00}, // update status e d 
	{0x344f, &op_update,	 15,   4,   4, 0xff, 0x00, 0x00, 0x00}, // update status e e 
	{0x354f, &op_update,	 15,   4,   5, 0xff, 0x00, 0x00, 0x00}, // update status e f 
	{0x364f, &op_update,	 15,   4,   6, 0xff, 0x00, 0x00, 0x00}, // update status e g 
	{0x374f, &op_update,	 15,   4,   7, 0xff, 0x00, 0x00, 0x00}, // update status e h 
	{0x384f, &op_update,	 15,   4,   8, 0xff, 0x00, 0x00, 0x00}, // update status e pc 
	{0x394f, &op_update,	 15,   4,   9, 0xff, 0x00, 0x00, 0x00}, // update status e ra 
	{0x3a4f, &op_update,	 15,   4,  10, 0xff, 0x00, 0x00, 0x00}, // update status e sb 
	{0x3b4f, &op_update,	 15,   4,  11, 0xff, 0x00, 0x00, 0x00}, // update status e sp 
	{0x3c4f, &op_update,	 15,   4,  12, 0xff, 0x00, 0x00, 0x00}, // update status e db 
	{0x3d4f, &op_update,	 15,   4,  13, 0xff, 0x00, 0x00, 0x00}, // update status e cb 
	{0x3e4f, &op_update,	 15,   4,  14, 0xff, 0x00, 0x00, 0x00}, // update status e pi 
	{0x3f4f, &op_update,	 15,   4,   8, 0xff, 0x00, 0x04, 0x00}, // update status e <literal> 
	{0x305f, &op_update,	 15,   5,   0, 0xff, 0x00, 0x00, 0x00}, // update status f a 
	{0x315f, &op_update,	 15,   5,   1, 0xff, 0x00, 0x00, 0x00}, // update status f b 
	{0x325f, &op_update,	 15,   5,   2, 0xff, 0x00, 0x00, 0x00}, // update status f c 
	{0x335f, &op_update,	 15,   5,   3, 0xff, 0x00, 0x00, 0x00}, // update status f d 
	{0x345f, &op_update,	 15,   5,   4, 0xff, 0x00, 0x00, 0x00}, // update status f e 
	{0x355f, &op_update,	 15,   5,   5, 0xff, 0x00, 0x00, 0x00}, // update status f f 
	{0x365f, &op_update,	 15,   5,   6, 0xff, 0x00, 0x00, 0x00}, // update status f g 
	{0x375f, &op_update,	 15,   5,   7, 0xff, 0x00, 0x00, 0x00}, // update status f h 
	{0x385f, &op_update,	 15,   5,   8, 0xff, 0x00, 0x00, 0x00}, // update status f pc 
	{0x395f, &op_update,	 15,   5,   9, 0xff, 0x00, 0x00, 0x00}, // update status f ra 
	{0x3a5f, &op_update,	 15,   5,  10, 0xff, 0x00, 0x00, 0x00}, // update status f sb 
	{0x3b5f, &op_update,	 15,   5,  11, 0xff, 0x00, 0x00, 0x00}, // update status f sp 
	{0x3c5f, &op_update,	 15,   5,  12, 0xff, 0x00, 0x00, 0x00}, // update status f db 
	{0x3d5f, &op_update,	 15,   5,  13, 0xff, 0x00, 0x00, 0x00}, // update status f cb 
	{0x3e5f, &op_update,	 15,   5,  14, 0xff, 0x00, 0x00, 0x00}, // update status f pi 
	{0x3f5f, &op_update,	 15,   5,   8, 0xff, 0x00, 0x04, 0x00}, // update status f <literal> 
	{0x306f, &op_update,	 15,   6,   0, 0xff, 0x00, 0x00, 0x00}, // update status g a 
	{0x316f, &op_update,	 15,   6,   1, 0xff, 0x00, 0x00, 0x00}, // update status g b 
	{0x326f, &op_update,	 15,   6,   2, 0xff, 0x00, 0x00, 0x00}, // update status g c 
	{0x336f, &op_update,	 15,   6,   3, 0xff, 0x00, 0x00, 0x00}, // update status g d 
	{0x346f, &op_update,	 15,   6,   4, 0xff, 0x00, 0x00, 0x00}, // update status g e 
	{0x356f, &op_update,	 15,   6,   5, 0xff, 0x00, 0x00, 0x00}, // update status g f 
	{0x366f, &op_update,	 15,   6,   6, 0xff, 0x00, 0x00, 0x00}, // update status g g 
	{0x376f, &op_update,	 15,   6,   7, 0xff, 0x00, 0x00, 0x00}, // update status g h 
	{0x386f, &op_update,	 15,   6,   8, 0xff, 0x00, 0x00, 0x00}, // update status g pc 
	{0x396f, &op_update,	 15,   6,   9, 0xff, 0x00, 0x00, 0x00}, // update status g ra 
	{0x3a6f, &op_update,	 15,   6,  10, 0xff, 0x00, 0x00, 0x00}, // update status g sb 
	{0x3b6f, &op_update,	 15,   6,  11, 0xff, 0x00, 0x00, 0x00}, // update status g sp 
	{0x3c6f, &op_update,	 15,   6,  12, 0xff, 0x00, 0x00, 0x00}, // update status g db 
	{0x3d6f, &op_update,	 15,   6,  13, 0xff, 0x00, 0x00, 0x00}, // update status g cb 
	{0x3e6f, &op_update,	 15,   6,  14, 0xff, 0x00, 0x00, 0x00}, // update status g pi 
	{0x3f6f, &op_update,	 15,   6,   8, 0xff, 0x00, 0x04, 0x00}, // update status g <literal> 
	{0x307f, &op_update,	 15,   7,   0, 0xff, 0x00, 0x00, 0x00}, // update status h a 
	{0x317f, &op_update,	 15,   7,   1, 0xff, 0x00, 0x00, 0x00}, // update status h b 
	{0x327f, &op_update,	 15,   7,   2, 0xff, 0x00, 0x00, 0x00}, // update status h c 
	{0x337f, &op_update,	 15,   7,   3, 0xff, 0x00, 0x00, 0x00}, // update status h d 
	{0x347f, &op_update,	 15,   7,   4, 0xff, 0x00, 0x00, 0x00}, // update status h e 
	{0x357f, &op_update,	 15,   7,   5, 0xff, 0x00, 0x00, 0x00}, // update status h f 
	{0x367f, &op_update,	 15,   7,   6, 0xff, 0x00, 0x00, 0x00}, // update status h g 
	{0x377f, &op_update,	 15,   7,   7, 0xff, 0x00, 0x00, 0x00}, // update status h h 
	{0x387f, &op_update,	 15,   7,   8, 0xff, 0x00, 0x00, 0x00}, // update status h pc 
	{0x397f, &op_update,	 15,   7,   9, 0xff, 0x00, 0x00, 0x00}, // update status h ra 
	{0x3a7f, &op_update,	 15,   7,  10, 0xff, 0x00, 0x00, 0x00}, // update status h sb 
	{0x3b7f, &op_update,	 15,   7,  11, 0xff, 0x00, 0x00, 0x00}, // update status h sp 
	{0x3c7f, &op_update,	 15,   7,  12, 0xff, 0x00, 0x00, 0x00}, // update status h db 
	{0x3d7f, &op_update,	 15,   7,  13, 0xff, 0x00, 0x00, 0x00}, // update status h cb 
	{0x3e7f, &op_update,	 15,   7,  14, 0xff, 0x00, 0x00, 0x00}, // update status h pi 
	{0x3f7f, &op_update,	 15,   7,   8, 0xff, 0x00, 0x04, 0x00}, // update status h <literal> 
	{0x308f, &op_update,	 15,   8,   0, 0xff, 0x00, 0x00, 0x00}, // update status pc a 
	{0x318f, &op_update,	 15,   8,   1, 0xff, 0x00, 0x00, 0x00}, // update status pc b 
	{0x328f, &op_update,	 15,   8,   2, 0xff, 0x00, 0x00, 0x00}, // update status pc c 
	{0x338f, &op_update,	 15,   8,   3, 0xff, 0x00, 0x00, 0x00}, // update status pc d 
	{0x348f, &op_update,	 15,   8,   4, 0xff, 0x00, 0x00, 0x00}, // update status pc e 
	{0x358f, &op_update,	 15,   8,   5, 0xff, 0x00, 0x00, 0x00}, // update status pc f 
	{0x368f, &op_update,	 15,   8,   6, 0xff, 0x00, 0x00, 0x00}, // update status pc g 
	{0x378f, &op_update,	 15,   8,   7, 0xff, 0x00, 0x00, 0x00}, // update status pc h 
	{0x388f, &op_update,	 15,   8,   8, 0xff, 0x00, 0x00, 0x00}, // update status pc pc 
	{0x398f, &op_update,	 15,   8,   9, 0xff, 0x00, 0x00, 0x00}, // update status pc ra 
	{0x3a8f, &op_update,	 15,   8,  10, 0xff, 0x00, 0x00, 0x00}, // update status pc sb 
	{0x3b8f, &op_update,	 15,   8,  11, 0xff, 0x00, 0x00, 0x00}, // update status pc sp 
	{0x3c8f, &op_update,	 15,   8,  12, 0xff, 0x00, 0x00, 0x00}, // update status pc db 
	{0x3d8f, &op_update,	 15,   8,  13, 0xff, 0x00, 0x00, 0x00}, // update status pc cb 
	{0x3e8f, &op_update,	 15,   8,  14, 0xff, 0x00, 0x00, 0x00}, // update status pc pi 
	{0x3f8f, &op_update,	 15,   8,   8, 0xff, 0x00, 0x04, 0x00}, // update status pc <literal> 
	{0x309f, &op_update,	 15,   9,   0, 0xff, 0x00, 0x00, 0x00}, // update status ra a 
	{0x319f, &op_update,	 15,   9,   1, 0xff, 0x00, 0x00, 0x00}, // update status ra b 
	{0x329f, &op_update,	 15,   9,   2, 0xff, 0x00, 0x00, 0x00}, // update status ra c 
	{0x339f, &op_update,	 15,   9,   3, 0xff, 0x00, 0x00, 0x00}, // update status ra d 
	{0x349f, &op_update,	 15,   9,   4, 0xff, 0x00, 0x00, 0x00}, // update status ra e 
	{0x359f, &op_update,	 15,   9,   5, 0xff, 0x00, 0x00, 0x00}, // update status ra f 
	{0x369f, &op_update,	 15,   9,   6, 0xff, 0x00, 0x00, 0x00}, // update status ra g 
	{0x379f, &op_update,	 15,   9,   7, 0xff, 0x00, 0x00, 0x00}, // update status ra h 
	{0x389f, &op_update,	 15,   9,   8, 0xff, 0x00, 0x00, 0x00}, // update status ra pc 
	{0x399f, &op_update,	 15,   9,   9, 0xff, 0x00, 0x00, 0x00}, // update status ra ra 
	{0x3a9f, &op_update,	 15,   9,  10, 0xff, 0x00, 0x00, 0x00}, // update status ra sb 
	{0x3b9f, &op_update,	 15,   9,  11, 0xff, 0x00, 0x00, 0x00}, // update status ra sp 
	{0x3c9f, &op_update,	 15,   9,  12, 0xff, 0x00, 0x00, 0x00}, // update status ra db 
	{0x3d9f, &op_update,	 15,   9,  13, 0xff, 0x00, 0x00, 0x00}, // update status ra cb 
	{0x3e9f, &op_update,	 15,   9,  14, 0xff, 0x00, 0x00, 0x00}, // update status ra pi 
	{0x3f9f, &op_update,	 15,   9,   8, 0xff, 0x00, 0x04, 0x00}, // update status ra <literal> 
	{0x30af, &op_update,	 15,  10,   0, 0xff, 0x00, 0x00, 0x00}, // update status sb a 
	{0x31af, &op_update,	 15,  10,   1, 0xff, 0x00, 0x00, 0x00}, // update status sb b 
	{0x32af, &op_update,	 15,  10,   2, 0xff, 0x00, 0x00, 0x00}, // update status sb c 
	{0x33af, &op_update,	 15,  10,   3, 0xff, 0x00, 0x00, 0x00}, // update status sb d 
	{0x34af, &op_update,	 15,  10,   4, 0xff, 0x00, 0x00, 0x00}, // update status sb e 
	{0x35af, &op_update,	 15,  10,   5, 0xff, 0x00, 0x00, 0x00}, // update status sb f 
	{0x36af, &op_update,	 15,  10,   6, 0xff, 0x00, 0x00, 0x00}, // update status sb g 
	{0x37af, &op_update,	 15,  10,   7, 0xff, 0x00, 0x00, 0x00}, // update status sb h 
	{0x38af, &op_update,	 15,  10,   8, 0xff, 0x00, 0x00, 0x00}, // update status sb pc 
	{0x39af, &op_update,	 15,  10,   9, 0xff, 0x00, 0x00, 0x00}, // update status sb ra 
	{0x3aaf, &op_update,	 15,  10,  10, 0xff, 0x00, 0x00, 0x00}, // update status sb sb 
	{0x3baf, &op_update,	 15,  10,  11, 0xff, 0x00, 0x00, 0x00}, // update status sb sp 
	{0x3caf, &op_update,	 15,  10,  12, 0xff, 0x00, 0x00, 0x00}, // update status sb db 
	{0x3daf, &op_update,	 15,  10,  13, 0xff, 0x00, 0x00, 0x00}, // update status sb cb 
	{0x3eaf, &op_update,	 15,  10,  14, 0xff, 0x00, 0x00, 0x00}, // update status sb pi 
	{0x3faf, &op_update,	 15,  10,   8, 0xff, 0x00, 0x04, 0x00}, // update status sb <literal> 
	{0x30bf, &op_update,	 15,  11,   0, 0xff, 0x00, 0x00, 0x00}, // update status sp a 
	{0x31bf, &op_update,	 15,  11,   1, 0xff, 0x00, 0x00, 0x00}, // update status sp b 
	{0x32bf, &op_update,	 15,  11,   2, 0xff, 0x00, 0x00, 0x00}, // update status sp c 
	{0x33bf, &op_update,	 15,  11,   3, 0xff, 0x00, 0x00, 0x00}, // update status sp d 
	{0x34bf, &op_update,	 15,  11,   4, 0xff, 0x00, 0x00, 0x00}, // update status sp e 
	{0x35bf, &op_update,	 15,  11,   5, 0xff, 0x00, 0x00, 0x00}, // update status sp f 
	{0x36bf, &op_update,	 15,  11,   6, 0xff, 0x00, 0x00, 0x00}, // update status sp g 
	{0x37bf, &op_update,	 15,  11,   7, 0xff, 0x00, 0x00, 0x00}, // update status sp h 
	{0x38bf, &op_update,	 15,  11,   8, 0xff, 0x00, 0x00, 0x00}, // update status sp pc 
	{0x39bf, &op_update,	 15,  11,   9, 0xff, 0x00, 0x00, 0x00}, // update status sp ra 
	{0x3abf, &op_update,	 15,  11,  10, 0xff, 0x00, 0x00, 0x00}, // update status sp sb 
	{0x3bbf, &op_update,	 15,  11,  11, 0xff, 0x00, 0x00, 0x00}, // update status sp sp 
	{0x3cbf, &op_update,	 15,  11,  12, 0xff, 0x00, 0x00, 0x00}, // update status sp db 
	{0x3dbf, &op_update,	 15,  11,  13, 0xff, 0x00, 0x00, 0x00}, // update status sp cb 
	{0x3ebf, &op_update,	 15,  11,  14, 0xff, 0x00, 0x00, 0x00}, // update status sp pi 
	{0x3fbf, &op_update,	 15,  11,   8, 0xff, 0x00, 0x04, 0x00}, // update status sp <literal> 
	{0x30cf, &op_update,	 15,  12,   0, 0xff, 0x00, 0x00, 0x00}, // update status db a 
	{0x31cf, &op_update,	 15,  12,   1, 0xff, 0x00, 0x00, 0x00}, // update status db b 
	{0x32cf, &op_update,	 15,  12,   2, 0xff, 0x00, 0x00, 0x00}, // update status db c 
	{0x33cf, &op_update,	 15,  12,   3, 0xff, 0x00, 0x00, 0x00}, // update status db d 
	{0x34cf, &op_update,	 15,  12,   4, 0xff, 0x00, 0x00, 0x00}, // update status db e 
	{0x35cf, &op_update,	 15,  12,   5, 0xff, 0x00, 0x00, 0x00}, // update status db f 
	{0x36cf, &op_update,	 15,  12,   6, 0xff, 0x00, 0x00, 0x00}, // update status db g 
	{0x37cf, &op_update,	 15,  12,   7, 0xff, 0x00, 0x00, 0x00}, // update status db h 
	{0x38cf, &op_update,	 15,  12,   8, 0xff, 0x00, 0x00, 0x00}, // update status db pc 
	{0x39cf, &op_update,	 15,  12,   9, 0xff, 0x00, 0x00, 0x00}, // update status db ra 
	{0x3acf, &op_update,	 15,  12,  10, 0xff, 0x00, 0x00, 0x00}, // update status db sb 
	{0x3bcf, &op_update,	 15,  12,  11, 0xff, 0x00, 0x00, 0x00}, // update status db sp 
	{0x3ccf, &op_update,	 15,  12,  12, 0xff, 0x00, 0x00, 0x00}, // update status db db 
	{0x3dcf, &op_update,	 15,  12,  13, 0xff, 0x00, 0x00, 0x00}, // update status db cb 
	{0x3ecf, &op_update,	 15,  12,  14, 0xff, 0x00, 0x00, 0x00}, // update status db pi 
	{0x3fcf, &op_update,	 15,  12,   8, 0xff, 0x00, 0x04, 0x00}, // update status db <literal> 
	{0x30df, &op_update,	 15,  13,   0, 0xff, 0x00, 0x00, 0x00}, // update status cb a 
	{0x31df, &op_update,	 15,  13,   1, 0xff, 0x00, 0x00, 0x00}, // update status cb b 
	{0x32df, &op_update,	 15,  13,   2, 0xff, 0x00, 0x00, 0x00}, // update status cb c 
	{0x33df, &op_update,	 15,  13,   3, 0xff, 0x00, 0x00, 0x00}, // update status cb d 
	{0x34df, &op_update,	 15,  13,   4, 0xff, 0x00, 0x00, 0x00}, // update status cb e 
	{0x35df, &op_update,	 15,  13,   5, 0xff, 0x00, 0x00, 0x00}, // update status cb f 
	{0x36df, &op_update,	 15,  13,   6, 0xff, 0x00, 0x00, 0x00}, // update status cb g 
	{0x37df, &op_update,	 15,  13,   7, 0xff, 0x00, 0x00, 0x00}, // update status cb h 
	{0x38df, &op_update,	 15,  13,   8, 0xff, 0x00, 0x00, 0x00}, // update status cb pc 
	{0x39df, &op_update,	 15,  13,   9, 0xff, 0x00, 0x00, 0x00}, // update status cb ra 
	{0x3adf, &op_update,	 15,  13,  10, 0xff, 0x00, 0x00, 0x00}, // update status cb sb 
	{0x3bdf, &op_update,	 15,  13,  11, 0xff, 0x00, 0x00, 0x00}, // update status cb sp 
	{0x3cdf, &op_update,	 15,  13,  12, 0xff, 0x00, 0x00, 0x00}, // update status cb db 
	{0x3ddf, &op_update,	 15,  13,  13, 0xff, 0x00, 0x00, 0x00}, // update status cb cb 
	{0x3edf, &op_update,	 15,  13,  14, 0xff, 0x00, 0x00, 0x00}, // update status cb pi 
	{0x3fdf, &op_update,	 15,  13,   8, 0xff, 0x00, 0x04, 0x00}, // update status cb <literal> 
	{0x30ef, &op_update,	 15,  14,   0, 0xff, 0x00, 0x00, 0x00}, // update status pi a 
	{0x31ef, &op_update,	 15,  14,   1, 0xff, 0x00, 0x00, 0x00}, // update status pi b 
	{0x32ef, &op_update,	 15,  14,   2, 0xff, 0x00, 0x00, 0x00}, // update status pi c 
	{0x33ef, &op_update,	 15,  14,   3, 0xff, 0x00, 0x00, 0x00}, // update status pi d 
	{0x34ef, &op_update,	 15,  14,   4, 0xff, 0x00, 0x00, 0x00}, // update status pi e 
	{0x35ef, &op_update,	 15,  14,   5, 0xff, 0x00, 0x00, 0x00}, // update status pi f 
	{0x36ef, &op_update,	 15,  14,   6, 0xff, 0x00, 0x00, 0x00}, // update status pi g 
	{0x37ef, &op_update,	 15,  14,   7, 0xff, 0x00, 0x00, 0x00}, // update status pi h 
	{0x38ef, &op_update,	 15,  14,   8, 0xff, 0x00, 0x00, 0x00}, // update status pi pc 
	{0x39ef, &op_update,	 15,  14,   9, 0xff, 0x00, 0x00, 0x00}, // update status pi ra 
	{0x3aef, &op_update,	 15,  14,  10, 0xff, 0x00, 0x00, 0x00}, // update status pi sb 
	{0x3bef, &op_update,	 15,  14,  11, 0xff, 0x00, 0x00, 0x00}, // update status pi sp 
	{0x3cef, &op_update,	 15,  14,  12, 0xff, 0x00, 0x00, 0x00}, // update status pi db 
	{0x3def, &op_update,	 15,  14,  13, 0xff, 0x00, 0x00, 0x00}, // update status pi cb 
	{0x3eef, &op_update,	 15,  14,  14, 0xff, 0x00, 0x00, 0x00}, // update status pi pi 
	{0x3fef, &op_update,	 15,  14,   8, 0xff, 0x00, 0x04, 0x00}, // update status pi <literal> 
	{0x30ff, &op_update,	 15,  15,   0, 0xff, 0x00, 0x00, 0x00}, // update status status a 
	{0x31ff, &op_update,	 15,  15,   1, 0xff, 0x00, 0x00, 0x00}, // update status status b 
	{0x32ff, &op_update,	 15,  15,   2, 0xff, 0x00, 0x00, 0x00}, // update status status c 
	{0x33ff, &op_update,	 15,  15,   3, 0xff, 0x00, 0x00, 0x00}, // update status status d 
	{0x34ff, &op_update,	 15,  15,   4, 0xff, 0x00, 0x00, 0x00}, // update status status e 
	{0x35ff, &op_update,	 15,  15,   5, 0xff, 0x00, 0x00, 0x00}, // update status status f 
	{0x36ff, &op_update,	 15,  15,   6, 0xff, 0x00, 0x00, 0x00}, // update status status g 
	{0x37ff, &op_update,	 15,  15,   7, 0xff, 0x00, 0x00, 0x00}, // update status status h 
	{0x38ff, &op_update,	 15,  15,   8, 0xff, 0x00, 0x00, 0x00}, // update status status pc 
	{0x39ff, &op_update,	 15,  15,   9, 0xff, 0x00, 0x00, 0x00}, // update status status ra 
	{0x3aff, &op_update,	 15,  15,  10, 0xff, 0x00, 0x00, 0x00}, // update status status sb 
	{0x3bff, &op_update,	 15,  15,  11, 0xff, 0x00, 0x00, 0x00}, // update status status sp 
	{0x3cff, &op_update,	 15,  15,  12, 0xff, 0x00, 0x00, 0x00}, // update status status db 
	{0x3dff, &op_update,	 15,  15,  13, 0xff, 0x00, 0x00, 0x00}, // update status status cb 
	{0x3eff, &op_update,	 15,  15,  14, 0xff, 0x00, 0x00, 0x00}, // update status status pi 
	{0x3fff, &op_update,	 15,  15,   8, 0xff, 0x00, 0x04, 0x00}, // update status status <literal> 
	{0x5000, &op_bcopy,	  0,   0,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy a a a 
	{0x5100, &op_bcopy,	  0,   0,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy a a b 
	{0x5200, &op_bcopy,	  0,   0,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy a a c 
	{0x5300, &op_bcopy,	  0,   0,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy a a d 
	{0x5400, &op_bcopy,	  0,   0,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy a a e 
	{0x5500, &op_bcopy,	  0,   0,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy a a f 
	{0x5600, &op_bcopy,	  0,   0,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy a a g 
	{0x5700, &op_bcopy,	  0,   0,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy a a h 
	{0x5800, &op_bcopy,	  0,   0,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy a a pc 
	{0x5900, &op_bcopy,	  0,   0,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy a a ra 
	{0x5a00, &op_bcopy,	  0,   0,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy a a sb 
	{0x5b00, &op_bcopy,	  0,   0,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy a a sp 
	{0x5c00, &op_bcopy,	  0,   0,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy a a db 
	{0x5d00, &op_bcopy,	  0,   0,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy a a cb 
	{0x5e00, &op_bcopy,	  0,   0,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy a a pi 
	{0x5f00, &op_bcopy,	  0,   0,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy a a <literal> 
	{0x5010, &op_bcopy,	  0,   1,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy a b a 
	{0x5110, &op_bcopy,	  0,   1,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy a b b 
	{0x5210, &op_bcopy,	  0,   1,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy a b c 
	{0x5310, &op_bcopy,	  0,   1,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy a b d 
	{0x5410, &op_bcopy,	  0,   1,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy a b e 
	{0x5510, &op_bcopy,	  0,   1,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy a b f 
	{0x5610, &op_bcopy,	  0,   1,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy a b g 
	{0x5710, &op_bcopy,	  0,   1,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy a b h 
	{0x5810, &op_bcopy,	  0,   1,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy a b pc 
	{0x5910, &op_bcopy,	  0,   1,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy a b ra 
	{0x5a10, &op_bcopy,	  0,   1,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy a b sb 
	{0x5b10, &op_bcopy,	  0,   1,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy a b sp 
	{0x5c10, &op_bcopy,	  0,   1,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy a b db 
	{0x5d10, &op_bcopy,	  0,   1,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy a b cb 
	{0x5e10, &op_bcopy,	  0,   1,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy a b pi 
	{0x5f10, &op_bcopy,	  0,   1,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy a b <literal> 
	{0x5020, &op_bcopy,	  0,   2,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy a c a 
	{0x5120, &op_bcopy,	  0,   2,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy a c b 
	{0x5220, &op_bcopy,	  0,   2,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy a c c 
	{0x5320, &op_bcopy,	  0,   2,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy a c d 
	{0x5420, &op_bcopy,	  0,   2,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy a c e 
	{0x5520, &op_bcopy,	  0,   2,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy a c f 
	{0x5620, &op_bcopy,	  0,   2,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy a c g 
	{0x5720, &op_bcopy,	  0,   2,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy a c h 
	{0x5820, &op_bcopy,	  0,   2,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy a c pc 
	{0x5920, &op_bcopy,	  0,   2,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy a c ra 
	{0x5a20, &op_bcopy,	  0,   2,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy a c sb 
	{0x5b20, &op_bcopy,	  0,   2,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy a c sp 
	{0x5c20, &op_bcopy,	  0,   2,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy a c db 
	{0x5d20, &op_bcopy,	  0,   2,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy a c cb 
	{0x5e20, &op_bcopy,	  0,   2,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy a c pi 
	{0x5f20, &op_bcopy,	  0,   2,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy a c <literal> 
	{0x5030, &op_bcopy,	  0,   3,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy a d a 
	{0x5130, &op_bcopy,	  0,   3,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy a d b 
	{0x5230, &op_bcopy,	  0,   3,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy a d c 
	{0x5330, &op_bcopy,	  0,   3,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy a d d 
	{0x5430, &op_bcopy,	  0,   3,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy a d e 
	{0x5530, &op_bcopy,	  0,   3,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy a d f 
	{0x5630, &op_bcopy,	  0,   3,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy a d g 
	{0x5730, &op_bcopy,	  0,   3,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy a d h 
	{0x5830, &op_bcopy,	  0,   3,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy a d pc 
	{0x5930, &op_bcopy,	  0,   3,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy a d ra 
	{0x5a30, &op_bcopy,	  0,   3,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy a d sb 
	{0x5b30, &op_bcopy,	  0,   3,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy a d sp 
	{0x5c30, &op_bcopy,	  0,   3,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy a d db 
	{0x5d30, &op_bcopy,	  0,   3,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy a d cb 
	{0x5e30, &op_bcopy,	  0,   3,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy a d pi 
	{0x5f30, &op_bcopy,	  0,   3,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy a d <literal> 
	{0x5040, &op_bcopy,	  0,   4,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy a e a 
	{0x5140, &op_bcopy,	  0,   4,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy a e b 
	{0x5240, &op_bcopy,	  0,   4,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy a e c 
	{0x5340, &op_bcopy,	  0,   4,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy a e d 
	{0x5440, &op_bcopy,	  0,   4,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy a e e 
	{0x5540, &op_bcopy,	  0,   4,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy a e f 
	{0x5640, &op_bcopy,	  0,   4,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy a e g 
	{0x5740, &op_bcopy,	  0,   4,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy a e h 
	{0x5840, &op_bcopy,	  0,   4,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy a e pc 
	{0x5940, &op_bcopy,	  0,   4,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy a e ra 
	{0x5a40, &op_bcopy,	  0,   4,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy a e sb 
	{0x5b40, &op_bcopy,	  0,   4,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy a e sp 
	{0x5c40, &op_bcopy,	  0,   4,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy a e db 
	{0x5d40, &op_bcopy,	  0,   4,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy a e cb 
	{0x5e40, &op_bcopy,	  0,   4,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy a e pi 
	{0x5f40, &op_bcopy,	  0,   4,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy a e <literal> 
	{0x5050, &op_bcopy,	  0,   5,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy a f a 
	{0x5150, &op_bcopy,	  0,   5,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy a f b 
	{0x5250, &op_bcopy,	  0,   5,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy a f c 
	{0x5350, &op_bcopy,	  0,   5,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy a f d 
	{0x5450, &op_bcopy,	  0,   5,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy a f e 
	{0x5550, &op_bcopy,	  0,   5,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy a f f 
	{0x5650, &op_bcopy,	  0,   5,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy a f g 
	{0x5750, &op_bcopy,	  0,   5,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy a f h 
	{0x5850, &op_bcopy,	  0,   5,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy a f pc 
	{0x5950, &op_bcopy,	  0,   5,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy a f ra 
	{0x5a50, &op_bcopy,	  0,   5,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy a f sb 
	{0x5b50, &op_bcopy,	  0,   5,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy a f sp 
	{0x5c50, &op_bcopy,	  0,   5,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy a f db 
	{0x5d50, &op_bcopy,	  0,   5,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy a f cb 
	{0x5e50, &op_bcopy,	  0,   5,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy a f pi 
	{0x5f50, &op_bcopy,	  0,   5,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy a f <literal> 
	{0x5060, &op_bcopy,	  0,   6,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy a g a 
	{0x5160, &op_bcopy,	  0,   6,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy a g b 
	{0x5260, &op_bcopy,	  0,   6,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy a g c 
	{0x5360, &op_bcopy,	  0,   6,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy a g d 
	{0x5460, &op_bcopy,	  0,   6,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy a g e 
	{0x5560, &op_bcopy,	  0,   6,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy a g f 
	{0x5660, &op_bcopy,	  0,   6,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy a g g 
	{0x5760, &op_bcopy,	  0,   6,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy a g h 
	{0x5860, &op_bcopy,	  0,   6,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy a g pc 
	{0x5960, &op_bcopy,	  0,   6,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy a g ra 
	{0x5a60, &op_bcopy,	  0,   6,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy a g sb 
	{0x5b60, &op_bcopy,	  0,   6,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy a g sp 
	{0x5c60, &op_bcopy,	  0,   6,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy a g db 
	{0x5d60, &op_bcopy,	  0,   6,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy a g cb 
	{0x5e60, &op_bcopy,	  0,   6,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy a g pi 
	{0x5f60, &op_bcopy,	  0,   6,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy a g <literal> 
	{0x5070, &op_bcopy,	  0,   7,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy a h a 
	{0x5170, &op_bcopy,	  0,   7,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy a h b 
	{0x5270, &op_bcopy,	  0,   7,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy a h c 
	{0x5370, &op_bcopy,	  0,   7,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy a h d 
	{0x5470, &op_bcopy,	  0,   7,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy a h e 
	{0x5570, &op_bcopy,	  0,   7,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy a h f 
	{0x5670, &op_bcopy,	  0,   7,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy a h g 
	{0x5770, &op_bcopy,	  0,   7,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy a h h 
	{0x5870, &op_bcopy,	  0,   7,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy a h pc 
	{0x5970, &op_bcopy,	  0,   7,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy a h ra 
	{0x5a70, &op_bcopy,	  0,   7,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy a h sb 
	{0x5b70, &op_bcopy,	  0,   7,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy a h sp 
	{0x5c70, &op_bcopy,	  0,   7,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy a h db 
	{0x5d70, &op_bcopy,	  0,   7,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy a h cb 
	{0x5e70, &op_bcopy,	  0,   7,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy a h pi 
	{0x5f70, &op_bcopy,	  0,   7,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy a h <literal> 
	{0x5080, &op_bcopy,	  0,   8,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy a pc a 
	{0x5180, &op_bcopy,	  0,   8,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy a pc b 
	{0x5280, &op_bcopy,	  0,   8,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy a pc c 
	{0x5380, &op_bcopy,	  0,   8,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy a pc d 
	{0x5480, &op_bcopy,	  0,   8,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy a pc e 
	{0x5580, &op_bcopy,	  0,   8,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy a pc f 
	{0x5680, &op_bcopy,	  0,   8,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy a pc g 
	{0x5780, &op_bcopy,	  0,   8,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy a pc h 
	{0x5880, &op_bcopy,	  0,   8,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy a pc pc 
	{0x5980, &op_bcopy,	  0,   8,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy a pc ra 
	{0x5a80, &op_bcopy,	  0,   8,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy a pc sb 
	{0x5b80, &op_bcopy,	  0,   8,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy a pc sp 
	{0x5c80, &op_bcopy,	  0,   8,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy a pc db 
	{0x5d80, &op_bcopy,	  0,   8,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy a pc cb 
	{0x5e80, &op_bcopy,	  0,   8,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy a pc pi 
	{0x5f80, &op_bcopy,	  0,   8,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy a pc <literal> 
	{0x5090, &op_bcopy,	  0,   9,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy a ra a 
	{0x5190, &op_bcopy,	  0,   9,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy a ra b 
	{0x5290, &op_bcopy,	  0,   9,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy a ra c 
	{0x5390, &op_bcopy,	  0,   9,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy a ra d 
	{0x5490, &op_bcopy,	  0,   9,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy a ra e 
	{0x5590, &op_bcopy,	  0,   9,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy a ra f 
	{0x5690, &op_bcopy,	  0,   9,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy a ra g 
	{0x5790, &op_bcopy,	  0,   9,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy a ra h 
	{0x5890, &op_bcopy,	  0,   9,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy a ra pc 
	{0x5990, &op_bcopy,	  0,   9,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy a ra ra 
	{0x5a90, &op_bcopy,	  0,   9,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy a ra sb 
	{0x5b90, &op_bcopy,	  0,   9,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy a ra sp 
	{0x5c90, &op_bcopy,	  0,   9,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy a ra db 
	{0x5d90, &op_bcopy,	  0,   9,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy a ra cb 
	{0x5e90, &op_bcopy,	  0,   9,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy a ra pi 
	{0x5f90, &op_bcopy,	  0,   9,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy a ra <literal> 
	{0x50a0, &op_bcopy,	  0,  10,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy a sb a 
	{0x51a0, &op_bcopy,	  0,  10,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy a sb b 
	{0x52a0, &op_bcopy,	  0,  10,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy a sb c 
	{0x53a0, &op_bcopy,	  0,  10,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy a sb d 
	{0x54a0, &op_bcopy,	  0,  10,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy a sb e 
	{0x55a0, &op_bcopy,	  0,  10,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy a sb f 
	{0x56a0, &op_bcopy,	  0,  10,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy a sb g 
	{0x57a0, &op_bcopy,	  0,  10,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy a sb h 
	{0x58a0, &op_bcopy,	  0,  10,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy a sb pc 
	{0x59a0, &op_bcopy,	  0,  10,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy a sb ra 
	{0x5aa0, &op_bcopy,	  0,  10,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy a sb sb 
	{0x5ba0, &op_bcopy,	  0,  10,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy a sb sp 
	{0x5ca0, &op_bcopy,	  0,  10,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy a sb db 
	{0x5da0, &op_bcopy,	  0,  10,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy a sb cb 
	{0x5ea0, &op_bcopy,	  0,  10,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy a sb pi 
	{0x5fa0, &op_bcopy,	  0,  10,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy a sb <literal> 
	{0x50b0, &op_bcopy,	  0,  11,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy a sp a 
	{0x51b0, &op_bcopy,	  0,  11,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy a sp b 
	{0x52b0, &op_bcopy,	  0,  11,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy a sp c 
	{0x53b0, &op_bcopy,	  0,  11,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy a sp d 
	{0x54b0, &op_bcopy,	  0,  11,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy a sp e 
	{0x55b0, &op_bcopy,	  0,  11,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy a sp f 
	{0x56b0, &op_bcopy,	  0,  11,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy a sp g 
	{0x57b0, &op_bcopy,	  0,  11,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy a sp h 
	{0x58b0, &op_bcopy,	  0,  11,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy a sp pc 
	{0x59b0, &op_bcopy,	  0,  11,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy a sp ra 
	{0x5ab0, &op_bcopy,	  0,  11,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy a sp sb 
	{0x5bb0, &op_bcopy,	  0,  11,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy a sp sp 
	{0x5cb0, &op_bcopy,	  0,  11,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy a sp db 
	{0x5db0, &op_bcopy,	  0,  11,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy a sp cb 
	{0x5eb0, &op_bcopy,	  0,  11,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy a sp pi 
	{0x5fb0, &op_bcopy,	  0,  11,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy a sp <literal> 
	{0x50c0, &op_bcopy,	  0,  12,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy a db a 
	{0x51c0, &op_bcopy,	  0,  12,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy a db b 
	{0x52c0, &op_bcopy,	  0,  12,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy a db c 
	{0x53c0, &op_bcopy,	  0,  12,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy a db d 
	{0x54c0, &op_bcopy,	  0,  12,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy a db e 
	{0x55c0, &op_bcopy,	  0,  12,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy a db f 
	{0x56c0, &op_bcopy,	  0,  12,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy a db g 
	{0x57c0, &op_bcopy,	  0,  12,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy a db h 
	{0x58c0, &op_bcopy,	  0,  12,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy a db pc 
	{0x59c0, &op_bcopy,	  0,  12,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy a db ra 
	{0x5ac0, &op_bcopy,	  0,  12,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy a db sb 
	{0x5bc0, &op_bcopy,	  0,  12,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy a db sp 
	{0x5cc0, &op_bcopy,	  0,  12,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy a db db 
	{0x5dc0, &op_bcopy,	  0,  12,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy a db cb 
	{0x5ec0, &op_bcopy,	  0,  12,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy a db pi 
	{0x5fc0, &op_bcopy,	  0,  12,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy a db <literal> 
	{0x50d0, &op_bcopy,	  0,  13,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy a cb a 
	{0x51d0, &op_bcopy,	  0,  13,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy a cb b 
	{0x52d0, &op_bcopy,	  0,  13,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy a cb c 
	{0x53d0, &op_bcopy,	  0,  13,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy a cb d 
	{0x54d0, &op_bcopy,	  0,  13,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy a cb e 
	{0x55d0, &op_bcopy,	  0,  13,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy a cb f 
	{0x56d0, &op_bcopy,	  0,  13,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy a cb g 
	{0x57d0, &op_bcopy,	  0,  13,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy a cb h 
	{0x58d0, &op_bcopy,	  0,  13,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy a cb pc 
	{0x59d0, &op_bcopy,	  0,  13,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy a cb ra 
	{0x5ad0, &op_bcopy,	  0,  13,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy a cb sb 
	{0x5bd0, &op_bcopy,	  0,  13,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy a cb sp 
	{0x5cd0, &op_bcopy,	  0,  13,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy a cb db 
	{0x5dd0, &op_bcopy,	  0,  13,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy a cb cb 
	{0x5ed0, &op_bcopy,	  0,  13,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy a cb pi 
	{0x5fd0, &op_bcopy,	  0,  13,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy a cb <literal> 
	{0x50e0, &op_bcopy,	  0,  14,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy a pi a 
	{0x51e0, &op_bcopy,	  0,  14,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy a pi b 
	{0x52e0, &op_bcopy,	  0,  14,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy a pi c 
	{0x53e0, &op_bcopy,	  0,  14,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy a pi d 
	{0x54e0, &op_bcopy,	  0,  14,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy a pi e 
	{0x55e0, &op_bcopy,	  0,  14,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy a pi f 
	{0x56e0, &op_bcopy,	  0,  14,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy a pi g 
	{0x57e0, &op_bcopy,	  0,  14,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy a pi h 
	{0x58e0, &op_bcopy,	  0,  14,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy a pi pc 
	{0x59e0, &op_bcopy,	  0,  14,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy a pi ra 
	{0x5ae0, &op_bcopy,	  0,  14,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy a pi sb 
	{0x5be0, &op_bcopy,	  0,  14,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy a pi sp 
	{0x5ce0, &op_bcopy,	  0,  14,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy a pi db 
	{0x5de0, &op_bcopy,	  0,  14,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy a pi cb 
	{0x5ee0, &op_bcopy,	  0,  14,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy a pi pi 
	{0x5fe0, &op_bcopy,	  0,  14,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy a pi <literal> 
	{0x50f0, &op_bcopy,	  0,  15,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy a status a 
	{0x51f0, &op_bcopy,	  0,  15,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy a status b 
	{0x52f0, &op_bcopy,	  0,  15,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy a status c 
	{0x53f0, &op_bcopy,	  0,  15,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy a status d 
	{0x54f0, &op_bcopy,	  0,  15,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy a status e 
	{0x55f0, &op_bcopy,	  0,  15,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy a status f 
	{0x56f0, &op_bcopy,	  0,  15,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy a status g 
	{0x57f0, &op_bcopy,	  0,  15,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy a status h 
	{0x58f0, &op_bcopy,	  0,  15,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy a status pc 
	{0x59f0, &op_bcopy,	  0,  15,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy a status ra 
	{0x5af0, &op_bcopy,	  0,  15,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy a status sb 
	{0x5bf0, &op_bcopy,	  0,  15,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy a status sp 
	{0x5cf0, &op_bcopy,	  0,  15,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy a status db 
	{0x5df0, &op_bcopy,	  0,  15,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy a status cb 
	{0x5ef0, &op_bcopy,	  0,  15,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy a status pi 
	{0x5ff0, &op_bcopy,	  0,  15,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy a status <literal> 
	{0x5001, &op_bcopy,	  1,   0,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy b a a 
	{0x5101, &op_bcopy,	  1,   0,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy b a b 
	{0x5201, &op_bcopy,	  1,   0,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy b a c 
	{0x5301, &op_bcopy,	  1,   0,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy b a d 
	{0x5401, &op_bcopy,	  1,   0,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy b a e 
	{0x5501, &op_bcopy,	  1,   0,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy b a f 
	{0x5601, &op_bcopy,	  1,   0,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy b a g 
	{0x5701, &op_bcopy,	  1,   0,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy b a h 
	{0x5801, &op_bcopy,	  1,   0,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy b a pc 
	{0x5901, &op_bcopy,	  1,   0,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy b a ra 
	{0x5a01, &op_bcopy,	  1,   0,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy b a sb 
	{0x5b01, &op_bcopy,	  1,   0,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy b a sp 
	{0x5c01, &op_bcopy,	  1,   0,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy b a db 
	{0x5d01, &op_bcopy,	  1,   0,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy b a cb 
	{0x5e01, &op_bcopy,	  1,   0,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy b a pi 
	{0x5f01, &op_bcopy,	  1,   0,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy b a <literal> 
	{0x5011, &op_bcopy,	  1,   1,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy b b a 
	{0x5111, &op_bcopy,	  1,   1,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy b b b 
	{0x5211, &op_bcopy,	  1,   1,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy b b c 
	{0x5311, &op_bcopy,	  1,   1,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy b b d 
	{0x5411, &op_bcopy,	  1,   1,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy b b e 
	{0x5511, &op_bcopy,	  1,   1,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy b b f 
	{0x5611, &op_bcopy,	  1,   1,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy b b g 
	{0x5711, &op_bcopy,	  1,   1,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy b b h 
	{0x5811, &op_bcopy,	  1,   1,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy b b pc 
	{0x5911, &op_bcopy,	  1,   1,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy b b ra 
	{0x5a11, &op_bcopy,	  1,   1,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy b b sb 
	{0x5b11, &op_bcopy,	  1,   1,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy b b sp 
	{0x5c11, &op_bcopy,	  1,   1,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy b b db 
	{0x5d11, &op_bcopy,	  1,   1,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy b b cb 
	{0x5e11, &op_bcopy,	  1,   1,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy b b pi 
	{0x5f11, &op_bcopy,	  1,   1,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy b b <literal> 
	{0x5021, &op_bcopy,	  1,   2,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy b c a 
	{0x5121, &op_bcopy,	  1,   2,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy b c b 
	{0x5221, &op_bcopy,	  1,   2,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy b c c 
	{0x5321, &op_bcopy,	  1,   2,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy b c d 
	{0x5421, &op_bcopy,	  1,   2,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy b c e 
	{0x5521, &op_bcopy,	  1,   2,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy b c f 
	{0x5621, &op_bcopy,	  1,   2,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy b c g 
	{0x5721, &op_bcopy,	  1,   2,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy b c h 
	{0x5821, &op_bcopy,	  1,   2,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy b c pc 
	{0x5921, &op_bcopy,	  1,   2,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy b c ra 
	{0x5a21, &op_bcopy,	  1,   2,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy b c sb 
	{0x5b21, &op_bcopy,	  1,   2,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy b c sp 
	{0x5c21, &op_bcopy,	  1,   2,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy b c db 
	{0x5d21, &op_bcopy,	  1,   2,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy b c cb 
	{0x5e21, &op_bcopy,	  1,   2,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy b c pi 
	{0x5f21, &op_bcopy,	  1,   2,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy b c <literal> 
	{0x5031, &op_bcopy,	  1,   3,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy b d a 
	{0x5131, &op_bcopy,	  1,   3,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy b d b 
	{0x5231, &op_bcopy,	  1,   3,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy b d c 
	{0x5331, &op_bcopy,	  1,   3,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy b d d 
	{0x5431, &op_bcopy,	  1,   3,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy b d e 
	{0x5531, &op_bcopy,	  1,   3,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy b d f 
	{0x5631, &op_bcopy,	  1,   3,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy b d g 
	{0x5731, &op_bcopy,	  1,   3,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy b d h 
	{0x5831, &op_bcopy,	  1,   3,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy b d pc 
	{0x5931, &op_bcopy,	  1,   3,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy b d ra 
	{0x5a31, &op_bcopy,	  1,   3,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy b d sb 
	{0x5b31, &op_bcopy,	  1,   3,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy b d sp 
	{0x5c31, &op_bcopy,	  1,   3,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy b d db 
	{0x5d31, &op_bcopy,	  1,   3,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy b d cb 
	{0x5e31, &op_bcopy,	  1,   3,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy b d pi 
	{0x5f31, &op_bcopy,	  1,   3,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy b d <literal> 
	{0x5041, &op_bcopy,	  1,   4,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy b e a 
	{0x5141, &op_bcopy,	  1,   4,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy b e b 
	{0x5241, &op_bcopy,	  1,   4,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy b e c 
	{0x5341, &op_bcopy,	  1,   4,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy b e d 
	{0x5441, &op_bcopy,	  1,   4,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy b e e 
	{0x5541, &op_bcopy,	  1,   4,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy b e f 
	{0x5641, &op_bcopy,	  1,   4,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy b e g 
	{0x5741, &op_bcopy,	  1,   4,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy b e h 
	{0x5841, &op_bcopy,	  1,   4,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy b e pc 
	{0x5941, &op_bcopy,	  1,   4,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy b e ra 
	{0x5a41, &op_bcopy,	  1,   4,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy b e sb 
	{0x5b41, &op_bcopy,	  1,   4,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy b e sp 
	{0x5c41, &op_bcopy,	  1,   4,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy b e db 
	{0x5d41, &op_bcopy,	  1,   4,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy b e cb 
	{0x5e41, &op_bcopy,	  1,   4,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy b e pi 
	{0x5f41, &op_bcopy,	  1,   4,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy b e <literal> 
	{0x5051, &op_bcopy,	  1,   5,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy b f a 
	{0x5151, &op_bcopy,	  1,   5,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy b f b 
	{0x5251, &op_bcopy,	  1,   5,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy b f c 
	{0x5351, &op_bcopy,	  1,   5,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy b f d 
	{0x5451, &op_bcopy,	  1,   5,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy b f e 
	{0x5551, &op_bcopy,	  1,   5,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy b f f 
	{0x5651, &op_bcopy,	  1,   5,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy b f g 
	{0x5751, &op_bcopy,	  1,   5,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy b f h 
	{0x5851, &op_bcopy,	  1,   5,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy b f pc 
	{0x5951, &op_bcopy,	  1,   5,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy b f ra 
	{0x5a51, &op_bcopy,	  1,   5,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy b f sb 
	{0x5b51, &op_bcopy,	  1,   5,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy b f sp 
	{0x5c51, &op_bcopy,	  1,   5,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy b f db 
	{0x5d51, &op_bcopy,	  1,   5,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy b f cb 
	{0x5e51, &op_bcopy,	  1,   5,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy b f pi 
	{0x5f51, &op_bcopy,	  1,   5,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy b f <literal> 
	{0x5061, &op_bcopy,	  1,   6,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy b g a 
	{0x5161, &op_bcopy,	  1,   6,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy b g b 
	{0x5261, &op_bcopy,	  1,   6,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy b g c 
	{0x5361, &op_bcopy,	  1,   6,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy b g d 
	{0x5461, &op_bcopy,	  1,   6,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy b g e 
	{0x5561, &op_bcopy,	  1,   6,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy b g f 
	{0x5661, &op_bcopy,	  1,   6,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy b g g 
	{0x5761, &op_bcopy,	  1,   6,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy b g h 
	{0x5861, &op_bcopy,	  1,   6,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy b g pc 
	{0x5961, &op_bcopy,	  1,   6,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy b g ra 
	{0x5a61, &op_bcopy,	  1,   6,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy b g sb 
	{0x5b61, &op_bcopy,	  1,   6,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy b g sp 
	{0x5c61, &op_bcopy,	  1,   6,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy b g db 
	{0x5d61, &op_bcopy,	  1,   6,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy b g cb 
	{0x5e61, &op_bcopy,	  1,   6,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy b g pi 
	{0x5f61, &op_bcopy,	  1,   6,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy b g <literal> 
	{0x5071, &op_bcopy,	  1,   7,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy b h a 
	{0x5171, &op_bcopy,	  1,   7,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy b h b 
	{0x5271, &op_bcopy,	  1,   7,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy b h c 
	{0x5371, &op_bcopy,	  1,   7,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy b h d 
	{0x5471, &op_bcopy,	  1,   7,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy b h e 
	{0x5571, &op_bcopy,	  1,   7,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy b h f 
	{0x5671, &op_bcopy,	  1,   7,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy b h g 
	{0x5771, &op_bcopy,	  1,   7,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy b h h 
	{0x5871, &op_bcopy,	  1,   7,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy b h pc 
	{0x5971, &op_bcopy,	  1,   7,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy b h ra 
	{0x5a71, &op_bcopy,	  1,   7,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy b h sb 
	{0x5b71, &op_bcopy,	  1,   7,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy b h sp 
	{0x5c71, &op_bcopy,	  1,   7,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy b h db 
	{0x5d71, &op_bcopy,	  1,   7,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy b h cb 
	{0x5e71, &op_bcopy,	  1,   7,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy b h pi 
	{0x5f71, &op_bcopy,	  1,   7,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy b h <literal> 
	{0x5081, &op_bcopy,	  1,   8,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy b pc a 
	{0x5181, &op_bcopy,	  1,   8,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy b pc b 
	{0x5281, &op_bcopy,	  1,   8,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy b pc c 
	{0x5381, &op_bcopy,	  1,   8,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy b pc d 
	{0x5481, &op_bcopy,	  1,   8,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy b pc e 
	{0x5581, &op_bcopy,	  1,   8,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy b pc f 
	{0x5681, &op_bcopy,	  1,   8,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy b pc g 
	{0x5781, &op_bcopy,	  1,   8,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy b pc h 
	{0x5881, &op_bcopy,	  1,   8,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy b pc pc 
	{0x5981, &op_bcopy,	  1,   8,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy b pc ra 
	{0x5a81, &op_bcopy,	  1,   8,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy b pc sb 
	{0x5b81, &op_bcopy,	  1,   8,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy b pc sp 
	{0x5c81, &op_bcopy,	  1,   8,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy b pc db 
	{0x5d81, &op_bcopy,	  1,   8,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy b pc cb 
	{0x5e81, &op_bcopy,	  1,   8,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy b pc pi 
	{0x5f81, &op_bcopy,	  1,   8,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy b pc <literal> 
	{0x5091, &op_bcopy,	  1,   9,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy b ra a 
	{0x5191, &op_bcopy,	  1,   9,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy b ra b 
	{0x5291, &op_bcopy,	  1,   9,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy b ra c 
	{0x5391, &op_bcopy,	  1,   9,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy b ra d 
	{0x5491, &op_bcopy,	  1,   9,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy b ra e 
	{0x5591, &op_bcopy,	  1,   9,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy b ra f 
	{0x5691, &op_bcopy,	  1,   9,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy b ra g 
	{0x5791, &op_bcopy,	  1,   9,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy b ra h 
	{0x5891, &op_bcopy,	  1,   9,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy b ra pc 
	{0x5991, &op_bcopy,	  1,   9,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy b ra ra 
	{0x5a91, &op_bcopy,	  1,   9,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy b ra sb 
	{0x5b91, &op_bcopy,	  1,   9,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy b ra sp 
	{0x5c91, &op_bcopy,	  1,   9,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy b ra db 
	{0x5d91, &op_bcopy,	  1,   9,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy b ra cb 
	{0x5e91, &op_bcopy,	  1,   9,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy b ra pi 
	{0x5f91, &op_bcopy,	  1,   9,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy b ra <literal> 
	{0x50a1, &op_bcopy,	  1,  10,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy b sb a 
	{0x51a1, &op_bcopy,	  1,  10,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy b sb b 
	{0x52a1, &op_bcopy,	  1,  10,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy b sb c 
	{0x53a1, &op_bcopy,	  1,  10,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy b sb d 
	{0x54a1, &op_bcopy,	  1,  10,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy b sb e 
	{0x55a1, &op_bcopy,	  1,  10,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy b sb f 
	{0x56a1, &op_bcopy,	  1,  10,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy b sb g 
	{0x57a1, &op_bcopy,	  1,  10,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy b sb h 
	{0x58a1, &op_bcopy,	  1,  10,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy b sb pc 
	{0x59a1, &op_bcopy,	  1,  10,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy b sb ra 
	{0x5aa1, &op_bcopy,	  1,  10,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy b sb sb 
	{0x5ba1, &op_bcopy,	  1,  10,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy b sb sp 
	{0x5ca1, &op_bcopy,	  1,  10,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy b sb db 
	{0x5da1, &op_bcopy,	  1,  10,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy b sb cb 
	{0x5ea1, &op_bcopy,	  1,  10,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy b sb pi 
	{0x5fa1, &op_bcopy,	  1,  10,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy b sb <literal> 
	{0x50b1, &op_bcopy,	  1,  11,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy b sp a 
	{0x51b1, &op_bcopy,	  1,  11,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy b sp b 
	{0x52b1, &op_bcopy,	  1,  11,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy b sp c 
	{0x53b1, &op_bcopy,	  1,  11,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy b sp d 
	{0x54b1, &op_bcopy,	  1,  11,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy b sp e 
	{0x55b1, &op_bcopy,	  1,  11,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy b sp f 
	{0x56b1, &op_bcopy,	  1,  11,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy b sp g 
	{0x57b1, &op_bcopy,	  1,  11,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy b sp h 
	{0x58b1, &op_bcopy,	  1,  11,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy b sp pc 
	{0x59b1, &op_bcopy,	  1,  11,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy b sp ra 
	{0x5ab1, &op_bcopy,	  1,  11,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy b sp sb 
	{0x5bb1, &op_bcopy,	  1,  11,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy b sp sp 
	{0x5cb1, &op_bcopy,	  1,  11,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy b sp db 
	{0x5db1, &op_bcopy,	  1,  11,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy b sp cb 
	{0x5eb1, &op_bcopy,	  1,  11,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy b sp pi 
	{0x5fb1, &op_bcopy,	  1,  11,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy b sp <literal> 
	{0x50c1, &op_bcopy,	  1,  12,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy b db a 
	{0x51c1, &op_bcopy,	  1,  12,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy b db b 
	{0x52c1, &op_bcopy,	  1,  12,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy b db c 
	{0x53c1, &op_bcopy,	  1,  12,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy b db d 
	{0x54c1, &op_bcopy,	  1,  12,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy b db e 
	{0x55c1, &op_bcopy,	  1,  12,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy b db f 
	{0x56c1, &op_bcopy,	  1,  12,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy b db g 
	{0x57c1, &op_bcopy,	  1,  12,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy b db h 
	{0x58c1, &op_bcopy,	  1,  12,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy b db pc 
	{0x59c1, &op_bcopy,	  1,  12,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy b db ra 
	{0x5ac1, &op_bcopy,	  1,  12,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy b db sb 
	{0x5bc1, &op_bcopy,	  1,  12,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy b db sp 
	{0x5cc1, &op_bcopy,	  1,  12,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy b db db 
	{0x5dc1, &op_bcopy,	  1,  12,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy b db cb 
	{0x5ec1, &op_bcopy,	  1,  12,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy b db pi 
	{0x5fc1, &op_bcopy,	  1,  12,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy b db <literal> 
	{0x50d1, &op_bcopy,	  1,  13,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy b cb a 
	{0x51d1, &op_bcopy,	  1,  13,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy b cb b 
	{0x52d1, &op_bcopy,	  1,  13,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy b cb c 
	{0x53d1, &op_bcopy,	  1,  13,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy b cb d 
	{0x54d1, &op_bcopy,	  1,  13,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy b cb e 
	{0x55d1, &op_bcopy,	  1,  13,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy b cb f 
	{0x56d1, &op_bcopy,	  1,  13,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy b cb g 
	{0x57d1, &op_bcopy,	  1,  13,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy b cb h 
	{0x58d1, &op_bcopy,	  1,  13,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy b cb pc 
	{0x59d1, &op_bcopy,	  1,  13,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy b cb ra 
	{0x5ad1, &op_bcopy,	  1,  13,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy b cb sb 
	{0x5bd1, &op_bcopy,	  1,  13,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy b cb sp 
	{0x5cd1, &op_bcopy,	  1,  13,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy b cb db 
	{0x5dd1, &op_bcopy,	  1,  13,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy b cb cb 
	{0x5ed1, &op_bcopy,	  1,  13,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy b cb pi 
	{0x5fd1, &op_bcopy,	  1,  13,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy b cb <literal> 
	{0x50e1, &op_bcopy,	  1,  14,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy b pi a 
	{0x51e1, &op_bcopy,	  1,  14,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy b pi b 
	{0x52e1, &op_bcopy,	  1,  14,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy b pi c 
	{0x53e1, &op_bcopy,	  1,  14,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy b pi d 
	{0x54e1, &op_bcopy,	  1,  14,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy b pi e 
	{0x55e1, &op_bcopy,	  1,  14,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy b pi f 
	{0x56e1, &op_bcopy,	  1,  14,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy b pi g 
	{0x57e1, &op_bcopy,	  1,  14,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy b pi h 
	{0x58e1, &op_bcopy,	  1,  14,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy b pi pc 
	{0x59e1, &op_bcopy,	  1,  14,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy b pi ra 
	{0x5ae1, &op_bcopy,	  1,  14,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy b pi sb 
	{0x5be1, &op_bcopy,	  1,  14,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy b pi sp 
	{0x5ce1, &op_bcopy,	  1,  14,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy b pi db 
	{0x5de1, &op_bcopy,	  1,  14,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy b pi cb 
	{0x5ee1, &op_bcopy,	  1,  14,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy b pi pi 
	{0x5fe1, &op_bcopy,	  1,  14,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy b pi <literal> 
	{0x50f1, &op_bcopy,	  1,  15,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy b status a 
	{0x51f1, &op_bcopy,	  1,  15,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy b status b 
	{0x52f1, &op_bcopy,	  1,  15,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy b status c 
	{0x53f1, &op_bcopy,	  1,  15,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy b status d 
	{0x54f1, &op_bcopy,	  1,  15,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy b status e 
	{0x55f1, &op_bcopy,	  1,  15,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy b status f 
	{0x56f1, &op_bcopy,	  1,  15,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy b status g 
	{0x57f1, &op_bcopy,	  1,  15,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy b status h 
	{0x58f1, &op_bcopy,	  1,  15,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy b status pc 
	{0x59f1, &op_bcopy,	  1,  15,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy b status ra 
	{0x5af1, &op_bcopy,	  1,  15,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy b status sb 
	{0x5bf1, &op_bcopy,	  1,  15,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy b status sp 
	{0x5cf1, &op_bcopy,	  1,  15,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy b status db 
	{0x5df1, &op_bcopy,	  1,  15,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy b status cb 
	{0x5ef1, &op_bcopy,	  1,  15,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy b status pi 
	{0x5ff1, &op_bcopy,	  1,  15,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy b status <literal> 
	{0x5002, &op_bcopy,	  2,   0,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy c a a 
	{0x5102, &op_bcopy,	  2,   0,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy c a b 
	{0x5202, &op_bcopy,	  2,   0,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy c a c 
	{0x5302, &op_bcopy,	  2,   0,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy c a d 
	{0x5402, &op_bcopy,	  2,   0,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy c a e 
	{0x5502, &op_bcopy,	  2,   0,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy c a f 
	{0x5602, &op_bcopy,	  2,   0,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy c a g 
	{0x5702, &op_bcopy,	  2,   0,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy c a h 
	{0x5802, &op_bcopy,	  2,   0,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy c a pc 
	{0x5902, &op_bcopy,	  2,   0,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy c a ra 
	{0x5a02, &op_bcopy,	  2,   0,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy c a sb 
	{0x5b02, &op_bcopy,	  2,   0,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy c a sp 
	{0x5c02, &op_bcopy,	  2,   0,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy c a db 
	{0x5d02, &op_bcopy,	  2,   0,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy c a cb 
	{0x5e02, &op_bcopy,	  2,   0,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy c a pi 
	{0x5f02, &op_bcopy,	  2,   0,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy c a <literal> 
	{0x5012, &op_bcopy,	  2,   1,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy c b a 
	{0x5112, &op_bcopy,	  2,   1,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy c b b 
	{0x5212, &op_bcopy,	  2,   1,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy c b c 
	{0x5312, &op_bcopy,	  2,   1,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy c b d 
	{0x5412, &op_bcopy,	  2,   1,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy c b e 
	{0x5512, &op_bcopy,	  2,   1,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy c b f 
	{0x5612, &op_bcopy,	  2,   1,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy c b g 
	{0x5712, &op_bcopy,	  2,   1,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy c b h 
	{0x5812, &op_bcopy,	  2,   1,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy c b pc 
	{0x5912, &op_bcopy,	  2,   1,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy c b ra 
	{0x5a12, &op_bcopy,	  2,   1,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy c b sb 
	{0x5b12, &op_bcopy,	  2,   1,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy c b sp 
	{0x5c12, &op_bcopy,	  2,   1,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy c b db 
	{0x5d12, &op_bcopy,	  2,   1,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy c b cb 
	{0x5e12, &op_bcopy,	  2,   1,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy c b pi 
	{0x5f12, &op_bcopy,	  2,   1,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy c b <literal> 
	{0x5022, &op_bcopy,	  2,   2,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy c c a 
	{0x5122, &op_bcopy,	  2,   2,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy c c b 
	{0x5222, &op_bcopy,	  2,   2,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy c c c 
	{0x5322, &op_bcopy,	  2,   2,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy c c d 
	{0x5422, &op_bcopy,	  2,   2,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy c c e 
	{0x5522, &op_bcopy,	  2,   2,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy c c f 
	{0x5622, &op_bcopy,	  2,   2,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy c c g 
	{0x5722, &op_bcopy,	  2,   2,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy c c h 
	{0x5822, &op_bcopy,	  2,   2,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy c c pc 
	{0x5922, &op_bcopy,	  2,   2,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy c c ra 
	{0x5a22, &op_bcopy,	  2,   2,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy c c sb 
	{0x5b22, &op_bcopy,	  2,   2,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy c c sp 
	{0x5c22, &op_bcopy,	  2,   2,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy c c db 
	{0x5d22, &op_bcopy,	  2,   2,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy c c cb 
	{0x5e22, &op_bcopy,	  2,   2,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy c c pi 
	{0x5f22, &op_bcopy,	  2,   2,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy c c <literal> 
	{0x5032, &op_bcopy,	  2,   3,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy c d a 
	{0x5132, &op_bcopy,	  2,   3,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy c d b 
	{0x5232, &op_bcopy,	  2,   3,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy c d c 
	{0x5332, &op_bcopy,	  2,   3,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy c d d 
	{0x5432, &op_bcopy,	  2,   3,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy c d e 
	{0x5532, &op_bcopy,	  2,   3,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy c d f 
	{0x5632, &op_bcopy,	  2,   3,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy c d g 
	{0x5732, &op_bcopy,	  2,   3,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy c d h 
	{0x5832, &op_bcopy,	  2,   3,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy c d pc 
	{0x5932, &op_bcopy,	  2,   3,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy c d ra 
	{0x5a32, &op_bcopy,	  2,   3,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy c d sb 
	{0x5b32, &op_bcopy,	  2,   3,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy c d sp 
	{0x5c32, &op_bcopy,	  2,   3,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy c d db 
	{0x5d32, &op_bcopy,	  2,   3,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy c d cb 
	{0x5e32, &op_bcopy,	  2,   3,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy c d pi 
	{0x5f32, &op_bcopy,	  2,   3,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy c d <literal> 
	{0x5042, &op_bcopy,	  2,   4,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy c e a 
	{0x5142, &op_bcopy,	  2,   4,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy c e b 
	{0x5242, &op_bcopy,	  2,   4,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy c e c 
	{0x5342, &op_bcopy,	  2,   4,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy c e d 
	{0x5442, &op_bcopy,	  2,   4,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy c e e 
	{0x5542, &op_bcopy,	  2,   4,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy c e f 
	{0x5642, &op_bcopy,	  2,   4,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy c e g 
	{0x5742, &op_bcopy,	  2,   4,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy c e h 
	{0x5842, &op_bcopy,	  2,   4,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy c e pc 
	{0x5942, &op_bcopy,	  2,   4,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy c e ra 
	{0x5a42, &op_bcopy,	  2,   4,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy c e sb 
	{0x5b42, &op_bcopy,	  2,   4,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy c e sp 
	{0x5c42, &op_bcopy,	  2,   4,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy c e db 
	{0x5d42, &op_bcopy,	  2,   4,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy c e cb 
	{0x5e42, &op_bcopy,	  2,   4,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy c e pi 
	{0x5f42, &op_bcopy,	  2,   4,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy c e <literal> 
	{0x5052, &op_bcopy,	  2,   5,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy c f a 
	{0x5152, &op_bcopy,	  2,   5,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy c f b 
	{0x5252, &op_bcopy,	  2,   5,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy c f c 
	{0x5352, &op_bcopy,	  2,   5,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy c f d 
	{0x5452, &op_bcopy,	  2,   5,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy c f e 
	{0x5552, &op_bcopy,	  2,   5,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy c f f 
	{0x5652, &op_bcopy,	  2,   5,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy c f g 
	{0x5752, &op_bcopy,	  2,   5,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy c f h 
	{0x5852, &op_bcopy,	  2,   5,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy c f pc 
	{0x5952, &op_bcopy,	  2,   5,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy c f ra 
	{0x5a52, &op_bcopy,	  2,   5,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy c f sb 
	{0x5b52, &op_bcopy,	  2,   5,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy c f sp 
	{0x5c52, &op_bcopy,	  2,   5,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy c f db 
	{0x5d52, &op_bcopy,	  2,   5,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy c f cb 
	{0x5e52, &op_bcopy,	  2,   5,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy c f pi 
	{0x5f52, &op_bcopy,	  2,   5,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy c f <literal> 
	{0x5062, &op_bcopy,	  2,   6,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy c g a 
	{0x5162, &op_bcopy,	  2,   6,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy c g b 
	{0x5262, &op_bcopy,	  2,   6,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy c g c 
	{0x5362, &op_bcopy,	  2,   6,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy c g d 
	{0x5462, &op_bcopy,	  2,   6,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy c g e 
	{0x5562, &op_bcopy,	  2,   6,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy c g f 
	{0x5662, &op_bcopy,	  2,   6,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy c g g 
	{0x5762, &op_bcopy,	  2,   6,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy c g h 
	{0x5862, &op_bcopy,	  2,   6,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy c g pc 
	{0x5962, &op_bcopy,	  2,   6,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy c g ra 
	{0x5a62, &op_bcopy,	  2,   6,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy c g sb 
	{0x5b62, &op_bcopy,	  2,   6,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy c g sp 
	{0x5c62, &op_bcopy,	  2,   6,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy c g db 
	{0x5d62, &op_bcopy,	  2,   6,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy c g cb 
	{0x5e62, &op_bcopy,	  2,   6,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy c g pi 
	{0x5f62, &op_bcopy,	  2,   6,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy c g <literal> 
	{0x5072, &op_bcopy,	  2,   7,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy c h a 
	{0x5172, &op_bcopy,	  2,   7,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy c h b 
	{0x5272, &op_bcopy,	  2,   7,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy c h c 
	{0x5372, &op_bcopy,	  2,   7,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy c h d 
	{0x5472, &op_bcopy,	  2,   7,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy c h e 
	{0x5572, &op_bcopy,	  2,   7,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy c h f 
	{0x5672, &op_bcopy,	  2,   7,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy c h g 
	{0x5772, &op_bcopy,	  2,   7,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy c h h 
	{0x5872, &op_bcopy,	  2,   7,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy c h pc 
	{0x5972, &op_bcopy,	  2,   7,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy c h ra 
	{0x5a72, &op_bcopy,	  2,   7,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy c h sb 
	{0x5b72, &op_bcopy,	  2,   7,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy c h sp 
	{0x5c72, &op_bcopy,	  2,   7,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy c h db 
	{0x5d72, &op_bcopy,	  2,   7,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy c h cb 
	{0x5e72, &op_bcopy,	  2,   7,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy c h pi 
	{0x5f72, &op_bcopy,	  2,   7,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy c h <literal> 
	{0x5082, &op_bcopy,	  2,   8,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy c pc a 
	{0x5182, &op_bcopy,	  2,   8,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy c pc b 
	{0x5282, &op_bcopy,	  2,   8,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy c pc c 
	{0x5382, &op_bcopy,	  2,   8,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy c pc d 
	{0x5482, &op_bcopy,	  2,   8,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy c pc e 
	{0x5582, &op_bcopy,	  2,   8,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy c pc f 
	{0x5682, &op_bcopy,	  2,   8,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy c pc g 
	{0x5782, &op_bcopy,	  2,   8,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy c pc h 
	{0x5882, &op_bcopy,	  2,   8,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy c pc pc 
	{0x5982, &op_bcopy,	  2,   8,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy c pc ra 
	{0x5a82, &op_bcopy,	  2,   8,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy c pc sb 
	{0x5b82, &op_bcopy,	  2,   8,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy c pc sp 
	{0x5c82, &op_bcopy,	  2,   8,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy c pc db 
	{0x5d82, &op_bcopy,	  2,   8,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy c pc cb 
	{0x5e82, &op_bcopy,	  2,   8,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy c pc pi 
	{0x5f82, &op_bcopy,	  2,   8,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy c pc <literal> 
	{0x5092, &op_bcopy,	  2,   9,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy c ra a 
	{0x5192, &op_bcopy,	  2,   9,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy c ra b 
	{0x5292, &op_bcopy,	  2,   9,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy c ra c 
	{0x5392, &op_bcopy,	  2,   9,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy c ra d 
	{0x5492, &op_bcopy,	  2,   9,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy c ra e 
	{0x5592, &op_bcopy,	  2,   9,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy c ra f 
	{0x5692, &op_bcopy,	  2,   9,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy c ra g 
	{0x5792, &op_bcopy,	  2,   9,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy c ra h 
	{0x5892, &op_bcopy,	  2,   9,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy c ra pc 
	{0x5992, &op_bcopy,	  2,   9,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy c ra ra 
	{0x5a92, &op_bcopy,	  2,   9,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy c ra sb 
	{0x5b92, &op_bcopy,	  2,   9,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy c ra sp 
	{0x5c92, &op_bcopy,	  2,   9,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy c ra db 
	{0x5d92, &op_bcopy,	  2,   9,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy c ra cb 
	{0x5e92, &op_bcopy,	  2,   9,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy c ra pi 
	{0x5f92, &op_bcopy,	  2,   9,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy c ra <literal> 
	{0x50a2, &op_bcopy,	  2,  10,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy c sb a 
	{0x51a2, &op_bcopy,	  2,  10,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy c sb b 
	{0x52a2, &op_bcopy,	  2,  10,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy c sb c 
	{0x53a2, &op_bcopy,	  2,  10,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy c sb d 
	{0x54a2, &op_bcopy,	  2,  10,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy c sb e 
	{0x55a2, &op_bcopy,	  2,  10,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy c sb f 
	{0x56a2, &op_bcopy,	  2,  10,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy c sb g 
	{0x57a2, &op_bcopy,	  2,  10,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy c sb h 
	{0x58a2, &op_bcopy,	  2,  10,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy c sb pc 
	{0x59a2, &op_bcopy,	  2,  10,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy c sb ra 
	{0x5aa2, &op_bcopy,	  2,  10,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy c sb sb 
	{0x5ba2, &op_bcopy,	  2,  10,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy c sb sp 
	{0x5ca2, &op_bcopy,	  2,  10,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy c sb db 
	{0x5da2, &op_bcopy,	  2,  10,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy c sb cb 
	{0x5ea2, &op_bcopy,	  2,  10,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy c sb pi 
	{0x5fa2, &op_bcopy,	  2,  10,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy c sb <literal> 
	{0x50b2, &op_bcopy,	  2,  11,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy c sp a 
	{0x51b2, &op_bcopy,	  2,  11,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy c sp b 
	{0x52b2, &op_bcopy,	  2,  11,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy c sp c 
	{0x53b2, &op_bcopy,	  2,  11,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy c sp d 
	{0x54b2, &op_bcopy,	  2,  11,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy c sp e 
	{0x55b2, &op_bcopy,	  2,  11,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy c sp f 
	{0x56b2, &op_bcopy,	  2,  11,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy c sp g 
	{0x57b2, &op_bcopy,	  2,  11,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy c sp h 
	{0x58b2, &op_bcopy,	  2,  11,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy c sp pc 
	{0x59b2, &op_bcopy,	  2,  11,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy c sp ra 
	{0x5ab2, &op_bcopy,	  2,  11,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy c sp sb 
	{0x5bb2, &op_bcopy,	  2,  11,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy c sp sp 
	{0x5cb2, &op_bcopy,	  2,  11,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy c sp db 
	{0x5db2, &op_bcopy,	  2,  11,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy c sp cb 
	{0x5eb2, &op_bcopy,	  2,  11,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy c sp pi 
	{0x5fb2, &op_bcopy,	  2,  11,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy c sp <literal> 
	{0x50c2, &op_bcopy,	  2,  12,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy c db a 
	{0x51c2, &op_bcopy,	  2,  12,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy c db b 
	{0x52c2, &op_bcopy,	  2,  12,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy c db c 
	{0x53c2, &op_bcopy,	  2,  12,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy c db d 
	{0x54c2, &op_bcopy,	  2,  12,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy c db e 
	{0x55c2, &op_bcopy,	  2,  12,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy c db f 
	{0x56c2, &op_bcopy,	  2,  12,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy c db g 
	{0x57c2, &op_bcopy,	  2,  12,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy c db h 
	{0x58c2, &op_bcopy,	  2,  12,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy c db pc 
	{0x59c2, &op_bcopy,	  2,  12,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy c db ra 
	{0x5ac2, &op_bcopy,	  2,  12,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy c db sb 
	{0x5bc2, &op_bcopy,	  2,  12,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy c db sp 
	{0x5cc2, &op_bcopy,	  2,  12,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy c db db 
	{0x5dc2, &op_bcopy,	  2,  12,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy c db cb 
	{0x5ec2, &op_bcopy,	  2,  12,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy c db pi 
	{0x5fc2, &op_bcopy,	  2,  12,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy c db <literal> 
	{0x50d2, &op_bcopy,	  2,  13,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy c cb a 
	{0x51d2, &op_bcopy,	  2,  13,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy c cb b 
	{0x52d2, &op_bcopy,	  2,  13,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy c cb c 
	{0x53d2, &op_bcopy,	  2,  13,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy c cb d 
	{0x54d2, &op_bcopy,	  2,  13,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy c cb e 
	{0x55d2, &op_bcopy,	  2,  13,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy c cb f 
	{0x56d2, &op_bcopy,	  2,  13,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy c cb g 
	{0x57d2, &op_bcopy,	  2,  13,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy c cb h 
	{0x58d2, &op_bcopy,	  2,  13,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy c cb pc 
	{0x59d2, &op_bcopy,	  2,  13,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy c cb ra 
	{0x5ad2, &op_bcopy,	  2,  13,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy c cb sb 
	{0x5bd2, &op_bcopy,	  2,  13,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy c cb sp 
	{0x5cd2, &op_bcopy,	  2,  13,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy c cb db 
	{0x5dd2, &op_bcopy,	  2,  13,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy c cb cb 
	{0x5ed2, &op_bcopy,	  2,  13,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy c cb pi 
	{0x5fd2, &op_bcopy,	  2,  13,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy c cb <literal> 
	{0x50e2, &op_bcopy,	  2,  14,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy c pi a 
	{0x51e2, &op_bcopy,	  2,  14,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy c pi b 
	{0x52e2, &op_bcopy,	  2,  14,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy c pi c 
	{0x53e2, &op_bcopy,	  2,  14,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy c pi d 
	{0x54e2, &op_bcopy,	  2,  14,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy c pi e 
	{0x55e2, &op_bcopy,	  2,  14,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy c pi f 
	{0x56e2, &op_bcopy,	  2,  14,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy c pi g 
	{0x57e2, &op_bcopy,	  2,  14,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy c pi h 
	{0x58e2, &op_bcopy,	  2,  14,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy c pi pc 
	{0x59e2, &op_bcopy,	  2,  14,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy c pi ra 
	{0x5ae2, &op_bcopy,	  2,  14,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy c pi sb 
	{0x5be2, &op_bcopy,	  2,  14,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy c pi sp 
	{0x5ce2, &op_bcopy,	  2,  14,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy c pi db 
	{0x5de2, &op_bcopy,	  2,  14,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy c pi cb 
	{0x5ee2, &op_bcopy,	  2,  14,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy c pi pi 
	{0x5fe2, &op_bcopy,	  2,  14,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy c pi <literal> 
	{0x50f2, &op_bcopy,	  2,  15,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy c status a 
	{0x51f2, &op_bcopy,	  2,  15,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy c status b 
	{0x52f2, &op_bcopy,	  2,  15,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy c status c 
	{0x53f2, &op_bcopy,	  2,  15,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy c status d 
	{0x54f2, &op_bcopy,	  2,  15,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy c status e 
	{0x55f2, &op_bcopy,	  2,  15,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy c status f 
	{0x56f2, &op_bcopy,	  2,  15,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy c status g 
	{0x57f2, &op_bcopy,	  2,  15,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy c status h 
	{0x58f2, &op_bcopy,	  2,  15,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy c status pc 
	{0x59f2, &op_bcopy,	  2,  15,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy c status ra 
	{0x5af2, &op_bcopy,	  2,  15,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy c status sb 
	{0x5bf2, &op_bcopy,	  2,  15,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy c status sp 
	{0x5cf2, &op_bcopy,	  2,  15,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy c status db 
	{0x5df2, &op_bcopy,	  2,  15,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy c status cb 
	{0x5ef2, &op_bcopy,	  2,  15,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy c status pi 
	{0x5ff2, &op_bcopy,	  2,  15,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy c status <literal> 
	{0x5003, &op_bcopy,	  3,   0,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy d a a 
	{0x5103, &op_bcopy,	  3,   0,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy d a b 
	{0x5203, &op_bcopy,	  3,   0,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy d a c 
	{0x5303, &op_bcopy,	  3,   0,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy d a d 
	{0x5403, &op_bcopy,	  3,   0,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy d a e 
	{0x5503, &op_bcopy,	  3,   0,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy d a f 
	{0x5603, &op_bcopy,	  3,   0,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy d a g 
	{0x5703, &op_bcopy,	  3,   0,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy d a h 
	{0x5803, &op_bcopy,	  3,   0,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy d a pc 
	{0x5903, &op_bcopy,	  3,   0,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy d a ra 
	{0x5a03, &op_bcopy,	  3,   0,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy d a sb 
	{0x5b03, &op_bcopy,	  3,   0,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy d a sp 
	{0x5c03, &op_bcopy,	  3,   0,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy d a db 
	{0x5d03, &op_bcopy,	  3,   0,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy d a cb 
	{0x5e03, &op_bcopy,	  3,   0,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy d a pi 
	{0x5f03, &op_bcopy,	  3,   0,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy d a <literal> 
	{0x5013, &op_bcopy,	  3,   1,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy d b a 
	{0x5113, &op_bcopy,	  3,   1,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy d b b 
	{0x5213, &op_bcopy,	  3,   1,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy d b c 
	{0x5313, &op_bcopy,	  3,   1,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy d b d 
	{0x5413, &op_bcopy,	  3,   1,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy d b e 
	{0x5513, &op_bcopy,	  3,   1,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy d b f 
	{0x5613, &op_bcopy,	  3,   1,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy d b g 
	{0x5713, &op_bcopy,	  3,   1,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy d b h 
	{0x5813, &op_bcopy,	  3,   1,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy d b pc 
	{0x5913, &op_bcopy,	  3,   1,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy d b ra 
	{0x5a13, &op_bcopy,	  3,   1,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy d b sb 
	{0x5b13, &op_bcopy,	  3,   1,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy d b sp 
	{0x5c13, &op_bcopy,	  3,   1,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy d b db 
	{0x5d13, &op_bcopy,	  3,   1,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy d b cb 
	{0x5e13, &op_bcopy,	  3,   1,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy d b pi 
	{0x5f13, &op_bcopy,	  3,   1,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy d b <literal> 
	{0x5023, &op_bcopy,	  3,   2,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy d c a 
	{0x5123, &op_bcopy,	  3,   2,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy d c b 
	{0x5223, &op_bcopy,	  3,   2,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy d c c 
	{0x5323, &op_bcopy,	  3,   2,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy d c d 
	{0x5423, &op_bcopy,	  3,   2,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy d c e 
	{0x5523, &op_bcopy,	  3,   2,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy d c f 
	{0x5623, &op_bcopy,	  3,   2,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy d c g 
	{0x5723, &op_bcopy,	  3,   2,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy d c h 
	{0x5823, &op_bcopy,	  3,   2,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy d c pc 
	{0x5923, &op_bcopy,	  3,   2,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy d c ra 
	{0x5a23, &op_bcopy,	  3,   2,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy d c sb 
	{0x5b23, &op_bcopy,	  3,   2,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy d c sp 
	{0x5c23, &op_bcopy,	  3,   2,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy d c db 
	{0x5d23, &op_bcopy,	  3,   2,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy d c cb 
	{0x5e23, &op_bcopy,	  3,   2,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy d c pi 
	{0x5f23, &op_bcopy,	  3,   2,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy d c <literal> 
	{0x5033, &op_bcopy,	  3,   3,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy d d a 
	{0x5133, &op_bcopy,	  3,   3,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy d d b 
	{0x5233, &op_bcopy,	  3,   3,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy d d c 
	{0x5333, &op_bcopy,	  3,   3,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy d d d 
	{0x5433, &op_bcopy,	  3,   3,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy d d e 
	{0x5533, &op_bcopy,	  3,   3,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy d d f 
	{0x5633, &op_bcopy,	  3,   3,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy d d g 
	{0x5733, &op_bcopy,	  3,   3,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy d d h 
	{0x5833, &op_bcopy,	  3,   3,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy d d pc 
	{0x5933, &op_bcopy,	  3,   3,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy d d ra 
	{0x5a33, &op_bcopy,	  3,   3,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy d d sb 
	{0x5b33, &op_bcopy,	  3,   3,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy d d sp 
	{0x5c33, &op_bcopy,	  3,   3,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy d d db 
	{0x5d33, &op_bcopy,	  3,   3,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy d d cb 
	{0x5e33, &op_bcopy,	  3,   3,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy d d pi 
	{0x5f33, &op_bcopy,	  3,   3,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy d d <literal> 
	{0x5043, &op_bcopy,	  3,   4,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy d e a 
	{0x5143, &op_bcopy,	  3,   4,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy d e b 
	{0x5243, &op_bcopy,	  3,   4,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy d e c 
	{0x5343, &op_bcopy,	  3,   4,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy d e d 
	{0x5443, &op_bcopy,	  3,   4,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy d e e 
	{0x5543, &op_bcopy,	  3,   4,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy d e f 
	{0x5643, &op_bcopy,	  3,   4,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy d e g 
	{0x5743, &op_bcopy,	  3,   4,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy d e h 
	{0x5843, &op_bcopy,	  3,   4,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy d e pc 
	{0x5943, &op_bcopy,	  3,   4,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy d e ra 
	{0x5a43, &op_bcopy,	  3,   4,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy d e sb 
	{0x5b43, &op_bcopy,	  3,   4,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy d e sp 
	{0x5c43, &op_bcopy,	  3,   4,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy d e db 
	{0x5d43, &op_bcopy,	  3,   4,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy d e cb 
	{0x5e43, &op_bcopy,	  3,   4,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy d e pi 
	{0x5f43, &op_bcopy,	  3,   4,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy d e <literal> 
	{0x5053, &op_bcopy,	  3,   5,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy d f a 
	{0x5153, &op_bcopy,	  3,   5,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy d f b 
	{0x5253, &op_bcopy,	  3,   5,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy d f c 
	{0x5353, &op_bcopy,	  3,   5,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy d f d 
	{0x5453, &op_bcopy,	  3,   5,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy d f e 
	{0x5553, &op_bcopy,	  3,   5,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy d f f 
	{0x5653, &op_bcopy,	  3,   5,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy d f g 
	{0x5753, &op_bcopy,	  3,   5,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy d f h 
	{0x5853, &op_bcopy,	  3,   5,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy d f pc 
	{0x5953, &op_bcopy,	  3,   5,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy d f ra 
	{0x5a53, &op_bcopy,	  3,   5,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy d f sb 
	{0x5b53, &op_bcopy,	  3,   5,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy d f sp 
	{0x5c53, &op_bcopy,	  3,   5,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy d f db 
	{0x5d53, &op_bcopy,	  3,   5,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy d f cb 
	{0x5e53, &op_bcopy,	  3,   5,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy d f pi 
	{0x5f53, &op_bcopy,	  3,   5,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy d f <literal> 
	{0x5063, &op_bcopy,	  3,   6,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy d g a 
	{0x5163, &op_bcopy,	  3,   6,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy d g b 
	{0x5263, &op_bcopy,	  3,   6,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy d g c 
	{0x5363, &op_bcopy,	  3,   6,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy d g d 
	{0x5463, &op_bcopy,	  3,   6,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy d g e 
	{0x5563, &op_bcopy,	  3,   6,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy d g f 
	{0x5663, &op_bcopy,	  3,   6,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy d g g 
	{0x5763, &op_bcopy,	  3,   6,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy d g h 
	{0x5863, &op_bcopy,	  3,   6,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy d g pc 
	{0x5963, &op_bcopy,	  3,   6,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy d g ra 
	{0x5a63, &op_bcopy,	  3,   6,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy d g sb 
	{0x5b63, &op_bcopy,	  3,   6,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy d g sp 
	{0x5c63, &op_bcopy,	  3,   6,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy d g db 
	{0x5d63, &op_bcopy,	  3,   6,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy d g cb 
	{0x5e63, &op_bcopy,	  3,   6,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy d g pi 
	{0x5f63, &op_bcopy,	  3,   6,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy d g <literal> 
	{0x5073, &op_bcopy,	  3,   7,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy d h a 
	{0x5173, &op_bcopy,	  3,   7,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy d h b 
	{0x5273, &op_bcopy,	  3,   7,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy d h c 
	{0x5373, &op_bcopy,	  3,   7,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy d h d 
	{0x5473, &op_bcopy,	  3,   7,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy d h e 
	{0x5573, &op_bcopy,	  3,   7,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy d h f 
	{0x5673, &op_bcopy,	  3,   7,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy d h g 
	{0x5773, &op_bcopy,	  3,   7,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy d h h 
	{0x5873, &op_bcopy,	  3,   7,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy d h pc 
	{0x5973, &op_bcopy,	  3,   7,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy d h ra 
	{0x5a73, &op_bcopy,	  3,   7,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy d h sb 
	{0x5b73, &op_bcopy,	  3,   7,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy d h sp 
	{0x5c73, &op_bcopy,	  3,   7,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy d h db 
	{0x5d73, &op_bcopy,	  3,   7,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy d h cb 
	{0x5e73, &op_bcopy,	  3,   7,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy d h pi 
	{0x5f73, &op_bcopy,	  3,   7,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy d h <literal> 
	{0x5083, &op_bcopy,	  3,   8,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy d pc a 
	{0x5183, &op_bcopy,	  3,   8,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy d pc b 
	{0x5283, &op_bcopy,	  3,   8,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy d pc c 
	{0x5383, &op_bcopy,	  3,   8,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy d pc d 
	{0x5483, &op_bcopy,	  3,   8,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy d pc e 
	{0x5583, &op_bcopy,	  3,   8,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy d pc f 
	{0x5683, &op_bcopy,	  3,   8,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy d pc g 
	{0x5783, &op_bcopy,	  3,   8,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy d pc h 
	{0x5883, &op_bcopy,	  3,   8,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy d pc pc 
	{0x5983, &op_bcopy,	  3,   8,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy d pc ra 
	{0x5a83, &op_bcopy,	  3,   8,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy d pc sb 
	{0x5b83, &op_bcopy,	  3,   8,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy d pc sp 
	{0x5c83, &op_bcopy,	  3,   8,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy d pc db 
	{0x5d83, &op_bcopy,	  3,   8,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy d pc cb 
	{0x5e83, &op_bcopy,	  3,   8,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy d pc pi 
	{0x5f83, &op_bcopy,	  3,   8,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy d pc <literal> 
	{0x5093, &op_bcopy,	  3,   9,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy d ra a 
	{0x5193, &op_bcopy,	  3,   9,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy d ra b 
	{0x5293, &op_bcopy,	  3,   9,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy d ra c 
	{0x5393, &op_bcopy,	  3,   9,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy d ra d 
	{0x5493, &op_bcopy,	  3,   9,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy d ra e 
	{0x5593, &op_bcopy,	  3,   9,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy d ra f 
	{0x5693, &op_bcopy,	  3,   9,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy d ra g 
	{0x5793, &op_bcopy,	  3,   9,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy d ra h 
	{0x5893, &op_bcopy,	  3,   9,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy d ra pc 
	{0x5993, &op_bcopy,	  3,   9,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy d ra ra 
	{0x5a93, &op_bcopy,	  3,   9,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy d ra sb 
	{0x5b93, &op_bcopy,	  3,   9,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy d ra sp 
	{0x5c93, &op_bcopy,	  3,   9,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy d ra db 
	{0x5d93, &op_bcopy,	  3,   9,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy d ra cb 
	{0x5e93, &op_bcopy,	  3,   9,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy d ra pi 
	{0x5f93, &op_bcopy,	  3,   9,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy d ra <literal> 
	{0x50a3, &op_bcopy,	  3,  10,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy d sb a 
	{0x51a3, &op_bcopy,	  3,  10,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy d sb b 
	{0x52a3, &op_bcopy,	  3,  10,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy d sb c 
	{0x53a3, &op_bcopy,	  3,  10,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy d sb d 
	{0x54a3, &op_bcopy,	  3,  10,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy d sb e 
	{0x55a3, &op_bcopy,	  3,  10,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy d sb f 
	{0x56a3, &op_bcopy,	  3,  10,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy d sb g 
	{0x57a3, &op_bcopy,	  3,  10,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy d sb h 
	{0x58a3, &op_bcopy,	  3,  10,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy d sb pc 
	{0x59a3, &op_bcopy,	  3,  10,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy d sb ra 
	{0x5aa3, &op_bcopy,	  3,  10,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy d sb sb 
	{0x5ba3, &op_bcopy,	  3,  10,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy d sb sp 
	{0x5ca3, &op_bcopy,	  3,  10,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy d sb db 
	{0x5da3, &op_bcopy,	  3,  10,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy d sb cb 
	{0x5ea3, &op_bcopy,	  3,  10,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy d sb pi 
	{0x5fa3, &op_bcopy,	  3,  10,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy d sb <literal> 
	{0x50b3, &op_bcopy,	  3,  11,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy d sp a 
	{0x51b3, &op_bcopy,	  3,  11,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy d sp b 
	{0x52b3, &op_bcopy,	  3,  11,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy d sp c 
	{0x53b3, &op_bcopy,	  3,  11,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy d sp d 
	{0x54b3, &op_bcopy,	  3,  11,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy d sp e 
	{0x55b3, &op_bcopy,	  3,  11,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy d sp f 
	{0x56b3, &op_bcopy,	  3,  11,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy d sp g 
	{0x57b3, &op_bcopy,	  3,  11,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy d sp h 
	{0x58b3, &op_bcopy,	  3,  11,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy d sp pc 
	{0x59b3, &op_bcopy,	  3,  11,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy d sp ra 
	{0x5ab3, &op_bcopy,	  3,  11,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy d sp sb 
	{0x5bb3, &op_bcopy,	  3,  11,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy d sp sp 
	{0x5cb3, &op_bcopy,	  3,  11,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy d sp db 
	{0x5db3, &op_bcopy,	  3,  11,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy d sp cb 
	{0x5eb3, &op_bcopy,	  3,  11,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy d sp pi 
	{0x5fb3, &op_bcopy,	  3,  11,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy d sp <literal> 
	{0x50c3, &op_bcopy,	  3,  12,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy d db a 
	{0x51c3, &op_bcopy,	  3,  12,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy d db b 
	{0x52c3, &op_bcopy,	  3,  12,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy d db c 
	{0x53c3, &op_bcopy,	  3,  12,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy d db d 
	{0x54c3, &op_bcopy,	  3,  12,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy d db e 
	{0x55c3, &op_bcopy,	  3,  12,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy d db f 
	{0x56c3, &op_bcopy,	  3,  12,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy d db g 
	{0x57c3, &op_bcopy,	  3,  12,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy d db h 
	{0x58c3, &op_bcopy,	  3,  12,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy d db pc 
	{0x59c3, &op_bcopy,	  3,  12,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy d db ra 
	{0x5ac3, &op_bcopy,	  3,  12,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy d db sb 
	{0x5bc3, &op_bcopy,	  3,  12,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy d db sp 
	{0x5cc3, &op_bcopy,	  3,  12,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy d db db 
	{0x5dc3, &op_bcopy,	  3,  12,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy d db cb 
	{0x5ec3, &op_bcopy,	  3,  12,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy d db pi 
	{0x5fc3, &op_bcopy,	  3,  12,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy d db <literal> 
	{0x50d3, &op_bcopy,	  3,  13,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy d cb a 
	{0x51d3, &op_bcopy,	  3,  13,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy d cb b 
	{0x52d3, &op_bcopy,	  3,  13,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy d cb c 
	{0x53d3, &op_bcopy,	  3,  13,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy d cb d 
	{0x54d3, &op_bcopy,	  3,  13,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy d cb e 
	{0x55d3, &op_bcopy,	  3,  13,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy d cb f 
	{0x56d3, &op_bcopy,	  3,  13,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy d cb g 
	{0x57d3, &op_bcopy,	  3,  13,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy d cb h 
	{0x58d3, &op_bcopy,	  3,  13,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy d cb pc 
	{0x59d3, &op_bcopy,	  3,  13,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy d cb ra 
	{0x5ad3, &op_bcopy,	  3,  13,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy d cb sb 
	{0x5bd3, &op_bcopy,	  3,  13,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy d cb sp 
	{0x5cd3, &op_bcopy,	  3,  13,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy d cb db 
	{0x5dd3, &op_bcopy,	  3,  13,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy d cb cb 
	{0x5ed3, &op_bcopy,	  3,  13,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy d cb pi 
	{0x5fd3, &op_bcopy,	  3,  13,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy d cb <literal> 
	{0x50e3, &op_bcopy,	  3,  14,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy d pi a 
	{0x51e3, &op_bcopy,	  3,  14,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy d pi b 
	{0x52e3, &op_bcopy,	  3,  14,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy d pi c 
	{0x53e3, &op_bcopy,	  3,  14,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy d pi d 
	{0x54e3, &op_bcopy,	  3,  14,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy d pi e 
	{0x55e3, &op_bcopy,	  3,  14,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy d pi f 
	{0x56e3, &op_bcopy,	  3,  14,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy d pi g 
	{0x57e3, &op_bcopy,	  3,  14,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy d pi h 
	{0x58e3, &op_bcopy,	  3,  14,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy d pi pc 
	{0x59e3, &op_bcopy,	  3,  14,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy d pi ra 
	{0x5ae3, &op_bcopy,	  3,  14,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy d pi sb 
	{0x5be3, &op_bcopy,	  3,  14,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy d pi sp 
	{0x5ce3, &op_bcopy,	  3,  14,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy d pi db 
	{0x5de3, &op_bcopy,	  3,  14,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy d pi cb 
	{0x5ee3, &op_bcopy,	  3,  14,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy d pi pi 
	{0x5fe3, &op_bcopy,	  3,  14,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy d pi <literal> 
	{0x50f3, &op_bcopy,	  3,  15,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy d status a 
	{0x51f3, &op_bcopy,	  3,  15,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy d status b 
	{0x52f3, &op_bcopy,	  3,  15,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy d status c 
	{0x53f3, &op_bcopy,	  3,  15,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy d status d 
	{0x54f3, &op_bcopy,	  3,  15,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy d status e 
	{0x55f3, &op_bcopy,	  3,  15,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy d status f 
	{0x56f3, &op_bcopy,	  3,  15,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy d status g 
	{0x57f3, &op_bcopy,	  3,  15,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy d status h 
	{0x58f3, &op_bcopy,	  3,  15,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy d status pc 
	{0x59f3, &op_bcopy,	  3,  15,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy d status ra 
	{0x5af3, &op_bcopy,	  3,  15,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy d status sb 
	{0x5bf3, &op_bcopy,	  3,  15,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy d status sp 
	{0x5cf3, &op_bcopy,	  3,  15,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy d status db 
	{0x5df3, &op_bcopy,	  3,  15,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy d status cb 
	{0x5ef3, &op_bcopy,	  3,  15,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy d status pi 
	{0x5ff3, &op_bcopy,	  3,  15,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy d status <literal> 
	{0x5004, &op_bcopy,	  4,   0,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy e a a 
	{0x5104, &op_bcopy,	  4,   0,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy e a b 
	{0x5204, &op_bcopy,	  4,   0,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy e a c 
	{0x5304, &op_bcopy,	  4,   0,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy e a d 
	{0x5404, &op_bcopy,	  4,   0,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy e a e 
	{0x5504, &op_bcopy,	  4,   0,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy e a f 
	{0x5604, &op_bcopy,	  4,   0,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy e a g 
	{0x5704, &op_bcopy,	  4,   0,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy e a h 
	{0x5804, &op_bcopy,	  4,   0,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy e a pc 
	{0x5904, &op_bcopy,	  4,   0,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy e a ra 
	{0x5a04, &op_bcopy,	  4,   0,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy e a sb 
	{0x5b04, &op_bcopy,	  4,   0,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy e a sp 
	{0x5c04, &op_bcopy,	  4,   0,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy e a db 
	{0x5d04, &op_bcopy,	  4,   0,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy e a cb 
	{0x5e04, &op_bcopy,	  4,   0,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy e a pi 
	{0x5f04, &op_bcopy,	  4,   0,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy e a <literal> 
	{0x5014, &op_bcopy,	  4,   1,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy e b a 
	{0x5114, &op_bcopy,	  4,   1,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy e b b 
	{0x5214, &op_bcopy,	  4,   1,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy e b c 
	{0x5314, &op_bcopy,	  4,   1,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy e b d 
	{0x5414, &op_bcopy,	  4,   1,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy e b e 
	{0x5514, &op_bcopy,	  4,   1,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy e b f 
	{0x5614, &op_bcopy,	  4,   1,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy e b g 
	{0x5714, &op_bcopy,	  4,   1,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy e b h 
	{0x5814, &op_bcopy,	  4,   1,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy e b pc 
	{0x5914, &op_bcopy,	  4,   1,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy e b ra 
	{0x5a14, &op_bcopy,	  4,   1,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy e b sb 
	{0x5b14, &op_bcopy,	  4,   1,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy e b sp 
	{0x5c14, &op_bcopy,	  4,   1,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy e b db 
	{0x5d14, &op_bcopy,	  4,   1,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy e b cb 
	{0x5e14, &op_bcopy,	  4,   1,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy e b pi 
	{0x5f14, &op_bcopy,	  4,   1,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy e b <literal> 
	{0x5024, &op_bcopy,	  4,   2,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy e c a 
	{0x5124, &op_bcopy,	  4,   2,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy e c b 
	{0x5224, &op_bcopy,	  4,   2,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy e c c 
	{0x5324, &op_bcopy,	  4,   2,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy e c d 
	{0x5424, &op_bcopy,	  4,   2,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy e c e 
	{0x5524, &op_bcopy,	  4,   2,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy e c f 
	{0x5624, &op_bcopy,	  4,   2,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy e c g 
	{0x5724, &op_bcopy,	  4,   2,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy e c h 
	{0x5824, &op_bcopy,	  4,   2,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy e c pc 
	{0x5924, &op_bcopy,	  4,   2,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy e c ra 
	{0x5a24, &op_bcopy,	  4,   2,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy e c sb 
	{0x5b24, &op_bcopy,	  4,   2,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy e c sp 
	{0x5c24, &op_bcopy,	  4,   2,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy e c db 
	{0x5d24, &op_bcopy,	  4,   2,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy e c cb 
	{0x5e24, &op_bcopy,	  4,   2,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy e c pi 
	{0x5f24, &op_bcopy,	  4,   2,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy e c <literal> 
	{0x5034, &op_bcopy,	  4,   3,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy e d a 
	{0x5134, &op_bcopy,	  4,   3,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy e d b 
	{0x5234, &op_bcopy,	  4,   3,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy e d c 
	{0x5334, &op_bcopy,	  4,   3,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy e d d 
	{0x5434, &op_bcopy,	  4,   3,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy e d e 
	{0x5534, &op_bcopy,	  4,   3,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy e d f 
	{0x5634, &op_bcopy,	  4,   3,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy e d g 
	{0x5734, &op_bcopy,	  4,   3,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy e d h 
	{0x5834, &op_bcopy,	  4,   3,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy e d pc 
	{0x5934, &op_bcopy,	  4,   3,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy e d ra 
	{0x5a34, &op_bcopy,	  4,   3,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy e d sb 
	{0x5b34, &op_bcopy,	  4,   3,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy e d sp 
	{0x5c34, &op_bcopy,	  4,   3,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy e d db 
	{0x5d34, &op_bcopy,	  4,   3,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy e d cb 
	{0x5e34, &op_bcopy,	  4,   3,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy e d pi 
	{0x5f34, &op_bcopy,	  4,   3,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy e d <literal> 
	{0x5044, &op_bcopy,	  4,   4,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy e e a 
	{0x5144, &op_bcopy,	  4,   4,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy e e b 
	{0x5244, &op_bcopy,	  4,   4,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy e e c 
	{0x5344, &op_bcopy,	  4,   4,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy e e d 
	{0x5444, &op_bcopy,	  4,   4,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy e e e 
	{0x5544, &op_bcopy,	  4,   4,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy e e f 
	{0x5644, &op_bcopy,	  4,   4,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy e e g 
	{0x5744, &op_bcopy,	  4,   4,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy e e h 
	{0x5844, &op_bcopy,	  4,   4,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy e e pc 
	{0x5944, &op_bcopy,	  4,   4,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy e e ra 
	{0x5a44, &op_bcopy,	  4,   4,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy e e sb 
	{0x5b44, &op_bcopy,	  4,   4,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy e e sp 
	{0x5c44, &op_bcopy,	  4,   4,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy e e db 
	{0x5d44, &op_bcopy,	  4,   4,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy e e cb 
	{0x5e44, &op_bcopy,	  4,   4,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy e e pi 
	{0x5f44, &op_bcopy,	  4,   4,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy e e <literal> 
	{0x5054, &op_bcopy,	  4,   5,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy e f a 
	{0x5154, &op_bcopy,	  4,   5,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy e f b 
	{0x5254, &op_bcopy,	  4,   5,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy e f c 
	{0x5354, &op_bcopy,	  4,   5,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy e f d 
	{0x5454, &op_bcopy,	  4,   5,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy e f e 
	{0x5554, &op_bcopy,	  4,   5,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy e f f 
	{0x5654, &op_bcopy,	  4,   5,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy e f g 
	{0x5754, &op_bcopy,	  4,   5,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy e f h 
	{0x5854, &op_bcopy,	  4,   5,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy e f pc 
	{0x5954, &op_bcopy,	  4,   5,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy e f ra 
	{0x5a54, &op_bcopy,	  4,   5,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy e f sb 
	{0x5b54, &op_bcopy,	  4,   5,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy e f sp 
	{0x5c54, &op_bcopy,	  4,   5,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy e f db 
	{0x5d54, &op_bcopy,	  4,   5,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy e f cb 
	{0x5e54, &op_bcopy,	  4,   5,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy e f pi 
	{0x5f54, &op_bcopy,	  4,   5,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy e f <literal> 
	{0x5064, &op_bcopy,	  4,   6,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy e g a 
	{0x5164, &op_bcopy,	  4,   6,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy e g b 
	{0x5264, &op_bcopy,	  4,   6,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy e g c 
	{0x5364, &op_bcopy,	  4,   6,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy e g d 
	{0x5464, &op_bcopy,	  4,   6,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy e g e 
	{0x5564, &op_bcopy,	  4,   6,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy e g f 
	{0x5664, &op_bcopy,	  4,   6,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy e g g 
	{0x5764, &op_bcopy,	  4,   6,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy e g h 
	{0x5864, &op_bcopy,	  4,   6,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy e g pc 
	{0x5964, &op_bcopy,	  4,   6,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy e g ra 
	{0x5a64, &op_bcopy,	  4,   6,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy e g sb 
	{0x5b64, &op_bcopy,	  4,   6,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy e g sp 
	{0x5c64, &op_bcopy,	  4,   6,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy e g db 
	{0x5d64, &op_bcopy,	  4,   6,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy e g cb 
	{0x5e64, &op_bcopy,	  4,   6,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy e g pi 
	{0x5f64, &op_bcopy,	  4,   6,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy e g <literal> 
	{0x5074, &op_bcopy,	  4,   7,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy e h a 
	{0x5174, &op_bcopy,	  4,   7,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy e h b 
	{0x5274, &op_bcopy,	  4,   7,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy e h c 
	{0x5374, &op_bcopy,	  4,   7,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy e h d 
	{0x5474, &op_bcopy,	  4,   7,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy e h e 
	{0x5574, &op_bcopy,	  4,   7,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy e h f 
	{0x5674, &op_bcopy,	  4,   7,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy e h g 
	{0x5774, &op_bcopy,	  4,   7,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy e h h 
	{0x5874, &op_bcopy,	  4,   7,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy e h pc 
	{0x5974, &op_bcopy,	  4,   7,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy e h ra 
	{0x5a74, &op_bcopy,	  4,   7,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy e h sb 
	{0x5b74, &op_bcopy,	  4,   7,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy e h sp 
	{0x5c74, &op_bcopy,	  4,   7,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy e h db 
	{0x5d74, &op_bcopy,	  4,   7,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy e h cb 
	{0x5e74, &op_bcopy,	  4,   7,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy e h pi 
	{0x5f74, &op_bcopy,	  4,   7,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy e h <literal> 
	{0x5084, &op_bcopy,	  4,   8,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy e pc a 
	{0x5184, &op_bcopy,	  4,   8,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy e pc b 
	{0x5284, &op_bcopy,	  4,   8,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy e pc c 
	{0x5384, &op_bcopy,	  4,   8,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy e pc d 
	{0x5484, &op_bcopy,	  4,   8,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy e pc e 
	{0x5584, &op_bcopy,	  4,   8,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy e pc f 
	{0x5684, &op_bcopy,	  4,   8,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy e pc g 
	{0x5784, &op_bcopy,	  4,   8,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy e pc h 
	{0x5884, &op_bcopy,	  4,   8,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy e pc pc 
	{0x5984, &op_bcopy,	  4,   8,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy e pc ra 
	{0x5a84, &op_bcopy,	  4,   8,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy e pc sb 
	{0x5b84, &op_bcopy,	  4,   8,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy e pc sp 
	{0x5c84, &op_bcopy,	  4,   8,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy e pc db 
	{0x5d84, &op_bcopy,	  4,   8,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy e pc cb 
	{0x5e84, &op_bcopy,	  4,   8,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy e pc pi 
	{0x5f84, &op_bcopy,	  4,   8,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy e pc <literal> 
	{0x5094, &op_bcopy,	  4,   9,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy e ra a 
	{0x5194, &op_bcopy,	  4,   9,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy e ra b 
	{0x5294, &op_bcopy,	  4,   9,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy e ra c 
	{0x5394, &op_bcopy,	  4,   9,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy e ra d 
	{0x5494, &op_bcopy,	  4,   9,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy e ra e 
	{0x5594, &op_bcopy,	  4,   9,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy e ra f 
	{0x5694, &op_bcopy,	  4,   9,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy e ra g 
	{0x5794, &op_bcopy,	  4,   9,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy e ra h 
	{0x5894, &op_bcopy,	  4,   9,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy e ra pc 
	{0x5994, &op_bcopy,	  4,   9,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy e ra ra 
	{0x5a94, &op_bcopy,	  4,   9,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy e ra sb 
	{0x5b94, &op_bcopy,	  4,   9,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy e ra sp 
	{0x5c94, &op_bcopy,	  4,   9,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy e ra db 
	{0x5d94, &op_bcopy,	  4,   9,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy e ra cb 
	{0x5e94, &op_bcopy,	  4,   9,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy e ra pi 
	{0x5f94, &op_bcopy,	  4,   9,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy e ra <literal> 
	{0x50a4, &op_bcopy,	  4,  10,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy e sb a 
	{0x51a4, &op_bcopy,	  4,  10,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy e sb b 
	{0x52a4, &op_bcopy,	  4,  10,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy e sb c 
	{0x53a4, &op_bcopy,	  4,  10,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy e sb d 
	{0x54a4, &op_bcopy,	  4,  10,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy e sb e 
	{0x55a4, &op_bcopy,	  4,  10,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy e sb f 
	{0x56a4, &op_bcopy,	  4,  10,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy e sb g 
	{0x57a4, &op_bcopy,	  4,  10,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy e sb h 
	{0x58a4, &op_bcopy,	  4,  10,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy e sb pc 
	{0x59a4, &op_bcopy,	  4,  10,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy e sb ra 
	{0x5aa4, &op_bcopy,	  4,  10,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy e sb sb 
	{0x5ba4, &op_bcopy,	  4,  10,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy e sb sp 
	{0x5ca4, &op_bcopy,	  4,  10,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy e sb db 
	{0x5da4, &op_bcopy,	  4,  10,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy e sb cb 
	{0x5ea4, &op_bcopy,	  4,  10,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy e sb pi 
	{0x5fa4, &op_bcopy,	  4,  10,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy e sb <literal> 
	{0x50b4, &op_bcopy,	  4,  11,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy e sp a 
	{0x51b4, &op_bcopy,	  4,  11,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy e sp b 
	{0x52b4, &op_bcopy,	  4,  11,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy e sp c 
	{0x53b4, &op_bcopy,	  4,  11,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy e sp d 
	{0x54b4, &op_bcopy,	  4,  11,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy e sp e 
	{0x55b4, &op_bcopy,	  4,  11,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy e sp f 
	{0x56b4, &op_bcopy,	  4,  11,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy e sp g 
	{0x57b4, &op_bcopy,	  4,  11,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy e sp h 
	{0x58b4, &op_bcopy,	  4,  11,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy e sp pc 
	{0x59b4, &op_bcopy,	  4,  11,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy e sp ra 
	{0x5ab4, &op_bcopy,	  4,  11,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy e sp sb 
	{0x5bb4, &op_bcopy,	  4,  11,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy e sp sp 
	{0x5cb4, &op_bcopy,	  4,  11,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy e sp db 
	{0x5db4, &op_bcopy,	  4,  11,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy e sp cb 
	{0x5eb4, &op_bcopy,	  4,  11,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy e sp pi 
	{0x5fb4, &op_bcopy,	  4,  11,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy e sp <literal> 
	{0x50c4, &op_bcopy,	  4,  12,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy e db a 
	{0x51c4, &op_bcopy,	  4,  12,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy e db b 
	{0x52c4, &op_bcopy,	  4,  12,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy e db c 
	{0x53c4, &op_bcopy,	  4,  12,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy e db d 
	{0x54c4, &op_bcopy,	  4,  12,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy e db e 
	{0x55c4, &op_bcopy,	  4,  12,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy e db f 
	{0x56c4, &op_bcopy,	  4,  12,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy e db g 
	{0x57c4, &op_bcopy,	  4,  12,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy e db h 
	{0x58c4, &op_bcopy,	  4,  12,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy e db pc 
	{0x59c4, &op_bcopy,	  4,  12,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy e db ra 
	{0x5ac4, &op_bcopy,	  4,  12,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy e db sb 
	{0x5bc4, &op_bcopy,	  4,  12,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy e db sp 
	{0x5cc4, &op_bcopy,	  4,  12,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy e db db 
	{0x5dc4, &op_bcopy,	  4,  12,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy e db cb 
	{0x5ec4, &op_bcopy,	  4,  12,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy e db pi 
	{0x5fc4, &op_bcopy,	  4,  12,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy e db <literal> 
	{0x50d4, &op_bcopy,	  4,  13,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy e cb a 
	{0x51d4, &op_bcopy,	  4,  13,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy e cb b 
	{0x52d4, &op_bcopy,	  4,  13,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy e cb c 
	{0x53d4, &op_bcopy,	  4,  13,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy e cb d 
	{0x54d4, &op_bcopy,	  4,  13,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy e cb e 
	{0x55d4, &op_bcopy,	  4,  13,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy e cb f 
	{0x56d4, &op_bcopy,	  4,  13,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy e cb g 
	{0x57d4, &op_bcopy,	  4,  13,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy e cb h 
	{0x58d4, &op_bcopy,	  4,  13,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy e cb pc 
	{0x59d4, &op_bcopy,	  4,  13,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy e cb ra 
	{0x5ad4, &op_bcopy,	  4,  13,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy e cb sb 
	{0x5bd4, &op_bcopy,	  4,  13,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy e cb sp 
	{0x5cd4, &op_bcopy,	  4,  13,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy e cb db 
	{0x5dd4, &op_bcopy,	  4,  13,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy e cb cb 
	{0x5ed4, &op_bcopy,	  4,  13,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy e cb pi 
	{0x5fd4, &op_bcopy,	  4,  13,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy e cb <literal> 
	{0x50e4, &op_bcopy,	  4,  14,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy e pi a 
	{0x51e4, &op_bcopy,	  4,  14,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy e pi b 
	{0x52e4, &op_bcopy,	  4,  14,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy e pi c 
	{0x53e4, &op_bcopy,	  4,  14,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy e pi d 
	{0x54e4, &op_bcopy,	  4,  14,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy e pi e 
	{0x55e4, &op_bcopy,	  4,  14,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy e pi f 
	{0x56e4, &op_bcopy,	  4,  14,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy e pi g 
	{0x57e4, &op_bcopy,	  4,  14,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy e pi h 
	{0x58e4, &op_bcopy,	  4,  14,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy e pi pc 
	{0x59e4, &op_bcopy,	  4,  14,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy e pi ra 
	{0x5ae4, &op_bcopy,	  4,  14,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy e pi sb 
	{0x5be4, &op_bcopy,	  4,  14,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy e pi sp 
	{0x5ce4, &op_bcopy,	  4,  14,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy e pi db 
	{0x5de4, &op_bcopy,	  4,  14,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy e pi cb 
	{0x5ee4, &op_bcopy,	  4,  14,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy e pi pi 
	{0x5fe4, &op_bcopy,	  4,  14,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy e pi <literal> 
	{0x50f4, &op_bcopy,	  4,  15,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy e status a 
	{0x51f4, &op_bcopy,	  4,  15,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy e status b 
	{0x52f4, &op_bcopy,	  4,  15,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy e status c 
	{0x53f4, &op_bcopy,	  4,  15,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy e status d 
	{0x54f4, &op_bcopy,	  4,  15,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy e status e 
	{0x55f4, &op_bcopy,	  4,  15,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy e status f 
	{0x56f4, &op_bcopy,	  4,  15,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy e status g 
	{0x57f4, &op_bcopy,	  4,  15,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy e status h 
	{0x58f4, &op_bcopy,	  4,  15,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy e status pc 
	{0x59f4, &op_bcopy,	  4,  15,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy e status ra 
	{0x5af4, &op_bcopy,	  4,  15,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy e status sb 
	{0x5bf4, &op_bcopy,	  4,  15,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy e status sp 
	{0x5cf4, &op_bcopy,	  4,  15,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy e status db 
	{0x5df4, &op_bcopy,	  4,  15,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy e status cb 
	{0x5ef4, &op_bcopy,	  4,  15,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy e status pi 
	{0x5ff4, &op_bcopy,	  4,  15,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy e status <literal> 
	{0x5005, &op_bcopy,	  5,   0,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy f a a 
	{0x5105, &op_bcopy,	  5,   0,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy f a b 
	{0x5205, &op_bcopy,	  5,   0,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy f a c 
	{0x5305, &op_bcopy,	  5,   0,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy f a d 
	{0x5405, &op_bcopy,	  5,   0,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy f a e 
	{0x5505, &op_bcopy,	  5,   0,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy f a f 
	{0x5605, &op_bcopy,	  5,   0,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy f a g 
	{0x5705, &op_bcopy,	  5,   0,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy f a h 
	{0x5805, &op_bcopy,	  5,   0,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy f a pc 
	{0x5905, &op_bcopy,	  5,   0,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy f a ra 
	{0x5a05, &op_bcopy,	  5,   0,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy f a sb 
	{0x5b05, &op_bcopy,	  5,   0,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy f a sp 
	{0x5c05, &op_bcopy,	  5,   0,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy f a db 
	{0x5d05, &op_bcopy,	  5,   0,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy f a cb 
	{0x5e05, &op_bcopy,	  5,   0,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy f a pi 
	{0x5f05, &op_bcopy,	  5,   0,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy f a <literal> 
	{0x5015, &op_bcopy,	  5,   1,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy f b a 
	{0x5115, &op_bcopy,	  5,   1,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy f b b 
	{0x5215, &op_bcopy,	  5,   1,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy f b c 
	{0x5315, &op_bcopy,	  5,   1,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy f b d 
	{0x5415, &op_bcopy,	  5,   1,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy f b e 
	{0x5515, &op_bcopy,	  5,   1,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy f b f 
	{0x5615, &op_bcopy,	  5,   1,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy f b g 
	{0x5715, &op_bcopy,	  5,   1,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy f b h 
	{0x5815, &op_bcopy,	  5,   1,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy f b pc 
	{0x5915, &op_bcopy,	  5,   1,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy f b ra 
	{0x5a15, &op_bcopy,	  5,   1,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy f b sb 
	{0x5b15, &op_bcopy,	  5,   1,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy f b sp 
	{0x5c15, &op_bcopy,	  5,   1,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy f b db 
	{0x5d15, &op_bcopy,	  5,   1,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy f b cb 
	{0x5e15, &op_bcopy,	  5,   1,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy f b pi 
	{0x5f15, &op_bcopy,	  5,   1,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy f b <literal> 
	{0x5025, &op_bcopy,	  5,   2,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy f c a 
	{0x5125, &op_bcopy,	  5,   2,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy f c b 
	{0x5225, &op_bcopy,	  5,   2,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy f c c 
	{0x5325, &op_bcopy,	  5,   2,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy f c d 
	{0x5425, &op_bcopy,	  5,   2,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy f c e 
	{0x5525, &op_bcopy,	  5,   2,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy f c f 
	{0x5625, &op_bcopy,	  5,   2,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy f c g 
	{0x5725, &op_bcopy,	  5,   2,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy f c h 
	{0x5825, &op_bcopy,	  5,   2,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy f c pc 
	{0x5925, &op_bcopy,	  5,   2,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy f c ra 
	{0x5a25, &op_bcopy,	  5,   2,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy f c sb 
	{0x5b25, &op_bcopy,	  5,   2,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy f c sp 
	{0x5c25, &op_bcopy,	  5,   2,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy f c db 
	{0x5d25, &op_bcopy,	  5,   2,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy f c cb 
	{0x5e25, &op_bcopy,	  5,   2,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy f c pi 
	{0x5f25, &op_bcopy,	  5,   2,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy f c <literal> 
	{0x5035, &op_bcopy,	  5,   3,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy f d a 
	{0x5135, &op_bcopy,	  5,   3,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy f d b 
	{0x5235, &op_bcopy,	  5,   3,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy f d c 
	{0x5335, &op_bcopy,	  5,   3,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy f d d 
	{0x5435, &op_bcopy,	  5,   3,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy f d e 
	{0x5535, &op_bcopy,	  5,   3,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy f d f 
	{0x5635, &op_bcopy,	  5,   3,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy f d g 
	{0x5735, &op_bcopy,	  5,   3,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy f d h 
	{0x5835, &op_bcopy,	  5,   3,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy f d pc 
	{0x5935, &op_bcopy,	  5,   3,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy f d ra 
	{0x5a35, &op_bcopy,	  5,   3,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy f d sb 
	{0x5b35, &op_bcopy,	  5,   3,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy f d sp 
	{0x5c35, &op_bcopy,	  5,   3,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy f d db 
	{0x5d35, &op_bcopy,	  5,   3,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy f d cb 
	{0x5e35, &op_bcopy,	  5,   3,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy f d pi 
	{0x5f35, &op_bcopy,	  5,   3,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy f d <literal> 
	{0x5045, &op_bcopy,	  5,   4,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy f e a 
	{0x5145, &op_bcopy,	  5,   4,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy f e b 
	{0x5245, &op_bcopy,	  5,   4,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy f e c 
	{0x5345, &op_bcopy,	  5,   4,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy f e d 
	{0x5445, &op_bcopy,	  5,   4,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy f e e 
	{0x5545, &op_bcopy,	  5,   4,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy f e f 
	{0x5645, &op_bcopy,	  5,   4,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy f e g 
	{0x5745, &op_bcopy,	  5,   4,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy f e h 
	{0x5845, &op_bcopy,	  5,   4,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy f e pc 
	{0x5945, &op_bcopy,	  5,   4,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy f e ra 
	{0x5a45, &op_bcopy,	  5,   4,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy f e sb 
	{0x5b45, &op_bcopy,	  5,   4,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy f e sp 
	{0x5c45, &op_bcopy,	  5,   4,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy f e db 
	{0x5d45, &op_bcopy,	  5,   4,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy f e cb 
	{0x5e45, &op_bcopy,	  5,   4,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy f e pi 
	{0x5f45, &op_bcopy,	  5,   4,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy f e <literal> 
	{0x5055, &op_bcopy,	  5,   5,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy f f a 
	{0x5155, &op_bcopy,	  5,   5,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy f f b 
	{0x5255, &op_bcopy,	  5,   5,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy f f c 
	{0x5355, &op_bcopy,	  5,   5,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy f f d 
	{0x5455, &op_bcopy,	  5,   5,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy f f e 
	{0x5555, &op_bcopy,	  5,   5,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy f f f 
	{0x5655, &op_bcopy,	  5,   5,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy f f g 
	{0x5755, &op_bcopy,	  5,   5,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy f f h 
	{0x5855, &op_bcopy,	  5,   5,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy f f pc 
	{0x5955, &op_bcopy,	  5,   5,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy f f ra 
	{0x5a55, &op_bcopy,	  5,   5,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy f f sb 
	{0x5b55, &op_bcopy,	  5,   5,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy f f sp 
	{0x5c55, &op_bcopy,	  5,   5,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy f f db 
	{0x5d55, &op_bcopy,	  5,   5,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy f f cb 
	{0x5e55, &op_bcopy,	  5,   5,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy f f pi 
	{0x5f55, &op_bcopy,	  5,   5,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy f f <literal> 
	{0x5065, &op_bcopy,	  5,   6,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy f g a 
	{0x5165, &op_bcopy,	  5,   6,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy f g b 
	{0x5265, &op_bcopy,	  5,   6,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy f g c 
	{0x5365, &op_bcopy,	  5,   6,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy f g d 
	{0x5465, &op_bcopy,	  5,   6,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy f g e 
	{0x5565, &op_bcopy,	  5,   6,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy f g f 
	{0x5665, &op_bcopy,	  5,   6,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy f g g 
	{0x5765, &op_bcopy,	  5,   6,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy f g h 
	{0x5865, &op_bcopy,	  5,   6,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy f g pc 
	{0x5965, &op_bcopy,	  5,   6,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy f g ra 
	{0x5a65, &op_bcopy,	  5,   6,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy f g sb 
	{0x5b65, &op_bcopy,	  5,   6,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy f g sp 
	{0x5c65, &op_bcopy,	  5,   6,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy f g db 
	{0x5d65, &op_bcopy,	  5,   6,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy f g cb 
	{0x5e65, &op_bcopy,	  5,   6,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy f g pi 
	{0x5f65, &op_bcopy,	  5,   6,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy f g <literal> 
	{0x5075, &op_bcopy,	  5,   7,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy f h a 
	{0x5175, &op_bcopy,	  5,   7,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy f h b 
	{0x5275, &op_bcopy,	  5,   7,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy f h c 
	{0x5375, &op_bcopy,	  5,   7,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy f h d 
	{0x5475, &op_bcopy,	  5,   7,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy f h e 
	{0x5575, &op_bcopy,	  5,   7,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy f h f 
	{0x5675, &op_bcopy,	  5,   7,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy f h g 
	{0x5775, &op_bcopy,	  5,   7,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy f h h 
	{0x5875, &op_bcopy,	  5,   7,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy f h pc 
	{0x5975, &op_bcopy,	  5,   7,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy f h ra 
	{0x5a75, &op_bcopy,	  5,   7,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy f h sb 
	{0x5b75, &op_bcopy,	  5,   7,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy f h sp 
	{0x5c75, &op_bcopy,	  5,   7,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy f h db 
	{0x5d75, &op_bcopy,	  5,   7,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy f h cb 
	{0x5e75, &op_bcopy,	  5,   7,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy f h pi 
	{0x5f75, &op_bcopy,	  5,   7,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy f h <literal> 
	{0x5085, &op_bcopy,	  5,   8,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy f pc a 
	{0x5185, &op_bcopy,	  5,   8,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy f pc b 
	{0x5285, &op_bcopy,	  5,   8,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy f pc c 
	{0x5385, &op_bcopy,	  5,   8,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy f pc d 
	{0x5485, &op_bcopy,	  5,   8,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy f pc e 
	{0x5585, &op_bcopy,	  5,   8,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy f pc f 
	{0x5685, &op_bcopy,	  5,   8,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy f pc g 
	{0x5785, &op_bcopy,	  5,   8,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy f pc h 
	{0x5885, &op_bcopy,	  5,   8,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy f pc pc 
	{0x5985, &op_bcopy,	  5,   8,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy f pc ra 
	{0x5a85, &op_bcopy,	  5,   8,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy f pc sb 
	{0x5b85, &op_bcopy,	  5,   8,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy f pc sp 
	{0x5c85, &op_bcopy,	  5,   8,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy f pc db 
	{0x5d85, &op_bcopy,	  5,   8,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy f pc cb 
	{0x5e85, &op_bcopy,	  5,   8,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy f pc pi 
	{0x5f85, &op_bcopy,	  5,   8,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy f pc <literal> 
	{0x5095, &op_bcopy,	  5,   9,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy f ra a 
	{0x5195, &op_bcopy,	  5,   9,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy f ra b 
	{0x5295, &op_bcopy,	  5,   9,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy f ra c 
	{0x5395, &op_bcopy,	  5,   9,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy f ra d 
	{0x5495, &op_bcopy,	  5,   9,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy f ra e 
	{0x5595, &op_bcopy,	  5,   9,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy f ra f 
	{0x5695, &op_bcopy,	  5,   9,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy f ra g 
	{0x5795, &op_bcopy,	  5,   9,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy f ra h 
	{0x5895, &op_bcopy,	  5,   9,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy f ra pc 
	{0x5995, &op_bcopy,	  5,   9,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy f ra ra 
	{0x5a95, &op_bcopy,	  5,   9,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy f ra sb 
	{0x5b95, &op_bcopy,	  5,   9,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy f ra sp 
	{0x5c95, &op_bcopy,	  5,   9,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy f ra db 
	{0x5d95, &op_bcopy,	  5,   9,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy f ra cb 
	{0x5e95, &op_bcopy,	  5,   9,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy f ra pi 
	{0x5f95, &op_bcopy,	  5,   9,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy f ra <literal> 
	{0x50a5, &op_bcopy,	  5,  10,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy f sb a 
	{0x51a5, &op_bcopy,	  5,  10,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy f sb b 
	{0x52a5, &op_bcopy,	  5,  10,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy f sb c 
	{0x53a5, &op_bcopy,	  5,  10,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy f sb d 
	{0x54a5, &op_bcopy,	  5,  10,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy f sb e 
	{0x55a5, &op_bcopy,	  5,  10,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy f sb f 
	{0x56a5, &op_bcopy,	  5,  10,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy f sb g 
	{0x57a5, &op_bcopy,	  5,  10,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy f sb h 
	{0x58a5, &op_bcopy,	  5,  10,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy f sb pc 
	{0x59a5, &op_bcopy,	  5,  10,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy f sb ra 
	{0x5aa5, &op_bcopy,	  5,  10,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy f sb sb 
	{0x5ba5, &op_bcopy,	  5,  10,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy f sb sp 
	{0x5ca5, &op_bcopy,	  5,  10,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy f sb db 
	{0x5da5, &op_bcopy,	  5,  10,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy f sb cb 
	{0x5ea5, &op_bcopy,	  5,  10,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy f sb pi 
	{0x5fa5, &op_bcopy,	  5,  10,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy f sb <literal> 
	{0x50b5, &op_bcopy,	  5,  11,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy f sp a 
	{0x51b5, &op_bcopy,	  5,  11,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy f sp b 
	{0x52b5, &op_bcopy,	  5,  11,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy f sp c 
	{0x53b5, &op_bcopy,	  5,  11,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy f sp d 
	{0x54b5, &op_bcopy,	  5,  11,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy f sp e 
	{0x55b5, &op_bcopy,	  5,  11,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy f sp f 
	{0x56b5, &op_bcopy,	  5,  11,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy f sp g 
	{0x57b5, &op_bcopy,	  5,  11,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy f sp h 
	{0x58b5, &op_bcopy,	  5,  11,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy f sp pc 
	{0x59b5, &op_bcopy,	  5,  11,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy f sp ra 
	{0x5ab5, &op_bcopy,	  5,  11,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy f sp sb 
	{0x5bb5, &op_bcopy,	  5,  11,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy f sp sp 
	{0x5cb5, &op_bcopy,	  5,  11,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy f sp db 
	{0x5db5, &op_bcopy,	  5,  11,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy f sp cb 
	{0x5eb5, &op_bcopy,	  5,  11,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy f sp pi 
	{0x5fb5, &op_bcopy,	  5,  11,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy f sp <literal> 
	{0x50c5, &op_bcopy,	  5,  12,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy f db a 
	{0x51c5, &op_bcopy,	  5,  12,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy f db b 
	{0x52c5, &op_bcopy,	  5,  12,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy f db c 
	{0x53c5, &op_bcopy,	  5,  12,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy f db d 
	{0x54c5, &op_bcopy,	  5,  12,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy f db e 
	{0x55c5, &op_bcopy,	  5,  12,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy f db f 
	{0x56c5, &op_bcopy,	  5,  12,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy f db g 
	{0x57c5, &op_bcopy,	  5,  12,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy f db h 
	{0x58c5, &op_bcopy,	  5,  12,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy f db pc 
	{0x59c5, &op_bcopy,	  5,  12,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy f db ra 
	{0x5ac5, &op_bcopy,	  5,  12,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy f db sb 
	{0x5bc5, &op_bcopy,	  5,  12,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy f db sp 
	{0x5cc5, &op_bcopy,	  5,  12,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy f db db 
	{0x5dc5, &op_bcopy,	  5,  12,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy f db cb 
	{0x5ec5, &op_bcopy,	  5,  12,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy f db pi 
	{0x5fc5, &op_bcopy,	  5,  12,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy f db <literal> 
	{0x50d5, &op_bcopy,	  5,  13,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy f cb a 
	{0x51d5, &op_bcopy,	  5,  13,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy f cb b 
	{0x52d5, &op_bcopy,	  5,  13,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy f cb c 
	{0x53d5, &op_bcopy,	  5,  13,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy f cb d 
	{0x54d5, &op_bcopy,	  5,  13,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy f cb e 
	{0x55d5, &op_bcopy,	  5,  13,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy f cb f 
	{0x56d5, &op_bcopy,	  5,  13,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy f cb g 
	{0x57d5, &op_bcopy,	  5,  13,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy f cb h 
	{0x58d5, &op_bcopy,	  5,  13,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy f cb pc 
	{0x59d5, &op_bcopy,	  5,  13,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy f cb ra 
	{0x5ad5, &op_bcopy,	  5,  13,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy f cb sb 
	{0x5bd5, &op_bcopy,	  5,  13,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy f cb sp 
	{0x5cd5, &op_bcopy,	  5,  13,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy f cb db 
	{0x5dd5, &op_bcopy,	  5,  13,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy f cb cb 
	{0x5ed5, &op_bcopy,	  5,  13,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy f cb pi 
	{0x5fd5, &op_bcopy,	  5,  13,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy f cb <literal> 
	{0x50e5, &op_bcopy,	  5,  14,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy f pi a 
	{0x51e5, &op_bcopy,	  5,  14,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy f pi b 
	{0x52e5, &op_bcopy,	  5,  14,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy f pi c 
	{0x53e5, &op_bcopy,	  5,  14,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy f pi d 
	{0x54e5, &op_bcopy,	  5,  14,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy f pi e 
	{0x55e5, &op_bcopy,	  5,  14,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy f pi f 
	{0x56e5, &op_bcopy,	  5,  14,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy f pi g 
	{0x57e5, &op_bcopy,	  5,  14,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy f pi h 
	{0x58e5, &op_bcopy,	  5,  14,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy f pi pc 
	{0x59e5, &op_bcopy,	  5,  14,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy f pi ra 
	{0x5ae5, &op_bcopy,	  5,  14,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy f pi sb 
	{0x5be5, &op_bcopy,	  5,  14,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy f pi sp 
	{0x5ce5, &op_bcopy,	  5,  14,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy f pi db 
	{0x5de5, &op_bcopy,	  5,  14,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy f pi cb 
	{0x5ee5, &op_bcopy,	  5,  14,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy f pi pi 
	{0x5fe5, &op_bcopy,	  5,  14,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy f pi <literal> 
	{0x50f5, &op_bcopy,	  5,  15,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy f status a 
	{0x51f5, &op_bcopy,	  5,  15,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy f status b 
	{0x52f5, &op_bcopy,	  5,  15,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy f status c 
	{0x53f5, &op_bcopy,	  5,  15,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy f status d 
	{0x54f5, &op_bcopy,	  5,  15,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy f status e 
	{0x55f5, &op_bcopy,	  5,  15,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy f status f 
	{0x56f5, &op_bcopy,	  5,  15,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy f status g 
	{0x57f5, &op_bcopy,	  5,  15,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy f status h 
	{0x58f5, &op_bcopy,	  5,  15,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy f status pc 
	{0x59f5, &op_bcopy,	  5,  15,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy f status ra 
	{0x5af5, &op_bcopy,	  5,  15,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy f status sb 
	{0x5bf5, &op_bcopy,	  5,  15,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy f status sp 
	{0x5cf5, &op_bcopy,	  5,  15,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy f status db 
	{0x5df5, &op_bcopy,	  5,  15,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy f status cb 
	{0x5ef5, &op_bcopy,	  5,  15,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy f status pi 
	{0x5ff5, &op_bcopy,	  5,  15,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy f status <literal> 
	{0x5006, &op_bcopy,	  6,   0,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy g a a 
	{0x5106, &op_bcopy,	  6,   0,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy g a b 
	{0x5206, &op_bcopy,	  6,   0,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy g a c 
	{0x5306, &op_bcopy,	  6,   0,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy g a d 
	{0x5406, &op_bcopy,	  6,   0,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy g a e 
	{0x5506, &op_bcopy,	  6,   0,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy g a f 
	{0x5606, &op_bcopy,	  6,   0,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy g a g 
	{0x5706, &op_bcopy,	  6,   0,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy g a h 
	{0x5806, &op_bcopy,	  6,   0,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy g a pc 
	{0x5906, &op_bcopy,	  6,   0,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy g a ra 
	{0x5a06, &op_bcopy,	  6,   0,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy g a sb 
	{0x5b06, &op_bcopy,	  6,   0,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy g a sp 
	{0x5c06, &op_bcopy,	  6,   0,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy g a db 
	{0x5d06, &op_bcopy,	  6,   0,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy g a cb 
	{0x5e06, &op_bcopy,	  6,   0,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy g a pi 
	{0x5f06, &op_bcopy,	  6,   0,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy g a <literal> 
	{0x5016, &op_bcopy,	  6,   1,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy g b a 
	{0x5116, &op_bcopy,	  6,   1,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy g b b 
	{0x5216, &op_bcopy,	  6,   1,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy g b c 
	{0x5316, &op_bcopy,	  6,   1,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy g b d 
	{0x5416, &op_bcopy,	  6,   1,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy g b e 
	{0x5516, &op_bcopy,	  6,   1,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy g b f 
	{0x5616, &op_bcopy,	  6,   1,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy g b g 
	{0x5716, &op_bcopy,	  6,   1,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy g b h 
	{0x5816, &op_bcopy,	  6,   1,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy g b pc 
	{0x5916, &op_bcopy,	  6,   1,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy g b ra 
	{0x5a16, &op_bcopy,	  6,   1,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy g b sb 
	{0x5b16, &op_bcopy,	  6,   1,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy g b sp 
	{0x5c16, &op_bcopy,	  6,   1,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy g b db 
	{0x5d16, &op_bcopy,	  6,   1,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy g b cb 
	{0x5e16, &op_bcopy,	  6,   1,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy g b pi 
	{0x5f16, &op_bcopy,	  6,   1,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy g b <literal> 
	{0x5026, &op_bcopy,	  6,   2,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy g c a 
	{0x5126, &op_bcopy,	  6,   2,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy g c b 
	{0x5226, &op_bcopy,	  6,   2,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy g c c 
	{0x5326, &op_bcopy,	  6,   2,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy g c d 
	{0x5426, &op_bcopy,	  6,   2,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy g c e 
	{0x5526, &op_bcopy,	  6,   2,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy g c f 
	{0x5626, &op_bcopy,	  6,   2,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy g c g 
	{0x5726, &op_bcopy,	  6,   2,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy g c h 
	{0x5826, &op_bcopy,	  6,   2,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy g c pc 
	{0x5926, &op_bcopy,	  6,   2,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy g c ra 
	{0x5a26, &op_bcopy,	  6,   2,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy g c sb 
	{0x5b26, &op_bcopy,	  6,   2,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy g c sp 
	{0x5c26, &op_bcopy,	  6,   2,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy g c db 
	{0x5d26, &op_bcopy,	  6,   2,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy g c cb 
	{0x5e26, &op_bcopy,	  6,   2,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy g c pi 
	{0x5f26, &op_bcopy,	  6,   2,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy g c <literal> 
	{0x5036, &op_bcopy,	  6,   3,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy g d a 
	{0x5136, &op_bcopy,	  6,   3,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy g d b 
	{0x5236, &op_bcopy,	  6,   3,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy g d c 
	{0x5336, &op_bcopy,	  6,   3,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy g d d 
	{0x5436, &op_bcopy,	  6,   3,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy g d e 
	{0x5536, &op_bcopy,	  6,   3,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy g d f 
	{0x5636, &op_bcopy,	  6,   3,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy g d g 
	{0x5736, &op_bcopy,	  6,   3,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy g d h 
	{0x5836, &op_bcopy,	  6,   3,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy g d pc 
	{0x5936, &op_bcopy,	  6,   3,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy g d ra 
	{0x5a36, &op_bcopy,	  6,   3,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy g d sb 
	{0x5b36, &op_bcopy,	  6,   3,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy g d sp 
	{0x5c36, &op_bcopy,	  6,   3,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy g d db 
	{0x5d36, &op_bcopy,	  6,   3,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy g d cb 
	{0x5e36, &op_bcopy,	  6,   3,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy g d pi 
	{0x5f36, &op_bcopy,	  6,   3,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy g d <literal> 
	{0x5046, &op_bcopy,	  6,   4,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy g e a 
	{0x5146, &op_bcopy,	  6,   4,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy g e b 
	{0x5246, &op_bcopy,	  6,   4,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy g e c 
	{0x5346, &op_bcopy,	  6,   4,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy g e d 
	{0x5446, &op_bcopy,	  6,   4,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy g e e 
	{0x5546, &op_bcopy,	  6,   4,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy g e f 
	{0x5646, &op_bcopy,	  6,   4,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy g e g 
	{0x5746, &op_bcopy,	  6,   4,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy g e h 
	{0x5846, &op_bcopy,	  6,   4,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy g e pc 
	{0x5946, &op_bcopy,	  6,   4,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy g e ra 
	{0x5a46, &op_bcopy,	  6,   4,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy g e sb 
	{0x5b46, &op_bcopy,	  6,   4,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy g e sp 
	{0x5c46, &op_bcopy,	  6,   4,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy g e db 
	{0x5d46, &op_bcopy,	  6,   4,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy g e cb 
	{0x5e46, &op_bcopy,	  6,   4,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy g e pi 
	{0x5f46, &op_bcopy,	  6,   4,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy g e <literal> 
	{0x5056, &op_bcopy,	  6,   5,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy g f a 
	{0x5156, &op_bcopy,	  6,   5,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy g f b 
	{0x5256, &op_bcopy,	  6,   5,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy g f c 
	{0x5356, &op_bcopy,	  6,   5,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy g f d 
	{0x5456, &op_bcopy,	  6,   5,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy g f e 
	{0x5556, &op_bcopy,	  6,   5,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy g f f 
	{0x5656, &op_bcopy,	  6,   5,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy g f g 
	{0x5756, &op_bcopy,	  6,   5,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy g f h 
	{0x5856, &op_bcopy,	  6,   5,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy g f pc 
	{0x5956, &op_bcopy,	  6,   5,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy g f ra 
	{0x5a56, &op_bcopy,	  6,   5,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy g f sb 
	{0x5b56, &op_bcopy,	  6,   5,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy g f sp 
	{0x5c56, &op_bcopy,	  6,   5,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy g f db 
	{0x5d56, &op_bcopy,	  6,   5,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy g f cb 
	{0x5e56, &op_bcopy,	  6,   5,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy g f pi 
	{0x5f56, &op_bcopy,	  6,   5,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy g f <literal> 
	{0x5066, &op_bcopy,	  6,   6,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy g g a 
	{0x5166, &op_bcopy,	  6,   6,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy g g b 
	{0x5266, &op_bcopy,	  6,   6,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy g g c 
	{0x5366, &op_bcopy,	  6,   6,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy g g d 
	{0x5466, &op_bcopy,	  6,   6,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy g g e 
	{0x5566, &op_bcopy,	  6,   6,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy g g f 
	{0x5666, &op_bcopy,	  6,   6,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy g g g 
	{0x5766, &op_bcopy,	  6,   6,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy g g h 
	{0x5866, &op_bcopy,	  6,   6,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy g g pc 
	{0x5966, &op_bcopy,	  6,   6,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy g g ra 
	{0x5a66, &op_bcopy,	  6,   6,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy g g sb 
	{0x5b66, &op_bcopy,	  6,   6,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy g g sp 
	{0x5c66, &op_bcopy,	  6,   6,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy g g db 
	{0x5d66, &op_bcopy,	  6,   6,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy g g cb 
	{0x5e66, &op_bcopy,	  6,   6,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy g g pi 
	{0x5f66, &op_bcopy,	  6,   6,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy g g <literal> 
	{0x5076, &op_bcopy,	  6,   7,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy g h a 
	{0x5176, &op_bcopy,	  6,   7,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy g h b 
	{0x5276, &op_bcopy,	  6,   7,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy g h c 
	{0x5376, &op_bcopy,	  6,   7,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy g h d 
	{0x5476, &op_bcopy,	  6,   7,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy g h e 
	{0x5576, &op_bcopy,	  6,   7,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy g h f 
	{0x5676, &op_bcopy,	  6,   7,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy g h g 
	{0x5776, &op_bcopy,	  6,   7,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy g h h 
	{0x5876, &op_bcopy,	  6,   7,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy g h pc 
	{0x5976, &op_bcopy,	  6,   7,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy g h ra 
	{0x5a76, &op_bcopy,	  6,   7,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy g h sb 
	{0x5b76, &op_bcopy,	  6,   7,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy g h sp 
	{0x5c76, &op_bcopy,	  6,   7,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy g h db 
	{0x5d76, &op_bcopy,	  6,   7,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy g h cb 
	{0x5e76, &op_bcopy,	  6,   7,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy g h pi 
	{0x5f76, &op_bcopy,	  6,   7,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy g h <literal> 
	{0x5086, &op_bcopy,	  6,   8,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy g pc a 
	{0x5186, &op_bcopy,	  6,   8,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy g pc b 
	{0x5286, &op_bcopy,	  6,   8,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy g pc c 
	{0x5386, &op_bcopy,	  6,   8,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy g pc d 
	{0x5486, &op_bcopy,	  6,   8,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy g pc e 
	{0x5586, &op_bcopy,	  6,   8,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy g pc f 
	{0x5686, &op_bcopy,	  6,   8,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy g pc g 
	{0x5786, &op_bcopy,	  6,   8,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy g pc h 
	{0x5886, &op_bcopy,	  6,   8,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy g pc pc 
	{0x5986, &op_bcopy,	  6,   8,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy g pc ra 
	{0x5a86, &op_bcopy,	  6,   8,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy g pc sb 
	{0x5b86, &op_bcopy,	  6,   8,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy g pc sp 
	{0x5c86, &op_bcopy,	  6,   8,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy g pc db 
	{0x5d86, &op_bcopy,	  6,   8,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy g pc cb 
	{0x5e86, &op_bcopy,	  6,   8,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy g pc pi 
	{0x5f86, &op_bcopy,	  6,   8,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy g pc <literal> 
	{0x5096, &op_bcopy,	  6,   9,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy g ra a 
	{0x5196, &op_bcopy,	  6,   9,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy g ra b 
	{0x5296, &op_bcopy,	  6,   9,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy g ra c 
	{0x5396, &op_bcopy,	  6,   9,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy g ra d 
	{0x5496, &op_bcopy,	  6,   9,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy g ra e 
	{0x5596, &op_bcopy,	  6,   9,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy g ra f 
	{0x5696, &op_bcopy,	  6,   9,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy g ra g 
	{0x5796, &op_bcopy,	  6,   9,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy g ra h 
	{0x5896, &op_bcopy,	  6,   9,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy g ra pc 
	{0x5996, &op_bcopy,	  6,   9,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy g ra ra 
	{0x5a96, &op_bcopy,	  6,   9,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy g ra sb 
	{0x5b96, &op_bcopy,	  6,   9,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy g ra sp 
	{0x5c96, &op_bcopy,	  6,   9,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy g ra db 
	{0x5d96, &op_bcopy,	  6,   9,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy g ra cb 
	{0x5e96, &op_bcopy,	  6,   9,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy g ra pi 
	{0x5f96, &op_bcopy,	  6,   9,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy g ra <literal> 
	{0x50a6, &op_bcopy,	  6,  10,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy g sb a 
	{0x51a6, &op_bcopy,	  6,  10,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy g sb b 
	{0x52a6, &op_bcopy,	  6,  10,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy g sb c 
	{0x53a6, &op_bcopy,	  6,  10,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy g sb d 
	{0x54a6, &op_bcopy,	  6,  10,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy g sb e 
	{0x55a6, &op_bcopy,	  6,  10,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy g sb f 
	{0x56a6, &op_bcopy,	  6,  10,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy g sb g 
	{0x57a6, &op_bcopy,	  6,  10,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy g sb h 
	{0x58a6, &op_bcopy,	  6,  10,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy g sb pc 
	{0x59a6, &op_bcopy,	  6,  10,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy g sb ra 
	{0x5aa6, &op_bcopy,	  6,  10,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy g sb sb 
	{0x5ba6, &op_bcopy,	  6,  10,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy g sb sp 
	{0x5ca6, &op_bcopy,	  6,  10,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy g sb db 
	{0x5da6, &op_bcopy,	  6,  10,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy g sb cb 
	{0x5ea6, &op_bcopy,	  6,  10,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy g sb pi 
	{0x5fa6, &op_bcopy,	  6,  10,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy g sb <literal> 
	{0x50b6, &op_bcopy,	  6,  11,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy g sp a 
	{0x51b6, &op_bcopy,	  6,  11,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy g sp b 
	{0x52b6, &op_bcopy,	  6,  11,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy g sp c 
	{0x53b6, &op_bcopy,	  6,  11,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy g sp d 
	{0x54b6, &op_bcopy,	  6,  11,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy g sp e 
	{0x55b6, &op_bcopy,	  6,  11,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy g sp f 
	{0x56b6, &op_bcopy,	  6,  11,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy g sp g 
	{0x57b6, &op_bcopy,	  6,  11,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy g sp h 
	{0x58b6, &op_bcopy,	  6,  11,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy g sp pc 
	{0x59b6, &op_bcopy,	  6,  11,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy g sp ra 
	{0x5ab6, &op_bcopy,	  6,  11,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy g sp sb 
	{0x5bb6, &op_bcopy,	  6,  11,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy g sp sp 
	{0x5cb6, &op_bcopy,	  6,  11,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy g sp db 
	{0x5db6, &op_bcopy,	  6,  11,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy g sp cb 
	{0x5eb6, &op_bcopy,	  6,  11,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy g sp pi 
	{0x5fb6, &op_bcopy,	  6,  11,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy g sp <literal> 
	{0x50c6, &op_bcopy,	  6,  12,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy g db a 
	{0x51c6, &op_bcopy,	  6,  12,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy g db b 
	{0x52c6, &op_bcopy,	  6,  12,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy g db c 
	{0x53c6, &op_bcopy,	  6,  12,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy g db d 
	{0x54c6, &op_bcopy,	  6,  12,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy g db e 
	{0x55c6, &op_bcopy,	  6,  12,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy g db f 
	{0x56c6, &op_bcopy,	  6,  12,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy g db g 
	{0x57c6, &op_bcopy,	  6,  12,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy g db h 
	{0x58c6, &op_bcopy,	  6,  12,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy g db pc 
	{0x59c6, &op_bcopy,	  6,  12,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy g db ra 
	{0x5ac6, &op_bcopy,	  6,  12,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy g db sb 
	{0x5bc6, &op_bcopy,	  6,  12,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy g db sp 
	{0x5cc6, &op_bcopy,	  6,  12,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy g db db 
	{0x5dc6, &op_bcopy,	  6,  12,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy g db cb 
	{0x5ec6, &op_bcopy,	  6,  12,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy g db pi 
	{0x5fc6, &op_bcopy,	  6,  12,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy g db <literal> 
	{0x50d6, &op_bcopy,	  6,  13,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy g cb a 
	{0x51d6, &op_bcopy,	  6,  13,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy g cb b 
	{0x52d6, &op_bcopy,	  6,  13,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy g cb c 
	{0x53d6, &op_bcopy,	  6,  13,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy g cb d 
	{0x54d6, &op_bcopy,	  6,  13,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy g cb e 
	{0x55d6, &op_bcopy,	  6,  13,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy g cb f 
	{0x56d6, &op_bcopy,	  6,  13,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy g cb g 
	{0x57d6, &op_bcopy,	  6,  13,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy g cb h 
	{0x58d6, &op_bcopy,	  6,  13,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy g cb pc 
	{0x59d6, &op_bcopy,	  6,  13,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy g cb ra 
	{0x5ad6, &op_bcopy,	  6,  13,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy g cb sb 
	{0x5bd6, &op_bcopy,	  6,  13,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy g cb sp 
	{0x5cd6, &op_bcopy,	  6,  13,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy g cb db 
	{0x5dd6, &op_bcopy,	  6,  13,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy g cb cb 
	{0x5ed6, &op_bcopy,	  6,  13,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy g cb pi 
	{0x5fd6, &op_bcopy,	  6,  13,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy g cb <literal> 
	{0x50e6, &op_bcopy,	  6,  14,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy g pi a 
	{0x51e6, &op_bcopy,	  6,  14,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy g pi b 
	{0x52e6, &op_bcopy,	  6,  14,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy g pi c 
	{0x53e6, &op_bcopy,	  6,  14,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy g pi d 
	{0x54e6, &op_bcopy,	  6,  14,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy g pi e 
	{0x55e6, &op_bcopy,	  6,  14,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy g pi f 
	{0x56e6, &op_bcopy,	  6,  14,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy g pi g 
	{0x57e6, &op_bcopy,	  6,  14,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy g pi h 
	{0x58e6, &op_bcopy,	  6,  14,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy g pi pc 
	{0x59e6, &op_bcopy,	  6,  14,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy g pi ra 
	{0x5ae6, &op_bcopy,	  6,  14,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy g pi sb 
	{0x5be6, &op_bcopy,	  6,  14,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy g pi sp 
	{0x5ce6, &op_bcopy,	  6,  14,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy g pi db 
	{0x5de6, &op_bcopy,	  6,  14,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy g pi cb 
	{0x5ee6, &op_bcopy,	  6,  14,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy g pi pi 
	{0x5fe6, &op_bcopy,	  6,  14,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy g pi <literal> 
	{0x50f6, &op_bcopy,	  6,  15,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy g status a 
	{0x51f6, &op_bcopy,	  6,  15,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy g status b 
	{0x52f6, &op_bcopy,	  6,  15,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy g status c 
	{0x53f6, &op_bcopy,	  6,  15,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy g status d 
	{0x54f6, &op_bcopy,	  6,  15,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy g status e 
	{0x55f6, &op_bcopy,	  6,  15,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy g status f 
	{0x56f6, &op_bcopy,	  6,  15,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy g status g 
	{0x57f6, &op_bcopy,	  6,  15,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy g status h 
	{0x58f6, &op_bcopy,	  6,  15,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy g status pc 
	{0x59f6, &op_bcopy,	  6,  15,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy g status ra 
	{0x5af6, &op_bcopy,	  6,  15,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy g status sb 
	{0x5bf6, &op_bcopy,	  6,  15,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy g status sp 
	{0x5cf6, &op_bcopy,	  6,  15,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy g status db 
	{0x5df6, &op_bcopy,	  6,  15,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy g status cb 
	{0x5ef6, &op_bcopy,	  6,  15,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy g status pi 
	{0x5ff6, &op_bcopy,	  6,  15,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy g status <literal> 
	{0x5007, &op_bcopy,	  7,   0,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy h a a 
	{0x5107, &op_bcopy,	  7,   0,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy h a b 
	{0x5207, &op_bcopy,	  7,   0,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy h a c 
	{0x5307, &op_bcopy,	  7,   0,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy h a d 
	{0x5407, &op_bcopy,	  7,   0,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy h a e 
	{0x5507, &op_bcopy,	  7,   0,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy h a f 
	{0x5607, &op_bcopy,	  7,   0,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy h a g 
	{0x5707, &op_bcopy,	  7,   0,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy h a h 
	{0x5807, &op_bcopy,	  7,   0,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy h a pc 
	{0x5907, &op_bcopy,	  7,   0,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy h a ra 
	{0x5a07, &op_bcopy,	  7,   0,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy h a sb 
	{0x5b07, &op_bcopy,	  7,   0,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy h a sp 
	{0x5c07, &op_bcopy,	  7,   0,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy h a db 
	{0x5d07, &op_bcopy,	  7,   0,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy h a cb 
	{0x5e07, &op_bcopy,	  7,   0,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy h a pi 
	{0x5f07, &op_bcopy,	  7,   0,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy h a <literal> 
	{0x5017, &op_bcopy,	  7,   1,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy h b a 
	{0x5117, &op_bcopy,	  7,   1,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy h b b 
	{0x5217, &op_bcopy,	  7,   1,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy h b c 
	{0x5317, &op_bcopy,	  7,   1,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy h b d 
	{0x5417, &op_bcopy,	  7,   1,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy h b e 
	{0x5517, &op_bcopy,	  7,   1,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy h b f 
	{0x5617, &op_bcopy,	  7,   1,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy h b g 
	{0x5717, &op_bcopy,	  7,   1,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy h b h 
	{0x5817, &op_bcopy,	  7,   1,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy h b pc 
	{0x5917, &op_bcopy,	  7,   1,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy h b ra 
	{0x5a17, &op_bcopy,	  7,   1,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy h b sb 
	{0x5b17, &op_bcopy,	  7,   1,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy h b sp 
	{0x5c17, &op_bcopy,	  7,   1,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy h b db 
	{0x5d17, &op_bcopy,	  7,   1,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy h b cb 
	{0x5e17, &op_bcopy,	  7,   1,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy h b pi 
	{0x5f17, &op_bcopy,	  7,   1,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy h b <literal> 
	{0x5027, &op_bcopy,	  7,   2,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy h c a 
	{0x5127, &op_bcopy,	  7,   2,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy h c b 
	{0x5227, &op_bcopy,	  7,   2,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy h c c 
	{0x5327, &op_bcopy,	  7,   2,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy h c d 
	{0x5427, &op_bcopy,	  7,   2,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy h c e 
	{0x5527, &op_bcopy,	  7,   2,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy h c f 
	{0x5627, &op_bcopy,	  7,   2,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy h c g 
	{0x5727, &op_bcopy,	  7,   2,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy h c h 
	{0x5827, &op_bcopy,	  7,   2,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy h c pc 
	{0x5927, &op_bcopy,	  7,   2,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy h c ra 
	{0x5a27, &op_bcopy,	  7,   2,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy h c sb 
	{0x5b27, &op_bcopy,	  7,   2,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy h c sp 
	{0x5c27, &op_bcopy,	  7,   2,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy h c db 
	{0x5d27, &op_bcopy,	  7,   2,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy h c cb 
	{0x5e27, &op_bcopy,	  7,   2,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy h c pi 
	{0x5f27, &op_bcopy,	  7,   2,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy h c <literal> 
	{0x5037, &op_bcopy,	  7,   3,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy h d a 
	{0x5137, &op_bcopy,	  7,   3,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy h d b 
	{0x5237, &op_bcopy,	  7,   3,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy h d c 
	{0x5337, &op_bcopy,	  7,   3,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy h d d 
	{0x5437, &op_bcopy,	  7,   3,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy h d e 
	{0x5537, &op_bcopy,	  7,   3,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy h d f 
	{0x5637, &op_bcopy,	  7,   3,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy h d g 
	{0x5737, &op_bcopy,	  7,   3,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy h d h 
	{0x5837, &op_bcopy,	  7,   3,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy h d pc 
	{0x5937, &op_bcopy,	  7,   3,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy h d ra 
	{0x5a37, &op_bcopy,	  7,   3,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy h d sb 
	{0x5b37, &op_bcopy,	  7,   3,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy h d sp 
	{0x5c37, &op_bcopy,	  7,   3,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy h d db 
	{0x5d37, &op_bcopy,	  7,   3,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy h d cb 
	{0x5e37, &op_bcopy,	  7,   3,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy h d pi 
	{0x5f37, &op_bcopy,	  7,   3,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy h d <literal> 
	{0x5047, &op_bcopy,	  7,   4,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy h e a 
	{0x5147, &op_bcopy,	  7,   4,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy h e b 
	{0x5247, &op_bcopy,	  7,   4,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy h e c 
	{0x5347, &op_bcopy,	  7,   4,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy h e d 
	{0x5447, &op_bcopy,	  7,   4,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy h e e 
	{0x5547, &op_bcopy,	  7,   4,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy h e f 
	{0x5647, &op_bcopy,	  7,   4,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy h e g 
	{0x5747, &op_bcopy,	  7,   4,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy h e h 
	{0x5847, &op_bcopy,	  7,   4,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy h e pc 
	{0x5947, &op_bcopy,	  7,   4,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy h e ra 
	{0x5a47, &op_bcopy,	  7,   4,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy h e sb 
	{0x5b47, &op_bcopy,	  7,   4,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy h e sp 
	{0x5c47, &op_bcopy,	  7,   4,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy h e db 
	{0x5d47, &op_bcopy,	  7,   4,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy h e cb 
	{0x5e47, &op_bcopy,	  7,   4,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy h e pi 
	{0x5f47, &op_bcopy,	  7,   4,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy h e <literal> 
	{0x5057, &op_bcopy,	  7,   5,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy h f a 
	{0x5157, &op_bcopy,	  7,   5,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy h f b 
	{0x5257, &op_bcopy,	  7,   5,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy h f c 
	{0x5357, &op_bcopy,	  7,   5,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy h f d 
	{0x5457, &op_bcopy,	  7,   5,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy h f e 
	{0x5557, &op_bcopy,	  7,   5,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy h f f 
	{0x5657, &op_bcopy,	  7,   5,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy h f g 
	{0x5757, &op_bcopy,	  7,   5,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy h f h 
	{0x5857, &op_bcopy,	  7,   5,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy h f pc 
	{0x5957, &op_bcopy,	  7,   5,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy h f ra 
	{0x5a57, &op_bcopy,	  7,   5,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy h f sb 
	{0x5b57, &op_bcopy,	  7,   5,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy h f sp 
	{0x5c57, &op_bcopy,	  7,   5,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy h f db 
	{0x5d57, &op_bcopy,	  7,   5,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy h f cb 
	{0x5e57, &op_bcopy,	  7,   5,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy h f pi 
	{0x5f57, &op_bcopy,	  7,   5,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy h f <literal> 
	{0x5067, &op_bcopy,	  7,   6,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy h g a 
	{0x5167, &op_bcopy,	  7,   6,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy h g b 
	{0x5267, &op_bcopy,	  7,   6,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy h g c 
	{0x5367, &op_bcopy,	  7,   6,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy h g d 
	{0x5467, &op_bcopy,	  7,   6,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy h g e 
	{0x5567, &op_bcopy,	  7,   6,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy h g f 
	{0x5667, &op_bcopy,	  7,   6,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy h g g 
	{0x5767, &op_bcopy,	  7,   6,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy h g h 
	{0x5867, &op_bcopy,	  7,   6,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy h g pc 
	{0x5967, &op_bcopy,	  7,   6,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy h g ra 
	{0x5a67, &op_bcopy,	  7,   6,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy h g sb 
	{0x5b67, &op_bcopy,	  7,   6,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy h g sp 
	{0x5c67, &op_bcopy,	  7,   6,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy h g db 
	{0x5d67, &op_bcopy,	  7,   6,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy h g cb 
	{0x5e67, &op_bcopy,	  7,   6,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy h g pi 
	{0x5f67, &op_bcopy,	  7,   6,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy h g <literal> 
	{0x5077, &op_bcopy,	  7,   7,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy h h a 
	{0x5177, &op_bcopy,	  7,   7,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy h h b 
	{0x5277, &op_bcopy,	  7,   7,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy h h c 
	{0x5377, &op_bcopy,	  7,   7,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy h h d 
	{0x5477, &op_bcopy,	  7,   7,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy h h e 
	{0x5577, &op_bcopy,	  7,   7,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy h h f 
	{0x5677, &op_bcopy,	  7,   7,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy h h g 
	{0x5777, &op_bcopy,	  7,   7,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy h h h 
	{0x5877, &op_bcopy,	  7,   7,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy h h pc 
	{0x5977, &op_bcopy,	  7,   7,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy h h ra 
	{0x5a77, &op_bcopy,	  7,   7,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy h h sb 
	{0x5b77, &op_bcopy,	  7,   7,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy h h sp 
	{0x5c77, &op_bcopy,	  7,   7,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy h h db 
	{0x5d77, &op_bcopy,	  7,   7,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy h h cb 
	{0x5e77, &op_bcopy,	  7,   7,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy h h pi 
	{0x5f77, &op_bcopy,	  7,   7,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy h h <literal> 
	{0x5087, &op_bcopy,	  7,   8,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy h pc a 
	{0x5187, &op_bcopy,	  7,   8,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy h pc b 
	{0x5287, &op_bcopy,	  7,   8,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy h pc c 
	{0x5387, &op_bcopy,	  7,   8,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy h pc d 
	{0x5487, &op_bcopy,	  7,   8,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy h pc e 
	{0x5587, &op_bcopy,	  7,   8,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy h pc f 
	{0x5687, &op_bcopy,	  7,   8,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy h pc g 
	{0x5787, &op_bcopy,	  7,   8,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy h pc h 
	{0x5887, &op_bcopy,	  7,   8,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy h pc pc 
	{0x5987, &op_bcopy,	  7,   8,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy h pc ra 
	{0x5a87, &op_bcopy,	  7,   8,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy h pc sb 
	{0x5b87, &op_bcopy,	  7,   8,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy h pc sp 
	{0x5c87, &op_bcopy,	  7,   8,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy h pc db 
	{0x5d87, &op_bcopy,	  7,   8,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy h pc cb 
	{0x5e87, &op_bcopy,	  7,   8,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy h pc pi 
	{0x5f87, &op_bcopy,	  7,   8,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy h pc <literal> 
	{0x5097, &op_bcopy,	  7,   9,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy h ra a 
	{0x5197, &op_bcopy,	  7,   9,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy h ra b 
	{0x5297, &op_bcopy,	  7,   9,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy h ra c 
	{0x5397, &op_bcopy,	  7,   9,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy h ra d 
	{0x5497, &op_bcopy,	  7,   9,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy h ra e 
	{0x5597, &op_bcopy,	  7,   9,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy h ra f 
	{0x5697, &op_bcopy,	  7,   9,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy h ra g 
	{0x5797, &op_bcopy,	  7,   9,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy h ra h 
	{0x5897, &op_bcopy,	  7,   9,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy h ra pc 
	{0x5997, &op_bcopy,	  7,   9,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy h ra ra 
	{0x5a97, &op_bcopy,	  7,   9,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy h ra sb 
	{0x5b97, &op_bcopy,	  7,   9,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy h ra sp 
	{0x5c97, &op_bcopy,	  7,   9,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy h ra db 
	{0x5d97, &op_bcopy,	  7,   9,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy h ra cb 
	{0x5e97, &op_bcopy,	  7,   9,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy h ra pi 
	{0x5f97, &op_bcopy,	  7,   9,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy h ra <literal> 
	{0x50a7, &op_bcopy,	  7,  10,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy h sb a 
	{0x51a7, &op_bcopy,	  7,  10,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy h sb b 
	{0x52a7, &op_bcopy,	  7,  10,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy h sb c 
	{0x53a7, &op_bcopy,	  7,  10,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy h sb d 
	{0x54a7, &op_bcopy,	  7,  10,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy h sb e 
	{0x55a7, &op_bcopy,	  7,  10,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy h sb f 
	{0x56a7, &op_bcopy,	  7,  10,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy h sb g 
	{0x57a7, &op_bcopy,	  7,  10,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy h sb h 
	{0x58a7, &op_bcopy,	  7,  10,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy h sb pc 
	{0x59a7, &op_bcopy,	  7,  10,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy h sb ra 
	{0x5aa7, &op_bcopy,	  7,  10,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy h sb sb 
	{0x5ba7, &op_bcopy,	  7,  10,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy h sb sp 
	{0x5ca7, &op_bcopy,	  7,  10,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy h sb db 
	{0x5da7, &op_bcopy,	  7,  10,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy h sb cb 
	{0x5ea7, &op_bcopy,	  7,  10,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy h sb pi 
	{0x5fa7, &op_bcopy,	  7,  10,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy h sb <literal> 
	{0x50b7, &op_bcopy,	  7,  11,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy h sp a 
	{0x51b7, &op_bcopy,	  7,  11,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy h sp b 
	{0x52b7, &op_bcopy,	  7,  11,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy h sp c 
	{0x53b7, &op_bcopy,	  7,  11,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy h sp d 
	{0x54b7, &op_bcopy,	  7,  11,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy h sp e 
	{0x55b7, &op_bcopy,	  7,  11,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy h sp f 
	{0x56b7, &op_bcopy,	  7,  11,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy h sp g 
	{0x57b7, &op_bcopy,	  7,  11,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy h sp h 
	{0x58b7, &op_bcopy,	  7,  11,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy h sp pc 
	{0x59b7, &op_bcopy,	  7,  11,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy h sp ra 
	{0x5ab7, &op_bcopy,	  7,  11,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy h sp sb 
	{0x5bb7, &op_bcopy,	  7,  11,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy h sp sp 
	{0x5cb7, &op_bcopy,	  7,  11,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy h sp db 
	{0x5db7, &op_bcopy,	  7,  11,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy h sp cb 
	{0x5eb7, &op_bcopy,	  7,  11,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy h sp pi 
	{0x5fb7, &op_bcopy,	  7,  11,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy h sp <literal> 
	{0x50c7, &op_bcopy,	  7,  12,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy h db a 
	{0x51c7, &op_bcopy,	  7,  12,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy h db b 
	{0x52c7, &op_bcopy,	  7,  12,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy h db c 
	{0x53c7, &op_bcopy,	  7,  12,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy h db d 
	{0x54c7, &op_bcopy,	  7,  12,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy h db e 
	{0x55c7, &op_bcopy,	  7,  12,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy h db f 
	{0x56c7, &op_bcopy,	  7,  12,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy h db g 
	{0x57c7, &op_bcopy,	  7,  12,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy h db h 
	{0x58c7, &op_bcopy,	  7,  12,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy h db pc 
	{0x59c7, &op_bcopy,	  7,  12,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy h db ra 
	{0x5ac7, &op_bcopy,	  7,  12,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy h db sb 
	{0x5bc7, &op_bcopy,	  7,  12,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy h db sp 
	{0x5cc7, &op_bcopy,	  7,  12,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy h db db 
	{0x5dc7, &op_bcopy,	  7,  12,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy h db cb 
	{0x5ec7, &op_bcopy,	  7,  12,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy h db pi 
	{0x5fc7, &op_bcopy,	  7,  12,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy h db <literal> 
	{0x50d7, &op_bcopy,	  7,  13,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy h cb a 
	{0x51d7, &op_bcopy,	  7,  13,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy h cb b 
	{0x52d7, &op_bcopy,	  7,  13,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy h cb c 
	{0x53d7, &op_bcopy,	  7,  13,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy h cb d 
	{0x54d7, &op_bcopy,	  7,  13,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy h cb e 
	{0x55d7, &op_bcopy,	  7,  13,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy h cb f 
	{0x56d7, &op_bcopy,	  7,  13,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy h cb g 
	{0x57d7, &op_bcopy,	  7,  13,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy h cb h 
	{0x58d7, &op_bcopy,	  7,  13,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy h cb pc 
	{0x59d7, &op_bcopy,	  7,  13,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy h cb ra 
	{0x5ad7, &op_bcopy,	  7,  13,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy h cb sb 
	{0x5bd7, &op_bcopy,	  7,  13,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy h cb sp 
	{0x5cd7, &op_bcopy,	  7,  13,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy h cb db 
	{0x5dd7, &op_bcopy,	  7,  13,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy h cb cb 
	{0x5ed7, &op_bcopy,	  7,  13,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy h cb pi 
	{0x5fd7, &op_bcopy,	  7,  13,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy h cb <literal> 
	{0x50e7, &op_bcopy,	  7,  14,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy h pi a 
	{0x51e7, &op_bcopy,	  7,  14,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy h pi b 
	{0x52e7, &op_bcopy,	  7,  14,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy h pi c 
	{0x53e7, &op_bcopy,	  7,  14,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy h pi d 
	{0x54e7, &op_bcopy,	  7,  14,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy h pi e 
	{0x55e7, &op_bcopy,	  7,  14,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy h pi f 
	{0x56e7, &op_bcopy,	  7,  14,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy h pi g 
	{0x57e7, &op_bcopy,	  7,  14,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy h pi h 
	{0x58e7, &op_bcopy,	  7,  14,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy h pi pc 
	{0x59e7, &op_bcopy,	  7,  14,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy h pi ra 
	{0x5ae7, &op_bcopy,	  7,  14,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy h pi sb 
	{0x5be7, &op_bcopy,	  7,  14,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy h pi sp 
	{0x5ce7, &op_bcopy,	  7,  14,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy h pi db 
	{0x5de7, &op_bcopy,	  7,  14,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy h pi cb 
	{0x5ee7, &op_bcopy,	  7,  14,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy h pi pi 
	{0x5fe7, &op_bcopy,	  7,  14,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy h pi <literal> 
	{0x50f7, &op_bcopy,	  7,  15,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy h status a 
	{0x51f7, &op_bcopy,	  7,  15,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy h status b 
	{0x52f7, &op_bcopy,	  7,  15,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy h status c 
	{0x53f7, &op_bcopy,	  7,  15,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy h status d 
	{0x54f7, &op_bcopy,	  7,  15,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy h status e 
	{0x55f7, &op_bcopy,	  7,  15,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy h status f 
	{0x56f7, &op_bcopy,	  7,  15,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy h status g 
	{0x57f7, &op_bcopy,	  7,  15,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy h status h 
	{0x58f7, &op_bcopy,	  7,  15,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy h status pc 
	{0x59f7, &op_bcopy,	  7,  15,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy h status ra 
	{0x5af7, &op_bcopy,	  7,  15,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy h status sb 
	{0x5bf7, &op_bcopy,	  7,  15,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy h status sp 
	{0x5cf7, &op_bcopy,	  7,  15,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy h status db 
	{0x5df7, &op_bcopy,	  7,  15,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy h status cb 
	{0x5ef7, &op_bcopy,	  7,  15,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy h status pi 
	{0x5ff7, &op_bcopy,	  7,  15,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy h status <literal> 
	{0x5008, &op_bcopy,	  8,   0,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy pc a a 
	{0x5108, &op_bcopy,	  8,   0,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy pc a b 
	{0x5208, &op_bcopy,	  8,   0,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy pc a c 
	{0x5308, &op_bcopy,	  8,   0,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy pc a d 
	{0x5408, &op_bcopy,	  8,   0,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy pc a e 
	{0x5508, &op_bcopy,	  8,   0,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy pc a f 
	{0x5608, &op_bcopy,	  8,   0,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy pc a g 
	{0x5708, &op_bcopy,	  8,   0,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy pc a h 
	{0x5808, &op_bcopy,	  8,   0,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy pc a pc 
	{0x5908, &op_bcopy,	  8,   0,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy pc a ra 
	{0x5a08, &op_bcopy,	  8,   0,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy pc a sb 
	{0x5b08, &op_bcopy,	  8,   0,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy pc a sp 
	{0x5c08, &op_bcopy,	  8,   0,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy pc a db 
	{0x5d08, &op_bcopy,	  8,   0,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy pc a cb 
	{0x5e08, &op_bcopy,	  8,   0,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy pc a pi 
	{0x5f08, &op_bcopy,	  8,   0,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy pc a <literal> 
	{0x5018, &op_bcopy,	  8,   1,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy pc b a 
	{0x5118, &op_bcopy,	  8,   1,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy pc b b 
	{0x5218, &op_bcopy,	  8,   1,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy pc b c 
	{0x5318, &op_bcopy,	  8,   1,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy pc b d 
	{0x5418, &op_bcopy,	  8,   1,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy pc b e 
	{0x5518, &op_bcopy,	  8,   1,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy pc b f 
	{0x5618, &op_bcopy,	  8,   1,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy pc b g 
	{0x5718, &op_bcopy,	  8,   1,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy pc b h 
	{0x5818, &op_bcopy,	  8,   1,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy pc b pc 
	{0x5918, &op_bcopy,	  8,   1,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy pc b ra 
	{0x5a18, &op_bcopy,	  8,   1,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy pc b sb 
	{0x5b18, &op_bcopy,	  8,   1,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy pc b sp 
	{0x5c18, &op_bcopy,	  8,   1,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy pc b db 
	{0x5d18, &op_bcopy,	  8,   1,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy pc b cb 
	{0x5e18, &op_bcopy,	  8,   1,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy pc b pi 
	{0x5f18, &op_bcopy,	  8,   1,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy pc b <literal> 
	{0x5028, &op_bcopy,	  8,   2,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy pc c a 
	{0x5128, &op_bcopy,	  8,   2,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy pc c b 
	{0x5228, &op_bcopy,	  8,   2,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy pc c c 
	{0x5328, &op_bcopy,	  8,   2,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy pc c d 
	{0x5428, &op_bcopy,	  8,   2,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy pc c e 
	{0x5528, &op_bcopy,	  8,   2,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy pc c f 
	{0x5628, &op_bcopy,	  8,   2,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy pc c g 
	{0x5728, &op_bcopy,	  8,   2,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy pc c h 
	{0x5828, &op_bcopy,	  8,   2,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy pc c pc 
	{0x5928, &op_bcopy,	  8,   2,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy pc c ra 
	{0x5a28, &op_bcopy,	  8,   2,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy pc c sb 
	{0x5b28, &op_bcopy,	  8,   2,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy pc c sp 
	{0x5c28, &op_bcopy,	  8,   2,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy pc c db 
	{0x5d28, &op_bcopy,	  8,   2,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy pc c cb 
	{0x5e28, &op_bcopy,	  8,   2,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy pc c pi 
	{0x5f28, &op_bcopy,	  8,   2,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy pc c <literal> 
	{0x5038, &op_bcopy,	  8,   3,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy pc d a 
	{0x5138, &op_bcopy,	  8,   3,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy pc d b 
	{0x5238, &op_bcopy,	  8,   3,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy pc d c 
	{0x5338, &op_bcopy,	  8,   3,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy pc d d 
	{0x5438, &op_bcopy,	  8,   3,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy pc d e 
	{0x5538, &op_bcopy,	  8,   3,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy pc d f 
	{0x5638, &op_bcopy,	  8,   3,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy pc d g 
	{0x5738, &op_bcopy,	  8,   3,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy pc d h 
	{0x5838, &op_bcopy,	  8,   3,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy pc d pc 
	{0x5938, &op_bcopy,	  8,   3,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy pc d ra 
	{0x5a38, &op_bcopy,	  8,   3,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy pc d sb 
	{0x5b38, &op_bcopy,	  8,   3,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy pc d sp 
	{0x5c38, &op_bcopy,	  8,   3,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy pc d db 
	{0x5d38, &op_bcopy,	  8,   3,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy pc d cb 
	{0x5e38, &op_bcopy,	  8,   3,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy pc d pi 
	{0x5f38, &op_bcopy,	  8,   3,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy pc d <literal> 
	{0x5048, &op_bcopy,	  8,   4,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy pc e a 
	{0x5148, &op_bcopy,	  8,   4,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy pc e b 
	{0x5248, &op_bcopy,	  8,   4,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy pc e c 
	{0x5348, &op_bcopy,	  8,   4,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy pc e d 
	{0x5448, &op_bcopy,	  8,   4,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy pc e e 
	{0x5548, &op_bcopy,	  8,   4,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy pc e f 
	{0x5648, &op_bcopy,	  8,   4,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy pc e g 
	{0x5748, &op_bcopy,	  8,   4,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy pc e h 
	{0x5848, &op_bcopy,	  8,   4,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy pc e pc 
	{0x5948, &op_bcopy,	  8,   4,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy pc e ra 
	{0x5a48, &op_bcopy,	  8,   4,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy pc e sb 
	{0x5b48, &op_bcopy,	  8,   4,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy pc e sp 
	{0x5c48, &op_bcopy,	  8,   4,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy pc e db 
	{0x5d48, &op_bcopy,	  8,   4,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy pc e cb 
	{0x5e48, &op_bcopy,	  8,   4,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy pc e pi 
	{0x5f48, &op_bcopy,	  8,   4,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy pc e <literal> 
	{0x5058, &op_bcopy,	  8,   5,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy pc f a 
	{0x5158, &op_bcopy,	  8,   5,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy pc f b 
	{0x5258, &op_bcopy,	  8,   5,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy pc f c 
	{0x5358, &op_bcopy,	  8,   5,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy pc f d 
	{0x5458, &op_bcopy,	  8,   5,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy pc f e 
	{0x5558, &op_bcopy,	  8,   5,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy pc f f 
	{0x5658, &op_bcopy,	  8,   5,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy pc f g 
	{0x5758, &op_bcopy,	  8,   5,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy pc f h 
	{0x5858, &op_bcopy,	  8,   5,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy pc f pc 
	{0x5958, &op_bcopy,	  8,   5,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy pc f ra 
	{0x5a58, &op_bcopy,	  8,   5,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy pc f sb 
	{0x5b58, &op_bcopy,	  8,   5,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy pc f sp 
	{0x5c58, &op_bcopy,	  8,   5,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy pc f db 
	{0x5d58, &op_bcopy,	  8,   5,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy pc f cb 
	{0x5e58, &op_bcopy,	  8,   5,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy pc f pi 
	{0x5f58, &op_bcopy,	  8,   5,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy pc f <literal> 
	{0x5068, &op_bcopy,	  8,   6,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy pc g a 
	{0x5168, &op_bcopy,	  8,   6,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy pc g b 
	{0x5268, &op_bcopy,	  8,   6,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy pc g c 
	{0x5368, &op_bcopy,	  8,   6,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy pc g d 
	{0x5468, &op_bcopy,	  8,   6,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy pc g e 
	{0x5568, &op_bcopy,	  8,   6,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy pc g f 
	{0x5668, &op_bcopy,	  8,   6,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy pc g g 
	{0x5768, &op_bcopy,	  8,   6,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy pc g h 
	{0x5868, &op_bcopy,	  8,   6,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy pc g pc 
	{0x5968, &op_bcopy,	  8,   6,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy pc g ra 
	{0x5a68, &op_bcopy,	  8,   6,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy pc g sb 
	{0x5b68, &op_bcopy,	  8,   6,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy pc g sp 
	{0x5c68, &op_bcopy,	  8,   6,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy pc g db 
	{0x5d68, &op_bcopy,	  8,   6,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy pc g cb 
	{0x5e68, &op_bcopy,	  8,   6,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy pc g pi 
	{0x5f68, &op_bcopy,	  8,   6,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy pc g <literal> 
	{0x5078, &op_bcopy,	  8,   7,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy pc h a 
	{0x5178, &op_bcopy,	  8,   7,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy pc h b 
	{0x5278, &op_bcopy,	  8,   7,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy pc h c 
	{0x5378, &op_bcopy,	  8,   7,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy pc h d 
	{0x5478, &op_bcopy,	  8,   7,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy pc h e 
	{0x5578, &op_bcopy,	  8,   7,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy pc h f 
	{0x5678, &op_bcopy,	  8,   7,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy pc h g 
	{0x5778, &op_bcopy,	  8,   7,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy pc h h 
	{0x5878, &op_bcopy,	  8,   7,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy pc h pc 
	{0x5978, &op_bcopy,	  8,   7,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy pc h ra 
	{0x5a78, &op_bcopy,	  8,   7,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy pc h sb 
	{0x5b78, &op_bcopy,	  8,   7,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy pc h sp 
	{0x5c78, &op_bcopy,	  8,   7,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy pc h db 
	{0x5d78, &op_bcopy,	  8,   7,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy pc h cb 
	{0x5e78, &op_bcopy,	  8,   7,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy pc h pi 
	{0x5f78, &op_bcopy,	  8,   7,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy pc h <literal> 
	{0x5088, &op_bcopy,	  8,   8,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy pc pc a 
	{0x5188, &op_bcopy,	  8,   8,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy pc pc b 
	{0x5288, &op_bcopy,	  8,   8,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy pc pc c 
	{0x5388, &op_bcopy,	  8,   8,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy pc pc d 
	{0x5488, &op_bcopy,	  8,   8,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy pc pc e 
	{0x5588, &op_bcopy,	  8,   8,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy pc pc f 
	{0x5688, &op_bcopy,	  8,   8,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy pc pc g 
	{0x5788, &op_bcopy,	  8,   8,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy pc pc h 
	{0x5888, &op_bcopy,	  8,   8,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy pc pc pc 
	{0x5988, &op_bcopy,	  8,   8,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy pc pc ra 
	{0x5a88, &op_bcopy,	  8,   8,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy pc pc sb 
	{0x5b88, &op_bcopy,	  8,   8,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy pc pc sp 
	{0x5c88, &op_bcopy,	  8,   8,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy pc pc db 
	{0x5d88, &op_bcopy,	  8,   8,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy pc pc cb 
	{0x5e88, &op_bcopy,	  8,   8,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy pc pc pi 
	{0x5f88, &op_bcopy,	  8,   8,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy pc pc <literal> 
	{0x5098, &op_bcopy,	  8,   9,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy pc ra a 
	{0x5198, &op_bcopy,	  8,   9,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy pc ra b 
	{0x5298, &op_bcopy,	  8,   9,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy pc ra c 
	{0x5398, &op_bcopy,	  8,   9,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy pc ra d 
	{0x5498, &op_bcopy,	  8,   9,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy pc ra e 
	{0x5598, &op_bcopy,	  8,   9,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy pc ra f 
	{0x5698, &op_bcopy,	  8,   9,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy pc ra g 
	{0x5798, &op_bcopy,	  8,   9,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy pc ra h 
	{0x5898, &op_bcopy,	  8,   9,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy pc ra pc 
	{0x5998, &op_bcopy,	  8,   9,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy pc ra ra 
	{0x5a98, &op_bcopy,	  8,   9,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy pc ra sb 
	{0x5b98, &op_bcopy,	  8,   9,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy pc ra sp 
	{0x5c98, &op_bcopy,	  8,   9,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy pc ra db 
	{0x5d98, &op_bcopy,	  8,   9,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy pc ra cb 
	{0x5e98, &op_bcopy,	  8,   9,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy pc ra pi 
	{0x5f98, &op_bcopy,	  8,   9,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy pc ra <literal> 
	{0x50a8, &op_bcopy,	  8,  10,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy pc sb a 
	{0x51a8, &op_bcopy,	  8,  10,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy pc sb b 
	{0x52a8, &op_bcopy,	  8,  10,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy pc sb c 
	{0x53a8, &op_bcopy,	  8,  10,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy pc sb d 
	{0x54a8, &op_bcopy,	  8,  10,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy pc sb e 
	{0x55a8, &op_bcopy,	  8,  10,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy pc sb f 
	{0x56a8, &op_bcopy,	  8,  10,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy pc sb g 
	{0x57a8, &op_bcopy,	  8,  10,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy pc sb h 
	{0x58a8, &op_bcopy,	  8,  10,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy pc sb pc 
	{0x59a8, &op_bcopy,	  8,  10,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy pc sb ra 
	{0x5aa8, &op_bcopy,	  8,  10,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy pc sb sb 
	{0x5ba8, &op_bcopy,	  8,  10,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy pc sb sp 
	{0x5ca8, &op_bcopy,	  8,  10,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy pc sb db 
	{0x5da8, &op_bcopy,	  8,  10,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy pc sb cb 
	{0x5ea8, &op_bcopy,	  8,  10,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy pc sb pi 
	{0x5fa8, &op_bcopy,	  8,  10,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy pc sb <literal> 
	{0x50b8, &op_bcopy,	  8,  11,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy pc sp a 
	{0x51b8, &op_bcopy,	  8,  11,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy pc sp b 
	{0x52b8, &op_bcopy,	  8,  11,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy pc sp c 
	{0x53b8, &op_bcopy,	  8,  11,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy pc sp d 
	{0x54b8, &op_bcopy,	  8,  11,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy pc sp e 
	{0x55b8, &op_bcopy,	  8,  11,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy pc sp f 
	{0x56b8, &op_bcopy,	  8,  11,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy pc sp g 
	{0x57b8, &op_bcopy,	  8,  11,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy pc sp h 
	{0x58b8, &op_bcopy,	  8,  11,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy pc sp pc 
	{0x59b8, &op_bcopy,	  8,  11,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy pc sp ra 
	{0x5ab8, &op_bcopy,	  8,  11,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy pc sp sb 
	{0x5bb8, &op_bcopy,	  8,  11,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy pc sp sp 
	{0x5cb8, &op_bcopy,	  8,  11,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy pc sp db 
	{0x5db8, &op_bcopy,	  8,  11,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy pc sp cb 
	{0x5eb8, &op_bcopy,	  8,  11,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy pc sp pi 
	{0x5fb8, &op_bcopy,	  8,  11,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy pc sp <literal> 
	{0x50c8, &op_bcopy,	  8,  12,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy pc db a 
	{0x51c8, &op_bcopy,	  8,  12,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy pc db b 
	{0x52c8, &op_bcopy,	  8,  12,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy pc db c 
	{0x53c8, &op_bcopy,	  8,  12,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy pc db d 
	{0x54c8, &op_bcopy,	  8,  12,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy pc db e 
	{0x55c8, &op_bcopy,	  8,  12,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy pc db f 
	{0x56c8, &op_bcopy,	  8,  12,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy pc db g 
	{0x57c8, &op_bcopy,	  8,  12,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy pc db h 
	{0x58c8, &op_bcopy,	  8,  12,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy pc db pc 
	{0x59c8, &op_bcopy,	  8,  12,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy pc db ra 
	{0x5ac8, &op_bcopy,	  8,  12,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy pc db sb 
	{0x5bc8, &op_bcopy,	  8,  12,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy pc db sp 
	{0x5cc8, &op_bcopy,	  8,  12,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy pc db db 
	{0x5dc8, &op_bcopy,	  8,  12,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy pc db cb 
	{0x5ec8, &op_bcopy,	  8,  12,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy pc db pi 
	{0x5fc8, &op_bcopy,	  8,  12,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy pc db <literal> 
	{0x50d8, &op_bcopy,	  8,  13,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy pc cb a 
	{0x51d8, &op_bcopy,	  8,  13,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy pc cb b 
	{0x52d8, &op_bcopy,	  8,  13,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy pc cb c 
	{0x53d8, &op_bcopy,	  8,  13,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy pc cb d 
	{0x54d8, &op_bcopy,	  8,  13,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy pc cb e 
	{0x55d8, &op_bcopy,	  8,  13,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy pc cb f 
	{0x56d8, &op_bcopy,	  8,  13,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy pc cb g 
	{0x57d8, &op_bcopy,	  8,  13,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy pc cb h 
	{0x58d8, &op_bcopy,	  8,  13,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy pc cb pc 
	{0x59d8, &op_bcopy,	  8,  13,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy pc cb ra 
	{0x5ad8, &op_bcopy,	  8,  13,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy pc cb sb 
	{0x5bd8, &op_bcopy,	  8,  13,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy pc cb sp 
	{0x5cd8, &op_bcopy,	  8,  13,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy pc cb db 
	{0x5dd8, &op_bcopy,	  8,  13,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy pc cb cb 
	{0x5ed8, &op_bcopy,	  8,  13,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy pc cb pi 
	{0x5fd8, &op_bcopy,	  8,  13,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy pc cb <literal> 
	{0x50e8, &op_bcopy,	  8,  14,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy pc pi a 
	{0x51e8, &op_bcopy,	  8,  14,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy pc pi b 
	{0x52e8, &op_bcopy,	  8,  14,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy pc pi c 
	{0x53e8, &op_bcopy,	  8,  14,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy pc pi d 
	{0x54e8, &op_bcopy,	  8,  14,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy pc pi e 
	{0x55e8, &op_bcopy,	  8,  14,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy pc pi f 
	{0x56e8, &op_bcopy,	  8,  14,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy pc pi g 
	{0x57e8, &op_bcopy,	  8,  14,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy pc pi h 
	{0x58e8, &op_bcopy,	  8,  14,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy pc pi pc 
	{0x59e8, &op_bcopy,	  8,  14,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy pc pi ra 
	{0x5ae8, &op_bcopy,	  8,  14,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy pc pi sb 
	{0x5be8, &op_bcopy,	  8,  14,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy pc pi sp 
	{0x5ce8, &op_bcopy,	  8,  14,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy pc pi db 
	{0x5de8, &op_bcopy,	  8,  14,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy pc pi cb 
	{0x5ee8, &op_bcopy,	  8,  14,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy pc pi pi 
	{0x5fe8, &op_bcopy,	  8,  14,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy pc pi <literal> 
	{0x50f8, &op_bcopy,	  8,  15,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy pc status a 
	{0x51f8, &op_bcopy,	  8,  15,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy pc status b 
	{0x52f8, &op_bcopy,	  8,  15,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy pc status c 
	{0x53f8, &op_bcopy,	  8,  15,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy pc status d 
	{0x54f8, &op_bcopy,	  8,  15,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy pc status e 
	{0x55f8, &op_bcopy,	  8,  15,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy pc status f 
	{0x56f8, &op_bcopy,	  8,  15,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy pc status g 
	{0x57f8, &op_bcopy,	  8,  15,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy pc status h 
	{0x58f8, &op_bcopy,	  8,  15,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy pc status pc 
	{0x59f8, &op_bcopy,	  8,  15,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy pc status ra 
	{0x5af8, &op_bcopy,	  8,  15,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy pc status sb 
	{0x5bf8, &op_bcopy,	  8,  15,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy pc status sp 
	{0x5cf8, &op_bcopy,	  8,  15,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy pc status db 
	{0x5df8, &op_bcopy,	  8,  15,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy pc status cb 
	{0x5ef8, &op_bcopy,	  8,  15,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy pc status pi 
	{0x5ff8, &op_bcopy,	  8,  15,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy pc status <literal> 
	{0x5009, &op_bcopy,	  9,   0,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy ra a a 
	{0x5109, &op_bcopy,	  9,   0,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy ra a b 
	{0x5209, &op_bcopy,	  9,   0,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy ra a c 
	{0x5309, &op_bcopy,	  9,   0,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy ra a d 
	{0x5409, &op_bcopy,	  9,   0,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy ra a e 
	{0x5509, &op_bcopy,	  9,   0,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy ra a f 
	{0x5609, &op_bcopy,	  9,   0,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy ra a g 
	{0x5709, &op_bcopy,	  9,   0,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy ra a h 
	{0x5809, &op_bcopy,	  9,   0,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy ra a pc 
	{0x5909, &op_bcopy,	  9,   0,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy ra a ra 
	{0x5a09, &op_bcopy,	  9,   0,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy ra a sb 
	{0x5b09, &op_bcopy,	  9,   0,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy ra a sp 
	{0x5c09, &op_bcopy,	  9,   0,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy ra a db 
	{0x5d09, &op_bcopy,	  9,   0,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy ra a cb 
	{0x5e09, &op_bcopy,	  9,   0,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy ra a pi 
	{0x5f09, &op_bcopy,	  9,   0,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy ra a <literal> 
	{0x5019, &op_bcopy,	  9,   1,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy ra b a 
	{0x5119, &op_bcopy,	  9,   1,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy ra b b 
	{0x5219, &op_bcopy,	  9,   1,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy ra b c 
	{0x5319, &op_bcopy,	  9,   1,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy ra b d 
	{0x5419, &op_bcopy,	  9,   1,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy ra b e 
	{0x5519, &op_bcopy,	  9,   1,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy ra b f 
	{0x5619, &op_bcopy,	  9,   1,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy ra b g 
	{0x5719, &op_bcopy,	  9,   1,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy ra b h 
	{0x5819, &op_bcopy,	  9,   1,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy ra b pc 
	{0x5919, &op_bcopy,	  9,   1,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy ra b ra 
	{0x5a19, &op_bcopy,	  9,   1,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy ra b sb 
	{0x5b19, &op_bcopy,	  9,   1,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy ra b sp 
	{0x5c19, &op_bcopy,	  9,   1,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy ra b db 
	{0x5d19, &op_bcopy,	  9,   1,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy ra b cb 
	{0x5e19, &op_bcopy,	  9,   1,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy ra b pi 
	{0x5f19, &op_bcopy,	  9,   1,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy ra b <literal> 
	{0x5029, &op_bcopy,	  9,   2,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy ra c a 
	{0x5129, &op_bcopy,	  9,   2,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy ra c b 
	{0x5229, &op_bcopy,	  9,   2,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy ra c c 
	{0x5329, &op_bcopy,	  9,   2,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy ra c d 
	{0x5429, &op_bcopy,	  9,   2,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy ra c e 
	{0x5529, &op_bcopy,	  9,   2,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy ra c f 
	{0x5629, &op_bcopy,	  9,   2,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy ra c g 
	{0x5729, &op_bcopy,	  9,   2,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy ra c h 
	{0x5829, &op_bcopy,	  9,   2,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy ra c pc 
	{0x5929, &op_bcopy,	  9,   2,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy ra c ra 
	{0x5a29, &op_bcopy,	  9,   2,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy ra c sb 
	{0x5b29, &op_bcopy,	  9,   2,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy ra c sp 
	{0x5c29, &op_bcopy,	  9,   2,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy ra c db 
	{0x5d29, &op_bcopy,	  9,   2,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy ra c cb 
	{0x5e29, &op_bcopy,	  9,   2,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy ra c pi 
	{0x5f29, &op_bcopy,	  9,   2,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy ra c <literal> 
	{0x5039, &op_bcopy,	  9,   3,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy ra d a 
	{0x5139, &op_bcopy,	  9,   3,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy ra d b 
	{0x5239, &op_bcopy,	  9,   3,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy ra d c 
	{0x5339, &op_bcopy,	  9,   3,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy ra d d 
	{0x5439, &op_bcopy,	  9,   3,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy ra d e 
	{0x5539, &op_bcopy,	  9,   3,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy ra d f 
	{0x5639, &op_bcopy,	  9,   3,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy ra d g 
	{0x5739, &op_bcopy,	  9,   3,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy ra d h 
	{0x5839, &op_bcopy,	  9,   3,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy ra d pc 
	{0x5939, &op_bcopy,	  9,   3,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy ra d ra 
	{0x5a39, &op_bcopy,	  9,   3,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy ra d sb 
	{0x5b39, &op_bcopy,	  9,   3,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy ra d sp 
	{0x5c39, &op_bcopy,	  9,   3,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy ra d db 
	{0x5d39, &op_bcopy,	  9,   3,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy ra d cb 
	{0x5e39, &op_bcopy,	  9,   3,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy ra d pi 
	{0x5f39, &op_bcopy,	  9,   3,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy ra d <literal> 
	{0x5049, &op_bcopy,	  9,   4,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy ra e a 
	{0x5149, &op_bcopy,	  9,   4,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy ra e b 
	{0x5249, &op_bcopy,	  9,   4,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy ra e c 
	{0x5349, &op_bcopy,	  9,   4,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy ra e d 
	{0x5449, &op_bcopy,	  9,   4,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy ra e e 
	{0x5549, &op_bcopy,	  9,   4,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy ra e f 
	{0x5649, &op_bcopy,	  9,   4,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy ra e g 
	{0x5749, &op_bcopy,	  9,   4,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy ra e h 
	{0x5849, &op_bcopy,	  9,   4,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy ra e pc 
	{0x5949, &op_bcopy,	  9,   4,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy ra e ra 
	{0x5a49, &op_bcopy,	  9,   4,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy ra e sb 
	{0x5b49, &op_bcopy,	  9,   4,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy ra e sp 
	{0x5c49, &op_bcopy,	  9,   4,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy ra e db 
	{0x5d49, &op_bcopy,	  9,   4,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy ra e cb 
	{0x5e49, &op_bcopy,	  9,   4,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy ra e pi 
	{0x5f49, &op_bcopy,	  9,   4,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy ra e <literal> 
	{0x5059, &op_bcopy,	  9,   5,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy ra f a 
	{0x5159, &op_bcopy,	  9,   5,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy ra f b 
	{0x5259, &op_bcopy,	  9,   5,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy ra f c 
	{0x5359, &op_bcopy,	  9,   5,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy ra f d 
	{0x5459, &op_bcopy,	  9,   5,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy ra f e 
	{0x5559, &op_bcopy,	  9,   5,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy ra f f 
	{0x5659, &op_bcopy,	  9,   5,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy ra f g 
	{0x5759, &op_bcopy,	  9,   5,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy ra f h 
	{0x5859, &op_bcopy,	  9,   5,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy ra f pc 
	{0x5959, &op_bcopy,	  9,   5,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy ra f ra 
	{0x5a59, &op_bcopy,	  9,   5,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy ra f sb 
	{0x5b59, &op_bcopy,	  9,   5,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy ra f sp 
	{0x5c59, &op_bcopy,	  9,   5,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy ra f db 
	{0x5d59, &op_bcopy,	  9,   5,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy ra f cb 
	{0x5e59, &op_bcopy,	  9,   5,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy ra f pi 
	{0x5f59, &op_bcopy,	  9,   5,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy ra f <literal> 
	{0x5069, &op_bcopy,	  9,   6,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy ra g a 
	{0x5169, &op_bcopy,	  9,   6,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy ra g b 
	{0x5269, &op_bcopy,	  9,   6,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy ra g c 
	{0x5369, &op_bcopy,	  9,   6,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy ra g d 
	{0x5469, &op_bcopy,	  9,   6,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy ra g e 
	{0x5569, &op_bcopy,	  9,   6,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy ra g f 
	{0x5669, &op_bcopy,	  9,   6,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy ra g g 
	{0x5769, &op_bcopy,	  9,   6,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy ra g h 
	{0x5869, &op_bcopy,	  9,   6,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy ra g pc 
	{0x5969, &op_bcopy,	  9,   6,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy ra g ra 
	{0x5a69, &op_bcopy,	  9,   6,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy ra g sb 
	{0x5b69, &op_bcopy,	  9,   6,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy ra g sp 
	{0x5c69, &op_bcopy,	  9,   6,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy ra g db 
	{0x5d69, &op_bcopy,	  9,   6,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy ra g cb 
	{0x5e69, &op_bcopy,	  9,   6,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy ra g pi 
	{0x5f69, &op_bcopy,	  9,   6,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy ra g <literal> 
	{0x5079, &op_bcopy,	  9,   7,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy ra h a 
	{0x5179, &op_bcopy,	  9,   7,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy ra h b 
	{0x5279, &op_bcopy,	  9,   7,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy ra h c 
	{0x5379, &op_bcopy,	  9,   7,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy ra h d 
	{0x5479, &op_bcopy,	  9,   7,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy ra h e 
	{0x5579, &op_bcopy,	  9,   7,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy ra h f 
	{0x5679, &op_bcopy,	  9,   7,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy ra h g 
	{0x5779, &op_bcopy,	  9,   7,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy ra h h 
	{0x5879, &op_bcopy,	  9,   7,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy ra h pc 
	{0x5979, &op_bcopy,	  9,   7,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy ra h ra 
	{0x5a79, &op_bcopy,	  9,   7,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy ra h sb 
	{0x5b79, &op_bcopy,	  9,   7,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy ra h sp 
	{0x5c79, &op_bcopy,	  9,   7,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy ra h db 
	{0x5d79, &op_bcopy,	  9,   7,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy ra h cb 
	{0x5e79, &op_bcopy,	  9,   7,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy ra h pi 
	{0x5f79, &op_bcopy,	  9,   7,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy ra h <literal> 
	{0x5089, &op_bcopy,	  9,   8,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy ra pc a 
	{0x5189, &op_bcopy,	  9,   8,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy ra pc b 
	{0x5289, &op_bcopy,	  9,   8,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy ra pc c 
	{0x5389, &op_bcopy,	  9,   8,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy ra pc d 
	{0x5489, &op_bcopy,	  9,   8,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy ra pc e 
	{0x5589, &op_bcopy,	  9,   8,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy ra pc f 
	{0x5689, &op_bcopy,	  9,   8,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy ra pc g 
	{0x5789, &op_bcopy,	  9,   8,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy ra pc h 
	{0x5889, &op_bcopy,	  9,   8,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy ra pc pc 
	{0x5989, &op_bcopy,	  9,   8,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy ra pc ra 
	{0x5a89, &op_bcopy,	  9,   8,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy ra pc sb 
	{0x5b89, &op_bcopy,	  9,   8,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy ra pc sp 
	{0x5c89, &op_bcopy,	  9,   8,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy ra pc db 
	{0x5d89, &op_bcopy,	  9,   8,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy ra pc cb 
	{0x5e89, &op_bcopy,	  9,   8,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy ra pc pi 
	{0x5f89, &op_bcopy,	  9,   8,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy ra pc <literal> 
	{0x5099, &op_bcopy,	  9,   9,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy ra ra a 
	{0x5199, &op_bcopy,	  9,   9,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy ra ra b 
	{0x5299, &op_bcopy,	  9,   9,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy ra ra c 
	{0x5399, &op_bcopy,	  9,   9,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy ra ra d 
	{0x5499, &op_bcopy,	  9,   9,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy ra ra e 
	{0x5599, &op_bcopy,	  9,   9,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy ra ra f 
	{0x5699, &op_bcopy,	  9,   9,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy ra ra g 
	{0x5799, &op_bcopy,	  9,   9,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy ra ra h 
	{0x5899, &op_bcopy,	  9,   9,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy ra ra pc 
	{0x5999, &op_bcopy,	  9,   9,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy ra ra ra 
	{0x5a99, &op_bcopy,	  9,   9,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy ra ra sb 
	{0x5b99, &op_bcopy,	  9,   9,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy ra ra sp 
	{0x5c99, &op_bcopy,	  9,   9,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy ra ra db 
	{0x5d99, &op_bcopy,	  9,   9,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy ra ra cb 
	{0x5e99, &op_bcopy,	  9,   9,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy ra ra pi 
	{0x5f99, &op_bcopy,	  9,   9,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy ra ra <literal> 
	{0x50a9, &op_bcopy,	  9,  10,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy ra sb a 
	{0x51a9, &op_bcopy,	  9,  10,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy ra sb b 
	{0x52a9, &op_bcopy,	  9,  10,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy ra sb c 
	{0x53a9, &op_bcopy,	  9,  10,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy ra sb d 
	{0x54a9, &op_bcopy,	  9,  10,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy ra sb e 
	{0x55a9, &op_bcopy,	  9,  10,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy ra sb f 
	{0x56a9, &op_bcopy,	  9,  10,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy ra sb g 
	{0x57a9, &op_bcopy,	  9,  10,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy ra sb h 
	{0x58a9, &op_bcopy,	  9,  10,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy ra sb pc 
	{0x59a9, &op_bcopy,	  9,  10,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy ra sb ra 
	{0x5aa9, &op_bcopy,	  9,  10,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy ra sb sb 
	{0x5ba9, &op_bcopy,	  9,  10,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy ra sb sp 
	{0x5ca9, &op_bcopy,	  9,  10,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy ra sb db 
	{0x5da9, &op_bcopy,	  9,  10,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy ra sb cb 
	{0x5ea9, &op_bcopy,	  9,  10,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy ra sb pi 
	{0x5fa9, &op_bcopy,	  9,  10,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy ra sb <literal> 
	{0x50b9, &op_bcopy,	  9,  11,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy ra sp a 
	{0x51b9, &op_bcopy,	  9,  11,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy ra sp b 
	{0x52b9, &op_bcopy,	  9,  11,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy ra sp c 
	{0x53b9, &op_bcopy,	  9,  11,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy ra sp d 
	{0x54b9, &op_bcopy,	  9,  11,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy ra sp e 
	{0x55b9, &op_bcopy,	  9,  11,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy ra sp f 
	{0x56b9, &op_bcopy,	  9,  11,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy ra sp g 
	{0x57b9, &op_bcopy,	  9,  11,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy ra sp h 
	{0x58b9, &op_bcopy,	  9,  11,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy ra sp pc 
	{0x59b9, &op_bcopy,	  9,  11,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy ra sp ra 
	{0x5ab9, &op_bcopy,	  9,  11,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy ra sp sb 
	{0x5bb9, &op_bcopy,	  9,  11,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy ra sp sp 
	{0x5cb9, &op_bcopy,	  9,  11,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy ra sp db 
	{0x5db9, &op_bcopy,	  9,  11,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy ra sp cb 
	{0x5eb9, &op_bcopy,	  9,  11,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy ra sp pi 
	{0x5fb9, &op_bcopy,	  9,  11,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy ra sp <literal> 
	{0x50c9, &op_bcopy,	  9,  12,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy ra db a 
	{0x51c9, &op_bcopy,	  9,  12,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy ra db b 
	{0x52c9, &op_bcopy,	  9,  12,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy ra db c 
	{0x53c9, &op_bcopy,	  9,  12,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy ra db d 
	{0x54c9, &op_bcopy,	  9,  12,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy ra db e 
	{0x55c9, &op_bcopy,	  9,  12,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy ra db f 
	{0x56c9, &op_bcopy,	  9,  12,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy ra db g 
	{0x57c9, &op_bcopy,	  9,  12,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy ra db h 
	{0x58c9, &op_bcopy,	  9,  12,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy ra db pc 
	{0x59c9, &op_bcopy,	  9,  12,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy ra db ra 
	{0x5ac9, &op_bcopy,	  9,  12,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy ra db sb 
	{0x5bc9, &op_bcopy,	  9,  12,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy ra db sp 
	{0x5cc9, &op_bcopy,	  9,  12,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy ra db db 
	{0x5dc9, &op_bcopy,	  9,  12,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy ra db cb 
	{0x5ec9, &op_bcopy,	  9,  12,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy ra db pi 
	{0x5fc9, &op_bcopy,	  9,  12,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy ra db <literal> 
	{0x50d9, &op_bcopy,	  9,  13,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy ra cb a 
	{0x51d9, &op_bcopy,	  9,  13,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy ra cb b 
	{0x52d9, &op_bcopy,	  9,  13,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy ra cb c 
	{0x53d9, &op_bcopy,	  9,  13,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy ra cb d 
	{0x54d9, &op_bcopy,	  9,  13,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy ra cb e 
	{0x55d9, &op_bcopy,	  9,  13,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy ra cb f 
	{0x56d9, &op_bcopy,	  9,  13,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy ra cb g 
	{0x57d9, &op_bcopy,	  9,  13,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy ra cb h 
	{0x58d9, &op_bcopy,	  9,  13,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy ra cb pc 
	{0x59d9, &op_bcopy,	  9,  13,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy ra cb ra 
	{0x5ad9, &op_bcopy,	  9,  13,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy ra cb sb 
	{0x5bd9, &op_bcopy,	  9,  13,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy ra cb sp 
	{0x5cd9, &op_bcopy,	  9,  13,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy ra cb db 
	{0x5dd9, &op_bcopy,	  9,  13,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy ra cb cb 
	{0x5ed9, &op_bcopy,	  9,  13,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy ra cb pi 
	{0x5fd9, &op_bcopy,	  9,  13,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy ra cb <literal> 
	{0x50e9, &op_bcopy,	  9,  14,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy ra pi a 
	{0x51e9, &op_bcopy,	  9,  14,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy ra pi b 
	{0x52e9, &op_bcopy,	  9,  14,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy ra pi c 
	{0x53e9, &op_bcopy,	  9,  14,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy ra pi d 
	{0x54e9, &op_bcopy,	  9,  14,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy ra pi e 
	{0x55e9, &op_bcopy,	  9,  14,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy ra pi f 
	{0x56e9, &op_bcopy,	  9,  14,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy ra pi g 
	{0x57e9, &op_bcopy,	  9,  14,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy ra pi h 
	{0x58e9, &op_bcopy,	  9,  14,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy ra pi pc 
	{0x59e9, &op_bcopy,	  9,  14,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy ra pi ra 
	{0x5ae9, &op_bcopy,	  9,  14,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy ra pi sb 
	{0x5be9, &op_bcopy,	  9,  14,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy ra pi sp 
	{0x5ce9, &op_bcopy,	  9,  14,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy ra pi db 
	{0x5de9, &op_bcopy,	  9,  14,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy ra pi cb 
	{0x5ee9, &op_bcopy,	  9,  14,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy ra pi pi 
	{0x5fe9, &op_bcopy,	  9,  14,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy ra pi <literal> 
	{0x50f9, &op_bcopy,	  9,  15,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy ra status a 
	{0x51f9, &op_bcopy,	  9,  15,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy ra status b 
	{0x52f9, &op_bcopy,	  9,  15,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy ra status c 
	{0x53f9, &op_bcopy,	  9,  15,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy ra status d 
	{0x54f9, &op_bcopy,	  9,  15,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy ra status e 
	{0x55f9, &op_bcopy,	  9,  15,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy ra status f 
	{0x56f9, &op_bcopy,	  9,  15,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy ra status g 
	{0x57f9, &op_bcopy,	  9,  15,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy ra status h 
	{0x58f9, &op_bcopy,	  9,  15,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy ra status pc 
	{0x59f9, &op_bcopy,	  9,  15,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy ra status ra 
	{0x5af9, &op_bcopy,	  9,  15,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy ra status sb 
	{0x5bf9, &op_bcopy,	  9,  15,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy ra status sp 
	{0x5cf9, &op_bcopy,	  9,  15,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy ra status db 
	{0x5df9, &op_bcopy,	  9,  15,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy ra status cb 
	{0x5ef9, &op_bcopy,	  9,  15,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy ra status pi 
	{0x5ff9, &op_bcopy,	  9,  15,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy ra status <literal> 
	{0x500a, &op_bcopy,	 10,   0,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy sb a a 
	{0x510a, &op_bcopy,	 10,   0,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy sb a b 
	{0x520a, &op_bcopy,	 10,   0,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy sb a c 
	{0x530a, &op_bcopy,	 10,   0,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy sb a d 
	{0x540a, &op_bcopy,	 10,   0,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy sb a e 
	{0x550a, &op_bcopy,	 10,   0,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy sb a f 
	{0x560a, &op_bcopy,	 10,   0,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy sb a g 
	{0x570a, &op_bcopy,	 10,   0,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy sb a h 
	{0x580a, &op_bcopy,	 10,   0,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy sb a pc 
	{0x590a, &op_bcopy,	 10,   0,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy sb a ra 
	{0x5a0a, &op_bcopy,	 10,   0,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy sb a sb 
	{0x5b0a, &op_bcopy,	 10,   0,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy sb a sp 
	{0x5c0a, &op_bcopy,	 10,   0,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy sb a db 
	{0x5d0a, &op_bcopy,	 10,   0,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy sb a cb 
	{0x5e0a, &op_bcopy,	 10,   0,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy sb a pi 
	{0x5f0a, &op_bcopy,	 10,   0,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy sb a <literal> 
	{0x501a, &op_bcopy,	 10,   1,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy sb b a 
	{0x511a, &op_bcopy,	 10,   1,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy sb b b 
	{0x521a, &op_bcopy,	 10,   1,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy sb b c 
	{0x531a, &op_bcopy,	 10,   1,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy sb b d 
	{0x541a, &op_bcopy,	 10,   1,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy sb b e 
	{0x551a, &op_bcopy,	 10,   1,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy sb b f 
	{0x561a, &op_bcopy,	 10,   1,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy sb b g 
	{0x571a, &op_bcopy,	 10,   1,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy sb b h 
	{0x581a, &op_bcopy,	 10,   1,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy sb b pc 
	{0x591a, &op_bcopy,	 10,   1,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy sb b ra 
	{0x5a1a, &op_bcopy,	 10,   1,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy sb b sb 
	{0x5b1a, &op_bcopy,	 10,   1,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy sb b sp 
	{0x5c1a, &op_bcopy,	 10,   1,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy sb b db 
	{0x5d1a, &op_bcopy,	 10,   1,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy sb b cb 
	{0x5e1a, &op_bcopy,	 10,   1,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy sb b pi 
	{0x5f1a, &op_bcopy,	 10,   1,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy sb b <literal> 
	{0x502a, &op_bcopy,	 10,   2,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy sb c a 
	{0x512a, &op_bcopy,	 10,   2,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy sb c b 
	{0x522a, &op_bcopy,	 10,   2,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy sb c c 
	{0x532a, &op_bcopy,	 10,   2,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy sb c d 
	{0x542a, &op_bcopy,	 10,   2,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy sb c e 
	{0x552a, &op_bcopy,	 10,   2,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy sb c f 
	{0x562a, &op_bcopy,	 10,   2,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy sb c g 
	{0x572a, &op_bcopy,	 10,   2,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy sb c h 
	{0x582a, &op_bcopy,	 10,   2,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy sb c pc 
	{0x592a, &op_bcopy,	 10,   2,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy sb c ra 
	{0x5a2a, &op_bcopy,	 10,   2,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy sb c sb 
	{0x5b2a, &op_bcopy,	 10,   2,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy sb c sp 
	{0x5c2a, &op_bcopy,	 10,   2,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy sb c db 
	{0x5d2a, &op_bcopy,	 10,   2,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy sb c cb 
	{0x5e2a, &op_bcopy,	 10,   2,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy sb c pi 
	{0x5f2a, &op_bcopy,	 10,   2,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy sb c <literal> 
	{0x503a, &op_bcopy,	 10,   3,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy sb d a 
	{0x513a, &op_bcopy,	 10,   3,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy sb d b 
	{0x523a, &op_bcopy,	 10,   3,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy sb d c 
	{0x533a, &op_bcopy,	 10,   3,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy sb d d 
	{0x543a, &op_bcopy,	 10,   3,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy sb d e 
	{0x553a, &op_bcopy,	 10,   3,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy sb d f 
	{0x563a, &op_bcopy,	 10,   3,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy sb d g 
	{0x573a, &op_bcopy,	 10,   3,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy sb d h 
	{0x583a, &op_bcopy,	 10,   3,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy sb d pc 
	{0x593a, &op_bcopy,	 10,   3,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy sb d ra 
	{0x5a3a, &op_bcopy,	 10,   3,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy sb d sb 
	{0x5b3a, &op_bcopy,	 10,   3,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy sb d sp 
	{0x5c3a, &op_bcopy,	 10,   3,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy sb d db 
	{0x5d3a, &op_bcopy,	 10,   3,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy sb d cb 
	{0x5e3a, &op_bcopy,	 10,   3,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy sb d pi 
	{0x5f3a, &op_bcopy,	 10,   3,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy sb d <literal> 
	{0x504a, &op_bcopy,	 10,   4,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy sb e a 
	{0x514a, &op_bcopy,	 10,   4,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy sb e b 
	{0x524a, &op_bcopy,	 10,   4,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy sb e c 
	{0x534a, &op_bcopy,	 10,   4,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy sb e d 
	{0x544a, &op_bcopy,	 10,   4,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy sb e e 
	{0x554a, &op_bcopy,	 10,   4,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy sb e f 
	{0x564a, &op_bcopy,	 10,   4,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy sb e g 
	{0x574a, &op_bcopy,	 10,   4,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy sb e h 
	{0x584a, &op_bcopy,	 10,   4,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy sb e pc 
	{0x594a, &op_bcopy,	 10,   4,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy sb e ra 
	{0x5a4a, &op_bcopy,	 10,   4,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy sb e sb 
	{0x5b4a, &op_bcopy,	 10,   4,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy sb e sp 
	{0x5c4a, &op_bcopy,	 10,   4,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy sb e db 
	{0x5d4a, &op_bcopy,	 10,   4,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy sb e cb 
	{0x5e4a, &op_bcopy,	 10,   4,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy sb e pi 
	{0x5f4a, &op_bcopy,	 10,   4,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy sb e <literal> 
	{0x505a, &op_bcopy,	 10,   5,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy sb f a 
	{0x515a, &op_bcopy,	 10,   5,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy sb f b 
	{0x525a, &op_bcopy,	 10,   5,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy sb f c 
	{0x535a, &op_bcopy,	 10,   5,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy sb f d 
	{0x545a, &op_bcopy,	 10,   5,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy sb f e 
	{0x555a, &op_bcopy,	 10,   5,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy sb f f 
	{0x565a, &op_bcopy,	 10,   5,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy sb f g 
	{0x575a, &op_bcopy,	 10,   5,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy sb f h 
	{0x585a, &op_bcopy,	 10,   5,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy sb f pc 
	{0x595a, &op_bcopy,	 10,   5,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy sb f ra 
	{0x5a5a, &op_bcopy,	 10,   5,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy sb f sb 
	{0x5b5a, &op_bcopy,	 10,   5,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy sb f sp 
	{0x5c5a, &op_bcopy,	 10,   5,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy sb f db 
	{0x5d5a, &op_bcopy,	 10,   5,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy sb f cb 
	{0x5e5a, &op_bcopy,	 10,   5,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy sb f pi 
	{0x5f5a, &op_bcopy,	 10,   5,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy sb f <literal> 
	{0x506a, &op_bcopy,	 10,   6,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy sb g a 
	{0x516a, &op_bcopy,	 10,   6,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy sb g b 
	{0x526a, &op_bcopy,	 10,   6,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy sb g c 
	{0x536a, &op_bcopy,	 10,   6,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy sb g d 
	{0x546a, &op_bcopy,	 10,   6,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy sb g e 
	{0x556a, &op_bcopy,	 10,   6,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy sb g f 
	{0x566a, &op_bcopy,	 10,   6,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy sb g g 
	{0x576a, &op_bcopy,	 10,   6,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy sb g h 
	{0x586a, &op_bcopy,	 10,   6,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy sb g pc 
	{0x596a, &op_bcopy,	 10,   6,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy sb g ra 
	{0x5a6a, &op_bcopy,	 10,   6,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy sb g sb 
	{0x5b6a, &op_bcopy,	 10,   6,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy sb g sp 
	{0x5c6a, &op_bcopy,	 10,   6,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy sb g db 
	{0x5d6a, &op_bcopy,	 10,   6,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy sb g cb 
	{0x5e6a, &op_bcopy,	 10,   6,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy sb g pi 
	{0x5f6a, &op_bcopy,	 10,   6,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy sb g <literal> 
	{0x507a, &op_bcopy,	 10,   7,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy sb h a 
	{0x517a, &op_bcopy,	 10,   7,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy sb h b 
	{0x527a, &op_bcopy,	 10,   7,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy sb h c 
	{0x537a, &op_bcopy,	 10,   7,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy sb h d 
	{0x547a, &op_bcopy,	 10,   7,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy sb h e 
	{0x557a, &op_bcopy,	 10,   7,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy sb h f 
	{0x567a, &op_bcopy,	 10,   7,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy sb h g 
	{0x577a, &op_bcopy,	 10,   7,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy sb h h 
	{0x587a, &op_bcopy,	 10,   7,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy sb h pc 
	{0x597a, &op_bcopy,	 10,   7,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy sb h ra 
	{0x5a7a, &op_bcopy,	 10,   7,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy sb h sb 
	{0x5b7a, &op_bcopy,	 10,   7,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy sb h sp 
	{0x5c7a, &op_bcopy,	 10,   7,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy sb h db 
	{0x5d7a, &op_bcopy,	 10,   7,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy sb h cb 
	{0x5e7a, &op_bcopy,	 10,   7,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy sb h pi 
	{0x5f7a, &op_bcopy,	 10,   7,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy sb h <literal> 
	{0x508a, &op_bcopy,	 10,   8,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy sb pc a 
	{0x518a, &op_bcopy,	 10,   8,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy sb pc b 
	{0x528a, &op_bcopy,	 10,   8,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy sb pc c 
	{0x538a, &op_bcopy,	 10,   8,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy sb pc d 
	{0x548a, &op_bcopy,	 10,   8,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy sb pc e 
	{0x558a, &op_bcopy,	 10,   8,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy sb pc f 
	{0x568a, &op_bcopy,	 10,   8,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy sb pc g 
	{0x578a, &op_bcopy,	 10,   8,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy sb pc h 
	{0x588a, &op_bcopy,	 10,   8,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy sb pc pc 
	{0x598a, &op_bcopy,	 10,   8,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy sb pc ra 
	{0x5a8a, &op_bcopy,	 10,   8,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy sb pc sb 
	{0x5b8a, &op_bcopy,	 10,   8,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy sb pc sp 
	{0x5c8a, &op_bcopy,	 10,   8,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy sb pc db 
	{0x5d8a, &op_bcopy,	 10,   8,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy sb pc cb 
	{0x5e8a, &op_bcopy,	 10,   8,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy sb pc pi 
	{0x5f8a, &op_bcopy,	 10,   8,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy sb pc <literal> 
	{0x509a, &op_bcopy,	 10,   9,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy sb ra a 
	{0x519a, &op_bcopy,	 10,   9,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy sb ra b 
	{0x529a, &op_bcopy,	 10,   9,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy sb ra c 
	{0x539a, &op_bcopy,	 10,   9,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy sb ra d 
	{0x549a, &op_bcopy,	 10,   9,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy sb ra e 
	{0x559a, &op_bcopy,	 10,   9,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy sb ra f 
	{0x569a, &op_bcopy,	 10,   9,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy sb ra g 
	{0x579a, &op_bcopy,	 10,   9,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy sb ra h 
	{0x589a, &op_bcopy,	 10,   9,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy sb ra pc 
	{0x599a, &op_bcopy,	 10,   9,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy sb ra ra 
	{0x5a9a, &op_bcopy,	 10,   9,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy sb ra sb 
	{0x5b9a, &op_bcopy,	 10,   9,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy sb ra sp 
	{0x5c9a, &op_bcopy,	 10,   9,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy sb ra db 
	{0x5d9a, &op_bcopy,	 10,   9,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy sb ra cb 
	{0x5e9a, &op_bcopy,	 10,   9,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy sb ra pi 
	{0x5f9a, &op_bcopy,	 10,   9,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy sb ra <literal> 
	{0x50aa, &op_bcopy,	 10,  10,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy sb sb a 
	{0x51aa, &op_bcopy,	 10,  10,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy sb sb b 
	{0x52aa, &op_bcopy,	 10,  10,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy sb sb c 
	{0x53aa, &op_bcopy,	 10,  10,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy sb sb d 
	{0x54aa, &op_bcopy,	 10,  10,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy sb sb e 
	{0x55aa, &op_bcopy,	 10,  10,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy sb sb f 
	{0x56aa, &op_bcopy,	 10,  10,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy sb sb g 
	{0x57aa, &op_bcopy,	 10,  10,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy sb sb h 
	{0x58aa, &op_bcopy,	 10,  10,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy sb sb pc 
	{0x59aa, &op_bcopy,	 10,  10,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy sb sb ra 
	{0x5aaa, &op_bcopy,	 10,  10,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy sb sb sb 
	{0x5baa, &op_bcopy,	 10,  10,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy sb sb sp 
	{0x5caa, &op_bcopy,	 10,  10,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy sb sb db 
	{0x5daa, &op_bcopy,	 10,  10,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy sb sb cb 
	{0x5eaa, &op_bcopy,	 10,  10,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy sb sb pi 
	{0x5faa, &op_bcopy,	 10,  10,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy sb sb <literal> 
	{0x50ba, &op_bcopy,	 10,  11,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy sb sp a 
	{0x51ba, &op_bcopy,	 10,  11,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy sb sp b 
	{0x52ba, &op_bcopy,	 10,  11,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy sb sp c 
	{0x53ba, &op_bcopy,	 10,  11,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy sb sp d 
	{0x54ba, &op_bcopy,	 10,  11,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy sb sp e 
	{0x55ba, &op_bcopy,	 10,  11,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy sb sp f 
	{0x56ba, &op_bcopy,	 10,  11,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy sb sp g 
	{0x57ba, &op_bcopy,	 10,  11,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy sb sp h 
	{0x58ba, &op_bcopy,	 10,  11,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy sb sp pc 
	{0x59ba, &op_bcopy,	 10,  11,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy sb sp ra 
	{0x5aba, &op_bcopy,	 10,  11,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy sb sp sb 
	{0x5bba, &op_bcopy,	 10,  11,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy sb sp sp 
	{0x5cba, &op_bcopy,	 10,  11,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy sb sp db 
	{0x5dba, &op_bcopy,	 10,  11,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy sb sp cb 
	{0x5eba, &op_bcopy,	 10,  11,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy sb sp pi 
	{0x5fba, &op_bcopy,	 10,  11,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy sb sp <literal> 
	{0x50ca, &op_bcopy,	 10,  12,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy sb db a 
	{0x51ca, &op_bcopy,	 10,  12,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy sb db b 
	{0x52ca, &op_bcopy,	 10,  12,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy sb db c 
	{0x53ca, &op_bcopy,	 10,  12,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy sb db d 
	{0x54ca, &op_bcopy,	 10,  12,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy sb db e 
	{0x55ca, &op_bcopy,	 10,  12,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy sb db f 
	{0x56ca, &op_bcopy,	 10,  12,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy sb db g 
	{0x57ca, &op_bcopy,	 10,  12,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy sb db h 
	{0x58ca, &op_bcopy,	 10,  12,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy sb db pc 
	{0x59ca, &op_bcopy,	 10,  12,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy sb db ra 
	{0x5aca, &op_bcopy,	 10,  12,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy sb db sb 
	{0x5bca, &op_bcopy,	 10,  12,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy sb db sp 
	{0x5cca, &op_bcopy,	 10,  12,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy sb db db 
	{0x5dca, &op_bcopy,	 10,  12,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy sb db cb 
	{0x5eca, &op_bcopy,	 10,  12,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy sb db pi 
	{0x5fca, &op_bcopy,	 10,  12,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy sb db <literal> 
	{0x50da, &op_bcopy,	 10,  13,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy sb cb a 
	{0x51da, &op_bcopy,	 10,  13,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy sb cb b 
	{0x52da, &op_bcopy,	 10,  13,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy sb cb c 
	{0x53da, &op_bcopy,	 10,  13,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy sb cb d 
	{0x54da, &op_bcopy,	 10,  13,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy sb cb e 
	{0x55da, &op_bcopy,	 10,  13,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy sb cb f 
	{0x56da, &op_bcopy,	 10,  13,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy sb cb g 
	{0x57da, &op_bcopy,	 10,  13,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy sb cb h 
	{0x58da, &op_bcopy,	 10,  13,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy sb cb pc 
	{0x59da, &op_bcopy,	 10,  13,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy sb cb ra 
	{0x5ada, &op_bcopy,	 10,  13,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy sb cb sb 
	{0x5bda, &op_bcopy,	 10,  13,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy sb cb sp 
	{0x5cda, &op_bcopy,	 10,  13,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy sb cb db 
	{0x5dda, &op_bcopy,	 10,  13,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy sb cb cb 
	{0x5eda, &op_bcopy,	 10,  13,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy sb cb pi 
	{0x5fda, &op_bcopy,	 10,  13,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy sb cb <literal> 
	{0x50ea, &op_bcopy,	 10,  14,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy sb pi a 
	{0x51ea, &op_bcopy,	 10,  14,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy sb pi b 
	{0x52ea, &op_bcopy,	 10,  14,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy sb pi c 
	{0x53ea, &op_bcopy,	 10,  14,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy sb pi d 
	{0x54ea, &op_bcopy,	 10,  14,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy sb pi e 
	{0x55ea, &op_bcopy,	 10,  14,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy sb pi f 
	{0x56ea, &op_bcopy,	 10,  14,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy sb pi g 
	{0x57ea, &op_bcopy,	 10,  14,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy sb pi h 
	{0x58ea, &op_bcopy,	 10,  14,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy sb pi pc 
	{0x59ea, &op_bcopy,	 10,  14,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy sb pi ra 
	{0x5aea, &op_bcopy,	 10,  14,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy sb pi sb 
	{0x5bea, &op_bcopy,	 10,  14,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy sb pi sp 
	{0x5cea, &op_bcopy,	 10,  14,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy sb pi db 
	{0x5dea, &op_bcopy,	 10,  14,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy sb pi cb 
	{0x5eea, &op_bcopy,	 10,  14,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy sb pi pi 
	{0x5fea, &op_bcopy,	 10,  14,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy sb pi <literal> 
	{0x50fa, &op_bcopy,	 10,  15,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy sb status a 
	{0x51fa, &op_bcopy,	 10,  15,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy sb status b 
	{0x52fa, &op_bcopy,	 10,  15,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy sb status c 
	{0x53fa, &op_bcopy,	 10,  15,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy sb status d 
	{0x54fa, &op_bcopy,	 10,  15,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy sb status e 
	{0x55fa, &op_bcopy,	 10,  15,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy sb status f 
	{0x56fa, &op_bcopy,	 10,  15,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy sb status g 
	{0x57fa, &op_bcopy,	 10,  15,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy sb status h 
	{0x58fa, &op_bcopy,	 10,  15,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy sb status pc 
	{0x59fa, &op_bcopy,	 10,  15,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy sb status ra 
	{0x5afa, &op_bcopy,	 10,  15,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy sb status sb 
	{0x5bfa, &op_bcopy,	 10,  15,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy sb status sp 
	{0x5cfa, &op_bcopy,	 10,  15,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy sb status db 
	{0x5dfa, &op_bcopy,	 10,  15,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy sb status cb 
	{0x5efa, &op_bcopy,	 10,  15,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy sb status pi 
	{0x5ffa, &op_bcopy,	 10,  15,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy sb status <literal> 
	{0x500b, &op_bcopy,	 11,   0,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy sp a a 
	{0x510b, &op_bcopy,	 11,   0,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy sp a b 
	{0x520b, &op_bcopy,	 11,   0,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy sp a c 
	{0x530b, &op_bcopy,	 11,   0,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy sp a d 
	{0x540b, &op_bcopy,	 11,   0,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy sp a e 
	{0x550b, &op_bcopy,	 11,   0,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy sp a f 
	{0x560b, &op_bcopy,	 11,   0,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy sp a g 
	{0x570b, &op_bcopy,	 11,   0,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy sp a h 
	{0x580b, &op_bcopy,	 11,   0,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy sp a pc 
	{0x590b, &op_bcopy,	 11,   0,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy sp a ra 
	{0x5a0b, &op_bcopy,	 11,   0,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy sp a sb 
	{0x5b0b, &op_bcopy,	 11,   0,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy sp a sp 
	{0x5c0b, &op_bcopy,	 11,   0,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy sp a db 
	{0x5d0b, &op_bcopy,	 11,   0,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy sp a cb 
	{0x5e0b, &op_bcopy,	 11,   0,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy sp a pi 
	{0x5f0b, &op_bcopy,	 11,   0,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy sp a <literal> 
	{0x501b, &op_bcopy,	 11,   1,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy sp b a 
	{0x511b, &op_bcopy,	 11,   1,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy sp b b 
	{0x521b, &op_bcopy,	 11,   1,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy sp b c 
	{0x531b, &op_bcopy,	 11,   1,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy sp b d 
	{0x541b, &op_bcopy,	 11,   1,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy sp b e 
	{0x551b, &op_bcopy,	 11,   1,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy sp b f 
	{0x561b, &op_bcopy,	 11,   1,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy sp b g 
	{0x571b, &op_bcopy,	 11,   1,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy sp b h 
	{0x581b, &op_bcopy,	 11,   1,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy sp b pc 
	{0x591b, &op_bcopy,	 11,   1,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy sp b ra 
	{0x5a1b, &op_bcopy,	 11,   1,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy sp b sb 
	{0x5b1b, &op_bcopy,	 11,   1,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy sp b sp 
	{0x5c1b, &op_bcopy,	 11,   1,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy sp b db 
	{0x5d1b, &op_bcopy,	 11,   1,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy sp b cb 
	{0x5e1b, &op_bcopy,	 11,   1,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy sp b pi 
	{0x5f1b, &op_bcopy,	 11,   1,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy sp b <literal> 
	{0x502b, &op_bcopy,	 11,   2,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy sp c a 
	{0x512b, &op_bcopy,	 11,   2,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy sp c b 
	{0x522b, &op_bcopy,	 11,   2,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy sp c c 
	{0x532b, &op_bcopy,	 11,   2,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy sp c d 
	{0x542b, &op_bcopy,	 11,   2,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy sp c e 
	{0x552b, &op_bcopy,	 11,   2,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy sp c f 
	{0x562b, &op_bcopy,	 11,   2,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy sp c g 
	{0x572b, &op_bcopy,	 11,   2,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy sp c h 
	{0x582b, &op_bcopy,	 11,   2,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy sp c pc 
	{0x592b, &op_bcopy,	 11,   2,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy sp c ra 
	{0x5a2b, &op_bcopy,	 11,   2,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy sp c sb 
	{0x5b2b, &op_bcopy,	 11,   2,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy sp c sp 
	{0x5c2b, &op_bcopy,	 11,   2,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy sp c db 
	{0x5d2b, &op_bcopy,	 11,   2,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy sp c cb 
	{0x5e2b, &op_bcopy,	 11,   2,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy sp c pi 
	{0x5f2b, &op_bcopy,	 11,   2,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy sp c <literal> 
	{0x503b, &op_bcopy,	 11,   3,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy sp d a 
	{0x513b, &op_bcopy,	 11,   3,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy sp d b 
	{0x523b, &op_bcopy,	 11,   3,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy sp d c 
	{0x533b, &op_bcopy,	 11,   3,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy sp d d 
	{0x543b, &op_bcopy,	 11,   3,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy sp d e 
	{0x553b, &op_bcopy,	 11,   3,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy sp d f 
	{0x563b, &op_bcopy,	 11,   3,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy sp d g 
	{0x573b, &op_bcopy,	 11,   3,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy sp d h 
	{0x583b, &op_bcopy,	 11,   3,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy sp d pc 
	{0x593b, &op_bcopy,	 11,   3,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy sp d ra 
	{0x5a3b, &op_bcopy,	 11,   3,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy sp d sb 
	{0x5b3b, &op_bcopy,	 11,   3,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy sp d sp 
	{0x5c3b, &op_bcopy,	 11,   3,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy sp d db 
	{0x5d3b, &op_bcopy,	 11,   3,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy sp d cb 
	{0x5e3b, &op_bcopy,	 11,   3,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy sp d pi 
	{0x5f3b, &op_bcopy,	 11,   3,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy sp d <literal> 
	{0x504b, &op_bcopy,	 11,   4,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy sp e a 
	{0x514b, &op_bcopy,	 11,   4,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy sp e b 
	{0x524b, &op_bcopy,	 11,   4,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy sp e c 
	{0x534b, &op_bcopy,	 11,   4,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy sp e d 
	{0x544b, &op_bcopy,	 11,   4,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy sp e e 
	{0x554b, &op_bcopy,	 11,   4,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy sp e f 
	{0x564b, &op_bcopy,	 11,   4,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy sp e g 
	{0x574b, &op_bcopy,	 11,   4,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy sp e h 
	{0x584b, &op_bcopy,	 11,   4,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy sp e pc 
	{0x594b, &op_bcopy,	 11,   4,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy sp e ra 
	{0x5a4b, &op_bcopy,	 11,   4,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy sp e sb 
	{0x5b4b, &op_bcopy,	 11,   4,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy sp e sp 
	{0x5c4b, &op_bcopy,	 11,   4,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy sp e db 
	{0x5d4b, &op_bcopy,	 11,   4,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy sp e cb 
	{0x5e4b, &op_bcopy,	 11,   4,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy sp e pi 
	{0x5f4b, &op_bcopy,	 11,   4,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy sp e <literal> 
	{0x505b, &op_bcopy,	 11,   5,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy sp f a 
	{0x515b, &op_bcopy,	 11,   5,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy sp f b 
	{0x525b, &op_bcopy,	 11,   5,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy sp f c 
	{0x535b, &op_bcopy,	 11,   5,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy sp f d 
	{0x545b, &op_bcopy,	 11,   5,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy sp f e 
	{0x555b, &op_bcopy,	 11,   5,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy sp f f 
	{0x565b, &op_bcopy,	 11,   5,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy sp f g 
	{0x575b, &op_bcopy,	 11,   5,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy sp f h 
	{0x585b, &op_bcopy,	 11,   5,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy sp f pc 
	{0x595b, &op_bcopy,	 11,   5,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy sp f ra 
	{0x5a5b, &op_bcopy,	 11,   5,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy sp f sb 
	{0x5b5b, &op_bcopy,	 11,   5,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy sp f sp 
	{0x5c5b, &op_bcopy,	 11,   5,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy sp f db 
	{0x5d5b, &op_bcopy,	 11,   5,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy sp f cb 
	{0x5e5b, &op_bcopy,	 11,   5,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy sp f pi 
	{0x5f5b, &op_bcopy,	 11,   5,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy sp f <literal> 
	{0x506b, &op_bcopy,	 11,   6,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy sp g a 
	{0x516b, &op_bcopy,	 11,   6,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy sp g b 
	{0x526b, &op_bcopy,	 11,   6,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy sp g c 
	{0x536b, &op_bcopy,	 11,   6,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy sp g d 
	{0x546b, &op_bcopy,	 11,   6,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy sp g e 
	{0x556b, &op_bcopy,	 11,   6,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy sp g f 
	{0x566b, &op_bcopy,	 11,   6,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy sp g g 
	{0x576b, &op_bcopy,	 11,   6,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy sp g h 
	{0x586b, &op_bcopy,	 11,   6,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy sp g pc 
	{0x596b, &op_bcopy,	 11,   6,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy sp g ra 
	{0x5a6b, &op_bcopy,	 11,   6,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy sp g sb 
	{0x5b6b, &op_bcopy,	 11,   6,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy sp g sp 
	{0x5c6b, &op_bcopy,	 11,   6,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy sp g db 
	{0x5d6b, &op_bcopy,	 11,   6,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy sp g cb 
	{0x5e6b, &op_bcopy,	 11,   6,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy sp g pi 
	{0x5f6b, &op_bcopy,	 11,   6,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy sp g <literal> 
	{0x507b, &op_bcopy,	 11,   7,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy sp h a 
	{0x517b, &op_bcopy,	 11,   7,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy sp h b 
	{0x527b, &op_bcopy,	 11,   7,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy sp h c 
	{0x537b, &op_bcopy,	 11,   7,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy sp h d 
	{0x547b, &op_bcopy,	 11,   7,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy sp h e 
	{0x557b, &op_bcopy,	 11,   7,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy sp h f 
	{0x567b, &op_bcopy,	 11,   7,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy sp h g 
	{0x577b, &op_bcopy,	 11,   7,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy sp h h 
	{0x587b, &op_bcopy,	 11,   7,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy sp h pc 
	{0x597b, &op_bcopy,	 11,   7,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy sp h ra 
	{0x5a7b, &op_bcopy,	 11,   7,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy sp h sb 
	{0x5b7b, &op_bcopy,	 11,   7,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy sp h sp 
	{0x5c7b, &op_bcopy,	 11,   7,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy sp h db 
	{0x5d7b, &op_bcopy,	 11,   7,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy sp h cb 
	{0x5e7b, &op_bcopy,	 11,   7,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy sp h pi 
	{0x5f7b, &op_bcopy,	 11,   7,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy sp h <literal> 
	{0x508b, &op_bcopy,	 11,   8,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy sp pc a 
	{0x518b, &op_bcopy,	 11,   8,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy sp pc b 
	{0x528b, &op_bcopy,	 11,   8,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy sp pc c 
	{0x538b, &op_bcopy,	 11,   8,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy sp pc d 
	{0x548b, &op_bcopy,	 11,   8,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy sp pc e 
	{0x558b, &op_bcopy,	 11,   8,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy sp pc f 
	{0x568b, &op_bcopy,	 11,   8,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy sp pc g 
	{0x578b, &op_bcopy,	 11,   8,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy sp pc h 
	{0x588b, &op_bcopy,	 11,   8,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy sp pc pc 
	{0x598b, &op_bcopy,	 11,   8,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy sp pc ra 
	{0x5a8b, &op_bcopy,	 11,   8,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy sp pc sb 
	{0x5b8b, &op_bcopy,	 11,   8,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy sp pc sp 
	{0x5c8b, &op_bcopy,	 11,   8,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy sp pc db 
	{0x5d8b, &op_bcopy,	 11,   8,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy sp pc cb 
	{0x5e8b, &op_bcopy,	 11,   8,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy sp pc pi 
	{0x5f8b, &op_bcopy,	 11,   8,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy sp pc <literal> 
	{0x509b, &op_bcopy,	 11,   9,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy sp ra a 
	{0x519b, &op_bcopy,	 11,   9,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy sp ra b 
	{0x529b, &op_bcopy,	 11,   9,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy sp ra c 
	{0x539b, &op_bcopy,	 11,   9,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy sp ra d 
	{0x549b, &op_bcopy,	 11,   9,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy sp ra e 
	{0x559b, &op_bcopy,	 11,   9,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy sp ra f 
	{0x569b, &op_bcopy,	 11,   9,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy sp ra g 
	{0x579b, &op_bcopy,	 11,   9,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy sp ra h 
	{0x589b, &op_bcopy,	 11,   9,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy sp ra pc 
	{0x599b, &op_bcopy,	 11,   9,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy sp ra ra 
	{0x5a9b, &op_bcopy,	 11,   9,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy sp ra sb 
	{0x5b9b, &op_bcopy,	 11,   9,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy sp ra sp 
	{0x5c9b, &op_bcopy,	 11,   9,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy sp ra db 
	{0x5d9b, &op_bcopy,	 11,   9,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy sp ra cb 
	{0x5e9b, &op_bcopy,	 11,   9,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy sp ra pi 
	{0x5f9b, &op_bcopy,	 11,   9,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy sp ra <literal> 
	{0x50ab, &op_bcopy,	 11,  10,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy sp sb a 
	{0x51ab, &op_bcopy,	 11,  10,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy sp sb b 
	{0x52ab, &op_bcopy,	 11,  10,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy sp sb c 
	{0x53ab, &op_bcopy,	 11,  10,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy sp sb d 
	{0x54ab, &op_bcopy,	 11,  10,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy sp sb e 
	{0x55ab, &op_bcopy,	 11,  10,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy sp sb f 
	{0x56ab, &op_bcopy,	 11,  10,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy sp sb g 
	{0x57ab, &op_bcopy,	 11,  10,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy sp sb h 
	{0x58ab, &op_bcopy,	 11,  10,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy sp sb pc 
	{0x59ab, &op_bcopy,	 11,  10,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy sp sb ra 
	{0x5aab, &op_bcopy,	 11,  10,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy sp sb sb 
	{0x5bab, &op_bcopy,	 11,  10,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy sp sb sp 
	{0x5cab, &op_bcopy,	 11,  10,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy sp sb db 
	{0x5dab, &op_bcopy,	 11,  10,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy sp sb cb 
	{0x5eab, &op_bcopy,	 11,  10,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy sp sb pi 
	{0x5fab, &op_bcopy,	 11,  10,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy sp sb <literal> 
	{0x50bb, &op_bcopy,	 11,  11,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy sp sp a 
	{0x51bb, &op_bcopy,	 11,  11,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy sp sp b 
	{0x52bb, &op_bcopy,	 11,  11,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy sp sp c 
	{0x53bb, &op_bcopy,	 11,  11,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy sp sp d 
	{0x54bb, &op_bcopy,	 11,  11,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy sp sp e 
	{0x55bb, &op_bcopy,	 11,  11,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy sp sp f 
	{0x56bb, &op_bcopy,	 11,  11,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy sp sp g 
	{0x57bb, &op_bcopy,	 11,  11,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy sp sp h 
	{0x58bb, &op_bcopy,	 11,  11,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy sp sp pc 
	{0x59bb, &op_bcopy,	 11,  11,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy sp sp ra 
	{0x5abb, &op_bcopy,	 11,  11,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy sp sp sb 
	{0x5bbb, &op_bcopy,	 11,  11,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy sp sp sp 
	{0x5cbb, &op_bcopy,	 11,  11,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy sp sp db 
	{0x5dbb, &op_bcopy,	 11,  11,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy sp sp cb 
	{0x5ebb, &op_bcopy,	 11,  11,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy sp sp pi 
	{0x5fbb, &op_bcopy,	 11,  11,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy sp sp <literal> 
	{0x50cb, &op_bcopy,	 11,  12,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy sp db a 
	{0x51cb, &op_bcopy,	 11,  12,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy sp db b 
	{0x52cb, &op_bcopy,	 11,  12,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy sp db c 
	{0x53cb, &op_bcopy,	 11,  12,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy sp db d 
	{0x54cb, &op_bcopy,	 11,  12,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy sp db e 
	{0x55cb, &op_bcopy,	 11,  12,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy sp db f 
	{0x56cb, &op_bcopy,	 11,  12,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy sp db g 
	{0x57cb, &op_bcopy,	 11,  12,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy sp db h 
	{0x58cb, &op_bcopy,	 11,  12,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy sp db pc 
	{0x59cb, &op_bcopy,	 11,  12,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy sp db ra 
	{0x5acb, &op_bcopy,	 11,  12,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy sp db sb 
	{0x5bcb, &op_bcopy,	 11,  12,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy sp db sp 
	{0x5ccb, &op_bcopy,	 11,  12,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy sp db db 
	{0x5dcb, &op_bcopy,	 11,  12,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy sp db cb 
	{0x5ecb, &op_bcopy,	 11,  12,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy sp db pi 
	{0x5fcb, &op_bcopy,	 11,  12,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy sp db <literal> 
	{0x50db, &op_bcopy,	 11,  13,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy sp cb a 
	{0x51db, &op_bcopy,	 11,  13,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy sp cb b 
	{0x52db, &op_bcopy,	 11,  13,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy sp cb c 
	{0x53db, &op_bcopy,	 11,  13,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy sp cb d 
	{0x54db, &op_bcopy,	 11,  13,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy sp cb e 
	{0x55db, &op_bcopy,	 11,  13,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy sp cb f 
	{0x56db, &op_bcopy,	 11,  13,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy sp cb g 
	{0x57db, &op_bcopy,	 11,  13,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy sp cb h 
	{0x58db, &op_bcopy,	 11,  13,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy sp cb pc 
	{0x59db, &op_bcopy,	 11,  13,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy sp cb ra 
	{0x5adb, &op_bcopy,	 11,  13,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy sp cb sb 
	{0x5bdb, &op_bcopy,	 11,  13,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy sp cb sp 
	{0x5cdb, &op_bcopy,	 11,  13,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy sp cb db 
	{0x5ddb, &op_bcopy,	 11,  13,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy sp cb cb 
	{0x5edb, &op_bcopy,	 11,  13,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy sp cb pi 
	{0x5fdb, &op_bcopy,	 11,  13,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy sp cb <literal> 
	{0x50eb, &op_bcopy,	 11,  14,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy sp pi a 
	{0x51eb, &op_bcopy,	 11,  14,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy sp pi b 
	{0x52eb, &op_bcopy,	 11,  14,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy sp pi c 
	{0x53eb, &op_bcopy,	 11,  14,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy sp pi d 
	{0x54eb, &op_bcopy,	 11,  14,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy sp pi e 
	{0x55eb, &op_bcopy,	 11,  14,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy sp pi f 
	{0x56eb, &op_bcopy,	 11,  14,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy sp pi g 
	{0x57eb, &op_bcopy,	 11,  14,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy sp pi h 
	{0x58eb, &op_bcopy,	 11,  14,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy sp pi pc 
	{0x59eb, &op_bcopy,	 11,  14,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy sp pi ra 
	{0x5aeb, &op_bcopy,	 11,  14,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy sp pi sb 
	{0x5beb, &op_bcopy,	 11,  14,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy sp pi sp 
	{0x5ceb, &op_bcopy,	 11,  14,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy sp pi db 
	{0x5deb, &op_bcopy,	 11,  14,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy sp pi cb 
	{0x5eeb, &op_bcopy,	 11,  14,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy sp pi pi 
	{0x5feb, &op_bcopy,	 11,  14,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy sp pi <literal> 
	{0x50fb, &op_bcopy,	 11,  15,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy sp status a 
	{0x51fb, &op_bcopy,	 11,  15,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy sp status b 
	{0x52fb, &op_bcopy,	 11,  15,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy sp status c 
	{0x53fb, &op_bcopy,	 11,  15,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy sp status d 
	{0x54fb, &op_bcopy,	 11,  15,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy sp status e 
	{0x55fb, &op_bcopy,	 11,  15,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy sp status f 
	{0x56fb, &op_bcopy,	 11,  15,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy sp status g 
	{0x57fb, &op_bcopy,	 11,  15,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy sp status h 
	{0x58fb, &op_bcopy,	 11,  15,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy sp status pc 
	{0x59fb, &op_bcopy,	 11,  15,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy sp status ra 
	{0x5afb, &op_bcopy,	 11,  15,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy sp status sb 
	{0x5bfb, &op_bcopy,	 11,  15,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy sp status sp 
	{0x5cfb, &op_bcopy,	 11,  15,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy sp status db 
	{0x5dfb, &op_bcopy,	 11,  15,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy sp status cb 
	{0x5efb, &op_bcopy,	 11,  15,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy sp status pi 
	{0x5ffb, &op_bcopy,	 11,  15,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy sp status <literal> 
	{0x500c, &op_bcopy,	 12,   0,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy db a a 
	{0x510c, &op_bcopy,	 12,   0,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy db a b 
	{0x520c, &op_bcopy,	 12,   0,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy db a c 
	{0x530c, &op_bcopy,	 12,   0,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy db a d 
	{0x540c, &op_bcopy,	 12,   0,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy db a e 
	{0x550c, &op_bcopy,	 12,   0,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy db a f 
	{0x560c, &op_bcopy,	 12,   0,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy db a g 
	{0x570c, &op_bcopy,	 12,   0,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy db a h 
	{0x580c, &op_bcopy,	 12,   0,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy db a pc 
	{0x590c, &op_bcopy,	 12,   0,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy db a ra 
	{0x5a0c, &op_bcopy,	 12,   0,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy db a sb 
	{0x5b0c, &op_bcopy,	 12,   0,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy db a sp 
	{0x5c0c, &op_bcopy,	 12,   0,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy db a db 
	{0x5d0c, &op_bcopy,	 12,   0,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy db a cb 
	{0x5e0c, &op_bcopy,	 12,   0,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy db a pi 
	{0x5f0c, &op_bcopy,	 12,   0,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy db a <literal> 
	{0x501c, &op_bcopy,	 12,   1,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy db b a 
	{0x511c, &op_bcopy,	 12,   1,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy db b b 
	{0x521c, &op_bcopy,	 12,   1,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy db b c 
	{0x531c, &op_bcopy,	 12,   1,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy db b d 
	{0x541c, &op_bcopy,	 12,   1,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy db b e 
	{0x551c, &op_bcopy,	 12,   1,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy db b f 
	{0x561c, &op_bcopy,	 12,   1,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy db b g 
	{0x571c, &op_bcopy,	 12,   1,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy db b h 
	{0x581c, &op_bcopy,	 12,   1,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy db b pc 
	{0x591c, &op_bcopy,	 12,   1,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy db b ra 
	{0x5a1c, &op_bcopy,	 12,   1,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy db b sb 
	{0x5b1c, &op_bcopy,	 12,   1,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy db b sp 
	{0x5c1c, &op_bcopy,	 12,   1,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy db b db 
	{0x5d1c, &op_bcopy,	 12,   1,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy db b cb 
	{0x5e1c, &op_bcopy,	 12,   1,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy db b pi 
	{0x5f1c, &op_bcopy,	 12,   1,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy db b <literal> 
	{0x502c, &op_bcopy,	 12,   2,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy db c a 
	{0x512c, &op_bcopy,	 12,   2,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy db c b 
	{0x522c, &op_bcopy,	 12,   2,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy db c c 
	{0x532c, &op_bcopy,	 12,   2,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy db c d 
	{0x542c, &op_bcopy,	 12,   2,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy db c e 
	{0x552c, &op_bcopy,	 12,   2,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy db c f 
	{0x562c, &op_bcopy,	 12,   2,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy db c g 
	{0x572c, &op_bcopy,	 12,   2,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy db c h 
	{0x582c, &op_bcopy,	 12,   2,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy db c pc 
	{0x592c, &op_bcopy,	 12,   2,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy db c ra 
	{0x5a2c, &op_bcopy,	 12,   2,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy db c sb 
	{0x5b2c, &op_bcopy,	 12,   2,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy db c sp 
	{0x5c2c, &op_bcopy,	 12,   2,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy db c db 
	{0x5d2c, &op_bcopy,	 12,   2,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy db c cb 
	{0x5e2c, &op_bcopy,	 12,   2,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy db c pi 
	{0x5f2c, &op_bcopy,	 12,   2,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy db c <literal> 
	{0x503c, &op_bcopy,	 12,   3,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy db d a 
	{0x513c, &op_bcopy,	 12,   3,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy db d b 
	{0x523c, &op_bcopy,	 12,   3,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy db d c 
	{0x533c, &op_bcopy,	 12,   3,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy db d d 
	{0x543c, &op_bcopy,	 12,   3,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy db d e 
	{0x553c, &op_bcopy,	 12,   3,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy db d f 
	{0x563c, &op_bcopy,	 12,   3,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy db d g 
	{0x573c, &op_bcopy,	 12,   3,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy db d h 
	{0x583c, &op_bcopy,	 12,   3,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy db d pc 
	{0x593c, &op_bcopy,	 12,   3,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy db d ra 
	{0x5a3c, &op_bcopy,	 12,   3,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy db d sb 
	{0x5b3c, &op_bcopy,	 12,   3,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy db d sp 
	{0x5c3c, &op_bcopy,	 12,   3,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy db d db 
	{0x5d3c, &op_bcopy,	 12,   3,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy db d cb 
	{0x5e3c, &op_bcopy,	 12,   3,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy db d pi 
	{0x5f3c, &op_bcopy,	 12,   3,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy db d <literal> 
	{0x504c, &op_bcopy,	 12,   4,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy db e a 
	{0x514c, &op_bcopy,	 12,   4,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy db e b 
	{0x524c, &op_bcopy,	 12,   4,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy db e c 
	{0x534c, &op_bcopy,	 12,   4,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy db e d 
	{0x544c, &op_bcopy,	 12,   4,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy db e e 
	{0x554c, &op_bcopy,	 12,   4,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy db e f 
	{0x564c, &op_bcopy,	 12,   4,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy db e g 
	{0x574c, &op_bcopy,	 12,   4,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy db e h 
	{0x584c, &op_bcopy,	 12,   4,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy db e pc 
	{0x594c, &op_bcopy,	 12,   4,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy db e ra 
	{0x5a4c, &op_bcopy,	 12,   4,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy db e sb 
	{0x5b4c, &op_bcopy,	 12,   4,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy db e sp 
	{0x5c4c, &op_bcopy,	 12,   4,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy db e db 
	{0x5d4c, &op_bcopy,	 12,   4,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy db e cb 
	{0x5e4c, &op_bcopy,	 12,   4,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy db e pi 
	{0x5f4c, &op_bcopy,	 12,   4,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy db e <literal> 
	{0x505c, &op_bcopy,	 12,   5,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy db f a 
	{0x515c, &op_bcopy,	 12,   5,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy db f b 
	{0x525c, &op_bcopy,	 12,   5,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy db f c 
	{0x535c, &op_bcopy,	 12,   5,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy db f d 
	{0x545c, &op_bcopy,	 12,   5,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy db f e 
	{0x555c, &op_bcopy,	 12,   5,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy db f f 
	{0x565c, &op_bcopy,	 12,   5,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy db f g 
	{0x575c, &op_bcopy,	 12,   5,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy db f h 
	{0x585c, &op_bcopy,	 12,   5,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy db f pc 
	{0x595c, &op_bcopy,	 12,   5,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy db f ra 
	{0x5a5c, &op_bcopy,	 12,   5,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy db f sb 
	{0x5b5c, &op_bcopy,	 12,   5,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy db f sp 
	{0x5c5c, &op_bcopy,	 12,   5,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy db f db 
	{0x5d5c, &op_bcopy,	 12,   5,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy db f cb 
	{0x5e5c, &op_bcopy,	 12,   5,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy db f pi 
	{0x5f5c, &op_bcopy,	 12,   5,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy db f <literal> 
	{0x506c, &op_bcopy,	 12,   6,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy db g a 
	{0x516c, &op_bcopy,	 12,   6,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy db g b 
	{0x526c, &op_bcopy,	 12,   6,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy db g c 
	{0x536c, &op_bcopy,	 12,   6,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy db g d 
	{0x546c, &op_bcopy,	 12,   6,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy db g e 
	{0x556c, &op_bcopy,	 12,   6,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy db g f 
	{0x566c, &op_bcopy,	 12,   6,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy db g g 
	{0x576c, &op_bcopy,	 12,   6,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy db g h 
	{0x586c, &op_bcopy,	 12,   6,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy db g pc 
	{0x596c, &op_bcopy,	 12,   6,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy db g ra 
	{0x5a6c, &op_bcopy,	 12,   6,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy db g sb 
	{0x5b6c, &op_bcopy,	 12,   6,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy db g sp 
	{0x5c6c, &op_bcopy,	 12,   6,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy db g db 
	{0x5d6c, &op_bcopy,	 12,   6,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy db g cb 
	{0x5e6c, &op_bcopy,	 12,   6,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy db g pi 
	{0x5f6c, &op_bcopy,	 12,   6,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy db g <literal> 
	{0x507c, &op_bcopy,	 12,   7,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy db h a 
	{0x517c, &op_bcopy,	 12,   7,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy db h b 
	{0x527c, &op_bcopy,	 12,   7,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy db h c 
	{0x537c, &op_bcopy,	 12,   7,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy db h d 
	{0x547c, &op_bcopy,	 12,   7,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy db h e 
	{0x557c, &op_bcopy,	 12,   7,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy db h f 
	{0x567c, &op_bcopy,	 12,   7,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy db h g 
	{0x577c, &op_bcopy,	 12,   7,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy db h h 
	{0x587c, &op_bcopy,	 12,   7,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy db h pc 
	{0x597c, &op_bcopy,	 12,   7,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy db h ra 
	{0x5a7c, &op_bcopy,	 12,   7,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy db h sb 
	{0x5b7c, &op_bcopy,	 12,   7,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy db h sp 
	{0x5c7c, &op_bcopy,	 12,   7,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy db h db 
	{0x5d7c, &op_bcopy,	 12,   7,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy db h cb 
	{0x5e7c, &op_bcopy,	 12,   7,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy db h pi 
	{0x5f7c, &op_bcopy,	 12,   7,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy db h <literal> 
	{0x508c, &op_bcopy,	 12,   8,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy db pc a 
	{0x518c, &op_bcopy,	 12,   8,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy db pc b 
	{0x528c, &op_bcopy,	 12,   8,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy db pc c 
	{0x538c, &op_bcopy,	 12,   8,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy db pc d 
	{0x548c, &op_bcopy,	 12,   8,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy db pc e 
	{0x558c, &op_bcopy,	 12,   8,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy db pc f 
	{0x568c, &op_bcopy,	 12,   8,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy db pc g 
	{0x578c, &op_bcopy,	 12,   8,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy db pc h 
	{0x588c, &op_bcopy,	 12,   8,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy db pc pc 
	{0x598c, &op_bcopy,	 12,   8,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy db pc ra 
	{0x5a8c, &op_bcopy,	 12,   8,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy db pc sb 
	{0x5b8c, &op_bcopy,	 12,   8,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy db pc sp 
	{0x5c8c, &op_bcopy,	 12,   8,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy db pc db 
	{0x5d8c, &op_bcopy,	 12,   8,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy db pc cb 
	{0x5e8c, &op_bcopy,	 12,   8,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy db pc pi 
	{0x5f8c, &op_bcopy,	 12,   8,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy db pc <literal> 
	{0x509c, &op_bcopy,	 12,   9,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy db ra a 
	{0x519c, &op_bcopy,	 12,   9,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy db ra b 
	{0x529c, &op_bcopy,	 12,   9,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy db ra c 
	{0x539c, &op_bcopy,	 12,   9,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy db ra d 
	{0x549c, &op_bcopy,	 12,   9,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy db ra e 
	{0x559c, &op_bcopy,	 12,   9,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy db ra f 
	{0x569c, &op_bcopy,	 12,   9,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy db ra g 
	{0x579c, &op_bcopy,	 12,   9,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy db ra h 
	{0x589c, &op_bcopy,	 12,   9,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy db ra pc 
	{0x599c, &op_bcopy,	 12,   9,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy db ra ra 
	{0x5a9c, &op_bcopy,	 12,   9,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy db ra sb 
	{0x5b9c, &op_bcopy,	 12,   9,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy db ra sp 
	{0x5c9c, &op_bcopy,	 12,   9,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy db ra db 
	{0x5d9c, &op_bcopy,	 12,   9,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy db ra cb 
	{0x5e9c, &op_bcopy,	 12,   9,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy db ra pi 
	{0x5f9c, &op_bcopy,	 12,   9,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy db ra <literal> 
	{0x50ac, &op_bcopy,	 12,  10,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy db sb a 
	{0x51ac, &op_bcopy,	 12,  10,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy db sb b 
	{0x52ac, &op_bcopy,	 12,  10,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy db sb c 
	{0x53ac, &op_bcopy,	 12,  10,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy db sb d 
	{0x54ac, &op_bcopy,	 12,  10,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy db sb e 
	{0x55ac, &op_bcopy,	 12,  10,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy db sb f 
	{0x56ac, &op_bcopy,	 12,  10,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy db sb g 
	{0x57ac, &op_bcopy,	 12,  10,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy db sb h 
	{0x58ac, &op_bcopy,	 12,  10,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy db sb pc 
	{0x59ac, &op_bcopy,	 12,  10,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy db sb ra 
	{0x5aac, &op_bcopy,	 12,  10,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy db sb sb 
	{0x5bac, &op_bcopy,	 12,  10,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy db sb sp 
	{0x5cac, &op_bcopy,	 12,  10,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy db sb db 
	{0x5dac, &op_bcopy,	 12,  10,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy db sb cb 
	{0x5eac, &op_bcopy,	 12,  10,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy db sb pi 
	{0x5fac, &op_bcopy,	 12,  10,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy db sb <literal> 
	{0x50bc, &op_bcopy,	 12,  11,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy db sp a 
	{0x51bc, &op_bcopy,	 12,  11,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy db sp b 
	{0x52bc, &op_bcopy,	 12,  11,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy db sp c 
	{0x53bc, &op_bcopy,	 12,  11,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy db sp d 
	{0x54bc, &op_bcopy,	 12,  11,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy db sp e 
	{0x55bc, &op_bcopy,	 12,  11,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy db sp f 
	{0x56bc, &op_bcopy,	 12,  11,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy db sp g 
	{0x57bc, &op_bcopy,	 12,  11,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy db sp h 
	{0x58bc, &op_bcopy,	 12,  11,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy db sp pc 
	{0x59bc, &op_bcopy,	 12,  11,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy db sp ra 
	{0x5abc, &op_bcopy,	 12,  11,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy db sp sb 
	{0x5bbc, &op_bcopy,	 12,  11,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy db sp sp 
	{0x5cbc, &op_bcopy,	 12,  11,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy db sp db 
	{0x5dbc, &op_bcopy,	 12,  11,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy db sp cb 
	{0x5ebc, &op_bcopy,	 12,  11,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy db sp pi 
	{0x5fbc, &op_bcopy,	 12,  11,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy db sp <literal> 
	{0x50cc, &op_bcopy,	 12,  12,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy db db a 
	{0x51cc, &op_bcopy,	 12,  12,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy db db b 
	{0x52cc, &op_bcopy,	 12,  12,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy db db c 
	{0x53cc, &op_bcopy,	 12,  12,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy db db d 
	{0x54cc, &op_bcopy,	 12,  12,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy db db e 
	{0x55cc, &op_bcopy,	 12,  12,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy db db f 
	{0x56cc, &op_bcopy,	 12,  12,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy db db g 
	{0x57cc, &op_bcopy,	 12,  12,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy db db h 
	{0x58cc, &op_bcopy,	 12,  12,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy db db pc 
	{0x59cc, &op_bcopy,	 12,  12,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy db db ra 
	{0x5acc, &op_bcopy,	 12,  12,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy db db sb 
	{0x5bcc, &op_bcopy,	 12,  12,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy db db sp 
	{0x5ccc, &op_bcopy,	 12,  12,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy db db db 
	{0x5dcc, &op_bcopy,	 12,  12,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy db db cb 
	{0x5ecc, &op_bcopy,	 12,  12,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy db db pi 
	{0x5fcc, &op_bcopy,	 12,  12,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy db db <literal> 
	{0x50dc, &op_bcopy,	 12,  13,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy db cb a 
	{0x51dc, &op_bcopy,	 12,  13,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy db cb b 
	{0x52dc, &op_bcopy,	 12,  13,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy db cb c 
	{0x53dc, &op_bcopy,	 12,  13,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy db cb d 
	{0x54dc, &op_bcopy,	 12,  13,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy db cb e 
	{0x55dc, &op_bcopy,	 12,  13,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy db cb f 
	{0x56dc, &op_bcopy,	 12,  13,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy db cb g 
	{0x57dc, &op_bcopy,	 12,  13,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy db cb h 
	{0x58dc, &op_bcopy,	 12,  13,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy db cb pc 
	{0x59dc, &op_bcopy,	 12,  13,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy db cb ra 
	{0x5adc, &op_bcopy,	 12,  13,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy db cb sb 
	{0x5bdc, &op_bcopy,	 12,  13,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy db cb sp 
	{0x5cdc, &op_bcopy,	 12,  13,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy db cb db 
	{0x5ddc, &op_bcopy,	 12,  13,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy db cb cb 
	{0x5edc, &op_bcopy,	 12,  13,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy db cb pi 
	{0x5fdc, &op_bcopy,	 12,  13,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy db cb <literal> 
	{0x50ec, &op_bcopy,	 12,  14,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy db pi a 
	{0x51ec, &op_bcopy,	 12,  14,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy db pi b 
	{0x52ec, &op_bcopy,	 12,  14,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy db pi c 
	{0x53ec, &op_bcopy,	 12,  14,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy db pi d 
	{0x54ec, &op_bcopy,	 12,  14,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy db pi e 
	{0x55ec, &op_bcopy,	 12,  14,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy db pi f 
	{0x56ec, &op_bcopy,	 12,  14,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy db pi g 
	{0x57ec, &op_bcopy,	 12,  14,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy db pi h 
	{0x58ec, &op_bcopy,	 12,  14,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy db pi pc 
	{0x59ec, &op_bcopy,	 12,  14,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy db pi ra 
	{0x5aec, &op_bcopy,	 12,  14,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy db pi sb 
	{0x5bec, &op_bcopy,	 12,  14,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy db pi sp 
	{0x5cec, &op_bcopy,	 12,  14,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy db pi db 
	{0x5dec, &op_bcopy,	 12,  14,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy db pi cb 
	{0x5eec, &op_bcopy,	 12,  14,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy db pi pi 
	{0x5fec, &op_bcopy,	 12,  14,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy db pi <literal> 
	{0x50fc, &op_bcopy,	 12,  15,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy db status a 
	{0x51fc, &op_bcopy,	 12,  15,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy db status b 
	{0x52fc, &op_bcopy,	 12,  15,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy db status c 
	{0x53fc, &op_bcopy,	 12,  15,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy db status d 
	{0x54fc, &op_bcopy,	 12,  15,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy db status e 
	{0x55fc, &op_bcopy,	 12,  15,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy db status f 
	{0x56fc, &op_bcopy,	 12,  15,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy db status g 
	{0x57fc, &op_bcopy,	 12,  15,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy db status h 
	{0x58fc, &op_bcopy,	 12,  15,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy db status pc 
	{0x59fc, &op_bcopy,	 12,  15,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy db status ra 
	{0x5afc, &op_bcopy,	 12,  15,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy db status sb 
	{0x5bfc, &op_bcopy,	 12,  15,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy db status sp 
	{0x5cfc, &op_bcopy,	 12,  15,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy db status db 
	{0x5dfc, &op_bcopy,	 12,  15,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy db status cb 
	{0x5efc, &op_bcopy,	 12,  15,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy db status pi 
	{0x5ffc, &op_bcopy,	 12,  15,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy db status <literal> 
	{0x500d, &op_bcopy,	 13,   0,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy cb a a 
	{0x510d, &op_bcopy,	 13,   0,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy cb a b 
	{0x520d, &op_bcopy,	 13,   0,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy cb a c 
	{0x530d, &op_bcopy,	 13,   0,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy cb a d 
	{0x540d, &op_bcopy,	 13,   0,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy cb a e 
	{0x550d, &op_bcopy,	 13,   0,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy cb a f 
	{0x560d, &op_bcopy,	 13,   0,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy cb a g 
	{0x570d, &op_bcopy,	 13,   0,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy cb a h 
	{0x580d, &op_bcopy,	 13,   0,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy cb a pc 
	{0x590d, &op_bcopy,	 13,   0,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy cb a ra 
	{0x5a0d, &op_bcopy,	 13,   0,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy cb a sb 
	{0x5b0d, &op_bcopy,	 13,   0,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy cb a sp 
	{0x5c0d, &op_bcopy,	 13,   0,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy cb a db 
	{0x5d0d, &op_bcopy,	 13,   0,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy cb a cb 
	{0x5e0d, &op_bcopy,	 13,   0,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy cb a pi 
	{0x5f0d, &op_bcopy,	 13,   0,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy cb a <literal> 
	{0x501d, &op_bcopy,	 13,   1,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy cb b a 
	{0x511d, &op_bcopy,	 13,   1,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy cb b b 
	{0x521d, &op_bcopy,	 13,   1,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy cb b c 
	{0x531d, &op_bcopy,	 13,   1,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy cb b d 
	{0x541d, &op_bcopy,	 13,   1,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy cb b e 
	{0x551d, &op_bcopy,	 13,   1,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy cb b f 
	{0x561d, &op_bcopy,	 13,   1,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy cb b g 
	{0x571d, &op_bcopy,	 13,   1,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy cb b h 
	{0x581d, &op_bcopy,	 13,   1,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy cb b pc 
	{0x591d, &op_bcopy,	 13,   1,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy cb b ra 
	{0x5a1d, &op_bcopy,	 13,   1,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy cb b sb 
	{0x5b1d, &op_bcopy,	 13,   1,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy cb b sp 
	{0x5c1d, &op_bcopy,	 13,   1,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy cb b db 
	{0x5d1d, &op_bcopy,	 13,   1,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy cb b cb 
	{0x5e1d, &op_bcopy,	 13,   1,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy cb b pi 
	{0x5f1d, &op_bcopy,	 13,   1,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy cb b <literal> 
	{0x502d, &op_bcopy,	 13,   2,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy cb c a 
	{0x512d, &op_bcopy,	 13,   2,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy cb c b 
	{0x522d, &op_bcopy,	 13,   2,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy cb c c 
	{0x532d, &op_bcopy,	 13,   2,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy cb c d 
	{0x542d, &op_bcopy,	 13,   2,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy cb c e 
	{0x552d, &op_bcopy,	 13,   2,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy cb c f 
	{0x562d, &op_bcopy,	 13,   2,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy cb c g 
	{0x572d, &op_bcopy,	 13,   2,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy cb c h 
	{0x582d, &op_bcopy,	 13,   2,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy cb c pc 
	{0x592d, &op_bcopy,	 13,   2,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy cb c ra 
	{0x5a2d, &op_bcopy,	 13,   2,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy cb c sb 
	{0x5b2d, &op_bcopy,	 13,   2,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy cb c sp 
	{0x5c2d, &op_bcopy,	 13,   2,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy cb c db 
	{0x5d2d, &op_bcopy,	 13,   2,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy cb c cb 
	{0x5e2d, &op_bcopy,	 13,   2,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy cb c pi 
	{0x5f2d, &op_bcopy,	 13,   2,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy cb c <literal> 
	{0x503d, &op_bcopy,	 13,   3,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy cb d a 
	{0x513d, &op_bcopy,	 13,   3,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy cb d b 
	{0x523d, &op_bcopy,	 13,   3,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy cb d c 
	{0x533d, &op_bcopy,	 13,   3,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy cb d d 
	{0x543d, &op_bcopy,	 13,   3,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy cb d e 
	{0x553d, &op_bcopy,	 13,   3,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy cb d f 
	{0x563d, &op_bcopy,	 13,   3,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy cb d g 
	{0x573d, &op_bcopy,	 13,   3,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy cb d h 
	{0x583d, &op_bcopy,	 13,   3,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy cb d pc 
	{0x593d, &op_bcopy,	 13,   3,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy cb d ra 
	{0x5a3d, &op_bcopy,	 13,   3,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy cb d sb 
	{0x5b3d, &op_bcopy,	 13,   3,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy cb d sp 
	{0x5c3d, &op_bcopy,	 13,   3,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy cb d db 
	{0x5d3d, &op_bcopy,	 13,   3,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy cb d cb 
	{0x5e3d, &op_bcopy,	 13,   3,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy cb d pi 
	{0x5f3d, &op_bcopy,	 13,   3,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy cb d <literal> 
	{0x504d, &op_bcopy,	 13,   4,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy cb e a 
	{0x514d, &op_bcopy,	 13,   4,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy cb e b 
	{0x524d, &op_bcopy,	 13,   4,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy cb e c 
	{0x534d, &op_bcopy,	 13,   4,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy cb e d 
	{0x544d, &op_bcopy,	 13,   4,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy cb e e 
	{0x554d, &op_bcopy,	 13,   4,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy cb e f 
	{0x564d, &op_bcopy,	 13,   4,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy cb e g 
	{0x574d, &op_bcopy,	 13,   4,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy cb e h 
	{0x584d, &op_bcopy,	 13,   4,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy cb e pc 
	{0x594d, &op_bcopy,	 13,   4,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy cb e ra 
	{0x5a4d, &op_bcopy,	 13,   4,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy cb e sb 
	{0x5b4d, &op_bcopy,	 13,   4,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy cb e sp 
	{0x5c4d, &op_bcopy,	 13,   4,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy cb e db 
	{0x5d4d, &op_bcopy,	 13,   4,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy cb e cb 
	{0x5e4d, &op_bcopy,	 13,   4,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy cb e pi 
	{0x5f4d, &op_bcopy,	 13,   4,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy cb e <literal> 
	{0x505d, &op_bcopy,	 13,   5,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy cb f a 
	{0x515d, &op_bcopy,	 13,   5,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy cb f b 
	{0x525d, &op_bcopy,	 13,   5,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy cb f c 
	{0x535d, &op_bcopy,	 13,   5,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy cb f d 
	{0x545d, &op_bcopy,	 13,   5,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy cb f e 
	{0x555d, &op_bcopy,	 13,   5,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy cb f f 
	{0x565d, &op_bcopy,	 13,   5,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy cb f g 
	{0x575d, &op_bcopy,	 13,   5,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy cb f h 
	{0x585d, &op_bcopy,	 13,   5,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy cb f pc 
	{0x595d, &op_bcopy,	 13,   5,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy cb f ra 
	{0x5a5d, &op_bcopy,	 13,   5,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy cb f sb 
	{0x5b5d, &op_bcopy,	 13,   5,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy cb f sp 
	{0x5c5d, &op_bcopy,	 13,   5,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy cb f db 
	{0x5d5d, &op_bcopy,	 13,   5,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy cb f cb 
	{0x5e5d, &op_bcopy,	 13,   5,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy cb f pi 
	{0x5f5d, &op_bcopy,	 13,   5,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy cb f <literal> 
	{0x506d, &op_bcopy,	 13,   6,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy cb g a 
	{0x516d, &op_bcopy,	 13,   6,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy cb g b 
	{0x526d, &op_bcopy,	 13,   6,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy cb g c 
	{0x536d, &op_bcopy,	 13,   6,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy cb g d 
	{0x546d, &op_bcopy,	 13,   6,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy cb g e 
	{0x556d, &op_bcopy,	 13,   6,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy cb g f 
	{0x566d, &op_bcopy,	 13,   6,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy cb g g 
	{0x576d, &op_bcopy,	 13,   6,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy cb g h 
	{0x586d, &op_bcopy,	 13,   6,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy cb g pc 
	{0x596d, &op_bcopy,	 13,   6,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy cb g ra 
	{0x5a6d, &op_bcopy,	 13,   6,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy cb g sb 
	{0x5b6d, &op_bcopy,	 13,   6,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy cb g sp 
	{0x5c6d, &op_bcopy,	 13,   6,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy cb g db 
	{0x5d6d, &op_bcopy,	 13,   6,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy cb g cb 
	{0x5e6d, &op_bcopy,	 13,   6,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy cb g pi 
	{0x5f6d, &op_bcopy,	 13,   6,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy cb g <literal> 
	{0x507d, &op_bcopy,	 13,   7,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy cb h a 
	{0x517d, &op_bcopy,	 13,   7,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy cb h b 
	{0x527d, &op_bcopy,	 13,   7,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy cb h c 
	{0x537d, &op_bcopy,	 13,   7,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy cb h d 
	{0x547d, &op_bcopy,	 13,   7,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy cb h e 
	{0x557d, &op_bcopy,	 13,   7,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy cb h f 
	{0x567d, &op_bcopy,	 13,   7,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy cb h g 
	{0x577d, &op_bcopy,	 13,   7,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy cb h h 
	{0x587d, &op_bcopy,	 13,   7,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy cb h pc 
	{0x597d, &op_bcopy,	 13,   7,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy cb h ra 
	{0x5a7d, &op_bcopy,	 13,   7,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy cb h sb 
	{0x5b7d, &op_bcopy,	 13,   7,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy cb h sp 
	{0x5c7d, &op_bcopy,	 13,   7,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy cb h db 
	{0x5d7d, &op_bcopy,	 13,   7,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy cb h cb 
	{0x5e7d, &op_bcopy,	 13,   7,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy cb h pi 
	{0x5f7d, &op_bcopy,	 13,   7,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy cb h <literal> 
	{0x508d, &op_bcopy,	 13,   8,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy cb pc a 
	{0x518d, &op_bcopy,	 13,   8,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy cb pc b 
	{0x528d, &op_bcopy,	 13,   8,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy cb pc c 
	{0x538d, &op_bcopy,	 13,   8,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy cb pc d 
	{0x548d, &op_bcopy,	 13,   8,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy cb pc e 
	{0x558d, &op_bcopy,	 13,   8,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy cb pc f 
	{0x568d, &op_bcopy,	 13,   8,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy cb pc g 
	{0x578d, &op_bcopy,	 13,   8,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy cb pc h 
	{0x588d, &op_bcopy,	 13,   8,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy cb pc pc 
	{0x598d, &op_bcopy,	 13,   8,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy cb pc ra 
	{0x5a8d, &op_bcopy,	 13,   8,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy cb pc sb 
	{0x5b8d, &op_bcopy,	 13,   8,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy cb pc sp 
	{0x5c8d, &op_bcopy,	 13,   8,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy cb pc db 
	{0x5d8d, &op_bcopy,	 13,   8,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy cb pc cb 
	{0x5e8d, &op_bcopy,	 13,   8,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy cb pc pi 
	{0x5f8d, &op_bcopy,	 13,   8,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy cb pc <literal> 
	{0x509d, &op_bcopy,	 13,   9,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy cb ra a 
	{0x519d, &op_bcopy,	 13,   9,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy cb ra b 
	{0x529d, &op_bcopy,	 13,   9,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy cb ra c 
	{0x539d, &op_bcopy,	 13,   9,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy cb ra d 
	{0x549d, &op_bcopy,	 13,   9,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy cb ra e 
	{0x559d, &op_bcopy,	 13,   9,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy cb ra f 
	{0x569d, &op_bcopy,	 13,   9,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy cb ra g 
	{0x579d, &op_bcopy,	 13,   9,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy cb ra h 
	{0x589d, &op_bcopy,	 13,   9,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy cb ra pc 
	{0x599d, &op_bcopy,	 13,   9,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy cb ra ra 
	{0x5a9d, &op_bcopy,	 13,   9,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy cb ra sb 
	{0x5b9d, &op_bcopy,	 13,   9,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy cb ra sp 
	{0x5c9d, &op_bcopy,	 13,   9,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy cb ra db 
	{0x5d9d, &op_bcopy,	 13,   9,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy cb ra cb 
	{0x5e9d, &op_bcopy,	 13,   9,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy cb ra pi 
	{0x5f9d, &op_bcopy,	 13,   9,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy cb ra <literal> 
	{0x50ad, &op_bcopy,	 13,  10,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy cb sb a 
	{0x51ad, &op_bcopy,	 13,  10,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy cb sb b 
	{0x52ad, &op_bcopy,	 13,  10,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy cb sb c 
	{0x53ad, &op_bcopy,	 13,  10,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy cb sb d 
	{0x54ad, &op_bcopy,	 13,  10,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy cb sb e 
	{0x55ad, &op_bcopy,	 13,  10,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy cb sb f 
	{0x56ad, &op_bcopy,	 13,  10,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy cb sb g 
	{0x57ad, &op_bcopy,	 13,  10,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy cb sb h 
	{0x58ad, &op_bcopy,	 13,  10,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy cb sb pc 
	{0x59ad, &op_bcopy,	 13,  10,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy cb sb ra 
	{0x5aad, &op_bcopy,	 13,  10,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy cb sb sb 
	{0x5bad, &op_bcopy,	 13,  10,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy cb sb sp 
	{0x5cad, &op_bcopy,	 13,  10,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy cb sb db 
	{0x5dad, &op_bcopy,	 13,  10,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy cb sb cb 
	{0x5ead, &op_bcopy,	 13,  10,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy cb sb pi 
	{0x5fad, &op_bcopy,	 13,  10,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy cb sb <literal> 
	{0x50bd, &op_bcopy,	 13,  11,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy cb sp a 
	{0x51bd, &op_bcopy,	 13,  11,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy cb sp b 
	{0x52bd, &op_bcopy,	 13,  11,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy cb sp c 
	{0x53bd, &op_bcopy,	 13,  11,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy cb sp d 
	{0x54bd, &op_bcopy,	 13,  11,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy cb sp e 
	{0x55bd, &op_bcopy,	 13,  11,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy cb sp f 
	{0x56bd, &op_bcopy,	 13,  11,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy cb sp g 
	{0x57bd, &op_bcopy,	 13,  11,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy cb sp h 
	{0x58bd, &op_bcopy,	 13,  11,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy cb sp pc 
	{0x59bd, &op_bcopy,	 13,  11,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy cb sp ra 
	{0x5abd, &op_bcopy,	 13,  11,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy cb sp sb 
	{0x5bbd, &op_bcopy,	 13,  11,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy cb sp sp 
	{0x5cbd, &op_bcopy,	 13,  11,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy cb sp db 
	{0x5dbd, &op_bcopy,	 13,  11,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy cb sp cb 
	{0x5ebd, &op_bcopy,	 13,  11,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy cb sp pi 
	{0x5fbd, &op_bcopy,	 13,  11,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy cb sp <literal> 
	{0x50cd, &op_bcopy,	 13,  12,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy cb db a 
	{0x51cd, &op_bcopy,	 13,  12,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy cb db b 
	{0x52cd, &op_bcopy,	 13,  12,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy cb db c 
	{0x53cd, &op_bcopy,	 13,  12,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy cb db d 
	{0x54cd, &op_bcopy,	 13,  12,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy cb db e 
	{0x55cd, &op_bcopy,	 13,  12,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy cb db f 
	{0x56cd, &op_bcopy,	 13,  12,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy cb db g 
	{0x57cd, &op_bcopy,	 13,  12,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy cb db h 
	{0x58cd, &op_bcopy,	 13,  12,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy cb db pc 
	{0x59cd, &op_bcopy,	 13,  12,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy cb db ra 
	{0x5acd, &op_bcopy,	 13,  12,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy cb db sb 
	{0x5bcd, &op_bcopy,	 13,  12,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy cb db sp 
	{0x5ccd, &op_bcopy,	 13,  12,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy cb db db 
	{0x5dcd, &op_bcopy,	 13,  12,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy cb db cb 
	{0x5ecd, &op_bcopy,	 13,  12,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy cb db pi 
	{0x5fcd, &op_bcopy,	 13,  12,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy cb db <literal> 
	{0x50dd, &op_bcopy,	 13,  13,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy cb cb a 
	{0x51dd, &op_bcopy,	 13,  13,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy cb cb b 
	{0x52dd, &op_bcopy,	 13,  13,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy cb cb c 
	{0x53dd, &op_bcopy,	 13,  13,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy cb cb d 
	{0x54dd, &op_bcopy,	 13,  13,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy cb cb e 
	{0x55dd, &op_bcopy,	 13,  13,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy cb cb f 
	{0x56dd, &op_bcopy,	 13,  13,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy cb cb g 
	{0x57dd, &op_bcopy,	 13,  13,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy cb cb h 
	{0x58dd, &op_bcopy,	 13,  13,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy cb cb pc 
	{0x59dd, &op_bcopy,	 13,  13,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy cb cb ra 
	{0x5add, &op_bcopy,	 13,  13,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy cb cb sb 
	{0x5bdd, &op_bcopy,	 13,  13,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy cb cb sp 
	{0x5cdd, &op_bcopy,	 13,  13,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy cb cb db 
	{0x5ddd, &op_bcopy,	 13,  13,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy cb cb cb 
	{0x5edd, &op_bcopy,	 13,  13,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy cb cb pi 
	{0x5fdd, &op_bcopy,	 13,  13,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy cb cb <literal> 
	{0x50ed, &op_bcopy,	 13,  14,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy cb pi a 
	{0x51ed, &op_bcopy,	 13,  14,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy cb pi b 
	{0x52ed, &op_bcopy,	 13,  14,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy cb pi c 
	{0x53ed, &op_bcopy,	 13,  14,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy cb pi d 
	{0x54ed, &op_bcopy,	 13,  14,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy cb pi e 
	{0x55ed, &op_bcopy,	 13,  14,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy cb pi f 
	{0x56ed, &op_bcopy,	 13,  14,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy cb pi g 
	{0x57ed, &op_bcopy,	 13,  14,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy cb pi h 
	{0x58ed, &op_bcopy,	 13,  14,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy cb pi pc 
	{0x59ed, &op_bcopy,	 13,  14,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy cb pi ra 
	{0x5aed, &op_bcopy,	 13,  14,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy cb pi sb 
	{0x5bed, &op_bcopy,	 13,  14,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy cb pi sp 
	{0x5ced, &op_bcopy,	 13,  14,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy cb pi db 
	{0x5ded, &op_bcopy,	 13,  14,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy cb pi cb 
	{0x5eed, &op_bcopy,	 13,  14,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy cb pi pi 
	{0x5fed, &op_bcopy,	 13,  14,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy cb pi <literal> 
	{0x50fd, &op_bcopy,	 13,  15,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy cb status a 
	{0x51fd, &op_bcopy,	 13,  15,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy cb status b 
	{0x52fd, &op_bcopy,	 13,  15,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy cb status c 
	{0x53fd, &op_bcopy,	 13,  15,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy cb status d 
	{0x54fd, &op_bcopy,	 13,  15,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy cb status e 
	{0x55fd, &op_bcopy,	 13,  15,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy cb status f 
	{0x56fd, &op_bcopy,	 13,  15,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy cb status g 
	{0x57fd, &op_bcopy,	 13,  15,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy cb status h 
	{0x58fd, &op_bcopy,	 13,  15,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy cb status pc 
	{0x59fd, &op_bcopy,	 13,  15,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy cb status ra 
	{0x5afd, &op_bcopy,	 13,  15,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy cb status sb 
	{0x5bfd, &op_bcopy,	 13,  15,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy cb status sp 
	{0x5cfd, &op_bcopy,	 13,  15,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy cb status db 
	{0x5dfd, &op_bcopy,	 13,  15,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy cb status cb 
	{0x5efd, &op_bcopy,	 13,  15,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy cb status pi 
	{0x5ffd, &op_bcopy,	 13,  15,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy cb status <literal> 
	{0x500e, &op_bcopy,	 14,   0,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy pi a a 
	{0x510e, &op_bcopy,	 14,   0,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy pi a b 
	{0x520e, &op_bcopy,	 14,   0,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy pi a c 
	{0x530e, &op_bcopy,	 14,   0,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy pi a d 
	{0x540e, &op_bcopy,	 14,   0,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy pi a e 
	{0x550e, &op_bcopy,	 14,   0,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy pi a f 
	{0x560e, &op_bcopy,	 14,   0,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy pi a g 
	{0x570e, &op_bcopy,	 14,   0,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy pi a h 
	{0x580e, &op_bcopy,	 14,   0,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy pi a pc 
	{0x590e, &op_bcopy,	 14,   0,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy pi a ra 
	{0x5a0e, &op_bcopy,	 14,   0,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy pi a sb 
	{0x5b0e, &op_bcopy,	 14,   0,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy pi a sp 
	{0x5c0e, &op_bcopy,	 14,   0,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy pi a db 
	{0x5d0e, &op_bcopy,	 14,   0,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy pi a cb 
	{0x5e0e, &op_bcopy,	 14,   0,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy pi a pi 
	{0x5f0e, &op_bcopy,	 14,   0,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy pi a <literal> 
	{0x501e, &op_bcopy,	 14,   1,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy pi b a 
	{0x511e, &op_bcopy,	 14,   1,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy pi b b 
	{0x521e, &op_bcopy,	 14,   1,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy pi b c 
	{0x531e, &op_bcopy,	 14,   1,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy pi b d 
	{0x541e, &op_bcopy,	 14,   1,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy pi b e 
	{0x551e, &op_bcopy,	 14,   1,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy pi b f 
	{0x561e, &op_bcopy,	 14,   1,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy pi b g 
	{0x571e, &op_bcopy,	 14,   1,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy pi b h 
	{0x581e, &op_bcopy,	 14,   1,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy pi b pc 
	{0x591e, &op_bcopy,	 14,   1,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy pi b ra 
	{0x5a1e, &op_bcopy,	 14,   1,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy pi b sb 
	{0x5b1e, &op_bcopy,	 14,   1,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy pi b sp 
	{0x5c1e, &op_bcopy,	 14,   1,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy pi b db 
	{0x5d1e, &op_bcopy,	 14,   1,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy pi b cb 
	{0x5e1e, &op_bcopy,	 14,   1,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy pi b pi 
	{0x5f1e, &op_bcopy,	 14,   1,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy pi b <literal> 
	{0x502e, &op_bcopy,	 14,   2,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy pi c a 
	{0x512e, &op_bcopy,	 14,   2,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy pi c b 
	{0x522e, &op_bcopy,	 14,   2,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy pi c c 
	{0x532e, &op_bcopy,	 14,   2,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy pi c d 
	{0x542e, &op_bcopy,	 14,   2,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy pi c e 
	{0x552e, &op_bcopy,	 14,   2,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy pi c f 
	{0x562e, &op_bcopy,	 14,   2,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy pi c g 
	{0x572e, &op_bcopy,	 14,   2,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy pi c h 
	{0x582e, &op_bcopy,	 14,   2,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy pi c pc 
	{0x592e, &op_bcopy,	 14,   2,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy pi c ra 
	{0x5a2e, &op_bcopy,	 14,   2,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy pi c sb 
	{0x5b2e, &op_bcopy,	 14,   2,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy pi c sp 
	{0x5c2e, &op_bcopy,	 14,   2,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy pi c db 
	{0x5d2e, &op_bcopy,	 14,   2,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy pi c cb 
	{0x5e2e, &op_bcopy,	 14,   2,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy pi c pi 
	{0x5f2e, &op_bcopy,	 14,   2,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy pi c <literal> 
	{0x503e, &op_bcopy,	 14,   3,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy pi d a 
	{0x513e, &op_bcopy,	 14,   3,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy pi d b 
	{0x523e, &op_bcopy,	 14,   3,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy pi d c 
	{0x533e, &op_bcopy,	 14,   3,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy pi d d 
	{0x543e, &op_bcopy,	 14,   3,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy pi d e 
	{0x553e, &op_bcopy,	 14,   3,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy pi d f 
	{0x563e, &op_bcopy,	 14,   3,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy pi d g 
	{0x573e, &op_bcopy,	 14,   3,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy pi d h 
	{0x583e, &op_bcopy,	 14,   3,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy pi d pc 
	{0x593e, &op_bcopy,	 14,   3,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy pi d ra 
	{0x5a3e, &op_bcopy,	 14,   3,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy pi d sb 
	{0x5b3e, &op_bcopy,	 14,   3,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy pi d sp 
	{0x5c3e, &op_bcopy,	 14,   3,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy pi d db 
	{0x5d3e, &op_bcopy,	 14,   3,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy pi d cb 
	{0x5e3e, &op_bcopy,	 14,   3,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy pi d pi 
	{0x5f3e, &op_bcopy,	 14,   3,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy pi d <literal> 
	{0x504e, &op_bcopy,	 14,   4,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy pi e a 
	{0x514e, &op_bcopy,	 14,   4,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy pi e b 
	{0x524e, &op_bcopy,	 14,   4,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy pi e c 
	{0x534e, &op_bcopy,	 14,   4,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy pi e d 
	{0x544e, &op_bcopy,	 14,   4,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy pi e e 
	{0x554e, &op_bcopy,	 14,   4,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy pi e f 
	{0x564e, &op_bcopy,	 14,   4,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy pi e g 
	{0x574e, &op_bcopy,	 14,   4,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy pi e h 
	{0x584e, &op_bcopy,	 14,   4,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy pi e pc 
	{0x594e, &op_bcopy,	 14,   4,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy pi e ra 
	{0x5a4e, &op_bcopy,	 14,   4,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy pi e sb 
	{0x5b4e, &op_bcopy,	 14,   4,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy pi e sp 
	{0x5c4e, &op_bcopy,	 14,   4,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy pi e db 
	{0x5d4e, &op_bcopy,	 14,   4,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy pi e cb 
	{0x5e4e, &op_bcopy,	 14,   4,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy pi e pi 
	{0x5f4e, &op_bcopy,	 14,   4,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy pi e <literal> 
	{0x505e, &op_bcopy,	 14,   5,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy pi f a 
	{0x515e, &op_bcopy,	 14,   5,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy pi f b 
	{0x525e, &op_bcopy,	 14,   5,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy pi f c 
	{0x535e, &op_bcopy,	 14,   5,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy pi f d 
	{0x545e, &op_bcopy,	 14,   5,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy pi f e 
	{0x555e, &op_bcopy,	 14,   5,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy pi f f 
	{0x565e, &op_bcopy,	 14,   5,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy pi f g 
	{0x575e, &op_bcopy,	 14,   5,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy pi f h 
	{0x585e, &op_bcopy,	 14,   5,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy pi f pc 
	{0x595e, &op_bcopy,	 14,   5,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy pi f ra 
	{0x5a5e, &op_bcopy,	 14,   5,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy pi f sb 
	{0x5b5e, &op_bcopy,	 14,   5,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy pi f sp 
	{0x5c5e, &op_bcopy,	 14,   5,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy pi f db 
	{0x5d5e, &op_bcopy,	 14,   5,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy pi f cb 
	{0x5e5e, &op_bcopy,	 14,   5,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy pi f pi 
	{0x5f5e, &op_bcopy,	 14,   5,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy pi f <literal> 
	{0x506e, &op_bcopy,	 14,   6,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy pi g a 
	{0x516e, &op_bcopy,	 14,   6,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy pi g b 
	{0x526e, &op_bcopy,	 14,   6,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy pi g c 
	{0x536e, &op_bcopy,	 14,   6,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy pi g d 
	{0x546e, &op_bcopy,	 14,   6,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy pi g e 
	{0x556e, &op_bcopy,	 14,   6,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy pi g f 
	{0x566e, &op_bcopy,	 14,   6,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy pi g g 
	{0x576e, &op_bcopy,	 14,   6,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy pi g h 
	{0x586e, &op_bcopy,	 14,   6,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy pi g pc 
	{0x596e, &op_bcopy,	 14,   6,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy pi g ra 
	{0x5a6e, &op_bcopy,	 14,   6,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy pi g sb 
	{0x5b6e, &op_bcopy,	 14,   6,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy pi g sp 
	{0x5c6e, &op_bcopy,	 14,   6,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy pi g db 
	{0x5d6e, &op_bcopy,	 14,   6,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy pi g cb 
	{0x5e6e, &op_bcopy,	 14,   6,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy pi g pi 
	{0x5f6e, &op_bcopy,	 14,   6,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy pi g <literal> 
	{0x507e, &op_bcopy,	 14,   7,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy pi h a 
	{0x517e, &op_bcopy,	 14,   7,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy pi h b 
	{0x527e, &op_bcopy,	 14,   7,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy pi h c 
	{0x537e, &op_bcopy,	 14,   7,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy pi h d 
	{0x547e, &op_bcopy,	 14,   7,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy pi h e 
	{0x557e, &op_bcopy,	 14,   7,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy pi h f 
	{0x567e, &op_bcopy,	 14,   7,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy pi h g 
	{0x577e, &op_bcopy,	 14,   7,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy pi h h 
	{0x587e, &op_bcopy,	 14,   7,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy pi h pc 
	{0x597e, &op_bcopy,	 14,   7,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy pi h ra 
	{0x5a7e, &op_bcopy,	 14,   7,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy pi h sb 
	{0x5b7e, &op_bcopy,	 14,   7,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy pi h sp 
	{0x5c7e, &op_bcopy,	 14,   7,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy pi h db 
	{0x5d7e, &op_bcopy,	 14,   7,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy pi h cb 
	{0x5e7e, &op_bcopy,	 14,   7,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy pi h pi 
	{0x5f7e, &op_bcopy,	 14,   7,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy pi h <literal> 
	{0x508e, &op_bcopy,	 14,   8,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy pi pc a 
	{0x518e, &op_bcopy,	 14,   8,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy pi pc b 
	{0x528e, &op_bcopy,	 14,   8,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy pi pc c 
	{0x538e, &op_bcopy,	 14,   8,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy pi pc d 
	{0x548e, &op_bcopy,	 14,   8,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy pi pc e 
	{0x558e, &op_bcopy,	 14,   8,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy pi pc f 
	{0x568e, &op_bcopy,	 14,   8,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy pi pc g 
	{0x578e, &op_bcopy,	 14,   8,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy pi pc h 
	{0x588e, &op_bcopy,	 14,   8,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy pi pc pc 
	{0x598e, &op_bcopy,	 14,   8,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy pi pc ra 
	{0x5a8e, &op_bcopy,	 14,   8,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy pi pc sb 
	{0x5b8e, &op_bcopy,	 14,   8,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy pi pc sp 
	{0x5c8e, &op_bcopy,	 14,   8,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy pi pc db 
	{0x5d8e, &op_bcopy,	 14,   8,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy pi pc cb 
	{0x5e8e, &op_bcopy,	 14,   8,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy pi pc pi 
	{0x5f8e, &op_bcopy,	 14,   8,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy pi pc <literal> 
	{0x509e, &op_bcopy,	 14,   9,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy pi ra a 
	{0x519e, &op_bcopy,	 14,   9,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy pi ra b 
	{0x529e, &op_bcopy,	 14,   9,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy pi ra c 
	{0x539e, &op_bcopy,	 14,   9,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy pi ra d 
	{0x549e, &op_bcopy,	 14,   9,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy pi ra e 
	{0x559e, &op_bcopy,	 14,   9,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy pi ra f 
	{0x569e, &op_bcopy,	 14,   9,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy pi ra g 
	{0x579e, &op_bcopy,	 14,   9,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy pi ra h 
	{0x589e, &op_bcopy,	 14,   9,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy pi ra pc 
	{0x599e, &op_bcopy,	 14,   9,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy pi ra ra 
	{0x5a9e, &op_bcopy,	 14,   9,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy pi ra sb 
	{0x5b9e, &op_bcopy,	 14,   9,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy pi ra sp 
	{0x5c9e, &op_bcopy,	 14,   9,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy pi ra db 
	{0x5d9e, &op_bcopy,	 14,   9,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy pi ra cb 
	{0x5e9e, &op_bcopy,	 14,   9,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy pi ra pi 
	{0x5f9e, &op_bcopy,	 14,   9,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy pi ra <literal> 
	{0x50ae, &op_bcopy,	 14,  10,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy pi sb a 
	{0x51ae, &op_bcopy,	 14,  10,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy pi sb b 
	{0x52ae, &op_bcopy,	 14,  10,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy pi sb c 
	{0x53ae, &op_bcopy,	 14,  10,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy pi sb d 
	{0x54ae, &op_bcopy,	 14,  10,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy pi sb e 
	{0x55ae, &op_bcopy,	 14,  10,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy pi sb f 
	{0x56ae, &op_bcopy,	 14,  10,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy pi sb g 
	{0x57ae, &op_bcopy,	 14,  10,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy pi sb h 
	{0x58ae, &op_bcopy,	 14,  10,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy pi sb pc 
	{0x59ae, &op_bcopy,	 14,  10,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy pi sb ra 
	{0x5aae, &op_bcopy,	 14,  10,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy pi sb sb 
	{0x5bae, &op_bcopy,	 14,  10,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy pi sb sp 
	{0x5cae, &op_bcopy,	 14,  10,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy pi sb db 
	{0x5dae, &op_bcopy,	 14,  10,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy pi sb cb 
	{0x5eae, &op_bcopy,	 14,  10,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy pi sb pi 
	{0x5fae, &op_bcopy,	 14,  10,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy pi sb <literal> 
	{0x50be, &op_bcopy,	 14,  11,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy pi sp a 
	{0x51be, &op_bcopy,	 14,  11,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy pi sp b 
	{0x52be, &op_bcopy,	 14,  11,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy pi sp c 
	{0x53be, &op_bcopy,	 14,  11,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy pi sp d 
	{0x54be, &op_bcopy,	 14,  11,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy pi sp e 
	{0x55be, &op_bcopy,	 14,  11,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy pi sp f 
	{0x56be, &op_bcopy,	 14,  11,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy pi sp g 
	{0x57be, &op_bcopy,	 14,  11,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy pi sp h 
	{0x58be, &op_bcopy,	 14,  11,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy pi sp pc 
	{0x59be, &op_bcopy,	 14,  11,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy pi sp ra 
	{0x5abe, &op_bcopy,	 14,  11,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy pi sp sb 
	{0x5bbe, &op_bcopy,	 14,  11,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy pi sp sp 
	{0x5cbe, &op_bcopy,	 14,  11,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy pi sp db 
	{0x5dbe, &op_bcopy,	 14,  11,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy pi sp cb 
	{0x5ebe, &op_bcopy,	 14,  11,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy pi sp pi 
	{0x5fbe, &op_bcopy,	 14,  11,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy pi sp <literal> 
	{0x50ce, &op_bcopy,	 14,  12,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy pi db a 
	{0x51ce, &op_bcopy,	 14,  12,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy pi db b 
	{0x52ce, &op_bcopy,	 14,  12,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy pi db c 
	{0x53ce, &op_bcopy,	 14,  12,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy pi db d 
	{0x54ce, &op_bcopy,	 14,  12,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy pi db e 
	{0x55ce, &op_bcopy,	 14,  12,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy pi db f 
	{0x56ce, &op_bcopy,	 14,  12,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy pi db g 
	{0x57ce, &op_bcopy,	 14,  12,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy pi db h 
	{0x58ce, &op_bcopy,	 14,  12,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy pi db pc 
	{0x59ce, &op_bcopy,	 14,  12,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy pi db ra 
	{0x5ace, &op_bcopy,	 14,  12,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy pi db sb 
	{0x5bce, &op_bcopy,	 14,  12,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy pi db sp 
	{0x5cce, &op_bcopy,	 14,  12,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy pi db db 
	{0x5dce, &op_bcopy,	 14,  12,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy pi db cb 
	{0x5ece, &op_bcopy,	 14,  12,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy pi db pi 
	{0x5fce, &op_bcopy,	 14,  12,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy pi db <literal> 
	{0x50de, &op_bcopy,	 14,  13,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy pi cb a 
	{0x51de, &op_bcopy,	 14,  13,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy pi cb b 
	{0x52de, &op_bcopy,	 14,  13,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy pi cb c 
	{0x53de, &op_bcopy,	 14,  13,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy pi cb d 
	{0x54de, &op_bcopy,	 14,  13,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy pi cb e 
	{0x55de, &op_bcopy,	 14,  13,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy pi cb f 
	{0x56de, &op_bcopy,	 14,  13,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy pi cb g 
	{0x57de, &op_bcopy,	 14,  13,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy pi cb h 
	{0x58de, &op_bcopy,	 14,  13,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy pi cb pc 
	{0x59de, &op_bcopy,	 14,  13,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy pi cb ra 
	{0x5ade, &op_bcopy,	 14,  13,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy pi cb sb 
	{0x5bde, &op_bcopy,	 14,  13,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy pi cb sp 
	{0x5cde, &op_bcopy,	 14,  13,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy pi cb db 
	{0x5dde, &op_bcopy,	 14,  13,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy pi cb cb 
	{0x5ede, &op_bcopy,	 14,  13,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy pi cb pi 
	{0x5fde, &op_bcopy,	 14,  13,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy pi cb <literal> 
	{0x50ee, &op_bcopy,	 14,  14,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy pi pi a 
	{0x51ee, &op_bcopy,	 14,  14,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy pi pi b 
	{0x52ee, &op_bcopy,	 14,  14,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy pi pi c 
	{0x53ee, &op_bcopy,	 14,  14,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy pi pi d 
	{0x54ee, &op_bcopy,	 14,  14,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy pi pi e 
	{0x55ee, &op_bcopy,	 14,  14,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy pi pi f 
	{0x56ee, &op_bcopy,	 14,  14,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy pi pi g 
	{0x57ee, &op_bcopy,	 14,  14,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy pi pi h 
	{0x58ee, &op_bcopy,	 14,  14,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy pi pi pc 
	{0x59ee, &op_bcopy,	 14,  14,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy pi pi ra 
	{0x5aee, &op_bcopy,	 14,  14,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy pi pi sb 
	{0x5bee, &op_bcopy,	 14,  14,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy pi pi sp 
	{0x5cee, &op_bcopy,	 14,  14,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy pi pi db 
	{0x5dee, &op_bcopy,	 14,  14,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy pi pi cb 
	{0x5eee, &op_bcopy,	 14,  14,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy pi pi pi 
	{0x5fee, &op_bcopy,	 14,  14,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy pi pi <literal> 
	{0x50fe, &op_bcopy,	 14,  15,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy pi status a 
	{0x51fe, &op_bcopy,	 14,  15,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy pi status b 
	{0x52fe, &op_bcopy,	 14,  15,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy pi status c 
	{0x53fe, &op_bcopy,	 14,  15,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy pi status d 
	{0x54fe, &op_bcopy,	 14,  15,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy pi status e 
	{0x55fe, &op_bcopy,	 14,  15,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy pi status f 
	{0x56fe, &op_bcopy,	 14,  15,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy pi status g 
	{0x57fe, &op_bcopy,	 14,  15,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy pi status h 
	{0x58fe, &op_bcopy,	 14,  15,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy pi status pc 
	{0x59fe, &op_bcopy,	 14,  15,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy pi status ra 
	{0x5afe, &op_bcopy,	 14,  15,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy pi status sb 
	{0x5bfe, &op_bcopy,	 14,  15,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy pi status sp 
	{0x5cfe, &op_bcopy,	 14,  15,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy pi status db 
	{0x5dfe, &op_bcopy,	 14,  15,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy pi status cb 
	{0x5efe, &op_bcopy,	 14,  15,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy pi status pi 
	{0x5ffe, &op_bcopy,	 14,  15,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy pi status <literal> 
	{0x500f, &op_bcopy,	 15,   0,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy status a a 
	{0x510f, &op_bcopy,	 15,   0,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy status a b 
	{0x520f, &op_bcopy,	 15,   0,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy status a c 
	{0x530f, &op_bcopy,	 15,   0,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy status a d 
	{0x540f, &op_bcopy,	 15,   0,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy status a e 
	{0x550f, &op_bcopy,	 15,   0,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy status a f 
	{0x560f, &op_bcopy,	 15,   0,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy status a g 
	{0x570f, &op_bcopy,	 15,   0,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy status a h 
	{0x580f, &op_bcopy,	 15,   0,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy status a pc 
	{0x590f, &op_bcopy,	 15,   0,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy status a ra 
	{0x5a0f, &op_bcopy,	 15,   0,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy status a sb 
	{0x5b0f, &op_bcopy,	 15,   0,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy status a sp 
	{0x5c0f, &op_bcopy,	 15,   0,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy status a db 
	{0x5d0f, &op_bcopy,	 15,   0,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy status a cb 
	{0x5e0f, &op_bcopy,	 15,   0,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy status a pi 
	{0x5f0f, &op_bcopy,	 15,   0,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy status a <literal> 
	{0x501f, &op_bcopy,	 15,   1,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy status b a 
	{0x511f, &op_bcopy,	 15,   1,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy status b b 
	{0x521f, &op_bcopy,	 15,   1,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy status b c 
	{0x531f, &op_bcopy,	 15,   1,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy status b d 
	{0x541f, &op_bcopy,	 15,   1,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy status b e 
	{0x551f, &op_bcopy,	 15,   1,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy status b f 
	{0x561f, &op_bcopy,	 15,   1,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy status b g 
	{0x571f, &op_bcopy,	 15,   1,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy status b h 
	{0x581f, &op_bcopy,	 15,   1,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy status b pc 
	{0x591f, &op_bcopy,	 15,   1,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy status b ra 
	{0x5a1f, &op_bcopy,	 15,   1,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy status b sb 
	{0x5b1f, &op_bcopy,	 15,   1,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy status b sp 
	{0x5c1f, &op_bcopy,	 15,   1,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy status b db 
	{0x5d1f, &op_bcopy,	 15,   1,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy status b cb 
	{0x5e1f, &op_bcopy,	 15,   1,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy status b pi 
	{0x5f1f, &op_bcopy,	 15,   1,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy status b <literal> 
	{0x502f, &op_bcopy,	 15,   2,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy status c a 
	{0x512f, &op_bcopy,	 15,   2,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy status c b 
	{0x522f, &op_bcopy,	 15,   2,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy status c c 
	{0x532f, &op_bcopy,	 15,   2,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy status c d 
	{0x542f, &op_bcopy,	 15,   2,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy status c e 
	{0x552f, &op_bcopy,	 15,   2,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy status c f 
	{0x562f, &op_bcopy,	 15,   2,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy status c g 
	{0x572f, &op_bcopy,	 15,   2,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy status c h 
	{0x582f, &op_bcopy,	 15,   2,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy status c pc 
	{0x592f, &op_bcopy,	 15,   2,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy status c ra 
	{0x5a2f, &op_bcopy,	 15,   2,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy status c sb 
	{0x5b2f, &op_bcopy,	 15,   2,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy status c sp 
	{0x5c2f, &op_bcopy,	 15,   2,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy status c db 
	{0x5d2f, &op_bcopy,	 15,   2,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy status c cb 
	{0x5e2f, &op_bcopy,	 15,   2,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy status c pi 
	{0x5f2f, &op_bcopy,	 15,   2,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy status c <literal> 
	{0x503f, &op_bcopy,	 15,   3,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy status d a 
	{0x513f, &op_bcopy,	 15,   3,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy status d b 
	{0x523f, &op_bcopy,	 15,   3,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy status d c 
	{0x533f, &op_bcopy,	 15,   3,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy status d d 
	{0x543f, &op_bcopy,	 15,   3,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy status d e 
	{0x553f, &op_bcopy,	 15,   3,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy status d f 
	{0x563f, &op_bcopy,	 15,   3,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy status d g 
	{0x573f, &op_bcopy,	 15,   3,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy status d h 
	{0x583f, &op_bcopy,	 15,   3,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy status d pc 
	{0x593f, &op_bcopy,	 15,   3,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy status d ra 
	{0x5a3f, &op_bcopy,	 15,   3,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy status d sb 
	{0x5b3f, &op_bcopy,	 15,   3,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy status d sp 
	{0x5c3f, &op_bcopy,	 15,   3,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy status d db 
	{0x5d3f, &op_bcopy,	 15,   3,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy status d cb 
	{0x5e3f, &op_bcopy,	 15,   3,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy status d pi 
	{0x5f3f, &op_bcopy,	 15,   3,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy status d <literal> 
	{0x504f, &op_bcopy,	 15,   4,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy status e a 
	{0x514f, &op_bcopy,	 15,   4,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy status e b 
	{0x524f, &op_bcopy,	 15,   4,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy status e c 
	{0x534f, &op_bcopy,	 15,   4,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy status e d 
	{0x544f, &op_bcopy,	 15,   4,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy status e e 
	{0x554f, &op_bcopy,	 15,   4,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy status e f 
	{0x564f, &op_bcopy,	 15,   4,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy status e g 
	{0x574f, &op_bcopy,	 15,   4,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy status e h 
	{0x584f, &op_bcopy,	 15,   4,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy status e pc 
	{0x594f, &op_bcopy,	 15,   4,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy status e ra 
	{0x5a4f, &op_bcopy,	 15,   4,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy status e sb 
	{0x5b4f, &op_bcopy,	 15,   4,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy status e sp 
	{0x5c4f, &op_bcopy,	 15,   4,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy status e db 
	{0x5d4f, &op_bcopy,	 15,   4,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy status e cb 
	{0x5e4f, &op_bcopy,	 15,   4,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy status e pi 
	{0x5f4f, &op_bcopy,	 15,   4,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy status e <literal> 
	{0x505f, &op_bcopy,	 15,   5,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy status f a 
	{0x515f, &op_bcopy,	 15,   5,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy status f b 
	{0x525f, &op_bcopy,	 15,   5,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy status f c 
	{0x535f, &op_bcopy,	 15,   5,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy status f d 
	{0x545f, &op_bcopy,	 15,   5,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy status f e 
	{0x555f, &op_bcopy,	 15,   5,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy status f f 
	{0x565f, &op_bcopy,	 15,   5,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy status f g 
	{0x575f, &op_bcopy,	 15,   5,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy status f h 
	{0x585f, &op_bcopy,	 15,   5,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy status f pc 
	{0x595f, &op_bcopy,	 15,   5,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy status f ra 
	{0x5a5f, &op_bcopy,	 15,   5,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy status f sb 
	{0x5b5f, &op_bcopy,	 15,   5,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy status f sp 
	{0x5c5f, &op_bcopy,	 15,   5,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy status f db 
	{0x5d5f, &op_bcopy,	 15,   5,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy status f cb 
	{0x5e5f, &op_bcopy,	 15,   5,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy status f pi 
	{0x5f5f, &op_bcopy,	 15,   5,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy status f <literal> 
	{0x506f, &op_bcopy,	 15,   6,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy status g a 
	{0x516f, &op_bcopy,	 15,   6,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy status g b 
	{0x526f, &op_bcopy,	 15,   6,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy status g c 
	{0x536f, &op_bcopy,	 15,   6,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy status g d 
	{0x546f, &op_bcopy,	 15,   6,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy status g e 
	{0x556f, &op_bcopy,	 15,   6,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy status g f 
	{0x566f, &op_bcopy,	 15,   6,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy status g g 
	{0x576f, &op_bcopy,	 15,   6,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy status g h 
	{0x586f, &op_bcopy,	 15,   6,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy status g pc 
	{0x596f, &op_bcopy,	 15,   6,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy status g ra 
	{0x5a6f, &op_bcopy,	 15,   6,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy status g sb 
	{0x5b6f, &op_bcopy,	 15,   6,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy status g sp 
	{0x5c6f, &op_bcopy,	 15,   6,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy status g db 
	{0x5d6f, &op_bcopy,	 15,   6,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy status g cb 
	{0x5e6f, &op_bcopy,	 15,   6,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy status g pi 
	{0x5f6f, &op_bcopy,	 15,   6,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy status g <literal> 
	{0x507f, &op_bcopy,	 15,   7,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy status h a 
	{0x517f, &op_bcopy,	 15,   7,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy status h b 
	{0x527f, &op_bcopy,	 15,   7,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy status h c 
	{0x537f, &op_bcopy,	 15,   7,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy status h d 
	{0x547f, &op_bcopy,	 15,   7,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy status h e 
	{0x557f, &op_bcopy,	 15,   7,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy status h f 
	{0x567f, &op_bcopy,	 15,   7,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy status h g 
	{0x577f, &op_bcopy,	 15,   7,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy status h h 
	{0x587f, &op_bcopy,	 15,   7,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy status h pc 
	{0x597f, &op_bcopy,	 15,   7,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy status h ra 
	{0x5a7f, &op_bcopy,	 15,   7,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy status h sb 
	{0x5b7f, &op_bcopy,	 15,   7,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy status h sp 
	{0x5c7f, &op_bcopy,	 15,   7,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy status h db 
	{0x5d7f, &op_bcopy,	 15,   7,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy status h cb 
	{0x5e7f, &op_bcopy,	 15,   7,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy status h pi 
	{0x5f7f, &op_bcopy,	 15,   7,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy status h <literal> 
	{0x508f, &op_bcopy,	 15,   8,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy status pc a 
	{0x518f, &op_bcopy,	 15,   8,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy status pc b 
	{0x528f, &op_bcopy,	 15,   8,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy status pc c 
	{0x538f, &op_bcopy,	 15,   8,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy status pc d 
	{0x548f, &op_bcopy,	 15,   8,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy status pc e 
	{0x558f, &op_bcopy,	 15,   8,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy status pc f 
	{0x568f, &op_bcopy,	 15,   8,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy status pc g 
	{0x578f, &op_bcopy,	 15,   8,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy status pc h 
	{0x588f, &op_bcopy,	 15,   8,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy status pc pc 
	{0x598f, &op_bcopy,	 15,   8,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy status pc ra 
	{0x5a8f, &op_bcopy,	 15,   8,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy status pc sb 
	{0x5b8f, &op_bcopy,	 15,   8,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy status pc sp 
	{0x5c8f, &op_bcopy,	 15,   8,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy status pc db 
	{0x5d8f, &op_bcopy,	 15,   8,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy status pc cb 
	{0x5e8f, &op_bcopy,	 15,   8,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy status pc pi 
	{0x5f8f, &op_bcopy,	 15,   8,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy status pc <literal> 
	{0x509f, &op_bcopy,	 15,   9,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy status ra a 
	{0x519f, &op_bcopy,	 15,   9,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy status ra b 
	{0x529f, &op_bcopy,	 15,   9,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy status ra c 
	{0x539f, &op_bcopy,	 15,   9,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy status ra d 
	{0x549f, &op_bcopy,	 15,   9,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy status ra e 
	{0x559f, &op_bcopy,	 15,   9,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy status ra f 
	{0x569f, &op_bcopy,	 15,   9,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy status ra g 
	{0x579f, &op_bcopy,	 15,   9,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy status ra h 
	{0x589f, &op_bcopy,	 15,   9,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy status ra pc 
	{0x599f, &op_bcopy,	 15,   9,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy status ra ra 
	{0x5a9f, &op_bcopy,	 15,   9,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy status ra sb 
	{0x5b9f, &op_bcopy,	 15,   9,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy status ra sp 
	{0x5c9f, &op_bcopy,	 15,   9,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy status ra db 
	{0x5d9f, &op_bcopy,	 15,   9,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy status ra cb 
	{0x5e9f, &op_bcopy,	 15,   9,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy status ra pi 
	{0x5f9f, &op_bcopy,	 15,   9,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy status ra <literal> 
	{0x50af, &op_bcopy,	 15,  10,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy status sb a 
	{0x51af, &op_bcopy,	 15,  10,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy status sb b 
	{0x52af, &op_bcopy,	 15,  10,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy status sb c 
	{0x53af, &op_bcopy,	 15,  10,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy status sb d 
	{0x54af, &op_bcopy,	 15,  10,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy status sb e 
	{0x55af, &op_bcopy,	 15,  10,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy status sb f 
	{0x56af, &op_bcopy,	 15,  10,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy status sb g 
	{0x57af, &op_bcopy,	 15,  10,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy status sb h 
	{0x58af, &op_bcopy,	 15,  10,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy status sb pc 
	{0x59af, &op_bcopy,	 15,  10,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy status sb ra 
	{0x5aaf, &op_bcopy,	 15,  10,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy status sb sb 
	{0x5baf, &op_bcopy,	 15,  10,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy status sb sp 
	{0x5caf, &op_bcopy,	 15,  10,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy status sb db 
	{0x5daf, &op_bcopy,	 15,  10,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy status sb cb 
	{0x5eaf, &op_bcopy,	 15,  10,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy status sb pi 
	{0x5faf, &op_bcopy,	 15,  10,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy status sb <literal> 
	{0x50bf, &op_bcopy,	 15,  11,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy status sp a 
	{0x51bf, &op_bcopy,	 15,  11,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy status sp b 
	{0x52bf, &op_bcopy,	 15,  11,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy status sp c 
	{0x53bf, &op_bcopy,	 15,  11,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy status sp d 
	{0x54bf, &op_bcopy,	 15,  11,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy status sp e 
	{0x55bf, &op_bcopy,	 15,  11,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy status sp f 
	{0x56bf, &op_bcopy,	 15,  11,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy status sp g 
	{0x57bf, &op_bcopy,	 15,  11,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy status sp h 
	{0x58bf, &op_bcopy,	 15,  11,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy status sp pc 
	{0x59bf, &op_bcopy,	 15,  11,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy status sp ra 
	{0x5abf, &op_bcopy,	 15,  11,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy status sp sb 
	{0x5bbf, &op_bcopy,	 15,  11,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy status sp sp 
	{0x5cbf, &op_bcopy,	 15,  11,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy status sp db 
	{0x5dbf, &op_bcopy,	 15,  11,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy status sp cb 
	{0x5ebf, &op_bcopy,	 15,  11,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy status sp pi 
	{0x5fbf, &op_bcopy,	 15,  11,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy status sp <literal> 
	{0x50cf, &op_bcopy,	 15,  12,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy status db a 
	{0x51cf, &op_bcopy,	 15,  12,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy status db b 
	{0x52cf, &op_bcopy,	 15,  12,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy status db c 
	{0x53cf, &op_bcopy,	 15,  12,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy status db d 
	{0x54cf, &op_bcopy,	 15,  12,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy status db e 
	{0x55cf, &op_bcopy,	 15,  12,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy status db f 
	{0x56cf, &op_bcopy,	 15,  12,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy status db g 
	{0x57cf, &op_bcopy,	 15,  12,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy status db h 
	{0x58cf, &op_bcopy,	 15,  12,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy status db pc 
	{0x59cf, &op_bcopy,	 15,  12,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy status db ra 
	{0x5acf, &op_bcopy,	 15,  12,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy status db sb 
	{0x5bcf, &op_bcopy,	 15,  12,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy status db sp 
	{0x5ccf, &op_bcopy,	 15,  12,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy status db db 
	{0x5dcf, &op_bcopy,	 15,  12,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy status db cb 
	{0x5ecf, &op_bcopy,	 15,  12,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy status db pi 
	{0x5fcf, &op_bcopy,	 15,  12,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy status db <literal> 
	{0x50df, &op_bcopy,	 15,  13,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy status cb a 
	{0x51df, &op_bcopy,	 15,  13,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy status cb b 
	{0x52df, &op_bcopy,	 15,  13,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy status cb c 
	{0x53df, &op_bcopy,	 15,  13,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy status cb d 
	{0x54df, &op_bcopy,	 15,  13,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy status cb e 
	{0x55df, &op_bcopy,	 15,  13,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy status cb f 
	{0x56df, &op_bcopy,	 15,  13,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy status cb g 
	{0x57df, &op_bcopy,	 15,  13,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy status cb h 
	{0x58df, &op_bcopy,	 15,  13,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy status cb pc 
	{0x59df, &op_bcopy,	 15,  13,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy status cb ra 
	{0x5adf, &op_bcopy,	 15,  13,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy status cb sb 
	{0x5bdf, &op_bcopy,	 15,  13,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy status cb sp 
	{0x5cdf, &op_bcopy,	 15,  13,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy status cb db 
	{0x5ddf, &op_bcopy,	 15,  13,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy status cb cb 
	{0x5edf, &op_bcopy,	 15,  13,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy status cb pi 
	{0x5fdf, &op_bcopy,	 15,  13,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy status cb <literal> 
	{0x50ef, &op_bcopy,	 15,  14,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy status pi a 
	{0x51ef, &op_bcopy,	 15,  14,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy status pi b 
	{0x52ef, &op_bcopy,	 15,  14,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy status pi c 
	{0x53ef, &op_bcopy,	 15,  14,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy status pi d 
	{0x54ef, &op_bcopy,	 15,  14,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy status pi e 
	{0x55ef, &op_bcopy,	 15,  14,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy status pi f 
	{0x56ef, &op_bcopy,	 15,  14,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy status pi g 
	{0x57ef, &op_bcopy,	 15,  14,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy status pi h 
	{0x58ef, &op_bcopy,	 15,  14,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy status pi pc 
	{0x59ef, &op_bcopy,	 15,  14,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy status pi ra 
	{0x5aef, &op_bcopy,	 15,  14,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy status pi sb 
	{0x5bef, &op_bcopy,	 15,  14,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy status pi sp 
	{0x5cef, &op_bcopy,	 15,  14,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy status pi db 
	{0x5def, &op_bcopy,	 15,  14,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy status pi cb 
	{0x5eef, &op_bcopy,	 15,  14,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy status pi pi 
	{0x5fef, &op_bcopy,	 15,  14,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy status pi <literal> 
	{0x50ff, &op_bcopy,	 15,  15,   0, 0xff, 0x00, 0x00, 0x00}, // bcopy status status a 
	{0x51ff, &op_bcopy,	 15,  15,   1, 0xff, 0x00, 0x00, 0x00}, // bcopy status status b 
	{0x52ff, &op_bcopy,	 15,  15,   2, 0xff, 0x00, 0x00, 0x00}, // bcopy status status c 
	{0x53ff, &op_bcopy,	 15,  15,   3, 0xff, 0x00, 0x00, 0x00}, // bcopy status status d 
	{0x54ff, &op_bcopy,	 15,  15,   4, 0xff, 0x00, 0x00, 0x00}, // bcopy status status e 
	{0x55ff, &op_bcopy,	 15,  15,   5, 0xff, 0x00, 0x00, 0x00}, // bcopy status status f 
	{0x56ff, &op_bcopy,	 15,  15,   6, 0xff, 0x00, 0x00, 0x00}, // bcopy status status g 
	{0x57ff, &op_bcopy,	 15,  15,   7, 0xff, 0x00, 0x00, 0x00}, // bcopy status status h 
	{0x58ff, &op_bcopy,	 15,  15,   8, 0xff, 0x00, 0x00, 0x00}, // bcopy status status pc 
	{0x59ff, &op_bcopy,	 15,  15,   9, 0xff, 0x00, 0x00, 0x00}, // bcopy status status ra 
	{0x5aff, &op_bcopy,	 15,  15,  10, 0xff, 0x00, 0x00, 0x00}, // bcopy status status sb 
	{0x5bff, &op_bcopy,	 15,  15,  11, 0xff, 0x00, 0x00, 0x00}, // bcopy status status sp 
	{0x5cff, &op_bcopy,	 15,  15,  12, 0xff, 0x00, 0x00, 0x00}, // bcopy status status db 
	{0x5dff, &op_bcopy,	 15,  15,  13, 0xff, 0x00, 0x00, 0x00}, // bcopy status status cb 
	{0x5eff, &op_bcopy,	 15,  15,  14, 0xff, 0x00, 0x00, 0x00}, // bcopy status status pi 
	{0x5fff, &op_bcopy,	 15,  15,   8, 0xff, 0x00, 0x04, 0x00}, // bcopy status status <literal> 
	{0x7000, &op_bfill,	  0,   0,   0, 0xff, 0x00, 0x00, 0x00}, // bfill a a a 
	{0x7100, &op_bfill,	  0,   0,   1, 0xff, 0x00, 0x00, 0x00}, // bfill a a b 
	{0x7200, &op_bfill,	  0,   0,   2, 0xff, 0x00, 0x00, 0x00}, // bfill a a c 
	{0x7300, &op_bfill,	  0,   0,   3, 0xff, 0x00, 0x00, 0x00}, // bfill a a d 
	{0x7400, &op_bfill,	  0,   0,   4, 0xff, 0x00, 0x00, 0x00}, // bfill a a e 
	{0x7500, &op_bfill,	  0,   0,   5, 0xff, 0x00, 0x00, 0x00}, // bfill a a f 
	{0x7600, &op_bfill,	  0,   0,   6, 0xff, 0x00, 0x00, 0x00}, // bfill a a g 
	{0x7700, &op_bfill,	  0,   0,   7, 0xff, 0x00, 0x00, 0x00}, // bfill a a h 
	{0x7800, &op_bfill,	  0,   0,   8, 0xff, 0x00, 0x00, 0x00}, // bfill a a pc 
	{0x7900, &op_bfill,	  0,   0,   9, 0xff, 0x00, 0x00, 0x00}, // bfill a a ra 
	{0x7a00, &op_bfill,	  0,   0,  10, 0xff, 0x00, 0x00, 0x00}, // bfill a a sb 
	{0x7b00, &op_bfill,	  0,   0,  11, 0xff, 0x00, 0x00, 0x00}, // bfill a a sp 
	{0x7c00, &op_bfill,	  0,   0,  12, 0xff, 0x00, 0x00, 0x00}, // bfill a a db 
	{0x7d00, &op_bfill,	  0,   0,  13, 0xff, 0x00, 0x00, 0x00}, // bfill a a cb 
	{0x7e00, &op_bfill,	  0,   0,  14, 0xff, 0x00, 0x00, 0x00}, // bfill a a pi 
	{0x7f00, &op_bfill,	  0,   0,   8, 0xff, 0x00, 0x04, 0x00}, // bfill a a <literal> 
	{0x7010, &op_bfill,	  0,   1,   0, 0xff, 0x00, 0x00, 0x00}, // bfill a b a 
	{0x7110, &op_bfill,	  0,   1,   1, 0xff, 0x00, 0x00, 0x00}, // bfill a b b 
	{0x7210, &op_bfill,	  0,   1,   2, 0xff, 0x00, 0x00, 0x00}, // bfill a b c 
	{0x7310, &op_bfill,	  0,   1,   3, 0xff, 0x00, 0x00, 0x00}, // bfill a b d 
	{0x7410, &op_bfill,	  0,   1,   4, 0xff, 0x00, 0x00, 0x00}, // bfill a b e 
	{0x7510, &op_bfill,	  0,   1,   5, 0xff, 0x00, 0x00, 0x00}, // bfill a b f 
	{0x7610, &op_bfill,	  0,   1,   6, 0xff, 0x00, 0x00, 0x00}, // bfill a b g 
	{0x7710, &op_bfill,	  0,   1,   7, 0xff, 0x00, 0x00, 0x00}, // bfill a b h 
	{0x7810, &op_bfill,	  0,   1,   8, 0xff, 0x00, 0x00, 0x00}, // bfill a b pc 
	{0x7910, &op_bfill,	  0,   1,   9, 0xff, 0x00, 0x00, 0x00}, // bfill a b ra 
	{0x7a10, &op_bfill,	  0,   1,  10, 0xff, 0x00, 0x00, 0x00}, // bfill a b sb 
	{0x7b10, &op_bfill,	  0,   1,  11, 0xff, 0x00, 0x00, 0x00}, // bfill a b sp 
	{0x7c10, &op_bfill,	  0,   1,  12, 0xff, 0x00, 0x00, 0x00}, // bfill a b db 
	{0x7d10, &op_bfill,	  0,   1,  13, 0xff, 0x00, 0x00, 0x00}, // bfill a b cb 
	{0x7e10, &op_bfill,	  0,   1,  14, 0xff, 0x00, 0x00, 0x00}, // bfill a b pi 
	{0x7f10, &op_bfill,	  0,   1,   8, 0xff, 0x00, 0x04, 0x00}, // bfill a b <literal> 
	{0x7020, &op_bfill,	  0,   2,   0, 0xff, 0x00, 0x00, 0x00}, // bfill a c a 
	{0x7120, &op_bfill,	  0,   2,   1, 0xff, 0x00, 0x00, 0x00}, // bfill a c b 
	{0x7220, &op_bfill,	  0,   2,   2, 0xff, 0x00, 0x00, 0x00}, // bfill a c c 
	{0x7320, &op_bfill,	  0,   2,   3, 0xff, 0x00, 0x00, 0x00}, // bfill a c d 
	{0x7420, &op_bfill,	  0,   2,   4, 0xff, 0x00, 0x00, 0x00}, // bfill a c e 
	{0x7520, &op_bfill,	  0,   2,   5, 0xff, 0x00, 0x00, 0x00}, // bfill a c f 
	{0x7620, &op_bfill,	  0,   2,   6, 0xff, 0x00, 0x00, 0x00}, // bfill a c g 
	{0x7720, &op_bfill,	  0,   2,   7, 0xff, 0x00, 0x00, 0x00}, // bfill a c h 
	{0x7820, &op_bfill,	  0,   2,   8, 0xff, 0x00, 0x00, 0x00}, // bfill a c pc 
	{0x7920, &op_bfill,	  0,   2,   9, 0xff, 0x00, 0x00, 0x00}, // bfill a c ra 
	{0x7a20, &op_bfill,	  0,   2,  10, 0xff, 0x00, 0x00, 0x00}, // bfill a c sb 
	{0x7b20, &op_bfill,	  0,   2,  11, 0xff, 0x00, 0x00, 0x00}, // bfill a c sp 
	{0x7c20, &op_bfill,	  0,   2,  12, 0xff, 0x00, 0x00, 0x00}, // bfill a c db 
	{0x7d20, &op_bfill,	  0,   2,  13, 0xff, 0x00, 0x00, 0x00}, // bfill a c cb 
	{0x7e20, &op_bfill,	  0,   2,  14, 0xff, 0x00, 0x00, 0x00}, // bfill a c pi 
	{0x7f20, &op_bfill,	  0,   2,   8, 0xff, 0x00, 0x04, 0x00}, // bfill a c <literal> 
	{0x7030, &op_bfill,	  0,   3,   0, 0xff, 0x00, 0x00, 0x00}, // bfill a d a 
	{0x7130, &op_bfill,	  0,   3,   1, 0xff, 0x00, 0x00, 0x00}, // bfill a d b 
	{0x7230, &op_bfill,	  0,   3,   2, 0xff, 0x00, 0x00, 0x00}, // bfill a d c 
	{0x7330, &op_bfill,	  0,   3,   3, 0xff, 0x00, 0x00, 0x00}, // bfill a d d 
	{0x7430, &op_bfill,	  0,   3,   4, 0xff, 0x00, 0x00, 0x00}, // bfill a d e 
	{0x7530, &op_bfill,	  0,   3,   5, 0xff, 0x00, 0x00, 0x00}, // bfill a d f 
	{0x7630, &op_bfill,	  0,   3,   6, 0xff, 0x00, 0x00, 0x00}, // bfill a d g 
	{0x7730, &op_bfill,	  0,   3,   7, 0xff, 0x00, 0x00, 0x00}, // bfill a d h 
	{0x7830, &op_bfill,	  0,   3,   8, 0xff, 0x00, 0x00, 0x00}, // bfill a d pc 
	{0x7930, &op_bfill,	  0,   3,   9, 0xff, 0x00, 0x00, 0x00}, // bfill a d ra 
	{0x7a30, &op_bfill,	  0,   3,  10, 0xff, 0x00, 0x00, 0x00}, // bfill a d sb 
	{0x7b30, &op_bfill,	  0,   3,  11, 0xff, 0x00, 0x00, 0x00}, // bfill a d sp 
	{0x7c30, &op_bfill,	  0,   3,  12, 0xff, 0x00, 0x00, 0x00}, // bfill a d db 
	{0x7d30, &op_bfill,	  0,   3,  13, 0xff, 0x00, 0x00, 0x00}, // bfill a d cb 
	{0x7e30, &op_bfill,	  0,   3,  14, 0xff, 0x00, 0x00, 0x00}, // bfill a d pi 
	{0x7f30, &op_bfill,	  0,   3,   8, 0xff, 0x00, 0x04, 0x00}, // bfill a d <literal> 
	{0x7040, &op_bfill,	  0,   4,   0, 0xff, 0x00, 0x00, 0x00}, // bfill a e a 
	{0x7140, &op_bfill,	  0,   4,   1, 0xff, 0x00, 0x00, 0x00}, // bfill a e b 
	{0x7240, &op_bfill,	  0,   4,   2, 0xff, 0x00, 0x00, 0x00}, // bfill a e c 
	{0x7340, &op_bfill,	  0,   4,   3, 0xff, 0x00, 0x00, 0x00}, // bfill a e d 
	{0x7440, &op_bfill,	  0,   4,   4, 0xff, 0x00, 0x00, 0x00}, // bfill a e e 
	{0x7540, &op_bfill,	  0,   4,   5, 0xff, 0x00, 0x00, 0x00}, // bfill a e f 
	{0x7640, &op_bfill,	  0,   4,   6, 0xff, 0x00, 0x00, 0x00}, // bfill a e g 
	{0x7740, &op_bfill,	  0,   4,   7, 0xff, 0x00, 0x00, 0x00}, // bfill a e h 
	{0x7840, &op_bfill,	  0,   4,   8, 0xff, 0x00, 0x00, 0x00}, // bfill a e pc 
	{0x7940, &op_bfill,	  0,   4,   9, 0xff, 0x00, 0x00, 0x00}, // bfill a e ra 
	{0x7a40, &op_bfill,	  0,   4,  10, 0xff, 0x00, 0x00, 0x00}, // bfill a e sb 
	{0x7b40, &op_bfill,	  0,   4,  11, 0xff, 0x00, 0x00, 0x00}, // bfill a e sp 
	{0x7c40, &op_bfill,	  0,   4,  12, 0xff, 0x00, 0x00, 0x00}, // bfill a e db 
	{0x7d40, &op_bfill,	  0,   4,  13, 0xff, 0x00, 0x00, 0x00}, // bfill a e cb 
	{0x7e40, &op_bfill,	  0,   4,  14, 0xff, 0x00, 0x00, 0x00}, // bfill a e pi 
	{0x7f40, &op_bfill,	  0,   4,   8, 0xff, 0x00, 0x04, 0x00}, // bfill a e <literal> 
	{0x7050, &op_bfill,	  0,   5,   0, 0xff, 0x00, 0x00, 0x00}, // bfill a f a 
	{0x7150, &op_bfill,	  0,   5,   1, 0xff, 0x00, 0x00, 0x00}, // bfill a f b 
	{0x7250, &op_bfill,	  0,   5,   2, 0xff, 0x00, 0x00, 0x00}, // bfill a f c 
	{0x7350, &op_bfill,	  0,   5,   3, 0xff, 0x00, 0x00, 0x00}, // bfill a f d 
	{0x7450, &op_bfill,	  0,   5,   4, 0xff, 0x00, 0x00, 0x00}, // bfill a f e 
	{0x7550, &op_bfill,	  0,   5,   5, 0xff, 0x00, 0x00, 0x00}, // bfill a f f 
	{0x7650, &op_bfill,	  0,   5,   6, 0xff, 0x00, 0x00, 0x00}, // bfill a f g 
	{0x7750, &op_bfill,	  0,   5,   7, 0xff, 0x00, 0x00, 0x00}, // bfill a f h 
	{0x7850, &op_bfill,	  0,   5,   8, 0xff, 0x00, 0x00, 0x00}, // bfill a f pc 
	{0x7950, &op_bfill,	  0,   5,   9, 0xff, 0x00, 0x00, 0x00}, // bfill a f ra 
	{0x7a50, &op_bfill,	  0,   5,  10, 0xff, 0x00, 0x00, 0x00}, // bfill a f sb 
	{0x7b50, &op_bfill,	  0,   5,  11, 0xff, 0x00, 0x00, 0x00}, // bfill a f sp 
	{0x7c50, &op_bfill,	  0,   5,  12, 0xff, 0x00, 0x00, 0x00}, // bfill a f db 
	{0x7d50, &op_bfill,	  0,   5,  13, 0xff, 0x00, 0x00, 0x00}, // bfill a f cb 
	{0x7e50, &op_bfill,	  0,   5,  14, 0xff, 0x00, 0x00, 0x00}, // bfill a f pi 
	{0x7f50, &op_bfill,	  0,   5,   8, 0xff, 0x00, 0x04, 0x00}, // bfill a f <literal> 
	{0x7060, &op_bfill,	  0,   6,   0, 0xff, 0x00, 0x00, 0x00}, // bfill a g a 
	{0x7160, &op_bfill,	  0,   6,   1, 0xff, 0x00, 0x00, 0x00}, // bfill a g b 
	{0x7260, &op_bfill,	  0,   6,   2, 0xff, 0x00, 0x00, 0x00}, // bfill a g c 
	{0x7360, &op_bfill,	  0,   6,   3, 0xff, 0x00, 0x00, 0x00}, // bfill a g d 
	{0x7460, &op_bfill,	  0,   6,   4, 0xff, 0x00, 0x00, 0x00}, // bfill a g e 
	{0x7560, &op_bfill,	  0,   6,   5, 0xff, 0x00, 0x00, 0x00}, // bfill a g f 
	{0x7660, &op_bfill,	  0,   6,   6, 0xff, 0x00, 0x00, 0x00}, // bfill a g g 
	{0x7760, &op_bfill,	  0,   6,   7, 0xff, 0x00, 0x00, 0x00}, // bfill a g h 
	{0x7860, &op_bfill,	  0,   6,   8, 0xff, 0x00, 0x00, 0x00}, // bfill a g pc 
	{0x7960, &op_bfill,	  0,   6,   9, 0xff, 0x00, 0x00, 0x00}, // bfill a g ra 
	{0x7a60, &op_bfill,	  0,   6,  10, 0xff, 0x00, 0x00, 0x00}, // bfill a g sb 
	{0x7b60, &op_bfill,	  0,   6,  11, 0xff, 0x00, 0x00, 0x00}, // bfill a g sp 
	{0x7c60, &op_bfill,	  0,   6,  12, 0xff, 0x00, 0x00, 0x00}, // bfill a g db 
	{0x7d60, &op_bfill,	  0,   6,  13, 0xff, 0x00, 0x00, 0x00}, // bfill a g cb 
	{0x7e60, &op_bfill,	  0,   6,  14, 0xff, 0x00, 0x00, 0x00}, // bfill a g pi 
	{0x7f60, &op_bfill,	  0,   6,   8, 0xff, 0x00, 0x04, 0x00}, // bfill a g <literal> 
	{0x7070, &op_bfill,	  0,   7,   0, 0xff, 0x00, 0x00, 0x00}, // bfill a h a 
	{0x7170, &op_bfill,	  0,   7,   1, 0xff, 0x00, 0x00, 0x00}, // bfill a h b 
	{0x7270, &op_bfill,	  0,   7,   2, 0xff, 0x00, 0x00, 0x00}, // bfill a h c 
	{0x7370, &op_bfill,	  0,   7,   3, 0xff, 0x00, 0x00, 0x00}, // bfill a h d 
	{0x7470, &op_bfill,	  0,   7,   4, 0xff, 0x00, 0x00, 0x00}, // bfill a h e 
	{0x7570, &op_bfill,	  0,   7,   5, 0xff, 0x00, 0x00, 0x00}, // bfill a h f 
	{0x7670, &op_bfill,	  0,   7,   6, 0xff, 0x00, 0x00, 0x00}, // bfill a h g 
	{0x7770, &op_bfill,	  0,   7,   7, 0xff, 0x00, 0x00, 0x00}, // bfill a h h 
	{0x7870, &op_bfill,	  0,   7,   8, 0xff, 0x00, 0x00, 0x00}, // bfill a h pc 
	{0x7970, &op_bfill,	  0,   7,   9, 0xff, 0x00, 0x00, 0x00}, // bfill a h ra 
	{0x7a70, &op_bfill,	  0,   7,  10, 0xff, 0x00, 0x00, 0x00}, // bfill a h sb 
	{0x7b70, &op_bfill,	  0,   7,  11, 0xff, 0x00, 0x00, 0x00}, // bfill a h sp 
	{0x7c70, &op_bfill,	  0,   7,  12, 0xff, 0x00, 0x00, 0x00}, // bfill a h db 
	{0x7d70, &op_bfill,	  0,   7,  13, 0xff, 0x00, 0x00, 0x00}, // bfill a h cb 
	{0x7e70, &op_bfill,	  0,   7,  14, 0xff, 0x00, 0x00, 0x00}, // bfill a h pi 
	{0x7f70, &op_bfill,	  0,   7,   8, 0xff, 0x00, 0x04, 0x00}, // bfill a h <literal> 
	{0x7080, &op_bfill,	  0,   8,   0, 0xff, 0x00, 0x00, 0x00}, // bfill a pc a 
	{0x7180, &op_bfill,	  0,   8,   1, 0xff, 0x00, 0x00, 0x00}, // bfill a pc b 
	{0x7280, &op_bfill,	  0,   8,   2, 0xff, 0x00, 0x00, 0x00}, // bfill a pc c 
	{0x7380, &op_bfill,	  0,   8,   3, 0xff, 0x00, 0x00, 0x00}, // bfill a pc d 
	{0x7480, &op_bfill,	  0,   8,   4, 0xff, 0x00, 0x00, 0x00}, // bfill a pc e 
	{0x7580, &op_bfill,	  0,   8,   5, 0xff, 0x00, 0x00, 0x00}, // bfill a pc f 
	{0x7680, &op_bfill,	  0,   8,   6, 0xff, 0x00, 0x00, 0x00}, // bfill a pc g 
	{0x7780, &op_bfill,	  0,   8,   7, 0xff, 0x00, 0x00, 0x00}, // bfill a pc h 
	{0x7880, &op_bfill,	  0,   8,   8, 0xff, 0x00, 0x00, 0x00}, // bfill a pc pc 
	{0x7980, &op_bfill,	  0,   8,   9, 0xff, 0x00, 0x00, 0x00}, // bfill a pc ra 
	{0x7a80, &op_bfill,	  0,   8,  10, 0xff, 0x00, 0x00, 0x00}, // bfill a pc sb 
	{0x7b80, &op_bfill,	  0,   8,  11, 0xff, 0x00, 0x00, 0x00}, // bfill a pc sp 
	{0x7c80, &op_bfill,	  0,   8,  12, 0xff, 0x00, 0x00, 0x00}, // bfill a pc db 
	{0x7d80, &op_bfill,	  0,   8,  13, 0xff, 0x00, 0x00, 0x00}, // bfill a pc cb 
	{0x7e80, &op_bfill,	  0,   8,  14, 0xff, 0x00, 0x00, 0x00}, // bfill a pc pi 
	{0x7f80, &op_bfill,	  0,   8,   8, 0xff, 0x00, 0x04, 0x00}, // bfill a pc <literal> 
	{0x7090, &op_bfill,	  0,   9,   0, 0xff, 0x00, 0x00, 0x00}, // bfill a ra a 
	{0x7190, &op_bfill,	  0,   9,   1, 0xff, 0x00, 0x00, 0x00}, // bfill a ra b 
	{0x7290, &op_bfill,	  0,   9,   2, 0xff, 0x00, 0x00, 0x00}, // bfill a ra c 
	{0x7390, &op_bfill,	  0,   9,   3, 0xff, 0x00, 0x00, 0x00}, // bfill a ra d 
	{0x7490, &op_bfill,	  0,   9,   4, 0xff, 0x00, 0x00, 0x00}, // bfill a ra e 
	{0x7590, &op_bfill,	  0,   9,   5, 0xff, 0x00, 0x00, 0x00}, // bfill a ra f 
	{0x7690, &op_bfill,	  0,   9,   6, 0xff, 0x00, 0x00, 0x00}, // bfill a ra g 
	{0x7790, &op_bfill,	  0,   9,   7, 0xff, 0x00, 0x00, 0x00}, // bfill a ra h 
	{0x7890, &op_bfill,	  0,   9,   8, 0xff, 0x00, 0x00, 0x00}, // bfill a ra pc 
	{0x7990, &op_bfill,	  0,   9,   9, 0xff, 0x00, 0x00, 0x00}, // bfill a ra ra 
	{0x7a90, &op_bfill,	  0,   9,  10, 0xff, 0x00, 0x00, 0x00}, // bfill a ra sb 
	{0x7b90, &op_bfill,	  0,   9,  11, 0xff, 0x00, 0x00, 0x00}, // bfill a ra sp 
	{0x7c90, &op_bfill,	  0,   9,  12, 0xff, 0x00, 0x00, 0x00}, // bfill a ra db 
	{0x7d90, &op_bfill,	  0,   9,  13, 0xff, 0x00, 0x00, 0x00}, // bfill a ra cb 
	{0x7e90, &op_bfill,	  0,   9,  14, 0xff, 0x00, 0x00, 0x00}, // bfill a ra pi 
	{0x7f90, &op_bfill,	  0,   9,   8, 0xff, 0x00, 0x04, 0x00}, // bfill a ra <literal> 
	{0x70a0, &op_bfill,	  0,  10,   0, 0xff, 0x00, 0x00, 0x00}, // bfill a sb a 
	{0x71a0, &op_bfill,	  0,  10,   1, 0xff, 0x00, 0x00, 0x00}, // bfill a sb b 
	{0x72a0, &op_bfill,	  0,  10,   2, 0xff, 0x00, 0x00, 0x00}, // bfill a sb c 
	{0x73a0, &op_bfill,	  0,  10,   3, 0xff, 0x00, 0x00, 0x00}, // bfill a sb d 
	{0x74a0, &op_bfill,	  0,  10,   4, 0xff, 0x00, 0x00, 0x00}, // bfill a sb e 
	{0x75a0, &op_bfill,	  0,  10,   5, 0xff, 0x00, 0x00, 0x00}, // bfill a sb f 
	{0x76a0, &op_bfill,	  0,  10,   6, 0xff, 0x00, 0x00, 0x00}, // bfill a sb g 
	{0x77a0, &op_bfill,	  0,  10,   7, 0xff, 0x00, 0x00, 0x00}, // bfill a sb h 
	{0x78a0, &op_bfill,	  0,  10,   8, 0xff, 0x00, 0x00, 0x00}, // bfill a sb pc 
	{0x79a0, &op_bfill,	  0,  10,   9, 0xff, 0x00, 0x00, 0x00}, // bfill a sb ra 
	{0x7aa0, &op_bfill,	  0,  10,  10, 0xff, 0x00, 0x00, 0x00}, // bfill a sb sb 
	{0x7ba0, &op_bfill,	  0,  10,  11, 0xff, 0x00, 0x00, 0x00}, // bfill a sb sp 
	{0x7ca0, &op_bfill,	  0,  10,  12, 0xff, 0x00, 0x00, 0x00}, // bfill a sb db 
	{0x7da0, &op_bfill,	  0,  10,  13, 0xff, 0x00, 0x00, 0x00}, // bfill a sb cb 
	{0x7ea0, &op_bfill,	  0,  10,  14, 0xff, 0x00, 0x00, 0x00}, // bfill a sb pi 
	{0x7fa0, &op_bfill,	  0,  10,   8, 0xff, 0x00, 0x04, 0x00}, // bfill a sb <literal> 
	{0x70b0, &op_bfill,	  0,  11,   0, 0xff, 0x00, 0x00, 0x00}, // bfill a sp a 
	{0x71b0, &op_bfill,	  0,  11,   1, 0xff, 0x00, 0x00, 0x00}, // bfill a sp b 
	{0x72b0, &op_bfill,	  0,  11,   2, 0xff, 0x00, 0x00, 0x00}, // bfill a sp c 
	{0x73b0, &op_bfill,	  0,  11,   3, 0xff, 0x00, 0x00, 0x00}, // bfill a sp d 
	{0x74b0, &op_bfill,	  0,  11,   4, 0xff, 0x00, 0x00, 0x00}, // bfill a sp e 
	{0x75b0, &op_bfill,	  0,  11,   5, 0xff, 0x00, 0x00, 0x00}, // bfill a sp f 
	{0x76b0, &op_bfill,	  0,  11,   6, 0xff, 0x00, 0x00, 0x00}, // bfill a sp g 
	{0x77b0, &op_bfill,	  0,  11,   7, 0xff, 0x00, 0x00, 0x00}, // bfill a sp h 
	{0x78b0, &op_bfill,	  0,  11,   8, 0xff, 0x00, 0x00, 0x00}, // bfill a sp pc 
	{0x79b0, &op_bfill,	  0,  11,   9, 0xff, 0x00, 0x00, 0x00}, // bfill a sp ra 
	{0x7ab0, &op_bfill,	  0,  11,  10, 0xff, 0x00, 0x00, 0x00}, // bfill a sp sb 
	{0x7bb0, &op_bfill,	  0,  11,  11, 0xff, 0x00, 0x00, 0x00}, // bfill a sp sp 
	{0x7cb0, &op_bfill,	  0,  11,  12, 0xff, 0x00, 0x00, 0x00}, // bfill a sp db 
	{0x7db0, &op_bfill,	  0,  11,  13, 0xff, 0x00, 0x00, 0x00}, // bfill a sp cb 
	{0x7eb0, &op_bfill,	  0,  11,  14, 0xff, 0x00, 0x00, 0x00}, // bfill a sp pi 
	{0x7fb0, &op_bfill,	  0,  11,   8, 0xff, 0x00, 0x04, 0x00}, // bfill a sp <literal> 
	{0x70c0, &op_bfill,	  0,  12,   0, 0xff, 0x00, 0x00, 0x00}, // bfill a db a 
	{0x71c0, &op_bfill,	  0,  12,   1, 0xff, 0x00, 0x00, 0x00}, // bfill a db b 
	{0x72c0, &op_bfill,	  0,  12,   2, 0xff, 0x00, 0x00, 0x00}, // bfill a db c 
	{0x73c0, &op_bfill,	  0,  12,   3, 0xff, 0x00, 0x00, 0x00}, // bfill a db d 
	{0x74c0, &op_bfill,	  0,  12,   4, 0xff, 0x00, 0x00, 0x00}, // bfill a db e 
	{0x75c0, &op_bfill,	  0,  12,   5, 0xff, 0x00, 0x00, 0x00}, // bfill a db f 
	{0x76c0, &op_bfill,	  0,  12,   6, 0xff, 0x00, 0x00, 0x00}, // bfill a db g 
	{0x77c0, &op_bfill,	  0,  12,   7, 0xff, 0x00, 0x00, 0x00}, // bfill a db h 
	{0x78c0, &op_bfill,	  0,  12,   8, 0xff, 0x00, 0x00, 0x00}, // bfill a db pc 
	{0x79c0, &op_bfill,	  0,  12,   9, 0xff, 0x00, 0x00, 0x00}, // bfill a db ra 
	{0x7ac0, &op_bfill,	  0,  12,  10, 0xff, 0x00, 0x00, 0x00}, // bfill a db sb 
	{0x7bc0, &op_bfill,	  0,  12,  11, 0xff, 0x00, 0x00, 0x00}, // bfill a db sp 
	{0x7cc0, &op_bfill,	  0,  12,  12, 0xff, 0x00, 0x00, 0x00}, // bfill a db db 
	{0x7dc0, &op_bfill,	  0,  12,  13, 0xff, 0x00, 0x00, 0x00}, // bfill a db cb 
	{0x7ec0, &op_bfill,	  0,  12,  14, 0xff, 0x00, 0x00, 0x00}, // bfill a db pi 
	{0x7fc0, &op_bfill,	  0,  12,   8, 0xff, 0x00, 0x04, 0x00}, // bfill a db <literal> 
	{0x70d0, &op_bfill,	  0,  13,   0, 0xff, 0x00, 0x00, 0x00}, // bfill a cb a 
	{0x71d0, &op_bfill,	  0,  13,   1, 0xff, 0x00, 0x00, 0x00}, // bfill a cb b 
	{0x72d0, &op_bfill,	  0,  13,   2, 0xff, 0x00, 0x00, 0x00}, // bfill a cb c 
	{0x73d0, &op_bfill,	  0,  13,   3, 0xff, 0x00, 0x00, 0x00}, // bfill a cb d 
	{0x74d0, &op_bfill,	  0,  13,   4, 0xff, 0x00, 0x00, 0x00}, // bfill a cb e 
	{0x75d0, &op_bfill,	  0,  13,   5, 0xff, 0x00, 0x00, 0x00}, // bfill a cb f 
	{0x76d0, &op_bfill,	  0,  13,   6, 0xff, 0x00, 0x00, 0x00}, // bfill a cb g 
	{0x77d0, &op_bfill,	  0,  13,   7, 0xff, 0x00, 0x00, 0x00}, // bfill a cb h 
	{0x78d0, &op_bfill,	  0,  13,   8, 0xff, 0x00, 0x00, 0x00}, // bfill a cb pc 
	{0x79d0, &op_bfill,	  0,  13,   9, 0xff, 0x00, 0x00, 0x00}, // bfill a cb ra 
	{0x7ad0, &op_bfill,	  0,  13,  10, 0xff, 0x00, 0x00, 0x00}, // bfill a cb sb 
	{0x7bd0, &op_bfill,	  0,  13,  11, 0xff, 0x00, 0x00, 0x00}, // bfill a cb sp 
	{0x7cd0, &op_bfill,	  0,  13,  12, 0xff, 0x00, 0x00, 0x00}, // bfill a cb db 
	{0x7dd0, &op_bfill,	  0,  13,  13, 0xff, 0x00, 0x00, 0x00}, // bfill a cb cb 
	{0x7ed0, &op_bfill,	  0,  13,  14, 0xff, 0x00, 0x00, 0x00}, // bfill a cb pi 
	{0x7fd0, &op_bfill,	  0,  13,   8, 0xff, 0x00, 0x04, 0x00}, // bfill a cb <literal> 
	{0x70e0, &op_bfill,	  0,  14,   0, 0xff, 0x00, 0x00, 0x00}, // bfill a pi a 
	{0x71e0, &op_bfill,	  0,  14,   1, 0xff, 0x00, 0x00, 0x00}, // bfill a pi b 
	{0x72e0, &op_bfill,	  0,  14,   2, 0xff, 0x00, 0x00, 0x00}, // bfill a pi c 
	{0x73e0, &op_bfill,	  0,  14,   3, 0xff, 0x00, 0x00, 0x00}, // bfill a pi d 
	{0x74e0, &op_bfill,	  0,  14,   4, 0xff, 0x00, 0x00, 0x00}, // bfill a pi e 
	{0x75e0, &op_bfill,	  0,  14,   5, 0xff, 0x00, 0x00, 0x00}, // bfill a pi f 
	{0x76e0, &op_bfill,	  0,  14,   6, 0xff, 0x00, 0x00, 0x00}, // bfill a pi g 
	{0x77e0, &op_bfill,	  0,  14,   7, 0xff, 0x00, 0x00, 0x00}, // bfill a pi h 
	{0x78e0, &op_bfill,	  0,  14,   8, 0xff, 0x00, 0x00, 0x00}, // bfill a pi pc 
	{0x79e0, &op_bfill,	  0,  14,   9, 0xff, 0x00, 0x00, 0x00}, // bfill a pi ra 
	{0x7ae0, &op_bfill,	  0,  14,  10, 0xff, 0x00, 0x00, 0x00}, // bfill a pi sb 
	{0x7be0, &op_bfill,	  0,  14,  11, 0xff, 0x00, 0x00, 0x00}, // bfill a pi sp 
	{0x7ce0, &op_bfill,	  0,  14,  12, 0xff, 0x00, 0x00, 0x00}, // bfill a pi db 
	{0x7de0, &op_bfill,	  0,  14,  13, 0xff, 0x00, 0x00, 0x00}, // bfill a pi cb 
	{0x7ee0, &op_bfill,	  0,  14,  14, 0xff, 0x00, 0x00, 0x00}, // bfill a pi pi 
	{0x7fe0, &op_bfill,	  0,  14,   8, 0xff, 0x00, 0x04, 0x00}, // bfill a pi <literal> 
	{0x70f0, &op_bfill,	  0,  15,   0, 0xff, 0x00, 0x00, 0x00}, // bfill a status a 
	{0x71f0, &op_bfill,	  0,  15,   1, 0xff, 0x00, 0x00, 0x00}, // bfill a status b 
	{0x72f0, &op_bfill,	  0,  15,   2, 0xff, 0x00, 0x00, 0x00}, // bfill a status c 
	{0x73f0, &op_bfill,	  0,  15,   3, 0xff, 0x00, 0x00, 0x00}, // bfill a status d 
	{0x74f0, &op_bfill,	  0,  15,   4, 0xff, 0x00, 0x00, 0x00}, // bfill a status e 
	{0x75f0, &op_bfill,	  0,  15,   5, 0xff, 0x00, 0x00, 0x00}, // bfill a status f 
	{0x76f0, &op_bfill,	  0,  15,   6, 0xff, 0x00, 0x00, 0x00}, // bfill a status g 
	{0x77f0, &op_bfill,	  0,  15,   7, 0xff, 0x00, 0x00, 0x00}, // bfill a status h 
	{0x78f0, &op_bfill,	  0,  15,   8, 0xff, 0x00, 0x00, 0x00}, // bfill a status pc 
	{0x79f0, &op_bfill,	  0,  15,   9, 0xff, 0x00, 0x00, 0x00}, // bfill a status ra 
	{0x7af0, &op_bfill,	  0,  15,  10, 0xff, 0x00, 0x00, 0x00}, // bfill a status sb 
	{0x7bf0, &op_bfill,	  0,  15,  11, 0xff, 0x00, 0x00, 0x00}, // bfill a status sp 
	{0x7cf0, &op_bfill,	  0,  15,  12, 0xff, 0x00, 0x00, 0x00}, // bfill a status db 
	{0x7df0, &op_bfill,	  0,  15,  13, 0xff, 0x00, 0x00, 0x00}, // bfill a status cb 
	{0x7ef0, &op_bfill,	  0,  15,  14, 0xff, 0x00, 0x00, 0x00}, // bfill a status pi 
	{0x7ff0, &op_bfill,	  0,  15,   8, 0xff, 0x00, 0x04, 0x00}, // bfill a status <literal> 
	{0x7001, &op_bfill,	  1,   0,   0, 0xff, 0x00, 0x00, 0x00}, // bfill b a a 
	{0x7101, &op_bfill,	  1,   0,   1, 0xff, 0x00, 0x00, 0x00}, // bfill b a b 
	{0x7201, &op_bfill,	  1,   0,   2, 0xff, 0x00, 0x00, 0x00}, // bfill b a c 
	{0x7301, &op_bfill,	  1,   0,   3, 0xff, 0x00, 0x00, 0x00}, // bfill b a d 
	{0x7401, &op_bfill,	  1,   0,   4, 0xff, 0x00, 0x00, 0x00}, // bfill b a e 
	{0x7501, &op_bfill,	  1,   0,   5, 0xff, 0x00, 0x00, 0x00}, // bfill b a f 
	{0x7601, &op_bfill,	  1,   0,   6, 0xff, 0x00, 0x00, 0x00}, // bfill b a g 
	{0x7701, &op_bfill,	  1,   0,   7, 0xff, 0x00, 0x00, 0x00}, // bfill b a h 
	{0x7801, &op_bfill,	  1,   0,   8, 0xff, 0x00, 0x00, 0x00}, // bfill b a pc 
	{0x7901, &op_bfill,	  1,   0,   9, 0xff, 0x00, 0x00, 0x00}, // bfill b a ra 
	{0x7a01, &op_bfill,	  1,   0,  10, 0xff, 0x00, 0x00, 0x00}, // bfill b a sb 
	{0x7b01, &op_bfill,	  1,   0,  11, 0xff, 0x00, 0x00, 0x00}, // bfill b a sp 
	{0x7c01, &op_bfill,	  1,   0,  12, 0xff, 0x00, 0x00, 0x00}, // bfill b a db 
	{0x7d01, &op_bfill,	  1,   0,  13, 0xff, 0x00, 0x00, 0x00}, // bfill b a cb 
	{0x7e01, &op_bfill,	  1,   0,  14, 0xff, 0x00, 0x00, 0x00}, // bfill b a pi 
	{0x7f01, &op_bfill,	  1,   0,   8, 0xff, 0x00, 0x04, 0x00}, // bfill b a <literal> 
	{0x7011, &op_bfill,	  1,   1,   0, 0xff, 0x00, 0x00, 0x00}, // bfill b b a 
	{0x7111, &op_bfill,	  1,   1,   1, 0xff, 0x00, 0x00, 0x00}, // bfill b b b 
	{0x7211, &op_bfill,	  1,   1,   2, 0xff, 0x00, 0x00, 0x00}, // bfill b b c 
	{0x7311, &op_bfill,	  1,   1,   3, 0xff, 0x00, 0x00, 0x00}, // bfill b b d 
	{0x7411, &op_bfill,	  1,   1,   4, 0xff, 0x00, 0x00, 0x00}, // bfill b b e 
	{0x7511, &op_bfill,	  1,   1,   5, 0xff, 0x00, 0x00, 0x00}, // bfill b b f 
	{0x7611, &op_bfill,	  1,   1,   6, 0xff, 0x00, 0x00, 0x00}, // bfill b b g 
	{0x7711, &op_bfill,	  1,   1,   7, 0xff, 0x00, 0x00, 0x00}, // bfill b b h 
	{0x7811, &op_bfill,	  1,   1,   8, 0xff, 0x00, 0x00, 0x00}, // bfill b b pc 
	{0x7911, &op_bfill,	  1,   1,   9, 0xff, 0x00, 0x00, 0x00}, // bfill b b ra 
	{0x7a11, &op_bfill,	  1,   1,  10, 0xff, 0x00, 0x00, 0x00}, // bfill b b sb 
	{0x7b11, &op_bfill,	  1,   1,  11, 0xff, 0x00, 0x00, 0x00}, // bfill b b sp 
	{0x7c11, &op_bfill,	  1,   1,  12, 0xff, 0x00, 0x00, 0x00}, // bfill b b db 
	{0x7d11, &op_bfill,	  1,   1,  13, 0xff, 0x00, 0x00, 0x00}, // bfill b b cb 
	{0x7e11, &op_bfill,	  1,   1,  14, 0xff, 0x00, 0x00, 0x00}, // bfill b b pi 
	{0x7f11, &op_bfill,	  1,   1,   8, 0xff, 0x00, 0x04, 0x00}, // bfill b b <literal> 
	{0x7021, &op_bfill,	  1,   2,   0, 0xff, 0x00, 0x00, 0x00}, // bfill b c a 
	{0x7121, &op_bfill,	  1,   2,   1, 0xff, 0x00, 0x00, 0x00}, // bfill b c b 
	{0x7221, &op_bfill,	  1,   2,   2, 0xff, 0x00, 0x00, 0x00}, // bfill b c c 
	{0x7321, &op_bfill,	  1,   2,   3, 0xff, 0x00, 0x00, 0x00}, // bfill b c d 
	{0x7421, &op_bfill,	  1,   2,   4, 0xff, 0x00, 0x00, 0x00}, // bfill b c e 
	{0x7521, &op_bfill,	  1,   2,   5, 0xff, 0x00, 0x00, 0x00}, // bfill b c f 
	{0x7621, &op_bfill,	  1,   2,   6, 0xff, 0x00, 0x00, 0x00}, // bfill b c g 
	{0x7721, &op_bfill,	  1,   2,   7, 0xff, 0x00, 0x00, 0x00}, // bfill b c h 
	{0x7821, &op_bfill,	  1,   2,   8, 0xff, 0x00, 0x00, 0x00}, // bfill b c pc 
	{0x7921, &op_bfill,	  1,   2,   9, 0xff, 0x00, 0x00, 0x00}, // bfill b c ra 
	{0x7a21, &op_bfill,	  1,   2,  10, 0xff, 0x00, 0x00, 0x00}, // bfill b c sb 
	{0x7b21, &op_bfill,	  1,   2,  11, 0xff, 0x00, 0x00, 0x00}, // bfill b c sp 
	{0x7c21, &op_bfill,	  1,   2,  12, 0xff, 0x00, 0x00, 0x00}, // bfill b c db 
	{0x7d21, &op_bfill,	  1,   2,  13, 0xff, 0x00, 0x00, 0x00}, // bfill b c cb 
	{0x7e21, &op_bfill,	  1,   2,  14, 0xff, 0x00, 0x00, 0x00}, // bfill b c pi 
	{0x7f21, &op_bfill,	  1,   2,   8, 0xff, 0x00, 0x04, 0x00}, // bfill b c <literal> 
	{0x7031, &op_bfill,	  1,   3,   0, 0xff, 0x00, 0x00, 0x00}, // bfill b d a 
	{0x7131, &op_bfill,	  1,   3,   1, 0xff, 0x00, 0x00, 0x00}, // bfill b d b 
	{0x7231, &op_bfill,	  1,   3,   2, 0xff, 0x00, 0x00, 0x00}, // bfill b d c 
	{0x7331, &op_bfill,	  1,   3,   3, 0xff, 0x00, 0x00, 0x00}, // bfill b d d 
	{0x7431, &op_bfill,	  1,   3,   4, 0xff, 0x00, 0x00, 0x00}, // bfill b d e 
	{0x7531, &op_bfill,	  1,   3,   5, 0xff, 0x00, 0x00, 0x00}, // bfill b d f 
	{0x7631, &op_bfill,	  1,   3,   6, 0xff, 0x00, 0x00, 0x00}, // bfill b d g 
	{0x7731, &op_bfill,	  1,   3,   7, 0xff, 0x00, 0x00, 0x00}, // bfill b d h 
	{0x7831, &op_bfill,	  1,   3,   8, 0xff, 0x00, 0x00, 0x00}, // bfill b d pc 
	{0x7931, &op_bfill,	  1,   3,   9, 0xff, 0x00, 0x00, 0x00}, // bfill b d ra 
	{0x7a31, &op_bfill,	  1,   3,  10, 0xff, 0x00, 0x00, 0x00}, // bfill b d sb 
	{0x7b31, &op_bfill,	  1,   3,  11, 0xff, 0x00, 0x00, 0x00}, // bfill b d sp 
	{0x7c31, &op_bfill,	  1,   3,  12, 0xff, 0x00, 0x00, 0x00}, // bfill b d db 
	{0x7d31, &op_bfill,	  1,   3,  13, 0xff, 0x00, 0x00, 0x00}, // bfill b d cb 
	{0x7e31, &op_bfill,	  1,   3,  14, 0xff, 0x00, 0x00, 0x00}, // bfill b d pi 
	{0x7f31, &op_bfill,	  1,   3,   8, 0xff, 0x00, 0x04, 0x00}, // bfill b d <literal> 
	{0x7041, &op_bfill,	  1,   4,   0, 0xff, 0x00, 0x00, 0x00}, // bfill b e a 
	{0x7141, &op_bfill,	  1,   4,   1, 0xff, 0x00, 0x00, 0x00}, // bfill b e b 
	{0x7241, &op_bfill,	  1,   4,   2, 0xff, 0x00, 0x00, 0x00}, // bfill b e c 
	{0x7341, &op_bfill,	  1,   4,   3, 0xff, 0x00, 0x00, 0x00}, // bfill b e d 
	{0x7441, &op_bfill,	  1,   4,   4, 0xff, 0x00, 0x00, 0x00}, // bfill b e e 
	{0x7541, &op_bfill,	  1,   4,   5, 0xff, 0x00, 0x00, 0x00}, // bfill b e f 
	{0x7641, &op_bfill,	  1,   4,   6, 0xff, 0x00, 0x00, 0x00}, // bfill b e g 
	{0x7741, &op_bfill,	  1,   4,   7, 0xff, 0x00, 0x00, 0x00}, // bfill b e h 
	{0x7841, &op_bfill,	  1,   4,   8, 0xff, 0x00, 0x00, 0x00}, // bfill b e pc 
	{0x7941, &op_bfill,	  1,   4,   9, 0xff, 0x00, 0x00, 0x00}, // bfill b e ra 
	{0x7a41, &op_bfill,	  1,   4,  10, 0xff, 0x00, 0x00, 0x00}, // bfill b e sb 
	{0x7b41, &op_bfill,	  1,   4,  11, 0xff, 0x00, 0x00, 0x00}, // bfill b e sp 
	{0x7c41, &op_bfill,	  1,   4,  12, 0xff, 0x00, 0x00, 0x00}, // bfill b e db 
	{0x7d41, &op_bfill,	  1,   4,  13, 0xff, 0x00, 0x00, 0x00}, // bfill b e cb 
	{0x7e41, &op_bfill,	  1,   4,  14, 0xff, 0x00, 0x00, 0x00}, // bfill b e pi 
	{0x7f41, &op_bfill,	  1,   4,   8, 0xff, 0x00, 0x04, 0x00}, // bfill b e <literal> 
	{0x7051, &op_bfill,	  1,   5,   0, 0xff, 0x00, 0x00, 0x00}, // bfill b f a 
	{0x7151, &op_bfill,	  1,   5,   1, 0xff, 0x00, 0x00, 0x00}, // bfill b f b 
	{0x7251, &op_bfill,	  1,   5,   2, 0xff, 0x00, 0x00, 0x00}, // bfill b f c 
	{0x7351, &op_bfill,	  1,   5,   3, 0xff, 0x00, 0x00, 0x00}, // bfill b f d 
	{0x7451, &op_bfill,	  1,   5,   4, 0xff, 0x00, 0x00, 0x00}, // bfill b f e 
	{0x7551, &op_bfill,	  1,   5,   5, 0xff, 0x00, 0x00, 0x00}, // bfill b f f 
	{0x7651, &op_bfill,	  1,   5,   6, 0xff, 0x00, 0x00, 0x00}, // bfill b f g 
	{0x7751, &op_bfill,	  1,   5,   7, 0xff, 0x00, 0x00, 0x00}, // bfill b f h 
	{0x7851, &op_bfill,	  1,   5,   8, 0xff, 0x00, 0x00, 0x00}, // bfill b f pc 
	{0x7951, &op_bfill,	  1,   5,   9, 0xff, 0x00, 0x00, 0x00}, // bfill b f ra 
	{0x7a51, &op_bfill,	  1,   5,  10, 0xff, 0x00, 0x00, 0x00}, // bfill b f sb 
	{0x7b51, &op_bfill,	  1,   5,  11, 0xff, 0x00, 0x00, 0x00}, // bfill b f sp 
	{0x7c51, &op_bfill,	  1,   5,  12, 0xff, 0x00, 0x00, 0x00}, // bfill b f db 
	{0x7d51, &op_bfill,	  1,   5,  13, 0xff, 0x00, 0x00, 0x00}, // bfill b f cb 
	{0x7e51, &op_bfill,	  1,   5,  14, 0xff, 0x00, 0x00, 0x00}, // bfill b f pi 
	{0x7f51, &op_bfill,	  1,   5,   8, 0xff, 0x00, 0x04, 0x00}, // bfill b f <literal> 
	{0x7061, &op_bfill,	  1,   6,   0, 0xff, 0x00, 0x00, 0x00}, // bfill b g a 
	{0x7161, &op_bfill,	  1,   6,   1, 0xff, 0x00, 0x00, 0x00}, // bfill b g b 
	{0x7261, &op_bfill,	  1,   6,   2, 0xff, 0x00, 0x00, 0x00}, // bfill b g c 
	{0x7361, &op_bfill,	  1,   6,   3, 0xff, 0x00, 0x00, 0x00}, // bfill b g d 
	{0x7461, &op_bfill,	  1,   6,   4, 0xff, 0x00, 0x00, 0x00}, // bfill b g e 
	{0x7561, &op_bfill,	  1,   6,   5, 0xff, 0x00, 0x00, 0x00}, // bfill b g f 
	{0x7661, &op_bfill,	  1,   6,   6, 0xff, 0x00, 0x00, 0x00}, // bfill b g g 
	{0x7761, &op_bfill,	  1,   6,   7, 0xff, 0x00, 0x00, 0x00}, // bfill b g h 
	{0x7861, &op_bfill,	  1,   6,   8, 0xff, 0x00, 0x00, 0x00}, // bfill b g pc 
	{0x7961, &op_bfill,	  1,   6,   9, 0xff, 0x00, 0x00, 0x00}, // bfill b g ra 
	{0x7a61, &op_bfill,	  1,   6,  10, 0xff, 0x00, 0x00, 0x00}, // bfill b g sb 
	{0x7b61, &op_bfill,	  1,   6,  11, 0xff, 0x00, 0x00, 0x00}, // bfill b g sp 
	{0x7c61, &op_bfill,	  1,   6,  12, 0xff, 0x00, 0x00, 0x00}, // bfill b g db 
	{0x7d61, &op_bfill,	  1,   6,  13, 0xff, 0x00, 0x00, 0x00}, // bfill b g cb 
	{0x7e61, &op_bfill,	  1,   6,  14, 0xff, 0x00, 0x00, 0x00}, // bfill b g pi 
	{0x7f61, &op_bfill,	  1,   6,   8, 0xff, 0x00, 0x04, 0x00}, // bfill b g <literal> 
	{0x7071, &op_bfill,	  1,   7,   0, 0xff, 0x00, 0x00, 0x00}, // bfill b h a 
	{0x7171, &op_bfill,	  1,   7,   1, 0xff, 0x00, 0x00, 0x00}, // bfill b h b 
	{0x7271, &op_bfill,	  1,   7,   2, 0xff, 0x00, 0x00, 0x00}, // bfill b h c 
	{0x7371, &op_bfill,	  1,   7,   3, 0xff, 0x00, 0x00, 0x00}, // bfill b h d 
	{0x7471, &op_bfill,	  1,   7,   4, 0xff, 0x00, 0x00, 0x00}, // bfill b h e 
	{0x7571, &op_bfill,	  1,   7,   5, 0xff, 0x00, 0x00, 0x00}, // bfill b h f 
	{0x7671, &op_bfill,	  1,   7,   6, 0xff, 0x00, 0x00, 0x00}, // bfill b h g 
	{0x7771, &op_bfill,	  1,   7,   7, 0xff, 0x00, 0x00, 0x00}, // bfill b h h 
	{0x7871, &op_bfill,	  1,   7,   8, 0xff, 0x00, 0x00, 0x00}, // bfill b h pc 
	{0x7971, &op_bfill,	  1,   7,   9, 0xff, 0x00, 0x00, 0x00}, // bfill b h ra 
	{0x7a71, &op_bfill,	  1,   7,  10, 0xff, 0x00, 0x00, 0x00}, // bfill b h sb 
	{0x7b71, &op_bfill,	  1,   7,  11, 0xff, 0x00, 0x00, 0x00}, // bfill b h sp 
	{0x7c71, &op_bfill,	  1,   7,  12, 0xff, 0x00, 0x00, 0x00}, // bfill b h db 
	{0x7d71, &op_bfill,	  1,   7,  13, 0xff, 0x00, 0x00, 0x00}, // bfill b h cb 
	{0x7e71, &op_bfill,	  1,   7,  14, 0xff, 0x00, 0x00, 0x00}, // bfill b h pi 
	{0x7f71, &op_bfill,	  1,   7,   8, 0xff, 0x00, 0x04, 0x00}, // bfill b h <literal> 
	{0x7081, &op_bfill,	  1,   8,   0, 0xff, 0x00, 0x00, 0x00}, // bfill b pc a 
	{0x7181, &op_bfill,	  1,   8,   1, 0xff, 0x00, 0x00, 0x00}, // bfill b pc b 
	{0x7281, &op_bfill,	  1,   8,   2, 0xff, 0x00, 0x00, 0x00}, // bfill b pc c 
	{0x7381, &op_bfill,	  1,   8,   3, 0xff, 0x00, 0x00, 0x00}, // bfill b pc d 
	{0x7481, &op_bfill,	  1,   8,   4, 0xff, 0x00, 0x00, 0x00}, // bfill b pc e 
	{0x7581, &op_bfill,	  1,   8,   5, 0xff, 0x00, 0x00, 0x00}, // bfill b pc f 
	{0x7681, &op_bfill,	  1,   8,   6, 0xff, 0x00, 0x00, 0x00}, // bfill b pc g 
	{0x7781, &op_bfill,	  1,   8,   7, 0xff, 0x00, 0x00, 0x00}, // bfill b pc h 
	{0x7881, &op_bfill,	  1,   8,   8, 0xff, 0x00, 0x00, 0x00}, // bfill b pc pc 
	{0x7981, &op_bfill,	  1,   8,   9, 0xff, 0x00, 0x00, 0x00}, // bfill b pc ra 
	{0x7a81, &op_bfill,	  1,   8,  10, 0xff, 0x00, 0x00, 0x00}, // bfill b pc sb 
	{0x7b81, &op_bfill,	  1,   8,  11, 0xff, 0x00, 0x00, 0x00}, // bfill b pc sp 
	{0x7c81, &op_bfill,	  1,   8,  12, 0xff, 0x00, 0x00, 0x00}, // bfill b pc db 
	{0x7d81, &op_bfill,	  1,   8,  13, 0xff, 0x00, 0x00, 0x00}, // bfill b pc cb 
	{0x7e81, &op_bfill,	  1,   8,  14, 0xff, 0x00, 0x00, 0x00}, // bfill b pc pi 
	{0x7f81, &op_bfill,	  1,   8,   8, 0xff, 0x00, 0x04, 0x00}, // bfill b pc <literal> 
	{0x7091, &op_bfill,	  1,   9,   0, 0xff, 0x00, 0x00, 0x00}, // bfill b ra a 
	{0x7191, &op_bfill,	  1,   9,   1, 0xff, 0x00, 0x00, 0x00}, // bfill b ra b 
	{0x7291, &op_bfill,	  1,   9,   2, 0xff, 0x00, 0x00, 0x00}, // bfill b ra c 
	{0x7391, &op_bfill,	  1,   9,   3, 0xff, 0x00, 0x00, 0x00}, // bfill b ra d 
	{0x7491, &op_bfill,	  1,   9,   4, 0xff, 0x00, 0x00, 0x00}, // bfill b ra e 
	{0x7591, &op_bfill,	  1,   9,   5, 0xff, 0x00, 0x00, 0x00}, // bfill b ra f 
	{0x7691, &op_bfill,	  1,   9,   6, 0xff, 0x00, 0x00, 0x00}, // bfill b ra g 
	{0x7791, &op_bfill,	  1,   9,   7, 0xff, 0x00, 0x00, 0x00}, // bfill b ra h 
	{0x7891, &op_bfill,	  1,   9,   8, 0xff, 0x00, 0x00, 0x00}, // bfill b ra pc 
	{0x7991, &op_bfill,	  1,   9,   9, 0xff, 0x00, 0x00, 0x00}, // bfill b ra ra 
	{0x7a91, &op_bfill,	  1,   9,  10, 0xff, 0x00, 0x00, 0x00}, // bfill b ra sb 
	{0x7b91, &op_bfill,	  1,   9,  11, 0xff, 0x00, 0x00, 0x00}, // bfill b ra sp 
	{0x7c91, &op_bfill,	  1,   9,  12, 0xff, 0x00, 0x00, 0x00}, // bfill b ra db 
	{0x7d91, &op_bfill,	  1,   9,  13, 0xff, 0x00, 0x00, 0x00}, // bfill b ra cb 
	{0x7e91, &op_bfill,	  1,   9,  14, 0xff, 0x00, 0x00, 0x00}, // bfill b ra pi 
	{0x7f91, &op_bfill,	  1,   9,   8, 0xff, 0x00, 0x04, 0x00}, // bfill b ra <literal> 
	{0x70a1, &op_bfill,	  1,  10,   0, 0xff, 0x00, 0x00, 0x00}, // bfill b sb a 
	{0x71a1, &op_bfill,	  1,  10,   1, 0xff, 0x00, 0x00, 0x00}, // bfill b sb b 
	{0x72a1, &op_bfill,	  1,  10,   2, 0xff, 0x00, 0x00, 0x00}, // bfill b sb c 
	{0x73a1, &op_bfill,	  1,  10,   3, 0xff, 0x00, 0x00, 0x00}, // bfill b sb d 
	{0x74a1, &op_bfill,	  1,  10,   4, 0xff, 0x00, 0x00, 0x00}, // bfill b sb e 
	{0x75a1, &op_bfill,	  1,  10,   5, 0xff, 0x00, 0x00, 0x00}, // bfill b sb f 
	{0x76a1, &op_bfill,	  1,  10,   6, 0xff, 0x00, 0x00, 0x00}, // bfill b sb g 
	{0x77a1, &op_bfill,	  1,  10,   7, 0xff, 0x00, 0x00, 0x00}, // bfill b sb h 
	{0x78a1, &op_bfill,	  1,  10,   8, 0xff, 0x00, 0x00, 0x00}, // bfill b sb pc 
	{0x79a1, &op_bfill,	  1,  10,   9, 0xff, 0x00, 0x00, 0x00}, // bfill b sb ra 
	{0x7aa1, &op_bfill,	  1,  10,  10, 0xff, 0x00, 0x00, 0x00}, // bfill b sb sb 
	{0x7ba1, &op_bfill,	  1,  10,  11, 0xff, 0x00, 0x00, 0x00}, // bfill b sb sp 
	{0x7ca1, &op_bfill,	  1,  10,  12, 0xff, 0x00, 0x00, 0x00}, // bfill b sb db 
	{0x7da1, &op_bfill,	  1,  10,  13, 0xff, 0x00, 0x00, 0x00}, // bfill b sb cb 
	{0x7ea1, &op_bfill,	  1,  10,  14, 0xff, 0x00, 0x00, 0x00}, // bfill b sb pi 
	{0x7fa1, &op_bfill,	  1,  10,   8, 0xff, 0x00, 0x04, 0x00}, // bfill b sb <literal> 
	{0x70b1, &op_bfill,	  1,  11,   0, 0xff, 0x00, 0x00, 0x00}, // bfill b sp a 
	{0x71b1, &op_bfill,	  1,  11,   1, 0xff, 0x00, 0x00, 0x00}, // bfill b sp b 
	{0x72b1, &op_bfill,	  1,  11,   2, 0xff, 0x00, 0x00, 0x00}, // bfill b sp c 
	{0x73b1, &op_bfill,	  1,  11,   3, 0xff, 0x00, 0x00, 0x00}, // bfill b sp d 
	{0x74b1, &op_bfill,	  1,  11,   4, 0xff, 0x00, 0x00, 0x00}, // bfill b sp e 
	{0x75b1, &op_bfill,	  1,  11,   5, 0xff, 0x00, 0x00, 0x00}, // bfill b sp f 
	{0x76b1, &op_bfill,	  1,  11,   6, 0xff, 0x00, 0x00, 0x00}, // bfill b sp g 
	{0x77b1, &op_bfill,	  1,  11,   7, 0xff, 0x00, 0x00, 0x00}, // bfill b sp h 
	{0x78b1, &op_bfill,	  1,  11,   8, 0xff, 0x00, 0x00, 0x00}, // bfill b sp pc 
	{0x79b1, &op_bfill,	  1,  11,   9, 0xff, 0x00, 0x00, 0x00}, // bfill b sp ra 
	{0x7ab1, &op_bfill,	  1,  11,  10, 0xff, 0x00, 0x00, 0x00}, // bfill b sp sb 
	{0x7bb1, &op_bfill,	  1,  11,  11, 0xff, 0x00, 0x00, 0x00}, // bfill b sp sp 
	{0x7cb1, &op_bfill,	  1,  11,  12, 0xff, 0x00, 0x00, 0x00}, // bfill b sp db 
	{0x7db1, &op_bfill,	  1,  11,  13, 0xff, 0x00, 0x00, 0x00}, // bfill b sp cb 
	{0x7eb1, &op_bfill,	  1,  11,  14, 0xff, 0x00, 0x00, 0x00}, // bfill b sp pi 
	{0x7fb1, &op_bfill,	  1,  11,   8, 0xff, 0x00, 0x04, 0x00}, // bfill b sp <literal> 
	{0x70c1, &op_bfill,	  1,  12,   0, 0xff, 0x00, 0x00, 0x00}, // bfill b db a 
	{0x71c1, &op_bfill,	  1,  12,   1, 0xff, 0x00, 0x00, 0x00}, // bfill b db b 
	{0x72c1, &op_bfill,	  1,  12,   2, 0xff, 0x00, 0x00, 0x00}, // bfill b db c 
	{0x73c1, &op_bfill,	  1,  12,   3, 0xff, 0x00, 0x00, 0x00}, // bfill b db d 
	{0x74c1, &op_bfill,	  1,  12,   4, 0xff, 0x00, 0x00, 0x00}, // bfill b db e 
	{0x75c1, &op_bfill,	  1,  12,   5, 0xff, 0x00, 0x00, 0x00}, // bfill b db f 
	{0x76c1, &op_bfill,	  1,  12,   6, 0xff, 0x00, 0x00, 0x00}, // bfill b db g 
	{0x77c1, &op_bfill,	  1,  12,   7, 0xff, 0x00, 0x00, 0x00}, // bfill b db h 
	{0x78c1, &op_bfill,	  1,  12,   8, 0xff, 0x00, 0x00, 0x00}, // bfill b db pc 
	{0x79c1, &op_bfill,	  1,  12,   9, 0xff, 0x00, 0x00, 0x00}, // bfill b db ra 
	{0x7ac1, &op_bfill,	  1,  12,  10, 0xff, 0x00, 0x00, 0x00}, // bfill b db sb 
	{0x7bc1, &op_bfill,	  1,  12,  11, 0xff, 0x00, 0x00, 0x00}, // bfill b db sp 
	{0x7cc1, &op_bfill,	  1,  12,  12, 0xff, 0x00, 0x00, 0x00}, // bfill b db db 
	{0x7dc1, &op_bfill,	  1,  12,  13, 0xff, 0x00, 0x00, 0x00}, // bfill b db cb 
	{0x7ec1, &op_bfill,	  1,  12,  14, 0xff, 0x00, 0x00, 0x00}, // bfill b db pi 
	{0x7fc1, &op_bfill,	  1,  12,   8, 0xff, 0x00, 0x04, 0x00}, // bfill b db <literal> 
	{0x70d1, &op_bfill,	  1,  13,   0, 0xff, 0x00, 0x00, 0x00}, // bfill b cb a 
	{0x71d1, &op_bfill,	  1,  13,   1, 0xff, 0x00, 0x00, 0x00}, // bfill b cb b 
	{0x72d1, &op_bfill,	  1,  13,   2, 0xff, 0x00, 0x00, 0x00}, // bfill b cb c 
	{0x73d1, &op_bfill,	  1,  13,   3, 0xff, 0x00, 0x00, 0x00}, // bfill b cb d 
	{0x74d1, &op_bfill,	  1,  13,   4, 0xff, 0x00, 0x00, 0x00}, // bfill b cb e 
	{0x75d1, &op_bfill,	  1,  13,   5, 0xff, 0x00, 0x00, 0x00}, // bfill b cb f 
	{0x76d1, &op_bfill,	  1,  13,   6, 0xff, 0x00, 0x00, 0x00}, // bfill b cb g 
	{0x77d1, &op_bfill,	  1,  13,   7, 0xff, 0x00, 0x00, 0x00}, // bfill b cb h 
	{0x78d1, &op_bfill,	  1,  13,   8, 0xff, 0x00, 0x00, 0x00}, // bfill b cb pc 
	{0x79d1, &op_bfill,	  1,  13,   9, 0xff, 0x00, 0x00, 0x00}, // bfill b cb ra 
	{0x7ad1, &op_bfill,	  1,  13,  10, 0xff, 0x00, 0x00, 0x00}, // bfill b cb sb 
	{0x7bd1, &op_bfill,	  1,  13,  11, 0xff, 0x00, 0x00, 0x00}, // bfill b cb sp 
	{0x7cd1, &op_bfill,	  1,  13,  12, 0xff, 0x00, 0x00, 0x00}, // bfill b cb db 
	{0x7dd1, &op_bfill,	  1,  13,  13, 0xff, 0x00, 0x00, 0x00}, // bfill b cb cb 
	{0x7ed1, &op_bfill,	  1,  13,  14, 0xff, 0x00, 0x00, 0x00}, // bfill b cb pi 
	{0x7fd1, &op_bfill,	  1,  13,   8, 0xff, 0x00, 0x04, 0x00}, // bfill b cb <literal> 
	{0x70e1, &op_bfill,	  1,  14,   0, 0xff, 0x00, 0x00, 0x00}, // bfill b pi a 
	{0x71e1, &op_bfill,	  1,  14,   1, 0xff, 0x00, 0x00, 0x00}, // bfill b pi b 
	{0x72e1, &op_bfill,	  1,  14,   2, 0xff, 0x00, 0x00, 0x00}, // bfill b pi c 
	{0x73e1, &op_bfill,	  1,  14,   3, 0xff, 0x00, 0x00, 0x00}, // bfill b pi d 
	{0x74e1, &op_bfill,	  1,  14,   4, 0xff, 0x00, 0x00, 0x00}, // bfill b pi e 
	{0x75e1, &op_bfill,	  1,  14,   5, 0xff, 0x00, 0x00, 0x00}, // bfill b pi f 
	{0x76e1, &op_bfill,	  1,  14,   6, 0xff, 0x00, 0x00, 0x00}, // bfill b pi g 
	{0x77e1, &op_bfill,	  1,  14,   7, 0xff, 0x00, 0x00, 0x00}, // bfill b pi h 
	{0x78e1, &op_bfill,	  1,  14,   8, 0xff, 0x00, 0x00, 0x00}, // bfill b pi pc 
	{0x79e1, &op_bfill,	  1,  14,   9, 0xff, 0x00, 0x00, 0x00}, // bfill b pi ra 
	{0x7ae1, &op_bfill,	  1,  14,  10, 0xff, 0x00, 0x00, 0x00}, // bfill b pi sb 
	{0x7be1, &op_bfill,	  1,  14,  11, 0xff, 0x00, 0x00, 0x00}, // bfill b pi sp 
	{0x7ce1, &op_bfill,	  1,  14,  12, 0xff, 0x00, 0x00, 0x00}, // bfill b pi db 
	{0x7de1, &op_bfill,	  1,  14,  13, 0xff, 0x00, 0x00, 0x00}, // bfill b pi cb 
	{0x7ee1, &op_bfill,	  1,  14,  14, 0xff, 0x00, 0x00, 0x00}, // bfill b pi pi 
	{0x7fe1, &op_bfill,	  1,  14,   8, 0xff, 0x00, 0x04, 0x00}, // bfill b pi <literal> 
	{0x70f1, &op_bfill,	  1,  15,   0, 0xff, 0x00, 0x00, 0x00}, // bfill b status a 
	{0x71f1, &op_bfill,	  1,  15,   1, 0xff, 0x00, 0x00, 0x00}, // bfill b status b 
	{0x72f1, &op_bfill,	  1,  15,   2, 0xff, 0x00, 0x00, 0x00}, // bfill b status c 
	{0x73f1, &op_bfill,	  1,  15,   3, 0xff, 0x00, 0x00, 0x00}, // bfill b status d 
	{0x74f1, &op_bfill,	  1,  15,   4, 0xff, 0x00, 0x00, 0x00}, // bfill b status e 
	{0x75f1, &op_bfill,	  1,  15,   5, 0xff, 0x00, 0x00, 0x00}, // bfill b status f 
	{0x76f1, &op_bfill,	  1,  15,   6, 0xff, 0x00, 0x00, 0x00}, // bfill b status g 
	{0x77f1, &op_bfill,	  1,  15,   7, 0xff, 0x00, 0x00, 0x00}, // bfill b status h 
	{0x78f1, &op_bfill,	  1,  15,   8, 0xff, 0x00, 0x00, 0x00}, // bfill b status pc 
	{0x79f1, &op_bfill,	  1,  15,   9, 0xff, 0x00, 0x00, 0x00}, // bfill b status ra 
	{0x7af1, &op_bfill,	  1,  15,  10, 0xff, 0x00, 0x00, 0x00}, // bfill b status sb 
	{0x7bf1, &op_bfill,	  1,  15,  11, 0xff, 0x00, 0x00, 0x00}, // bfill b status sp 
	{0x7cf1, &op_bfill,	  1,  15,  12, 0xff, 0x00, 0x00, 0x00}, // bfill b status db 
	{0x7df1, &op_bfill,	  1,  15,  13, 0xff, 0x00, 0x00, 0x00}, // bfill b status cb 
	{0x7ef1, &op_bfill,	  1,  15,  14, 0xff, 0x00, 0x00, 0x00}, // bfill b status pi 
	{0x7ff1, &op_bfill,	  1,  15,   8, 0xff, 0x00, 0x04, 0x00}, // bfill b status <literal> 
	{0x7002, &op_bfill,	  2,   0,   0, 0xff, 0x00, 0x00, 0x00}, // bfill c a a 
	{0x7102, &op_bfill,	  2,   0,   1, 0xff, 0x00, 0x00, 0x00}, // bfill c a b 
	{0x7202, &op_bfill,	  2,   0,   2, 0xff, 0x00, 0x00, 0x00}, // bfill c a c 
	{0x7302, &op_bfill,	  2,   0,   3, 0xff, 0x00, 0x00, 0x00}, // bfill c a d 
	{0x7402, &op_bfill,	  2,   0,   4, 0xff, 0x00, 0x00, 0x00}, // bfill c a e 
	{0x7502, &op_bfill,	  2,   0,   5, 0xff, 0x00, 0x00, 0x00}, // bfill c a f 
	{0x7602, &op_bfill,	  2,   0,   6, 0xff, 0x00, 0x00, 0x00}, // bfill c a g 
	{0x7702, &op_bfill,	  2,   0,   7, 0xff, 0x00, 0x00, 0x00}, // bfill c a h 
	{0x7802, &op_bfill,	  2,   0,   8, 0xff, 0x00, 0x00, 0x00}, // bfill c a pc 
	{0x7902, &op_bfill,	  2,   0,   9, 0xff, 0x00, 0x00, 0x00}, // bfill c a ra 
	{0x7a02, &op_bfill,	  2,   0,  10, 0xff, 0x00, 0x00, 0x00}, // bfill c a sb 
	{0x7b02, &op_bfill,	  2,   0,  11, 0xff, 0x00, 0x00, 0x00}, // bfill c a sp 
	{0x7c02, &op_bfill,	  2,   0,  12, 0xff, 0x00, 0x00, 0x00}, // bfill c a db 
	{0x7d02, &op_bfill,	  2,   0,  13, 0xff, 0x00, 0x00, 0x00}, // bfill c a cb 
	{0x7e02, &op_bfill,	  2,   0,  14, 0xff, 0x00, 0x00, 0x00}, // bfill c a pi 
	{0x7f02, &op_bfill,	  2,   0,   8, 0xff, 0x00, 0x04, 0x00}, // bfill c a <literal> 
	{0x7012, &op_bfill,	  2,   1,   0, 0xff, 0x00, 0x00, 0x00}, // bfill c b a 
	{0x7112, &op_bfill,	  2,   1,   1, 0xff, 0x00, 0x00, 0x00}, // bfill c b b 
	{0x7212, &op_bfill,	  2,   1,   2, 0xff, 0x00, 0x00, 0x00}, // bfill c b c 
	{0x7312, &op_bfill,	  2,   1,   3, 0xff, 0x00, 0x00, 0x00}, // bfill c b d 
	{0x7412, &op_bfill,	  2,   1,   4, 0xff, 0x00, 0x00, 0x00}, // bfill c b e 
	{0x7512, &op_bfill,	  2,   1,   5, 0xff, 0x00, 0x00, 0x00}, // bfill c b f 
	{0x7612, &op_bfill,	  2,   1,   6, 0xff, 0x00, 0x00, 0x00}, // bfill c b g 
	{0x7712, &op_bfill,	  2,   1,   7, 0xff, 0x00, 0x00, 0x00}, // bfill c b h 
	{0x7812, &op_bfill,	  2,   1,   8, 0xff, 0x00, 0x00, 0x00}, // bfill c b pc 
	{0x7912, &op_bfill,	  2,   1,   9, 0xff, 0x00, 0x00, 0x00}, // bfill c b ra 
	{0x7a12, &op_bfill,	  2,   1,  10, 0xff, 0x00, 0x00, 0x00}, // bfill c b sb 
	{0x7b12, &op_bfill,	  2,   1,  11, 0xff, 0x00, 0x00, 0x00}, // bfill c b sp 
	{0x7c12, &op_bfill,	  2,   1,  12, 0xff, 0x00, 0x00, 0x00}, // bfill c b db 
	{0x7d12, &op_bfill,	  2,   1,  13, 0xff, 0x00, 0x00, 0x00}, // bfill c b cb 
	{0x7e12, &op_bfill,	  2,   1,  14, 0xff, 0x00, 0x00, 0x00}, // bfill c b pi 
	{0x7f12, &op_bfill,	  2,   1,   8, 0xff, 0x00, 0x04, 0x00}, // bfill c b <literal> 
	{0x7022, &op_bfill,	  2,   2,   0, 0xff, 0x00, 0x00, 0x00}, // bfill c c a 
	{0x7122, &op_bfill,	  2,   2,   1, 0xff, 0x00, 0x00, 0x00}, // bfill c c b 
	{0x7222, &op_bfill,	  2,   2,   2, 0xff, 0x00, 0x00, 0x00}, // bfill c c c 
	{0x7322, &op_bfill,	  2,   2,   3, 0xff, 0x00, 0x00, 0x00}, // bfill c c d 
	{0x7422, &op_bfill,	  2,   2,   4, 0xff, 0x00, 0x00, 0x00}, // bfill c c e 
	{0x7522, &op_bfill,	  2,   2,   5, 0xff, 0x00, 0x00, 0x00}, // bfill c c f 
	{0x7622, &op_bfill,	  2,   2,   6, 0xff, 0x00, 0x00, 0x00}, // bfill c c g 
	{0x7722, &op_bfill,	  2,   2,   7, 0xff, 0x00, 0x00, 0x00}, // bfill c c h 
	{0x7822, &op_bfill,	  2,   2,   8, 0xff, 0x00, 0x00, 0x00}, // bfill c c pc 
	{0x7922, &op_bfill,	  2,   2,   9, 0xff, 0x00, 0x00, 0x00}, // bfill c c ra 
	{0x7a22, &op_bfill,	  2,   2,  10, 0xff, 0x00, 0x00, 0x00}, // bfill c c sb 
	{0x7b22, &op_bfill,	  2,   2,  11, 0xff, 0x00, 0x00, 0x00}, // bfill c c sp 
	{0x7c22, &op_bfill,	  2,   2,  12, 0xff, 0x00, 0x00, 0x00}, // bfill c c db 
	{0x7d22, &op_bfill,	  2,   2,  13, 0xff, 0x00, 0x00, 0x00}, // bfill c c cb 
	{0x7e22, &op_bfill,	  2,   2,  14, 0xff, 0x00, 0x00, 0x00}, // bfill c c pi 
	{0x7f22, &op_bfill,	  2,   2,   8, 0xff, 0x00, 0x04, 0x00}, // bfill c c <literal> 
	{0x7032, &op_bfill,	  2,   3,   0, 0xff, 0x00, 0x00, 0x00}, // bfill c d a 
	{0x7132, &op_bfill,	  2,   3,   1, 0xff, 0x00, 0x00, 0x00}, // bfill c d b 
	{0x7232, &op_bfill,	  2,   3,   2, 0xff, 0x00, 0x00, 0x00}, // bfill c d c 
	{0x7332, &op_bfill,	  2,   3,   3, 0xff, 0x00, 0x00, 0x00}, // bfill c d d 
	{0x7432, &op_bfill,	  2,   3,   4, 0xff, 0x00, 0x00, 0x00}, // bfill c d e 
	{0x7532, &op_bfill,	  2,   3,   5, 0xff, 0x00, 0x00, 0x00}, // bfill c d f 
	{0x7632, &op_bfill,	  2,   3,   6, 0xff, 0x00, 0x00, 0x00}, // bfill c d g 
	{0x7732, &op_bfill,	  2,   3,   7, 0xff, 0x00, 0x00, 0x00}, // bfill c d h 
	{0x7832, &op_bfill,	  2,   3,   8, 0xff, 0x00, 0x00, 0x00}, // bfill c d pc 
	{0x7932, &op_bfill,	  2,   3,   9, 0xff, 0x00, 0x00, 0x00}, // bfill c d ra 
	{0x7a32, &op_bfill,	  2,   3,  10, 0xff, 0x00, 0x00, 0x00}, // bfill c d sb 
	{0x7b32, &op_bfill,	  2,   3,  11, 0xff, 0x00, 0x00, 0x00}, // bfill c d sp 
	{0x7c32, &op_bfill,	  2,   3,  12, 0xff, 0x00, 0x00, 0x00}, // bfill c d db 
	{0x7d32, &op_bfill,	  2,   3,  13, 0xff, 0x00, 0x00, 0x00}, // bfill c d cb 
	{0x7e32, &op_bfill,	  2,   3,  14, 0xff, 0x00, 0x00, 0x00}, // bfill c d pi 
	{0x7f32, &op_bfill,	  2,   3,   8, 0xff, 0x00, 0x04, 0x00}, // bfill c d <literal> 
	{0x7042, &op_bfill,	  2,   4,   0, 0xff, 0x00, 0x00, 0x00}, // bfill c e a 
	{0x7142, &op_bfill,	  2,   4,   1, 0xff, 0x00, 0x00, 0x00}, // bfill c e b 
	{0x7242, &op_bfill,	  2,   4,   2, 0xff, 0x00, 0x00, 0x00}, // bfill c e c 
	{0x7342, &op_bfill,	  2,   4,   3, 0xff, 0x00, 0x00, 0x00}, // bfill c e d 
	{0x7442, &op_bfill,	  2,   4,   4, 0xff, 0x00, 0x00, 0x00}, // bfill c e e 
	{0x7542, &op_bfill,	  2,   4,   5, 0xff, 0x00, 0x00, 0x00}, // bfill c e f 
	{0x7642, &op_bfill,	  2,   4,   6, 0xff, 0x00, 0x00, 0x00}, // bfill c e g 
	{0x7742, &op_bfill,	  2,   4,   7, 0xff, 0x00, 0x00, 0x00}, // bfill c e h 
	{0x7842, &op_bfill,	  2,   4,   8, 0xff, 0x00, 0x00, 0x00}, // bfill c e pc 
	{0x7942, &op_bfill,	  2,   4,   9, 0xff, 0x00, 0x00, 0x00}, // bfill c e ra 
	{0x7a42, &op_bfill,	  2,   4,  10, 0xff, 0x00, 0x00, 0x00}, // bfill c e sb 
	{0x7b42, &op_bfill,	  2,   4,  11, 0xff, 0x00, 0x00, 0x00}, // bfill c e sp 
	{0x7c42, &op_bfill,	  2,   4,  12, 0xff, 0x00, 0x00, 0x00}, // bfill c e db 
	{0x7d42, &op_bfill,	  2,   4,  13, 0xff, 0x00, 0x00, 0x00}, // bfill c e cb 
	{0x7e42, &op_bfill,	  2,   4,  14, 0xff, 0x00, 0x00, 0x00}, // bfill c e pi 
	{0x7f42, &op_bfill,	  2,   4,   8, 0xff, 0x00, 0x04, 0x00}, // bfill c e <literal> 
	{0x7052, &op_bfill,	  2,   5,   0, 0xff, 0x00, 0x00, 0x00}, // bfill c f a 
	{0x7152, &op_bfill,	  2,   5,   1, 0xff, 0x00, 0x00, 0x00}, // bfill c f b 
	{0x7252, &op_bfill,	  2,   5,   2, 0xff, 0x00, 0x00, 0x00}, // bfill c f c 
	{0x7352, &op_bfill,	  2,   5,   3, 0xff, 0x00, 0x00, 0x00}, // bfill c f d 
	{0x7452, &op_bfill,	  2,   5,   4, 0xff, 0x00, 0x00, 0x00}, // bfill c f e 
	{0x7552, &op_bfill,	  2,   5,   5, 0xff, 0x00, 0x00, 0x00}, // bfill c f f 
	{0x7652, &op_bfill,	  2,   5,   6, 0xff, 0x00, 0x00, 0x00}, // bfill c f g 
	{0x7752, &op_bfill,	  2,   5,   7, 0xff, 0x00, 0x00, 0x00}, // bfill c f h 
	{0x7852, &op_bfill,	  2,   5,   8, 0xff, 0x00, 0x00, 0x00}, // bfill c f pc 
	{0x7952, &op_bfill,	  2,   5,   9, 0xff, 0x00, 0x00, 0x00}, // bfill c f ra 
	{0x7a52, &op_bfill,	  2,   5,  10, 0xff, 0x00, 0x00, 0x00}, // bfill c f sb 
	{0x7b52, &op_bfill,	  2,   5,  11, 0xff, 0x00, 0x00, 0x00}, // bfill c f sp 
	{0x7c52, &op_bfill,	  2,   5,  12, 0xff, 0x00, 0x00, 0x00}, // bfill c f db 
	{0x7d52, &op_bfill,	  2,   5,  13, 0xff, 0x00, 0x00, 0x00}, // bfill c f cb 
	{0x7e52, &op_bfill,	  2,   5,  14, 0xff, 0x00, 0x00, 0x00}, // bfill c f pi 
	{0x7f52, &op_bfill,	  2,   5,   8, 0xff, 0x00, 0x04, 0x00}, // bfill c f <literal> 
	{0x7062, &op_bfill,	  2,   6,   0, 0xff, 0x00, 0x00, 0x00}, // bfill c g a 
	{0x7162, &op_bfill,	  2,   6,   1, 0xff, 0x00, 0x00, 0x00}, // bfill c g b 
	{0x7262, &op_bfill,	  2,   6,   2, 0xff, 0x00, 0x00, 0x00}, // bfill c g c 
	{0x7362, &op_bfill,	  2,   6,   3, 0xff, 0x00, 0x00, 0x00}, // bfill c g d 
	{0x7462, &op_bfill,	  2,   6,   4, 0xff, 0x00, 0x00, 0x00}, // bfill c g e 
	{0x7562, &op_bfill,	  2,   6,   5, 0xff, 0x00, 0x00, 0x00}, // bfill c g f 
	{0x7662, &op_bfill,	  2,   6,   6, 0xff, 0x00, 0x00, 0x00}, // bfill c g g 
	{0x7762, &op_bfill,	  2,   6,   7, 0xff, 0x00, 0x00, 0x00}, // bfill c g h 
	{0x7862, &op_bfill,	  2,   6,   8, 0xff, 0x00, 0x00, 0x00}, // bfill c g pc 
	{0x7962, &op_bfill,	  2,   6,   9, 0xff, 0x00, 0x00, 0x00}, // bfill c g ra 
	{0x7a62, &op_bfill,	  2,   6,  10, 0xff, 0x00, 0x00, 0x00}, // bfill c g sb 
	{0x7b62, &op_bfill,	  2,   6,  11, 0xff, 0x00, 0x00, 0x00}, // bfill c g sp 
	{0x7c62, &op_bfill,	  2,   6,  12, 0xff, 0x00, 0x00, 0x00}, // bfill c g db 
	{0x7d62, &op_bfill,	  2,   6,  13, 0xff, 0x00, 0x00, 0x00}, // bfill c g cb 
	{0x7e62, &op_bfill,	  2,   6,  14, 0xff, 0x00, 0x00, 0x00}, // bfill c g pi 
	{0x7f62, &op_bfill,	  2,   6,   8, 0xff, 0x00, 0x04, 0x00}, // bfill c g <literal> 
	{0x7072, &op_bfill,	  2,   7,   0, 0xff, 0x00, 0x00, 0x00}, // bfill c h a 
	{0x7172, &op_bfill,	  2,   7,   1, 0xff, 0x00, 0x00, 0x00}, // bfill c h b 
	{0x7272, &op_bfill,	  2,   7,   2, 0xff, 0x00, 0x00, 0x00}, // bfill c h c 
	{0x7372, &op_bfill,	  2,   7,   3, 0xff, 0x00, 0x00, 0x00}, // bfill c h d 
	{0x7472, &op_bfill,	  2,   7,   4, 0xff, 0x00, 0x00, 0x00}, // bfill c h e 
	{0x7572, &op_bfill,	  2,   7,   5, 0xff, 0x00, 0x00, 0x00}, // bfill c h f 
	{0x7672, &op_bfill,	  2,   7,   6, 0xff, 0x00, 0x00, 0x00}, // bfill c h g 
	{0x7772, &op_bfill,	  2,   7,   7, 0xff, 0x00, 0x00, 0x00}, // bfill c h h 
	{0x7872, &op_bfill,	  2,   7,   8, 0xff, 0x00, 0x00, 0x00}, // bfill c h pc 
	{0x7972, &op_bfill,	  2,   7,   9, 0xff, 0x00, 0x00, 0x00}, // bfill c h ra 
	{0x7a72, &op_bfill,	  2,   7,  10, 0xff, 0x00, 0x00, 0x00}, // bfill c h sb 
	{0x7b72, &op_bfill,	  2,   7,  11, 0xff, 0x00, 0x00, 0x00}, // bfill c h sp 
	{0x7c72, &op_bfill,	  2,   7,  12, 0xff, 0x00, 0x00, 0x00}, // bfill c h db 
	{0x7d72, &op_bfill,	  2,   7,  13, 0xff, 0x00, 0x00, 0x00}, // bfill c h cb 
	{0x7e72, &op_bfill,	  2,   7,  14, 0xff, 0x00, 0x00, 0x00}, // bfill c h pi 
	{0x7f72, &op_bfill,	  2,   7,   8, 0xff, 0x00, 0x04, 0x00}, // bfill c h <literal> 
	{0x7082, &op_bfill,	  2,   8,   0, 0xff, 0x00, 0x00, 0x00}, // bfill c pc a 
	{0x7182, &op_bfill,	  2,   8,   1, 0xff, 0x00, 0x00, 0x00}, // bfill c pc b 
	{0x7282, &op_bfill,	  2,   8,   2, 0xff, 0x00, 0x00, 0x00}, // bfill c pc c 
	{0x7382, &op_bfill,	  2,   8,   3, 0xff, 0x00, 0x00, 0x00}, // bfill c pc d 
	{0x7482, &op_bfill,	  2,   8,   4, 0xff, 0x00, 0x00, 0x00}, // bfill c pc e 
	{0x7582, &op_bfill,	  2,   8,   5, 0xff, 0x00, 0x00, 0x00}, // bfill c pc f 
	{0x7682, &op_bfill,	  2,   8,   6, 0xff, 0x00, 0x00, 0x00}, // bfill c pc g 
	{0x7782, &op_bfill,	  2,   8,   7, 0xff, 0x00, 0x00, 0x00}, // bfill c pc h 
	{0x7882, &op_bfill,	  2,   8,   8, 0xff, 0x00, 0x00, 0x00}, // bfill c pc pc 
	{0x7982, &op_bfill,	  2,   8,   9, 0xff, 0x00, 0x00, 0x00}, // bfill c pc ra 
	{0x7a82, &op_bfill,	  2,   8,  10, 0xff, 0x00, 0x00, 0x00}, // bfill c pc sb 
	{0x7b82, &op_bfill,	  2,   8,  11, 0xff, 0x00, 0x00, 0x00}, // bfill c pc sp 
	{0x7c82, &op_bfill,	  2,   8,  12, 0xff, 0x00, 0x00, 0x00}, // bfill c pc db 
	{0x7d82, &op_bfill,	  2,   8,  13, 0xff, 0x00, 0x00, 0x00}, // bfill c pc cb 
	{0x7e82, &op_bfill,	  2,   8,  14, 0xff, 0x00, 0x00, 0x00}, // bfill c pc pi 
	{0x7f82, &op_bfill,	  2,   8,   8, 0xff, 0x00, 0x04, 0x00}, // bfill c pc <literal> 
	{0x7092, &op_bfill,	  2,   9,   0, 0xff, 0x00, 0x00, 0x00}, // bfill c ra a 
	{0x7192, &op_bfill,	  2,   9,   1, 0xff, 0x00, 0x00, 0x00}, // bfill c ra b 
	{0x7292, &op_bfill,	  2,   9,   2, 0xff, 0x00, 0x00, 0x00}, // bfill c ra c 
	{0x7392, &op_bfill,	  2,   9,   3, 0xff, 0x00, 0x00, 0x00}, // bfill c ra d 
	{0x7492, &op_bfill,	  2,   9,   4, 0xff, 0x00, 0x00, 0x00}, // bfill c ra e 
	{0x7592, &op_bfill,	  2,   9,   5, 0xff, 0x00, 0x00, 0x00}, // bfill c ra f 
	{0x7692, &op_bfill,	  2,   9,   6, 0xff, 0x00, 0x00, 0x00}, // bfill c ra g 
	{0x7792, &op_bfill,	  2,   9,   7, 0xff, 0x00, 0x00, 0x00}, // bfill c ra h 
	{0x7892, &op_bfill,	  2,   9,   8, 0xff, 0x00, 0x00, 0x00}, // bfill c ra pc 
	{0x7992, &op_bfill,	  2,   9,   9, 0xff, 0x00, 0x00, 0x00}, // bfill c ra ra 
	{0x7a92, &op_bfill,	  2,   9,  10, 0xff, 0x00, 0x00, 0x00}, // bfill c ra sb 
	{0x7b92, &op_bfill,	  2,   9,  11, 0xff, 0x00, 0x00, 0x00}, // bfill c ra sp 
	{0x7c92, &op_bfill,	  2,   9,  12, 0xff, 0x00, 0x00, 0x00}, // bfill c ra db 
	{0x7d92, &op_bfill,	  2,   9,  13, 0xff, 0x00, 0x00, 0x00}, // bfill c ra cb 
	{0x7e92, &op_bfill,	  2,   9,  14, 0xff, 0x00, 0x00, 0x00}, // bfill c ra pi 
	{0x7f92, &op_bfill,	  2,   9,   8, 0xff, 0x00, 0x04, 0x00}, // bfill c ra <literal> 
	{0x70a2, &op_bfill,	  2,  10,   0, 0xff, 0x00, 0x00, 0x00}, // bfill c sb a 
	{0x71a2, &op_bfill,	  2,  10,   1, 0xff, 0x00, 0x00, 0x00}, // bfill c sb b 
	{0x72a2, &op_bfill,	  2,  10,   2, 0xff, 0x00, 0x00, 0x00}, // bfill c sb c 
	{0x73a2, &op_bfill,	  2,  10,   3, 0xff, 0x00, 0x00, 0x00}, // bfill c sb d 
	{0x74a2, &op_bfill,	  2,  10,   4, 0xff, 0x00, 0x00, 0x00}, // bfill c sb e 
	{0x75a2, &op_bfill,	  2,  10,   5, 0xff, 0x00, 0x00, 0x00}, // bfill c sb f 
	{0x76a2, &op_bfill,	  2,  10,   6, 0xff, 0x00, 0x00, 0x00}, // bfill c sb g 
	{0x77a2, &op_bfill,	  2,  10,   7, 0xff, 0x00, 0x00, 0x00}, // bfill c sb h 
	{0x78a2, &op_bfill,	  2,  10,   8, 0xff, 0x00, 0x00, 0x00}, // bfill c sb pc 
	{0x79a2, &op_bfill,	  2,  10,   9, 0xff, 0x00, 0x00, 0x00}, // bfill c sb ra 
	{0x7aa2, &op_bfill,	  2,  10,  10, 0xff, 0x00, 0x00, 0x00}, // bfill c sb sb 
	{0x7ba2, &op_bfill,	  2,  10,  11, 0xff, 0x00, 0x00, 0x00}, // bfill c sb sp 
	{0x7ca2, &op_bfill,	  2,  10,  12, 0xff, 0x00, 0x00, 0x00}, // bfill c sb db 
	{0x7da2, &op_bfill,	  2,  10,  13, 0xff, 0x00, 0x00, 0x00}, // bfill c sb cb 
	{0x7ea2, &op_bfill,	  2,  10,  14, 0xff, 0x00, 0x00, 0x00}, // bfill c sb pi 
	{0x7fa2, &op_bfill,	  2,  10,   8, 0xff, 0x00, 0x04, 0x00}, // bfill c sb <literal> 
	{0x70b2, &op_bfill,	  2,  11,   0, 0xff, 0x00, 0x00, 0x00}, // bfill c sp a 
	{0x71b2, &op_bfill,	  2,  11,   1, 0xff, 0x00, 0x00, 0x00}, // bfill c sp b 
	{0x72b2, &op_bfill,	  2,  11,   2, 0xff, 0x00, 0x00, 0x00}, // bfill c sp c 
	{0x73b2, &op_bfill,	  2,  11,   3, 0xff, 0x00, 0x00, 0x00}, // bfill c sp d 
	{0x74b2, &op_bfill,	  2,  11,   4, 0xff, 0x00, 0x00, 0x00}, // bfill c sp e 
	{0x75b2, &op_bfill,	  2,  11,   5, 0xff, 0x00, 0x00, 0x00}, // bfill c sp f 
	{0x76b2, &op_bfill,	  2,  11,   6, 0xff, 0x00, 0x00, 0x00}, // bfill c sp g 
	{0x77b2, &op_bfill,	  2,  11,   7, 0xff, 0x00, 0x00, 0x00}, // bfill c sp h 
	{0x78b2, &op_bfill,	  2,  11,   8, 0xff, 0x00, 0x00, 0x00}, // bfill c sp pc 
	{0x79b2, &op_bfill,	  2,  11,   9, 0xff, 0x00, 0x00, 0x00}, // bfill c sp ra 
	{0x7ab2, &op_bfill,	  2,  11,  10, 0xff, 0x00, 0x00, 0x00}, // bfill c sp sb 
	{0x7bb2, &op_bfill,	  2,  11,  11, 0xff, 0x00, 0x00, 0x00}, // bfill c sp sp 
	{0x7cb2, &op_bfill,	  2,  11,  12, 0xff, 0x00, 0x00, 0x00}, // bfill c sp db 
	{0x7db2, &op_bfill,	  2,  11,  13, 0xff, 0x00, 0x00, 0x00}, // bfill c sp cb 
	{0x7eb2, &op_bfill,	  2,  11,  14, 0xff, 0x00, 0x00, 0x00}, // bfill c sp pi 
	{0x7fb2, &op_bfill,	  2,  11,   8, 0xff, 0x00, 0x04, 0x00}, // bfill c sp <literal> 
	{0x70c2, &op_bfill,	  2,  12,   0, 0xff, 0x00, 0x00, 0x00}, // bfill c db a 
	{0x71c2, &op_bfill,	  2,  12,   1, 0xff, 0x00, 0x00, 0x00}, // bfill c db b 
	{0x72c2, &op_bfill,	  2,  12,   2, 0xff, 0x00, 0x00, 0x00}, // bfill c db c 
	{0x73c2, &op_bfill,	  2,  12,   3, 0xff, 0x00, 0x00, 0x00}, // bfill c db d 
	{0x74c2, &op_bfill,	  2,  12,   4, 0xff, 0x00, 0x00, 0x00}, // bfill c db e 
	{0x75c2, &op_bfill,	  2,  12,   5, 0xff, 0x00, 0x00, 0x00}, // bfill c db f 
	{0x76c2, &op_bfill,	  2,  12,   6, 0xff, 0x00, 0x00, 0x00}, // bfill c db g 
	{0x77c2, &op_bfill,	  2,  12,   7, 0xff, 0x00, 0x00, 0x00}, // bfill c db h 
	{0x78c2, &op_bfill,	  2,  12,   8, 0xff, 0x00, 0x00, 0x00}, // bfill c db pc 
	{0x79c2, &op_bfill,	  2,  12,   9, 0xff, 0x00, 0x00, 0x00}, // bfill c db ra 
	{0x7ac2, &op_bfill,	  2,  12,  10, 0xff, 0x00, 0x00, 0x00}, // bfill c db sb 
	{0x7bc2, &op_bfill,	  2,  12,  11, 0xff, 0x00, 0x00, 0x00}, // bfill c db sp 
	{0x7cc2, &op_bfill,	  2,  12,  12, 0xff, 0x00, 0x00, 0x00}, // bfill c db db 
	{0x7dc2, &op_bfill,	  2,  12,  13, 0xff, 0x00, 0x00, 0x00}, // bfill c db cb 
	{0x7ec2, &op_bfill,	  2,  12,  14, 0xff, 0x00, 0x00, 0x00}, // bfill c db pi 
	{0x7fc2, &op_bfill,	  2,  12,   8, 0xff, 0x00, 0x04, 0x00}, // bfill c db <literal> 
	{0x70d2, &op_bfill,	  2,  13,   0, 0xff, 0x00, 0x00, 0x00}, // bfill c cb a 
	{0x71d2, &op_bfill,	  2,  13,   1, 0xff, 0x00, 0x00, 0x00}, // bfill c cb b 
	{0x72d2, &op_bfill,	  2,  13,   2, 0xff, 0x00, 0x00, 0x00}, // bfill c cb c 
	{0x73d2, &op_bfill,	  2,  13,   3, 0xff, 0x00, 0x00, 0x00}, // bfill c cb d 
	{0x74d2, &op_bfill,	  2,  13,   4, 0xff, 0x00, 0x00, 0x00}, // bfill c cb e 
	{0x75d2, &op_bfill,	  2,  13,   5, 0xff, 0x00, 0x00, 0x00}, // bfill c cb f 
	{0x76d2, &op_bfill,	  2,  13,   6, 0xff, 0x00, 0x00, 0x00}, // bfill c cb g 
	{0x77d2, &op_bfill,	  2,  13,   7, 0xff, 0x00, 0x00, 0x00}, // bfill c cb h 
	{0x78d2, &op_bfill,	  2,  13,   8, 0xff, 0x00, 0x00, 0x00}, // bfill c cb pc 
	{0x79d2, &op_bfill,	  2,  13,   9, 0xff, 0x00, 0x00, 0x00}, // bfill c cb ra 
	{0x7ad2, &op_bfill,	  2,  13,  10, 0xff, 0x00, 0x00, 0x00}, // bfill c cb sb 
	{0x7bd2, &op_bfill,	  2,  13,  11, 0xff, 0x00, 0x00, 0x00}, // bfill c cb sp 
	{0x7cd2, &op_bfill,	  2,  13,  12, 0xff, 0x00, 0x00, 0x00}, // bfill c cb db 
	{0x7dd2, &op_bfill,	  2,  13,  13, 0xff, 0x00, 0x00, 0x00}, // bfill c cb cb 
	{0x7ed2, &op_bfill,	  2,  13,  14, 0xff, 0x00, 0x00, 0x00}, // bfill c cb pi 
	{0x7fd2, &op_bfill,	  2,  13,   8, 0xff, 0x00, 0x04, 0x00}, // bfill c cb <literal> 
	{0x70e2, &op_bfill,	  2,  14,   0, 0xff, 0x00, 0x00, 0x00}, // bfill c pi a 
	{0x71e2, &op_bfill,	  2,  14,   1, 0xff, 0x00, 0x00, 0x00}, // bfill c pi b 
	{0x72e2, &op_bfill,	  2,  14,   2, 0xff, 0x00, 0x00, 0x00}, // bfill c pi c 
	{0x73e2, &op_bfill,	  2,  14,   3, 0xff, 0x00, 0x00, 0x00}, // bfill c pi d 
	{0x74e2, &op_bfill,	  2,  14,   4, 0xff, 0x00, 0x00, 0x00}, // bfill c pi e 
	{0x75e2, &op_bfill,	  2,  14,   5, 0xff, 0x00, 0x00, 0x00}, // bfill c pi f 
	{0x76e2, &op_bfill,	  2,  14,   6, 0xff, 0x00, 0x00, 0x00}, // bfill c pi g 
	{0x77e2, &op_bfill,	  2,  14,   7, 0xff, 0x00, 0x00, 0x00}, // bfill c pi h 
	{0x78e2, &op_bfill,	  2,  14,   8, 0xff, 0x00, 0x00, 0x00}, // bfill c pi pc 
	{0x79e2, &op_bfill,	  2,  14,   9, 0xff, 0x00, 0x00, 0x00}, // bfill c pi ra 
	{0x7ae2, &op_bfill,	  2,  14,  10, 0xff, 0x00, 0x00, 0x00}, // bfill c pi sb 
	{0x7be2, &op_bfill,	  2,  14,  11, 0xff, 0x00, 0x00, 0x00}, // bfill c pi sp 
	{0x7ce2, &op_bfill,	  2,  14,  12, 0xff, 0x00, 0x00, 0x00}, // bfill c pi db 
	{0x7de2, &op_bfill,	  2,  14,  13, 0xff, 0x00, 0x00, 0x00}, // bfill c pi cb 
	{0x7ee2, &op_bfill,	  2,  14,  14, 0xff, 0x00, 0x00, 0x00}, // bfill c pi pi 
	{0x7fe2, &op_bfill,	  2,  14,   8, 0xff, 0x00, 0x04, 0x00}, // bfill c pi <literal> 
	{0x70f2, &op_bfill,	  2,  15,   0, 0xff, 0x00, 0x00, 0x00}, // bfill c status a 
	{0x71f2, &op_bfill,	  2,  15,   1, 0xff, 0x00, 0x00, 0x00}, // bfill c status b 
	{0x72f2, &op_bfill,	  2,  15,   2, 0xff, 0x00, 0x00, 0x00}, // bfill c status c 
	{0x73f2, &op_bfill,	  2,  15,   3, 0xff, 0x00, 0x00, 0x00}, // bfill c status d 
	{0x74f2, &op_bfill,	  2,  15,   4, 0xff, 0x00, 0x00, 0x00}, // bfill c status e 
	{0x75f2, &op_bfill,	  2,  15,   5, 0xff, 0x00, 0x00, 0x00}, // bfill c status f 
	{0x76f2, &op_bfill,	  2,  15,   6, 0xff, 0x00, 0x00, 0x00}, // bfill c status g 
	{0x77f2, &op_bfill,	  2,  15,   7, 0xff, 0x00, 0x00, 0x00}, // bfill c status h 
	{0x78f2, &op_bfill,	  2,  15,   8, 0xff, 0x00, 0x00, 0x00}, // bfill c status pc 
	{0x79f2, &op_bfill,	  2,  15,   9, 0xff, 0x00, 0x00, 0x00}, // bfill c status ra 
	{0x7af2, &op_bfill,	  2,  15,  10, 0xff, 0x00, 0x00, 0x00}, // bfill c status sb 
	{0x7bf2, &op_bfill,	  2,  15,  11, 0xff, 0x00, 0x00, 0x00}, // bfill c status sp 
	{0x7cf2, &op_bfill,	  2,  15,  12, 0xff, 0x00, 0x00, 0x00}, // bfill c status db 
	{0x7df2, &op_bfill,	  2,  15,  13, 0xff, 0x00, 0x00, 0x00}, // bfill c status cb 
	{0x7ef2, &op_bfill,	  2,  15,  14, 0xff, 0x00, 0x00, 0x00}, // bfill c status pi 
	{0x7ff2, &op_bfill,	  2,  15,   8, 0xff, 0x00, 0x04, 0x00}, // bfill c status <literal> 
	{0x7003, &op_bfill,	  3,   0,   0, 0xff, 0x00, 0x00, 0x00}, // bfill d a a 
	{0x7103, &op_bfill,	  3,   0,   1, 0xff, 0x00, 0x00, 0x00}, // bfill d a b 
	{0x7203, &op_bfill,	  3,   0,   2, 0xff, 0x00, 0x00, 0x00}, // bfill d a c 
	{0x7303, &op_bfill,	  3,   0,   3, 0xff, 0x00, 0x00, 0x00}, // bfill d a d 
	{0x7403, &op_bfill,	  3,   0,   4, 0xff, 0x00, 0x00, 0x00}, // bfill d a e 
	{0x7503, &op_bfill,	  3,   0,   5, 0xff, 0x00, 0x00, 0x00}, // bfill d a f 
	{0x7603, &op_bfill,	  3,   0,   6, 0xff, 0x00, 0x00, 0x00}, // bfill d a g 
	{0x7703, &op_bfill,	  3,   0,   7, 0xff, 0x00, 0x00, 0x00}, // bfill d a h 
	{0x7803, &op_bfill,	  3,   0,   8, 0xff, 0x00, 0x00, 0x00}, // bfill d a pc 
	{0x7903, &op_bfill,	  3,   0,   9, 0xff, 0x00, 0x00, 0x00}, // bfill d a ra 
	{0x7a03, &op_bfill,	  3,   0,  10, 0xff, 0x00, 0x00, 0x00}, // bfill d a sb 
	{0x7b03, &op_bfill,	  3,   0,  11, 0xff, 0x00, 0x00, 0x00}, // bfill d a sp 
	{0x7c03, &op_bfill,	  3,   0,  12, 0xff, 0x00, 0x00, 0x00}, // bfill d a db 
	{0x7d03, &op_bfill,	  3,   0,  13, 0xff, 0x00, 0x00, 0x00}, // bfill d a cb 
	{0x7e03, &op_bfill,	  3,   0,  14, 0xff, 0x00, 0x00, 0x00}, // bfill d a pi 
	{0x7f03, &op_bfill,	  3,   0,   8, 0xff, 0x00, 0x04, 0x00}, // bfill d a <literal> 
	{0x7013, &op_bfill,	  3,   1,   0, 0xff, 0x00, 0x00, 0x00}, // bfill d b a 
	{0x7113, &op_bfill,	  3,   1,   1, 0xff, 0x00, 0x00, 0x00}, // bfill d b b 
	{0x7213, &op_bfill,	  3,   1,   2, 0xff, 0x00, 0x00, 0x00}, // bfill d b c 
	{0x7313, &op_bfill,	  3,   1,   3, 0xff, 0x00, 0x00, 0x00}, // bfill d b d 
	{0x7413, &op_bfill,	  3,   1,   4, 0xff, 0x00, 0x00, 0x00}, // bfill d b e 
	{0x7513, &op_bfill,	  3,   1,   5, 0xff, 0x00, 0x00, 0x00}, // bfill d b f 
	{0x7613, &op_bfill,	  3,   1,   6, 0xff, 0x00, 0x00, 0x00}, // bfill d b g 
	{0x7713, &op_bfill,	  3,   1,   7, 0xff, 0x00, 0x00, 0x00}, // bfill d b h 
	{0x7813, &op_bfill,	  3,   1,   8, 0xff, 0x00, 0x00, 0x00}, // bfill d b pc 
	{0x7913, &op_bfill,	  3,   1,   9, 0xff, 0x00, 0x00, 0x00}, // bfill d b ra 
	{0x7a13, &op_bfill,	  3,   1,  10, 0xff, 0x00, 0x00, 0x00}, // bfill d b sb 
	{0x7b13, &op_bfill,	  3,   1,  11, 0xff, 0x00, 0x00, 0x00}, // bfill d b sp 
	{0x7c13, &op_bfill,	  3,   1,  12, 0xff, 0x00, 0x00, 0x00}, // bfill d b db 
	{0x7d13, &op_bfill,	  3,   1,  13, 0xff, 0x00, 0x00, 0x00}, // bfill d b cb 
	{0x7e13, &op_bfill,	  3,   1,  14, 0xff, 0x00, 0x00, 0x00}, // bfill d b pi 
	{0x7f13, &op_bfill,	  3,   1,   8, 0xff, 0x00, 0x04, 0x00}, // bfill d b <literal> 
	{0x7023, &op_bfill,	  3,   2,   0, 0xff, 0x00, 0x00, 0x00}, // bfill d c a 
	{0x7123, &op_bfill,	  3,   2,   1, 0xff, 0x00, 0x00, 0x00}, // bfill d c b 
	{0x7223, &op_bfill,	  3,   2,   2, 0xff, 0x00, 0x00, 0x00}, // bfill d c c 
	{0x7323, &op_bfill,	  3,   2,   3, 0xff, 0x00, 0x00, 0x00}, // bfill d c d 
	{0x7423, &op_bfill,	  3,   2,   4, 0xff, 0x00, 0x00, 0x00}, // bfill d c e 
	{0x7523, &op_bfill,	  3,   2,   5, 0xff, 0x00, 0x00, 0x00}, // bfill d c f 
	{0x7623, &op_bfill,	  3,   2,   6, 0xff, 0x00, 0x00, 0x00}, // bfill d c g 
	{0x7723, &op_bfill,	  3,   2,   7, 0xff, 0x00, 0x00, 0x00}, // bfill d c h 
	{0x7823, &op_bfill,	  3,   2,   8, 0xff, 0x00, 0x00, 0x00}, // bfill d c pc 
	{0x7923, &op_bfill,	  3,   2,   9, 0xff, 0x00, 0x00, 0x00}, // bfill d c ra 
	{0x7a23, &op_bfill,	  3,   2,  10, 0xff, 0x00, 0x00, 0x00}, // bfill d c sb 
	{0x7b23, &op_bfill,	  3,   2,  11, 0xff, 0x00, 0x00, 0x00}, // bfill d c sp 
	{0x7c23, &op_bfill,	  3,   2,  12, 0xff, 0x00, 0x00, 0x00}, // bfill d c db 
	{0x7d23, &op_bfill,	  3,   2,  13, 0xff, 0x00, 0x00, 0x00}, // bfill d c cb 
	{0x7e23, &op_bfill,	  3,   2,  14, 0xff, 0x00, 0x00, 0x00}, // bfill d c pi 
	{0x7f23, &op_bfill,	  3,   2,   8, 0xff, 0x00, 0x04, 0x00}, // bfill d c <literal> 
	{0x7033, &op_bfill,	  3,   3,   0, 0xff, 0x00, 0x00, 0x00}, // bfill d d a 
	{0x7133, &op_bfill,	  3,   3,   1, 0xff, 0x00, 0x00, 0x00}, // bfill d d b 
	{0x7233, &op_bfill,	  3,   3,   2, 0xff, 0x00, 0x00, 0x00}, // bfill d d c 
	{0x7333, &op_bfill,	  3,   3,   3, 0xff, 0x00, 0x00, 0x00}, // bfill d d d 
	{0x7433, &op_bfill,	  3,   3,   4, 0xff, 0x00, 0x00, 0x00}, // bfill d d e 
	{0x7533, &op_bfill,	  3,   3,   5, 0xff, 0x00, 0x00, 0x00}, // bfill d d f 
	{0x7633, &op_bfill,	  3,   3,   6, 0xff, 0x00, 0x00, 0x00}, // bfill d d g 
	{0x7733, &op_bfill,	  3,   3,   7, 0xff, 0x00, 0x00, 0x00}, // bfill d d h 
	{0x7833, &op_bfill,	  3,   3,   8, 0xff, 0x00, 0x00, 0x00}, // bfill d d pc 
	{0x7933, &op_bfill,	  3,   3,   9, 0xff, 0x00, 0x00, 0x00}, // bfill d d ra 
	{0x7a33, &op_bfill,	  3,   3,  10, 0xff, 0x00, 0x00, 0x00}, // bfill d d sb 
	{0x7b33, &op_bfill,	  3,   3,  11, 0xff, 0x00, 0x00, 0x00}, // bfill d d sp 
	{0x7c33, &op_bfill,	  3,   3,  12, 0xff, 0x00, 0x00, 0x00}, // bfill d d db 
	{0x7d33, &op_bfill,	  3,   3,  13, 0xff, 0x00, 0x00, 0x00}, // bfill d d cb 
	{0x7e33, &op_bfill,	  3,   3,  14, 0xff, 0x00, 0x00, 0x00}, // bfill d d pi 
	{0x7f33, &op_bfill,	  3,   3,   8, 0xff, 0x00, 0x04, 0x00}, // bfill d d <literal> 
	{0x7043, &op_bfill,	  3,   4,   0, 0xff, 0x00, 0x00, 0x00}, // bfill d e a 
	{0x7143, &op_bfill,	  3,   4,   1, 0xff, 0x00, 0x00, 0x00}, // bfill d e b 
	{0x7243, &op_bfill,	  3,   4,   2, 0xff, 0x00, 0x00, 0x00}, // bfill d e c 
	{0x7343, &op_bfill,	  3,   4,   3, 0xff, 0x00, 0x00, 0x00}, // bfill d e d 
	{0x7443, &op_bfill,	  3,   4,   4, 0xff, 0x00, 0x00, 0x00}, // bfill d e e 
	{0x7543, &op_bfill,	  3,   4,   5, 0xff, 0x00, 0x00, 0x00}, // bfill d e f 
	{0x7643, &op_bfill,	  3,   4,   6, 0xff, 0x00, 0x00, 0x00}, // bfill d e g 
	{0x7743, &op_bfill,	  3,   4,   7, 0xff, 0x00, 0x00, 0x00}, // bfill d e h 
	{0x7843, &op_bfill,	  3,   4,   8, 0xff, 0x00, 0x00, 0x00}, // bfill d e pc 
	{0x7943, &op_bfill,	  3,   4,   9, 0xff, 0x00, 0x00, 0x00}, // bfill d e ra 
	{0x7a43, &op_bfill,	  3,   4,  10, 0xff, 0x00, 0x00, 0x00}, // bfill d e sb 
	{0x7b43, &op_bfill,	  3,   4,  11, 0xff, 0x00, 0x00, 0x00}, // bfill d e sp 
	{0x7c43, &op_bfill,	  3,   4,  12, 0xff, 0x00, 0x00, 0x00}, // bfill d e db 
	{0x7d43, &op_bfill,	  3,   4,  13, 0xff, 0x00, 0x00, 0x00}, // bfill d e cb 
	{0x7e43, &op_bfill,	  3,   4,  14, 0xff, 0x00, 0x00, 0x00}, // bfill d e pi 
	{0x7f43, &op_bfill,	  3,   4,   8, 0xff, 0x00, 0x04, 0x00}, // bfill d e <literal> 
	{0x7053, &op_bfill,	  3,   5,   0, 0xff, 0x00, 0x00, 0x00}, // bfill d f a 
	{0x7153, &op_bfill,	  3,   5,   1, 0xff, 0x00, 0x00, 0x00}, // bfill d f b 
	{0x7253, &op_bfill,	  3,   5,   2, 0xff, 0x00, 0x00, 0x00}, // bfill d f c 
	{0x7353, &op_bfill,	  3,   5,   3, 0xff, 0x00, 0x00, 0x00}, // bfill d f d 
	{0x7453, &op_bfill,	  3,   5,   4, 0xff, 0x00, 0x00, 0x00}, // bfill d f e 
	{0x7553, &op_bfill,	  3,   5,   5, 0xff, 0x00, 0x00, 0x00}, // bfill d f f 
	{0x7653, &op_bfill,	  3,   5,   6, 0xff, 0x00, 0x00, 0x00}, // bfill d f g 
	{0x7753, &op_bfill,	  3,   5,   7, 0xff, 0x00, 0x00, 0x00}, // bfill d f h 
	{0x7853, &op_bfill,	  3,   5,   8, 0xff, 0x00, 0x00, 0x00}, // bfill d f pc 
	{0x7953, &op_bfill,	  3,   5,   9, 0xff, 0x00, 0x00, 0x00}, // bfill d f ra 
	{0x7a53, &op_bfill,	  3,   5,  10, 0xff, 0x00, 0x00, 0x00}, // bfill d f sb 
	{0x7b53, &op_bfill,	  3,   5,  11, 0xff, 0x00, 0x00, 0x00}, // bfill d f sp 
	{0x7c53, &op_bfill,	  3,   5,  12, 0xff, 0x00, 0x00, 0x00}, // bfill d f db 
	{0x7d53, &op_bfill,	  3,   5,  13, 0xff, 0x00, 0x00, 0x00}, // bfill d f cb 
	{0x7e53, &op_bfill,	  3,   5,  14, 0xff, 0x00, 0x00, 0x00}, // bfill d f pi 
	{0x7f53, &op_bfill,	  3,   5,   8, 0xff, 0x00, 0x04, 0x00}, // bfill d f <literal> 
	{0x7063, &op_bfill,	  3,   6,   0, 0xff, 0x00, 0x00, 0x00}, // bfill d g a 
	{0x7163, &op_bfill,	  3,   6,   1, 0xff, 0x00, 0x00, 0x00}, // bfill d g b 
	{0x7263, &op_bfill,	  3,   6,   2, 0xff, 0x00, 0x00, 0x00}, // bfill d g c 
	{0x7363, &op_bfill,	  3,   6,   3, 0xff, 0x00, 0x00, 0x00}, // bfill d g d 
	{0x7463, &op_bfill,	  3,   6,   4, 0xff, 0x00, 0x00, 0x00}, // bfill d g e 
	{0x7563, &op_bfill,	  3,   6,   5, 0xff, 0x00, 0x00, 0x00}, // bfill d g f 
	{0x7663, &op_bfill,	  3,   6,   6, 0xff, 0x00, 0x00, 0x00}, // bfill d g g 
	{0x7763, &op_bfill,	  3,   6,   7, 0xff, 0x00, 0x00, 0x00}, // bfill d g h 
	{0x7863, &op_bfill,	  3,   6,   8, 0xff, 0x00, 0x00, 0x00}, // bfill d g pc 
	{0x7963, &op_bfill,	  3,   6,   9, 0xff, 0x00, 0x00, 0x00}, // bfill d g ra 
	{0x7a63, &op_bfill,	  3,   6,  10, 0xff, 0x00, 0x00, 0x00}, // bfill d g sb 
	{0x7b63, &op_bfill,	  3,   6,  11, 0xff, 0x00, 0x00, 0x00}, // bfill d g sp 
	{0x7c63, &op_bfill,	  3,   6,  12, 0xff, 0x00, 0x00, 0x00}, // bfill d g db 
	{0x7d63, &op_bfill,	  3,   6,  13, 0xff, 0x00, 0x00, 0x00}, // bfill d g cb 
	{0x7e63, &op_bfill,	  3,   6,  14, 0xff, 0x00, 0x00, 0x00}, // bfill d g pi 
	{0x7f63, &op_bfill,	  3,   6,   8, 0xff, 0x00, 0x04, 0x00}, // bfill d g <literal> 
	{0x7073, &op_bfill,	  3,   7,   0, 0xff, 0x00, 0x00, 0x00}, // bfill d h a 
	{0x7173, &op_bfill,	  3,   7,   1, 0xff, 0x00, 0x00, 0x00}, // bfill d h b 
	{0x7273, &op_bfill,	  3,   7,   2, 0xff, 0x00, 0x00, 0x00}, // bfill d h c 
	{0x7373, &op_bfill,	  3,   7,   3, 0xff, 0x00, 0x00, 0x00}, // bfill d h d 
	{0x7473, &op_bfill,	  3,   7,   4, 0xff, 0x00, 0x00, 0x00}, // bfill d h e 
	{0x7573, &op_bfill,	  3,   7,   5, 0xff, 0x00, 0x00, 0x00}, // bfill d h f 
	{0x7673, &op_bfill,	  3,   7,   6, 0xff, 0x00, 0x00, 0x00}, // bfill d h g 
	{0x7773, &op_bfill,	  3,   7,   7, 0xff, 0x00, 0x00, 0x00}, // bfill d h h 
	{0x7873, &op_bfill,	  3,   7,   8, 0xff, 0x00, 0x00, 0x00}, // bfill d h pc 
	{0x7973, &op_bfill,	  3,   7,   9, 0xff, 0x00, 0x00, 0x00}, // bfill d h ra 
	{0x7a73, &op_bfill,	  3,   7,  10, 0xff, 0x00, 0x00, 0x00}, // bfill d h sb 
	{0x7b73, &op_bfill,	  3,   7,  11, 0xff, 0x00, 0x00, 0x00}, // bfill d h sp 
	{0x7c73, &op_bfill,	  3,   7,  12, 0xff, 0x00, 0x00, 0x00}, // bfill d h db 
	{0x7d73, &op_bfill,	  3,   7,  13, 0xff, 0x00, 0x00, 0x00}, // bfill d h cb 
	{0x7e73, &op_bfill,	  3,   7,  14, 0xff, 0x00, 0x00, 0x00}, // bfill d h pi 
	{0x7f73, &op_bfill,	  3,   7,   8, 0xff, 0x00, 0x04, 0x00}, // bfill d h <literal> 
	{0x7083, &op_bfill,	  3,   8,   0, 0xff, 0x00, 0x00, 0x00}, // bfill d pc a 
	{0x7183, &op_bfill,	  3,   8,   1, 0xff, 0x00, 0x00, 0x00}, // bfill d pc b 
	{0x7283, &op_bfill,	  3,   8,   2, 0xff, 0x00, 0x00, 0x00}, // bfill d pc c 
	{0x7383, &op_bfill,	  3,   8,   3, 0xff, 0x00, 0x00, 0x00}, // bfill d pc d 
	{0x7483, &op_bfill,	  3,   8,   4, 0xff, 0x00, 0x00, 0x00}, // bfill d pc e 
	{0x7583, &op_bfill,	  3,   8,   5, 0xff, 0x00, 0x00, 0x00}, // bfill d pc f 
	{0x7683, &op_bfill,	  3,   8,   6, 0xff, 0x00, 0x00, 0x00}, // bfill d pc g 
	{0x7783, &op_bfill,	  3,   8,   7, 0xff, 0x00, 0x00, 0x00}, // bfill d pc h 
	{0x7883, &op_bfill,	  3,   8,   8, 0xff, 0x00, 0x00, 0x00}, // bfill d pc pc 
	{0x7983, &op_bfill,	  3,   8,   9, 0xff, 0x00, 0x00, 0x00}, // bfill d pc ra 
	{0x7a83, &op_bfill,	  3,   8,  10, 0xff, 0x00, 0x00, 0x00}, // bfill d pc sb 
	{0x7b83, &op_bfill,	  3,   8,  11, 0xff, 0x00, 0x00, 0x00}, // bfill d pc sp 
	{0x7c83, &op_bfill,	  3,   8,  12, 0xff, 0x00, 0x00, 0x00}, // bfill d pc db 
	{0x7d83, &op_bfill,	  3,   8,  13, 0xff, 0x00, 0x00, 0x00}, // bfill d pc cb 
	{0x7e83, &op_bfill,	  3,   8,  14, 0xff, 0x00, 0x00, 0x00}, // bfill d pc pi 
	{0x7f83, &op_bfill,	  3,   8,   8, 0xff, 0x00, 0x04, 0x00}, // bfill d pc <literal> 
	{0x7093, &op_bfill,	  3,   9,   0, 0xff, 0x00, 0x00, 0x00}, // bfill d ra a 
	{0x7193, &op_bfill,	  3,   9,   1, 0xff, 0x00, 0x00, 0x00}, // bfill d ra b 
	{0x7293, &op_bfill,	  3,   9,   2, 0xff, 0x00, 0x00, 0x00}, // bfill d ra c 
	{0x7393, &op_bfill,	  3,   9,   3, 0xff, 0x00, 0x00, 0x00}, // bfill d ra d 
	{0x7493, &op_bfill,	  3,   9,   4, 0xff, 0x00, 0x00, 0x00}, // bfill d ra e 
	{0x7593, &op_bfill,	  3,   9,   5, 0xff, 0x00, 0x00, 0x00}, // bfill d ra f 
	{0x7693, &op_bfill,	  3,   9,   6, 0xff, 0x00, 0x00, 0x00}, // bfill d ra g 
	{0x7793, &op_bfill,	  3,   9,   7, 0xff, 0x00, 0x00, 0x00}, // bfill d ra h 
	{0x7893, &op_bfill,	  3,   9,   8, 0xff, 0x00, 0x00, 0x00}, // bfill d ra pc 
	{0x7993, &op_bfill,	  3,   9,   9, 0xff, 0x00, 0x00, 0x00}, // bfill d ra ra 
	{0x7a93, &op_bfill,	  3,   9,  10, 0xff, 0x00, 0x00, 0x00}, // bfill d ra sb 
	{0x7b93, &op_bfill,	  3,   9,  11, 0xff, 0x00, 0x00, 0x00}, // bfill d ra sp 
	{0x7c93, &op_bfill,	  3,   9,  12, 0xff, 0x00, 0x00, 0x00}, // bfill d ra db 
	{0x7d93, &op_bfill,	  3,   9,  13, 0xff, 0x00, 0x00, 0x00}, // bfill d ra cb 
	{0x7e93, &op_bfill,	  3,   9,  14, 0xff, 0x00, 0x00, 0x00}, // bfill d ra pi 
	{0x7f93, &op_bfill,	  3,   9,   8, 0xff, 0x00, 0x04, 0x00}, // bfill d ra <literal> 
	{0x70a3, &op_bfill,	  3,  10,   0, 0xff, 0x00, 0x00, 0x00}, // bfill d sb a 
	{0x71a3, &op_bfill,	  3,  10,   1, 0xff, 0x00, 0x00, 0x00}, // bfill d sb b 
	{0x72a3, &op_bfill,	  3,  10,   2, 0xff, 0x00, 0x00, 0x00}, // bfill d sb c 
	{0x73a3, &op_bfill,	  3,  10,   3, 0xff, 0x00, 0x00, 0x00}, // bfill d sb d 
	{0x74a3, &op_bfill,	  3,  10,   4, 0xff, 0x00, 0x00, 0x00}, // bfill d sb e 
	{0x75a3, &op_bfill,	  3,  10,   5, 0xff, 0x00, 0x00, 0x00}, // bfill d sb f 
	{0x76a3, &op_bfill,	  3,  10,   6, 0xff, 0x00, 0x00, 0x00}, // bfill d sb g 
	{0x77a3, &op_bfill,	  3,  10,   7, 0xff, 0x00, 0x00, 0x00}, // bfill d sb h 
	{0x78a3, &op_bfill,	  3,  10,   8, 0xff, 0x00, 0x00, 0x00}, // bfill d sb pc 
	{0x79a3, &op_bfill,	  3,  10,   9, 0xff, 0x00, 0x00, 0x00}, // bfill d sb ra 
	{0x7aa3, &op_bfill,	  3,  10,  10, 0xff, 0x00, 0x00, 0x00}, // bfill d sb sb 
	{0x7ba3, &op_bfill,	  3,  10,  11, 0xff, 0x00, 0x00, 0x00}, // bfill d sb sp 
	{0x7ca3, &op_bfill,	  3,  10,  12, 0xff, 0x00, 0x00, 0x00}, // bfill d sb db 
	{0x7da3, &op_bfill,	  3,  10,  13, 0xff, 0x00, 0x00, 0x00}, // bfill d sb cb 
	{0x7ea3, &op_bfill,	  3,  10,  14, 0xff, 0x00, 0x00, 0x00}, // bfill d sb pi 
	{0x7fa3, &op_bfill,	  3,  10,   8, 0xff, 0x00, 0x04, 0x00}, // bfill d sb <literal> 
	{0x70b3, &op_bfill,	  3,  11,   0, 0xff, 0x00, 0x00, 0x00}, // bfill d sp a 
	{0x71b3, &op_bfill,	  3,  11,   1, 0xff, 0x00, 0x00, 0x00}, // bfill d sp b 
	{0x72b3, &op_bfill,	  3,  11,   2, 0xff, 0x00, 0x00, 0x00}, // bfill d sp c 
	{0x73b3, &op_bfill,	  3,  11,   3, 0xff, 0x00, 0x00, 0x00}, // bfill d sp d 
	{0x74b3, &op_bfill,	  3,  11,   4, 0xff, 0x00, 0x00, 0x00}, // bfill d sp e 
	{0x75b3, &op_bfill,	  3,  11,   5, 0xff, 0x00, 0x00, 0x00}, // bfill d sp f 
	{0x76b3, &op_bfill,	  3,  11,   6, 0xff, 0x00, 0x00, 0x00}, // bfill d sp g 
	{0x77b3, &op_bfill,	  3,  11,   7, 0xff, 0x00, 0x00, 0x00}, // bfill d sp h 
	{0x78b3, &op_bfill,	  3,  11,   8, 0xff, 0x00, 0x00, 0x00}, // bfill d sp pc 
	{0x79b3, &op_bfill,	  3,  11,   9, 0xff, 0x00, 0x00, 0x00}, // bfill d sp ra 
	{0x7ab3, &op_bfill,	  3,  11,  10, 0xff, 0x00, 0x00, 0x00}, // bfill d sp sb 
	{0x7bb3, &op_bfill,	  3,  11,  11, 0xff, 0x00, 0x00, 0x00}, // bfill d sp sp 
	{0x7cb3, &op_bfill,	  3,  11,  12, 0xff, 0x00, 0x00, 0x00}, // bfill d sp db 
	{0x7db3, &op_bfill,	  3,  11,  13, 0xff, 0x00, 0x00, 0x00}, // bfill d sp cb 
	{0x7eb3, &op_bfill,	  3,  11,  14, 0xff, 0x00, 0x00, 0x00}, // bfill d sp pi 
	{0x7fb3, &op_bfill,	  3,  11,   8, 0xff, 0x00, 0x04, 0x00}, // bfill d sp <literal> 
	{0x70c3, &op_bfill,	  3,  12,   0, 0xff, 0x00, 0x00, 0x00}, // bfill d db a 
	{0x71c3, &op_bfill,	  3,  12,   1, 0xff, 0x00, 0x00, 0x00}, // bfill d db b 
	{0x72c3, &op_bfill,	  3,  12,   2, 0xff, 0x00, 0x00, 0x00}, // bfill d db c 
	{0x73c3, &op_bfill,	  3,  12,   3, 0xff, 0x00, 0x00, 0x00}, // bfill d db d 
	{0x74c3, &op_bfill,	  3,  12,   4, 0xff, 0x00, 0x00, 0x00}, // bfill d db e 
	{0x75c3, &op_bfill,	  3,  12,   5, 0xff, 0x00, 0x00, 0x00}, // bfill d db f 
	{0x76c3, &op_bfill,	  3,  12,   6, 0xff, 0x00, 0x00, 0x00}, // bfill d db g 
	{0x77c3, &op_bfill,	  3,  12,   7, 0xff, 0x00, 0x00, 0x00}, // bfill d db h 
	{0x78c3, &op_bfill,	  3,  12,   8, 0xff, 0x00, 0x00, 0x00}, // bfill d db pc 
	{0x79c3, &op_bfill,	  3,  12,   9, 0xff, 0x00, 0x00, 0x00}, // bfill d db ra 
	{0x7ac3, &op_bfill,	  3,  12,  10, 0xff, 0x00, 0x00, 0x00}, // bfill d db sb 
	{0x7bc3, &op_bfill,	  3,  12,  11, 0xff, 0x00, 0x00, 0x00}, // bfill d db sp 
	{0x7cc3, &op_bfill,	  3,  12,  12, 0xff, 0x00, 0x00, 0x00}, // bfill d db db 
	{0x7dc3, &op_bfill,	  3,  12,  13, 0xff, 0x00, 0x00, 0x00}, // bfill d db cb 
	{0x7ec3, &op_bfill,	  3,  12,  14, 0xff, 0x00, 0x00, 0x00}, // bfill d db pi 
	{0x7fc3, &op_bfill,	  3,  12,   8, 0xff, 0x00, 0x04, 0x00}, // bfill d db <literal> 
	{0x70d3, &op_bfill,	  3,  13,   0, 0xff, 0x00, 0x00, 0x00}, // bfill d cb a 
	{0x71d3, &op_bfill,	  3,  13,   1, 0xff, 0x00, 0x00, 0x00}, // bfill d cb b 
	{0x72d3, &op_bfill,	  3,  13,   2, 0xff, 0x00, 0x00, 0x00}, // bfill d cb c 
	{0x73d3, &op_bfill,	  3,  13,   3, 0xff, 0x00, 0x00, 0x00}, // bfill d cb d 
	{0x74d3, &op_bfill,	  3,  13,   4, 0xff, 0x00, 0x00, 0x00}, // bfill d cb e 
	{0x75d3, &op_bfill,	  3,  13,   5, 0xff, 0x00, 0x00, 0x00}, // bfill d cb f 
	{0x76d3, &op_bfill,	  3,  13,   6, 0xff, 0x00, 0x00, 0x00}, // bfill d cb g 
	{0x77d3, &op_bfill,	  3,  13,   7, 0xff, 0x00, 0x00, 0x00}, // bfill d cb h 
	{0x78d3, &op_bfill,	  3,  13,   8, 0xff, 0x00, 0x00, 0x00}, // bfill d cb pc 
	{0x79d3, &op_bfill,	  3,  13,   9, 0xff, 0x00, 0x00, 0x00}, // bfill d cb ra 
	{0x7ad3, &op_bfill,	  3,  13,  10, 0xff, 0x00, 0x00, 0x00}, // bfill d cb sb 
	{0x7bd3, &op_bfill,	  3,  13,  11, 0xff, 0x00, 0x00, 0x00}, // bfill d cb sp 
	{0x7cd3, &op_bfill,	  3,  13,  12, 0xff, 0x00, 0x00, 0x00}, // bfill d cb db 
	{0x7dd3, &op_bfill,	  3,  13,  13, 0xff, 0x00, 0x00, 0x00}, // bfill d cb cb 
	{0x7ed3, &op_bfill,	  3,  13,  14, 0xff, 0x00, 0x00, 0x00}, // bfill d cb pi 
	{0x7fd3, &op_bfill,	  3,  13,   8, 0xff, 0x00, 0x04, 0x00}, // bfill d cb <literal> 
	{0x70e3, &op_bfill,	  3,  14,   0, 0xff, 0x00, 0x00, 0x00}, // bfill d pi a 
	{0x71e3, &op_bfill,	  3,  14,   1, 0xff, 0x00, 0x00, 0x00}, // bfill d pi b 
	{0x72e3, &op_bfill,	  3,  14,   2, 0xff, 0x00, 0x00, 0x00}, // bfill d pi c 
	{0x73e3, &op_bfill,	  3,  14,   3, 0xff, 0x00, 0x00, 0x00}, // bfill d pi d 
	{0x74e3, &op_bfill,	  3,  14,   4, 0xff, 0x00, 0x00, 0x00}, // bfill d pi e 
	{0x75e3, &op_bfill,	  3,  14,   5, 0xff, 0x00, 0x00, 0x00}, // bfill d pi f 
	{0x76e3, &op_bfill,	  3,  14,   6, 0xff, 0x00, 0x00, 0x00}, // bfill d pi g 
	{0x77e3, &op_bfill,	  3,  14,   7, 0xff, 0x00, 0x00, 0x00}, // bfill d pi h 
	{0x78e3, &op_bfill,	  3,  14,   8, 0xff, 0x00, 0x00, 0x00}, // bfill d pi pc 
	{0x79e3, &op_bfill,	  3,  14,   9, 0xff, 0x00, 0x00, 0x00}, // bfill d pi ra 
	{0x7ae3, &op_bfill,	  3,  14,  10, 0xff, 0x00, 0x00, 0x00}, // bfill d pi sb 
	{0x7be3, &op_bfill,	  3,  14,  11, 0xff, 0x00, 0x00, 0x00}, // bfill d pi sp 
	{0x7ce3, &op_bfill,	  3,  14,  12, 0xff, 0x00, 0x00, 0x00}, // bfill d pi db 
	{0x7de3, &op_bfill,	  3,  14,  13, 0xff, 0x00, 0x00, 0x00}, // bfill d pi cb 
	{0x7ee3, &op_bfill,	  3,  14,  14, 0xff, 0x00, 0x00, 0x00}, // bfill d pi pi 
	{0x7fe3, &op_bfill,	  3,  14,   8, 0xff, 0x00, 0x04, 0x00}, // bfill d pi <literal> 
	{0x70f3, &op_bfill,	  3,  15,   0, 0xff, 0x00, 0x00, 0x00}, // bfill d status a 
	{0x71f3, &op_bfill,	  3,  15,   1, 0xff, 0x00, 0x00, 0x00}, // bfill d status b 
	{0x72f3, &op_bfill,	  3,  15,   2, 0xff, 0x00, 0x00, 0x00}, // bfill d status c 
	{0x73f3, &op_bfill,	  3,  15,   3, 0xff, 0x00, 0x00, 0x00}, // bfill d status d 
	{0x74f3, &op_bfill,	  3,  15,   4, 0xff, 0x00, 0x00, 0x00}, // bfill d status e 
	{0x75f3, &op_bfill,	  3,  15,   5, 0xff, 0x00, 0x00, 0x00}, // bfill d status f 
	{0x76f3, &op_bfill,	  3,  15,   6, 0xff, 0x00, 0x00, 0x00}, // bfill d status g 
	{0x77f3, &op_bfill,	  3,  15,   7, 0xff, 0x00, 0x00, 0x00}, // bfill d status h 
	{0x78f3, &op_bfill,	  3,  15,   8, 0xff, 0x00, 0x00, 0x00}, // bfill d status pc 
	{0x79f3, &op_bfill,	  3,  15,   9, 0xff, 0x00, 0x00, 0x00}, // bfill d status ra 
	{0x7af3, &op_bfill,	  3,  15,  10, 0xff, 0x00, 0x00, 0x00}, // bfill d status sb 
	{0x7bf3, &op_bfill,	  3,  15,  11, 0xff, 0x00, 0x00, 0x00}, // bfill d status sp 
	{0x7cf3, &op_bfill,	  3,  15,  12, 0xff, 0x00, 0x00, 0x00}, // bfill d status db 
	{0x7df3, &op_bfill,	  3,  15,  13, 0xff, 0x00, 0x00, 0x00}, // bfill d status cb 
	{0x7ef3, &op_bfill,	  3,  15,  14, 0xff, 0x00, 0x00, 0x00}, // bfill d status pi 
	{0x7ff3, &op_bfill,	  3,  15,   8, 0xff, 0x00, 0x04, 0x00}, // bfill d status <literal> 
	{0x7004, &op_bfill,	  4,   0,   0, 0xff, 0x00, 0x00, 0x00}, // bfill e a a 
	{0x7104, &op_bfill,	  4,   0,   1, 0xff, 0x00, 0x00, 0x00}, // bfill e a b 
	{0x7204, &op_bfill,	  4,   0,   2, 0xff, 0x00, 0x00, 0x00}, // bfill e a c 
	{0x7304, &op_bfill,	  4,   0,   3, 0xff, 0x00, 0x00, 0x00}, // bfill e a d 
	{0x7404, &op_bfill,	  4,   0,   4, 0xff, 0x00, 0x00, 0x00}, // bfill e a e 
	{0x7504, &op_bfill,	  4,   0,   5, 0xff, 0x00, 0x00, 0x00}, // bfill e a f 
	{0x7604, &op_bfill,	  4,   0,   6, 0xff, 0x00, 0x00, 0x00}, // bfill e a g 
	{0x7704, &op_bfill,	  4,   0,   7, 0xff, 0x00, 0x00, 0x00}, // bfill e a h 
	{0x7804, &op_bfill,	  4,   0,   8, 0xff, 0x00, 0x00, 0x00}, // bfill e a pc 
	{0x7904, &op_bfill,	  4,   0,   9, 0xff, 0x00, 0x00, 0x00}, // bfill e a ra 
	{0x7a04, &op_bfill,	  4,   0,  10, 0xff, 0x00, 0x00, 0x00}, // bfill e a sb 
	{0x7b04, &op_bfill,	  4,   0,  11, 0xff, 0x00, 0x00, 0x00}, // bfill e a sp 
	{0x7c04, &op_bfill,	  4,   0,  12, 0xff, 0x00, 0x00, 0x00}, // bfill e a db 
	{0x7d04, &op_bfill,	  4,   0,  13, 0xff, 0x00, 0x00, 0x00}, // bfill e a cb 
	{0x7e04, &op_bfill,	  4,   0,  14, 0xff, 0x00, 0x00, 0x00}, // bfill e a pi 
	{0x7f04, &op_bfill,	  4,   0,   8, 0xff, 0x00, 0x04, 0x00}, // bfill e a <literal> 
	{0x7014, &op_bfill,	  4,   1,   0, 0xff, 0x00, 0x00, 0x00}, // bfill e b a 
	{0x7114, &op_bfill,	  4,   1,   1, 0xff, 0x00, 0x00, 0x00}, // bfill e b b 
	{0x7214, &op_bfill,	  4,   1,   2, 0xff, 0x00, 0x00, 0x00}, // bfill e b c 
	{0x7314, &op_bfill,	  4,   1,   3, 0xff, 0x00, 0x00, 0x00}, // bfill e b d 
	{0x7414, &op_bfill,	  4,   1,   4, 0xff, 0x00, 0x00, 0x00}, // bfill e b e 
	{0x7514, &op_bfill,	  4,   1,   5, 0xff, 0x00, 0x00, 0x00}, // bfill e b f 
	{0x7614, &op_bfill,	  4,   1,   6, 0xff, 0x00, 0x00, 0x00}, // bfill e b g 
	{0x7714, &op_bfill,	  4,   1,   7, 0xff, 0x00, 0x00, 0x00}, // bfill e b h 
	{0x7814, &op_bfill,	  4,   1,   8, 0xff, 0x00, 0x00, 0x00}, // bfill e b pc 
	{0x7914, &op_bfill,	  4,   1,   9, 0xff, 0x00, 0x00, 0x00}, // bfill e b ra 
	{0x7a14, &op_bfill,	  4,   1,  10, 0xff, 0x00, 0x00, 0x00}, // bfill e b sb 
	{0x7b14, &op_bfill,	  4,   1,  11, 0xff, 0x00, 0x00, 0x00}, // bfill e b sp 
	{0x7c14, &op_bfill,	  4,   1,  12, 0xff, 0x00, 0x00, 0x00}, // bfill e b db 
	{0x7d14, &op_bfill,	  4,   1,  13, 0xff, 0x00, 0x00, 0x00}, // bfill e b cb 
	{0x7e14, &op_bfill,	  4,   1,  14, 0xff, 0x00, 0x00, 0x00}, // bfill e b pi 
	{0x7f14, &op_bfill,	  4,   1,   8, 0xff, 0x00, 0x04, 0x00}, // bfill e b <literal> 
	{0x7024, &op_bfill,	  4,   2,   0, 0xff, 0x00, 0x00, 0x00}, // bfill e c a 
	{0x7124, &op_bfill,	  4,   2,   1, 0xff, 0x00, 0x00, 0x00}, // bfill e c b 
	{0x7224, &op_bfill,	  4,   2,   2, 0xff, 0x00, 0x00, 0x00}, // bfill e c c 
	{0x7324, &op_bfill,	  4,   2,   3, 0xff, 0x00, 0x00, 0x00}, // bfill e c d 
	{0x7424, &op_bfill,	  4,   2,   4, 0xff, 0x00, 0x00, 0x00}, // bfill e c e 
	{0x7524, &op_bfill,	  4,   2,   5, 0xff, 0x00, 0x00, 0x00}, // bfill e c f 
	{0x7624, &op_bfill,	  4,   2,   6, 0xff, 0x00, 0x00, 0x00}, // bfill e c g 
	{0x7724, &op_bfill,	  4,   2,   7, 0xff, 0x00, 0x00, 0x00}, // bfill e c h 
	{0x7824, &op_bfill,	  4,   2,   8, 0xff, 0x00, 0x00, 0x00}, // bfill e c pc 
	{0x7924, &op_bfill,	  4,   2,   9, 0xff, 0x00, 0x00, 0x00}, // bfill e c ra 
	{0x7a24, &op_bfill,	  4,   2,  10, 0xff, 0x00, 0x00, 0x00}, // bfill e c sb 
	{0x7b24, &op_bfill,	  4,   2,  11, 0xff, 0x00, 0x00, 0x00}, // bfill e c sp 
	{0x7c24, &op_bfill,	  4,   2,  12, 0xff, 0x00, 0x00, 0x00}, // bfill e c db 
	{0x7d24, &op_bfill,	  4,   2,  13, 0xff, 0x00, 0x00, 0x00}, // bfill e c cb 
	{0x7e24, &op_bfill,	  4,   2,  14, 0xff, 0x00, 0x00, 0x00}, // bfill e c pi 
	{0x7f24, &op_bfill,	  4,   2,   8, 0xff, 0x00, 0x04, 0x00}, // bfill e c <literal> 
	{0x7034, &op_bfill,	  4,   3,   0, 0xff, 0x00, 0x00, 0x00}, // bfill e d a 
	{0x7134, &op_bfill,	  4,   3,   1, 0xff, 0x00, 0x00, 0x00}, // bfill e d b 
	{0x7234, &op_bfill,	  4,   3,   2, 0xff, 0x00, 0x00, 0x00}, // bfill e d c 
	{0x7334, &op_bfill,	  4,   3,   3, 0xff, 0x00, 0x00, 0x00}, // bfill e d d 
	{0x7434, &op_bfill,	  4,   3,   4, 0xff, 0x00, 0x00, 0x00}, // bfill e d e 
	{0x7534, &op_bfill,	  4,   3,   5, 0xff, 0x00, 0x00, 0x00}, // bfill e d f 
	{0x7634, &op_bfill,	  4,   3,   6, 0xff, 0x00, 0x00, 0x00}, // bfill e d g 
	{0x7734, &op_bfill,	  4,   3,   7, 0xff, 0x00, 0x00, 0x00}, // bfill e d h 
	{0x7834, &op_bfill,	  4,   3,   8, 0xff, 0x00, 0x00, 0x00}, // bfill e d pc 
	{0x7934, &op_bfill,	  4,   3,   9, 0xff, 0x00, 0x00, 0x00}, // bfill e d ra 
	{0x7a34, &op_bfill,	  4,   3,  10, 0xff, 0x00, 0x00, 0x00}, // bfill e d sb 
	{0x7b34, &op_bfill,	  4,   3,  11, 0xff, 0x00, 0x00, 0x00}, // bfill e d sp 
	{0x7c34, &op_bfill,	  4,   3,  12, 0xff, 0x00, 0x00, 0x00}, // bfill e d db 
	{0x7d34, &op_bfill,	  4,   3,  13, 0xff, 0x00, 0x00, 0x00}, // bfill e d cb 
	{0x7e34, &op_bfill,	  4,   3,  14, 0xff, 0x00, 0x00, 0x00}, // bfill e d pi 
	{0x7f34, &op_bfill,	  4,   3,   8, 0xff, 0x00, 0x04, 0x00}, // bfill e d <literal> 
	{0x7044, &op_bfill,	  4,   4,   0, 0xff, 0x00, 0x00, 0x00}, // bfill e e a 
	{0x7144, &op_bfill,	  4,   4,   1, 0xff, 0x00, 0x00, 0x00}, // bfill e e b 
	{0x7244, &op_bfill,	  4,   4,   2, 0xff, 0x00, 0x00, 0x00}, // bfill e e c 
	{0x7344, &op_bfill,	  4,   4,   3, 0xff, 0x00, 0x00, 0x00}, // bfill e e d 
	{0x7444, &op_bfill,	  4,   4,   4, 0xff, 0x00, 0x00, 0x00}, // bfill e e e 
	{0x7544, &op_bfill,	  4,   4,   5, 0xff, 0x00, 0x00, 0x00}, // bfill e e f 
	{0x7644, &op_bfill,	  4,   4,   6, 0xff, 0x00, 0x00, 0x00}, // bfill e e g 
	{0x7744, &op_bfill,	  4,   4,   7, 0xff, 0x00, 0x00, 0x00}, // bfill e e h 
	{0x7844, &op_bfill,	  4,   4,   8, 0xff, 0x00, 0x00, 0x00}, // bfill e e pc 
	{0x7944, &op_bfill,	  4,   4,   9, 0xff, 0x00, 0x00, 0x00}, // bfill e e ra 
	{0x7a44, &op_bfill,	  4,   4,  10, 0xff, 0x00, 0x00, 0x00}, // bfill e e sb 
	{0x7b44, &op_bfill,	  4,   4,  11, 0xff, 0x00, 0x00, 0x00}, // bfill e e sp 
	{0x7c44, &op_bfill,	  4,   4,  12, 0xff, 0x00, 0x00, 0x00}, // bfill e e db 
	{0x7d44, &op_bfill,	  4,   4,  13, 0xff, 0x00, 0x00, 0x00}, // bfill e e cb 
	{0x7e44, &op_bfill,	  4,   4,  14, 0xff, 0x00, 0x00, 0x00}, // bfill e e pi 
	{0x7f44, &op_bfill,	  4,   4,   8, 0xff, 0x00, 0x04, 0x00}, // bfill e e <literal> 
	{0x7054, &op_bfill,	  4,   5,   0, 0xff, 0x00, 0x00, 0x00}, // bfill e f a 
	{0x7154, &op_bfill,	  4,   5,   1, 0xff, 0x00, 0x00, 0x00}, // bfill e f b 
	{0x7254, &op_bfill,	  4,   5,   2, 0xff, 0x00, 0x00, 0x00}, // bfill e f c 
	{0x7354, &op_bfill,	  4,   5,   3, 0xff, 0x00, 0x00, 0x00}, // bfill e f d 
	{0x7454, &op_bfill,	  4,   5,   4, 0xff, 0x00, 0x00, 0x00}, // bfill e f e 
	{0x7554, &op_bfill,	  4,   5,   5, 0xff, 0x00, 0x00, 0x00}, // bfill e f f 
	{0x7654, &op_bfill,	  4,   5,   6, 0xff, 0x00, 0x00, 0x00}, // bfill e f g 
	{0x7754, &op_bfill,	  4,   5,   7, 0xff, 0x00, 0x00, 0x00}, // bfill e f h 
	{0x7854, &op_bfill,	  4,   5,   8, 0xff, 0x00, 0x00, 0x00}, // bfill e f pc 
	{0x7954, &op_bfill,	  4,   5,   9, 0xff, 0x00, 0x00, 0x00}, // bfill e f ra 
	{0x7a54, &op_bfill,	  4,   5,  10, 0xff, 0x00, 0x00, 0x00}, // bfill e f sb 
	{0x7b54, &op_bfill,	  4,   5,  11, 0xff, 0x00, 0x00, 0x00}, // bfill e f sp 
	{0x7c54, &op_bfill,	  4,   5,  12, 0xff, 0x00, 0x00, 0x00}, // bfill e f db 
	{0x7d54, &op_bfill,	  4,   5,  13, 0xff, 0x00, 0x00, 0x00}, // bfill e f cb 
	{0x7e54, &op_bfill,	  4,   5,  14, 0xff, 0x00, 0x00, 0x00}, // bfill e f pi 
	{0x7f54, &op_bfill,	  4,   5,   8, 0xff, 0x00, 0x04, 0x00}, // bfill e f <literal> 
	{0x7064, &op_bfill,	  4,   6,   0, 0xff, 0x00, 0x00, 0x00}, // bfill e g a 
	{0x7164, &op_bfill,	  4,   6,   1, 0xff, 0x00, 0x00, 0x00}, // bfill e g b 
	{0x7264, &op_bfill,	  4,   6,   2, 0xff, 0x00, 0x00, 0x00}, // bfill e g c 
	{0x7364, &op_bfill,	  4,   6,   3, 0xff, 0x00, 0x00, 0x00}, // bfill e g d 
	{0x7464, &op_bfill,	  4,   6,   4, 0xff, 0x00, 0x00, 0x00}, // bfill e g e 
	{0x7564, &op_bfill,	  4,   6,   5, 0xff, 0x00, 0x00, 0x00}, // bfill e g f 
	{0x7664, &op_bfill,	  4,   6,   6, 0xff, 0x00, 0x00, 0x00}, // bfill e g g 
	{0x7764, &op_bfill,	  4,   6,   7, 0xff, 0x00, 0x00, 0x00}, // bfill e g h 
	{0x7864, &op_bfill,	  4,   6,   8, 0xff, 0x00, 0x00, 0x00}, // bfill e g pc 
	{0x7964, &op_bfill,	  4,   6,   9, 0xff, 0x00, 0x00, 0x00}, // bfill e g ra 
	{0x7a64, &op_bfill,	  4,   6,  10, 0xff, 0x00, 0x00, 0x00}, // bfill e g sb 
	{0x7b64, &op_bfill,	  4,   6,  11, 0xff, 0x00, 0x00, 0x00}, // bfill e g sp 
	{0x7c64, &op_bfill,	  4,   6,  12, 0xff, 0x00, 0x00, 0x00}, // bfill e g db 
	{0x7d64, &op_bfill,	  4,   6,  13, 0xff, 0x00, 0x00, 0x00}, // bfill e g cb 
	{0x7e64, &op_bfill,	  4,   6,  14, 0xff, 0x00, 0x00, 0x00}, // bfill e g pi 
	{0x7f64, &op_bfill,	  4,   6,   8, 0xff, 0x00, 0x04, 0x00}, // bfill e g <literal> 
	{0x7074, &op_bfill,	  4,   7,   0, 0xff, 0x00, 0x00, 0x00}, // bfill e h a 
	{0x7174, &op_bfill,	  4,   7,   1, 0xff, 0x00, 0x00, 0x00}, // bfill e h b 
	{0x7274, &op_bfill,	  4,   7,   2, 0xff, 0x00, 0x00, 0x00}, // bfill e h c 
	{0x7374, &op_bfill,	  4,   7,   3, 0xff, 0x00, 0x00, 0x00}, // bfill e h d 
	{0x7474, &op_bfill,	  4,   7,   4, 0xff, 0x00, 0x00, 0x00}, // bfill e h e 
	{0x7574, &op_bfill,	  4,   7,   5, 0xff, 0x00, 0x00, 0x00}, // bfill e h f 
	{0x7674, &op_bfill,	  4,   7,   6, 0xff, 0x00, 0x00, 0x00}, // bfill e h g 
	{0x7774, &op_bfill,	  4,   7,   7, 0xff, 0x00, 0x00, 0x00}, // bfill e h h 
	{0x7874, &op_bfill,	  4,   7,   8, 0xff, 0x00, 0x00, 0x00}, // bfill e h pc 
	{0x7974, &op_bfill,	  4,   7,   9, 0xff, 0x00, 0x00, 0x00}, // bfill e h ra 
	{0x7a74, &op_bfill,	  4,   7,  10, 0xff, 0x00, 0x00, 0x00}, // bfill e h sb 
	{0x7b74, &op_bfill,	  4,   7,  11, 0xff, 0x00, 0x00, 0x00}, // bfill e h sp 
	{0x7c74, &op_bfill,	  4,   7,  12, 0xff, 0x00, 0x00, 0x00}, // bfill e h db 
	{0x7d74, &op_bfill,	  4,   7,  13, 0xff, 0x00, 0x00, 0x00}, // bfill e h cb 
	{0x7e74, &op_bfill,	  4,   7,  14, 0xff, 0x00, 0x00, 0x00}, // bfill e h pi 
	{0x7f74, &op_bfill,	  4,   7,   8, 0xff, 0x00, 0x04, 0x00}, // bfill e h <literal> 
	{0x7084, &op_bfill,	  4,   8,   0, 0xff, 0x00, 0x00, 0x00}, // bfill e pc a 
	{0x7184, &op_bfill,	  4,   8,   1, 0xff, 0x00, 0x00, 0x00}, // bfill e pc b 
	{0x7284, &op_bfill,	  4,   8,   2, 0xff, 0x00, 0x00, 0x00}, // bfill e pc c 
	{0x7384, &op_bfill,	  4,   8,   3, 0xff, 0x00, 0x00, 0x00}, // bfill e pc d 
	{0x7484, &op_bfill,	  4,   8,   4, 0xff, 0x00, 0x00, 0x00}, // bfill e pc e 
	{0x7584, &op_bfill,	  4,   8,   5, 0xff, 0x00, 0x00, 0x00}, // bfill e pc f 
	{0x7684, &op_bfill,	  4,   8,   6, 0xff, 0x00, 0x00, 0x00}, // bfill e pc g 
	{0x7784, &op_bfill,	  4,   8,   7, 0xff, 0x00, 0x00, 0x00}, // bfill e pc h 
	{0x7884, &op_bfill,	  4,   8,   8, 0xff, 0x00, 0x00, 0x00}, // bfill e pc pc 
	{0x7984, &op_bfill,	  4,   8,   9, 0xff, 0x00, 0x00, 0x00}, // bfill e pc ra 
	{0x7a84, &op_bfill,	  4,   8,  10, 0xff, 0x00, 0x00, 0x00}, // bfill e pc sb 
	{0x7b84, &op_bfill,	  4,   8,  11, 0xff, 0x00, 0x00, 0x00}, // bfill e pc sp 
	{0x7c84, &op_bfill,	  4,   8,  12, 0xff, 0x00, 0x00, 0x00}, // bfill e pc db 
	{0x7d84, &op_bfill,	  4,   8,  13, 0xff, 0x00, 0x00, 0x00}, // bfill e pc cb 
	{0x7e84, &op_bfill,	  4,   8,  14, 0xff, 0x00, 0x00, 0x00}, // bfill e pc pi 
	{0x7f84, &op_bfill,	  4,   8,   8, 0xff, 0x00, 0x04, 0x00}, // bfill e pc <literal> 
	{0x7094, &op_bfill,	  4,   9,   0, 0xff, 0x00, 0x00, 0x00}, // bfill e ra a 
	{0x7194, &op_bfill,	  4,   9,   1, 0xff, 0x00, 0x00, 0x00}, // bfill e ra b 
	{0x7294, &op_bfill,	  4,   9,   2, 0xff, 0x00, 0x00, 0x00}, // bfill e ra c 
	{0x7394, &op_bfill,	  4,   9,   3, 0xff, 0x00, 0x00, 0x00}, // bfill e ra d 
	{0x7494, &op_bfill,	  4,   9,   4, 0xff, 0x00, 0x00, 0x00}, // bfill e ra e 
	{0x7594, &op_bfill,	  4,   9,   5, 0xff, 0x00, 0x00, 0x00}, // bfill e ra f 
	{0x7694, &op_bfill,	  4,   9,   6, 0xff, 0x00, 0x00, 0x00}, // bfill e ra g 
	{0x7794, &op_bfill,	  4,   9,   7, 0xff, 0x00, 0x00, 0x00}, // bfill e ra h 
	{0x7894, &op_bfill,	  4,   9,   8, 0xff, 0x00, 0x00, 0x00}, // bfill e ra pc 
	{0x7994, &op_bfill,	  4,   9,   9, 0xff, 0x00, 0x00, 0x00}, // bfill e ra ra 
	{0x7a94, &op_bfill,	  4,   9,  10, 0xff, 0x00, 0x00, 0x00}, // bfill e ra sb 
	{0x7b94, &op_bfill,	  4,   9,  11, 0xff, 0x00, 0x00, 0x00}, // bfill e ra sp 
	{0x7c94, &op_bfill,	  4,   9,  12, 0xff, 0x00, 0x00, 0x00}, // bfill e ra db 
	{0x7d94, &op_bfill,	  4,   9,  13, 0xff, 0x00, 0x00, 0x00}, // bfill e ra cb 
	{0x7e94, &op_bfill,	  4,   9,  14, 0xff, 0x00, 0x00, 0x00}, // bfill e ra pi 
	{0x7f94, &op_bfill,	  4,   9,   8, 0xff, 0x00, 0x04, 0x00}, // bfill e ra <literal> 
	{0x70a4, &op_bfill,	  4,  10,   0, 0xff, 0x00, 0x00, 0x00}, // bfill e sb a 
	{0x71a4, &op_bfill,	  4,  10,   1, 0xff, 0x00, 0x00, 0x00}, // bfill e sb b 
	{0x72a4, &op_bfill,	  4,  10,   2, 0xff, 0x00, 0x00, 0x00}, // bfill e sb c 
	{0x73a4, &op_bfill,	  4,  10,   3, 0xff, 0x00, 0x00, 0x00}, // bfill e sb d 
	{0x74a4, &op_bfill,	  4,  10,   4, 0xff, 0x00, 0x00, 0x00}, // bfill e sb e 
	{0x75a4, &op_bfill,	  4,  10,   5, 0xff, 0x00, 0x00, 0x00}, // bfill e sb f 
	{0x76a4, &op_bfill,	  4,  10,   6, 0xff, 0x00, 0x00, 0x00}, // bfill e sb g 
	{0x77a4, &op_bfill,	  4,  10,   7, 0xff, 0x00, 0x00, 0x00}, // bfill e sb h 
	{0x78a4, &op_bfill,	  4,  10,   8, 0xff, 0x00, 0x00, 0x00}, // bfill e sb pc 
	{0x79a4, &op_bfill,	  4,  10,   9, 0xff, 0x00, 0x00, 0x00}, // bfill e sb ra 
	{0x7aa4, &op_bfill,	  4,  10,  10, 0xff, 0x00, 0x00, 0x00}, // bfill e sb sb 
	{0x7ba4, &op_bfill,	  4,  10,  11, 0xff, 0x00, 0x00, 0x00}, // bfill e sb sp 
	{0x7ca4, &op_bfill,	  4,  10,  12, 0xff, 0x00, 0x00, 0x00}, // bfill e sb db 
	{0x7da4, &op_bfill,	  4,  10,  13, 0xff, 0x00, 0x00, 0x00}, // bfill e sb cb 
	{0x7ea4, &op_bfill,	  4,  10,  14, 0xff, 0x00, 0x00, 0x00}, // bfill e sb pi 
	{0x7fa4, &op_bfill,	  4,  10,   8, 0xff, 0x00, 0x04, 0x00}, // bfill e sb <literal> 
	{0x70b4, &op_bfill,	  4,  11,   0, 0xff, 0x00, 0x00, 0x00}, // bfill e sp a 
	{0x71b4, &op_bfill,	  4,  11,   1, 0xff, 0x00, 0x00, 0x00}, // bfill e sp b 
	{0x72b4, &op_bfill,	  4,  11,   2, 0xff, 0x00, 0x00, 0x00}, // bfill e sp c 
	{0x73b4, &op_bfill,	  4,  11,   3, 0xff, 0x00, 0x00, 0x00}, // bfill e sp d 
	{0x74b4, &op_bfill,	  4,  11,   4, 0xff, 0x00, 0x00, 0x00}, // bfill e sp e 
	{0x75b4, &op_bfill,	  4,  11,   5, 0xff, 0x00, 0x00, 0x00}, // bfill e sp f 
	{0x76b4, &op_bfill,	  4,  11,   6, 0xff, 0x00, 0x00, 0x00}, // bfill e sp g 
	{0x77b4, &op_bfill,	  4,  11,   7, 0xff, 0x00, 0x00, 0x00}, // bfill e sp h 
	{0x78b4, &op_bfill,	  4,  11,   8, 0xff, 0x00, 0x00, 0x00}, // bfill e sp pc 
	{0x79b4, &op_bfill,	  4,  11,   9, 0xff, 0x00, 0x00, 0x00}, // bfill e sp ra 
	{0x7ab4, &op_bfill,	  4,  11,  10, 0xff, 0x00, 0x00, 0x00}, // bfill e sp sb 
	{0x7bb4, &op_bfill,	  4,  11,  11, 0xff, 0x00, 0x00, 0x00}, // bfill e sp sp 
	{0x7cb4, &op_bfill,	  4,  11,  12, 0xff, 0x00, 0x00, 0x00}, // bfill e sp db 
	{0x7db4, &op_bfill,	  4,  11,  13, 0xff, 0x00, 0x00, 0x00}, // bfill e sp cb 
	{0x7eb4, &op_bfill,	  4,  11,  14, 0xff, 0x00, 0x00, 0x00}, // bfill e sp pi 
	{0x7fb4, &op_bfill,	  4,  11,   8, 0xff, 0x00, 0x04, 0x00}, // bfill e sp <literal> 
	{0x70c4, &op_bfill,	  4,  12,   0, 0xff, 0x00, 0x00, 0x00}, // bfill e db a 
	{0x71c4, &op_bfill,	  4,  12,   1, 0xff, 0x00, 0x00, 0x00}, // bfill e db b 
	{0x72c4, &op_bfill,	  4,  12,   2, 0xff, 0x00, 0x00, 0x00}, // bfill e db c 
	{0x73c4, &op_bfill,	  4,  12,   3, 0xff, 0x00, 0x00, 0x00}, // bfill e db d 
	{0x74c4, &op_bfill,	  4,  12,   4, 0xff, 0x00, 0x00, 0x00}, // bfill e db e 
	{0x75c4, &op_bfill,	  4,  12,   5, 0xff, 0x00, 0x00, 0x00}, // bfill e db f 
	{0x76c4, &op_bfill,	  4,  12,   6, 0xff, 0x00, 0x00, 0x00}, // bfill e db g 
	{0x77c4, &op_bfill,	  4,  12,   7, 0xff, 0x00, 0x00, 0x00}, // bfill e db h 
	{0x78c4, &op_bfill,	  4,  12,   8, 0xff, 0x00, 0x00, 0x00}, // bfill e db pc 
	{0x79c4, &op_bfill,	  4,  12,   9, 0xff, 0x00, 0x00, 0x00}, // bfill e db ra 
	{0x7ac4, &op_bfill,	  4,  12,  10, 0xff, 0x00, 0x00, 0x00}, // bfill e db sb 
	{0x7bc4, &op_bfill,	  4,  12,  11, 0xff, 0x00, 0x00, 0x00}, // bfill e db sp 
	{0x7cc4, &op_bfill,	  4,  12,  12, 0xff, 0x00, 0x00, 0x00}, // bfill e db db 
	{0x7dc4, &op_bfill,	  4,  12,  13, 0xff, 0x00, 0x00, 0x00}, // bfill e db cb 
	{0x7ec4, &op_bfill,	  4,  12,  14, 0xff, 0x00, 0x00, 0x00}, // bfill e db pi 
	{0x7fc4, &op_bfill,	  4,  12,   8, 0xff, 0x00, 0x04, 0x00}, // bfill e db <literal> 
	{0x70d4, &op_bfill,	  4,  13,   0, 0xff, 0x00, 0x00, 0x00}, // bfill e cb a 
	{0x71d4, &op_bfill,	  4,  13,   1, 0xff, 0x00, 0x00, 0x00}, // bfill e cb b 
	{0x72d4, &op_bfill,	  4,  13,   2, 0xff, 0x00, 0x00, 0x00}, // bfill e cb c 
	{0x73d4, &op_bfill,	  4,  13,   3, 0xff, 0x00, 0x00, 0x00}, // bfill e cb d 
	{0x74d4, &op_bfill,	  4,  13,   4, 0xff, 0x00, 0x00, 0x00}, // bfill e cb e 
	{0x75d4, &op_bfill,	  4,  13,   5, 0xff, 0x00, 0x00, 0x00}, // bfill e cb f 
	{0x76d4, &op_bfill,	  4,  13,   6, 0xff, 0x00, 0x00, 0x00}, // bfill e cb g 
	{0x77d4, &op_bfill,	  4,  13,   7, 0xff, 0x00, 0x00, 0x00}, // bfill e cb h 
	{0x78d4, &op_bfill,	  4,  13,   8, 0xff, 0x00, 0x00, 0x00}, // bfill e cb pc 
	{0x79d4, &op_bfill,	  4,  13,   9, 0xff, 0x00, 0x00, 0x00}, // bfill e cb ra 
	{0x7ad4, &op_bfill,	  4,  13,  10, 0xff, 0x00, 0x00, 0x00}, // bfill e cb sb 
	{0x7bd4, &op_bfill,	  4,  13,  11, 0xff, 0x00, 0x00, 0x00}, // bfill e cb sp 
	{0x7cd4, &op_bfill,	  4,  13,  12, 0xff, 0x00, 0x00, 0x00}, // bfill e cb db 
	{0x7dd4, &op_bfill,	  4,  13,  13, 0xff, 0x00, 0x00, 0x00}, // bfill e cb cb 
	{0x7ed4, &op_bfill,	  4,  13,  14, 0xff, 0x00, 0x00, 0x00}, // bfill e cb pi 
	{0x7fd4, &op_bfill,	  4,  13,   8, 0xff, 0x00, 0x04, 0x00}, // bfill e cb <literal> 
	{0x70e4, &op_bfill,	  4,  14,   0, 0xff, 0x00, 0x00, 0x00}, // bfill e pi a 
	{0x71e4, &op_bfill,	  4,  14,   1, 0xff, 0x00, 0x00, 0x00}, // bfill e pi b 
	{0x72e4, &op_bfill,	  4,  14,   2, 0xff, 0x00, 0x00, 0x00}, // bfill e pi c 
	{0x73e4, &op_bfill,	  4,  14,   3, 0xff, 0x00, 0x00, 0x00}, // bfill e pi d 
	{0x74e4, &op_bfill,	  4,  14,   4, 0xff, 0x00, 0x00, 0x00}, // bfill e pi e 
	{0x75e4, &op_bfill,	  4,  14,   5, 0xff, 0x00, 0x00, 0x00}, // bfill e pi f 
	{0x76e4, &op_bfill,	  4,  14,   6, 0xff, 0x00, 0x00, 0x00}, // bfill e pi g 
	{0x77e4, &op_bfill,	  4,  14,   7, 0xff, 0x00, 0x00, 0x00}, // bfill e pi h 
	{0x78e4, &op_bfill,	  4,  14,   8, 0xff, 0x00, 0x00, 0x00}, // bfill e pi pc 
	{0x79e4, &op_bfill,	  4,  14,   9, 0xff, 0x00, 0x00, 0x00}, // bfill e pi ra 
	{0x7ae4, &op_bfill,	  4,  14,  10, 0xff, 0x00, 0x00, 0x00}, // bfill e pi sb 
	{0x7be4, &op_bfill,	  4,  14,  11, 0xff, 0x00, 0x00, 0x00}, // bfill e pi sp 
	{0x7ce4, &op_bfill,	  4,  14,  12, 0xff, 0x00, 0x00, 0x00}, // bfill e pi db 
	{0x7de4, &op_bfill,	  4,  14,  13, 0xff, 0x00, 0x00, 0x00}, // bfill e pi cb 
	{0x7ee4, &op_bfill,	  4,  14,  14, 0xff, 0x00, 0x00, 0x00}, // bfill e pi pi 
	{0x7fe4, &op_bfill,	  4,  14,   8, 0xff, 0x00, 0x04, 0x00}, // bfill e pi <literal> 
	{0x70f4, &op_bfill,	  4,  15,   0, 0xff, 0x00, 0x00, 0x00}, // bfill e status a 
	{0x71f4, &op_bfill,	  4,  15,   1, 0xff, 0x00, 0x00, 0x00}, // bfill e status b 
	{0x72f4, &op_bfill,	  4,  15,   2, 0xff, 0x00, 0x00, 0x00}, // bfill e status c 
	{0x73f4, &op_bfill,	  4,  15,   3, 0xff, 0x00, 0x00, 0x00}, // bfill e status d 
	{0x74f4, &op_bfill,	  4,  15,   4, 0xff, 0x00, 0x00, 0x00}, // bfill e status e 
	{0x75f4, &op_bfill,	  4,  15,   5, 0xff, 0x00, 0x00, 0x00}, // bfill e status f 
	{0x76f4, &op_bfill,	  4,  15,   6, 0xff, 0x00, 0x00, 0x00}, // bfill e status g 
	{0x77f4, &op_bfill,	  4,  15,   7, 0xff, 0x00, 0x00, 0x00}, // bfill e status h 
	{0x78f4, &op_bfill,	  4,  15,   8, 0xff, 0x00, 0x00, 0x00}, // bfill e status pc 
	{0x79f4, &op_bfill,	  4,  15,   9, 0xff, 0x00, 0x00, 0x00}, // bfill e status ra 
	{0x7af4, &op_bfill,	  4,  15,  10, 0xff, 0x00, 0x00, 0x00}, // bfill e status sb 
	{0x7bf4, &op_bfill,	  4,  15,  11, 0xff, 0x00, 0x00, 0x00}, // bfill e status sp 
	{0x7cf4, &op_bfill,	  4,  15,  12, 0xff, 0x00, 0x00, 0x00}, // bfill e status db 
	{0x7df4, &op_bfill,	  4,  15,  13, 0xff, 0x00, 0x00, 0x00}, // bfill e status cb 
	{0x7ef4, &op_bfill,	  4,  15,  14, 0xff, 0x00, 0x00, 0x00}, // bfill e status pi 
	{0x7ff4, &op_bfill,	  4,  15,   8, 0xff, 0x00, 0x04, 0x00}, // bfill e status <literal> 
	{0x7005, &op_bfill,	  5,   0,   0, 0xff, 0x00, 0x00, 0x00}, // bfill f a a 
	{0x7105, &op_bfill,	  5,   0,   1, 0xff, 0x00, 0x00, 0x00}, // bfill f a b 
	{0x7205, &op_bfill,	  5,   0,   2, 0xff, 0x00, 0x00, 0x00}, // bfill f a c 
	{0x7305, &op_bfill,	  5,   0,   3, 0xff, 0x00, 0x00, 0x00}, // bfill f a d 
	{0x7405, &op_bfill,	  5,   0,   4, 0xff, 0x00, 0x00, 0x00}, // bfill f a e 
	{0x7505, &op_bfill,	  5,   0,   5, 0xff, 0x00, 0x00, 0x00}, // bfill f a f 
	{0x7605, &op_bfill,	  5,   0,   6, 0xff, 0x00, 0x00, 0x00}, // bfill f a g 
	{0x7705, &op_bfill,	  5,   0,   7, 0xff, 0x00, 0x00, 0x00}, // bfill f a h 
	{0x7805, &op_bfill,	  5,   0,   8, 0xff, 0x00, 0x00, 0x00}, // bfill f a pc 
	{0x7905, &op_bfill,	  5,   0,   9, 0xff, 0x00, 0x00, 0x00}, // bfill f a ra 
	{0x7a05, &op_bfill,	  5,   0,  10, 0xff, 0x00, 0x00, 0x00}, // bfill f a sb 
	{0x7b05, &op_bfill,	  5,   0,  11, 0xff, 0x00, 0x00, 0x00}, // bfill f a sp 
	{0x7c05, &op_bfill,	  5,   0,  12, 0xff, 0x00, 0x00, 0x00}, // bfill f a db 
	{0x7d05, &op_bfill,	  5,   0,  13, 0xff, 0x00, 0x00, 0x00}, // bfill f a cb 
	{0x7e05, &op_bfill,	  5,   0,  14, 0xff, 0x00, 0x00, 0x00}, // bfill f a pi 
	{0x7f05, &op_bfill,	  5,   0,   8, 0xff, 0x00, 0x04, 0x00}, // bfill f a <literal> 
	{0x7015, &op_bfill,	  5,   1,   0, 0xff, 0x00, 0x00, 0x00}, // bfill f b a 
	{0x7115, &op_bfill,	  5,   1,   1, 0xff, 0x00, 0x00, 0x00}, // bfill f b b 
	{0x7215, &op_bfill,	  5,   1,   2, 0xff, 0x00, 0x00, 0x00}, // bfill f b c 
	{0x7315, &op_bfill,	  5,   1,   3, 0xff, 0x00, 0x00, 0x00}, // bfill f b d 
	{0x7415, &op_bfill,	  5,   1,   4, 0xff, 0x00, 0x00, 0x00}, // bfill f b e 
	{0x7515, &op_bfill,	  5,   1,   5, 0xff, 0x00, 0x00, 0x00}, // bfill f b f 
	{0x7615, &op_bfill,	  5,   1,   6, 0xff, 0x00, 0x00, 0x00}, // bfill f b g 
	{0x7715, &op_bfill,	  5,   1,   7, 0xff, 0x00, 0x00, 0x00}, // bfill f b h 
	{0x7815, &op_bfill,	  5,   1,   8, 0xff, 0x00, 0x00, 0x00}, // bfill f b pc 
	{0x7915, &op_bfill,	  5,   1,   9, 0xff, 0x00, 0x00, 0x00}, // bfill f b ra 
	{0x7a15, &op_bfill,	  5,   1,  10, 0xff, 0x00, 0x00, 0x00}, // bfill f b sb 
	{0x7b15, &op_bfill,	  5,   1,  11, 0xff, 0x00, 0x00, 0x00}, // bfill f b sp 
	{0x7c15, &op_bfill,	  5,   1,  12, 0xff, 0x00, 0x00, 0x00}, // bfill f b db 
	{0x7d15, &op_bfill,	  5,   1,  13, 0xff, 0x00, 0x00, 0x00}, // bfill f b cb 
	{0x7e15, &op_bfill,	  5,   1,  14, 0xff, 0x00, 0x00, 0x00}, // bfill f b pi 
	{0x7f15, &op_bfill,	  5,   1,   8, 0xff, 0x00, 0x04, 0x00}, // bfill f b <literal> 
	{0x7025, &op_bfill,	  5,   2,   0, 0xff, 0x00, 0x00, 0x00}, // bfill f c a 
	{0x7125, &op_bfill,	  5,   2,   1, 0xff, 0x00, 0x00, 0x00}, // bfill f c b 
	{0x7225, &op_bfill,	  5,   2,   2, 0xff, 0x00, 0x00, 0x00}, // bfill f c c 
	{0x7325, &op_bfill,	  5,   2,   3, 0xff, 0x00, 0x00, 0x00}, // bfill f c d 
	{0x7425, &op_bfill,	  5,   2,   4, 0xff, 0x00, 0x00, 0x00}, // bfill f c e 
	{0x7525, &op_bfill,	  5,   2,   5, 0xff, 0x00, 0x00, 0x00}, // bfill f c f 
	{0x7625, &op_bfill,	  5,   2,   6, 0xff, 0x00, 0x00, 0x00}, // bfill f c g 
	{0x7725, &op_bfill,	  5,   2,   7, 0xff, 0x00, 0x00, 0x00}, // bfill f c h 
	{0x7825, &op_bfill,	  5,   2,   8, 0xff, 0x00, 0x00, 0x00}, // bfill f c pc 
	{0x7925, &op_bfill,	  5,   2,   9, 0xff, 0x00, 0x00, 0x00}, // bfill f c ra 
	{0x7a25, &op_bfill,	  5,   2,  10, 0xff, 0x00, 0x00, 0x00}, // bfill f c sb 
	{0x7b25, &op_bfill,	  5,   2,  11, 0xff, 0x00, 0x00, 0x00}, // bfill f c sp 
	{0x7c25, &op_bfill,	  5,   2,  12, 0xff, 0x00, 0x00, 0x00}, // bfill f c db 
	{0x7d25, &op_bfill,	  5,   2,  13, 0xff, 0x00, 0x00, 0x00}, // bfill f c cb 
	{0x7e25, &op_bfill,	  5,   2,  14, 0xff, 0x00, 0x00, 0x00}, // bfill f c pi 
	{0x7f25, &op_bfill,	  5,   2,   8, 0xff, 0x00, 0x04, 0x00}, // bfill f c <literal> 
	{0x7035, &op_bfill,	  5,   3,   0, 0xff, 0x00, 0x00, 0x00}, // bfill f d a 
	{0x7135, &op_bfill,	  5,   3,   1, 0xff, 0x00, 0x00, 0x00}, // bfill f d b 
	{0x7235, &op_bfill,	  5,   3,   2, 0xff, 0x00, 0x00, 0x00}, // bfill f d c 
	{0x7335, &op_bfill,	  5,   3,   3, 0xff, 0x00, 0x00, 0x00}, // bfill f d d 
	{0x7435, &op_bfill,	  5,   3,   4, 0xff, 0x00, 0x00, 0x00}, // bfill f d e 
	{0x7535, &op_bfill,	  5,   3,   5, 0xff, 0x00, 0x00, 0x00}, // bfill f d f 
	{0x7635, &op_bfill,	  5,   3,   6, 0xff, 0x00, 0x00, 0x00}, // bfill f d g 
	{0x7735, &op_bfill,	  5,   3,   7, 0xff, 0x00, 0x00, 0x00}, // bfill f d h 
	{0x7835, &op_bfill,	  5,   3,   8, 0xff, 0x00, 0x00, 0x00}, // bfill f d pc 
	{0x7935, &op_bfill,	  5,   3,   9, 0xff, 0x00, 0x00, 0x00}, // bfill f d ra 
	{0x7a35, &op_bfill,	  5,   3,  10, 0xff, 0x00, 0x00, 0x00}, // bfill f d sb 
	{0x7b35, &op_bfill,	  5,   3,  11, 0xff, 0x00, 0x00, 0x00}, // bfill f d sp 
	{0x7c35, &op_bfill,	  5,   3,  12, 0xff, 0x00, 0x00, 0x00}, // bfill f d db 
	{0x7d35, &op_bfill,	  5,   3,  13, 0xff, 0x00, 0x00, 0x00}, // bfill f d cb 
	{0x7e35, &op_bfill,	  5,   3,  14, 0xff, 0x00, 0x00, 0x00}, // bfill f d pi 
	{0x7f35, &op_bfill,	  5,   3,   8, 0xff, 0x00, 0x04, 0x00}, // bfill f d <literal> 
	{0x7045, &op_bfill,	  5,   4,   0, 0xff, 0x00, 0x00, 0x00}, // bfill f e a 
	{0x7145, &op_bfill,	  5,   4,   1, 0xff, 0x00, 0x00, 0x00}, // bfill f e b 
	{0x7245, &op_bfill,	  5,   4,   2, 0xff, 0x00, 0x00, 0x00}, // bfill f e c 
	{0x7345, &op_bfill,	  5,   4,   3, 0xff, 0x00, 0x00, 0x00}, // bfill f e d 
	{0x7445, &op_bfill,	  5,   4,   4, 0xff, 0x00, 0x00, 0x00}, // bfill f e e 
	{0x7545, &op_bfill,	  5,   4,   5, 0xff, 0x00, 0x00, 0x00}, // bfill f e f 
	{0x7645, &op_bfill,	  5,   4,   6, 0xff, 0x00, 0x00, 0x00}, // bfill f e g 
	{0x7745, &op_bfill,	  5,   4,   7, 0xff, 0x00, 0x00, 0x00}, // bfill f e h 
	{0x7845, &op_bfill,	  5,   4,   8, 0xff, 0x00, 0x00, 0x00}, // bfill f e pc 
	{0x7945, &op_bfill,	  5,   4,   9, 0xff, 0x00, 0x00, 0x00}, // bfill f e ra 
	{0x7a45, &op_bfill,	  5,   4,  10, 0xff, 0x00, 0x00, 0x00}, // bfill f e sb 
	{0x7b45, &op_bfill,	  5,   4,  11, 0xff, 0x00, 0x00, 0x00}, // bfill f e sp 
	{0x7c45, &op_bfill,	  5,   4,  12, 0xff, 0x00, 0x00, 0x00}, // bfill f e db 
	{0x7d45, &op_bfill,	  5,   4,  13, 0xff, 0x00, 0x00, 0x00}, // bfill f e cb 
	{0x7e45, &op_bfill,	  5,   4,  14, 0xff, 0x00, 0x00, 0x00}, // bfill f e pi 
	{0x7f45, &op_bfill,	  5,   4,   8, 0xff, 0x00, 0x04, 0x00}, // bfill f e <literal> 
	{0x7055, &op_bfill,	  5,   5,   0, 0xff, 0x00, 0x00, 0x00}, // bfill f f a 
	{0x7155, &op_bfill,	  5,   5,   1, 0xff, 0x00, 0x00, 0x00}, // bfill f f b 
	{0x7255, &op_bfill,	  5,   5,   2, 0xff, 0x00, 0x00, 0x00}, // bfill f f c 
	{0x7355, &op_bfill,	  5,   5,   3, 0xff, 0x00, 0x00, 0x00}, // bfill f f d 
	{0x7455, &op_bfill,	  5,   5,   4, 0xff, 0x00, 0x00, 0x00}, // bfill f f e 
	{0x7555, &op_bfill,	  5,   5,   5, 0xff, 0x00, 0x00, 0x00}, // bfill f f f 
	{0x7655, &op_bfill,	  5,   5,   6, 0xff, 0x00, 0x00, 0x00}, // bfill f f g 
	{0x7755, &op_bfill,	  5,   5,   7, 0xff, 0x00, 0x00, 0x00}, // bfill f f h 
	{0x7855, &op_bfill,	  5,   5,   8, 0xff, 0x00, 0x00, 0x00}, // bfill f f pc 
	{0x7955, &op_bfill,	  5,   5,   9, 0xff, 0x00, 0x00, 0x00}, // bfill f f ra 
	{0x7a55, &op_bfill,	  5,   5,  10, 0xff, 0x00, 0x00, 0x00}, // bfill f f sb 
	{0x7b55, &op_bfill,	  5,   5,  11, 0xff, 0x00, 0x00, 0x00}, // bfill f f sp 
	{0x7c55, &op_bfill,	  5,   5,  12, 0xff, 0x00, 0x00, 0x00}, // bfill f f db 
	{0x7d55, &op_bfill,	  5,   5,  13, 0xff, 0x00, 0x00, 0x00}, // bfill f f cb 
	{0x7e55, &op_bfill,	  5,   5,  14, 0xff, 0x00, 0x00, 0x00}, // bfill f f pi 
	{0x7f55, &op_bfill,	  5,   5,   8, 0xff, 0x00, 0x04, 0x00}, // bfill f f <literal> 
	{0x7065, &op_bfill,	  5,   6,   0, 0xff, 0x00, 0x00, 0x00}, // bfill f g a 
	{0x7165, &op_bfill,	  5,   6,   1, 0xff, 0x00, 0x00, 0x00}, // bfill f g b 
	{0x7265, &op_bfill,	  5,   6,   2, 0xff, 0x00, 0x00, 0x00}, // bfill f g c 
	{0x7365, &op_bfill,	  5,   6,   3, 0xff, 0x00, 0x00, 0x00}, // bfill f g d 
	{0x7465, &op_bfill,	  5,   6,   4, 0xff, 0x00, 0x00, 0x00}, // bfill f g e 
	{0x7565, &op_bfill,	  5,   6,   5, 0xff, 0x00, 0x00, 0x00}, // bfill f g f 
	{0x7665, &op_bfill,	  5,   6,   6, 0xff, 0x00, 0x00, 0x00}, // bfill f g g 
	{0x7765, &op_bfill,	  5,   6,   7, 0xff, 0x00, 0x00, 0x00}, // bfill f g h 
	{0x7865, &op_bfill,	  5,   6,   8, 0xff, 0x00, 0x00, 0x00}, // bfill f g pc 
	{0x7965, &op_bfill,	  5,   6,   9, 0xff, 0x00, 0x00, 0x00}, // bfill f g ra 
	{0x7a65, &op_bfill,	  5,   6,  10, 0xff, 0x00, 0x00, 0x00}, // bfill f g sb 
	{0x7b65, &op_bfill,	  5,   6,  11, 0xff, 0x00, 0x00, 0x00}, // bfill f g sp 
	{0x7c65, &op_bfill,	  5,   6,  12, 0xff, 0x00, 0x00, 0x00}, // bfill f g db 
	{0x7d65, &op_bfill,	  5,   6,  13, 0xff, 0x00, 0x00, 0x00}, // bfill f g cb 
	{0x7e65, &op_bfill,	  5,   6,  14, 0xff, 0x00, 0x00, 0x00}, // bfill f g pi 
	{0x7f65, &op_bfill,	  5,   6,   8, 0xff, 0x00, 0x04, 0x00}, // bfill f g <literal> 
	{0x7075, &op_bfill,	  5,   7,   0, 0xff, 0x00, 0x00, 0x00}, // bfill f h a 
	{0x7175, &op_bfill,	  5,   7,   1, 0xff, 0x00, 0x00, 0x00}, // bfill f h b 
	{0x7275, &op_bfill,	  5,   7,   2, 0xff, 0x00, 0x00, 0x00}, // bfill f h c 
	{0x7375, &op_bfill,	  5,   7,   3, 0xff, 0x00, 0x00, 0x00}, // bfill f h d 
	{0x7475, &op_bfill,	  5,   7,   4, 0xff, 0x00, 0x00, 0x00}, // bfill f h e 
	{0x7575, &op_bfill,	  5,   7,   5, 0xff, 0x00, 0x00, 0x00}, // bfill f h f 
	{0x7675, &op_bfill,	  5,   7,   6, 0xff, 0x00, 0x00, 0x00}, // bfill f h g 
	{0x7775, &op_bfill,	  5,   7,   7, 0xff, 0x00, 0x00, 0x00}, // bfill f h h 
	{0x7875, &op_bfill,	  5,   7,   8, 0xff, 0x00, 0x00, 0x00}, // bfill f h pc 
	{0x7975, &op_bfill,	  5,   7,   9, 0xff, 0x00, 0x00, 0x00}, // bfill f h ra 
	{0x7a75, &op_bfill,	  5,   7,  10, 0xff, 0x00, 0x00, 0x00}, // bfill f h sb 
	{0x7b75, &op_bfill,	  5,   7,  11, 0xff, 0x00, 0x00, 0x00}, // bfill f h sp 
	{0x7c75, &op_bfill,	  5,   7,  12, 0xff, 0x00, 0x00, 0x00}, // bfill f h db 
	{0x7d75, &op_bfill,	  5,   7,  13, 0xff, 0x00, 0x00, 0x00}, // bfill f h cb 
	{0x7e75, &op_bfill,	  5,   7,  14, 0xff, 0x00, 0x00, 0x00}, // bfill f h pi 
	{0x7f75, &op_bfill,	  5,   7,   8, 0xff, 0x00, 0x04, 0x00}, // bfill f h <literal> 
	{0x7085, &op_bfill,	  5,   8,   0, 0xff, 0x00, 0x00, 0x00}, // bfill f pc a 
	{0x7185, &op_bfill,	  5,   8,   1, 0xff, 0x00, 0x00, 0x00}, // bfill f pc b 
	{0x7285, &op_bfill,	  5,   8,   2, 0xff, 0x00, 0x00, 0x00}, // bfill f pc c 
	{0x7385, &op_bfill,	  5,   8,   3, 0xff, 0x00, 0x00, 0x00}, // bfill f pc d 
	{0x7485, &op_bfill,	  5,   8,   4, 0xff, 0x00, 0x00, 0x00}, // bfill f pc e 
	{0x7585, &op_bfill,	  5,   8,   5, 0xff, 0x00, 0x00, 0x00}, // bfill f pc f 
	{0x7685, &op_bfill,	  5,   8,   6, 0xff, 0x00, 0x00, 0x00}, // bfill f pc g 
	{0x7785, &op_bfill,	  5,   8,   7, 0xff, 0x00, 0x00, 0x00}, // bfill f pc h 
	{0x7885, &op_bfill,	  5,   8,   8, 0xff, 0x00, 0x00, 0x00}, // bfill f pc pc 
	{0x7985, &op_bfill,	  5,   8,   9, 0xff, 0x00, 0x00, 0x00}, // bfill f pc ra 
	{0x7a85, &op_bfill,	  5,   8,  10, 0xff, 0x00, 0x00, 0x00}, // bfill f pc sb 
	{0x7b85, &op_bfill,	  5,   8,  11, 0xff, 0x00, 0x00, 0x00}, // bfill f pc sp 
	{0x7c85, &op_bfill,	  5,   8,  12, 0xff, 0x00, 0x00, 0x00}, // bfill f pc db 
	{0x7d85, &op_bfill,	  5,   8,  13, 0xff, 0x00, 0x00, 0x00}, // bfill f pc cb 
	{0x7e85, &op_bfill,	  5,   8,  14, 0xff, 0x00, 0x00, 0x00}, // bfill f pc pi 
	{0x7f85, &op_bfill,	  5,   8,   8, 0xff, 0x00, 0x04, 0x00}, // bfill f pc <literal> 
	{0x7095, &op_bfill,	  5,   9,   0, 0xff, 0x00, 0x00, 0x00}, // bfill f ra a 
	{0x7195, &op_bfill,	  5,   9,   1, 0xff, 0x00, 0x00, 0x00}, // bfill f ra b 
	{0x7295, &op_bfill,	  5,   9,   2, 0xff, 0x00, 0x00, 0x00}, // bfill f ra c 
	{0x7395, &op_bfill,	  5,   9,   3, 0xff, 0x00, 0x00, 0x00}, // bfill f ra d 
	{0x7495, &op_bfill,	  5,   9,   4, 0xff, 0x00, 0x00, 0x00}, // bfill f ra e 
	{0x7595, &op_bfill,	  5,   9,   5, 0xff, 0x00, 0x00, 0x00}, // bfill f ra f 
	{0x7695, &op_bfill,	  5,   9,   6, 0xff, 0x00, 0x00, 0x00}, // bfill f ra g 
	{0x7795, &op_bfill,	  5,   9,   7, 0xff, 0x00, 0x00, 0x00}, // bfill f ra h 
	{0x7895, &op_bfill,	  5,   9,   8, 0xff, 0x00, 0x00, 0x00}, // bfill f ra pc 
	{0x7995, &op_bfill,	  5,   9,   9, 0xff, 0x00, 0x00, 0x00}, // bfill f ra ra 
	{0x7a95, &op_bfill,	  5,   9,  10, 0xff, 0x00, 0x00, 0x00}, // bfill f ra sb 
	{0x7b95, &op_bfill,	  5,   9,  11, 0xff, 0x00, 0x00, 0x00}, // bfill f ra sp 
	{0x7c95, &op_bfill,	  5,   9,  12, 0xff, 0x00, 0x00, 0x00}, // bfill f ra db 
	{0x7d95, &op_bfill,	  5,   9,  13, 0xff, 0x00, 0x00, 0x00}, // bfill f ra cb 
	{0x7e95, &op_bfill,	  5,   9,  14, 0xff, 0x00, 0x00, 0x00}, // bfill f ra pi 
	{0x7f95, &op_bfill,	  5,   9,   8, 0xff, 0x00, 0x04, 0x00}, // bfill f ra <literal> 
	{0x70a5, &op_bfill,	  5,  10,   0, 0xff, 0x00, 0x00, 0x00}, // bfill f sb a 
	{0x71a5, &op_bfill,	  5,  10,   1, 0xff, 0x00, 0x00, 0x00}, // bfill f sb b 
	{0x72a5, &op_bfill,	  5,  10,   2, 0xff, 0x00, 0x00, 0x00}, // bfill f sb c 
	{0x73a5, &op_bfill,	  5,  10,   3, 0xff, 0x00, 0x00, 0x00}, // bfill f sb d 
	{0x74a5, &op_bfill,	  5,  10,   4, 0xff, 0x00, 0x00, 0x00}, // bfill f sb e 
	{0x75a5, &op_bfill,	  5,  10,   5, 0xff, 0x00, 0x00, 0x00}, // bfill f sb f 
	{0x76a5, &op_bfill,	  5,  10,   6, 0xff, 0x00, 0x00, 0x00}, // bfill f sb g 
	{0x77a5, &op_bfill,	  5,  10,   7, 0xff, 0x00, 0x00, 0x00}, // bfill f sb h 
	{0x78a5, &op_bfill,	  5,  10,   8, 0xff, 0x00, 0x00, 0x00}, // bfill f sb pc 
	{0x79a5, &op_bfill,	  5,  10,   9, 0xff, 0x00, 0x00, 0x00}, // bfill f sb ra 
	{0x7aa5, &op_bfill,	  5,  10,  10, 0xff, 0x00, 0x00, 0x00}, // bfill f sb sb 
	{0x7ba5, &op_bfill,	  5,  10,  11, 0xff, 0x00, 0x00, 0x00}, // bfill f sb sp 
	{0x7ca5, &op_bfill,	  5,  10,  12, 0xff, 0x00, 0x00, 0x00}, // bfill f sb db 
	{0x7da5, &op_bfill,	  5,  10,  13, 0xff, 0x00, 0x00, 0x00}, // bfill f sb cb 
	{0x7ea5, &op_bfill,	  5,  10,  14, 0xff, 0x00, 0x00, 0x00}, // bfill f sb pi 
	{0x7fa5, &op_bfill,	  5,  10,   8, 0xff, 0x00, 0x04, 0x00}, // bfill f sb <literal> 
	{0x70b5, &op_bfill,	  5,  11,   0, 0xff, 0x00, 0x00, 0x00}, // bfill f sp a 
	{0x71b5, &op_bfill,	  5,  11,   1, 0xff, 0x00, 0x00, 0x00}, // bfill f sp b 
	{0x72b5, &op_bfill,	  5,  11,   2, 0xff, 0x00, 0x00, 0x00}, // bfill f sp c 
	{0x73b5, &op_bfill,	  5,  11,   3, 0xff, 0x00, 0x00, 0x00}, // bfill f sp d 
	{0x74b5, &op_bfill,	  5,  11,   4, 0xff, 0x00, 0x00, 0x00}, // bfill f sp e 
	{0x75b5, &op_bfill,	  5,  11,   5, 0xff, 0x00, 0x00, 0x00}, // bfill f sp f 
	{0x76b5, &op_bfill,	  5,  11,   6, 0xff, 0x00, 0x00, 0x00}, // bfill f sp g 
	{0x77b5, &op_bfill,	  5,  11,   7, 0xff, 0x00, 0x00, 0x00}, // bfill f sp h 
	{0x78b5, &op_bfill,	  5,  11,   8, 0xff, 0x00, 0x00, 0x00}, // bfill f sp pc 
	{0x79b5, &op_bfill,	  5,  11,   9, 0xff, 0x00, 0x00, 0x00}, // bfill f sp ra 
	{0x7ab5, &op_bfill,	  5,  11,  10, 0xff, 0x00, 0x00, 0x00}, // bfill f sp sb 
	{0x7bb5, &op_bfill,	  5,  11,  11, 0xff, 0x00, 0x00, 0x00}, // bfill f sp sp 
	{0x7cb5, &op_bfill,	  5,  11,  12, 0xff, 0x00, 0x00, 0x00}, // bfill f sp db 
	{0x7db5, &op_bfill,	  5,  11,  13, 0xff, 0x00, 0x00, 0x00}, // bfill f sp cb 
	{0x7eb5, &op_bfill,	  5,  11,  14, 0xff, 0x00, 0x00, 0x00}, // bfill f sp pi 
	{0x7fb5, &op_bfill,	  5,  11,   8, 0xff, 0x00, 0x04, 0x00}, // bfill f sp <literal> 
	{0x70c5, &op_bfill,	  5,  12,   0, 0xff, 0x00, 0x00, 0x00}, // bfill f db a 
	{0x71c5, &op_bfill,	  5,  12,   1, 0xff, 0x00, 0x00, 0x00}, // bfill f db b 
	{0x72c5, &op_bfill,	  5,  12,   2, 0xff, 0x00, 0x00, 0x00}, // bfill f db c 
	{0x73c5, &op_bfill,	  5,  12,   3, 0xff, 0x00, 0x00, 0x00}, // bfill f db d 
	{0x74c5, &op_bfill,	  5,  12,   4, 0xff, 0x00, 0x00, 0x00}, // bfill f db e 
	{0x75c5, &op_bfill,	  5,  12,   5, 0xff, 0x00, 0x00, 0x00}, // bfill f db f 
	{0x76c5, &op_bfill,	  5,  12,   6, 0xff, 0x00, 0x00, 0x00}, // bfill f db g 
	{0x77c5, &op_bfill,	  5,  12,   7, 0xff, 0x00, 0x00, 0x00}, // bfill f db h 
	{0x78c5, &op_bfill,	  5,  12,   8, 0xff, 0x00, 0x00, 0x00}, // bfill f db pc 
	{0x79c5, &op_bfill,	  5,  12,   9, 0xff, 0x00, 0x00, 0x00}, // bfill f db ra 
	{0x7ac5, &op_bfill,	  5,  12,  10, 0xff, 0x00, 0x00, 0x00}, // bfill f db sb 
	{0x7bc5, &op_bfill,	  5,  12,  11, 0xff, 0x00, 0x00, 0x00}, // bfill f db sp 
	{0x7cc5, &op_bfill,	  5,  12,  12, 0xff, 0x00, 0x00, 0x00}, // bfill f db db 
	{0x7dc5, &op_bfill,	  5,  12,  13, 0xff, 0x00, 0x00, 0x00}, // bfill f db cb 
	{0x7ec5, &op_bfill,	  5,  12,  14, 0xff, 0x00, 0x00, 0x00}, // bfill f db pi 
	{0x7fc5, &op_bfill,	  5,  12,   8, 0xff, 0x00, 0x04, 0x00}, // bfill f db <literal> 
	{0x70d5, &op_bfill,	  5,  13,   0, 0xff, 0x00, 0x00, 0x00}, // bfill f cb a 
	{0x71d5, &op_bfill,	  5,  13,   1, 0xff, 0x00, 0x00, 0x00}, // bfill f cb b 
	{0x72d5, &op_bfill,	  5,  13,   2, 0xff, 0x00, 0x00, 0x00}, // bfill f cb c 
	{0x73d5, &op_bfill,	  5,  13,   3, 0xff, 0x00, 0x00, 0x00}, // bfill f cb d 
	{0x74d5, &op_bfill,	  5,  13,   4, 0xff, 0x00, 0x00, 0x00}, // bfill f cb e 
	{0x75d5, &op_bfill,	  5,  13,   5, 0xff, 0x00, 0x00, 0x00}, // bfill f cb f 
	{0x76d5, &op_bfill,	  5,  13,   6, 0xff, 0x00, 0x00, 0x00}, // bfill f cb g 
	{0x77d5, &op_bfill,	  5,  13,   7, 0xff, 0x00, 0x00, 0x00}, // bfill f cb h 
	{0x78d5, &op_bfill,	  5,  13,   8, 0xff, 0x00, 0x00, 0x00}, // bfill f cb pc 
	{0x79d5, &op_bfill,	  5,  13,   9, 0xff, 0x00, 0x00, 0x00}, // bfill f cb ra 
	{0x7ad5, &op_bfill,	  5,  13,  10, 0xff, 0x00, 0x00, 0x00}, // bfill f cb sb 
	{0x7bd5, &op_bfill,	  5,  13,  11, 0xff, 0x00, 0x00, 0x00}, // bfill f cb sp 
	{0x7cd5, &op_bfill,	  5,  13,  12, 0xff, 0x00, 0x00, 0x00}, // bfill f cb db 
	{0x7dd5, &op_bfill,	  5,  13,  13, 0xff, 0x00, 0x00, 0x00}, // bfill f cb cb 
	{0x7ed5, &op_bfill,	  5,  13,  14, 0xff, 0x00, 0x00, 0x00}, // bfill f cb pi 
	{0x7fd5, &op_bfill,	  5,  13,   8, 0xff, 0x00, 0x04, 0x00}, // bfill f cb <literal> 
	{0x70e5, &op_bfill,	  5,  14,   0, 0xff, 0x00, 0x00, 0x00}, // bfill f pi a 
	{0x71e5, &op_bfill,	  5,  14,   1, 0xff, 0x00, 0x00, 0x00}, // bfill f pi b 
	{0x72e5, &op_bfill,	  5,  14,   2, 0xff, 0x00, 0x00, 0x00}, // bfill f pi c 
	{0x73e5, &op_bfill,	  5,  14,   3, 0xff, 0x00, 0x00, 0x00}, // bfill f pi d 
	{0x74e5, &op_bfill,	  5,  14,   4, 0xff, 0x00, 0x00, 0x00}, // bfill f pi e 
	{0x75e5, &op_bfill,	  5,  14,   5, 0xff, 0x00, 0x00, 0x00}, // bfill f pi f 
	{0x76e5, &op_bfill,	  5,  14,   6, 0xff, 0x00, 0x00, 0x00}, // bfill f pi g 
	{0x77e5, &op_bfill,	  5,  14,   7, 0xff, 0x00, 0x00, 0x00}, // bfill f pi h 
	{0x78e5, &op_bfill,	  5,  14,   8, 0xff, 0x00, 0x00, 0x00}, // bfill f pi pc 
	{0x79e5, &op_bfill,	  5,  14,   9, 0xff, 0x00, 0x00, 0x00}, // bfill f pi ra 
	{0x7ae5, &op_bfill,	  5,  14,  10, 0xff, 0x00, 0x00, 0x00}, // bfill f pi sb 
	{0x7be5, &op_bfill,	  5,  14,  11, 0xff, 0x00, 0x00, 0x00}, // bfill f pi sp 
	{0x7ce5, &op_bfill,	  5,  14,  12, 0xff, 0x00, 0x00, 0x00}, // bfill f pi db 
	{0x7de5, &op_bfill,	  5,  14,  13, 0xff, 0x00, 0x00, 0x00}, // bfill f pi cb 
	{0x7ee5, &op_bfill,	  5,  14,  14, 0xff, 0x00, 0x00, 0x00}, // bfill f pi pi 
	{0x7fe5, &op_bfill,	  5,  14,   8, 0xff, 0x00, 0x04, 0x00}, // bfill f pi <literal> 
	{0x70f5, &op_bfill,	  5,  15,   0, 0xff, 0x00, 0x00, 0x00}, // bfill f status a 
	{0x71f5, &op_bfill,	  5,  15,   1, 0xff, 0x00, 0x00, 0x00}, // bfill f status b 
	{0x72f5, &op_bfill,	  5,  15,   2, 0xff, 0x00, 0x00, 0x00}, // bfill f status c 
	{0x73f5, &op_bfill,	  5,  15,   3, 0xff, 0x00, 0x00, 0x00}, // bfill f status d 
	{0x74f5, &op_bfill,	  5,  15,   4, 0xff, 0x00, 0x00, 0x00}, // bfill f status e 
	{0x75f5, &op_bfill,	  5,  15,   5, 0xff, 0x00, 0x00, 0x00}, // bfill f status f 
	{0x76f5, &op_bfill,	  5,  15,   6, 0xff, 0x00, 0x00, 0x00}, // bfill f status g 
	{0x77f5, &op_bfill,	  5,  15,   7, 0xff, 0x00, 0x00, 0x00}, // bfill f status h 
	{0x78f5, &op_bfill,	  5,  15,   8, 0xff, 0x00, 0x00, 0x00}, // bfill f status pc 
	{0x79f5, &op_bfill,	  5,  15,   9, 0xff, 0x00, 0x00, 0x00}, // bfill f status ra 
	{0x7af5, &op_bfill,	  5,  15,  10, 0xff, 0x00, 0x00, 0x00}, // bfill f status sb 
	{0x7bf5, &op_bfill,	  5,  15,  11, 0xff, 0x00, 0x00, 0x00}, // bfill f status sp 
	{0x7cf5, &op_bfill,	  5,  15,  12, 0xff, 0x00, 0x00, 0x00}, // bfill f status db 
	{0x7df5, &op_bfill,	  5,  15,  13, 0xff, 0x00, 0x00, 0x00}, // bfill f status cb 
	{0x7ef5, &op_bfill,	  5,  15,  14, 0xff, 0x00, 0x00, 0x00}, // bfill f status pi 
	{0x7ff5, &op_bfill,	  5,  15,   8, 0xff, 0x00, 0x04, 0x00}, // bfill f status <literal> 
	{0x7006, &op_bfill,	  6,   0,   0, 0xff, 0x00, 0x00, 0x00}, // bfill g a a 
	{0x7106, &op_bfill,	  6,   0,   1, 0xff, 0x00, 0x00, 0x00}, // bfill g a b 
	{0x7206, &op_bfill,	  6,   0,   2, 0xff, 0x00, 0x00, 0x00}, // bfill g a c 
	{0x7306, &op_bfill,	  6,   0,   3, 0xff, 0x00, 0x00, 0x00}, // bfill g a d 
	{0x7406, &op_bfill,	  6,   0,   4, 0xff, 0x00, 0x00, 0x00}, // bfill g a e 
	{0x7506, &op_bfill,	  6,   0,   5, 0xff, 0x00, 0x00, 0x00}, // bfill g a f 
	{0x7606, &op_bfill,	  6,   0,   6, 0xff, 0x00, 0x00, 0x00}, // bfill g a g 
	{0x7706, &op_bfill,	  6,   0,   7, 0xff, 0x00, 0x00, 0x00}, // bfill g a h 
	{0x7806, &op_bfill,	  6,   0,   8, 0xff, 0x00, 0x00, 0x00}, // bfill g a pc 
	{0x7906, &op_bfill,	  6,   0,   9, 0xff, 0x00, 0x00, 0x00}, // bfill g a ra 
	{0x7a06, &op_bfill,	  6,   0,  10, 0xff, 0x00, 0x00, 0x00}, // bfill g a sb 
	{0x7b06, &op_bfill,	  6,   0,  11, 0xff, 0x00, 0x00, 0x00}, // bfill g a sp 
	{0x7c06, &op_bfill,	  6,   0,  12, 0xff, 0x00, 0x00, 0x00}, // bfill g a db 
	{0x7d06, &op_bfill,	  6,   0,  13, 0xff, 0x00, 0x00, 0x00}, // bfill g a cb 
	{0x7e06, &op_bfill,	  6,   0,  14, 0xff, 0x00, 0x00, 0x00}, // bfill g a pi 
	{0x7f06, &op_bfill,	  6,   0,   8, 0xff, 0x00, 0x04, 0x00}, // bfill g a <literal> 
	{0x7016, &op_bfill,	  6,   1,   0, 0xff, 0x00, 0x00, 0x00}, // bfill g b a 
	{0x7116, &op_bfill,	  6,   1,   1, 0xff, 0x00, 0x00, 0x00}, // bfill g b b 
	{0x7216, &op_bfill,	  6,   1,   2, 0xff, 0x00, 0x00, 0x00}, // bfill g b c 
	{0x7316, &op_bfill,	  6,   1,   3, 0xff, 0x00, 0x00, 0x00}, // bfill g b d 
	{0x7416, &op_bfill,	  6,   1,   4, 0xff, 0x00, 0x00, 0x00}, // bfill g b e 
	{0x7516, &op_bfill,	  6,   1,   5, 0xff, 0x00, 0x00, 0x00}, // bfill g b f 
	{0x7616, &op_bfill,	  6,   1,   6, 0xff, 0x00, 0x00, 0x00}, // bfill g b g 
	{0x7716, &op_bfill,	  6,   1,   7, 0xff, 0x00, 0x00, 0x00}, // bfill g b h 
	{0x7816, &op_bfill,	  6,   1,   8, 0xff, 0x00, 0x00, 0x00}, // bfill g b pc 
	{0x7916, &op_bfill,	  6,   1,   9, 0xff, 0x00, 0x00, 0x00}, // bfill g b ra 
	{0x7a16, &op_bfill,	  6,   1,  10, 0xff, 0x00, 0x00, 0x00}, // bfill g b sb 
	{0x7b16, &op_bfill,	  6,   1,  11, 0xff, 0x00, 0x00, 0x00}, // bfill g b sp 
	{0x7c16, &op_bfill,	  6,   1,  12, 0xff, 0x00, 0x00, 0x00}, // bfill g b db 
	{0x7d16, &op_bfill,	  6,   1,  13, 0xff, 0x00, 0x00, 0x00}, // bfill g b cb 
	{0x7e16, &op_bfill,	  6,   1,  14, 0xff, 0x00, 0x00, 0x00}, // bfill g b pi 
	{0x7f16, &op_bfill,	  6,   1,   8, 0xff, 0x00, 0x04, 0x00}, // bfill g b <literal> 
	{0x7026, &op_bfill,	  6,   2,   0, 0xff, 0x00, 0x00, 0x00}, // bfill g c a 
	{0x7126, &op_bfill,	  6,   2,   1, 0xff, 0x00, 0x00, 0x00}, // bfill g c b 
	{0x7226, &op_bfill,	  6,   2,   2, 0xff, 0x00, 0x00, 0x00}, // bfill g c c 
	{0x7326, &op_bfill,	  6,   2,   3, 0xff, 0x00, 0x00, 0x00}, // bfill g c d 
	{0x7426, &op_bfill,	  6,   2,   4, 0xff, 0x00, 0x00, 0x00}, // bfill g c e 
	{0x7526, &op_bfill,	  6,   2,   5, 0xff, 0x00, 0x00, 0x00}, // bfill g c f 
	{0x7626, &op_bfill,	  6,   2,   6, 0xff, 0x00, 0x00, 0x00}, // bfill g c g 
	{0x7726, &op_bfill,	  6,   2,   7, 0xff, 0x00, 0x00, 0x00}, // bfill g c h 
	{0x7826, &op_bfill,	  6,   2,   8, 0xff, 0x00, 0x00, 0x00}, // bfill g c pc 
	{0x7926, &op_bfill,	  6,   2,   9, 0xff, 0x00, 0x00, 0x00}, // bfill g c ra 
	{0x7a26, &op_bfill,	  6,   2,  10, 0xff, 0x00, 0x00, 0x00}, // bfill g c sb 
	{0x7b26, &op_bfill,	  6,   2,  11, 0xff, 0x00, 0x00, 0x00}, // bfill g c sp 
	{0x7c26, &op_bfill,	  6,   2,  12, 0xff, 0x00, 0x00, 0x00}, // bfill g c db 
	{0x7d26, &op_bfill,	  6,   2,  13, 0xff, 0x00, 0x00, 0x00}, // bfill g c cb 
	{0x7e26, &op_bfill,	  6,   2,  14, 0xff, 0x00, 0x00, 0x00}, // bfill g c pi 
	{0x7f26, &op_bfill,	  6,   2,   8, 0xff, 0x00, 0x04, 0x00}, // bfill g c <literal> 
	{0x7036, &op_bfill,	  6,   3,   0, 0xff, 0x00, 0x00, 0x00}, // bfill g d a 
	{0x7136, &op_bfill,	  6,   3,   1, 0xff, 0x00, 0x00, 0x00}, // bfill g d b 
	{0x7236, &op_bfill,	  6,   3,   2, 0xff, 0x00, 0x00, 0x00}, // bfill g d c 
	{0x7336, &op_bfill,	  6,   3,   3, 0xff, 0x00, 0x00, 0x00}, // bfill g d d 
	{0x7436, &op_bfill,	  6,   3,   4, 0xff, 0x00, 0x00, 0x00}, // bfill g d e 
	{0x7536, &op_bfill,	  6,   3,   5, 0xff, 0x00, 0x00, 0x00}, // bfill g d f 
	{0x7636, &op_bfill,	  6,   3,   6, 0xff, 0x00, 0x00, 0x00}, // bfill g d g 
	{0x7736, &op_bfill,	  6,   3,   7, 0xff, 0x00, 0x00, 0x00}, // bfill g d h 
	{0x7836, &op_bfill,	  6,   3,   8, 0xff, 0x00, 0x00, 0x00}, // bfill g d pc 
	{0x7936, &op_bfill,	  6,   3,   9, 0xff, 0x00, 0x00, 0x00}, // bfill g d ra 
	{0x7a36, &op_bfill,	  6,   3,  10, 0xff, 0x00, 0x00, 0x00}, // bfill g d sb 
	{0x7b36, &op_bfill,	  6,   3,  11, 0xff, 0x00, 0x00, 0x00}, // bfill g d sp 
	{0x7c36, &op_bfill,	  6,   3,  12, 0xff, 0x00, 0x00, 0x00}, // bfill g d db 
	{0x7d36, &op_bfill,	  6,   3,  13, 0xff, 0x00, 0x00, 0x00}, // bfill g d cb 
	{0x7e36, &op_bfill,	  6,   3,  14, 0xff, 0x00, 0x00, 0x00}, // bfill g d pi 
	{0x7f36, &op_bfill,	  6,   3,   8, 0xff, 0x00, 0x04, 0x00}, // bfill g d <literal> 
	{0x7046, &op_bfill,	  6,   4,   0, 0xff, 0x00, 0x00, 0x00}, // bfill g e a 
	{0x7146, &op_bfill,	  6,   4,   1, 0xff, 0x00, 0x00, 0x00}, // bfill g e b 
	{0x7246, &op_bfill,	  6,   4,   2, 0xff, 0x00, 0x00, 0x00}, // bfill g e c 
	{0x7346, &op_bfill,	  6,   4,   3, 0xff, 0x00, 0x00, 0x00}, // bfill g e d 
	{0x7446, &op_bfill,	  6,   4,   4, 0xff, 0x00, 0x00, 0x00}, // bfill g e e 
	{0x7546, &op_bfill,	  6,   4,   5, 0xff, 0x00, 0x00, 0x00}, // bfill g e f 
	{0x7646, &op_bfill,	  6,   4,   6, 0xff, 0x00, 0x00, 0x00}, // bfill g e g 
	{0x7746, &op_bfill,	  6,   4,   7, 0xff, 0x00, 0x00, 0x00}, // bfill g e h 
	{0x7846, &op_bfill,	  6,   4,   8, 0xff, 0x00, 0x00, 0x00}, // bfill g e pc 
	{0x7946, &op_bfill,	  6,   4,   9, 0xff, 0x00, 0x00, 0x00}, // bfill g e ra 
	{0x7a46, &op_bfill,	  6,   4,  10, 0xff, 0x00, 0x00, 0x00}, // bfill g e sb 
	{0x7b46, &op_bfill,	  6,   4,  11, 0xff, 0x00, 0x00, 0x00}, // bfill g e sp 
	{0x7c46, &op_bfill,	  6,   4,  12, 0xff, 0x00, 0x00, 0x00}, // bfill g e db 
	{0x7d46, &op_bfill,	  6,   4,  13, 0xff, 0x00, 0x00, 0x00}, // bfill g e cb 
	{0x7e46, &op_bfill,	  6,   4,  14, 0xff, 0x00, 0x00, 0x00}, // bfill g e pi 
	{0x7f46, &op_bfill,	  6,   4,   8, 0xff, 0x00, 0x04, 0x00}, // bfill g e <literal> 
	{0x7056, &op_bfill,	  6,   5,   0, 0xff, 0x00, 0x00, 0x00}, // bfill g f a 
	{0x7156, &op_bfill,	  6,   5,   1, 0xff, 0x00, 0x00, 0x00}, // bfill g f b 
	{0x7256, &op_bfill,	  6,   5,   2, 0xff, 0x00, 0x00, 0x00}, // bfill g f c 
	{0x7356, &op_bfill,	  6,   5,   3, 0xff, 0x00, 0x00, 0x00}, // bfill g f d 
	{0x7456, &op_bfill,	  6,   5,   4, 0xff, 0x00, 0x00, 0x00}, // bfill g f e 
	{0x7556, &op_bfill,	  6,   5,   5, 0xff, 0x00, 0x00, 0x00}, // bfill g f f 
	{0x7656, &op_bfill,	  6,   5,   6, 0xff, 0x00, 0x00, 0x00}, // bfill g f g 
	{0x7756, &op_bfill,	  6,   5,   7, 0xff, 0x00, 0x00, 0x00}, // bfill g f h 
	{0x7856, &op_bfill,	  6,   5,   8, 0xff, 0x00, 0x00, 0x00}, // bfill g f pc 
	{0x7956, &op_bfill,	  6,   5,   9, 0xff, 0x00, 0x00, 0x00}, // bfill g f ra 
	{0x7a56, &op_bfill,	  6,   5,  10, 0xff, 0x00, 0x00, 0x00}, // bfill g f sb 
	{0x7b56, &op_bfill,	  6,   5,  11, 0xff, 0x00, 0x00, 0x00}, // bfill g f sp 
	{0x7c56, &op_bfill,	  6,   5,  12, 0xff, 0x00, 0x00, 0x00}, // bfill g f db 
	{0x7d56, &op_bfill,	  6,   5,  13, 0xff, 0x00, 0x00, 0x00}, // bfill g f cb 
	{0x7e56, &op_bfill,	  6,   5,  14, 0xff, 0x00, 0x00, 0x00}, // bfill g f pi 
	{0x7f56, &op_bfill,	  6,   5,   8, 0xff, 0x00, 0x04, 0x00}, // bfill g f <literal> 
	{0x7066, &op_bfill,	  6,   6,   0, 0xff, 0x00, 0x00, 0x00}, // bfill g g a 
	{0x7166, &op_bfill,	  6,   6,   1, 0xff, 0x00, 0x00, 0x00}, // bfill g g b 
	{0x7266, &op_bfill,	  6,   6,   2, 0xff, 0x00, 0x00, 0x00}, // bfill g g c 
	{0x7366, &op_bfill,	  6,   6,   3, 0xff, 0x00, 0x00, 0x00}, // bfill g g d 
	{0x7466, &op_bfill,	  6,   6,   4, 0xff, 0x00, 0x00, 0x00}, // bfill g g e 
	{0x7566, &op_bfill,	  6,   6,   5, 0xff, 0x00, 0x00, 0x00}, // bfill g g f 
	{0x7666, &op_bfill,	  6,   6,   6, 0xff, 0x00, 0x00, 0x00}, // bfill g g g 
	{0x7766, &op_bfill,	  6,   6,   7, 0xff, 0x00, 0x00, 0x00}, // bfill g g h 
	{0x7866, &op_bfill,	  6,   6,   8, 0xff, 0x00, 0x00, 0x00}, // bfill g g pc 
	{0x7966, &op_bfill,	  6,   6,   9, 0xff, 0x00, 0x00, 0x00}, // bfill g g ra 
	{0x7a66, &op_bfill,	  6,   6,  10, 0xff, 0x00, 0x00, 0x00}, // bfill g g sb 
	{0x7b66, &op_bfill,	  6,   6,  11, 0xff, 0x00, 0x00, 0x00}, // bfill g g sp 
	{0x7c66, &op_bfill,	  6,   6,  12, 0xff, 0x00, 0x00, 0x00}, // bfill g g db 
	{0x7d66, &op_bfill,	  6,   6,  13, 0xff, 0x00, 0x00, 0x00}, // bfill g g cb 
	{0x7e66, &op_bfill,	  6,   6,  14, 0xff, 0x00, 0x00, 0x00}, // bfill g g pi 
	{0x7f66, &op_bfill,	  6,   6,   8, 0xff, 0x00, 0x04, 0x00}, // bfill g g <literal> 
	{0x7076, &op_bfill,	  6,   7,   0, 0xff, 0x00, 0x00, 0x00}, // bfill g h a 
	{0x7176, &op_bfill,	  6,   7,   1, 0xff, 0x00, 0x00, 0x00}, // bfill g h b 
	{0x7276, &op_bfill,	  6,   7,   2, 0xff, 0x00, 0x00, 0x00}, // bfill g h c 
	{0x7376, &op_bfill,	  6,   7,   3, 0xff, 0x00, 0x00, 0x00}, // bfill g h d 
	{0x7476, &op_bfill,	  6,   7,   4, 0xff, 0x00, 0x00, 0x00}, // bfill g h e 
	{0x7576, &op_bfill,	  6,   7,   5, 0xff, 0x00, 0x00, 0x00}, // bfill g h f 
	{0x7676, &op_bfill,	  6,   7,   6, 0xff, 0x00, 0x00, 0x00}, // bfill g h g 
	{0x7776, &op_bfill,	  6,   7,   7, 0xff, 0x00, 0x00, 0x00}, // bfill g h h 
	{0x7876, &op_bfill,	  6,   7,   8, 0xff, 0x00, 0x00, 0x00}, // bfill g h pc 
	{0x7976, &op_bfill,	  6,   7,   9, 0xff, 0x00, 0x00, 0x00}, // bfill g h ra 
	{0x7a76, &op_bfill,	  6,   7,  10, 0xff, 0x00, 0x00, 0x00}, // bfill g h sb 
	{0x7b76, &op_bfill,	  6,   7,  11, 0xff, 0x00, 0x00, 0x00}, // bfill g h sp 
	{0x7c76, &op_bfill,	  6,   7,  12, 0xff, 0x00, 0x00, 0x00}, // bfill g h db 
	{0x7d76, &op_bfill,	  6,   7,  13, 0xff, 0x00, 0x00, 0x00}, // bfill g h cb 
	{0x7e76, &op_bfill,	  6,   7,  14, 0xff, 0x00, 0x00, 0x00}, // bfill g h pi 
	{0x7f76, &op_bfill,	  6,   7,   8, 0xff, 0x00, 0x04, 0x00}, // bfill g h <literal> 
	{0x7086, &op_bfill,	  6,   8,   0, 0xff, 0x00, 0x00, 0x00}, // bfill g pc a 
	{0x7186, &op_bfill,	  6,   8,   1, 0xff, 0x00, 0x00, 0x00}, // bfill g pc b 
	{0x7286, &op_bfill,	  6,   8,   2, 0xff, 0x00, 0x00, 0x00}, // bfill g pc c 
	{0x7386, &op_bfill,	  6,   8,   3, 0xff, 0x00, 0x00, 0x00}, // bfill g pc d 
	{0x7486, &op_bfill,	  6,   8,   4, 0xff, 0x00, 0x00, 0x00}, // bfill g pc e 
	{0x7586, &op_bfill,	  6,   8,   5, 0xff, 0x00, 0x00, 0x00}, // bfill g pc f 
	{0x7686, &op_bfill,	  6,   8,   6, 0xff, 0x00, 0x00, 0x00}, // bfill g pc g 
	{0x7786, &op_bfill,	  6,   8,   7, 0xff, 0x00, 0x00, 0x00}, // bfill g pc h 
	{0x7886, &op_bfill,	  6,   8,   8, 0xff, 0x00, 0x00, 0x00}, // bfill g pc pc 
	{0x7986, &op_bfill,	  6,   8,   9, 0xff, 0x00, 0x00, 0x00}, // bfill g pc ra 
	{0x7a86, &op_bfill,	  6,   8,  10, 0xff, 0x00, 0x00, 0x00}, // bfill g pc sb 
	{0x7b86, &op_bfill,	  6,   8,  11, 0xff, 0x00, 0x00, 0x00}, // bfill g pc sp 
	{0x7c86, &op_bfill,	  6,   8,  12, 0xff, 0x00, 0x00, 0x00}, // bfill g pc db 
	{0x7d86, &op_bfill,	  6,   8,  13, 0xff, 0x00, 0x00, 0x00}, // bfill g pc cb 
	{0x7e86, &op_bfill,	  6,   8,  14, 0xff, 0x00, 0x00, 0x00}, // bfill g pc pi 
	{0x7f86, &op_bfill,	  6,   8,   8, 0xff, 0x00, 0x04, 0x00}, // bfill g pc <literal> 
	{0x7096, &op_bfill,	  6,   9,   0, 0xff, 0x00, 0x00, 0x00}, // bfill g ra a 
	{0x7196, &op_bfill,	  6,   9,   1, 0xff, 0x00, 0x00, 0x00}, // bfill g ra b 
	{0x7296, &op_bfill,	  6,   9,   2, 0xff, 0x00, 0x00, 0x00}, // bfill g ra c 
	{0x7396, &op_bfill,	  6,   9,   3, 0xff, 0x00, 0x00, 0x00}, // bfill g ra d 
	{0x7496, &op_bfill,	  6,   9,   4, 0xff, 0x00, 0x00, 0x00}, // bfill g ra e 
	{0x7596, &op_bfill,	  6,   9,   5, 0xff, 0x00, 0x00, 0x00}, // bfill g ra f 
	{0x7696, &op_bfill,	  6,   9,   6, 0xff, 0x00, 0x00, 0x00}, // bfill g ra g 
	{0x7796, &op_bfill,	  6,   9,   7, 0xff, 0x00, 0x00, 0x00}, // bfill g ra h 
	{0x7896, &op_bfill,	  6,   9,   8, 0xff, 0x00, 0x00, 0x00}, // bfill g ra pc 
	{0x7996, &op_bfill,	  6,   9,   9, 0xff, 0x00, 0x00, 0x00}, // bfill g ra ra 
	{0x7a96, &op_bfill,	  6,   9,  10, 0xff, 0x00, 0x00, 0x00}, // bfill g ra sb 
	{0x7b96, &op_bfill,	  6,   9,  11, 0xff, 0x00, 0x00, 0x00}, // bfill g ra sp 
	{0x7c96, &op_bfill,	  6,   9,  12, 0xff, 0x00, 0x00, 0x00}, // bfill g ra db 
	{0x7d96, &op_bfill,	  6,   9,  13, 0xff, 0x00, 0x00, 0x00}, // bfill g ra cb 
	{0x7e96, &op_bfill,	  6,   9,  14, 0xff, 0x00, 0x00, 0x00}, // bfill g ra pi 
	{0x7f96, &op_bfill,	  6,   9,   8, 0xff, 0x00, 0x04, 0x00}, // bfill g ra <literal> 
	{0x70a6, &op_bfill,	  6,  10,   0, 0xff, 0x00, 0x00, 0x00}, // bfill g sb a 
	{0x71a6, &op_bfill,	  6,  10,   1, 0xff, 0x00, 0x00, 0x00}, // bfill g sb b 
	{0x72a6, &op_bfill,	  6,  10,   2, 0xff, 0x00, 0x00, 0x00}, // bfill g sb c 
	{0x73a6, &op_bfill,	  6,  10,   3, 0xff, 0x00, 0x00, 0x00}, // bfill g sb d 
	{0x74a6, &op_bfill,	  6,  10,   4, 0xff, 0x00, 0x00, 0x00}, // bfill g sb e 
	{0x75a6, &op_bfill,	  6,  10,   5, 0xff, 0x00, 0x00, 0x00}, // bfill g sb f 
	{0x76a6, &op_bfill,	  6,  10,   6, 0xff, 0x00, 0x00, 0x00}, // bfill g sb g 
	{0x77a6, &op_bfill,	  6,  10,   7, 0xff, 0x00, 0x00, 0x00}, // bfill g sb h 
	{0x78a6, &op_bfill,	  6,  10,   8, 0xff, 0x00, 0x00, 0x00}, // bfill g sb pc 
	{0x79a6, &op_bfill,	  6,  10,   9, 0xff, 0x00, 0x00, 0x00}, // bfill g sb ra 
	{0x7aa6, &op_bfill,	  6,  10,  10, 0xff, 0x00, 0x00, 0x00}, // bfill g sb sb 
	{0x7ba6, &op_bfill,	  6,  10,  11, 0xff, 0x00, 0x00, 0x00}, // bfill g sb sp 
	{0x7ca6, &op_bfill,	  6,  10,  12, 0xff, 0x00, 0x00, 0x00}, // bfill g sb db 
	{0x7da6, &op_bfill,	  6,  10,  13, 0xff, 0x00, 0x00, 0x00}, // bfill g sb cb 
	{0x7ea6, &op_bfill,	  6,  10,  14, 0xff, 0x00, 0x00, 0x00}, // bfill g sb pi 
	{0x7fa6, &op_bfill,	  6,  10,   8, 0xff, 0x00, 0x04, 0x00}, // bfill g sb <literal> 
	{0x70b6, &op_bfill,	  6,  11,   0, 0xff, 0x00, 0x00, 0x00}, // bfill g sp a 
	{0x71b6, &op_bfill,	  6,  11,   1, 0xff, 0x00, 0x00, 0x00}, // bfill g sp b 
	{0x72b6, &op_bfill,	  6,  11,   2, 0xff, 0x00, 0x00, 0x00}, // bfill g sp c 
	{0x73b6, &op_bfill,	  6,  11,   3, 0xff, 0x00, 0x00, 0x00}, // bfill g sp d 
	{0x74b6, &op_bfill,	  6,  11,   4, 0xff, 0x00, 0x00, 0x00}, // bfill g sp e 
	{0x75b6, &op_bfill,	  6,  11,   5, 0xff, 0x00, 0x00, 0x00}, // bfill g sp f 
	{0x76b6, &op_bfill,	  6,  11,   6, 0xff, 0x00, 0x00, 0x00}, // bfill g sp g 
	{0x77b6, &op_bfill,	  6,  11,   7, 0xff, 0x00, 0x00, 0x00}, // bfill g sp h 
	{0x78b6, &op_bfill,	  6,  11,   8, 0xff, 0x00, 0x00, 0x00}, // bfill g sp pc 
	{0x79b6, &op_bfill,	  6,  11,   9, 0xff, 0x00, 0x00, 0x00}, // bfill g sp ra 
	{0x7ab6, &op_bfill,	  6,  11,  10, 0xff, 0x00, 0x00, 0x00}, // bfill g sp sb 
	{0x7bb6, &op_bfill,	  6,  11,  11, 0xff, 0x00, 0x00, 0x00}, // bfill g sp sp 
	{0x7cb6, &op_bfill,	  6,  11,  12, 0xff, 0x00, 0x00, 0x00}, // bfill g sp db 
	{0x7db6, &op_bfill,	  6,  11,  13, 0xff, 0x00, 0x00, 0x00}, // bfill g sp cb 
	{0x7eb6, &op_bfill,	  6,  11,  14, 0xff, 0x00, 0x00, 0x00}, // bfill g sp pi 
	{0x7fb6, &op_bfill,	  6,  11,   8, 0xff, 0x00, 0x04, 0x00}, // bfill g sp <literal> 
	{0x70c6, &op_bfill,	  6,  12,   0, 0xff, 0x00, 0x00, 0x00}, // bfill g db a 
	{0x71c6, &op_bfill,	  6,  12,   1, 0xff, 0x00, 0x00, 0x00}, // bfill g db b 
	{0x72c6, &op_bfill,	  6,  12,   2, 0xff, 0x00, 0x00, 0x00}, // bfill g db c 
	{0x73c6, &op_bfill,	  6,  12,   3, 0xff, 0x00, 0x00, 0x00}, // bfill g db d 
	{0x74c6, &op_bfill,	  6,  12,   4, 0xff, 0x00, 0x00, 0x00}, // bfill g db e 
	{0x75c6, &op_bfill,	  6,  12,   5, 0xff, 0x00, 0x00, 0x00}, // bfill g db f 
	{0x76c6, &op_bfill,	  6,  12,   6, 0xff, 0x00, 0x00, 0x00}, // bfill g db g 
	{0x77c6, &op_bfill,	  6,  12,   7, 0xff, 0x00, 0x00, 0x00}, // bfill g db h 
	{0x78c6, &op_bfill,	  6,  12,   8, 0xff, 0x00, 0x00, 0x00}, // bfill g db pc 
	{0x79c6, &op_bfill,	  6,  12,   9, 0xff, 0x00, 0x00, 0x00}, // bfill g db ra 
	{0x7ac6, &op_bfill,	  6,  12,  10, 0xff, 0x00, 0x00, 0x00}, // bfill g db sb 
	{0x7bc6, &op_bfill,	  6,  12,  11, 0xff, 0x00, 0x00, 0x00}, // bfill g db sp 
	{0x7cc6, &op_bfill,	  6,  12,  12, 0xff, 0x00, 0x00, 0x00}, // bfill g db db 
	{0x7dc6, &op_bfill,	  6,  12,  13, 0xff, 0x00, 0x00, 0x00}, // bfill g db cb 
	{0x7ec6, &op_bfill,	  6,  12,  14, 0xff, 0x00, 0x00, 0x00}, // bfill g db pi 
	{0x7fc6, &op_bfill,	  6,  12,   8, 0xff, 0x00, 0x04, 0x00}, // bfill g db <literal> 
	{0x70d6, &op_bfill,	  6,  13,   0, 0xff, 0x00, 0x00, 0x00}, // bfill g cb a 
	{0x71d6, &op_bfill,	  6,  13,   1, 0xff, 0x00, 0x00, 0x00}, // bfill g cb b 
	{0x72d6, &op_bfill,	  6,  13,   2, 0xff, 0x00, 0x00, 0x00}, // bfill g cb c 
	{0x73d6, &op_bfill,	  6,  13,   3, 0xff, 0x00, 0x00, 0x00}, // bfill g cb d 
	{0x74d6, &op_bfill,	  6,  13,   4, 0xff, 0x00, 0x00, 0x00}, // bfill g cb e 
	{0x75d6, &op_bfill,	  6,  13,   5, 0xff, 0x00, 0x00, 0x00}, // bfill g cb f 
	{0x76d6, &op_bfill,	  6,  13,   6, 0xff, 0x00, 0x00, 0x00}, // bfill g cb g 
	{0x77d6, &op_bfill,	  6,  13,   7, 0xff, 0x00, 0x00, 0x00}, // bfill g cb h 
	{0x78d6, &op_bfill,	  6,  13,   8, 0xff, 0x00, 0x00, 0x00}, // bfill g cb pc 
	{0x79d6, &op_bfill,	  6,  13,   9, 0xff, 0x00, 0x00, 0x00}, // bfill g cb ra 
	{0x7ad6, &op_bfill,	  6,  13,  10, 0xff, 0x00, 0x00, 0x00}, // bfill g cb sb 
	{0x7bd6, &op_bfill,	  6,  13,  11, 0xff, 0x00, 0x00, 0x00}, // bfill g cb sp 
	{0x7cd6, &op_bfill,	  6,  13,  12, 0xff, 0x00, 0x00, 0x00}, // bfill g cb db 
	{0x7dd6, &op_bfill,	  6,  13,  13, 0xff, 0x00, 0x00, 0x00}, // bfill g cb cb 
	{0x7ed6, &op_bfill,	  6,  13,  14, 0xff, 0x00, 0x00, 0x00}, // bfill g cb pi 
	{0x7fd6, &op_bfill,	  6,  13,   8, 0xff, 0x00, 0x04, 0x00}, // bfill g cb <literal> 
	{0x70e6, &op_bfill,	  6,  14,   0, 0xff, 0x00, 0x00, 0x00}, // bfill g pi a 
	{0x71e6, &op_bfill,	  6,  14,   1, 0xff, 0x00, 0x00, 0x00}, // bfill g pi b 
	{0x72e6, &op_bfill,	  6,  14,   2, 0xff, 0x00, 0x00, 0x00}, // bfill g pi c 
	{0x73e6, &op_bfill,	  6,  14,   3, 0xff, 0x00, 0x00, 0x00}, // bfill g pi d 
	{0x74e6, &op_bfill,	  6,  14,   4, 0xff, 0x00, 0x00, 0x00}, // bfill g pi e 
	{0x75e6, &op_bfill,	  6,  14,   5, 0xff, 0x00, 0x00, 0x00}, // bfill g pi f 
	{0x76e6, &op_bfill,	  6,  14,   6, 0xff, 0x00, 0x00, 0x00}, // bfill g pi g 
	{0x77e6, &op_bfill,	  6,  14,   7, 0xff, 0x00, 0x00, 0x00}, // bfill g pi h 
	{0x78e6, &op_bfill,	  6,  14,   8, 0xff, 0x00, 0x00, 0x00}, // bfill g pi pc 
	{0x79e6, &op_bfill,	  6,  14,   9, 0xff, 0x00, 0x00, 0x00}, // bfill g pi ra 
	{0x7ae6, &op_bfill,	  6,  14,  10, 0xff, 0x00, 0x00, 0x00}, // bfill g pi sb 
	{0x7be6, &op_bfill,	  6,  14,  11, 0xff, 0x00, 0x00, 0x00}, // bfill g pi sp 
	{0x7ce6, &op_bfill,	  6,  14,  12, 0xff, 0x00, 0x00, 0x00}, // bfill g pi db 
	{0x7de6, &op_bfill,	  6,  14,  13, 0xff, 0x00, 0x00, 0x00}, // bfill g pi cb 
	{0x7ee6, &op_bfill,	  6,  14,  14, 0xff, 0x00, 0x00, 0x00}, // bfill g pi pi 
	{0x7fe6, &op_bfill,	  6,  14,   8, 0xff, 0x00, 0x04, 0x00}, // bfill g pi <literal> 
	{0x70f6, &op_bfill,	  6,  15,   0, 0xff, 0x00, 0x00, 0x00}, // bfill g status a 
	{0x71f6, &op_bfill,	  6,  15,   1, 0xff, 0x00, 0x00, 0x00}, // bfill g status b 
	{0x72f6, &op_bfill,	  6,  15,   2, 0xff, 0x00, 0x00, 0x00}, // bfill g status c 
	{0x73f6, &op_bfill,	  6,  15,   3, 0xff, 0x00, 0x00, 0x00}, // bfill g status d 
	{0x74f6, &op_bfill,	  6,  15,   4, 0xff, 0x00, 0x00, 0x00}, // bfill g status e 
	{0x75f6, &op_bfill,	  6,  15,   5, 0xff, 0x00, 0x00, 0x00}, // bfill g status f 
	{0x76f6, &op_bfill,	  6,  15,   6, 0xff, 0x00, 0x00, 0x00}, // bfill g status g 
	{0x77f6, &op_bfill,	  6,  15,   7, 0xff, 0x00, 0x00, 0x00}, // bfill g status h 
	{0x78f6, &op_bfill,	  6,  15,   8, 0xff, 0x00, 0x00, 0x00}, // bfill g status pc 
	{0x79f6, &op_bfill,	  6,  15,   9, 0xff, 0x00, 0x00, 0x00}, // bfill g status ra 
	{0x7af6, &op_bfill,	  6,  15,  10, 0xff, 0x00, 0x00, 0x00}, // bfill g status sb 
	{0x7bf6, &op_bfill,	  6,  15,  11, 0xff, 0x00, 0x00, 0x00}, // bfill g status sp 
	{0x7cf6, &op_bfill,	  6,  15,  12, 0xff, 0x00, 0x00, 0x00}, // bfill g status db 
	{0x7df6, &op_bfill,	  6,  15,  13, 0xff, 0x00, 0x00, 0x00}, // bfill g status cb 
	{0x7ef6, &op_bfill,	  6,  15,  14, 0xff, 0x00, 0x00, 0x00}, // bfill g status pi 
	{0x7ff6, &op_bfill,	  6,  15,   8, 0xff, 0x00, 0x04, 0x00}, // bfill g status <literal> 
	{0x7007, &op_bfill,	  7,   0,   0, 0xff, 0x00, 0x00, 0x00}, // bfill h a a 
	{0x7107, &op_bfill,	  7,   0,   1, 0xff, 0x00, 0x00, 0x00}, // bfill h a b 
	{0x7207, &op_bfill,	  7,   0,   2, 0xff, 0x00, 0x00, 0x00}, // bfill h a c 
	{0x7307, &op_bfill,	  7,   0,   3, 0xff, 0x00, 0x00, 0x00}, // bfill h a d 
	{0x7407, &op_bfill,	  7,   0,   4, 0xff, 0x00, 0x00, 0x00}, // bfill h a e 
	{0x7507, &op_bfill,	  7,   0,   5, 0xff, 0x00, 0x00, 0x00}, // bfill h a f 
	{0x7607, &op_bfill,	  7,   0,   6, 0xff, 0x00, 0x00, 0x00}, // bfill h a g 
	{0x7707, &op_bfill,	  7,   0,   7, 0xff, 0x00, 0x00, 0x00}, // bfill h a h 
	{0x7807, &op_bfill,	  7,   0,   8, 0xff, 0x00, 0x00, 0x00}, // bfill h a pc 
	{0x7907, &op_bfill,	  7,   0,   9, 0xff, 0x00, 0x00, 0x00}, // bfill h a ra 
	{0x7a07, &op_bfill,	  7,   0,  10, 0xff, 0x00, 0x00, 0x00}, // bfill h a sb 
	{0x7b07, &op_bfill,	  7,   0,  11, 0xff, 0x00, 0x00, 0x00}, // bfill h a sp 
	{0x7c07, &op_bfill,	  7,   0,  12, 0xff, 0x00, 0x00, 0x00}, // bfill h a db 
	{0x7d07, &op_bfill,	  7,   0,  13, 0xff, 0x00, 0x00, 0x00}, // bfill h a cb 
	{0x7e07, &op_bfill,	  7,   0,  14, 0xff, 0x00, 0x00, 0x00}, // bfill h a pi 
	{0x7f07, &op_bfill,	  7,   0,   8, 0xff, 0x00, 0x04, 0x00}, // bfill h a <literal> 
	{0x7017, &op_bfill,	  7,   1,   0, 0xff, 0x00, 0x00, 0x00}, // bfill h b a 
	{0x7117, &op_bfill,	  7,   1,   1, 0xff, 0x00, 0x00, 0x00}, // bfill h b b 
	{0x7217, &op_bfill,	  7,   1,   2, 0xff, 0x00, 0x00, 0x00}, // bfill h b c 
	{0x7317, &op_bfill,	  7,   1,   3, 0xff, 0x00, 0x00, 0x00}, // bfill h b d 
	{0x7417, &op_bfill,	  7,   1,   4, 0xff, 0x00, 0x00, 0x00}, // bfill h b e 
	{0x7517, &op_bfill,	  7,   1,   5, 0xff, 0x00, 0x00, 0x00}, // bfill h b f 
	{0x7617, &op_bfill,	  7,   1,   6, 0xff, 0x00, 0x00, 0x00}, // bfill h b g 
	{0x7717, &op_bfill,	  7,   1,   7, 0xff, 0x00, 0x00, 0x00}, // bfill h b h 
	{0x7817, &op_bfill,	  7,   1,   8, 0xff, 0x00, 0x00, 0x00}, // bfill h b pc 
	{0x7917, &op_bfill,	  7,   1,   9, 0xff, 0x00, 0x00, 0x00}, // bfill h b ra 
	{0x7a17, &op_bfill,	  7,   1,  10, 0xff, 0x00, 0x00, 0x00}, // bfill h b sb 
	{0x7b17, &op_bfill,	  7,   1,  11, 0xff, 0x00, 0x00, 0x00}, // bfill h b sp 
	{0x7c17, &op_bfill,	  7,   1,  12, 0xff, 0x00, 0x00, 0x00}, // bfill h b db 
	{0x7d17, &op_bfill,	  7,   1,  13, 0xff, 0x00, 0x00, 0x00}, // bfill h b cb 
	{0x7e17, &op_bfill,	  7,   1,  14, 0xff, 0x00, 0x00, 0x00}, // bfill h b pi 
	{0x7f17, &op_bfill,	  7,   1,   8, 0xff, 0x00, 0x04, 0x00}, // bfill h b <literal> 
	{0x7027, &op_bfill,	  7,   2,   0, 0xff, 0x00, 0x00, 0x00}, // bfill h c a 
	{0x7127, &op_bfill,	  7,   2,   1, 0xff, 0x00, 0x00, 0x00}, // bfill h c b 
	{0x7227, &op_bfill,	  7,   2,   2, 0xff, 0x00, 0x00, 0x00}, // bfill h c c 
	{0x7327, &op_bfill,	  7,   2,   3, 0xff, 0x00, 0x00, 0x00}, // bfill h c d 
	{0x7427, &op_bfill,	  7,   2,   4, 0xff, 0x00, 0x00, 0x00}, // bfill h c e 
	{0x7527, &op_bfill,	  7,   2,   5, 0xff, 0x00, 0x00, 0x00}, // bfill h c f 
	{0x7627, &op_bfill,	  7,   2,   6, 0xff, 0x00, 0x00, 0x00}, // bfill h c g 
	{0x7727, &op_bfill,	  7,   2,   7, 0xff, 0x00, 0x00, 0x00}, // bfill h c h 
	{0x7827, &op_bfill,	  7,   2,   8, 0xff, 0x00, 0x00, 0x00}, // bfill h c pc 
	{0x7927, &op_bfill,	  7,   2,   9, 0xff, 0x00, 0x00, 0x00}, // bfill h c ra 
	{0x7a27, &op_bfill,	  7,   2,  10, 0xff, 0x00, 0x00, 0x00}, // bfill h c sb 
	{0x7b27, &op_bfill,	  7,   2,  11, 0xff, 0x00, 0x00, 0x00}, // bfill h c sp 
	{0x7c27, &op_bfill,	  7,   2,  12, 0xff, 0x00, 0x00, 0x00}, // bfill h c db 
	{0x7d27, &op_bfill,	  7,   2,  13, 0xff, 0x00, 0x00, 0x00}, // bfill h c cb 
	{0x7e27, &op_bfill,	  7,   2,  14, 0xff, 0x00, 0x00, 0x00}, // bfill h c pi 
	{0x7f27, &op_bfill,	  7,   2,   8, 0xff, 0x00, 0x04, 0x00}, // bfill h c <literal> 
	{0x7037, &op_bfill,	  7,   3,   0, 0xff, 0x00, 0x00, 0x00}, // bfill h d a 
	{0x7137, &op_bfill,	  7,   3,   1, 0xff, 0x00, 0x00, 0x00}, // bfill h d b 
	{0x7237, &op_bfill,	  7,   3,   2, 0xff, 0x00, 0x00, 0x00}, // bfill h d c 
	{0x7337, &op_bfill,	  7,   3,   3, 0xff, 0x00, 0x00, 0x00}, // bfill h d d 
	{0x7437, &op_bfill,	  7,   3,   4, 0xff, 0x00, 0x00, 0x00}, // bfill h d e 
	{0x7537, &op_bfill,	  7,   3,   5, 0xff, 0x00, 0x00, 0x00}, // bfill h d f 
	{0x7637, &op_bfill,	  7,   3,   6, 0xff, 0x00, 0x00, 0x00}, // bfill h d g 
	{0x7737, &op_bfill,	  7,   3,   7, 0xff, 0x00, 0x00, 0x00}, // bfill h d h 
	{0x7837, &op_bfill,	  7,   3,   8, 0xff, 0x00, 0x00, 0x00}, // bfill h d pc 
	{0x7937, &op_bfill,	  7,   3,   9, 0xff, 0x00, 0x00, 0x00}, // bfill h d ra 
	{0x7a37, &op_bfill,	  7,   3,  10, 0xff, 0x00, 0x00, 0x00}, // bfill h d sb 
	{0x7b37, &op_bfill,	  7,   3,  11, 0xff, 0x00, 0x00, 0x00}, // bfill h d sp 
	{0x7c37, &op_bfill,	  7,   3,  12, 0xff, 0x00, 0x00, 0x00}, // bfill h d db 
	{0x7d37, &op_bfill,	  7,   3,  13, 0xff, 0x00, 0x00, 0x00}, // bfill h d cb 
	{0x7e37, &op_bfill,	  7,   3,  14, 0xff, 0x00, 0x00, 0x00}, // bfill h d pi 
	{0x7f37, &op_bfill,	  7,   3,   8, 0xff, 0x00, 0x04, 0x00}, // bfill h d <literal> 
	{0x7047, &op_bfill,	  7,   4,   0, 0xff, 0x00, 0x00, 0x00}, // bfill h e a 
	{0x7147, &op_bfill,	  7,   4,   1, 0xff, 0x00, 0x00, 0x00}, // bfill h e b 
	{0x7247, &op_bfill,	  7,   4,   2, 0xff, 0x00, 0x00, 0x00}, // bfill h e c 
	{0x7347, &op_bfill,	  7,   4,   3, 0xff, 0x00, 0x00, 0x00}, // bfill h e d 
	{0x7447, &op_bfill,	  7,   4,   4, 0xff, 0x00, 0x00, 0x00}, // bfill h e e 
	{0x7547, &op_bfill,	  7,   4,   5, 0xff, 0x00, 0x00, 0x00}, // bfill h e f 
	{0x7647, &op_bfill,	  7,   4,   6, 0xff, 0x00, 0x00, 0x00}, // bfill h e g 
	{0x7747, &op_bfill,	  7,   4,   7, 0xff, 0x00, 0x00, 0x00}, // bfill h e h 
	{0x7847, &op_bfill,	  7,   4,   8, 0xff, 0x00, 0x00, 0x00}, // bfill h e pc 
	{0x7947, &op_bfill,	  7,   4,   9, 0xff, 0x00, 0x00, 0x00}, // bfill h e ra 
	{0x7a47, &op_bfill,	  7,   4,  10, 0xff, 0x00, 0x00, 0x00}, // bfill h e sb 
	{0x7b47, &op_bfill,	  7,   4,  11, 0xff, 0x00, 0x00, 0x00}, // bfill h e sp 
	{0x7c47, &op_bfill,	  7,   4,  12, 0xff, 0x00, 0x00, 0x00}, // bfill h e db 
	{0x7d47, &op_bfill,	  7,   4,  13, 0xff, 0x00, 0x00, 0x00}, // bfill h e cb 
	{0x7e47, &op_bfill,	  7,   4,  14, 0xff, 0x00, 0x00, 0x00}, // bfill h e pi 
	{0x7f47, &op_bfill,	  7,   4,   8, 0xff, 0x00, 0x04, 0x00}, // bfill h e <literal> 
	{0x7057, &op_bfill,	  7,   5,   0, 0xff, 0x00, 0x00, 0x00}, // bfill h f a 
	{0x7157, &op_bfill,	  7,   5,   1, 0xff, 0x00, 0x00, 0x00}, // bfill h f b 
	{0x7257, &op_bfill,	  7,   5,   2, 0xff, 0x00, 0x00, 0x00}, // bfill h f c 
	{0x7357, &op_bfill,	  7,   5,   3, 0xff, 0x00, 0x00, 0x00}, // bfill h f d 
	{0x7457, &op_bfill,	  7,   5,   4, 0xff, 0x00, 0x00, 0x00}, // bfill h f e 
	{0x7557, &op_bfill,	  7,   5,   5, 0xff, 0x00, 0x00, 0x00}, // bfill h f f 
	{0x7657, &op_bfill,	  7,   5,   6, 0xff, 0x00, 0x00, 0x00}, // bfill h f g 
	{0x7757, &op_bfill,	  7,   5,   7, 0xff, 0x00, 0x00, 0x00}, // bfill h f h 
	{0x7857, &op_bfill,	  7,   5,   8, 0xff, 0x00, 0x00, 0x00}, // bfill h f pc 
	{0x7957, &op_bfill,	  7,   5,   9, 0xff, 0x00, 0x00, 0x00}, // bfill h f ra 
	{0x7a57, &op_bfill,	  7,   5,  10, 0xff, 0x00, 0x00, 0x00}, // bfill h f sb 
	{0x7b57, &op_bfill,	  7,   5,  11, 0xff, 0x00, 0x00, 0x00}, // bfill h f sp 
	{0x7c57, &op_bfill,	  7,   5,  12, 0xff, 0x00, 0x00, 0x00}, // bfill h f db 
	{0x7d57, &op_bfill,	  7,   5,  13, 0xff, 0x00, 0x00, 0x00}, // bfill h f cb 
	{0x7e57, &op_bfill,	  7,   5,  14, 0xff, 0x00, 0x00, 0x00}, // bfill h f pi 
	{0x7f57, &op_bfill,	  7,   5,   8, 0xff, 0x00, 0x04, 0x00}, // bfill h f <literal> 
	{0x7067, &op_bfill,	  7,   6,   0, 0xff, 0x00, 0x00, 0x00}, // bfill h g a 
	{0x7167, &op_bfill,	  7,   6,   1, 0xff, 0x00, 0x00, 0x00}, // bfill h g b 
	{0x7267, &op_bfill,	  7,   6,   2, 0xff, 0x00, 0x00, 0x00}, // bfill h g c 
	{0x7367, &op_bfill,	  7,   6,   3, 0xff, 0x00, 0x00, 0x00}, // bfill h g d 
	{0x7467, &op_bfill,	  7,   6,   4, 0xff, 0x00, 0x00, 0x00}, // bfill h g e 
	{0x7567, &op_bfill,	  7,   6,   5, 0xff, 0x00, 0x00, 0x00}, // bfill h g f 
	{0x7667, &op_bfill,	  7,   6,   6, 0xff, 0x00, 0x00, 0x00}, // bfill h g g 
	{0x7767, &op_bfill,	  7,   6,   7, 0xff, 0x00, 0x00, 0x00}, // bfill h g h 
	{0x7867, &op_bfill,	  7,   6,   8, 0xff, 0x00, 0x00, 0x00}, // bfill h g pc 
	{0x7967, &op_bfill,	  7,   6,   9, 0xff, 0x00, 0x00, 0x00}, // bfill h g ra 
	{0x7a67, &op_bfill,	  7,   6,  10, 0xff, 0x00, 0x00, 0x00}, // bfill h g sb 
	{0x7b67, &op_bfill,	  7,   6,  11, 0xff, 0x00, 0x00, 0x00}, // bfill h g sp 
	{0x7c67, &op_bfill,	  7,   6,  12, 0xff, 0x00, 0x00, 0x00}, // bfill h g db 
	{0x7d67, &op_bfill,	  7,   6,  13, 0xff, 0x00, 0x00, 0x00}, // bfill h g cb 
	{0x7e67, &op_bfill,	  7,   6,  14, 0xff, 0x00, 0x00, 0x00}, // bfill h g pi 
	{0x7f67, &op_bfill,	  7,   6,   8, 0xff, 0x00, 0x04, 0x00}, // bfill h g <literal> 
	{0x7077, &op_bfill,	  7,   7,   0, 0xff, 0x00, 0x00, 0x00}, // bfill h h a 
	{0x7177, &op_bfill,	  7,   7,   1, 0xff, 0x00, 0x00, 0x00}, // bfill h h b 
	{0x7277, &op_bfill,	  7,   7,   2, 0xff, 0x00, 0x00, 0x00}, // bfill h h c 
	{0x7377, &op_bfill,	  7,   7,   3, 0xff, 0x00, 0x00, 0x00}, // bfill h h d 
	{0x7477, &op_bfill,	  7,   7,   4, 0xff, 0x00, 0x00, 0x00}, // bfill h h e 
	{0x7577, &op_bfill,	  7,   7,   5, 0xff, 0x00, 0x00, 0x00}, // bfill h h f 
	{0x7677, &op_bfill,	  7,   7,   6, 0xff, 0x00, 0x00, 0x00}, // bfill h h g 
	{0x7777, &op_bfill,	  7,   7,   7, 0xff, 0x00, 0x00, 0x00}, // bfill h h h 
	{0x7877, &op_bfill,	  7,   7,   8, 0xff, 0x00, 0x00, 0x00}, // bfill h h pc 
	{0x7977, &op_bfill,	  7,   7,   9, 0xff, 0x00, 0x00, 0x00}, // bfill h h ra 
	{0x7a77, &op_bfill,	  7,   7,  10, 0xff, 0x00, 0x00, 0x00}, // bfill h h sb 
	{0x7b77, &op_bfill,	  7,   7,  11, 0xff, 0x00, 0x00, 0x00}, // bfill h h sp 
	{0x7c77, &op_bfill,	  7,   7,  12, 0xff, 0x00, 0x00, 0x00}, // bfill h h db 
	{0x7d77, &op_bfill,	  7,   7,  13, 0xff, 0x00, 0x00, 0x00}, // bfill h h cb 
	{0x7e77, &op_bfill,	  7,   7,  14, 0xff, 0x00, 0x00, 0x00}, // bfill h h pi 
	{0x7f77, &op_bfill,	  7,   7,   8, 0xff, 0x00, 0x04, 0x00}, // bfill h h <literal> 
	{0x7087, &op_bfill,	  7,   8,   0, 0xff, 0x00, 0x00, 0x00}, // bfill h pc a 
	{0x7187, &op_bfill,	  7,   8,   1, 0xff, 0x00, 0x00, 0x00}, // bfill h pc b 
	{0x7287, &op_bfill,	  7,   8,   2, 0xff, 0x00, 0x00, 0x00}, // bfill h pc c 
	{0x7387, &op_bfill,	  7,   8,   3, 0xff, 0x00, 0x00, 0x00}, // bfill h pc d 
	{0x7487, &op_bfill,	  7,   8,   4, 0xff, 0x00, 0x00, 0x00}, // bfill h pc e 
	{0x7587, &op_bfill,	  7,   8,   5, 0xff, 0x00, 0x00, 0x00}, // bfill h pc f 
	{0x7687, &op_bfill,	  7,   8,   6, 0xff, 0x00, 0x00, 0x00}, // bfill h pc g 
	{0x7787, &op_bfill,	  7,   8,   7, 0xff, 0x00, 0x00, 0x00}, // bfill h pc h 
	{0x7887, &op_bfill,	  7,   8,   8, 0xff, 0x00, 0x00, 0x00}, // bfill h pc pc 
	{0x7987, &op_bfill,	  7,   8,   9, 0xff, 0x00, 0x00, 0x00}, // bfill h pc ra 
	{0x7a87, &op_bfill,	  7,   8,  10, 0xff, 0x00, 0x00, 0x00}, // bfill h pc sb 
	{0x7b87, &op_bfill,	  7,   8,  11, 0xff, 0x00, 0x00, 0x00}, // bfill h pc sp 
	{0x7c87, &op_bfill,	  7,   8,  12, 0xff, 0x00, 0x00, 0x00}, // bfill h pc db 
	{0x7d87, &op_bfill,	  7,   8,  13, 0xff, 0x00, 0x00, 0x00}, // bfill h pc cb 
	{0x7e87, &op_bfill,	  7,   8,  14, 0xff, 0x00, 0x00, 0x00}, // bfill h pc pi 
	{0x7f87, &op_bfill,	  7,   8,   8, 0xff, 0x00, 0x04, 0x00}, // bfill h pc <literal> 
	{0x7097, &op_bfill,	  7,   9,   0, 0xff, 0x00, 0x00, 0x00}, // bfill h ra a 
	{0x7197, &op_bfill,	  7,   9,   1, 0xff, 0x00, 0x00, 0x00}, // bfill h ra b 
	{0x7297, &op_bfill,	  7,   9,   2, 0xff, 0x00, 0x00, 0x00}, // bfill h ra c 
	{0x7397, &op_bfill,	  7,   9,   3, 0xff, 0x00, 0x00, 0x00}, // bfill h ra d 
	{0x7497, &op_bfill,	  7,   9,   4, 0xff, 0x00, 0x00, 0x00}, // bfill h ra e 
	{0x7597, &op_bfill,	  7,   9,   5, 0xff, 0x00, 0x00, 0x00}, // bfill h ra f 
	{0x7697, &op_bfill,	  7,   9,   6, 0xff, 0x00, 0x00, 0x00}, // bfill h ra g 
	{0x7797, &op_bfill,	  7,   9,   7, 0xff, 0x00, 0x00, 0x00}, // bfill h ra h 
	{0x7897, &op_bfill,	  7,   9,   8, 0xff, 0x00, 0x00, 0x00}, // bfill h ra pc 
	{0x7997, &op_bfill,	  7,   9,   9, 0xff, 0x00, 0x00, 0x00}, // bfill h ra ra 
	{0x7a97, &op_bfill,	  7,   9,  10, 0xff, 0x00, 0x00, 0x00}, // bfill h ra sb 
	{0x7b97, &op_bfill,	  7,   9,  11, 0xff, 0x00, 0x00, 0x00}, // bfill h ra sp 
	{0x7c97, &op_bfill,	  7,   9,  12, 0xff, 0x00, 0x00, 0x00}, // bfill h ra db 
	{0x7d97, &op_bfill,	  7,   9,  13, 0xff, 0x00, 0x00, 0x00}, // bfill h ra cb 
	{0x7e97, &op_bfill,	  7,   9,  14, 0xff, 0x00, 0x00, 0x00}, // bfill h ra pi 
	{0x7f97, &op_bfill,	  7,   9,   8, 0xff, 0x00, 0x04, 0x00}, // bfill h ra <literal> 
	{0x70a7, &op_bfill,	  7,  10,   0, 0xff, 0x00, 0x00, 0x00}, // bfill h sb a 
	{0x71a7, &op_bfill,	  7,  10,   1, 0xff, 0x00, 0x00, 0x00}, // bfill h sb b 
	{0x72a7, &op_bfill,	  7,  10,   2, 0xff, 0x00, 0x00, 0x00}, // bfill h sb c 
	{0x73a7, &op_bfill,	  7,  10,   3, 0xff, 0x00, 0x00, 0x00}, // bfill h sb d 
	{0x74a7, &op_bfill,	  7,  10,   4, 0xff, 0x00, 0x00, 0x00}, // bfill h sb e 
	{0x75a7, &op_bfill,	  7,  10,   5, 0xff, 0x00, 0x00, 0x00}, // bfill h sb f 
	{0x76a7, &op_bfill,	  7,  10,   6, 0xff, 0x00, 0x00, 0x00}, // bfill h sb g 
	{0x77a7, &op_bfill,	  7,  10,   7, 0xff, 0x00, 0x00, 0x00}, // bfill h sb h 
	{0x78a7, &op_bfill,	  7,  10,   8, 0xff, 0x00, 0x00, 0x00}, // bfill h sb pc 
	{0x79a7, &op_bfill,	  7,  10,   9, 0xff, 0x00, 0x00, 0x00}, // bfill h sb ra 
	{0x7aa7, &op_bfill,	  7,  10,  10, 0xff, 0x00, 0x00, 0x00}, // bfill h sb sb 
	{0x7ba7, &op_bfill,	  7,  10,  11, 0xff, 0x00, 0x00, 0x00}, // bfill h sb sp 
	{0x7ca7, &op_bfill,	  7,  10,  12, 0xff, 0x00, 0x00, 0x00}, // bfill h sb db 
	{0x7da7, &op_bfill,	  7,  10,  13, 0xff, 0x00, 0x00, 0x00}, // bfill h sb cb 
	{0x7ea7, &op_bfill,	  7,  10,  14, 0xff, 0x00, 0x00, 0x00}, // bfill h sb pi 
	{0x7fa7, &op_bfill,	  7,  10,   8, 0xff, 0x00, 0x04, 0x00}, // bfill h sb <literal> 
	{0x70b7, &op_bfill,	  7,  11,   0, 0xff, 0x00, 0x00, 0x00}, // bfill h sp a 
	{0x71b7, &op_bfill,	  7,  11,   1, 0xff, 0x00, 0x00, 0x00}, // bfill h sp b 
	{0x72b7, &op_bfill,	  7,  11,   2, 0xff, 0x00, 0x00, 0x00}, // bfill h sp c 
	{0x73b7, &op_bfill,	  7,  11,   3, 0xff, 0x00, 0x00, 0x00}, // bfill h sp d 
	{0x74b7, &op_bfill,	  7,  11,   4, 0xff, 0x00, 0x00, 0x00}, // bfill h sp e 
	{0x75b7, &op_bfill,	  7,  11,   5, 0xff, 0x00, 0x00, 0x00}, // bfill h sp f 
	{0x76b7, &op_bfill,	  7,  11,   6, 0xff, 0x00, 0x00, 0x00}, // bfill h sp g 
	{0x77b7, &op_bfill,	  7,  11,   7, 0xff, 0x00, 0x00, 0x00}, // bfill h sp h 
	{0x78b7, &op_bfill,	  7,  11,   8, 0xff, 0x00, 0x00, 0x00}, // bfill h sp pc 
	{0x79b7, &op_bfill,	  7,  11,   9, 0xff, 0x00, 0x00, 0x00}, // bfill h sp ra 
	{0x7ab7, &op_bfill,	  7,  11,  10, 0xff, 0x00, 0x00, 0x00}, // bfill h sp sb 
	{0x7bb7, &op_bfill,	  7,  11,  11, 0xff, 0x00, 0x00, 0x00}, // bfill h sp sp 
	{0x7cb7, &op_bfill,	  7,  11,  12, 0xff, 0x00, 0x00, 0x00}, // bfill h sp db 
	{0x7db7, &op_bfill,	  7,  11,  13, 0xff, 0x00, 0x00, 0x00}, // bfill h sp cb 
	{0x7eb7, &op_bfill,	  7,  11,  14, 0xff, 0x00, 0x00, 0x00}, // bfill h sp pi 
	{0x7fb7, &op_bfill,	  7,  11,   8, 0xff, 0x00, 0x04, 0x00}, // bfill h sp <literal> 
	{0x70c7, &op_bfill,	  7,  12,   0, 0xff, 0x00, 0x00, 0x00}, // bfill h db a 
	{0x71c7, &op_bfill,	  7,  12,   1, 0xff, 0x00, 0x00, 0x00}, // bfill h db b 
	{0x72c7, &op_bfill,	  7,  12,   2, 0xff, 0x00, 0x00, 0x00}, // bfill h db c 
	{0x73c7, &op_bfill,	  7,  12,   3, 0xff, 0x00, 0x00, 0x00}, // bfill h db d 
	{0x74c7, &op_bfill,	  7,  12,   4, 0xff, 0x00, 0x00, 0x00}, // bfill h db e 
	{0x75c7, &op_bfill,	  7,  12,   5, 0xff, 0x00, 0x00, 0x00}, // bfill h db f 
	{0x76c7, &op_bfill,	  7,  12,   6, 0xff, 0x00, 0x00, 0x00}, // bfill h db g 
	{0x77c7, &op_bfill,	  7,  12,   7, 0xff, 0x00, 0x00, 0x00}, // bfill h db h 
	{0x78c7, &op_bfill,	  7,  12,   8, 0xff, 0x00, 0x00, 0x00}, // bfill h db pc 
	{0x79c7, &op_bfill,	  7,  12,   9, 0xff, 0x00, 0x00, 0x00}, // bfill h db ra 
	{0x7ac7, &op_bfill,	  7,  12,  10, 0xff, 0x00, 0x00, 0x00}, // bfill h db sb 
	{0x7bc7, &op_bfill,	  7,  12,  11, 0xff, 0x00, 0x00, 0x00}, // bfill h db sp 
	{0x7cc7, &op_bfill,	  7,  12,  12, 0xff, 0x00, 0x00, 0x00}, // bfill h db db 
	{0x7dc7, &op_bfill,	  7,  12,  13, 0xff, 0x00, 0x00, 0x00}, // bfill h db cb 
	{0x7ec7, &op_bfill,	  7,  12,  14, 0xff, 0x00, 0x00, 0x00}, // bfill h db pi 
	{0x7fc7, &op_bfill,	  7,  12,   8, 0xff, 0x00, 0x04, 0x00}, // bfill h db <literal> 
	{0x70d7, &op_bfill,	  7,  13,   0, 0xff, 0x00, 0x00, 0x00}, // bfill h cb a 
	{0x71d7, &op_bfill,	  7,  13,   1, 0xff, 0x00, 0x00, 0x00}, // bfill h cb b 
	{0x72d7, &op_bfill,	  7,  13,   2, 0xff, 0x00, 0x00, 0x00}, // bfill h cb c 
	{0x73d7, &op_bfill,	  7,  13,   3, 0xff, 0x00, 0x00, 0x00}, // bfill h cb d 
	{0x74d7, &op_bfill,	  7,  13,   4, 0xff, 0x00, 0x00, 0x00}, // bfill h cb e 
	{0x75d7, &op_bfill,	  7,  13,   5, 0xff, 0x00, 0x00, 0x00}, // bfill h cb f 
	{0x76d7, &op_bfill,	  7,  13,   6, 0xff, 0x00, 0x00, 0x00}, // bfill h cb g 
	{0x77d7, &op_bfill,	  7,  13,   7, 0xff, 0x00, 0x00, 0x00}, // bfill h cb h 
	{0x78d7, &op_bfill,	  7,  13,   8, 0xff, 0x00, 0x00, 0x00}, // bfill h cb pc 
	{0x79d7, &op_bfill,	  7,  13,   9, 0xff, 0x00, 0x00, 0x00}, // bfill h cb ra 
	{0x7ad7, &op_bfill,	  7,  13,  10, 0xff, 0x00, 0x00, 0x00}, // bfill h cb sb 
	{0x7bd7, &op_bfill,	  7,  13,  11, 0xff, 0x00, 0x00, 0x00}, // bfill h cb sp 
	{0x7cd7, &op_bfill,	  7,  13,  12, 0xff, 0x00, 0x00, 0x00}, // bfill h cb db 
	{0x7dd7, &op_bfill,	  7,  13,  13, 0xff, 0x00, 0x00, 0x00}, // bfill h cb cb 
	{0x7ed7, &op_bfill,	  7,  13,  14, 0xff, 0x00, 0x00, 0x00}, // bfill h cb pi 
	{0x7fd7, &op_bfill,	  7,  13,   8, 0xff, 0x00, 0x04, 0x00}, // bfill h cb <literal> 
	{0x70e7, &op_bfill,	  7,  14,   0, 0xff, 0x00, 0x00, 0x00}, // bfill h pi a 
	{0x71e7, &op_bfill,	  7,  14,   1, 0xff, 0x00, 0x00, 0x00}, // bfill h pi b 
	{0x72e7, &op_bfill,	  7,  14,   2, 0xff, 0x00, 0x00, 0x00}, // bfill h pi c 
	{0x73e7, &op_bfill,	  7,  14,   3, 0xff, 0x00, 0x00, 0x00}, // bfill h pi d 
	{0x74e7, &op_bfill,	  7,  14,   4, 0xff, 0x00, 0x00, 0x00}, // bfill h pi e 
	{0x75e7, &op_bfill,	  7,  14,   5, 0xff, 0x00, 0x00, 0x00}, // bfill h pi f 
	{0x76e7, &op_bfill,	  7,  14,   6, 0xff, 0x00, 0x00, 0x00}, // bfill h pi g 
	{0x77e7, &op_bfill,	  7,  14,   7, 0xff, 0x00, 0x00, 0x00}, // bfill h pi h 
	{0x78e7, &op_bfill,	  7,  14,   8, 0xff, 0x00, 0x00, 0x00}, // bfill h pi pc 
	{0x79e7, &op_bfill,	  7,  14,   9, 0xff, 0x00, 0x00, 0x00}, // bfill h pi ra 
	{0x7ae7, &op_bfill,	  7,  14,  10, 0xff, 0x00, 0x00, 0x00}, // bfill h pi sb 
	{0x7be7, &op_bfill,	  7,  14,  11, 0xff, 0x00, 0x00, 0x00}, // bfill h pi sp 
	{0x7ce7, &op_bfill,	  7,  14,  12, 0xff, 0x00, 0x00, 0x00}, // bfill h pi db 
	{0x7de7, &op_bfill,	  7,  14,  13, 0xff, 0x00, 0x00, 0x00}, // bfill h pi cb 
	{0x7ee7, &op_bfill,	  7,  14,  14, 0xff, 0x00, 0x00, 0x00}, // bfill h pi pi 
	{0x7fe7, &op_bfill,	  7,  14,   8, 0xff, 0x00, 0x04, 0x00}, // bfill h pi <literal> 
	{0x70f7, &op_bfill,	  7,  15,   0, 0xff, 0x00, 0x00, 0x00}, // bfill h status a 
	{0x71f7, &op_bfill,	  7,  15,   1, 0xff, 0x00, 0x00, 0x00}, // bfill h status b 
	{0x72f7, &op_bfill,	  7,  15,   2, 0xff, 0x00, 0x00, 0x00}, // bfill h status c 
	{0x73f7, &op_bfill,	  7,  15,   3, 0xff, 0x00, 0x00, 0x00}, // bfill h status d 
	{0x74f7, &op_bfill,	  7,  15,   4, 0xff, 0x00, 0x00, 0x00}, // bfill h status e 
	{0x75f7, &op_bfill,	  7,  15,   5, 0xff, 0x00, 0x00, 0x00}, // bfill h status f 
	{0x76f7, &op_bfill,	  7,  15,   6, 0xff, 0x00, 0x00, 0x00}, // bfill h status g 
	{0x77f7, &op_bfill,	  7,  15,   7, 0xff, 0x00, 0x00, 0x00}, // bfill h status h 
	{0x78f7, &op_bfill,	  7,  15,   8, 0xff, 0x00, 0x00, 0x00}, // bfill h status pc 
	{0x79f7, &op_bfill,	  7,  15,   9, 0xff, 0x00, 0x00, 0x00}, // bfill h status ra 
	{0x7af7, &op_bfill,	  7,  15,  10, 0xff, 0x00, 0x00, 0x00}, // bfill h status sb 
	{0x7bf7, &op_bfill,	  7,  15,  11, 0xff, 0x00, 0x00, 0x00}, // bfill h status sp 
	{0x7cf7, &op_bfill,	  7,  15,  12, 0xff, 0x00, 0x00, 0x00}, // bfill h status db 
	{0x7df7, &op_bfill,	  7,  15,  13, 0xff, 0x00, 0x00, 0x00}, // bfill h status cb 
	{0x7ef7, &op_bfill,	  7,  15,  14, 0xff, 0x00, 0x00, 0x00}, // bfill h status pi 
	{0x7ff7, &op_bfill,	  7,  15,   8, 0xff, 0x00, 0x04, 0x00}, // bfill h status <literal> 
	{0x7008, &op_bfill,	  8,   0,   0, 0xff, 0x00, 0x00, 0x00}, // bfill pc a a 
	{0x7108, &op_bfill,	  8,   0,   1, 0xff, 0x00, 0x00, 0x00}, // bfill pc a b 
	{0x7208, &op_bfill,	  8,   0,   2, 0xff, 0x00, 0x00, 0x00}, // bfill pc a c 
	{0x7308, &op_bfill,	  8,   0,   3, 0xff, 0x00, 0x00, 0x00}, // bfill pc a d 
	{0x7408, &op_bfill,	  8,   0,   4, 0xff, 0x00, 0x00, 0x00}, // bfill pc a e 
	{0x7508, &op_bfill,	  8,   0,   5, 0xff, 0x00, 0x00, 0x00}, // bfill pc a f 
	{0x7608, &op_bfill,	  8,   0,   6, 0xff, 0x00, 0x00, 0x00}, // bfill pc a g 
	{0x7708, &op_bfill,	  8,   0,   7, 0xff, 0x00, 0x00, 0x00}, // bfill pc a h 
	{0x7808, &op_bfill,	  8,   0,   8, 0xff, 0x00, 0x00, 0x00}, // bfill pc a pc 
	{0x7908, &op_bfill,	  8,   0,   9, 0xff, 0x00, 0x00, 0x00}, // bfill pc a ra 
	{0x7a08, &op_bfill,	  8,   0,  10, 0xff, 0x00, 0x00, 0x00}, // bfill pc a sb 
	{0x7b08, &op_bfill,	  8,   0,  11, 0xff, 0x00, 0x00, 0x00}, // bfill pc a sp 
	{0x7c08, &op_bfill,	  8,   0,  12, 0xff, 0x00, 0x00, 0x00}, // bfill pc a db 
	{0x7d08, &op_bfill,	  8,   0,  13, 0xff, 0x00, 0x00, 0x00}, // bfill pc a cb 
	{0x7e08, &op_bfill,	  8,   0,  14, 0xff, 0x00, 0x00, 0x00}, // bfill pc a pi 
	{0x7f08, &op_bfill,	  8,   0,   8, 0xff, 0x00, 0x04, 0x00}, // bfill pc a <literal> 
	{0x7018, &op_bfill,	  8,   1,   0, 0xff, 0x00, 0x00, 0x00}, // bfill pc b a 
	{0x7118, &op_bfill,	  8,   1,   1, 0xff, 0x00, 0x00, 0x00}, // bfill pc b b 
	{0x7218, &op_bfill,	  8,   1,   2, 0xff, 0x00, 0x00, 0x00}, // bfill pc b c 
	{0x7318, &op_bfill,	  8,   1,   3, 0xff, 0x00, 0x00, 0x00}, // bfill pc b d 
	{0x7418, &op_bfill,	  8,   1,   4, 0xff, 0x00, 0x00, 0x00}, // bfill pc b e 
	{0x7518, &op_bfill,	  8,   1,   5, 0xff, 0x00, 0x00, 0x00}, // bfill pc b f 
	{0x7618, &op_bfill,	  8,   1,   6, 0xff, 0x00, 0x00, 0x00}, // bfill pc b g 
	{0x7718, &op_bfill,	  8,   1,   7, 0xff, 0x00, 0x00, 0x00}, // bfill pc b h 
	{0x7818, &op_bfill,	  8,   1,   8, 0xff, 0x00, 0x00, 0x00}, // bfill pc b pc 
	{0x7918, &op_bfill,	  8,   1,   9, 0xff, 0x00, 0x00, 0x00}, // bfill pc b ra 
	{0x7a18, &op_bfill,	  8,   1,  10, 0xff, 0x00, 0x00, 0x00}, // bfill pc b sb 
	{0x7b18, &op_bfill,	  8,   1,  11, 0xff, 0x00, 0x00, 0x00}, // bfill pc b sp 
	{0x7c18, &op_bfill,	  8,   1,  12, 0xff, 0x00, 0x00, 0x00}, // bfill pc b db 
	{0x7d18, &op_bfill,	  8,   1,  13, 0xff, 0x00, 0x00, 0x00}, // bfill pc b cb 
	{0x7e18, &op_bfill,	  8,   1,  14, 0xff, 0x00, 0x00, 0x00}, // bfill pc b pi 
	{0x7f18, &op_bfill,	  8,   1,   8, 0xff, 0x00, 0x04, 0x00}, // bfill pc b <literal> 
	{0x7028, &op_bfill,	  8,   2,   0, 0xff, 0x00, 0x00, 0x00}, // bfill pc c a 
	{0x7128, &op_bfill,	  8,   2,   1, 0xff, 0x00, 0x00, 0x00}, // bfill pc c b 
	{0x7228, &op_bfill,	  8,   2,   2, 0xff, 0x00, 0x00, 0x00}, // bfill pc c c 
	{0x7328, &op_bfill,	  8,   2,   3, 0xff, 0x00, 0x00, 0x00}, // bfill pc c d 
	{0x7428, &op_bfill,	  8,   2,   4, 0xff, 0x00, 0x00, 0x00}, // bfill pc c e 
	{0x7528, &op_bfill,	  8,   2,   5, 0xff, 0x00, 0x00, 0x00}, // bfill pc c f 
	{0x7628, &op_bfill,	  8,   2,   6, 0xff, 0x00, 0x00, 0x00}, // bfill pc c g 
	{0x7728, &op_bfill,	  8,   2,   7, 0xff, 0x00, 0x00, 0x00}, // bfill pc c h 
	{0x7828, &op_bfill,	  8,   2,   8, 0xff, 0x00, 0x00, 0x00}, // bfill pc c pc 
	{0x7928, &op_bfill,	  8,   2,   9, 0xff, 0x00, 0x00, 0x00}, // bfill pc c ra 
	{0x7a28, &op_bfill,	  8,   2,  10, 0xff, 0x00, 0x00, 0x00}, // bfill pc c sb 
	{0x7b28, &op_bfill,	  8,   2,  11, 0xff, 0x00, 0x00, 0x00}, // bfill pc c sp 
	{0x7c28, &op_bfill,	  8,   2,  12, 0xff, 0x00, 0x00, 0x00}, // bfill pc c db 
	{0x7d28, &op_bfill,	  8,   2,  13, 0xff, 0x00, 0x00, 0x00}, // bfill pc c cb 
	{0x7e28, &op_bfill,	  8,   2,  14, 0xff, 0x00, 0x00, 0x00}, // bfill pc c pi 
	{0x7f28, &op_bfill,	  8,   2,   8, 0xff, 0x00, 0x04, 0x00}, // bfill pc c <literal> 
	{0x7038, &op_bfill,	  8,   3,   0, 0xff, 0x00, 0x00, 0x00}, // bfill pc d a 
	{0x7138, &op_bfill,	  8,   3,   1, 0xff, 0x00, 0x00, 0x00}, // bfill pc d b 
	{0x7238, &op_bfill,	  8,   3,   2, 0xff, 0x00, 0x00, 0x00}, // bfill pc d c 
	{0x7338, &op_bfill,	  8,   3,   3, 0xff, 0x00, 0x00, 0x00}, // bfill pc d d 
	{0x7438, &op_bfill,	  8,   3,   4, 0xff, 0x00, 0x00, 0x00}, // bfill pc d e 
	{0x7538, &op_bfill,	  8,   3,   5, 0xff, 0x00, 0x00, 0x00}, // bfill pc d f 
	{0x7638, &op_bfill,	  8,   3,   6, 0xff, 0x00, 0x00, 0x00}, // bfill pc d g 
	{0x7738, &op_bfill,	  8,   3,   7, 0xff, 0x00, 0x00, 0x00}, // bfill pc d h 
	{0x7838, &op_bfill,	  8,   3,   8, 0xff, 0x00, 0x00, 0x00}, // bfill pc d pc 
	{0x7938, &op_bfill,	  8,   3,   9, 0xff, 0x00, 0x00, 0x00}, // bfill pc d ra 
	{0x7a38, &op_bfill,	  8,   3,  10, 0xff, 0x00, 0x00, 0x00}, // bfill pc d sb 
	{0x7b38, &op_bfill,	  8,   3,  11, 0xff, 0x00, 0x00, 0x00}, // bfill pc d sp 
	{0x7c38, &op_bfill,	  8,   3,  12, 0xff, 0x00, 0x00, 0x00}, // bfill pc d db 
	{0x7d38, &op_bfill,	  8,   3,  13, 0xff, 0x00, 0x00, 0x00}, // bfill pc d cb 
	{0x7e38, &op_bfill,	  8,   3,  14, 0xff, 0x00, 0x00, 0x00}, // bfill pc d pi 
	{0x7f38, &op_bfill,	  8,   3,   8, 0xff, 0x00, 0x04, 0x00}, // bfill pc d <literal> 
	{0x7048, &op_bfill,	  8,   4,   0, 0xff, 0x00, 0x00, 0x00}, // bfill pc e a 
	{0x7148, &op_bfill,	  8,   4,   1, 0xff, 0x00, 0x00, 0x00}, // bfill pc e b 
	{0x7248, &op_bfill,	  8,   4,   2, 0xff, 0x00, 0x00, 0x00}, // bfill pc e c 
	{0x7348, &op_bfill,	  8,   4,   3, 0xff, 0x00, 0x00, 0x00}, // bfill pc e d 
	{0x7448, &op_bfill,	  8,   4,   4, 0xff, 0x00, 0x00, 0x00}, // bfill pc e e 
	{0x7548, &op_bfill,	  8,   4,   5, 0xff, 0x00, 0x00, 0x00}, // bfill pc e f 
	{0x7648, &op_bfill,	  8,   4,   6, 0xff, 0x00, 0x00, 0x00}, // bfill pc e g 
	{0x7748, &op_bfill,	  8,   4,   7, 0xff, 0x00, 0x00, 0x00}, // bfill pc e h 
	{0x7848, &op_bfill,	  8,   4,   8, 0xff, 0x00, 0x00, 0x00}, // bfill pc e pc 
	{0x7948, &op_bfill,	  8,   4,   9, 0xff, 0x00, 0x00, 0x00}, // bfill pc e ra 
	{0x7a48, &op_bfill,	  8,   4,  10, 0xff, 0x00, 0x00, 0x00}, // bfill pc e sb 
	{0x7b48, &op_bfill,	  8,   4,  11, 0xff, 0x00, 0x00, 0x00}, // bfill pc e sp 
	{0x7c48, &op_bfill,	  8,   4,  12, 0xff, 0x00, 0x00, 0x00}, // bfill pc e db 
	{0x7d48, &op_bfill,	  8,   4,  13, 0xff, 0x00, 0x00, 0x00}, // bfill pc e cb 
	{0x7e48, &op_bfill,	  8,   4,  14, 0xff, 0x00, 0x00, 0x00}, // bfill pc e pi 
	{0x7f48, &op_bfill,	  8,   4,   8, 0xff, 0x00, 0x04, 0x00}, // bfill pc e <literal> 
	{0x7058, &op_bfill,	  8,   5,   0, 0xff, 0x00, 0x00, 0x00}, // bfill pc f a 
	{0x7158, &op_bfill,	  8,   5,   1, 0xff, 0x00, 0x00, 0x00}, // bfill pc f b 
	{0x7258, &op_bfill,	  8,   5,   2, 0xff, 0x00, 0x00, 0x00}, // bfill pc f c 
	{0x7358, &op_bfill,	  8,   5,   3, 0xff, 0x00, 0x00, 0x00}, // bfill pc f d 
	{0x7458, &op_bfill,	  8,   5,   4, 0xff, 0x00, 0x00, 0x00}, // bfill pc f e 
	{0x7558, &op_bfill,	  8,   5,   5, 0xff, 0x00, 0x00, 0x00}, // bfill pc f f 
	{0x7658, &op_bfill,	  8,   5,   6, 0xff, 0x00, 0x00, 0x00}, // bfill pc f g 
	{0x7758, &op_bfill,	  8,   5,   7, 0xff, 0x00, 0x00, 0x00}, // bfill pc f h 
	{0x7858, &op_bfill,	  8,   5,   8, 0xff, 0x00, 0x00, 0x00}, // bfill pc f pc 
	{0x7958, &op_bfill,	  8,   5,   9, 0xff, 0x00, 0x00, 0x00}, // bfill pc f ra 
	{0x7a58, &op_bfill,	  8,   5,  10, 0xff, 0x00, 0x00, 0x00}, // bfill pc f sb 
	{0x7b58, &op_bfill,	  8,   5,  11, 0xff, 0x00, 0x00, 0x00}, // bfill pc f sp 
	{0x7c58, &op_bfill,	  8,   5,  12, 0xff, 0x00, 0x00, 0x00}, // bfill pc f db 
	{0x7d58, &op_bfill,	  8,   5,  13, 0xff, 0x00, 0x00, 0x00}, // bfill pc f cb 
	{0x7e58, &op_bfill,	  8,   5,  14, 0xff, 0x00, 0x00, 0x00}, // bfill pc f pi 
	{0x7f58, &op_bfill,	  8,   5,   8, 0xff, 0x00, 0x04, 0x00}, // bfill pc f <literal> 
	{0x7068, &op_bfill,	  8,   6,   0, 0xff, 0x00, 0x00, 0x00}, // bfill pc g a 
	{0x7168, &op_bfill,	  8,   6,   1, 0xff, 0x00, 0x00, 0x00}, // bfill pc g b 
	{0x7268, &op_bfill,	  8,   6,   2, 0xff, 0x00, 0x00, 0x00}, // bfill pc g c 
	{0x7368, &op_bfill,	  8,   6,   3, 0xff, 0x00, 0x00, 0x00}, // bfill pc g d 
	{0x7468, &op_bfill,	  8,   6,   4, 0xff, 0x00, 0x00, 0x00}, // bfill pc g e 
	{0x7568, &op_bfill,	  8,   6,   5, 0xff, 0x00, 0x00, 0x00}, // bfill pc g f 
	{0x7668, &op_bfill,	  8,   6,   6, 0xff, 0x00, 0x00, 0x00}, // bfill pc g g 
	{0x7768, &op_bfill,	  8,   6,   7, 0xff, 0x00, 0x00, 0x00}, // bfill pc g h 
	{0x7868, &op_bfill,	  8,   6,   8, 0xff, 0x00, 0x00, 0x00}, // bfill pc g pc 
	{0x7968, &op_bfill,	  8,   6,   9, 0xff, 0x00, 0x00, 0x00}, // bfill pc g ra 
	{0x7a68, &op_bfill,	  8,   6,  10, 0xff, 0x00, 0x00, 0x00}, // bfill pc g sb 
	{0x7b68, &op_bfill,	  8,   6,  11, 0xff, 0x00, 0x00, 0x00}, // bfill pc g sp 
	{0x7c68, &op_bfill,	  8,   6,  12, 0xff, 0x00, 0x00, 0x00}, // bfill pc g db 
	{0x7d68, &op_bfill,	  8,   6,  13, 0xff, 0x00, 0x00, 0x00}, // bfill pc g cb 
	{0x7e68, &op_bfill,	  8,   6,  14, 0xff, 0x00, 0x00, 0x00}, // bfill pc g pi 
	{0x7f68, &op_bfill,	  8,   6,   8, 0xff, 0x00, 0x04, 0x00}, // bfill pc g <literal> 
	{0x7078, &op_bfill,	  8,   7,   0, 0xff, 0x00, 0x00, 0x00}, // bfill pc h a 
	{0x7178, &op_bfill,	  8,   7,   1, 0xff, 0x00, 0x00, 0x00}, // bfill pc h b 
	{0x7278, &op_bfill,	  8,   7,   2, 0xff, 0x00, 0x00, 0x00}, // bfill pc h c 
	{0x7378, &op_bfill,	  8,   7,   3, 0xff, 0x00, 0x00, 0x00}, // bfill pc h d 
	{0x7478, &op_bfill,	  8,   7,   4, 0xff, 0x00, 0x00, 0x00}, // bfill pc h e 
	{0x7578, &op_bfill,	  8,   7,   5, 0xff, 0x00, 0x00, 0x00}, // bfill pc h f 
	{0x7678, &op_bfill,	  8,   7,   6, 0xff, 0x00, 0x00, 0x00}, // bfill pc h g 
	{0x7778, &op_bfill,	  8,   7,   7, 0xff, 0x00, 0x00, 0x00}, // bfill pc h h 
	{0x7878, &op_bfill,	  8,   7,   8, 0xff, 0x00, 0x00, 0x00}, // bfill pc h pc 
	{0x7978, &op_bfill,	  8,   7,   9, 0xff, 0x00, 0x00, 0x00}, // bfill pc h ra 
	{0x7a78, &op_bfill,	  8,   7,  10, 0xff, 0x00, 0x00, 0x00}, // bfill pc h sb 
	{0x7b78, &op_bfill,	  8,   7,  11, 0xff, 0x00, 0x00, 0x00}, // bfill pc h sp 
	{0x7c78, &op_bfill,	  8,   7,  12, 0xff, 0x00, 0x00, 0x00}, // bfill pc h db 
	{0x7d78, &op_bfill,	  8,   7,  13, 0xff, 0x00, 0x00, 0x00}, // bfill pc h cb 
	{0x7e78, &op_bfill,	  8,   7,  14, 0xff, 0x00, 0x00, 0x00}, // bfill pc h pi 
	{0x7f78, &op_bfill,	  8,   7,   8, 0xff, 0x00, 0x04, 0x00}, // bfill pc h <literal> 
	{0x7088, &op_bfill,	  8,   8,   0, 0xff, 0x00, 0x00, 0x00}, // bfill pc pc a 
	{0x7188, &op_bfill,	  8,   8,   1, 0xff, 0x00, 0x00, 0x00}, // bfill pc pc b 
	{0x7288, &op_bfill,	  8,   8,   2, 0xff, 0x00, 0x00, 0x00}, // bfill pc pc c 
	{0x7388, &op_bfill,	  8,   8,   3, 0xff, 0x00, 0x00, 0x00}, // bfill pc pc d 
	{0x7488, &op_bfill,	  8,   8,   4, 0xff, 0x00, 0x00, 0x00}, // bfill pc pc e 
	{0x7588, &op_bfill,	  8,   8,   5, 0xff, 0x00, 0x00, 0x00}, // bfill pc pc f 
	{0x7688, &op_bfill,	  8,   8,   6, 0xff, 0x00, 0x00, 0x00}, // bfill pc pc g 
	{0x7788, &op_bfill,	  8,   8,   7, 0xff, 0x00, 0x00, 0x00}, // bfill pc pc h 
	{0x7888, &op_bfill,	  8,   8,   8, 0xff, 0x00, 0x00, 0x00}, // bfill pc pc pc 
	{0x7988, &op_bfill,	  8,   8,   9, 0xff, 0x00, 0x00, 0x00}, // bfill pc pc ra 
	{0x7a88, &op_bfill,	  8,   8,  10, 0xff, 0x00, 0x00, 0x00}, // bfill pc pc sb 
	{0x7b88, &op_bfill,	  8,   8,  11, 0xff, 0x00, 0x00, 0x00}, // bfill pc pc sp 
	{0x7c88, &op_bfill,	  8,   8,  12, 0xff, 0x00, 0x00, 0x00}, // bfill pc pc db 
	{0x7d88, &op_bfill,	  8,   8,  13, 0xff, 0x00, 0x00, 0x00}, // bfill pc pc cb 
	{0x7e88, &op_bfill,	  8,   8,  14, 0xff, 0x00, 0x00, 0x00}, // bfill pc pc pi 
	{0x7f88, &op_bfill,	  8,   8,   8, 0xff, 0x00, 0x04, 0x00}, // bfill pc pc <literal> 
	{0x7098, &op_bfill,	  8,   9,   0, 0xff, 0x00, 0x00, 0x00}, // bfill pc ra a 
	{0x7198, &op_bfill,	  8,   9,   1, 0xff, 0x00, 0x00, 0x00}, // bfill pc ra b 
	{0x7298, &op_bfill,	  8,   9,   2, 0xff, 0x00, 0x00, 0x00}, // bfill pc ra c 
	{0x7398, &op_bfill,	  8,   9,   3, 0xff, 0x00, 0x00, 0x00}, // bfill pc ra d 
	{0x7498, &op_bfill,	  8,   9,   4, 0xff, 0x00, 0x00, 0x00}, // bfill pc ra e 
	{0x7598, &op_bfill,	  8,   9,   5, 0xff, 0x00, 0x00, 0x00}, // bfill pc ra f 
	{0x7698, &op_bfill,	  8,   9,   6, 0xff, 0x00, 0x00, 0x00}, // bfill pc ra g 
	{0x7798, &op_bfill,	  8,   9,   7, 0xff, 0x00, 0x00, 0x00}, // bfill pc ra h 
	{0x7898, &op_bfill,	  8,   9,   8, 0xff, 0x00, 0x00, 0x00}, // bfill pc ra pc 
	{0x7998, &op_bfill,	  8,   9,   9, 0xff, 0x00, 0x00, 0x00}, // bfill pc ra ra 
	{0x7a98, &op_bfill,	  8,   9,  10, 0xff, 0x00, 0x00, 0x00}, // bfill pc ra sb 
	{0x7b98, &op_bfill,	  8,   9,  11, 0xff, 0x00, 0x00, 0x00}, // bfill pc ra sp 
	{0x7c98, &op_bfill,	  8,   9,  12, 0xff, 0x00, 0x00, 0x00}, // bfill pc ra db 
	{0x7d98, &op_bfill,	  8,   9,  13, 0xff, 0x00, 0x00, 0x00}, // bfill pc ra cb 
	{0x7e98, &op_bfill,	  8,   9,  14, 0xff, 0x00, 0x00, 0x00}, // bfill pc ra pi 
	{0x7f98, &op_bfill,	  8,   9,   8, 0xff, 0x00, 0x04, 0x00}, // bfill pc ra <literal> 
	{0x70a8, &op_bfill,	  8,  10,   0, 0xff, 0x00, 0x00, 0x00}, // bfill pc sb a 
	{0x71a8, &op_bfill,	  8,  10,   1, 0xff, 0x00, 0x00, 0x00}, // bfill pc sb b 
	{0x72a8, &op_bfill,	  8,  10,   2, 0xff, 0x00, 0x00, 0x00}, // bfill pc sb c 
	{0x73a8, &op_bfill,	  8,  10,   3, 0xff, 0x00, 0x00, 0x00}, // bfill pc sb d 
	{0x74a8, &op_bfill,	  8,  10,   4, 0xff, 0x00, 0x00, 0x00}, // bfill pc sb e 
	{0x75a8, &op_bfill,	  8,  10,   5, 0xff, 0x00, 0x00, 0x00}, // bfill pc sb f 
	{0x76a8, &op_bfill,	  8,  10,   6, 0xff, 0x00, 0x00, 0x00}, // bfill pc sb g 
	{0x77a8, &op_bfill,	  8,  10,   7, 0xff, 0x00, 0x00, 0x00}, // bfill pc sb h 
	{0x78a8, &op_bfill,	  8,  10,   8, 0xff, 0x00, 0x00, 0x00}, // bfill pc sb pc 
	{0x79a8, &op_bfill,	  8,  10,   9, 0xff, 0x00, 0x00, 0x00}, // bfill pc sb ra 
	{0x7aa8, &op_bfill,	  8,  10,  10, 0xff, 0x00, 0x00, 0x00}, // bfill pc sb sb 
	{0x7ba8, &op_bfill,	  8,  10,  11, 0xff, 0x00, 0x00, 0x00}, // bfill pc sb sp 
	{0x7ca8, &op_bfill,	  8,  10,  12, 0xff, 0x00, 0x00, 0x00}, // bfill pc sb db 
	{0x7da8, &op_bfill,	  8,  10,  13, 0xff, 0x00, 0x00, 0x00}, // bfill pc sb cb 
	{0x7ea8, &op_bfill,	  8,  10,  14, 0xff, 0x00, 0x00, 0x00}, // bfill pc sb pi 
	{0x7fa8, &op_bfill,	  8,  10,   8, 0xff, 0x00, 0x04, 0x00}, // bfill pc sb <literal> 
	{0x70b8, &op_bfill,	  8,  11,   0, 0xff, 0x00, 0x00, 0x00}, // bfill pc sp a 
	{0x71b8, &op_bfill,	  8,  11,   1, 0xff, 0x00, 0x00, 0x00}, // bfill pc sp b 
	{0x72b8, &op_bfill,	  8,  11,   2, 0xff, 0x00, 0x00, 0x00}, // bfill pc sp c 
	{0x73b8, &op_bfill,	  8,  11,   3, 0xff, 0x00, 0x00, 0x00}, // bfill pc sp d 
	{0x74b8, &op_bfill,	  8,  11,   4, 0xff, 0x00, 0x00, 0x00}, // bfill pc sp e 
	{0x75b8, &op_bfill,	  8,  11,   5, 0xff, 0x00, 0x00, 0x00}, // bfill pc sp f 
	{0x76b8, &op_bfill,	  8,  11,   6, 0xff, 0x00, 0x00, 0x00}, // bfill pc sp g 
	{0x77b8, &op_bfill,	  8,  11,   7, 0xff, 0x00, 0x00, 0x00}, // bfill pc sp h 
	{0x78b8, &op_bfill,	  8,  11,   8, 0xff, 0x00, 0x00, 0x00}, // bfill pc sp pc 
	{0x79b8, &op_bfill,	  8,  11,   9, 0xff, 0x00, 0x00, 0x00}, // bfill pc sp ra 
	{0x7ab8, &op_bfill,	  8,  11,  10, 0xff, 0x00, 0x00, 0x00}, // bfill pc sp sb 
	{0x7bb8, &op_bfill,	  8,  11,  11, 0xff, 0x00, 0x00, 0x00}, // bfill pc sp sp 
	{0x7cb8, &op_bfill,	  8,  11,  12, 0xff, 0x00, 0x00, 0x00}, // bfill pc sp db 
	{0x7db8, &op_bfill,	  8,  11,  13, 0xff, 0x00, 0x00, 0x00}, // bfill pc sp cb 
	{0x7eb8, &op_bfill,	  8,  11,  14, 0xff, 0x00, 0x00, 0x00}, // bfill pc sp pi 
	{0x7fb8, &op_bfill,	  8,  11,   8, 0xff, 0x00, 0x04, 0x00}, // bfill pc sp <literal> 
	{0x70c8, &op_bfill,	  8,  12,   0, 0xff, 0x00, 0x00, 0x00}, // bfill pc db a 
	{0x71c8, &op_bfill,	  8,  12,   1, 0xff, 0x00, 0x00, 0x00}, // bfill pc db b 
	{0x72c8, &op_bfill,	  8,  12,   2, 0xff, 0x00, 0x00, 0x00}, // bfill pc db c 
	{0x73c8, &op_bfill,	  8,  12,   3, 0xff, 0x00, 0x00, 0x00}, // bfill pc db d 
	{0x74c8, &op_bfill,	  8,  12,   4, 0xff, 0x00, 0x00, 0x00}, // bfill pc db e 
	{0x75c8, &op_bfill,	  8,  12,   5, 0xff, 0x00, 0x00, 0x00}, // bfill pc db f 
	{0x76c8, &op_bfill,	  8,  12,   6, 0xff, 0x00, 0x00, 0x00}, // bfill pc db g 
	{0x77c8, &op_bfill,	  8,  12,   7, 0xff, 0x00, 0x00, 0x00}, // bfill pc db h 
	{0x78c8, &op_bfill,	  8,  12,   8, 0xff, 0x00, 0x00, 0x00}, // bfill pc db pc 
	{0x79c8, &op_bfill,	  8,  12,   9, 0xff, 0x00, 0x00, 0x00}, // bfill pc db ra 
	{0x7ac8, &op_bfill,	  8,  12,  10, 0xff, 0x00, 0x00, 0x00}, // bfill pc db sb 
	{0x7bc8, &op_bfill,	  8,  12,  11, 0xff, 0x00, 0x00, 0x00}, // bfill pc db sp 
	{0x7cc8, &op_bfill,	  8,  12,  12, 0xff, 0x00, 0x00, 0x00}, // bfill pc db db 
	{0x7dc8, &op_bfill,	  8,  12,  13, 0xff, 0x00, 0x00, 0x00}, // bfill pc db cb 
	{0x7ec8, &op_bfill,	  8,  12,  14, 0xff, 0x00, 0x00, 0x00}, // bfill pc db pi 
	{0x7fc8, &op_bfill,	  8,  12,   8, 0xff, 0x00, 0x04, 0x00}, // bfill pc db <literal> 
	{0x70d8, &op_bfill,	  8,  13,   0, 0xff, 0x00, 0x00, 0x00}, // bfill pc cb a 
	{0x71d8, &op_bfill,	  8,  13,   1, 0xff, 0x00, 0x00, 0x00}, // bfill pc cb b 
	{0x72d8, &op_bfill,	  8,  13,   2, 0xff, 0x00, 0x00, 0x00}, // bfill pc cb c 
	{0x73d8, &op_bfill,	  8,  13,   3, 0xff, 0x00, 0x00, 0x00}, // bfill pc cb d 
	{0x74d8, &op_bfill,	  8,  13,   4, 0xff, 0x00, 0x00, 0x00}, // bfill pc cb e 
	{0x75d8, &op_bfill,	  8,  13,   5, 0xff, 0x00, 0x00, 0x00}, // bfill pc cb f 
	{0x76d8, &op_bfill,	  8,  13,   6, 0xff, 0x00, 0x00, 0x00}, // bfill pc cb g 
	{0x77d8, &op_bfill,	  8,  13,   7, 0xff, 0x00, 0x00, 0x00}, // bfill pc cb h 
	{0x78d8, &op_bfill,	  8,  13,   8, 0xff, 0x00, 0x00, 0x00}, // bfill pc cb pc 
	{0x79d8, &op_bfill,	  8,  13,   9, 0xff, 0x00, 0x00, 0x00}, // bfill pc cb ra 
	{0x7ad8, &op_bfill,	  8,  13,  10, 0xff, 0x00, 0x00, 0x00}, // bfill pc cb sb 
	{0x7bd8, &op_bfill,	  8,  13,  11, 0xff, 0x00, 0x00, 0x00}, // bfill pc cb sp 
	{0x7cd8, &op_bfill,	  8,  13,  12, 0xff, 0x00, 0x00, 0x00}, // bfill pc cb db 
	{0x7dd8, &op_bfill,	  8,  13,  13, 0xff, 0x00, 0x00, 0x00}, // bfill pc cb cb 
	{0x7ed8, &op_bfill,	  8,  13,  14, 0xff, 0x00, 0x00, 0x00}, // bfill pc cb pi 
	{0x7fd8, &op_bfill,	  8,  13,   8, 0xff, 0x00, 0x04, 0x00}, // bfill pc cb <literal> 
	{0x70e8, &op_bfill,	  8,  14,   0, 0xff, 0x00, 0x00, 0x00}, // bfill pc pi a 
	{0x71e8, &op_bfill,	  8,  14,   1, 0xff, 0x00, 0x00, 0x00}, // bfill pc pi b 
	{0x72e8, &op_bfill,	  8,  14,   2, 0xff, 0x00, 0x00, 0x00}, // bfill pc pi c 
	{0x73e8, &op_bfill,	  8,  14,   3, 0xff, 0x00, 0x00, 0x00}, // bfill pc pi d 
	{0x74e8, &op_bfill,	  8,  14,   4, 0xff, 0x00, 0x00, 0x00}, // bfill pc pi e 
	{0x75e8, &op_bfill,	  8,  14,   5, 0xff, 0x00, 0x00, 0x00}, // bfill pc pi f 
	{0x76e8, &op_bfill,	  8,  14,   6, 0xff, 0x00, 0x00, 0x00}, // bfill pc pi g 
	{0x77e8, &op_bfill,	  8,  14,   7, 0xff, 0x00, 0x00, 0x00}, // bfill pc pi h 
	{0x78e8, &op_bfill,	  8,  14,   8, 0xff, 0x00, 0x00, 0x00}, // bfill pc pi pc 
	{0x79e8, &op_bfill,	  8,  14,   9, 0xff, 0x00, 0x00, 0x00}, // bfill pc pi ra 
	{0x7ae8, &op_bfill,	  8,  14,  10, 0xff, 0x00, 0x00, 0x00}, // bfill pc pi sb 
	{0x7be8, &op_bfill,	  8,  14,  11, 0xff, 0x00, 0x00, 0x00}, // bfill pc pi sp 
	{0x7ce8, &op_bfill,	  8,  14,  12, 0xff, 0x00, 0x00, 0x00}, // bfill pc pi db 
	{0x7de8, &op_bfill,	  8,  14,  13, 0xff, 0x00, 0x00, 0x00}, // bfill pc pi cb 
	{0x7ee8, &op_bfill,	  8,  14,  14, 0xff, 0x00, 0x00, 0x00}, // bfill pc pi pi 
	{0x7fe8, &op_bfill,	  8,  14,   8, 0xff, 0x00, 0x04, 0x00}, // bfill pc pi <literal> 
	{0x70f8, &op_bfill,	  8,  15,   0, 0xff, 0x00, 0x00, 0x00}, // bfill pc status a 
	{0x71f8, &op_bfill,	  8,  15,   1, 0xff, 0x00, 0x00, 0x00}, // bfill pc status b 
	{0x72f8, &op_bfill,	  8,  15,   2, 0xff, 0x00, 0x00, 0x00}, // bfill pc status c 
	{0x73f8, &op_bfill,	  8,  15,   3, 0xff, 0x00, 0x00, 0x00}, // bfill pc status d 
	{0x74f8, &op_bfill,	  8,  15,   4, 0xff, 0x00, 0x00, 0x00}, // bfill pc status e 
	{0x75f8, &op_bfill,	  8,  15,   5, 0xff, 0x00, 0x00, 0x00}, // bfill pc status f 
	{0x76f8, &op_bfill,	  8,  15,   6, 0xff, 0x00, 0x00, 0x00}, // bfill pc status g 
	{0x77f8, &op_bfill,	  8,  15,   7, 0xff, 0x00, 0x00, 0x00}, // bfill pc status h 
	{0x78f8, &op_bfill,	  8,  15,   8, 0xff, 0x00, 0x00, 0x00}, // bfill pc status pc 
	{0x79f8, &op_bfill,	  8,  15,   9, 0xff, 0x00, 0x00, 0x00}, // bfill pc status ra 
	{0x7af8, &op_bfill,	  8,  15,  10, 0xff, 0x00, 0x00, 0x00}, // bfill pc status sb 
	{0x7bf8, &op_bfill,	  8,  15,  11, 0xff, 0x00, 0x00, 0x00}, // bfill pc status sp 
	{0x7cf8, &op_bfill,	  8,  15,  12, 0xff, 0x00, 0x00, 0x00}, // bfill pc status db 
	{0x7df8, &op_bfill,	  8,  15,  13, 0xff, 0x00, 0x00, 0x00}, // bfill pc status cb 
	{0x7ef8, &op_bfill,	  8,  15,  14, 0xff, 0x00, 0x00, 0x00}, // bfill pc status pi 
	{0x7ff8, &op_bfill,	  8,  15,   8, 0xff, 0x00, 0x04, 0x00}, // bfill pc status <literal> 
	{0x7009, &op_bfill,	  9,   0,   0, 0xff, 0x00, 0x00, 0x00}, // bfill ra a a 
	{0x7109, &op_bfill,	  9,   0,   1, 0xff, 0x00, 0x00, 0x00}, // bfill ra a b 
	{0x7209, &op_bfill,	  9,   0,   2, 0xff, 0x00, 0x00, 0x00}, // bfill ra a c 
	{0x7309, &op_bfill,	  9,   0,   3, 0xff, 0x00, 0x00, 0x00}, // bfill ra a d 
	{0x7409, &op_bfill,	  9,   0,   4, 0xff, 0x00, 0x00, 0x00}, // bfill ra a e 
	{0x7509, &op_bfill,	  9,   0,   5, 0xff, 0x00, 0x00, 0x00}, // bfill ra a f 
	{0x7609, &op_bfill,	  9,   0,   6, 0xff, 0x00, 0x00, 0x00}, // bfill ra a g 
	{0x7709, &op_bfill,	  9,   0,   7, 0xff, 0x00, 0x00, 0x00}, // bfill ra a h 
	{0x7809, &op_bfill,	  9,   0,   8, 0xff, 0x00, 0x00, 0x00}, // bfill ra a pc 
	{0x7909, &op_bfill,	  9,   0,   9, 0xff, 0x00, 0x00, 0x00}, // bfill ra a ra 
	{0x7a09, &op_bfill,	  9,   0,  10, 0xff, 0x00, 0x00, 0x00}, // bfill ra a sb 
	{0x7b09, &op_bfill,	  9,   0,  11, 0xff, 0x00, 0x00, 0x00}, // bfill ra a sp 
	{0x7c09, &op_bfill,	  9,   0,  12, 0xff, 0x00, 0x00, 0x00}, // bfill ra a db 
	{0x7d09, &op_bfill,	  9,   0,  13, 0xff, 0x00, 0x00, 0x00}, // bfill ra a cb 
	{0x7e09, &op_bfill,	  9,   0,  14, 0xff, 0x00, 0x00, 0x00}, // bfill ra a pi 
	{0x7f09, &op_bfill,	  9,   0,   8, 0xff, 0x00, 0x04, 0x00}, // bfill ra a <literal> 
	{0x7019, &op_bfill,	  9,   1,   0, 0xff, 0x00, 0x00, 0x00}, // bfill ra b a 
	{0x7119, &op_bfill,	  9,   1,   1, 0xff, 0x00, 0x00, 0x00}, // bfill ra b b 
	{0x7219, &op_bfill,	  9,   1,   2, 0xff, 0x00, 0x00, 0x00}, // bfill ra b c 
	{0x7319, &op_bfill,	  9,   1,   3, 0xff, 0x00, 0x00, 0x00}, // bfill ra b d 
	{0x7419, &op_bfill,	  9,   1,   4, 0xff, 0x00, 0x00, 0x00}, // bfill ra b e 
	{0x7519, &op_bfill,	  9,   1,   5, 0xff, 0x00, 0x00, 0x00}, // bfill ra b f 
	{0x7619, &op_bfill,	  9,   1,   6, 0xff, 0x00, 0x00, 0x00}, // bfill ra b g 
	{0x7719, &op_bfill,	  9,   1,   7, 0xff, 0x00, 0x00, 0x00}, // bfill ra b h 
	{0x7819, &op_bfill,	  9,   1,   8, 0xff, 0x00, 0x00, 0x00}, // bfill ra b pc 
	{0x7919, &op_bfill,	  9,   1,   9, 0xff, 0x00, 0x00, 0x00}, // bfill ra b ra 
	{0x7a19, &op_bfill,	  9,   1,  10, 0xff, 0x00, 0x00, 0x00}, // bfill ra b sb 
	{0x7b19, &op_bfill,	  9,   1,  11, 0xff, 0x00, 0x00, 0x00}, // bfill ra b sp 
	{0x7c19, &op_bfill,	  9,   1,  12, 0xff, 0x00, 0x00, 0x00}, // bfill ra b db 
	{0x7d19, &op_bfill,	  9,   1,  13, 0xff, 0x00, 0x00, 0x00}, // bfill ra b cb 
	{0x7e19, &op_bfill,	  9,   1,  14, 0xff, 0x00, 0x00, 0x00}, // bfill ra b pi 
	{0x7f19, &op_bfill,	  9,   1,   8, 0xff, 0x00, 0x04, 0x00}, // bfill ra b <literal> 
	{0x7029, &op_bfill,	  9,   2,   0, 0xff, 0x00, 0x00, 0x00}, // bfill ra c a 
	{0x7129, &op_bfill,	  9,   2,   1, 0xff, 0x00, 0x00, 0x00}, // bfill ra c b 
	{0x7229, &op_bfill,	  9,   2,   2, 0xff, 0x00, 0x00, 0x00}, // bfill ra c c 
	{0x7329, &op_bfill,	  9,   2,   3, 0xff, 0x00, 0x00, 0x00}, // bfill ra c d 
	{0x7429, &op_bfill,	  9,   2,   4, 0xff, 0x00, 0x00, 0x00}, // bfill ra c e 
	{0x7529, &op_bfill,	  9,   2,   5, 0xff, 0x00, 0x00, 0x00}, // bfill ra c f 
	{0x7629, &op_bfill,	  9,   2,   6, 0xff, 0x00, 0x00, 0x00}, // bfill ra c g 
	{0x7729, &op_bfill,	  9,   2,   7, 0xff, 0x00, 0x00, 0x00}, // bfill ra c h 
	{0x7829, &op_bfill,	  9,   2,   8, 0xff, 0x00, 0x00, 0x00}, // bfill ra c pc 
	{0x7929, &op_bfill,	  9,   2,   9, 0xff, 0x00, 0x00, 0x00}, // bfill ra c ra 
	{0x7a29, &op_bfill,	  9,   2,  10, 0xff, 0x00, 0x00, 0x00}, // bfill ra c sb 
	{0x7b29, &op_bfill,	  9,   2,  11, 0xff, 0x00, 0x00, 0x00}, // bfill ra c sp 
	{0x7c29, &op_bfill,	  9,   2,  12, 0xff, 0x00, 0x00, 0x00}, // bfill ra c db 
	{0x7d29, &op_bfill,	  9,   2,  13, 0xff, 0x00, 0x00, 0x00}, // bfill ra c cb 
	{0x7e29, &op_bfill,	  9,   2,  14, 0xff, 0x00, 0x00, 0x00}, // bfill ra c pi 
	{0x7f29, &op_bfill,	  9,   2,   8, 0xff, 0x00, 0x04, 0x00}, // bfill ra c <literal> 
	{0x7039, &op_bfill,	  9,   3,   0, 0xff, 0x00, 0x00, 0x00}, // bfill ra d a 
	{0x7139, &op_bfill,	  9,   3,   1, 0xff, 0x00, 0x00, 0x00}, // bfill ra d b 
	{0x7239, &op_bfill,	  9,   3,   2, 0xff, 0x00, 0x00, 0x00}, // bfill ra d c 
	{0x7339, &op_bfill,	  9,   3,   3, 0xff, 0x00, 0x00, 0x00}, // bfill ra d d 
	{0x7439, &op_bfill,	  9,   3,   4, 0xff, 0x00, 0x00, 0x00}, // bfill ra d e 
	{0x7539, &op_bfill,	  9,   3,   5, 0xff, 0x00, 0x00, 0x00}, // bfill ra d f 
	{0x7639, &op_bfill,	  9,   3,   6, 0xff, 0x00, 0x00, 0x00}, // bfill ra d g 
	{0x7739, &op_bfill,	  9,   3,   7, 0xff, 0x00, 0x00, 0x00}, // bfill ra d h 
	{0x7839, &op_bfill,	  9,   3,   8, 0xff, 0x00, 0x00, 0x00}, // bfill ra d pc 
	{0x7939, &op_bfill,	  9,   3,   9, 0xff, 0x00, 0x00, 0x00}, // bfill ra d ra 
	{0x7a39, &op_bfill,	  9,   3,  10, 0xff, 0x00, 0x00, 0x00}, // bfill ra d sb 
	{0x7b39, &op_bfill,	  9,   3,  11, 0xff, 0x00, 0x00, 0x00}, // bfill ra d sp 
	{0x7c39, &op_bfill,	  9,   3,  12, 0xff, 0x00, 0x00, 0x00}, // bfill ra d db 
	{0x7d39, &op_bfill,	  9,   3,  13, 0xff, 0x00, 0x00, 0x00}, // bfill ra d cb 
	{0x7e39, &op_bfill,	  9,   3,  14, 0xff, 0x00, 0x00, 0x00}, // bfill ra d pi 
	{0x7f39, &op_bfill,	  9,   3,   8, 0xff, 0x00, 0x04, 0x00}, // bfill ra d <literal> 
	{0x7049, &op_bfill,	  9,   4,   0, 0xff, 0x00, 0x00, 0x00}, // bfill ra e a 
	{0x7149, &op_bfill,	  9,   4,   1, 0xff, 0x00, 0x00, 0x00}, // bfill ra e b 
	{0x7249, &op_bfill,	  9,   4,   2, 0xff, 0x00, 0x00, 0x00}, // bfill ra e c 
	{0x7349, &op_bfill,	  9,   4,   3, 0xff, 0x00, 0x00, 0x00}, // bfill ra e d 
	{0x7449, &op_bfill,	  9,   4,   4, 0xff, 0x00, 0x00, 0x00}, // bfill ra e e 
	{0x7549, &op_bfill,	  9,   4,   5, 0xff, 0x00, 0x00, 0x00}, // bfill ra e f 
	{0x7649, &op_bfill,	  9,   4,   6, 0xff, 0x00, 0x00, 0x00}, // bfill ra e g 
	{0x7749, &op_bfill,	  9,   4,   7, 0xff, 0x00, 0x00, 0x00}, // bfill ra e h 
	{0x7849, &op_bfill,	  9,   4,   8, 0xff, 0x00, 0x00, 0x00}, // bfill ra e pc 
	{0x7949, &op_bfill,	  9,   4,   9, 0xff, 0x00, 0x00, 0x00}, // bfill ra e ra 
	{0x7a49, &op_bfill,	  9,   4,  10, 0xff, 0x00, 0x00, 0x00}, // bfill ra e sb 
	{0x7b49, &op_bfill,	  9,   4,  11, 0xff, 0x00, 0x00, 0x00}, // bfill ra e sp 
	{0x7c49, &op_bfill,	  9,   4,  12, 0xff, 0x00, 0x00, 0x00}, // bfill ra e db 
	{0x7d49, &op_bfill,	  9,   4,  13, 0xff, 0x00, 0x00, 0x00}, // bfill ra e cb 
	{0x7e49, &op_bfill,	  9,   4,  14, 0xff, 0x00, 0x00, 0x00}, // bfill ra e pi 
	{0x7f49, &op_bfill,	  9,   4,   8, 0xff, 0x00, 0x04, 0x00}, // bfill ra e <literal> 
	{0x7059, &op_bfill,	  9,   5,   0, 0xff, 0x00, 0x00, 0x00}, // bfill ra f a 
	{0x7159, &op_bfill,	  9,   5,   1, 0xff, 0x00, 0x00, 0x00}, // bfill ra f b 
	{0x7259, &op_bfill,	  9,   5,   2, 0xff, 0x00, 0x00, 0x00}, // bfill ra f c 
	{0x7359, &op_bfill,	  9,   5,   3, 0xff, 0x00, 0x00, 0x00}, // bfill ra f d 
	{0x7459, &op_bfill,	  9,   5,   4, 0xff, 0x00, 0x00, 0x00}, // bfill ra f e 
	{0x7559, &op_bfill,	  9,   5,   5, 0xff, 0x00, 0x00, 0x00}, // bfill ra f f 
	{0x7659, &op_bfill,	  9,   5,   6, 0xff, 0x00, 0x00, 0x00}, // bfill ra f g 
	{0x7759, &op_bfill,	  9,   5,   7, 0xff, 0x00, 0x00, 0x00}, // bfill ra f h 
	{0x7859, &op_bfill,	  9,   5,   8, 0xff, 0x00, 0x00, 0x00}, // bfill ra f pc 
	{0x7959, &op_bfill,	  9,   5,   9, 0xff, 0x00, 0x00, 0x00}, // bfill ra f ra 
	{0x7a59, &op_bfill,	  9,   5,  10, 0xff, 0x00, 0x00, 0x00}, // bfill ra f sb 
	{0x7b59, &op_bfill,	  9,   5,  11, 0xff, 0x00, 0x00, 0x00}, // bfill ra f sp 
	{0x7c59, &op_bfill,	  9,   5,  12, 0xff, 0x00, 0x00, 0x00}, // bfill ra f db 
	{0x7d59, &op_bfill,	  9,   5,  13, 0xff, 0x00, 0x00, 0x00}, // bfill ra f cb 
	{0x7e59, &op_bfill,	  9,   5,  14, 0xff, 0x00, 0x00, 0x00}, // bfill ra f pi 
	{0x7f59, &op_bfill,	  9,   5,   8, 0xff, 0x00, 0x04, 0x00}, // bfill ra f <literal> 
	{0x7069, &op_bfill,	  9,   6,   0, 0xff, 0x00, 0x00, 0x00}, // bfill ra g a 
	{0x7169, &op_bfill,	  9,   6,   1, 0xff, 0x00, 0x00, 0x00}, // bfill ra g b 
	{0x7269, &op_bfill,	  9,   6,   2, 0xff, 0x00, 0x00, 0x00}, // bfill ra g c 
	{0x7369, &op_bfill,	  9,   6,   3, 0xff, 0x00, 0x00, 0x00}, // bfill ra g d 
	{0x7469, &op_bfill,	  9,   6,   4, 0xff, 0x00, 0x00, 0x00}, // bfill ra g e 
	{0x7569, &op_bfill,	  9,   6,   5, 0xff, 0x00, 0x00, 0x00}, // bfill ra g f 
	{0x7669, &op_bfill,	  9,   6,   6, 0xff, 0x00, 0x00, 0x00}, // bfill ra g g 
	{0x7769, &op_bfill,	  9,   6,   7, 0xff, 0x00, 0x00, 0x00}, // bfill ra g h 
	{0x7869, &op_bfill,	  9,   6,   8, 0xff, 0x00, 0x00, 0x00}, // bfill ra g pc 
	{0x7969, &op_bfill,	  9,   6,   9, 0xff, 0x00, 0x00, 0x00}, // bfill ra g ra 
	{0x7a69, &op_bfill,	  9,   6,  10, 0xff, 0x00, 0x00, 0x00}, // bfill ra g sb 
	{0x7b69, &op_bfill,	  9,   6,  11, 0xff, 0x00, 0x00, 0x00}, // bfill ra g sp 
	{0x7c69, &op_bfill,	  9,   6,  12, 0xff, 0x00, 0x00, 0x00}, // bfill ra g db 
	{0x7d69, &op_bfill,	  9,   6,  13, 0xff, 0x00, 0x00, 0x00}, // bfill ra g cb 
	{0x7e69, &op_bfill,	  9,   6,  14, 0xff, 0x00, 0x00, 0x00}, // bfill ra g pi 
	{0x7f69, &op_bfill,	  9,   6,   8, 0xff, 0x00, 0x04, 0x00}, // bfill ra g <literal> 
	{0x7079, &op_bfill,	  9,   7,   0, 0xff, 0x00, 0x00, 0x00}, // bfill ra h a 
	{0x7179, &op_bfill,	  9,   7,   1, 0xff, 0x00, 0x00, 0x00}, // bfill ra h b 
	{0x7279, &op_bfill,	  9,   7,   2, 0xff, 0x00, 0x00, 0x00}, // bfill ra h c 
	{0x7379, &op_bfill,	  9,   7,   3, 0xff, 0x00, 0x00, 0x00}, // bfill ra h d 
	{0x7479, &op_bfill,	  9,   7,   4, 0xff, 0x00, 0x00, 0x00}, // bfill ra h e 
	{0x7579, &op_bfill,	  9,   7,   5, 0xff, 0x00, 0x00, 0x00}, // bfill ra h f 
	{0x7679, &op_bfill,	  9,   7,   6, 0xff, 0x00, 0x00, 0x00}, // bfill ra h g 
	{0x7779, &op_bfill,	  9,   7,   7, 0xff, 0x00, 0x00, 0x00}, // bfill ra h h 
	{0x7879, &op_bfill,	  9,   7,   8, 0xff, 0x00, 0x00, 0x00}, // bfill ra h pc 
	{0x7979, &op_bfill,	  9,   7,   9, 0xff, 0x00, 0x00, 0x00}, // bfill ra h ra 
	{0x7a79, &op_bfill,	  9,   7,  10, 0xff, 0x00, 0x00, 0x00}, // bfill ra h sb 
	{0x7b79, &op_bfill,	  9,   7,  11, 0xff, 0x00, 0x00, 0x00}, // bfill ra h sp 
	{0x7c79, &op_bfill,	  9,   7,  12, 0xff, 0x00, 0x00, 0x00}, // bfill ra h db 
	{0x7d79, &op_bfill,	  9,   7,  13, 0xff, 0x00, 0x00, 0x00}, // bfill ra h cb 
	{0x7e79, &op_bfill,	  9,   7,  14, 0xff, 0x00, 0x00, 0x00}, // bfill ra h pi 
	{0x7f79, &op_bfill,	  9,   7,   8, 0xff, 0x00, 0x04, 0x00}, // bfill ra h <literal> 
	{0x7089, &op_bfill,	  9,   8,   0, 0xff, 0x00, 0x00, 0x00}, // bfill ra pc a 
	{0x7189, &op_bfill,	  9,   8,   1, 0xff, 0x00, 0x00, 0x00}, // bfill ra pc b 
	{0x7289, &op_bfill,	  9,   8,   2, 0xff, 0x00, 0x00, 0x00}, // bfill ra pc c 
	{0x7389, &op_bfill,	  9,   8,   3, 0xff, 0x00, 0x00, 0x00}, // bfill ra pc d 
	{0x7489, &op_bfill,	  9,   8,   4, 0xff, 0x00, 0x00, 0x00}, // bfill ra pc e 
	{0x7589, &op_bfill,	  9,   8,   5, 0xff, 0x00, 0x00, 0x00}, // bfill ra pc f 
	{0x7689, &op_bfill,	  9,   8,   6, 0xff, 0x00, 0x00, 0x00}, // bfill ra pc g 
	{0x7789, &op_bfill,	  9,   8,   7, 0xff, 0x00, 0x00, 0x00}, // bfill ra pc h 
	{0x7889, &op_bfill,	  9,   8,   8, 0xff, 0x00, 0x00, 0x00}, // bfill ra pc pc 
	{0x7989, &op_bfill,	  9,   8,   9, 0xff, 0x00, 0x00, 0x00}, // bfill ra pc ra 
	{0x7a89, &op_bfill,	  9,   8,  10, 0xff, 0x00, 0x00, 0x00}, // bfill ra pc sb 
	{0x7b89, &op_bfill,	  9,   8,  11, 0xff, 0x00, 0x00, 0x00}, // bfill ra pc sp 
	{0x7c89, &op_bfill,	  9,   8,  12, 0xff, 0x00, 0x00, 0x00}, // bfill ra pc db 
	{0x7d89, &op_bfill,	  9,   8,  13, 0xff, 0x00, 0x00, 0x00}, // bfill ra pc cb 
	{0x7e89, &op_bfill,	  9,   8,  14, 0xff, 0x00, 0x00, 0x00}, // bfill ra pc pi 
	{0x7f89, &op_bfill,	  9,   8,   8, 0xff, 0x00, 0x04, 0x00}, // bfill ra pc <literal> 
	{0x7099, &op_bfill,	  9,   9,   0, 0xff, 0x00, 0x00, 0x00}, // bfill ra ra a 
	{0x7199, &op_bfill,	  9,   9,   1, 0xff, 0x00, 0x00, 0x00}, // bfill ra ra b 
	{0x7299, &op_bfill,	  9,   9,   2, 0xff, 0x00, 0x00, 0x00}, // bfill ra ra c 
	{0x7399, &op_bfill,	  9,   9,   3, 0xff, 0x00, 0x00, 0x00}, // bfill ra ra d 
	{0x7499, &op_bfill,	  9,   9,   4, 0xff, 0x00, 0x00, 0x00}, // bfill ra ra e 
	{0x7599, &op_bfill,	  9,   9,   5, 0xff, 0x00, 0x00, 0x00}, // bfill ra ra f 
	{0x7699, &op_bfill,	  9,   9,   6, 0xff, 0x00, 0x00, 0x00}, // bfill ra ra g 
	{0x7799, &op_bfill,	  9,   9,   7, 0xff, 0x00, 0x00, 0x00}, // bfill ra ra h 
	{0x7899, &op_bfill,	  9,   9,   8, 0xff, 0x00, 0x00, 0x00}, // bfill ra ra pc 
	{0x7999, &op_bfill,	  9,   9,   9, 0xff, 0x00, 0x00, 0x00}, // bfill ra ra ra 
	{0x7a99, &op_bfill,	  9,   9,  10, 0xff, 0x00, 0x00, 0x00}, // bfill ra ra sb 
	{0x7b99, &op_bfill,	  9,   9,  11, 0xff, 0x00, 0x00, 0x00}, // bfill ra ra sp 
	{0x7c99, &op_bfill,	  9,   9,  12, 0xff, 0x00, 0x00, 0x00}, // bfill ra ra db 
	{0x7d99, &op_bfill,	  9,   9,  13, 0xff, 0x00, 0x00, 0x00}, // bfill ra ra cb 
	{0x7e99, &op_bfill,	  9,   9,  14, 0xff, 0x00, 0x00, 0x00}, // bfill ra ra pi 
	{0x7f99, &op_bfill,	  9,   9,   8, 0xff, 0x00, 0x04, 0x00}, // bfill ra ra <literal> 
	{0x70a9, &op_bfill,	  9,  10,   0, 0xff, 0x00, 0x00, 0x00}, // bfill ra sb a 
	{0x71a9, &op_bfill,	  9,  10,   1, 0xff, 0x00, 0x00, 0x00}, // bfill ra sb b 
	{0x72a9, &op_bfill,	  9,  10,   2, 0xff, 0x00, 0x00, 0x00}, // bfill ra sb c 
	{0x73a9, &op_bfill,	  9,  10,   3, 0xff, 0x00, 0x00, 0x00}, // bfill ra sb d 
	{0x74a9, &op_bfill,	  9,  10,   4, 0xff, 0x00, 0x00, 0x00}, // bfill ra sb e 
	{0x75a9, &op_bfill,	  9,  10,   5, 0xff, 0x00, 0x00, 0x00}, // bfill ra sb f 
	{0x76a9, &op_bfill,	  9,  10,   6, 0xff, 0x00, 0x00, 0x00}, // bfill ra sb g 
	{0x77a9, &op_bfill,	  9,  10,   7, 0xff, 0x00, 0x00, 0x00}, // bfill ra sb h 
	{0x78a9, &op_bfill,	  9,  10,   8, 0xff, 0x00, 0x00, 0x00}, // bfill ra sb pc 
	{0x79a9, &op_bfill,	  9,  10,   9, 0xff, 0x00, 0x00, 0x00}, // bfill ra sb ra 
	{0x7aa9, &op_bfill,	  9,  10,  10, 0xff, 0x00, 0x00, 0x00}, // bfill ra sb sb 
	{0x7ba9, &op_bfill,	  9,  10,  11, 0xff, 0x00, 0x00, 0x00}, // bfill ra sb sp 
	{0x7ca9, &op_bfill,	  9,  10,  12, 0xff, 0x00, 0x00, 0x00}, // bfill ra sb db 
	{0x7da9, &op_bfill,	  9,  10,  13, 0xff, 0x00, 0x00, 0x00}, // bfill ra sb cb 
	{0x7ea9, &op_bfill,	  9,  10,  14, 0xff, 0x00, 0x00, 0x00}, // bfill ra sb pi 
	{0x7fa9, &op_bfill,	  9,  10,   8, 0xff, 0x00, 0x04, 0x00}, // bfill ra sb <literal> 
	{0x70b9, &op_bfill,	  9,  11,   0, 0xff, 0x00, 0x00, 0x00}, // bfill ra sp a 
	{0x71b9, &op_bfill,	  9,  11,   1, 0xff, 0x00, 0x00, 0x00}, // bfill ra sp b 
	{0x72b9, &op_bfill,	  9,  11,   2, 0xff, 0x00, 0x00, 0x00}, // bfill ra sp c 
	{0x73b9, &op_bfill,	  9,  11,   3, 0xff, 0x00, 0x00, 0x00}, // bfill ra sp d 
	{0x74b9, &op_bfill,	  9,  11,   4, 0xff, 0x00, 0x00, 0x00}, // bfill ra sp e 
	{0x75b9, &op_bfill,	  9,  11,   5, 0xff, 0x00, 0x00, 0x00}, // bfill ra sp f 
	{0x76b9, &op_bfill,	  9,  11,   6, 0xff, 0x00, 0x00, 0x00}, // bfill ra sp g 
	{0x77b9, &op_bfill,	  9,  11,   7, 0xff, 0x00, 0x00, 0x00}, // bfill ra sp h 
	{0x78b9, &op_bfill,	  9,  11,   8, 0xff, 0x00, 0x00, 0x00}, // bfill ra sp pc 
	{0x79b9, &op_bfill,	  9,  11,   9, 0xff, 0x00, 0x00, 0x00}, // bfill ra sp ra 
	{0x7ab9, &op_bfill,	  9,  11,  10, 0xff, 0x00, 0x00, 0x00}, // bfill ra sp sb 
	{0x7bb9, &op_bfill,	  9,  11,  11, 0xff, 0x00, 0x00, 0x00}, // bfill ra sp sp 
	{0x7cb9, &op_bfill,	  9,  11,  12, 0xff, 0x00, 0x00, 0x00}, // bfill ra sp db 
	{0x7db9, &op_bfill,	  9,  11,  13, 0xff, 0x00, 0x00, 0x00}, // bfill ra sp cb 
	{0x7eb9, &op_bfill,	  9,  11,  14, 0xff, 0x00, 0x00, 0x00}, // bfill ra sp pi 
	{0x7fb9, &op_bfill,	  9,  11,   8, 0xff, 0x00, 0x04, 0x00}, // bfill ra sp <literal> 
	{0x70c9, &op_bfill,	  9,  12,   0, 0xff, 0x00, 0x00, 0x00}, // bfill ra db a 
	{0x71c9, &op_bfill,	  9,  12,   1, 0xff, 0x00, 0x00, 0x00}, // bfill ra db b 
	{0x72c9, &op_bfill,	  9,  12,   2, 0xff, 0x00, 0x00, 0x00}, // bfill ra db c 
	{0x73c9, &op_bfill,	  9,  12,   3, 0xff, 0x00, 0x00, 0x00}, // bfill ra db d 
	{0x74c9, &op_bfill,	  9,  12,   4, 0xff, 0x00, 0x00, 0x00}, // bfill ra db e 
	{0x75c9, &op_bfill,	  9,  12,   5, 0xff, 0x00, 0x00, 0x00}, // bfill ra db f 
	{0x76c9, &op_bfill,	  9,  12,   6, 0xff, 0x00, 0x00, 0x00}, // bfill ra db g 
	{0x77c9, &op_bfill,	  9,  12,   7, 0xff, 0x00, 0x00, 0x00}, // bfill ra db h 
	{0x78c9, &op_bfill,	  9,  12,   8, 0xff, 0x00, 0x00, 0x00}, // bfill ra db pc 
	{0x79c9, &op_bfill,	  9,  12,   9, 0xff, 0x00, 0x00, 0x00}, // bfill ra db ra 
	{0x7ac9, &op_bfill,	  9,  12,  10, 0xff, 0x00, 0x00, 0x00}, // bfill ra db sb 
	{0x7bc9, &op_bfill,	  9,  12,  11, 0xff, 0x00, 0x00, 0x00}, // bfill ra db sp 
	{0x7cc9, &op_bfill,	  9,  12,  12, 0xff, 0x00, 0x00, 0x00}, // bfill ra db db 
	{0x7dc9, &op_bfill,	  9,  12,  13, 0xff, 0x00, 0x00, 0x00}, // bfill ra db cb 
	{0x7ec9, &op_bfill,	  9,  12,  14, 0xff, 0x00, 0x00, 0x00}, // bfill ra db pi 
	{0x7fc9, &op_bfill,	  9,  12,   8, 0xff, 0x00, 0x04, 0x00}, // bfill ra db <literal> 
	{0x70d9, &op_bfill,	  9,  13,   0, 0xff, 0x00, 0x00, 0x00}, // bfill ra cb a 
	{0x71d9, &op_bfill,	  9,  13,   1, 0xff, 0x00, 0x00, 0x00}, // bfill ra cb b 
	{0x72d9, &op_bfill,	  9,  13,   2, 0xff, 0x00, 0x00, 0x00}, // bfill ra cb c 
	{0x73d9, &op_bfill,	  9,  13,   3, 0xff, 0x00, 0x00, 0x00}, // bfill ra cb d 
	{0x74d9, &op_bfill,	  9,  13,   4, 0xff, 0x00, 0x00, 0x00}, // bfill ra cb e 
	{0x75d9, &op_bfill,	  9,  13,   5, 0xff, 0x00, 0x00, 0x00}, // bfill ra cb f 
	{0x76d9, &op_bfill,	  9,  13,   6, 0xff, 0x00, 0x00, 0x00}, // bfill ra cb g 
	{0x77d9, &op_bfill,	  9,  13,   7, 0xff, 0x00, 0x00, 0x00}, // bfill ra cb h 
	{0x78d9, &op_bfill,	  9,  13,   8, 0xff, 0x00, 0x00, 0x00}, // bfill ra cb pc 
	{0x79d9, &op_bfill,	  9,  13,   9, 0xff, 0x00, 0x00, 0x00}, // bfill ra cb ra 
	{0x7ad9, &op_bfill,	  9,  13,  10, 0xff, 0x00, 0x00, 0x00}, // bfill ra cb sb 
	{0x7bd9, &op_bfill,	  9,  13,  11, 0xff, 0x00, 0x00, 0x00}, // bfill ra cb sp 
	{0x7cd9, &op_bfill,	  9,  13,  12, 0xff, 0x00, 0x00, 0x00}, // bfill ra cb db 
	{0x7dd9, &op_bfill,	  9,  13,  13, 0xff, 0x00, 0x00, 0x00}, // bfill ra cb cb 
	{0x7ed9, &op_bfill,	  9,  13,  14, 0xff, 0x00, 0x00, 0x00}, // bfill ra cb pi 
	{0x7fd9, &op_bfill,	  9,  13,   8, 0xff, 0x00, 0x04, 0x00}, // bfill ra cb <literal> 
	{0x70e9, &op_bfill,	  9,  14,   0, 0xff, 0x00, 0x00, 0x00}, // bfill ra pi a 
	{0x71e9, &op_bfill,	  9,  14,   1, 0xff, 0x00, 0x00, 0x00}, // bfill ra pi b 
	{0x72e9, &op_bfill,	  9,  14,   2, 0xff, 0x00, 0x00, 0x00}, // bfill ra pi c 
	{0x73e9, &op_bfill,	  9,  14,   3, 0xff, 0x00, 0x00, 0x00}, // bfill ra pi d 
	{0x74e9, &op_bfill,	  9,  14,   4, 0xff, 0x00, 0x00, 0x00}, // bfill ra pi e 
	{0x75e9, &op_bfill,	  9,  14,   5, 0xff, 0x00, 0x00, 0x00}, // bfill ra pi f 
	{0x76e9, &op_bfill,	  9,  14,   6, 0xff, 0x00, 0x00, 0x00}, // bfill ra pi g 
	{0x77e9, &op_bfill,	  9,  14,   7, 0xff, 0x00, 0x00, 0x00}, // bfill ra pi h 
	{0x78e9, &op_bfill,	  9,  14,   8, 0xff, 0x00, 0x00, 0x00}, // bfill ra pi pc 
	{0x79e9, &op_bfill,	  9,  14,   9, 0xff, 0x00, 0x00, 0x00}, // bfill ra pi ra 
	{0x7ae9, &op_bfill,	  9,  14,  10, 0xff, 0x00, 0x00, 0x00}, // bfill ra pi sb 
	{0x7be9, &op_bfill,	  9,  14,  11, 0xff, 0x00, 0x00, 0x00}, // bfill ra pi sp 
	{0x7ce9, &op_bfill,	  9,  14,  12, 0xff, 0x00, 0x00, 0x00}, // bfill ra pi db 
	{0x7de9, &op_bfill,	  9,  14,  13, 0xff, 0x00, 0x00, 0x00}, // bfill ra pi cb 
	{0x7ee9, &op_bfill,	  9,  14,  14, 0xff, 0x00, 0x00, 0x00}, // bfill ra pi pi 
	{0x7fe9, &op_bfill,	  9,  14,   8, 0xff, 0x00, 0x04, 0x00}, // bfill ra pi <literal> 
	{0x70f9, &op_bfill,	  9,  15,   0, 0xff, 0x00, 0x00, 0x00}, // bfill ra status a 
	{0x71f9, &op_bfill,	  9,  15,   1, 0xff, 0x00, 0x00, 0x00}, // bfill ra status b 
	{0x72f9, &op_bfill,	  9,  15,   2, 0xff, 0x00, 0x00, 0x00}, // bfill ra status c 
	{0x73f9, &op_bfill,	  9,  15,   3, 0xff, 0x00, 0x00, 0x00}, // bfill ra status d 
	{0x74f9, &op_bfill,	  9,  15,   4, 0xff, 0x00, 0x00, 0x00}, // bfill ra status e 
	{0x75f9, &op_bfill,	  9,  15,   5, 0xff, 0x00, 0x00, 0x00}, // bfill ra status f 
	{0x76f9, &op_bfill,	  9,  15,   6, 0xff, 0x00, 0x00, 0x00}, // bfill ra status g 
	{0x77f9, &op_bfill,	  9,  15,   7, 0xff, 0x00, 0x00, 0x00}, // bfill ra status h 
	{0x78f9, &op_bfill,	  9,  15,   8, 0xff, 0x00, 0x00, 0x00}, // bfill ra status pc 
	{0x79f9, &op_bfill,	  9,  15,   9, 0xff, 0x00, 0x00, 0x00}, // bfill ra status ra 
	{0x7af9, &op_bfill,	  9,  15,  10, 0xff, 0x00, 0x00, 0x00}, // bfill ra status sb 
	{0x7bf9, &op_bfill,	  9,  15,  11, 0xff, 0x00, 0x00, 0x00}, // bfill ra status sp 
	{0x7cf9, &op_bfill,	  9,  15,  12, 0xff, 0x00, 0x00, 0x00}, // bfill ra status db 
	{0x7df9, &op_bfill,	  9,  15,  13, 0xff, 0x00, 0x00, 0x00}, // bfill ra status cb 
	{0x7ef9, &op_bfill,	  9,  15,  14, 0xff, 0x00, 0x00, 0x00}, // bfill ra status pi 
	{0x7ff9, &op_bfill,	  9,  15,   8, 0xff, 0x00, 0x04, 0x00}, // bfill ra status <literal> 
	{0x700a, &op_bfill,	 10,   0,   0, 0xff, 0x00, 0x00, 0x00}, // bfill sb a a 
	{0x710a, &op_bfill,	 10,   0,   1, 0xff, 0x00, 0x00, 0x00}, // bfill sb a b 
	{0x720a, &op_bfill,	 10,   0,   2, 0xff, 0x00, 0x00, 0x00}, // bfill sb a c 
	{0x730a, &op_bfill,	 10,   0,   3, 0xff, 0x00, 0x00, 0x00}, // bfill sb a d 
	{0x740a, &op_bfill,	 10,   0,   4, 0xff, 0x00, 0x00, 0x00}, // bfill sb a e 
	{0x750a, &op_bfill,	 10,   0,   5, 0xff, 0x00, 0x00, 0x00}, // bfill sb a f 
	{0x760a, &op_bfill,	 10,   0,   6, 0xff, 0x00, 0x00, 0x00}, // bfill sb a g 
	{0x770a, &op_bfill,	 10,   0,   7, 0xff, 0x00, 0x00, 0x00}, // bfill sb a h 
	{0x780a, &op_bfill,	 10,   0,   8, 0xff, 0x00, 0x00, 0x00}, // bfill sb a pc 
	{0x790a, &op_bfill,	 10,   0,   9, 0xff, 0x00, 0x00, 0x00}, // bfill sb a ra 
	{0x7a0a, &op_bfill,	 10,   0,  10, 0xff, 0x00, 0x00, 0x00}, // bfill sb a sb 
	{0x7b0a, &op_bfill,	 10,   0,  11, 0xff, 0x00, 0x00, 0x00}, // bfill sb a sp 
	{0x7c0a, &op_bfill,	 10,   0,  12, 0xff, 0x00, 0x00, 0x00}, // bfill sb a db 
	{0x7d0a, &op_bfill,	 10,   0,  13, 0xff, 0x00, 0x00, 0x00}, // bfill sb a cb 
	{0x7e0a, &op_bfill,	 10,   0,  14, 0xff, 0x00, 0x00, 0x00}, // bfill sb a pi 
	{0x7f0a, &op_bfill,	 10,   0,   8, 0xff, 0x00, 0x04, 0x00}, // bfill sb a <literal> 
	{0x701a, &op_bfill,	 10,   1,   0, 0xff, 0x00, 0x00, 0x00}, // bfill sb b a 
	{0x711a, &op_bfill,	 10,   1,   1, 0xff, 0x00, 0x00, 0x00}, // bfill sb b b 
	{0x721a, &op_bfill,	 10,   1,   2, 0xff, 0x00, 0x00, 0x00}, // bfill sb b c 
	{0x731a, &op_bfill,	 10,   1,   3, 0xff, 0x00, 0x00, 0x00}, // bfill sb b d 
	{0x741a, &op_bfill,	 10,   1,   4, 0xff, 0x00, 0x00, 0x00}, // bfill sb b e 
	{0x751a, &op_bfill,	 10,   1,   5, 0xff, 0x00, 0x00, 0x00}, // bfill sb b f 
	{0x761a, &op_bfill,	 10,   1,   6, 0xff, 0x00, 0x00, 0x00}, // bfill sb b g 
	{0x771a, &op_bfill,	 10,   1,   7, 0xff, 0x00, 0x00, 0x00}, // bfill sb b h 
	{0x781a, &op_bfill,	 10,   1,   8, 0xff, 0x00, 0x00, 0x00}, // bfill sb b pc 
	{0x791a, &op_bfill,	 10,   1,   9, 0xff, 0x00, 0x00, 0x00}, // bfill sb b ra 
	{0x7a1a, &op_bfill,	 10,   1,  10, 0xff, 0x00, 0x00, 0x00}, // bfill sb b sb 
	{0x7b1a, &op_bfill,	 10,   1,  11, 0xff, 0x00, 0x00, 0x00}, // bfill sb b sp 
	{0x7c1a, &op_bfill,	 10,   1,  12, 0xff, 0x00, 0x00, 0x00}, // bfill sb b db 
	{0x7d1a, &op_bfill,	 10,   1,  13, 0xff, 0x00, 0x00, 0x00}, // bfill sb b cb 
	{0x7e1a, &op_bfill,	 10,   1,  14, 0xff, 0x00, 0x00, 0x00}, // bfill sb b pi 
	{0x7f1a, &op_bfill,	 10,   1,   8, 0xff, 0x00, 0x04, 0x00}, // bfill sb b <literal> 
	{0x702a, &op_bfill,	 10,   2,   0, 0xff, 0x00, 0x00, 0x00}, // bfill sb c a 
	{0x712a, &op_bfill,	 10,   2,   1, 0xff, 0x00, 0x00, 0x00}, // bfill sb c b 
	{0x722a, &op_bfill,	 10,   2,   2, 0xff, 0x00, 0x00, 0x00}, // bfill sb c c 
	{0x732a, &op_bfill,	 10,   2,   3, 0xff, 0x00, 0x00, 0x00}, // bfill sb c d 
	{0x742a, &op_bfill,	 10,   2,   4, 0xff, 0x00, 0x00, 0x00}, // bfill sb c e 
	{0x752a, &op_bfill,	 10,   2,   5, 0xff, 0x00, 0x00, 0x00}, // bfill sb c f 
	{0x762a, &op_bfill,	 10,   2,   6, 0xff, 0x00, 0x00, 0x00}, // bfill sb c g 
	{0x772a, &op_bfill,	 10,   2,   7, 0xff, 0x00, 0x00, 0x00}, // bfill sb c h 
	{0x782a, &op_bfill,	 10,   2,   8, 0xff, 0x00, 0x00, 0x00}, // bfill sb c pc 
	{0x792a, &op_bfill,	 10,   2,   9, 0xff, 0x00, 0x00, 0x00}, // bfill sb c ra 
	{0x7a2a, &op_bfill,	 10,   2,  10, 0xff, 0x00, 0x00, 0x00}, // bfill sb c sb 
	{0x7b2a, &op_bfill,	 10,   2,  11, 0xff, 0x00, 0x00, 0x00}, // bfill sb c sp 
	{0x7c2a, &op_bfill,	 10,   2,  12, 0xff, 0x00, 0x00, 0x00}, // bfill sb c db 
	{0x7d2a, &op_bfill,	 10,   2,  13, 0xff, 0x00, 0x00, 0x00}, // bfill sb c cb 
	{0x7e2a, &op_bfill,	 10,   2,  14, 0xff, 0x00, 0x00, 0x00}, // bfill sb c pi 
	{0x7f2a, &op_bfill,	 10,   2,   8, 0xff, 0x00, 0x04, 0x00}, // bfill sb c <literal> 
	{0x703a, &op_bfill,	 10,   3,   0, 0xff, 0x00, 0x00, 0x00}, // bfill sb d a 
	{0x713a, &op_bfill,	 10,   3,   1, 0xff, 0x00, 0x00, 0x00}, // bfill sb d b 
	{0x723a, &op_bfill,	 10,   3,   2, 0xff, 0x00, 0x00, 0x00}, // bfill sb d c 
	{0x733a, &op_bfill,	 10,   3,   3, 0xff, 0x00, 0x00, 0x00}, // bfill sb d d 
	{0x743a, &op_bfill,	 10,   3,   4, 0xff, 0x00, 0x00, 0x00}, // bfill sb d e 
	{0x753a, &op_bfill,	 10,   3,   5, 0xff, 0x00, 0x00, 0x00}, // bfill sb d f 
	{0x763a, &op_bfill,	 10,   3,   6, 0xff, 0x00, 0x00, 0x00}, // bfill sb d g 
	{0x773a, &op_bfill,	 10,   3,   7, 0xff, 0x00, 0x00, 0x00}, // bfill sb d h 
	{0x783a, &op_bfill,	 10,   3,   8, 0xff, 0x00, 0x00, 0x00}, // bfill sb d pc 
	{0x793a, &op_bfill,	 10,   3,   9, 0xff, 0x00, 0x00, 0x00}, // bfill sb d ra 
	{0x7a3a, &op_bfill,	 10,   3,  10, 0xff, 0x00, 0x00, 0x00}, // bfill sb d sb 
	{0x7b3a, &op_bfill,	 10,   3,  11, 0xff, 0x00, 0x00, 0x00}, // bfill sb d sp 
	{0x7c3a, &op_bfill,	 10,   3,  12, 0xff, 0x00, 0x00, 0x00}, // bfill sb d db 
	{0x7d3a, &op_bfill,	 10,   3,  13, 0xff, 0x00, 0x00, 0x00}, // bfill sb d cb 
	{0x7e3a, &op_bfill,	 10,   3,  14, 0xff, 0x00, 0x00, 0x00}, // bfill sb d pi 
	{0x7f3a, &op_bfill,	 10,   3,   8, 0xff, 0x00, 0x04, 0x00}, // bfill sb d <literal> 
	{0x704a, &op_bfill,	 10,   4,   0, 0xff, 0x00, 0x00, 0x00}, // bfill sb e a 
	{0x714a, &op_bfill,	 10,   4,   1, 0xff, 0x00, 0x00, 0x00}, // bfill sb e b 
	{0x724a, &op_bfill,	 10,   4,   2, 0xff, 0x00, 0x00, 0x00}, // bfill sb e c 
	{0x734a, &op_bfill,	 10,   4,   3, 0xff, 0x00, 0x00, 0x00}, // bfill sb e d 
	{0x744a, &op_bfill,	 10,   4,   4, 0xff, 0x00, 0x00, 0x00}, // bfill sb e e 
	{0x754a, &op_bfill,	 10,   4,   5, 0xff, 0x00, 0x00, 0x00}, // bfill sb e f 
	{0x764a, &op_bfill,	 10,   4,   6, 0xff, 0x00, 0x00, 0x00}, // bfill sb e g 
	{0x774a, &op_bfill,	 10,   4,   7, 0xff, 0x00, 0x00, 0x00}, // bfill sb e h 
	{0x784a, &op_bfill,	 10,   4,   8, 0xff, 0x00, 0x00, 0x00}, // bfill sb e pc 
	{0x794a, &op_bfill,	 10,   4,   9, 0xff, 0x00, 0x00, 0x00}, // bfill sb e ra 
	{0x7a4a, &op_bfill,	 10,   4,  10, 0xff, 0x00, 0x00, 0x00}, // bfill sb e sb 
	{0x7b4a, &op_bfill,	 10,   4,  11, 0xff, 0x00, 0x00, 0x00}, // bfill sb e sp 
	{0x7c4a, &op_bfill,	 10,   4,  12, 0xff, 0x00, 0x00, 0x00}, // bfill sb e db 
	{0x7d4a, &op_bfill,	 10,   4,  13, 0xff, 0x00, 0x00, 0x00}, // bfill sb e cb 
	{0x7e4a, &op_bfill,	 10,   4,  14, 0xff, 0x00, 0x00, 0x00}, // bfill sb e pi 
	{0x7f4a, &op_bfill,	 10,   4,   8, 0xff, 0x00, 0x04, 0x00}, // bfill sb e <literal> 
	{0x705a, &op_bfill,	 10,   5,   0, 0xff, 0x00, 0x00, 0x00}, // bfill sb f a 
	{0x715a, &op_bfill,	 10,   5,   1, 0xff, 0x00, 0x00, 0x00}, // bfill sb f b 
	{0x725a, &op_bfill,	 10,   5,   2, 0xff, 0x00, 0x00, 0x00}, // bfill sb f c 
	{0x735a, &op_bfill,	 10,   5,   3, 0xff, 0x00, 0x00, 0x00}, // bfill sb f d 
	{0x745a, &op_bfill,	 10,   5,   4, 0xff, 0x00, 0x00, 0x00}, // bfill sb f e 
	{0x755a, &op_bfill,	 10,   5,   5, 0xff, 0x00, 0x00, 0x00}, // bfill sb f f 
	{0x765a, &op_bfill,	 10,   5,   6, 0xff, 0x00, 0x00, 0x00}, // bfill sb f g 
	{0x775a, &op_bfill,	 10,   5,   7, 0xff, 0x00, 0x00, 0x00}, // bfill sb f h 
	{0x785a, &op_bfill,	 10,   5,   8, 0xff, 0x00, 0x00, 0x00}, // bfill sb f pc 
	{0x795a, &op_bfill,	 10,   5,   9, 0xff, 0x00, 0x00, 0x00}, // bfill sb f ra 
	{0x7a5a, &op_bfill,	 10,   5,  10, 0xff, 0x00, 0x00, 0x00}, // bfill sb f sb 
	{0x7b5a, &op_bfill,	 10,   5,  11, 0xff, 0x00, 0x00, 0x00}, // bfill sb f sp 
	{0x7c5a, &op_bfill,	 10,   5,  12, 0xff, 0x00, 0x00, 0x00}, // bfill sb f db 
	{0x7d5a, &op_bfill,	 10,   5,  13, 0xff, 0x00, 0x00, 0x00}, // bfill sb f cb 
	{0x7e5a, &op_bfill,	 10,   5,  14, 0xff, 0x00, 0x00, 0x00}, // bfill sb f pi 
	{0x7f5a, &op_bfill,	 10,   5,   8, 0xff, 0x00, 0x04, 0x00}, // bfill sb f <literal> 
	{0x706a, &op_bfill,	 10,   6,   0, 0xff, 0x00, 0x00, 0x00}, // bfill sb g a 
	{0x716a, &op_bfill,	 10,   6,   1, 0xff, 0x00, 0x00, 0x00}, // bfill sb g b 
	{0x726a, &op_bfill,	 10,   6,   2, 0xff, 0x00, 0x00, 0x00}, // bfill sb g c 
	{0x736a, &op_bfill,	 10,   6,   3, 0xff, 0x00, 0x00, 0x00}, // bfill sb g d 
	{0x746a, &op_bfill,	 10,   6,   4, 0xff, 0x00, 0x00, 0x00}, // bfill sb g e 
	{0x756a, &op_bfill,	 10,   6,   5, 0xff, 0x00, 0x00, 0x00}, // bfill sb g f 
	{0x766a, &op_bfill,	 10,   6,   6, 0xff, 0x00, 0x00, 0x00}, // bfill sb g g 
	{0x776a, &op_bfill,	 10,   6,   7, 0xff, 0x00, 0x00, 0x00}, // bfill sb g h 
	{0x786a, &op_bfill,	 10,   6,   8, 0xff, 0x00, 0x00, 0x00}, // bfill sb g pc 
	{0x796a, &op_bfill,	 10,   6,   9, 0xff, 0x00, 0x00, 0x00}, // bfill sb g ra 
	{0x7a6a, &op_bfill,	 10,   6,  10, 0xff, 0x00, 0x00, 0x00}, // bfill sb g sb 
	{0x7b6a, &op_bfill,	 10,   6,  11, 0xff, 0x00, 0x00, 0x00}, // bfill sb g sp 
	{0x7c6a, &op_bfill,	 10,   6,  12, 0xff, 0x00, 0x00, 0x00}, // bfill sb g db 
	{0x7d6a, &op_bfill,	 10,   6,  13, 0xff, 0x00, 0x00, 0x00}, // bfill sb g cb 
	{0x7e6a, &op_bfill,	 10,   6,  14, 0xff, 0x00, 0x00, 0x00}, // bfill sb g pi 
	{0x7f6a, &op_bfill,	 10,   6,   8, 0xff, 0x00, 0x04, 0x00}, // bfill sb g <literal> 
	{0x707a, &op_bfill,	 10,   7,   0, 0xff, 0x00, 0x00, 0x00}, // bfill sb h a 
	{0x717a, &op_bfill,	 10,   7,   1, 0xff, 0x00, 0x00, 0x00}, // bfill sb h b 
	{0x727a, &op_bfill,	 10,   7,   2, 0xff, 0x00, 0x00, 0x00}, // bfill sb h c 
	{0x737a, &op_bfill,	 10,   7,   3, 0xff, 0x00, 0x00, 0x00}, // bfill sb h d 
	{0x747a, &op_bfill,	 10,   7,   4, 0xff, 0x00, 0x00, 0x00}, // bfill sb h e 
	{0x757a, &op_bfill,	 10,   7,   5, 0xff, 0x00, 0x00, 0x00}, // bfill sb h f 
	{0x767a, &op_bfill,	 10,   7,   6, 0xff, 0x00, 0x00, 0x00}, // bfill sb h g 
	{0x777a, &op_bfill,	 10,   7,   7, 0xff, 0x00, 0x00, 0x00}, // bfill sb h h 
	{0x787a, &op_bfill,	 10,   7,   8, 0xff, 0x00, 0x00, 0x00}, // bfill sb h pc 
	{0x797a, &op_bfill,	 10,   7,   9, 0xff, 0x00, 0x00, 0x00}, // bfill sb h ra 
	{0x7a7a, &op_bfill,	 10,   7,  10, 0xff, 0x00, 0x00, 0x00}, // bfill sb h sb 
	{0x7b7a, &op_bfill,	 10,   7,  11, 0xff, 0x00, 0x00, 0x00}, // bfill sb h sp 
	{0x7c7a, &op_bfill,	 10,   7,  12, 0xff, 0x00, 0x00, 0x00}, // bfill sb h db 
	{0x7d7a, &op_bfill,	 10,   7,  13, 0xff, 0x00, 0x00, 0x00}, // bfill sb h cb 
	{0x7e7a, &op_bfill,	 10,   7,  14, 0xff, 0x00, 0x00, 0x00}, // bfill sb h pi 
	{0x7f7a, &op_bfill,	 10,   7,   8, 0xff, 0x00, 0x04, 0x00}, // bfill sb h <literal> 
	{0x708a, &op_bfill,	 10,   8,   0, 0xff, 0x00, 0x00, 0x00}, // bfill sb pc a 
	{0x718a, &op_bfill,	 10,   8,   1, 0xff, 0x00, 0x00, 0x00}, // bfill sb pc b 
	{0x728a, &op_bfill,	 10,   8,   2, 0xff, 0x00, 0x00, 0x00}, // bfill sb pc c 
	{0x738a, &op_bfill,	 10,   8,   3, 0xff, 0x00, 0x00, 0x00}, // bfill sb pc d 
	{0x748a, &op_bfill,	 10,   8,   4, 0xff, 0x00, 0x00, 0x00}, // bfill sb pc e 
	{0x758a, &op_bfill,	 10,   8,   5, 0xff, 0x00, 0x00, 0x00}, // bfill sb pc f 
	{0x768a, &op_bfill,	 10,   8,   6, 0xff, 0x00, 0x00, 0x00}, // bfill sb pc g 
	{0x778a, &op_bfill,	 10,   8,   7, 0xff, 0x00, 0x00, 0x00}, // bfill sb pc h 
	{0x788a, &op_bfill,	 10,   8,   8, 0xff, 0x00, 0x00, 0x00}, // bfill sb pc pc 
	{0x798a, &op_bfill,	 10,   8,   9, 0xff, 0x00, 0x00, 0x00}, // bfill sb pc ra 
	{0x7a8a, &op_bfill,	 10,   8,  10, 0xff, 0x00, 0x00, 0x00}, // bfill sb pc sb 
	{0x7b8a, &op_bfill,	 10,   8,  11, 0xff, 0x00, 0x00, 0x00}, // bfill sb pc sp 
	{0x7c8a, &op_bfill,	 10,   8,  12, 0xff, 0x00, 0x00, 0x00}, // bfill sb pc db 
	{0x7d8a, &op_bfill,	 10,   8,  13, 0xff, 0x00, 0x00, 0x00}, // bfill sb pc cb 
	{0x7e8a, &op_bfill,	 10,   8,  14, 0xff, 0x00, 0x00, 0x00}, // bfill sb pc pi 
	{0x7f8a, &op_bfill,	 10,   8,   8, 0xff, 0x00, 0x04, 0x00}, // bfill sb pc <literal> 
	{0x709a, &op_bfill,	 10,   9,   0, 0xff, 0x00, 0x00, 0x00}, // bfill sb ra a 
	{0x719a, &op_bfill,	 10,   9,   1, 0xff, 0x00, 0x00, 0x00}, // bfill sb ra b 
	{0x729a, &op_bfill,	 10,   9,   2, 0xff, 0x00, 0x00, 0x00}, // bfill sb ra c 
	{0x739a, &op_bfill,	 10,   9,   3, 0xff, 0x00, 0x00, 0x00}, // bfill sb ra d 
	{0x749a, &op_bfill,	 10,   9,   4, 0xff, 0x00, 0x00, 0x00}, // bfill sb ra e 
	{0x759a, &op_bfill,	 10,   9,   5, 0xff, 0x00, 0x00, 0x00}, // bfill sb ra f 
	{0x769a, &op_bfill,	 10,   9,   6, 0xff, 0x00, 0x00, 0x00}, // bfill sb ra g 
	{0x779a, &op_bfill,	 10,   9,   7, 0xff, 0x00, 0x00, 0x00}, // bfill sb ra h 
	{0x789a, &op_bfill,	 10,   9,   8, 0xff, 0x00, 0x00, 0x00}, // bfill sb ra pc 
	{0x799a, &op_bfill,	 10,   9,   9, 0xff, 0x00, 0x00, 0x00}, // bfill sb ra ra 
	{0x7a9a, &op_bfill,	 10,   9,  10, 0xff, 0x00, 0x00, 0x00}, // bfill sb ra sb 
	{0x7b9a, &op_bfill,	 10,   9,  11, 0xff, 0x00, 0x00, 0x00}, // bfill sb ra sp 
	{0x7c9a, &op_bfill,	 10,   9,  12, 0xff, 0x00, 0x00, 0x00}, // bfill sb ra db 
	{0x7d9a, &op_bfill,	 10,   9,  13, 0xff, 0x00, 0x00, 0x00}, // bfill sb ra cb 
	{0x7e9a, &op_bfill,	 10,   9,  14, 0xff, 0x00, 0x00, 0x00}, // bfill sb ra pi 
	{0x7f9a, &op_bfill,	 10,   9,   8, 0xff, 0x00, 0x04, 0x00}, // bfill sb ra <literal> 
	{0x70aa, &op_bfill,	 10,  10,   0, 0xff, 0x00, 0x00, 0x00}, // bfill sb sb a 
	{0x71aa, &op_bfill,	 10,  10,   1, 0xff, 0x00, 0x00, 0x00}, // bfill sb sb b 
	{0x72aa, &op_bfill,	 10,  10,   2, 0xff, 0x00, 0x00, 0x00}, // bfill sb sb c 
	{0x73aa, &op_bfill,	 10,  10,   3, 0xff, 0x00, 0x00, 0x00}, // bfill sb sb d 
	{0x74aa, &op_bfill,	 10,  10,   4, 0xff, 0x00, 0x00, 0x00}, // bfill sb sb e 
	{0x75aa, &op_bfill,	 10,  10,   5, 0xff, 0x00, 0x00, 0x00}, // bfill sb sb f 
	{0x76aa, &op_bfill,	 10,  10,   6, 0xff, 0x00, 0x00, 0x00}, // bfill sb sb g 
	{0x77aa, &op_bfill,	 10,  10,   7, 0xff, 0x00, 0x00, 0x00}, // bfill sb sb h 
	{0x78aa, &op_bfill,	 10,  10,   8, 0xff, 0x00, 0x00, 0x00}, // bfill sb sb pc 
	{0x79aa, &op_bfill,	 10,  10,   9, 0xff, 0x00, 0x00, 0x00}, // bfill sb sb ra 
	{0x7aaa, &op_bfill,	 10,  10,  10, 0xff, 0x00, 0x00, 0x00}, // bfill sb sb sb 
	{0x7baa, &op_bfill,	 10,  10,  11, 0xff, 0x00, 0x00, 0x00}, // bfill sb sb sp 
	{0x7caa, &op_bfill,	 10,  10,  12, 0xff, 0x00, 0x00, 0x00}, // bfill sb sb db 
	{0x7daa, &op_bfill,	 10,  10,  13, 0xff, 0x00, 0x00, 0x00}, // bfill sb sb cb 
	{0x7eaa, &op_bfill,	 10,  10,  14, 0xff, 0x00, 0x00, 0x00}, // bfill sb sb pi 
	{0x7faa, &op_bfill,	 10,  10,   8, 0xff, 0x00, 0x04, 0x00}, // bfill sb sb <literal> 
	{0x70ba, &op_bfill,	 10,  11,   0, 0xff, 0x00, 0x00, 0x00}, // bfill sb sp a 
	{0x71ba, &op_bfill,	 10,  11,   1, 0xff, 0x00, 0x00, 0x00}, // bfill sb sp b 
	{0x72ba, &op_bfill,	 10,  11,   2, 0xff, 0x00, 0x00, 0x00}, // bfill sb sp c 
	{0x73ba, &op_bfill,	 10,  11,   3, 0xff, 0x00, 0x00, 0x00}, // bfill sb sp d 
	{0x74ba, &op_bfill,	 10,  11,   4, 0xff, 0x00, 0x00, 0x00}, // bfill sb sp e 
	{0x75ba, &op_bfill,	 10,  11,   5, 0xff, 0x00, 0x00, 0x00}, // bfill sb sp f 
	{0x76ba, &op_bfill,	 10,  11,   6, 0xff, 0x00, 0x00, 0x00}, // bfill sb sp g 
	{0x77ba, &op_bfill,	 10,  11,   7, 0xff, 0x00, 0x00, 0x00}, // bfill sb sp h 
	{0x78ba, &op_bfill,	 10,  11,   8, 0xff, 0x00, 0x00, 0x00}, // bfill sb sp pc 
	{0x79ba, &op_bfill,	 10,  11,   9, 0xff, 0x00, 0x00, 0x00}, // bfill sb sp ra 
	{0x7aba, &op_bfill,	 10,  11,  10, 0xff, 0x00, 0x00, 0x00}, // bfill sb sp sb 
	{0x7bba, &op_bfill,	 10,  11,  11, 0xff, 0x00, 0x00, 0x00}, // bfill sb sp sp 
	{0x7cba, &op_bfill,	 10,  11,  12, 0xff, 0x00, 0x00, 0x00}, // bfill sb sp db 
	{0x7dba, &op_bfill,	 10,  11,  13, 0xff, 0x00, 0x00, 0x00}, // bfill sb sp cb 
	{0x7eba, &op_bfill,	 10,  11,  14, 0xff, 0x00, 0x00, 0x00}, // bfill sb sp pi 
	{0x7fba, &op_bfill,	 10,  11,   8, 0xff, 0x00, 0x04, 0x00}, // bfill sb sp <literal> 
	{0x70ca, &op_bfill,	 10,  12,   0, 0xff, 0x00, 0x00, 0x00}, // bfill sb db a 
	{0x71ca, &op_bfill,	 10,  12,   1, 0xff, 0x00, 0x00, 0x00}, // bfill sb db b 
	{0x72ca, &op_bfill,	 10,  12,   2, 0xff, 0x00, 0x00, 0x00}, // bfill sb db c 
	{0x73ca, &op_bfill,	 10,  12,   3, 0xff, 0x00, 0x00, 0x00}, // bfill sb db d 
	{0x74ca, &op_bfill,	 10,  12,   4, 0xff, 0x00, 0x00, 0x00}, // bfill sb db e 
	{0x75ca, &op_bfill,	 10,  12,   5, 0xff, 0x00, 0x00, 0x00}, // bfill sb db f 
	{0x76ca, &op_bfill,	 10,  12,   6, 0xff, 0x00, 0x00, 0x00}, // bfill sb db g 
	{0x77ca, &op_bfill,	 10,  12,   7, 0xff, 0x00, 0x00, 0x00}, // bfill sb db h 
	{0x78ca, &op_bfill,	 10,  12,   8, 0xff, 0x00, 0x00, 0x00}, // bfill sb db pc 
	{0x79ca, &op_bfill,	 10,  12,   9, 0xff, 0x00, 0x00, 0x00}, // bfill sb db ra 
	{0x7aca, &op_bfill,	 10,  12,  10, 0xff, 0x00, 0x00, 0x00}, // bfill sb db sb 
	{0x7bca, &op_bfill,	 10,  12,  11, 0xff, 0x00, 0x00, 0x00}, // bfill sb db sp 
	{0x7cca, &op_bfill,	 10,  12,  12, 0xff, 0x00, 0x00, 0x00}, // bfill sb db db 
	{0x7dca, &op_bfill,	 10,  12,  13, 0xff, 0x00, 0x00, 0x00}, // bfill sb db cb 
	{0x7eca, &op_bfill,	 10,  12,  14, 0xff, 0x00, 0x00, 0x00}, // bfill sb db pi 
	{0x7fca, &op_bfill,	 10,  12,   8, 0xff, 0x00, 0x04, 0x00}, // bfill sb db <literal> 
	{0x70da, &op_bfill,	 10,  13,   0, 0xff, 0x00, 0x00, 0x00}, // bfill sb cb a 
	{0x71da, &op_bfill,	 10,  13,   1, 0xff, 0x00, 0x00, 0x00}, // bfill sb cb b 
	{0x72da, &op_bfill,	 10,  13,   2, 0xff, 0x00, 0x00, 0x00}, // bfill sb cb c 
	{0x73da, &op_bfill,	 10,  13,   3, 0xff, 0x00, 0x00, 0x00}, // bfill sb cb d 
	{0x74da, &op_bfill,	 10,  13,   4, 0xff, 0x00, 0x00, 0x00}, // bfill sb cb e 
	{0x75da, &op_bfill,	 10,  13,   5, 0xff, 0x00, 0x00, 0x00}, // bfill sb cb f 
	{0x76da, &op_bfill,	 10,  13,   6, 0xff, 0x00, 0x00, 0x00}, // bfill sb cb g 
	{0x77da, &op_bfill,	 10,  13,   7, 0xff, 0x00, 0x00, 0x00}, // bfill sb cb h 
	{0x78da, &op_bfill,	 10,  13,   8, 0xff, 0x00, 0x00, 0x00}, // bfill sb cb pc 
	{0x79da, &op_bfill,	 10,  13,   9, 0xff, 0x00, 0x00, 0x00}, // bfill sb cb ra 
	{0x7ada, &op_bfill,	 10,  13,  10, 0xff, 0x00, 0x00, 0x00}, // bfill sb cb sb 
	{0x7bda, &op_bfill,	 10,  13,  11, 0xff, 0x00, 0x00, 0x00}, // bfill sb cb sp 
	{0x7cda, &op_bfill,	 10,  13,  12, 0xff, 0x00, 0x00, 0x00}, // bfill sb cb db 
	{0x7dda, &op_bfill,	 10,  13,  13, 0xff, 0x00, 0x00, 0x00}, // bfill sb cb cb 
	{0x7eda, &op_bfill,	 10,  13,  14, 0xff, 0x00, 0x00, 0x00}, // bfill sb cb pi 
	{0x7fda, &op_bfill,	 10,  13,   8, 0xff, 0x00, 0x04, 0x00}, // bfill sb cb <literal> 
	{0x70ea, &op_bfill,	 10,  14,   0, 0xff, 0x00, 0x00, 0x00}, // bfill sb pi a 
	{0x71ea, &op_bfill,	 10,  14,   1, 0xff, 0x00, 0x00, 0x00}, // bfill sb pi b 
	{0x72ea, &op_bfill,	 10,  14,   2, 0xff, 0x00, 0x00, 0x00}, // bfill sb pi c 
	{0x73ea, &op_bfill,	 10,  14,   3, 0xff, 0x00, 0x00, 0x00}, // bfill sb pi d 
	{0x74ea, &op_bfill,	 10,  14,   4, 0xff, 0x00, 0x00, 0x00}, // bfill sb pi e 
	{0x75ea, &op_bfill,	 10,  14,   5, 0xff, 0x00, 0x00, 0x00}, // bfill sb pi f 
	{0x76ea, &op_bfill,	 10,  14,   6, 0xff, 0x00, 0x00, 0x00}, // bfill sb pi g 
	{0x77ea, &op_bfill,	 10,  14,   7, 0xff, 0x00, 0x00, 0x00}, // bfill sb pi h 
	{0x78ea, &op_bfill,	 10,  14,   8, 0xff, 0x00, 0x00, 0x00}, // bfill sb pi pc 
	{0x79ea, &op_bfill,	 10,  14,   9, 0xff, 0x00, 0x00, 0x00}, // bfill sb pi ra 
	{0x7aea, &op_bfill,	 10,  14,  10, 0xff, 0x00, 0x00, 0x00}, // bfill sb pi sb 
	{0x7bea, &op_bfill,	 10,  14,  11, 0xff, 0x00, 0x00, 0x00}, // bfill sb pi sp 
	{0x7cea, &op_bfill,	 10,  14,  12, 0xff, 0x00, 0x00, 0x00}, // bfill sb pi db 
	{0x7dea, &op_bfill,	 10,  14,  13, 0xff, 0x00, 0x00, 0x00}, // bfill sb pi cb 
	{0x7eea, &op_bfill,	 10,  14,  14, 0xff, 0x00, 0x00, 0x00}, // bfill sb pi pi 
	{0x7fea, &op_bfill,	 10,  14,   8, 0xff, 0x00, 0x04, 0x00}, // bfill sb pi <literal> 
	{0x70fa, &op_bfill,	 10,  15,   0, 0xff, 0x00, 0x00, 0x00}, // bfill sb status a 
	{0x71fa, &op_bfill,	 10,  15,   1, 0xff, 0x00, 0x00, 0x00}, // bfill sb status b 
	{0x72fa, &op_bfill,	 10,  15,   2, 0xff, 0x00, 0x00, 0x00}, // bfill sb status c 
	{0x73fa, &op_bfill,	 10,  15,   3, 0xff, 0x00, 0x00, 0x00}, // bfill sb status d 
	{0x74fa, &op_bfill,	 10,  15,   4, 0xff, 0x00, 0x00, 0x00}, // bfill sb status e 
	{0x75fa, &op_bfill,	 10,  15,   5, 0xff, 0x00, 0x00, 0x00}, // bfill sb status f 
	{0x76fa, &op_bfill,	 10,  15,   6, 0xff, 0x00, 0x00, 0x00}, // bfill sb status g 
	{0x77fa, &op_bfill,	 10,  15,   7, 0xff, 0x00, 0x00, 0x00}, // bfill sb status h 
	{0x78fa, &op_bfill,	 10,  15,   8, 0xff, 0x00, 0x00, 0x00}, // bfill sb status pc 
	{0x79fa, &op_bfill,	 10,  15,   9, 0xff, 0x00, 0x00, 0x00}, // bfill sb status ra 
	{0x7afa, &op_bfill,	 10,  15,  10, 0xff, 0x00, 0x00, 0x00}, // bfill sb status sb 
	{0x7bfa, &op_bfill,	 10,  15,  11, 0xff, 0x00, 0x00, 0x00}, // bfill sb status sp 
	{0x7cfa, &op_bfill,	 10,  15,  12, 0xff, 0x00, 0x00, 0x00}, // bfill sb status db 
	{0x7dfa, &op_bfill,	 10,  15,  13, 0xff, 0x00, 0x00, 0x00}, // bfill sb status cb 
	{0x7efa, &op_bfill,	 10,  15,  14, 0xff, 0x00, 0x00, 0x00}, // bfill sb status pi 
	{0x7ffa, &op_bfill,	 10,  15,   8, 0xff, 0x00, 0x04, 0x00}, // bfill sb status <literal> 
	{0x700b, &op_bfill,	 11,   0,   0, 0xff, 0x00, 0x00, 0x00}, // bfill sp a a 
	{0x710b, &op_bfill,	 11,   0,   1, 0xff, 0x00, 0x00, 0x00}, // bfill sp a b 
	{0x720b, &op_bfill,	 11,   0,   2, 0xff, 0x00, 0x00, 0x00}, // bfill sp a c 
	{0x730b, &op_bfill,	 11,   0,   3, 0xff, 0x00, 0x00, 0x00}, // bfill sp a d 
	{0x740b, &op_bfill,	 11,   0,   4, 0xff, 0x00, 0x00, 0x00}, // bfill sp a e 
	{0x750b, &op_bfill,	 11,   0,   5, 0xff, 0x00, 0x00, 0x00}, // bfill sp a f 
	{0x760b, &op_bfill,	 11,   0,   6, 0xff, 0x00, 0x00, 0x00}, // bfill sp a g 
	{0x770b, &op_bfill,	 11,   0,   7, 0xff, 0x00, 0x00, 0x00}, // bfill sp a h 
	{0x780b, &op_bfill,	 11,   0,   8, 0xff, 0x00, 0x00, 0x00}, // bfill sp a pc 
	{0x790b, &op_bfill,	 11,   0,   9, 0xff, 0x00, 0x00, 0x00}, // bfill sp a ra 
	{0x7a0b, &op_bfill,	 11,   0,  10, 0xff, 0x00, 0x00, 0x00}, // bfill sp a sb 
	{0x7b0b, &op_bfill,	 11,   0,  11, 0xff, 0x00, 0x00, 0x00}, // bfill sp a sp 
	{0x7c0b, &op_bfill,	 11,   0,  12, 0xff, 0x00, 0x00, 0x00}, // bfill sp a db 
	{0x7d0b, &op_bfill,	 11,   0,  13, 0xff, 0x00, 0x00, 0x00}, // bfill sp a cb 
	{0x7e0b, &op_bfill,	 11,   0,  14, 0xff, 0x00, 0x00, 0x00}, // bfill sp a pi 
	{0x7f0b, &op_bfill,	 11,   0,   8, 0xff, 0x00, 0x04, 0x00}, // bfill sp a <literal> 
	{0x701b, &op_bfill,	 11,   1,   0, 0xff, 0x00, 0x00, 0x00}, // bfill sp b a 
	{0x711b, &op_bfill,	 11,   1,   1, 0xff, 0x00, 0x00, 0x00}, // bfill sp b b 
	{0x721b, &op_bfill,	 11,   1,   2, 0xff, 0x00, 0x00, 0x00}, // bfill sp b c 
	{0x731b, &op_bfill,	 11,   1,   3, 0xff, 0x00, 0x00, 0x00}, // bfill sp b d 
	{0x741b, &op_bfill,	 11,   1,   4, 0xff, 0x00, 0x00, 0x00}, // bfill sp b e 
	{0x751b, &op_bfill,	 11,   1,   5, 0xff, 0x00, 0x00, 0x00}, // bfill sp b f 
	{0x761b, &op_bfill,	 11,   1,   6, 0xff, 0x00, 0x00, 0x00}, // bfill sp b g 
	{0x771b, &op_bfill,	 11,   1,   7, 0xff, 0x00, 0x00, 0x00}, // bfill sp b h 
	{0x781b, &op_bfill,	 11,   1,   8, 0xff, 0x00, 0x00, 0x00}, // bfill sp b pc 
	{0x791b, &op_bfill,	 11,   1,   9, 0xff, 0x00, 0x00, 0x00}, // bfill sp b ra 
	{0x7a1b, &op_bfill,	 11,   1,  10, 0xff, 0x00, 0x00, 0x00}, // bfill sp b sb 
	{0x7b1b, &op_bfill,	 11,   1,  11, 0xff, 0x00, 0x00, 0x00}, // bfill sp b sp 
	{0x7c1b, &op_bfill,	 11,   1,  12, 0xff, 0x00, 0x00, 0x00}, // bfill sp b db 
	{0x7d1b, &op_bfill,	 11,   1,  13, 0xff, 0x00, 0x00, 0x00}, // bfill sp b cb 
	{0x7e1b, &op_bfill,	 11,   1,  14, 0xff, 0x00, 0x00, 0x00}, // bfill sp b pi 
	{0x7f1b, &op_bfill,	 11,   1,   8, 0xff, 0x00, 0x04, 0x00}, // bfill sp b <literal> 
	{0x702b, &op_bfill,	 11,   2,   0, 0xff, 0x00, 0x00, 0x00}, // bfill sp c a 
	{0x712b, &op_bfill,	 11,   2,   1, 0xff, 0x00, 0x00, 0x00}, // bfill sp c b 
	{0x722b, &op_bfill,	 11,   2,   2, 0xff, 0x00, 0x00, 0x00}, // bfill sp c c 
	{0x732b, &op_bfill,	 11,   2,   3, 0xff, 0x00, 0x00, 0x00}, // bfill sp c d 
	{0x742b, &op_bfill,	 11,   2,   4, 0xff, 0x00, 0x00, 0x00}, // bfill sp c e 
	{0x752b, &op_bfill,	 11,   2,   5, 0xff, 0x00, 0x00, 0x00}, // bfill sp c f 
	{0x762b, &op_bfill,	 11,   2,   6, 0xff, 0x00, 0x00, 0x00}, // bfill sp c g 
	{0x772b, &op_bfill,	 11,   2,   7, 0xff, 0x00, 0x00, 0x00}, // bfill sp c h 
	{0x782b, &op_bfill,	 11,   2,   8, 0xff, 0x00, 0x00, 0x00}, // bfill sp c pc 
	{0x792b, &op_bfill,	 11,   2,   9, 0xff, 0x00, 0x00, 0x00}, // bfill sp c ra 
	{0x7a2b, &op_bfill,	 11,   2,  10, 0xff, 0x00, 0x00, 0x00}, // bfill sp c sb 
	{0x7b2b, &op_bfill,	 11,   2,  11, 0xff, 0x00, 0x00, 0x00}, // bfill sp c sp 
	{0x7c2b, &op_bfill,	 11,   2,  12, 0xff, 0x00, 0x00, 0x00}, // bfill sp c db 
	{0x7d2b, &op_bfill,	 11,   2,  13, 0xff, 0x00, 0x00, 0x00}, // bfill sp c cb 
	{0x7e2b, &op_bfill,	 11,   2,  14, 0xff, 0x00, 0x00, 0x00}, // bfill sp c pi 
	{0x7f2b, &op_bfill,	 11,   2,   8, 0xff, 0x00, 0x04, 0x00}, // bfill sp c <literal> 
	{0x703b, &op_bfill,	 11,   3,   0, 0xff, 0x00, 0x00, 0x00}, // bfill sp d a 
	{0x713b, &op_bfill,	 11,   3,   1, 0xff, 0x00, 0x00, 0x00}, // bfill sp d b 
	{0x723b, &op_bfill,	 11,   3,   2, 0xff, 0x00, 0x00, 0x00}, // bfill sp d c 
	{0x733b, &op_bfill,	 11,   3,   3, 0xff, 0x00, 0x00, 0x00}, // bfill sp d d 
	{0x743b, &op_bfill,	 11,   3,   4, 0xff, 0x00, 0x00, 0x00}, // bfill sp d e 
	{0x753b, &op_bfill,	 11,   3,   5, 0xff, 0x00, 0x00, 0x00}, // bfill sp d f 
	{0x763b, &op_bfill,	 11,   3,   6, 0xff, 0x00, 0x00, 0x00}, // bfill sp d g 
	{0x773b, &op_bfill,	 11,   3,   7, 0xff, 0x00, 0x00, 0x00}, // bfill sp d h 
	{0x783b, &op_bfill,	 11,   3,   8, 0xff, 0x00, 0x00, 0x00}, // bfill sp d pc 
	{0x793b, &op_bfill,	 11,   3,   9, 0xff, 0x00, 0x00, 0x00}, // bfill sp d ra 
	{0x7a3b, &op_bfill,	 11,   3,  10, 0xff, 0x00, 0x00, 0x00}, // bfill sp d sb 
	{0x7b3b, &op_bfill,	 11,   3,  11, 0xff, 0x00, 0x00, 0x00}, // bfill sp d sp 
	{0x7c3b, &op_bfill,	 11,   3,  12, 0xff, 0x00, 0x00, 0x00}, // bfill sp d db 
	{0x7d3b, &op_bfill,	 11,   3,  13, 0xff, 0x00, 0x00, 0x00}, // bfill sp d cb 
	{0x7e3b, &op_bfill,	 11,   3,  14, 0xff, 0x00, 0x00, 0x00}, // bfill sp d pi 
	{0x7f3b, &op_bfill,	 11,   3,   8, 0xff, 0x00, 0x04, 0x00}, // bfill sp d <literal> 
	{0x704b, &op_bfill,	 11,   4,   0, 0xff, 0x00, 0x00, 0x00}, // bfill sp e a 
	{0x714b, &op_bfill,	 11,   4,   1, 0xff, 0x00, 0x00, 0x00}, // bfill sp e b 
	{0x724b, &op_bfill,	 11,   4,   2, 0xff, 0x00, 0x00, 0x00}, // bfill sp e c 
	{0x734b, &op_bfill,	 11,   4,   3, 0xff, 0x00, 0x00, 0x00}, // bfill sp e d 
	{0x744b, &op_bfill,	 11,   4,   4, 0xff, 0x00, 0x00, 0x00}, // bfill sp e e 
	{0x754b, &op_bfill,	 11,   4,   5, 0xff, 0x00, 0x00, 0x00}, // bfill sp e f 
	{0x764b, &op_bfill,	 11,   4,   6, 0xff, 0x00, 0x00, 0x00}, // bfill sp e g 
	{0x774b, &op_bfill,	 11,   4,   7, 0xff, 0x00, 0x00, 0x00}, // bfill sp e h 
	{0x784b, &op_bfill,	 11,   4,   8, 0xff, 0x00, 0x00, 0x00}, // bfill sp e pc 
	{0x794b, &op_bfill,	 11,   4,   9, 0xff, 0x00, 0x00, 0x00}, // bfill sp e ra 
	{0x7a4b, &op_bfill,	 11,   4,  10, 0xff, 0x00, 0x00, 0x00}, // bfill sp e sb 
	{0x7b4b, &op_bfill,	 11,   4,  11, 0xff, 0x00, 0x00, 0x00}, // bfill sp e sp 
	{0x7c4b, &op_bfill,	 11,   4,  12, 0xff, 0x00, 0x00, 0x00}, // bfill sp e db 
	{0x7d4b, &op_bfill,	 11,   4,  13, 0xff, 0x00, 0x00, 0x00}, // bfill sp e cb 
	{0x7e4b, &op_bfill,	 11,   4,  14, 0xff, 0x00, 0x00, 0x00}, // bfill sp e pi 
	{0x7f4b, &op_bfill,	 11,   4,   8, 0xff, 0x00, 0x04, 0x00}, // bfill sp e <literal> 
	{0x705b, &op_bfill,	 11,   5,   0, 0xff, 0x00, 0x00, 0x00}, // bfill sp f a 
	{0x715b, &op_bfill,	 11,   5,   1, 0xff, 0x00, 0x00, 0x00}, // bfill sp f b 
	{0x725b, &op_bfill,	 11,   5,   2, 0xff, 0x00, 0x00, 0x00}, // bfill sp f c 
	{0x735b, &op_bfill,	 11,   5,   3, 0xff, 0x00, 0x00, 0x00}, // bfill sp f d 
	{0x745b, &op_bfill,	 11,   5,   4, 0xff, 0x00, 0x00, 0x00}, // bfill sp f e 
	{0x755b, &op_bfill,	 11,   5,   5, 0xff, 0x00, 0x00, 0x00}, // bfill sp f f 
	{0x765b, &op_bfill,	 11,   5,   6, 0xff, 0x00, 0x00, 0x00}, // bfill sp f g 
	{0x775b, &op_bfill,	 11,   5,   7, 0xff, 0x00, 0x00, 0x00}, // bfill sp f h 
	{0x785b, &op_bfill,	 11,   5,   8, 0xff, 0x00, 0x00, 0x00}, // bfill sp f pc 
	{0x795b, &op_bfill,	 11,   5,   9, 0xff, 0x00, 0x00, 0x00}, // bfill sp f ra 
	{0x7a5b, &op_bfill,	 11,   5,  10, 0xff, 0x00, 0x00, 0x00}, // bfill sp f sb 
	{0x7b5b, &op_bfill,	 11,   5,  11, 0xff, 0x00, 0x00, 0x00}, // bfill sp f sp 
	{0x7c5b, &op_bfill,	 11,   5,  12, 0xff, 0x00, 0x00, 0x00}, // bfill sp f db 
	{0x7d5b, &op_bfill,	 11,   5,  13, 0xff, 0x00, 0x00, 0x00}, // bfill sp f cb 
	{0x7e5b, &op_bfill,	 11,   5,  14, 0xff, 0x00, 0x00, 0x00}, // bfill sp f pi 
	{0x7f5b, &op_bfill,	 11,   5,   8, 0xff, 0x00, 0x04, 0x00}, // bfill sp f <literal> 
	{0x706b, &op_bfill,	 11,   6,   0, 0xff, 0x00, 0x00, 0x00}, // bfill sp g a 
	{0x716b, &op_bfill,	 11,   6,   1, 0xff, 0x00, 0x00, 0x00}, // bfill sp g b 
	{0x726b, &op_bfill,	 11,   6,   2, 0xff, 0x00, 0x00, 0x00}, // bfill sp g c 
	{0x736b, &op_bfill,	 11,   6,   3, 0xff, 0x00, 0x00, 0x00}, // bfill sp g d 
	{0x746b, &op_bfill,	 11,   6,   4, 0xff, 0x00, 0x00, 0x00}, // bfill sp g e 
	{0x756b, &op_bfill,	 11,   6,   5, 0xff, 0x00, 0x00, 0x00}, // bfill sp g f 
	{0x766b, &op_bfill,	 11,   6,   6, 0xff, 0x00, 0x00, 0x00}, // bfill sp g g 
	{0x776b, &op_bfill,	 11,   6,   7, 0xff, 0x00, 0x00, 0x00}, // bfill sp g h 
	{0x786b, &op_bfill,	 11,   6,   8, 0xff, 0x00, 0x00, 0x00}, // bfill sp g pc 
	{0x796b, &op_bfill,	 11,   6,   9, 0xff, 0x00, 0x00, 0x00}, // bfill sp g ra 
	{0x7a6b, &op_bfill,	 11,   6,  10, 0xff, 0x00, 0x00, 0x00}, // bfill sp g sb 
	{0x7b6b, &op_bfill,	 11,   6,  11, 0xff, 0x00, 0x00, 0x00}, // bfill sp g sp 
	{0x7c6b, &op_bfill,	 11,   6,  12, 0xff, 0x00, 0x00, 0x00}, // bfill sp g db 
	{0x7d6b, &op_bfill,	 11,   6,  13, 0xff, 0x00, 0x00, 0x00}, // bfill sp g cb 
	{0x7e6b, &op_bfill,	 11,   6,  14, 0xff, 0x00, 0x00, 0x00}, // bfill sp g pi 
	{0x7f6b, &op_bfill,	 11,   6,   8, 0xff, 0x00, 0x04, 0x00}, // bfill sp g <literal> 
	{0x707b, &op_bfill,	 11,   7,   0, 0xff, 0x00, 0x00, 0x00}, // bfill sp h a 
	{0x717b, &op_bfill,	 11,   7,   1, 0xff, 0x00, 0x00, 0x00}, // bfill sp h b 
	{0x727b, &op_bfill,	 11,   7,   2, 0xff, 0x00, 0x00, 0x00}, // bfill sp h c 
	{0x737b, &op_bfill,	 11,   7,   3, 0xff, 0x00, 0x00, 0x00}, // bfill sp h d 
	{0x747b, &op_bfill,	 11,   7,   4, 0xff, 0x00, 0x00, 0x00}, // bfill sp h e 
	{0x757b, &op_bfill,	 11,   7,   5, 0xff, 0x00, 0x00, 0x00}, // bfill sp h f 
	{0x767b, &op_bfill,	 11,   7,   6, 0xff, 0x00, 0x00, 0x00}, // bfill sp h g 
	{0x777b, &op_bfill,	 11,   7,   7, 0xff, 0x00, 0x00, 0x00}, // bfill sp h h 
	{0x787b, &op_bfill,	 11,   7,   8, 0xff, 0x00, 0x00, 0x00}, // bfill sp h pc 
	{0x797b, &op_bfill,	 11,   7,   9, 0xff, 0x00, 0x00, 0x00}, // bfill sp h ra 
	{0x7a7b, &op_bfill,	 11,   7,  10, 0xff, 0x00, 0x00, 0x00}, // bfill sp h sb 
	{0x7b7b, &op_bfill,	 11,   7,  11, 0xff, 0x00, 0x00, 0x00}, // bfill sp h sp 
	{0x7c7b, &op_bfill,	 11,   7,  12, 0xff, 0x00, 0x00, 0x00}, // bfill sp h db 
	{0x7d7b, &op_bfill,	 11,   7,  13, 0xff, 0x00, 0x00, 0x00}, // bfill sp h cb 
	{0x7e7b, &op_bfill,	 11,   7,  14, 0xff, 0x00, 0x00, 0x00}, // bfill sp h pi 
	{0x7f7b, &op_bfill,	 11,   7,   8, 0xff, 0x00, 0x04, 0x00}, // bfill sp h <literal> 
	{0x708b, &op_bfill,	 11,   8,   0, 0xff, 0x00, 0x00, 0x00}, // bfill sp pc a 
	{0x718b, &op_bfill,	 11,   8,   1, 0xff, 0x00, 0x00, 0x00}, // bfill sp pc b 
	{0x728b, &op_bfill,	 11,   8,   2, 0xff, 0x00, 0x00, 0x00}, // bfill sp pc c 
	{0x738b, &op_bfill,	 11,   8,   3, 0xff, 0x00, 0x00, 0x00}, // bfill sp pc d 
	{0x748b, &op_bfill,	 11,   8,   4, 0xff, 0x00, 0x00, 0x00}, // bfill sp pc e 
	{0x758b, &op_bfill,	 11,   8,   5, 0xff, 0x00, 0x00, 0x00}, // bfill sp pc f 
	{0x768b, &op_bfill,	 11,   8,   6, 0xff, 0x00, 0x00, 0x00}, // bfill sp pc g 
	{0x778b, &op_bfill,	 11,   8,   7, 0xff, 0x00, 0x00, 0x00}, // bfill sp pc h 
	{0x788b, &op_bfill,	 11,   8,   8, 0xff, 0x00, 0x00, 0x00}, // bfill sp pc pc 
	{0x798b, &op_bfill,	 11,   8,   9, 0xff, 0x00, 0x00, 0x00}, // bfill sp pc ra 
	{0x7a8b, &op_bfill,	 11,   8,  10, 0xff, 0x00, 0x00, 0x00}, // bfill sp pc sb 
	{0x7b8b, &op_bfill,	 11,   8,  11, 0xff, 0x00, 0x00, 0x00}, // bfill sp pc sp 
	{0x7c8b, &op_bfill,	 11,   8,  12, 0xff, 0x00, 0x00, 0x00}, // bfill sp pc db 
	{0x7d8b, &op_bfill,	 11,   8,  13, 0xff, 0x00, 0x00, 0x00}, // bfill sp pc cb 
	{0x7e8b, &op_bfill,	 11,   8,  14, 0xff, 0x00, 0x00, 0x00}, // bfill sp pc pi 
	{0x7f8b, &op_bfill,	 11,   8,   8, 0xff, 0x00, 0x04, 0x00}, // bfill sp pc <literal> 
	{0x709b, &op_bfill,	 11,   9,   0, 0xff, 0x00, 0x00, 0x00}, // bfill sp ra a 
	{0x719b, &op_bfill,	 11,   9,   1, 0xff, 0x00, 0x00, 0x00}, // bfill sp ra b 
	{0x729b, &op_bfill,	 11,   9,   2, 0xff, 0x00, 0x00, 0x00}, // bfill sp ra c 
	{0x739b, &op_bfill,	 11,   9,   3, 0xff, 0x00, 0x00, 0x00}, // bfill sp ra d 
	{0x749b, &op_bfill,	 11,   9,   4, 0xff, 0x00, 0x00, 0x00}, // bfill sp ra e 
	{0x759b, &op_bfill,	 11,   9,   5, 0xff, 0x00, 0x00, 0x00}, // bfill sp ra f 
	{0x769b, &op_bfill,	 11,   9,   6, 0xff, 0x00, 0x00, 0x00}, // bfill sp ra g 
	{0x779b, &op_bfill,	 11,   9,   7, 0xff, 0x00, 0x00, 0x00}, // bfill sp ra h 
	{0x789b, &op_bfill,	 11,   9,   8, 0xff, 0x00, 0x00, 0x00}, // bfill sp ra pc 
	{0x799b, &op_bfill,	 11,   9,   9, 0xff, 0x00, 0x00, 0x00}, // bfill sp ra ra 
	{0x7a9b, &op_bfill,	 11,   9,  10, 0xff, 0x00, 0x00, 0x00}, // bfill sp ra sb 
	{0x7b9b, &op_bfill,	 11,   9,  11, 0xff, 0x00, 0x00, 0x00}, // bfill sp ra sp 
	{0x7c9b, &op_bfill,	 11,   9,  12, 0xff, 0x00, 0x00, 0x00}, // bfill sp ra db 
	{0x7d9b, &op_bfill,	 11,   9,  13, 0xff, 0x00, 0x00, 0x00}, // bfill sp ra cb 
	{0x7e9b, &op_bfill,	 11,   9,  14, 0xff, 0x00, 0x00, 0x00}, // bfill sp ra pi 
	{0x7f9b, &op_bfill,	 11,   9,   8, 0xff, 0x00, 0x04, 0x00}, // bfill sp ra <literal> 
	{0x70ab, &op_bfill,	 11,  10,   0, 0xff, 0x00, 0x00, 0x00}, // bfill sp sb a 
	{0x71ab, &op_bfill,	 11,  10,   1, 0xff, 0x00, 0x00, 0x00}, // bfill sp sb b 
	{0x72ab, &op_bfill,	 11,  10,   2, 0xff, 0x00, 0x00, 0x00}, // bfill sp sb c 
	{0x73ab, &op_bfill,	 11,  10,   3, 0xff, 0x00, 0x00, 0x00}, // bfill sp sb d 
	{0x74ab, &op_bfill,	 11,  10,   4, 0xff, 0x00, 0x00, 0x00}, // bfill sp sb e 
	{0x75ab, &op_bfill,	 11,  10,   5, 0xff, 0x00, 0x00, 0x00}, // bfill sp sb f 
	{0x76ab, &op_bfill,	 11,  10,   6, 0xff, 0x00, 0x00, 0x00}, // bfill sp sb g 
	{0x77ab, &op_bfill,	 11,  10,   7, 0xff, 0x00, 0x00, 0x00}, // bfill sp sb h 
	{0x78ab, &op_bfill,	 11,  10,   8, 0xff, 0x00, 0x00, 0x00}, // bfill sp sb pc 
	{0x79ab, &op_bfill,	 11,  10,   9, 0xff, 0x00, 0x00, 0x00}, // bfill sp sb ra 
	{0x7aab, &op_bfill,	 11,  10,  10, 0xff, 0x00, 0x00, 0x00}, // bfill sp sb sb 
	{0x7bab, &op_bfill,	 11,  10,  11, 0xff, 0x00, 0x00, 0x00}, // bfill sp sb sp 
	{0x7cab, &op_bfill,	 11,  10,  12, 0xff, 0x00, 0x00, 0x00}, // bfill sp sb db 
	{0x7dab, &op_bfill,	 11,  10,  13, 0xff, 0x00, 0x00, 0x00}, // bfill sp sb cb 
	{0x7eab, &op_bfill,	 11,  10,  14, 0xff, 0x00, 0x00, 0x00}, // bfill sp sb pi 
	{0x7fab, &op_bfill,	 11,  10,   8, 0xff, 0x00, 0x04, 0x00}, // bfill sp sb <literal> 
	{0x70bb, &op_bfill,	 11,  11,   0, 0xff, 0x00, 0x00, 0x00}, // bfill sp sp a 
	{0x71bb, &op_bfill,	 11,  11,   1, 0xff, 0x00, 0x00, 0x00}, // bfill sp sp b 
	{0x72bb, &op_bfill,	 11,  11,   2, 0xff, 0x00, 0x00, 0x00}, // bfill sp sp c 
	{0x73bb, &op_bfill,	 11,  11,   3, 0xff, 0x00, 0x00, 0x00}, // bfill sp sp d 
	{0x74bb, &op_bfill,	 11,  11,   4, 0xff, 0x00, 0x00, 0x00}, // bfill sp sp e 
	{0x75bb, &op_bfill,	 11,  11,   5, 0xff, 0x00, 0x00, 0x00}, // bfill sp sp f 
	{0x76bb, &op_bfill,	 11,  11,   6, 0xff, 0x00, 0x00, 0x00}, // bfill sp sp g 
	{0x77bb, &op_bfill,	 11,  11,   7, 0xff, 0x00, 0x00, 0x00}, // bfill sp sp h 
	{0x78bb, &op_bfill,	 11,  11,   8, 0xff, 0x00, 0x00, 0x00}, // bfill sp sp pc 
	{0x79bb, &op_bfill,	 11,  11,   9, 0xff, 0x00, 0x00, 0x00}, // bfill sp sp ra 
	{0x7abb, &op_bfill,	 11,  11,  10, 0xff, 0x00, 0x00, 0x00}, // bfill sp sp sb 
	{0x7bbb, &op_bfill,	 11,  11,  11, 0xff, 0x00, 0x00, 0x00}, // bfill sp sp sp 
	{0x7cbb, &op_bfill,	 11,  11,  12, 0xff, 0x00, 0x00, 0x00}, // bfill sp sp db 
	{0x7dbb, &op_bfill,	 11,  11,  13, 0xff, 0x00, 0x00, 0x00}, // bfill sp sp cb 
	{0x7ebb, &op_bfill,	 11,  11,  14, 0xff, 0x00, 0x00, 0x00}, // bfill sp sp pi 
	{0x7fbb, &op_bfill,	 11,  11,   8, 0xff, 0x00, 0x04, 0x00}, // bfill sp sp <literal> 
	{0x70cb, &op_bfill,	 11,  12,   0, 0xff, 0x00, 0x00, 0x00}, // bfill sp db a 
	{0x71cb, &op_bfill,	 11,  12,   1, 0xff, 0x00, 0x00, 0x00}, // bfill sp db b 
	{0x72cb, &op_bfill,	 11,  12,   2, 0xff, 0x00, 0x00, 0x00}, // bfill sp db c 
	{0x73cb, &op_bfill,	 11,  12,   3, 0xff, 0x00, 0x00, 0x00}, // bfill sp db d 
	{0x74cb, &op_bfill,	 11,  12,   4, 0xff, 0x00, 0x00, 0x00}, // bfill sp db e 
	{0x75cb, &op_bfill,	 11,  12,   5, 0xff, 0x00, 0x00, 0x00}, // bfill sp db f 
	{0x76cb, &op_bfill,	 11,  12,   6, 0xff, 0x00, 0x00, 0x00}, // bfill sp db g 
	{0x77cb, &op_bfill,	 11,  12,   7, 0xff, 0x00, 0x00, 0x00}, // bfill sp db h 
	{0x78cb, &op_bfill,	 11,  12,   8, 0xff, 0x00, 0x00, 0x00}, // bfill sp db pc 
	{0x79cb, &op_bfill,	 11,  12,   9, 0xff, 0x00, 0x00, 0x00}, // bfill sp db ra 
	{0x7acb, &op_bfill,	 11,  12,  10, 0xff, 0x00, 0x00, 0x00}, // bfill sp db sb 
	{0x7bcb, &op_bfill,	 11,  12,  11, 0xff, 0x00, 0x00, 0x00}, // bfill sp db sp 
	{0x7ccb, &op_bfill,	 11,  12,  12, 0xff, 0x00, 0x00, 0x00}, // bfill sp db db 
	{0x7dcb, &op_bfill,	 11,  12,  13, 0xff, 0x00, 0x00, 0x00}, // bfill sp db cb 
	{0x7ecb, &op_bfill,	 11,  12,  14, 0xff, 0x00, 0x00, 0x00}, // bfill sp db pi 
	{0x7fcb, &op_bfill,	 11,  12,   8, 0xff, 0x00, 0x04, 0x00}, // bfill sp db <literal> 
	{0x70db, &op_bfill,	 11,  13,   0, 0xff, 0x00, 0x00, 0x00}, // bfill sp cb a 
	{0x71db, &op_bfill,	 11,  13,   1, 0xff, 0x00, 0x00, 0x00}, // bfill sp cb b 
	{0x72db, &op_bfill,	 11,  13,   2, 0xff, 0x00, 0x00, 0x00}, // bfill sp cb c 
	{0x73db, &op_bfill,	 11,  13,   3, 0xff, 0x00, 0x00, 0x00}, // bfill sp cb d 
	{0x74db, &op_bfill,	 11,  13,   4, 0xff, 0x00, 0x00, 0x00}, // bfill sp cb e 
	{0x75db, &op_bfill,	 11,  13,   5, 0xff, 0x00, 0x00, 0x00}, // bfill sp cb f 
	{0x76db, &op_bfill,	 11,  13,   6, 0xff, 0x00, 0x00, 0x00}, // bfill sp cb g 
	{0x77db, &op_bfill,	 11,  13,   7, 0xff, 0x00, 0x00, 0x00}, // bfill sp cb h 
	{0x78db, &op_bfill,	 11,  13,   8, 0xff, 0x00, 0x00, 0x00}, // bfill sp cb pc 
	{0x79db, &op_bfill,	 11,  13,   9, 0xff, 0x00, 0x00, 0x00}, // bfill sp cb ra 
	{0x7adb, &op_bfill,	 11,  13,  10, 0xff, 0x00, 0x00, 0x00}, // bfill sp cb sb 
	{0x7bdb, &op_bfill,	 11,  13,  11, 0xff, 0x00, 0x00, 0x00}, // bfill sp cb sp 
	{0x7cdb, &op_bfill,	 11,  13,  12, 0xff, 0x00, 0x00, 0x00}, // bfill sp cb db 
	{0x7ddb, &op_bfill,	 11,  13,  13, 0xff, 0x00, 0x00, 0x00}, // bfill sp cb cb 
	{0x7edb, &op_bfill,	 11,  13,  14, 0xff, 0x00, 0x00, 0x00}, // bfill sp cb pi 
	{0x7fdb, &op_bfill,	 11,  13,   8, 0xff, 0x00, 0x04, 0x00}, // bfill sp cb <literal> 
	{0x70eb, &op_bfill,	 11,  14,   0, 0xff, 0x00, 0x00, 0x00}, // bfill sp pi a 
	{0x71eb, &op_bfill,	 11,  14,   1, 0xff, 0x00, 0x00, 0x00}, // bfill sp pi b 
	{0x72eb, &op_bfill,	 11,  14,   2, 0xff, 0x00, 0x00, 0x00}, // bfill sp pi c 
	{0x73eb, &op_bfill,	 11,  14,   3, 0xff, 0x00, 0x00, 0x00}, // bfill sp pi d 
	{0x74eb, &op_bfill,	 11,  14,   4, 0xff, 0x00, 0x00, 0x00}, // bfill sp pi e 
	{0x75eb, &op_bfill,	 11,  14,   5, 0xff, 0x00, 0x00, 0x00}, // bfill sp pi f 
	{0x76eb, &op_bfill,	 11,  14,   6, 0xff, 0x00, 0x00, 0x00}, // bfill sp pi g 
	{0x77eb, &op_bfill,	 11,  14,   7, 0xff, 0x00, 0x00, 0x00}, // bfill sp pi h 
	{0x78eb, &op_bfill,	 11,  14,   8, 0xff, 0x00, 0x00, 0x00}, // bfill sp pi pc 
	{0x79eb, &op_bfill,	 11,  14,   9, 0xff, 0x00, 0x00, 0x00}, // bfill sp pi ra 
	{0x7aeb, &op_bfill,	 11,  14,  10, 0xff, 0x00, 0x00, 0x00}, // bfill sp pi sb 
	{0x7beb, &op_bfill,	 11,  14,  11, 0xff, 0x00, 0x00, 0x00}, // bfill sp pi sp 
	{0x7ceb, &op_bfill,	 11,  14,  12, 0xff, 0x00, 0x00, 0x00}, // bfill sp pi db 
	{0x7deb, &op_bfill,	 11,  14,  13, 0xff, 0x00, 0x00, 0x00}, // bfill sp pi cb 
	{0x7eeb, &op_bfill,	 11,  14,  14, 0xff, 0x00, 0x00, 0x00}, // bfill sp pi pi 
	{0x7feb, &op_bfill,	 11,  14,   8, 0xff, 0x00, 0x04, 0x00}, // bfill sp pi <literal> 
	{0x70fb, &op_bfill,	 11,  15,   0, 0xff, 0x00, 0x00, 0x00}, // bfill sp status a 
	{0x71fb, &op_bfill,	 11,  15,   1, 0xff, 0x00, 0x00, 0x00}, // bfill sp status b 
	{0x72fb, &op_bfill,	 11,  15,   2, 0xff, 0x00, 0x00, 0x00}, // bfill sp status c 
	{0x73fb, &op_bfill,	 11,  15,   3, 0xff, 0x00, 0x00, 0x00}, // bfill sp status d 
	{0x74fb, &op_bfill,	 11,  15,   4, 0xff, 0x00, 0x00, 0x00}, // bfill sp status e 
	{0x75fb, &op_bfill,	 11,  15,   5, 0xff, 0x00, 0x00, 0x00}, // bfill sp status f 
	{0x76fb, &op_bfill,	 11,  15,   6, 0xff, 0x00, 0x00, 0x00}, // bfill sp status g 
	{0x77fb, &op_bfill,	 11,  15,   7, 0xff, 0x00, 0x00, 0x00}, // bfill sp status h 
	{0x78fb, &op_bfill,	 11,  15,   8, 0xff, 0x00, 0x00, 0x00}, // bfill sp status pc 
	{0x79fb, &op_bfill,	 11,  15,   9, 0xff, 0x00, 0x00, 0x00}, // bfill sp status ra 
	{0x7afb, &op_bfill,	 11,  15,  10, 0xff, 0x00, 0x00, 0x00}, // bfill sp status sb 
	{0x7bfb, &op_bfill,	 11,  15,  11, 0xff, 0x00, 0x00, 0x00}, // bfill sp status sp 
	{0x7cfb, &op_bfill,	 11,  15,  12, 0xff, 0x00, 0x00, 0x00}, // bfill sp status db 
	{0x7dfb, &op_bfill,	 11,  15,  13, 0xff, 0x00, 0x00, 0x00}, // bfill sp status cb 
	{0x7efb, &op_bfill,	 11,  15,  14, 0xff, 0x00, 0x00, 0x00}, // bfill sp status pi 
	{0x7ffb, &op_bfill,	 11,  15,   8, 0xff, 0x00, 0x04, 0x00}, // bfill sp status <literal> 
	{0x700c, &op_bfill,	 12,   0,   0, 0xff, 0x00, 0x00, 0x00}, // bfill db a a 
	{0x710c, &op_bfill,	 12,   0,   1, 0xff, 0x00, 0x00, 0x00}, // bfill db a b 
	{0x720c, &op_bfill,	 12,   0,   2, 0xff, 0x00, 0x00, 0x00}, // bfill db a c 
	{0x730c, &op_bfill,	 12,   0,   3, 0xff, 0x00, 0x00, 0x00}, // bfill db a d 
	{0x740c, &op_bfill,	 12,   0,   4, 0xff, 0x00, 0x00, 0x00}, // bfill db a e 
	{0x750c, &op_bfill,	 12,   0,   5, 0xff, 0x00, 0x00, 0x00}, // bfill db a f 
	{0x760c, &op_bfill,	 12,   0,   6, 0xff, 0x00, 0x00, 0x00}, // bfill db a g 
	{0x770c, &op_bfill,	 12,   0,   7, 0xff, 0x00, 0x00, 0x00}, // bfill db a h 
	{0x780c, &op_bfill,	 12,   0,   8, 0xff, 0x00, 0x00, 0x00}, // bfill db a pc 
	{0x790c, &op_bfill,	 12,   0,   9, 0xff, 0x00, 0x00, 0x00}, // bfill db a ra 
	{0x7a0c, &op_bfill,	 12,   0,  10, 0xff, 0x00, 0x00, 0x00}, // bfill db a sb 
	{0x7b0c, &op_bfill,	 12,   0,  11, 0xff, 0x00, 0x00, 0x00}, // bfill db a sp 
	{0x7c0c, &op_bfill,	 12,   0,  12, 0xff, 0x00, 0x00, 0x00}, // bfill db a db 
	{0x7d0c, &op_bfill,	 12,   0,  13, 0xff, 0x00, 0x00, 0x00}, // bfill db a cb 
	{0x7e0c, &op_bfill,	 12,   0,  14, 0xff, 0x00, 0x00, 0x00}, // bfill db a pi 
	{0x7f0c, &op_bfill,	 12,   0,   8, 0xff, 0x00, 0x04, 0x00}, // bfill db a <literal> 
	{0x701c, &op_bfill,	 12,   1,   0, 0xff, 0x00, 0x00, 0x00}, // bfill db b a 
	{0x711c, &op_bfill,	 12,   1,   1, 0xff, 0x00, 0x00, 0x00}, // bfill db b b 
	{0x721c, &op_bfill,	 12,   1,   2, 0xff, 0x00, 0x00, 0x00}, // bfill db b c 
	{0x731c, &op_bfill,	 12,   1,   3, 0xff, 0x00, 0x00, 0x00}, // bfill db b d 
	{0x741c, &op_bfill,	 12,   1,   4, 0xff, 0x00, 0x00, 0x00}, // bfill db b e 
	{0x751c, &op_bfill,	 12,   1,   5, 0xff, 0x00, 0x00, 0x00}, // bfill db b f 
	{0x761c, &op_bfill,	 12,   1,   6, 0xff, 0x00, 0x00, 0x00}, // bfill db b g 
	{0x771c, &op_bfill,	 12,   1,   7, 0xff, 0x00, 0x00, 0x00}, // bfill db b h 
	{0x781c, &op_bfill,	 12,   1,   8, 0xff, 0x00, 0x00, 0x00}, // bfill db b pc 
	{0x791c, &op_bfill,	 12,   1,   9, 0xff, 0x00, 0x00, 0x00}, // bfill db b ra 
	{0x7a1c, &op_bfill,	 12,   1,  10, 0xff, 0x00, 0x00, 0x00}, // bfill db b sb 
	{0x7b1c, &op_bfill,	 12,   1,  11, 0xff, 0x00, 0x00, 0x00}, // bfill db b sp 
	{0x7c1c, &op_bfill,	 12,   1,  12, 0xff, 0x00, 0x00, 0x00}, // bfill db b db 
	{0x7d1c, &op_bfill,	 12,   1,  13, 0xff, 0x00, 0x00, 0x00}, // bfill db b cb 
	{0x7e1c, &op_bfill,	 12,   1,  14, 0xff, 0x00, 0x00, 0x00}, // bfill db b pi 
	{0x7f1c, &op_bfill,	 12,   1,   8, 0xff, 0x00, 0x04, 0x00}, // bfill db b <literal> 
	{0x702c, &op_bfill,	 12,   2,   0, 0xff, 0x00, 0x00, 0x00}, // bfill db c a 
	{0x712c, &op_bfill,	 12,   2,   1, 0xff, 0x00, 0x00, 0x00}, // bfill db c b 
	{0x722c, &op_bfill,	 12,   2,   2, 0xff, 0x00, 0x00, 0x00}, // bfill db c c 
	{0x732c, &op_bfill,	 12,   2,   3, 0xff, 0x00, 0x00, 0x00}, // bfill db c d 
	{0x742c, &op_bfill,	 12,   2,   4, 0xff, 0x00, 0x00, 0x00}, // bfill db c e 
	{0x752c, &op_bfill,	 12,   2,   5, 0xff, 0x00, 0x00, 0x00}, // bfill db c f 
	{0x762c, &op_bfill,	 12,   2,   6, 0xff, 0x00, 0x00, 0x00}, // bfill db c g 
	{0x772c, &op_bfill,	 12,   2,   7, 0xff, 0x00, 0x00, 0x00}, // bfill db c h 
	{0x782c, &op_bfill,	 12,   2,   8, 0xff, 0x00, 0x00, 0x00}, // bfill db c pc 
	{0x792c, &op_bfill,	 12,   2,   9, 0xff, 0x00, 0x00, 0x00}, // bfill db c ra 
	{0x7a2c, &op_bfill,	 12,   2,  10, 0xff, 0x00, 0x00, 0x00}, // bfill db c sb 
	{0x7b2c, &op_bfill,	 12,   2,  11, 0xff, 0x00, 0x00, 0x00}, // bfill db c sp 
	{0x7c2c, &op_bfill,	 12,   2,  12, 0xff, 0x00, 0x00, 0x00}, // bfill db c db 
	{0x7d2c, &op_bfill,	 12,   2,  13, 0xff, 0x00, 0x00, 0x00}, // bfill db c cb 
	{0x7e2c, &op_bfill,	 12,   2,  14, 0xff, 0x00, 0x00, 0x00}, // bfill db c pi 
	{0x7f2c, &op_bfill,	 12,   2,   8, 0xff, 0x00, 0x04, 0x00}, // bfill db c <literal> 
	{0x703c, &op_bfill,	 12,   3,   0, 0xff, 0x00, 0x00, 0x00}, // bfill db d a 
	{0x713c, &op_bfill,	 12,   3,   1, 0xff, 0x00, 0x00, 0x00}, // bfill db d b 
	{0x723c, &op_bfill,	 12,   3,   2, 0xff, 0x00, 0x00, 0x00}, // bfill db d c 
	{0x733c, &op_bfill,	 12,   3,   3, 0xff, 0x00, 0x00, 0x00}, // bfill db d d 
	{0x743c, &op_bfill,	 12,   3,   4, 0xff, 0x00, 0x00, 0x00}, // bfill db d e 
	{0x753c, &op_bfill,	 12,   3,   5, 0xff, 0x00, 0x00, 0x00}, // bfill db d f 
	{0x763c, &op_bfill,	 12,   3,   6, 0xff, 0x00, 0x00, 0x00}, // bfill db d g 
	{0x773c, &op_bfill,	 12,   3,   7, 0xff, 0x00, 0x00, 0x00}, // bfill db d h 
	{0x783c, &op_bfill,	 12,   3,   8, 0xff, 0x00, 0x00, 0x00}, // bfill db d pc 
	{0x793c, &op_bfill,	 12,   3,   9, 0xff, 0x00, 0x00, 0x00}, // bfill db d ra 
	{0x7a3c, &op_bfill,	 12,   3,  10, 0xff, 0x00, 0x00, 0x00}, // bfill db d sb 
	{0x7b3c, &op_bfill,	 12,   3,  11, 0xff, 0x00, 0x00, 0x00}, // bfill db d sp 
	{0x7c3c, &op_bfill,	 12,   3,  12, 0xff, 0x00, 0x00, 0x00}, // bfill db d db 
	{0x7d3c, &op_bfill,	 12,   3,  13, 0xff, 0x00, 0x00, 0x00}, // bfill db d cb 
	{0x7e3c, &op_bfill,	 12,   3,  14, 0xff, 0x00, 0x00, 0x00}, // bfill db d pi 
	{0x7f3c, &op_bfill,	 12,   3,   8, 0xff, 0x00, 0x04, 0x00}, // bfill db d <literal> 
	{0x704c, &op_bfill,	 12,   4,   0, 0xff, 0x00, 0x00, 0x00}, // bfill db e a 
	{0x714c, &op_bfill,	 12,   4,   1, 0xff, 0x00, 0x00, 0x00}, // bfill db e b 
	{0x724c, &op_bfill,	 12,   4,   2, 0xff, 0x00, 0x00, 0x00}, // bfill db e c 
	{0x734c, &op_bfill,	 12,   4,   3, 0xff, 0x00, 0x00, 0x00}, // bfill db e d 
	{0x744c, &op_bfill,	 12,   4,   4, 0xff, 0x00, 0x00, 0x00}, // bfill db e e 
	{0x754c, &op_bfill,	 12,   4,   5, 0xff, 0x00, 0x00, 0x00}, // bfill db e f 
	{0x764c, &op_bfill,	 12,   4,   6, 0xff, 0x00, 0x00, 0x00}, // bfill db e g 
	{0x774c, &op_bfill,	 12,   4,   7, 0xff, 0x00, 0x00, 0x00}, // bfill db e h 
	{0x784c, &op_bfill,	 12,   4,   8, 0xff, 0x00, 0x00, 0x00}, // bfill db e pc 
	{0x794c, &op_bfill,	 12,   4,   9, 0xff, 0x00, 0x00, 0x00}, // bfill db e ra 
	{0x7a4c, &op_bfill,	 12,   4,  10, 0xff, 0x00, 0x00, 0x00}, // bfill db e sb 
	{0x7b4c, &op_bfill,	 12,   4,  11, 0xff, 0x00, 0x00, 0x00}, // bfill db e sp 
	{0x7c4c, &op_bfill,	 12,   4,  12, 0xff, 0x00, 0x00, 0x00}, // bfill db e db 
	{0x7d4c, &op_bfill,	 12,   4,  13, 0xff, 0x00, 0x00, 0x00}, // bfill db e cb 
	{0x7e4c, &op_bfill,	 12,   4,  14, 0xff, 0x00, 0x00, 0x00}, // bfill db e pi 
	{0x7f4c, &op_bfill,	 12,   4,   8, 0xff, 0x00, 0x04, 0x00}, // bfill db e <literal> 
	{0x705c, &op_bfill,	 12,   5,   0, 0xff, 0x00, 0x00, 0x00}, // bfill db f a 
	{0x715c, &op_bfill,	 12,   5,   1, 0xff, 0x00, 0x00, 0x00}, // bfill db f b 
	{0x725c, &op_bfill,	 12,   5,   2, 0xff, 0x00, 0x00, 0x00}, // bfill db f c 
	{0x735c, &op_bfill,	 12,   5,   3, 0xff, 0x00, 0x00, 0x00}, // bfill db f d 
	{0x745c, &op_bfill,	 12,   5,   4, 0xff, 0x00, 0x00, 0x00}, // bfill db f e 
	{0x755c, &op_bfill,	 12,   5,   5, 0xff, 0x00, 0x00, 0x00}, // bfill db f f 
	{0x765c, &op_bfill,	 12,   5,   6, 0xff, 0x00, 0x00, 0x00}, // bfill db f g 
	{0x775c, &op_bfill,	 12,   5,   7, 0xff, 0x00, 0x00, 0x00}, // bfill db f h 
	{0x785c, &op_bfill,	 12,   5,   8, 0xff, 0x00, 0x00, 0x00}, // bfill db f pc 
	{0x795c, &op_bfill,	 12,   5,   9, 0xff, 0x00, 0x00, 0x00}, // bfill db f ra 
	{0x7a5c, &op_bfill,	 12,   5,  10, 0xff, 0x00, 0x00, 0x00}, // bfill db f sb 
	{0x7b5c, &op_bfill,	 12,   5,  11, 0xff, 0x00, 0x00, 0x00}, // bfill db f sp 
	{0x7c5c, &op_bfill,	 12,   5,  12, 0xff, 0x00, 0x00, 0x00}, // bfill db f db 
	{0x7d5c, &op_bfill,	 12,   5,  13, 0xff, 0x00, 0x00, 0x00}, // bfill db f cb 
	{0x7e5c, &op_bfill,	 12,   5,  14, 0xff, 0x00, 0x00, 0x00}, // bfill db f pi 
	{0x7f5c, &op_bfill,	 12,   5,   8, 0xff, 0x00, 0x04, 0x00}, // bfill db f <literal> 
	{0x706c, &op_bfill,	 12,   6,   0, 0xff, 0x00, 0x00, 0x00}, // bfill db g a 
	{0x716c, &op_bfill,	 12,   6,   1, 0xff, 0x00, 0x00, 0x00}, // bfill db g b 
	{0x726c, &op_bfill,	 12,   6,   2, 0xff, 0x00, 0x00, 0x00}, // bfill db g c 
	{0x736c, &op_bfill,	 12,   6,   3, 0xff, 0x00, 0x00, 0x00}, // bfill db g d 
	{0x746c, &op_bfill,	 12,   6,   4, 0xff, 0x00, 0x00, 0x00}, // bfill db g e 
	{0x756c, &op_bfill,	 12,   6,   5, 0xff, 0x00, 0x00, 0x00}, // bfill db g f 
	{0x766c, &op_bfill,	 12,   6,   6, 0xff, 0x00, 0x00, 0x00}, // bfill db g g 
	{0x776c, &op_bfill,	 12,   6,   7, 0xff, 0x00, 0x00, 0x00}, // bfill db g h 
	{0x786c, &op_bfill,	 12,   6,   8, 0xff, 0x00, 0x00, 0x00}, // bfill db g pc 
	{0x796c, &op_bfill,	 12,   6,   9, 0xff, 0x00, 0x00, 0x00}, // bfill db g ra 
	{0x7a6c, &op_bfill,	 12,   6,  10, 0xff, 0x00, 0x00, 0x00}, // bfill db g sb 
	{0x7b6c, &op_bfill,	 12,   6,  11, 0xff, 0x00, 0x00, 0x00}, // bfill db g sp 
	{0x7c6c, &op_bfill,	 12,   6,  12, 0xff, 0x00, 0x00, 0x00}, // bfill db g db 
	{0x7d6c, &op_bfill,	 12,   6,  13, 0xff, 0x00, 0x00, 0x00}, // bfill db g cb 
	{0x7e6c, &op_bfill,	 12,   6,  14, 0xff, 0x00, 0x00, 0x00}, // bfill db g pi 
	{0x7f6c, &op_bfill,	 12,   6,   8, 0xff, 0x00, 0x04, 0x00}, // bfill db g <literal> 
	{0x707c, &op_bfill,	 12,   7,   0, 0xff, 0x00, 0x00, 0x00}, // bfill db h a 
	{0x717c, &op_bfill,	 12,   7,   1, 0xff, 0x00, 0x00, 0x00}, // bfill db h b 
	{0x727c, &op_bfill,	 12,   7,   2, 0xff, 0x00, 0x00, 0x00}, // bfill db h c 
	{0x737c, &op_bfill,	 12,   7,   3, 0xff, 0x00, 0x00, 0x00}, // bfill db h d 
	{0x747c, &op_bfill,	 12,   7,   4, 0xff, 0x00, 0x00, 0x00}, // bfill db h e 
	{0x757c, &op_bfill,	 12,   7,   5, 0xff, 0x00, 0x00, 0x00}, // bfill db h f 
	{0x767c, &op_bfill,	 12,   7,   6, 0xff, 0x00, 0x00, 0x00}, // bfill db h g 
	{0x777c, &op_bfill,	 12,   7,   7, 0xff, 0x00, 0x00, 0x00}, // bfill db h h 
	{0x787c, &op_bfill,	 12,   7,   8, 0xff, 0x00, 0x00, 0x00}, // bfill db h pc 
	{0x797c, &op_bfill,	 12,   7,   9, 0xff, 0x00, 0x00, 0x00}, // bfill db h ra 
	{0x7a7c, &op_bfill,	 12,   7,  10, 0xff, 0x00, 0x00, 0x00}, // bfill db h sb 
	{0x7b7c, &op_bfill,	 12,   7,  11, 0xff, 0x00, 0x00, 0x00}, // bfill db h sp 
	{0x7c7c, &op_bfill,	 12,   7,  12, 0xff, 0x00, 0x00, 0x00}, // bfill db h db 
	{0x7d7c, &op_bfill,	 12,   7,  13, 0xff, 0x00, 0x00, 0x00}, // bfill db h cb 
	{0x7e7c, &op_bfill,	 12,   7,  14, 0xff, 0x00, 0x00, 0x00}, // bfill db h pi 
	{0x7f7c, &op_bfill,	 12,   7,   8, 0xff, 0x00, 0x04, 0x00}, // bfill db h <literal> 
	{0x708c, &op_bfill,	 12,   8,   0, 0xff, 0x00, 0x00, 0x00}, // bfill db pc a 
	{0x718c, &op_bfill,	 12,   8,   1, 0xff, 0x00, 0x00, 0x00}, // bfill db pc b 
	{0x728c, &op_bfill,	 12,   8,   2, 0xff, 0x00, 0x00, 0x00}, // bfill db pc c 
	{0x738c, &op_bfill,	 12,   8,   3, 0xff, 0x00, 0x00, 0x00}, // bfill db pc d 
	{0x748c, &op_bfill,	 12,   8,   4, 0xff, 0x00, 0x00, 0x00}, // bfill db pc e 
	{0x758c, &op_bfill,	 12,   8,   5, 0xff, 0x00, 0x00, 0x00}, // bfill db pc f 
	{0x768c, &op_bfill,	 12,   8,   6, 0xff, 0x00, 0x00, 0x00}, // bfill db pc g 
	{0x778c, &op_bfill,	 12,   8,   7, 0xff, 0x00, 0x00, 0x00}, // bfill db pc h 
	{0x788c, &op_bfill,	 12,   8,   8, 0xff, 0x00, 0x00, 0x00}, // bfill db pc pc 
	{0x798c, &op_bfill,	 12,   8,   9, 0xff, 0x00, 0x00, 0x00}, // bfill db pc ra 
	{0x7a8c, &op_bfill,	 12,   8,  10, 0xff, 0x00, 0x00, 0x00}, // bfill db pc sb 
	{0x7b8c, &op_bfill,	 12,   8,  11, 0xff, 0x00, 0x00, 0x00}, // bfill db pc sp 
	{0x7c8c, &op_bfill,	 12,   8,  12, 0xff, 0x00, 0x00, 0x00}, // bfill db pc db 
	{0x7d8c, &op_bfill,	 12,   8,  13, 0xff, 0x00, 0x00, 0x00}, // bfill db pc cb 
	{0x7e8c, &op_bfill,	 12,   8,  14, 0xff, 0x00, 0x00, 0x00}, // bfill db pc pi 
	{0x7f8c, &op_bfill,	 12,   8,   8, 0xff, 0x00, 0x04, 0x00}, // bfill db pc <literal> 
	{0x709c, &op_bfill,	 12,   9,   0, 0xff, 0x00, 0x00, 0x00}, // bfill db ra a 
	{0x719c, &op_bfill,	 12,   9,   1, 0xff, 0x00, 0x00, 0x00}, // bfill db ra b 
	{0x729c, &op_bfill,	 12,   9,   2, 0xff, 0x00, 0x00, 0x00}, // bfill db ra c 
	{0x739c, &op_bfill,	 12,   9,   3, 0xff, 0x00, 0x00, 0x00}, // bfill db ra d 
	{0x749c, &op_bfill,	 12,   9,   4, 0xff, 0x00, 0x00, 0x00}, // bfill db ra e 
	{0x759c, &op_bfill,	 12,   9,   5, 0xff, 0x00, 0x00, 0x00}, // bfill db ra f 
	{0x769c, &op_bfill,	 12,   9,   6, 0xff, 0x00, 0x00, 0x00}, // bfill db ra g 
	{0x779c, &op_bfill,	 12,   9,   7, 0xff, 0x00, 0x00, 0x00}, // bfill db ra h 
	{0x789c, &op_bfill,	 12,   9,   8, 0xff, 0x00, 0x00, 0x00}, // bfill db ra pc 
	{0x799c, &op_bfill,	 12,   9,   9, 0xff, 0x00, 0x00, 0x00}, // bfill db ra ra 
	{0x7a9c, &op_bfill,	 12,   9,  10, 0xff, 0x00, 0x00, 0x00}, // bfill db ra sb 
	{0x7b9c, &op_bfill,	 12,   9,  11, 0xff, 0x00, 0x00, 0x00}, // bfill db ra sp 
	{0x7c9c, &op_bfill,	 12,   9,  12, 0xff, 0x00, 0x00, 0x00}, // bfill db ra db 
	{0x7d9c, &op_bfill,	 12,   9,  13, 0xff, 0x00, 0x00, 0x00}, // bfill db ra cb 
	{0x7e9c, &op_bfill,	 12,   9,  14, 0xff, 0x00, 0x00, 0x00}, // bfill db ra pi 
	{0x7f9c, &op_bfill,	 12,   9,   8, 0xff, 0x00, 0x04, 0x00}, // bfill db ra <literal> 
	{0x70ac, &op_bfill,	 12,  10,   0, 0xff, 0x00, 0x00, 0x00}, // bfill db sb a 
	{0x71ac, &op_bfill,	 12,  10,   1, 0xff, 0x00, 0x00, 0x00}, // bfill db sb b 
	{0x72ac, &op_bfill,	 12,  10,   2, 0xff, 0x00, 0x00, 0x00}, // bfill db sb c 
	{0x73ac, &op_bfill,	 12,  10,   3, 0xff, 0x00, 0x00, 0x00}, // bfill db sb d 
	{0x74ac, &op_bfill,	 12,  10,   4, 0xff, 0x00, 0x00, 0x00}, // bfill db sb e 
	{0x75ac, &op_bfill,	 12,  10,   5, 0xff, 0x00, 0x00, 0x00}, // bfill db sb f 
	{0x76ac, &op_bfill,	 12,  10,   6, 0xff, 0x00, 0x00, 0x00}, // bfill db sb g 
	{0x77ac, &op_bfill,	 12,  10,   7, 0xff, 0x00, 0x00, 0x00}, // bfill db sb h 
	{0x78ac, &op_bfill,	 12,  10,   8, 0xff, 0x00, 0x00, 0x00}, // bfill db sb pc 
	{0x79ac, &op_bfill,	 12,  10,   9, 0xff, 0x00, 0x00, 0x00}, // bfill db sb ra 
	{0x7aac, &op_bfill,	 12,  10,  10, 0xff, 0x00, 0x00, 0x00}, // bfill db sb sb 
	{0x7bac, &op_bfill,	 12,  10,  11, 0xff, 0x00, 0x00, 0x00}, // bfill db sb sp 
	{0x7cac, &op_bfill,	 12,  10,  12, 0xff, 0x00, 0x00, 0x00}, // bfill db sb db 
	{0x7dac, &op_bfill,	 12,  10,  13, 0xff, 0x00, 0x00, 0x00}, // bfill db sb cb 
	{0x7eac, &op_bfill,	 12,  10,  14, 0xff, 0x00, 0x00, 0x00}, // bfill db sb pi 
	{0x7fac, &op_bfill,	 12,  10,   8, 0xff, 0x00, 0x04, 0x00}, // bfill db sb <literal> 
	{0x70bc, &op_bfill,	 12,  11,   0, 0xff, 0x00, 0x00, 0x00}, // bfill db sp a 
	{0x71bc, &op_bfill,	 12,  11,   1, 0xff, 0x00, 0x00, 0x00}, // bfill db sp b 
	{0x72bc, &op_bfill,	 12,  11,   2, 0xff, 0x00, 0x00, 0x00}, // bfill db sp c 
	{0x73bc, &op_bfill,	 12,  11,   3, 0xff, 0x00, 0x00, 0x00}, // bfill db sp d 
	{0x74bc, &op_bfill,	 12,  11,   4, 0xff, 0x00, 0x00, 0x00}, // bfill db sp e 
	{0x75bc, &op_bfill,	 12,  11,   5, 0xff, 0x00, 0x00, 0x00}, // bfill db sp f 
	{0x76bc, &op_bfill,	 12,  11,   6, 0xff, 0x00, 0x00, 0x00}, // bfill db sp g 
	{0x77bc, &op_bfill,	 12,  11,   7, 0xff, 0x00, 0x00, 0x00}, // bfill db sp h 
	{0x78bc, &op_bfill,	 12,  11,   8, 0xff, 0x00, 0x00, 0x00}, // bfill db sp pc 
	{0x79bc, &op_bfill,	 12,  11,   9, 0xff, 0x00, 0x00, 0x00}, // bfill db sp ra 
	{0x7abc, &op_bfill,	 12,  11,  10, 0xff, 0x00, 0x00, 0x00}, // bfill db sp sb 
	{0x7bbc, &op_bfill,	 12,  11,  11, 0xff, 0x00, 0x00, 0x00}, // bfill db sp sp 
	{0x7cbc, &op_bfill,	 12,  11,  12, 0xff, 0x00, 0x00, 0x00}, // bfill db sp db 
	{0x7dbc, &op_bfill,	 12,  11,  13, 0xff, 0x00, 0x00, 0x00}, // bfill db sp cb 
	{0x7ebc, &op_bfill,	 12,  11,  14, 0xff, 0x00, 0x00, 0x00}, // bfill db sp pi 
	{0x7fbc, &op_bfill,	 12,  11,   8, 0xff, 0x00, 0x04, 0x00}, // bfill db sp <literal> 
	{0x70cc, &op_bfill,	 12,  12,   0, 0xff, 0x00, 0x00, 0x00}, // bfill db db a 
	{0x71cc, &op_bfill,	 12,  12,   1, 0xff, 0x00, 0x00, 0x00}, // bfill db db b 
	{0x72cc, &op_bfill,	 12,  12,   2, 0xff, 0x00, 0x00, 0x00}, // bfill db db c 
	{0x73cc, &op_bfill,	 12,  12,   3, 0xff, 0x00, 0x00, 0x00}, // bfill db db d 
	{0x74cc, &op_bfill,	 12,  12,   4, 0xff, 0x00, 0x00, 0x00}, // bfill db db e 
	{0x75cc, &op_bfill,	 12,  12,   5, 0xff, 0x00, 0x00, 0x00}, // bfill db db f 
	{0x76cc, &op_bfill,	 12,  12,   6, 0xff, 0x00, 0x00, 0x00}, // bfill db db g 
	{0x77cc, &op_bfill,	 12,  12,   7, 0xff, 0x00, 0x00, 0x00}, // bfill db db h 
	{0x78cc, &op_bfill,	 12,  12,   8, 0xff, 0x00, 0x00, 0x00}, // bfill db db pc 
	{0x79cc, &op_bfill,	 12,  12,   9, 0xff, 0x00, 0x00, 0x00}, // bfill db db ra 
	{0x7acc, &op_bfill,	 12,  12,  10, 0xff, 0x00, 0x00, 0x00}, // bfill db db sb 
	{0x7bcc, &op_bfill,	 12,  12,  11, 0xff, 0x00, 0x00, 0x00}, // bfill db db sp 
	{0x7ccc, &op_bfill,	 12,  12,  12, 0xff, 0x00, 0x00, 0x00}, // bfill db db db 
	{0x7dcc, &op_bfill,	 12,  12,  13, 0xff, 0x00, 0x00, 0x00}, // bfill db db cb 
	{0x7ecc, &op_bfill,	 12,  12,  14, 0xff, 0x00, 0x00, 0x00}, // bfill db db pi 
	{0x7fcc, &op_bfill,	 12,  12,   8, 0xff, 0x00, 0x04, 0x00}, // bfill db db <literal> 
	{0x70dc, &op_bfill,	 12,  13,   0, 0xff, 0x00, 0x00, 0x00}, // bfill db cb a 
	{0x71dc, &op_bfill,	 12,  13,   1, 0xff, 0x00, 0x00, 0x00}, // bfill db cb b 
	{0x72dc, &op_bfill,	 12,  13,   2, 0xff, 0x00, 0x00, 0x00}, // bfill db cb c 
	{0x73dc, &op_bfill,	 12,  13,   3, 0xff, 0x00, 0x00, 0x00}, // bfill db cb d 
	{0x74dc, &op_bfill,	 12,  13,   4, 0xff, 0x00, 0x00, 0x00}, // bfill db cb e 
	{0x75dc, &op_bfill,	 12,  13,   5, 0xff, 0x00, 0x00, 0x00}, // bfill db cb f 
	{0x76dc, &op_bfill,	 12,  13,   6, 0xff, 0x00, 0x00, 0x00}, // bfill db cb g 
	{0x77dc, &op_bfill,	 12,  13,   7, 0xff, 0x00, 0x00, 0x00}, // bfill db cb h 
	{0x78dc, &op_bfill,	 12,  13,   8, 0xff, 0x00, 0x00, 0x00}, // bfill db cb pc 
	{0x79dc, &op_bfill,	 12,  13,   9, 0xff, 0x00, 0x00, 0x00}, // bfill db cb ra 
	{0x7adc, &op_bfill,	 12,  13,  10, 0xff, 0x00, 0x00, 0x00}, // bfill db cb sb 
	{0x7bdc, &op_bfill,	 12,  13,  11, 0xff, 0x00, 0x00, 0x00}, // bfill db cb sp 
	{0x7cdc, &op_bfill,	 12,  13,  12, 0xff, 0x00, 0x00, 0x00}, // bfill db cb db 
	{0x7ddc, &op_bfill,	 12,  13,  13, 0xff, 0x00, 0x00, 0x00}, // bfill db cb cb 
	{0x7edc, &op_bfill,	 12,  13,  14, 0xff, 0x00, 0x00, 0x00}, // bfill db cb pi 
	{0x7fdc, &op_bfill,	 12,  13,   8, 0xff, 0x00, 0x04, 0x00}, // bfill db cb <literal> 
	{0x70ec, &op_bfill,	 12,  14,   0, 0xff, 0x00, 0x00, 0x00}, // bfill db pi a 
	{0x71ec, &op_bfill,	 12,  14,   1, 0xff, 0x00, 0x00, 0x00}, // bfill db pi b 
	{0x72ec, &op_bfill,	 12,  14,   2, 0xff, 0x00, 0x00, 0x00}, // bfill db pi c 
	{0x73ec, &op_bfill,	 12,  14,   3, 0xff, 0x00, 0x00, 0x00}, // bfill db pi d 
	{0x74ec, &op_bfill,	 12,  14,   4, 0xff, 0x00, 0x00, 0x00}, // bfill db pi e 
	{0x75ec, &op_bfill,	 12,  14,   5, 0xff, 0x00, 0x00, 0x00}, // bfill db pi f 
	{0x76ec, &op_bfill,	 12,  14,   6, 0xff, 0x00, 0x00, 0x00}, // bfill db pi g 
	{0x77ec, &op_bfill,	 12,  14,   7, 0xff, 0x00, 0x00, 0x00}, // bfill db pi h 
	{0x78ec, &op_bfill,	 12,  14,   8, 0xff, 0x00, 0x00, 0x00}, // bfill db pi pc 
	{0x79ec, &op_bfill,	 12,  14,   9, 0xff, 0x00, 0x00, 0x00}, // bfill db pi ra 
	{0x7aec, &op_bfill,	 12,  14,  10, 0xff, 0x00, 0x00, 0x00}, // bfill db pi sb 
	{0x7bec, &op_bfill,	 12,  14,  11, 0xff, 0x00, 0x00, 0x00}, // bfill db pi sp 
	{0x7cec, &op_bfill,	 12,  14,  12, 0xff, 0x00, 0x00, 0x00}, // bfill db pi db 
	{0x7dec, &op_bfill,	 12,  14,  13, 0xff, 0x00, 0x00, 0x00}, // bfill db pi cb 
	{0x7eec, &op_bfill,	 12,  14,  14, 0xff, 0x00, 0x00, 0x00}, // bfill db pi pi 
	{0x7fec, &op_bfill,	 12,  14,   8, 0xff, 0x00, 0x04, 0x00}, // bfill db pi <literal> 
	{0x70fc, &op_bfill,	 12,  15,   0, 0xff, 0x00, 0x00, 0x00}, // bfill db status a 
	{0x71fc, &op_bfill,	 12,  15,   1, 0xff, 0x00, 0x00, 0x00}, // bfill db status b 
	{0x72fc, &op_bfill,	 12,  15,   2, 0xff, 0x00, 0x00, 0x00}, // bfill db status c 
	{0x73fc, &op_bfill,	 12,  15,   3, 0xff, 0x00, 0x00, 0x00}, // bfill db status d 
	{0x74fc, &op_bfill,	 12,  15,   4, 0xff, 0x00, 0x00, 0x00}, // bfill db status e 
	{0x75fc, &op_bfill,	 12,  15,   5, 0xff, 0x00, 0x00, 0x00}, // bfill db status f 
	{0x76fc, &op_bfill,	 12,  15,   6, 0xff, 0x00, 0x00, 0x00}, // bfill db status g 
	{0x77fc, &op_bfill,	 12,  15,   7, 0xff, 0x00, 0x00, 0x00}, // bfill db status h 
	{0x78fc, &op_bfill,	 12,  15,   8, 0xff, 0x00, 0x00, 0x00}, // bfill db status pc 
	{0x79fc, &op_bfill,	 12,  15,   9, 0xff, 0x00, 0x00, 0x00}, // bfill db status ra 
	{0x7afc, &op_bfill,	 12,  15,  10, 0xff, 0x00, 0x00, 0x00}, // bfill db status sb 
	{0x7bfc, &op_bfill,	 12,  15,  11, 0xff, 0x00, 0x00, 0x00}, // bfill db status sp 
	{0x7cfc, &op_bfill,	 12,  15,  12, 0xff, 0x00, 0x00, 0x00}, // bfill db status db 
	{0x7dfc, &op_bfill,	 12,  15,  13, 0xff, 0x00, 0x00, 0x00}, // bfill db status cb 
	{0x7efc, &op_bfill,	 12,  15,  14, 0xff, 0x00, 0x00, 0x00}, // bfill db status pi 
	{0x7ffc, &op_bfill,	 12,  15,   8, 0xff, 0x00, 0x04, 0x00}, // bfill db status <literal> 
	{0x700d, &op_bfill,	 13,   0,   0, 0xff, 0x00, 0x00, 0x00}, // bfill cb a a 
	{0x710d, &op_bfill,	 13,   0,   1, 0xff, 0x00, 0x00, 0x00}, // bfill cb a b 
	{0x720d, &op_bfill,	 13,   0,   2, 0xff, 0x00, 0x00, 0x00}, // bfill cb a c 
	{0x730d, &op_bfill,	 13,   0,   3, 0xff, 0x00, 0x00, 0x00}, // bfill cb a d 
	{0x740d, &op_bfill,	 13,   0,   4, 0xff, 0x00, 0x00, 0x00}, // bfill cb a e 
	{0x750d, &op_bfill,	 13,   0,   5, 0xff, 0x00, 0x00, 0x00}, // bfill cb a f 
	{0x760d, &op_bfill,	 13,   0,   6, 0xff, 0x00, 0x00, 0x00}, // bfill cb a g 
	{0x770d, &op_bfill,	 13,   0,   7, 0xff, 0x00, 0x00, 0x00}, // bfill cb a h 
	{0x780d, &op_bfill,	 13,   0,   8, 0xff, 0x00, 0x00, 0x00}, // bfill cb a pc 
	{0x790d, &op_bfill,	 13,   0,   9, 0xff, 0x00, 0x00, 0x00}, // bfill cb a ra 
	{0x7a0d, &op_bfill,	 13,   0,  10, 0xff, 0x00, 0x00, 0x00}, // bfill cb a sb 
	{0x7b0d, &op_bfill,	 13,   0,  11, 0xff, 0x00, 0x00, 0x00}, // bfill cb a sp 
	{0x7c0d, &op_bfill,	 13,   0,  12, 0xff, 0x00, 0x00, 0x00}, // bfill cb a db 
	{0x7d0d, &op_bfill,	 13,   0,  13, 0xff, 0x00, 0x00, 0x00}, // bfill cb a cb 
	{0x7e0d, &op_bfill,	 13,   0,  14, 0xff, 0x00, 0x00, 0x00}, // bfill cb a pi 
	{0x7f0d, &op_bfill,	 13,   0,   8, 0xff, 0x00, 0x04, 0x00}, // bfill cb a <literal> 
	{0x701d, &op_bfill,	 13,   1,   0, 0xff, 0x00, 0x00, 0x00}, // bfill cb b a 
	{0x711d, &op_bfill,	 13,   1,   1, 0xff, 0x00, 0x00, 0x00}, // bfill cb b b 
	{0x721d, &op_bfill,	 13,   1,   2, 0xff, 0x00, 0x00, 0x00}, // bfill cb b c 
	{0x731d, &op_bfill,	 13,   1,   3, 0xff, 0x00, 0x00, 0x00}, // bfill cb b d 
	{0x741d, &op_bfill,	 13,   1,   4, 0xff, 0x00, 0x00, 0x00}, // bfill cb b e 
	{0x751d, &op_bfill,	 13,   1,   5, 0xff, 0x00, 0x00, 0x00}, // bfill cb b f 
	{0x761d, &op_bfill,	 13,   1,   6, 0xff, 0x00, 0x00, 0x00}, // bfill cb b g 
	{0x771d, &op_bfill,	 13,   1,   7, 0xff, 0x00, 0x00, 0x00}, // bfill cb b h 
	{0x781d, &op_bfill,	 13,   1,   8, 0xff, 0x00, 0x00, 0x00}, // bfill cb b pc 
	{0x791d, &op_bfill,	 13,   1,   9, 0xff, 0x00, 0x00, 0x00}, // bfill cb b ra 
	{0x7a1d, &op_bfill,	 13,   1,  10, 0xff, 0x00, 0x00, 0x00}, // bfill cb b sb 
	{0x7b1d, &op_bfill,	 13,   1,  11, 0xff, 0x00, 0x00, 0x00}, // bfill cb b sp 
	{0x7c1d, &op_bfill,	 13,   1,  12, 0xff, 0x00, 0x00, 0x00}, // bfill cb b db 
	{0x7d1d, &op_bfill,	 13,   1,  13, 0xff, 0x00, 0x00, 0x00}, // bfill cb b cb 
	{0x7e1d, &op_bfill,	 13,   1,  14, 0xff, 0x00, 0x00, 0x00}, // bfill cb b pi 
	{0x7f1d, &op_bfill,	 13,   1,   8, 0xff, 0x00, 0x04, 0x00}, // bfill cb b <literal> 
	{0x702d, &op_bfill,	 13,   2,   0, 0xff, 0x00, 0x00, 0x00}, // bfill cb c a 
	{0x712d, &op_bfill,	 13,   2,   1, 0xff, 0x00, 0x00, 0x00}, // bfill cb c b 
	{0x722d, &op_bfill,	 13,   2,   2, 0xff, 0x00, 0x00, 0x00}, // bfill cb c c 
	{0x732d, &op_bfill,	 13,   2,   3, 0xff, 0x00, 0x00, 0x00}, // bfill cb c d 
	{0x742d, &op_bfill,	 13,   2,   4, 0xff, 0x00, 0x00, 0x00}, // bfill cb c e 
	{0x752d, &op_bfill,	 13,   2,   5, 0xff, 0x00, 0x00, 0x00}, // bfill cb c f 
	{0x762d, &op_bfill,	 13,   2,   6, 0xff, 0x00, 0x00, 0x00}, // bfill cb c g 
	{0x772d, &op_bfill,	 13,   2,   7, 0xff, 0x00, 0x00, 0x00}, // bfill cb c h 
	{0x782d, &op_bfill,	 13,   2,   8, 0xff, 0x00, 0x00, 0x00}, // bfill cb c pc 
	{0x792d, &op_bfill,	 13,   2,   9, 0xff, 0x00, 0x00, 0x00}, // bfill cb c ra 
	{0x7a2d, &op_bfill,	 13,   2,  10, 0xff, 0x00, 0x00, 0x00}, // bfill cb c sb 
	{0x7b2d, &op_bfill,	 13,   2,  11, 0xff, 0x00, 0x00, 0x00}, // bfill cb c sp 
	{0x7c2d, &op_bfill,	 13,   2,  12, 0xff, 0x00, 0x00, 0x00}, // bfill cb c db 
	{0x7d2d, &op_bfill,	 13,   2,  13, 0xff, 0x00, 0x00, 0x00}, // bfill cb c cb 
	{0x7e2d, &op_bfill,	 13,   2,  14, 0xff, 0x00, 0x00, 0x00}, // bfill cb c pi 
	{0x7f2d, &op_bfill,	 13,   2,   8, 0xff, 0x00, 0x04, 0x00}, // bfill cb c <literal> 
	{0x703d, &op_bfill,	 13,   3,   0, 0xff, 0x00, 0x00, 0x00}, // bfill cb d a 
	{0x713d, &op_bfill,	 13,   3,   1, 0xff, 0x00, 0x00, 0x00}, // bfill cb d b 
	{0x723d, &op_bfill,	 13,   3,   2, 0xff, 0x00, 0x00, 0x00}, // bfill cb d c 
	{0x733d, &op_bfill,	 13,   3,   3, 0xff, 0x00, 0x00, 0x00}, // bfill cb d d 
	{0x743d, &op_bfill,	 13,   3,   4, 0xff, 0x00, 0x00, 0x00}, // bfill cb d e 
	{0x753d, &op_bfill,	 13,   3,   5, 0xff, 0x00, 0x00, 0x00}, // bfill cb d f 
	{0x763d, &op_bfill,	 13,   3,   6, 0xff, 0x00, 0x00, 0x00}, // bfill cb d g 
	{0x773d, &op_bfill,	 13,   3,   7, 0xff, 0x00, 0x00, 0x00}, // bfill cb d h 
	{0x783d, &op_bfill,	 13,   3,   8, 0xff, 0x00, 0x00, 0x00}, // bfill cb d pc 
	{0x793d, &op_bfill,	 13,   3,   9, 0xff, 0x00, 0x00, 0x00}, // bfill cb d ra 
	{0x7a3d, &op_bfill,	 13,   3,  10, 0xff, 0x00, 0x00, 0x00}, // bfill cb d sb 
	{0x7b3d, &op_bfill,	 13,   3,  11, 0xff, 0x00, 0x00, 0x00}, // bfill cb d sp 
	{0x7c3d, &op_bfill,	 13,   3,  12, 0xff, 0x00, 0x00, 0x00}, // bfill cb d db 
	{0x7d3d, &op_bfill,	 13,   3,  13, 0xff, 0x00, 0x00, 0x00}, // bfill cb d cb 
	{0x7e3d, &op_bfill,	 13,   3,  14, 0xff, 0x00, 0x00, 0x00}, // bfill cb d pi 
	{0x7f3d, &op_bfill,	 13,   3,   8, 0xff, 0x00, 0x04, 0x00}, // bfill cb d <literal> 
	{0x704d, &op_bfill,	 13,   4,   0, 0xff, 0x00, 0x00, 0x00}, // bfill cb e a 
	{0x714d, &op_bfill,	 13,   4,   1, 0xff, 0x00, 0x00, 0x00}, // bfill cb e b 
	{0x724d, &op_bfill,	 13,   4,   2, 0xff, 0x00, 0x00, 0x00}, // bfill cb e c 
	{0x734d, &op_bfill,	 13,   4,   3, 0xff, 0x00, 0x00, 0x00}, // bfill cb e d 
	{0x744d, &op_bfill,	 13,   4,   4, 0xff, 0x00, 0x00, 0x00}, // bfill cb e e 
	{0x754d, &op_bfill,	 13,   4,   5, 0xff, 0x00, 0x00, 0x00}, // bfill cb e f 
	{0x764d, &op_bfill,	 13,   4,   6, 0xff, 0x00, 0x00, 0x00}, // bfill cb e g 
	{0x774d, &op_bfill,	 13,   4,   7, 0xff, 0x00, 0x00, 0x00}, // bfill cb e h 
	{0x784d, &op_bfill,	 13,   4,   8, 0xff, 0x00, 0x00, 0x00}, // bfill cb e pc 
	{0x794d, &op_bfill,	 13,   4,   9, 0xff, 0x00, 0x00, 0x00}, // bfill cb e ra 
	{0x7a4d, &op_bfill,	 13,   4,  10, 0xff, 0x00, 0x00, 0x00}, // bfill cb e sb 
	{0x7b4d, &op_bfill,	 13,   4,  11, 0xff, 0x00, 0x00, 0x00}, // bfill cb e sp 
	{0x7c4d, &op_bfill,	 13,   4,  12, 0xff, 0x00, 0x00, 0x00}, // bfill cb e db 
	{0x7d4d, &op_bfill,	 13,   4,  13, 0xff, 0x00, 0x00, 0x00}, // bfill cb e cb 
	{0x7e4d, &op_bfill,	 13,   4,  14, 0xff, 0x00, 0x00, 0x00}, // bfill cb e pi 
	{0x7f4d, &op_bfill,	 13,   4,   8, 0xff, 0x00, 0x04, 0x00}, // bfill cb e <literal> 
	{0x705d, &op_bfill,	 13,   5,   0, 0xff, 0x00, 0x00, 0x00}, // bfill cb f a 
	{0x715d, &op_bfill,	 13,   5,   1, 0xff, 0x00, 0x00, 0x00}, // bfill cb f b 
	{0x725d, &op_bfill,	 13,   5,   2, 0xff, 0x00, 0x00, 0x00}, // bfill cb f c 
	{0x735d, &op_bfill,	 13,   5,   3, 0xff, 0x00, 0x00, 0x00}, // bfill cb f d 
	{0x745d, &op_bfill,	 13,   5,   4, 0xff, 0x00, 0x00, 0x00}, // bfill cb f e 
	{0x755d, &op_bfill,	 13,   5,   5, 0xff, 0x00, 0x00, 0x00}, // bfill cb f f 
	{0x765d, &op_bfill,	 13,   5,   6, 0xff, 0x00, 0x00, 0x00}, // bfill cb f g 
	{0x775d, &op_bfill,	 13,   5,   7, 0xff, 0x00, 0x00, 0x00}, // bfill cb f h 
	{0x785d, &op_bfill,	 13,   5,   8, 0xff, 0x00, 0x00, 0x00}, // bfill cb f pc 
	{0x795d, &op_bfill,	 13,   5,   9, 0xff, 0x00, 0x00, 0x00}, // bfill cb f ra 
	{0x7a5d, &op_bfill,	 13,   5,  10, 0xff, 0x00, 0x00, 0x00}, // bfill cb f sb 
	{0x7b5d, &op_bfill,	 13,   5,  11, 0xff, 0x00, 0x00, 0x00}, // bfill cb f sp 
	{0x7c5d, &op_bfill,	 13,   5,  12, 0xff, 0x00, 0x00, 0x00}, // bfill cb f db 
	{0x7d5d, &op_bfill,	 13,   5,  13, 0xff, 0x00, 0x00, 0x00}, // bfill cb f cb 
	{0x7e5d, &op_bfill,	 13,   5,  14, 0xff, 0x00, 0x00, 0x00}, // bfill cb f pi 
	{0x7f5d, &op_bfill,	 13,   5,   8, 0xff, 0x00, 0x04, 0x00}, // bfill cb f <literal> 
	{0x706d, &op_bfill,	 13,   6,   0, 0xff, 0x00, 0x00, 0x00}, // bfill cb g a 
	{0x716d, &op_bfill,	 13,   6,   1, 0xff, 0x00, 0x00, 0x00}, // bfill cb g b 
	{0x726d, &op_bfill,	 13,   6,   2, 0xff, 0x00, 0x00, 0x00}, // bfill cb g c 
	{0x736d, &op_bfill,	 13,   6,   3, 0xff, 0x00, 0x00, 0x00}, // bfill cb g d 
	{0x746d, &op_bfill,	 13,   6,   4, 0xff, 0x00, 0x00, 0x00}, // bfill cb g e 
	{0x756d, &op_bfill,	 13,   6,   5, 0xff, 0x00, 0x00, 0x00}, // bfill cb g f 
	{0x766d, &op_bfill,	 13,   6,   6, 0xff, 0x00, 0x00, 0x00}, // bfill cb g g 
	{0x776d, &op_bfill,	 13,   6,   7, 0xff, 0x00, 0x00, 0x00}, // bfill cb g h 
	{0x786d, &op_bfill,	 13,   6,   8, 0xff, 0x00, 0x00, 0x00}, // bfill cb g pc 
	{0x796d, &op_bfill,	 13,   6,   9, 0xff, 0x00, 0x00, 0x00}, // bfill cb g ra 
	{0x7a6d, &op_bfill,	 13,   6,  10, 0xff, 0x00, 0x00, 0x00}, // bfill cb g sb 
	{0x7b6d, &op_bfill,	 13,   6,  11, 0xff, 0x00, 0x00, 0x00}, // bfill cb g sp 
	{0x7c6d, &op_bfill,	 13,   6,  12, 0xff, 0x00, 0x00, 0x00}, // bfill cb g db 
	{0x7d6d, &op_bfill,	 13,   6,  13, 0xff, 0x00, 0x00, 0x00}, // bfill cb g cb 
	{0x7e6d, &op_bfill,	 13,   6,  14, 0xff, 0x00, 0x00, 0x00}, // bfill cb g pi 
	{0x7f6d, &op_bfill,	 13,   6,   8, 0xff, 0x00, 0x04, 0x00}, // bfill cb g <literal> 
	{0x707d, &op_bfill,	 13,   7,   0, 0xff, 0x00, 0x00, 0x00}, // bfill cb h a 
	{0x717d, &op_bfill,	 13,   7,   1, 0xff, 0x00, 0x00, 0x00}, // bfill cb h b 
	{0x727d, &op_bfill,	 13,   7,   2, 0xff, 0x00, 0x00, 0x00}, // bfill cb h c 
	{0x737d, &op_bfill,	 13,   7,   3, 0xff, 0x00, 0x00, 0x00}, // bfill cb h d 
	{0x747d, &op_bfill,	 13,   7,   4, 0xff, 0x00, 0x00, 0x00}, // bfill cb h e 
	{0x757d, &op_bfill,	 13,   7,   5, 0xff, 0x00, 0x00, 0x00}, // bfill cb h f 
	{0x767d, &op_bfill,	 13,   7,   6, 0xff, 0x00, 0x00, 0x00}, // bfill cb h g 
	{0x777d, &op_bfill,	 13,   7,   7, 0xff, 0x00, 0x00, 0x00}, // bfill cb h h 
	{0x787d, &op_bfill,	 13,   7,   8, 0xff, 0x00, 0x00, 0x00}, // bfill cb h pc 
	{0x797d, &op_bfill,	 13,   7,   9, 0xff, 0x00, 0x00, 0x00}, // bfill cb h ra 
	{0x7a7d, &op_bfill,	 13,   7,  10, 0xff, 0x00, 0x00, 0x00}, // bfill cb h sb 
	{0x7b7d, &op_bfill,	 13,   7,  11, 0xff, 0x00, 0x00, 0x00}, // bfill cb h sp 
	{0x7c7d, &op_bfill,	 13,   7,  12, 0xff, 0x00, 0x00, 0x00}, // bfill cb h db 
	{0x7d7d, &op_bfill,	 13,   7,  13, 0xff, 0x00, 0x00, 0x00}, // bfill cb h cb 
	{0x7e7d, &op_bfill,	 13,   7,  14, 0xff, 0x00, 0x00, 0x00}, // bfill cb h pi 
	{0x7f7d, &op_bfill,	 13,   7,   8, 0xff, 0x00, 0x04, 0x00}, // bfill cb h <literal> 
	{0x708d, &op_bfill,	 13,   8,   0, 0xff, 0x00, 0x00, 0x00}, // bfill cb pc a 
	{0x718d, &op_bfill,	 13,   8,   1, 0xff, 0x00, 0x00, 0x00}, // bfill cb pc b 
	{0x728d, &op_bfill,	 13,   8,   2, 0xff, 0x00, 0x00, 0x00}, // bfill cb pc c 
	{0x738d, &op_bfill,	 13,   8,   3, 0xff, 0x00, 0x00, 0x00}, // bfill cb pc d 
	{0x748d, &op_bfill,	 13,   8,   4, 0xff, 0x00, 0x00, 0x00}, // bfill cb pc e 
	{0x758d, &op_bfill,	 13,   8,   5, 0xff, 0x00, 0x00, 0x00}, // bfill cb pc f 
	{0x768d, &op_bfill,	 13,   8,   6, 0xff, 0x00, 0x00, 0x00}, // bfill cb pc g 
	{0x778d, &op_bfill,	 13,   8,   7, 0xff, 0x00, 0x00, 0x00}, // bfill cb pc h 
	{0x788d, &op_bfill,	 13,   8,   8, 0xff, 0x00, 0x00, 0x00}, // bfill cb pc pc 
	{0x798d, &op_bfill,	 13,   8,   9, 0xff, 0x00, 0x00, 0x00}, // bfill cb pc ra 
	{0x7a8d, &op_bfill,	 13,   8,  10, 0xff, 0x00, 0x00, 0x00}, // bfill cb pc sb 
	{0x7b8d, &op_bfill,	 13,   8,  11, 0xff, 0x00, 0x00, 0x00}, // bfill cb pc sp 
	{0x7c8d, &op_bfill,	 13,   8,  12, 0xff, 0x00, 0x00, 0x00}, // bfill cb pc db 
	{0x7d8d, &op_bfill,	 13,   8,  13, 0xff, 0x00, 0x00, 0x00}, // bfill cb pc cb 
	{0x7e8d, &op_bfill,	 13,   8,  14, 0xff, 0x00, 0x00, 0x00}, // bfill cb pc pi 
	{0x7f8d, &op_bfill,	 13,   8,   8, 0xff, 0x00, 0x04, 0x00}, // bfill cb pc <literal> 
	{0x709d, &op_bfill,	 13,   9,   0, 0xff, 0x00, 0x00, 0x00}, // bfill cb ra a 
	{0x719d, &op_bfill,	 13,   9,   1, 0xff, 0x00, 0x00, 0x00}, // bfill cb ra b 
	{0x729d, &op_bfill,	 13,   9,   2, 0xff, 0x00, 0x00, 0x00}, // bfill cb ra c 
	{0x739d, &op_bfill,	 13,   9,   3, 0xff, 0x00, 0x00, 0x00}, // bfill cb ra d 
	{0x749d, &op_bfill,	 13,   9,   4, 0xff, 0x00, 0x00, 0x00}, // bfill cb ra e 
	{0x759d, &op_bfill,	 13,   9,   5, 0xff, 0x00, 0x00, 0x00}, // bfill cb ra f 
	{0x769d, &op_bfill,	 13,   9,   6, 0xff, 0x00, 0x00, 0x00}, // bfill cb ra g 
	{0x779d, &op_bfill,	 13,   9,   7, 0xff, 0x00, 0x00, 0x00}, // bfill cb ra h 
	{0x789d, &op_bfill,	 13,   9,   8, 0xff, 0x00, 0x00, 0x00}, // bfill cb ra pc 
	{0x799d, &op_bfill,	 13,   9,   9, 0xff, 0x00, 0x00, 0x00}, // bfill cb ra ra 
	{0x7a9d, &op_bfill,	 13,   9,  10, 0xff, 0x00, 0x00, 0x00}, // bfill cb ra sb 
	{0x7b9d, &op_bfill,	 13,   9,  11, 0xff, 0x00, 0x00, 0x00}, // bfill cb ra sp 
	{0x7c9d, &op_bfill,	 13,   9,  12, 0xff, 0x00, 0x00, 0x00}, // bfill cb ra db 
	{0x7d9d, &op_bfill,	 13,   9,  13, 0xff, 0x00, 0x00, 0x00}, // bfill cb ra cb 
	{0x7e9d, &op_bfill,	 13,   9,  14, 0xff, 0x00, 0x00, 0x00}, // bfill cb ra pi 
	{0x7f9d, &op_bfill,	 13,   9,   8, 0xff, 0x00, 0x04, 0x00}, // bfill cb ra <literal> 
	{0x70ad, &op_bfill,	 13,  10,   0, 0xff, 0x00, 0x00, 0x00}, // bfill cb sb a 
	{0x71ad, &op_bfill,	 13,  10,   1, 0xff, 0x00, 0x00, 0x00}, // bfill cb sb b 
	{0x72ad, &op_bfill,	 13,  10,   2, 0xff, 0x00, 0x00, 0x00}, // bfill cb sb c 
	{0x73ad, &op_bfill,	 13,  10,   3, 0xff, 0x00, 0x00, 0x00}, // bfill cb sb d 
	{0x74ad, &op_bfill,	 13,  10,   4, 0xff, 0x00, 0x00, 0x00}, // bfill cb sb e 
	{0x75ad, &op_bfill,	 13,  10,   5, 0xff, 0x00, 0x00, 0x00}, // bfill cb sb f 
	{0x76ad, &op_bfill,	 13,  10,   6, 0xff, 0x00, 0x00, 0x00}, // bfill cb sb g 
	{0x77ad, &op_bfill,	 13,  10,   7, 0xff, 0x00, 0x00, 0x00}, // bfill cb sb h 
	{0x78ad, &op_bfill,	 13,  10,   8, 0xff, 0x00, 0x00, 0x00}, // bfill cb sb pc 
	{0x79ad, &op_bfill,	 13,  10,   9, 0xff, 0x00, 0x00, 0x00}, // bfill cb sb ra 
	{0x7aad, &op_bfill,	 13,  10,  10, 0xff, 0x00, 0x00, 0x00}, // bfill cb sb sb 
	{0x7bad, &op_bfill,	 13,  10,  11, 0xff, 0x00, 0x00, 0x00}, // bfill cb sb sp 
	{0x7cad, &op_bfill,	 13,  10,  12, 0xff, 0x00, 0x00, 0x00}, // bfill cb sb db 
	{0x7dad, &op_bfill,	 13,  10,  13, 0xff, 0x00, 0x00, 0x00}, // bfill cb sb cb 
	{0x7ead, &op_bfill,	 13,  10,  14, 0xff, 0x00, 0x00, 0x00}, // bfill cb sb pi 
	{0x7fad, &op_bfill,	 13,  10,   8, 0xff, 0x00, 0x04, 0x00}, // bfill cb sb <literal> 
	{0x70bd, &op_bfill,	 13,  11,   0, 0xff, 0x00, 0x00, 0x00}, // bfill cb sp a 
	{0x71bd, &op_bfill,	 13,  11,   1, 0xff, 0x00, 0x00, 0x00}, // bfill cb sp b 
	{0x72bd, &op_bfill,	 13,  11,   2, 0xff, 0x00, 0x00, 0x00}, // bfill cb sp c 
	{0x73bd, &op_bfill,	 13,  11,   3, 0xff, 0x00, 0x00, 0x00}, // bfill cb sp d 
	{0x74bd, &op_bfill,	 13,  11,   4, 0xff, 0x00, 0x00, 0x00}, // bfill cb sp e 
	{0x75bd, &op_bfill,	 13,  11,   5, 0xff, 0x00, 0x00, 0x00}, // bfill cb sp f 
	{0x76bd, &op_bfill,	 13,  11,   6, 0xff, 0x00, 0x00, 0x00}, // bfill cb sp g 
	{0x77bd, &op_bfill,	 13,  11,   7, 0xff, 0x00, 0x00, 0x00}, // bfill cb sp h 
	{0x78bd, &op_bfill,	 13,  11,   8, 0xff, 0x00, 0x00, 0x00}, // bfill cb sp pc 
	{0x79bd, &op_bfill,	 13,  11,   9, 0xff, 0x00, 0x00, 0x00}, // bfill cb sp ra 
	{0x7abd, &op_bfill,	 13,  11,  10, 0xff, 0x00, 0x00, 0x00}, // bfill cb sp sb 
	{0x7bbd, &op_bfill,	 13,  11,  11, 0xff, 0x00, 0x00, 0x00}, // bfill cb sp sp 
	{0x7cbd, &op_bfill,	 13,  11,  12, 0xff, 0x00, 0x00, 0x00}, // bfill cb sp db 
	{0x7dbd, &op_bfill,	 13,  11,  13, 0xff, 0x00, 0x00, 0x00}, // bfill cb sp cb 
	{0x7ebd, &op_bfill,	 13,  11,  14, 0xff, 0x00, 0x00, 0x00}, // bfill cb sp pi 
	{0x7fbd, &op_bfill,	 13,  11,   8, 0xff, 0x00, 0x04, 0x00}, // bfill cb sp <literal> 
	{0x70cd, &op_bfill,	 13,  12,   0, 0xff, 0x00, 0x00, 0x00}, // bfill cb db a 
	{0x71cd, &op_bfill,	 13,  12,   1, 0xff, 0x00, 0x00, 0x00}, // bfill cb db b 
	{0x72cd, &op_bfill,	 13,  12,   2, 0xff, 0x00, 0x00, 0x00}, // bfill cb db c 
	{0x73cd, &op_bfill,	 13,  12,   3, 0xff, 0x00, 0x00, 0x00}, // bfill cb db d 
	{0x74cd, &op_bfill,	 13,  12,   4, 0xff, 0x00, 0x00, 0x00}, // bfill cb db e 
	{0x75cd, &op_bfill,	 13,  12,   5, 0xff, 0x00, 0x00, 0x00}, // bfill cb db f 
	{0x76cd, &op_bfill,	 13,  12,   6, 0xff, 0x00, 0x00, 0x00}, // bfill cb db g 
	{0x77cd, &op_bfill,	 13,  12,   7, 0xff, 0x00, 0x00, 0x00}, // bfill cb db h 
	{0x78cd, &op_bfill,	 13,  12,   8, 0xff, 0x00, 0x00, 0x00}, // bfill cb db pc 
	{0x79cd, &op_bfill,	 13,  12,   9, 0xff, 0x00, 0x00, 0x00}, // bfill cb db ra 
	{0x7acd, &op_bfill,	 13,  12,  10, 0xff, 0x00, 0x00, 0x00}, // bfill cb db sb 
	{0x7bcd, &op_bfill,	 13,  12,  11, 0xff, 0x00, 0x00, 0x00}, // bfill cb db sp 
	{0x7ccd, &op_bfill,	 13,  12,  12, 0xff, 0x00, 0x00, 0x00}, // bfill cb db db 
	{0x7dcd, &op_bfill,	 13,  12,  13, 0xff, 0x00, 0x00, 0x00}, // bfill cb db cb 
	{0x7ecd, &op_bfill,	 13,  12,  14, 0xff, 0x00, 0x00, 0x00}, // bfill cb db pi 
	{0x7fcd, &op_bfill,	 13,  12,   8, 0xff, 0x00, 0x04, 0x00}, // bfill cb db <literal> 
	{0x70dd, &op_bfill,	 13,  13,   0, 0xff, 0x00, 0x00, 0x00}, // bfill cb cb a 
	{0x71dd, &op_bfill,	 13,  13,   1, 0xff, 0x00, 0x00, 0x00}, // bfill cb cb b 
	{0x72dd, &op_bfill,	 13,  13,   2, 0xff, 0x00, 0x00, 0x00}, // bfill cb cb c 
	{0x73dd, &op_bfill,	 13,  13,   3, 0xff, 0x00, 0x00, 0x00}, // bfill cb cb d 
	{0x74dd, &op_bfill,	 13,  13,   4, 0xff, 0x00, 0x00, 0x00}, // bfill cb cb e 
	{0x75dd, &op_bfill,	 13,  13,   5, 0xff, 0x00, 0x00, 0x00}, // bfill cb cb f 
	{0x76dd, &op_bfill,	 13,  13,   6, 0xff, 0x00, 0x00, 0x00}, // bfill cb cb g 
	{0x77dd, &op_bfill,	 13,  13,   7, 0xff, 0x00, 0x00, 0x00}, // bfill cb cb h 
	{0x78dd, &op_bfill,	 13,  13,   8, 0xff, 0x00, 0x00, 0x00}, // bfill cb cb pc 
	{0x79dd, &op_bfill,	 13,  13,   9, 0xff, 0x00, 0x00, 0x00}, // bfill cb cb ra 
	{0x7add, &op_bfill,	 13,  13,  10, 0xff, 0x00, 0x00, 0x00}, // bfill cb cb sb 
	{0x7bdd, &op_bfill,	 13,  13,  11, 0xff, 0x00, 0x00, 0x00}, // bfill cb cb sp 
	{0x7cdd, &op_bfill,	 13,  13,  12, 0xff, 0x00, 0x00, 0x00}, // bfill cb cb db 
	{0x7ddd, &op_bfill,	 13,  13,  13, 0xff, 0x00, 0x00, 0x00}, // bfill cb cb cb 
	{0x7edd, &op_bfill,	 13,  13,  14, 0xff, 0x00, 0x00, 0x00}, // bfill cb cb pi 
	{0x7fdd, &op_bfill,	 13,  13,   8, 0xff, 0x00, 0x04, 0x00}, // bfill cb cb <literal> 
	{0x70ed, &op_bfill,	 13,  14,   0, 0xff, 0x00, 0x00, 0x00}, // bfill cb pi a 
	{0x71ed, &op_bfill,	 13,  14,   1, 0xff, 0x00, 0x00, 0x00}, // bfill cb pi b 
	{0x72ed, &op_bfill,	 13,  14,   2, 0xff, 0x00, 0x00, 0x00}, // bfill cb pi c 
	{0x73ed, &op_bfill,	 13,  14,   3, 0xff, 0x00, 0x00, 0x00}, // bfill cb pi d 
	{0x74ed, &op_bfill,	 13,  14,   4, 0xff, 0x00, 0x00, 0x00}, // bfill cb pi e 
	{0x75ed, &op_bfill,	 13,  14,   5, 0xff, 0x00, 0x00, 0x00}, // bfill cb pi f 
	{0x76ed, &op_bfill,	 13,  14,   6, 0xff, 0x00, 0x00, 0x00}, // bfill cb pi g 
	{0x77ed, &op_bfill,	 13,  14,   7, 0xff, 0x00, 0x00, 0x00}, // bfill cb pi h 
	{0x78ed, &op_bfill,	 13,  14,   8, 0xff, 0x00, 0x00, 0x00}, // bfill cb pi pc 
	{0x79ed, &op_bfill,	 13,  14,   9, 0xff, 0x00, 0x00, 0x00}, // bfill cb pi ra 
	{0x7aed, &op_bfill,	 13,  14,  10, 0xff, 0x00, 0x00, 0x00}, // bfill cb pi sb 
	{0x7bed, &op_bfill,	 13,  14,  11, 0xff, 0x00, 0x00, 0x00}, // bfill cb pi sp 
	{0x7ced, &op_bfill,	 13,  14,  12, 0xff, 0x00, 0x00, 0x00}, // bfill cb pi db 
	{0x7ded, &op_bfill,	 13,  14,  13, 0xff, 0x00, 0x00, 0x00}, // bfill cb pi cb 
	{0x7eed, &op_bfill,	 13,  14,  14, 0xff, 0x00, 0x00, 0x00}, // bfill cb pi pi 
	{0x7fed, &op_bfill,	 13,  14,   8, 0xff, 0x00, 0x04, 0x00}, // bfill cb pi <literal> 
	{0x70fd, &op_bfill,	 13,  15,   0, 0xff, 0x00, 0x00, 0x00}, // bfill cb status a 
	{0x71fd, &op_bfill,	 13,  15,   1, 0xff, 0x00, 0x00, 0x00}, // bfill cb status b 
	{0x72fd, &op_bfill,	 13,  15,   2, 0xff, 0x00, 0x00, 0x00}, // bfill cb status c 
	{0x73fd, &op_bfill,	 13,  15,   3, 0xff, 0x00, 0x00, 0x00}, // bfill cb status d 
	{0x74fd, &op_bfill,	 13,  15,   4, 0xff, 0x00, 0x00, 0x00}, // bfill cb status e 
	{0x75fd, &op_bfill,	 13,  15,   5, 0xff, 0x00, 0x00, 0x00}, // bfill cb status f 
	{0x76fd, &op_bfill,	 13,  15,   6, 0xff, 0x00, 0x00, 0x00}, // bfill cb status g 
	{0x77fd, &op_bfill,	 13,  15,   7, 0xff, 0x00, 0x00, 0x00}, // bfill cb status h 
	{0x78fd, &op_bfill,	 13,  15,   8, 0xff, 0x00, 0x00, 0x00}, // bfill cb status pc 
	{0x79fd, &op_bfill,	 13,  15,   9, 0xff, 0x00, 0x00, 0x00}, // bfill cb status ra 
	{0x7afd, &op_bfill,	 13,  15,  10, 0xff, 0x00, 0x00, 0x00}, // bfill cb status sb 
	{0x7bfd, &op_bfill,	 13,  15,  11, 0xff, 0x00, 0x00, 0x00}, // bfill cb status sp 
	{0x7cfd, &op_bfill,	 13,  15,  12, 0xff, 0x00, 0x00, 0x00}, // bfill cb status db 
	{0x7dfd, &op_bfill,	 13,  15,  13, 0xff, 0x00, 0x00, 0x00}, // bfill cb status cb 
	{0x7efd, &op_bfill,	 13,  15,  14, 0xff, 0x00, 0x00, 0x00}, // bfill cb status pi 
	{0x7ffd, &op_bfill,	 13,  15,   8, 0xff, 0x00, 0x04, 0x00}, // bfill cb status <literal> 
	{0x700e, &op_bfill,	 14,   0,   0, 0xff, 0x00, 0x00, 0x00}, // bfill pi a a 
	{0x710e, &op_bfill,	 14,   0,   1, 0xff, 0x00, 0x00, 0x00}, // bfill pi a b 
	{0x720e, &op_bfill,	 14,   0,   2, 0xff, 0x00, 0x00, 0x00}, // bfill pi a c 
	{0x730e, &op_bfill,	 14,   0,   3, 0xff, 0x00, 0x00, 0x00}, // bfill pi a d 
	{0x740e, &op_bfill,	 14,   0,   4, 0xff, 0x00, 0x00, 0x00}, // bfill pi a e 
	{0x750e, &op_bfill,	 14,   0,   5, 0xff, 0x00, 0x00, 0x00}, // bfill pi a f 
	{0x760e, &op_bfill,	 14,   0,   6, 0xff, 0x00, 0x00, 0x00}, // bfill pi a g 
	{0x770e, &op_bfill,	 14,   0,   7, 0xff, 0x00, 0x00, 0x00}, // bfill pi a h 
	{0x780e, &op_bfill,	 14,   0,   8, 0xff, 0x00, 0x00, 0x00}, // bfill pi a pc 
	{0x790e, &op_bfill,	 14,   0,   9, 0xff, 0x00, 0x00, 0x00}, // bfill pi a ra 
	{0x7a0e, &op_bfill,	 14,   0,  10, 0xff, 0x00, 0x00, 0x00}, // bfill pi a sb 
	{0x7b0e, &op_bfill,	 14,   0,  11, 0xff, 0x00, 0x00, 0x00}, // bfill pi a sp 
	{0x7c0e, &op_bfill,	 14,   0,  12, 0xff, 0x00, 0x00, 0x00}, // bfill pi a db 
	{0x7d0e, &op_bfill,	 14,   0,  13, 0xff, 0x00, 0x00, 0x00}, // bfill pi a cb 
	{0x7e0e, &op_bfill,	 14,   0,  14, 0xff, 0x00, 0x00, 0x00}, // bfill pi a pi 
	{0x7f0e, &op_bfill,	 14,   0,   8, 0xff, 0x00, 0x04, 0x00}, // bfill pi a <literal> 
	{0x701e, &op_bfill,	 14,   1,   0, 0xff, 0x00, 0x00, 0x00}, // bfill pi b a 
	{0x711e, &op_bfill,	 14,   1,   1, 0xff, 0x00, 0x00, 0x00}, // bfill pi b b 
	{0x721e, &op_bfill,	 14,   1,   2, 0xff, 0x00, 0x00, 0x00}, // bfill pi b c 
	{0x731e, &op_bfill,	 14,   1,   3, 0xff, 0x00, 0x00, 0x00}, // bfill pi b d 
	{0x741e, &op_bfill,	 14,   1,   4, 0xff, 0x00, 0x00, 0x00}, // bfill pi b e 
	{0x751e, &op_bfill,	 14,   1,   5, 0xff, 0x00, 0x00, 0x00}, // bfill pi b f 
	{0x761e, &op_bfill,	 14,   1,   6, 0xff, 0x00, 0x00, 0x00}, // bfill pi b g 
	{0x771e, &op_bfill,	 14,   1,   7, 0xff, 0x00, 0x00, 0x00}, // bfill pi b h 
	{0x781e, &op_bfill,	 14,   1,   8, 0xff, 0x00, 0x00, 0x00}, // bfill pi b pc 
	{0x791e, &op_bfill,	 14,   1,   9, 0xff, 0x00, 0x00, 0x00}, // bfill pi b ra 
	{0x7a1e, &op_bfill,	 14,   1,  10, 0xff, 0x00, 0x00, 0x00}, // bfill pi b sb 
	{0x7b1e, &op_bfill,	 14,   1,  11, 0xff, 0x00, 0x00, 0x00}, // bfill pi b sp 
	{0x7c1e, &op_bfill,	 14,   1,  12, 0xff, 0x00, 0x00, 0x00}, // bfill pi b db 
	{0x7d1e, &op_bfill,	 14,   1,  13, 0xff, 0x00, 0x00, 0x00}, // bfill pi b cb 
	{0x7e1e, &op_bfill,	 14,   1,  14, 0xff, 0x00, 0x00, 0x00}, // bfill pi b pi 
	{0x7f1e, &op_bfill,	 14,   1,   8, 0xff, 0x00, 0x04, 0x00}, // bfill pi b <literal> 
	{0x702e, &op_bfill,	 14,   2,   0, 0xff, 0x00, 0x00, 0x00}, // bfill pi c a 
	{0x712e, &op_bfill,	 14,   2,   1, 0xff, 0x00, 0x00, 0x00}, // bfill pi c b 
	{0x722e, &op_bfill,	 14,   2,   2, 0xff, 0x00, 0x00, 0x00}, // bfill pi c c 
	{0x732e, &op_bfill,	 14,   2,   3, 0xff, 0x00, 0x00, 0x00}, // bfill pi c d 
	{0x742e, &op_bfill,	 14,   2,   4, 0xff, 0x00, 0x00, 0x00}, // bfill pi c e 
	{0x752e, &op_bfill,	 14,   2,   5, 0xff, 0x00, 0x00, 0x00}, // bfill pi c f 
	{0x762e, &op_bfill,	 14,   2,   6, 0xff, 0x00, 0x00, 0x00}, // bfill pi c g 
	{0x772e, &op_bfill,	 14,   2,   7, 0xff, 0x00, 0x00, 0x00}, // bfill pi c h 
	{0x782e, &op_bfill,	 14,   2,   8, 0xff, 0x00, 0x00, 0x00}, // bfill pi c pc 
	{0x792e, &op_bfill,	 14,   2,   9, 0xff, 0x00, 0x00, 0x00}, // bfill pi c ra 
	{0x7a2e, &op_bfill,	 14,   2,  10, 0xff, 0x00, 0x00, 0x00}, // bfill pi c sb 
	{0x7b2e, &op_bfill,	 14,   2,  11, 0xff, 0x00, 0x00, 0x00}, // bfill pi c sp 
	{0x7c2e, &op_bfill,	 14,   2,  12, 0xff, 0x00, 0x00, 0x00}, // bfill pi c db 
	{0x7d2e, &op_bfill,	 14,   2,  13, 0xff, 0x00, 0x00, 0x00}, // bfill pi c cb 
	{0x7e2e, &op_bfill,	 14,   2,  14, 0xff, 0x00, 0x00, 0x00}, // bfill pi c pi 
	{0x7f2e, &op_bfill,	 14,   2,   8, 0xff, 0x00, 0x04, 0x00}, // bfill pi c <literal> 
	{0x703e, &op_bfill,	 14,   3,   0, 0xff, 0x00, 0x00, 0x00}, // bfill pi d a 
	{0x713e, &op_bfill,	 14,   3,   1, 0xff, 0x00, 0x00, 0x00}, // bfill pi d b 
	{0x723e, &op_bfill,	 14,   3,   2, 0xff, 0x00, 0x00, 0x00}, // bfill pi d c 
	{0x733e, &op_bfill,	 14,   3,   3, 0xff, 0x00, 0x00, 0x00}, // bfill pi d d 
	{0x743e, &op_bfill,	 14,   3,   4, 0xff, 0x00, 0x00, 0x00}, // bfill pi d e 
	{0x753e, &op_bfill,	 14,   3,   5, 0xff, 0x00, 0x00, 0x00}, // bfill pi d f 
	{0x763e, &op_bfill,	 14,   3,   6, 0xff, 0x00, 0x00, 0x00}, // bfill pi d g 
	{0x773e, &op_bfill,	 14,   3,   7, 0xff, 0x00, 0x00, 0x00}, // bfill pi d h 
	{0x783e, &op_bfill,	 14,   3,   8, 0xff, 0x00, 0x00, 0x00}, // bfill pi d pc 
	{0x793e, &op_bfill,	 14,   3,   9, 0xff, 0x00, 0x00, 0x00}, // bfill pi d ra 
	{0x7a3e, &op_bfill,	 14,   3,  10, 0xff, 0x00, 0x00, 0x00}, // bfill pi d sb 
	{0x7b3e, &op_bfill,	 14,   3,  11, 0xff, 0x00, 0x00, 0x00}, // bfill pi d sp 
	{0x7c3e, &op_bfill,	 14,   3,  12, 0xff, 0x00, 0x00, 0x00}, // bfill pi d db 
	{0x7d3e, &op_bfill,	 14,   3,  13, 0xff, 0x00, 0x00, 0x00}, // bfill pi d cb 
	{0x7e3e, &op_bfill,	 14,   3,  14, 0xff, 0x00, 0x00, 0x00}, // bfill pi d pi 
	{0x7f3e, &op_bfill,	 14,   3,   8, 0xff, 0x00, 0x04, 0x00}, // bfill pi d <literal> 
	{0x704e, &op_bfill,	 14,   4,   0, 0xff, 0x00, 0x00, 0x00}, // bfill pi e a 
	{0x714e, &op_bfill,	 14,   4,   1, 0xff, 0x00, 0x00, 0x00}, // bfill pi e b 
	{0x724e, &op_bfill,	 14,   4,   2, 0xff, 0x00, 0x00, 0x00}, // bfill pi e c 
	{0x734e, &op_bfill,	 14,   4,   3, 0xff, 0x00, 0x00, 0x00}, // bfill pi e d 
	{0x744e, &op_bfill,	 14,   4,   4, 0xff, 0x00, 0x00, 0x00}, // bfill pi e e 
	{0x754e, &op_bfill,	 14,   4,   5, 0xff, 0x00, 0x00, 0x00}, // bfill pi e f 
	{0x764e, &op_bfill,	 14,   4,   6, 0xff, 0x00, 0x00, 0x00}, // bfill pi e g 
	{0x774e, &op_bfill,	 14,   4,   7, 0xff, 0x00, 0x00, 0x00}, // bfill pi e h 
	{0x784e, &op_bfill,	 14,   4,   8, 0xff, 0x00, 0x00, 0x00}, // bfill pi e pc 
	{0x794e, &op_bfill,	 14,   4,   9, 0xff, 0x00, 0x00, 0x00}, // bfill pi e ra 
	{0x7a4e, &op_bfill,	 14,   4,  10, 0xff, 0x00, 0x00, 0x00}, // bfill pi e sb 
	{0x7b4e, &op_bfill,	 14,   4,  11, 0xff, 0x00, 0x00, 0x00}, // bfill pi e sp 
	{0x7c4e, &op_bfill,	 14,   4,  12, 0xff, 0x00, 0x00, 0x00}, // bfill pi e db 
	{0x7d4e, &op_bfill,	 14,   4,  13, 0xff, 0x00, 0x00, 0x00}, // bfill pi e cb 
	{0x7e4e, &op_bfill,	 14,   4,  14, 0xff, 0x00, 0x00, 0x00}, // bfill pi e pi 
	{0x7f4e, &op_bfill,	 14,   4,   8, 0xff, 0x00, 0x04, 0x00}, // bfill pi e <literal> 
	{0x705e, &op_bfill,	 14,   5,   0, 0xff, 0x00, 0x00, 0x00}, // bfill pi f a 
	{0x715e, &op_bfill,	 14,   5,   1, 0xff, 0x00, 0x00, 0x00}, // bfill pi f b 
	{0x725e, &op_bfill,	 14,   5,   2, 0xff, 0x00, 0x00, 0x00}, // bfill pi f c 
	{0x735e, &op_bfill,	 14,   5,   3, 0xff, 0x00, 0x00, 0x00}, // bfill pi f d 
	{0x745e, &op_bfill,	 14,   5,   4, 0xff, 0x00, 0x00, 0x00}, // bfill pi f e 
	{0x755e, &op_bfill,	 14,   5,   5, 0xff, 0x00, 0x00, 0x00}, // bfill pi f f 
	{0x765e, &op_bfill,	 14,   5,   6, 0xff, 0x00, 0x00, 0x00}, // bfill pi f g 
	{0x775e, &op_bfill,	 14,   5,   7, 0xff, 0x00, 0x00, 0x00}, // bfill pi f h 
	{0x785e, &op_bfill,	 14,   5,   8, 0xff, 0x00, 0x00, 0x00}, // bfill pi f pc 
	{0x795e, &op_bfill,	 14,   5,   9, 0xff, 0x00, 0x00, 0x00}, // bfill pi f ra 
	{0x7a5e, &op_bfill,	 14,   5,  10, 0xff, 0x00, 0x00, 0x00}, // bfill pi f sb 
	{0x7b5e, &op_bfill,	 14,   5,  11, 0xff, 0x00, 0x00, 0x00}, // bfill pi f sp 
	{0x7c5e, &op_bfill,	 14,   5,  12, 0xff, 0x00, 0x00, 0x00}, // bfill pi f db 
	{0x7d5e, &op_bfill,	 14,   5,  13, 0xff, 0x00, 0x00, 0x00}, // bfill pi f cb 
	{0x7e5e, &op_bfill,	 14,   5,  14, 0xff, 0x00, 0x00, 0x00}, // bfill pi f pi 
	{0x7f5e, &op_bfill,	 14,   5,   8, 0xff, 0x00, 0x04, 0x00}, // bfill pi f <literal> 
	{0x706e, &op_bfill,	 14,   6,   0, 0xff, 0x00, 0x00, 0x00}, // bfill pi g a 
	{0x716e, &op_bfill,	 14,   6,   1, 0xff, 0x00, 0x00, 0x00}, // bfill pi g b 
	{0x726e, &op_bfill,	 14,   6,   2, 0xff, 0x00, 0x00, 0x00}, // bfill pi g c 
	{0x736e, &op_bfill,	 14,   6,   3, 0xff, 0x00, 0x00, 0x00}, // bfill pi g d 
	{0x746e, &op_bfill,	 14,   6,   4, 0xff, 0x00, 0x00, 0x00}, // bfill pi g e 
	{0x756e, &op_bfill,	 14,   6,   5, 0xff, 0x00, 0x00, 0x00}, // bfill pi g f 
	{0x766e, &op_bfill,	 14,   6,   6, 0xff, 0x00, 0x00, 0x00}, // bfill pi g g 
	{0x776e, &op_bfill,	 14,   6,   7, 0xff, 0x00, 0x00, 0x00}, // bfill pi g h 
	{0x786e, &op_bfill,	 14,   6,   8, 0xff, 0x00, 0x00, 0x00}, // bfill pi g pc 
	{0x796e, &op_bfill,	 14,   6,   9, 0xff, 0x00, 0x00, 0x00}, // bfill pi g ra 
	{0x7a6e, &op_bfill,	 14,   6,  10, 0xff, 0x00, 0x00, 0x00}, // bfill pi g sb 
	{0x7b6e, &op_bfill,	 14,   6,  11, 0xff, 0x00, 0x00, 0x00}, // bfill pi g sp 
	{0x7c6e, &op_bfill,	 14,   6,  12, 0xff, 0x00, 0x00, 0x00}, // bfill pi g db 
	{0x7d6e, &op_bfill,	 14,   6,  13, 0xff, 0x00, 0x00, 0x00}, // bfill pi g cb 
	{0x7e6e, &op_bfill,	 14,   6,  14, 0xff, 0x00, 0x00, 0x00}, // bfill pi g pi 
	{0x7f6e, &op_bfill,	 14,   6,   8, 0xff, 0x00, 0x04, 0x00}, // bfill pi g <literal> 
	{0x707e, &op_bfill,	 14,   7,   0, 0xff, 0x00, 0x00, 0x00}, // bfill pi h a 
	{0x717e, &op_bfill,	 14,   7,   1, 0xff, 0x00, 0x00, 0x00}, // bfill pi h b 
	{0x727e, &op_bfill,	 14,   7,   2, 0xff, 0x00, 0x00, 0x00}, // bfill pi h c 
	{0x737e, &op_bfill,	 14,   7,   3, 0xff, 0x00, 0x00, 0x00}, // bfill pi h d 
	{0x747e, &op_bfill,	 14,   7,   4, 0xff, 0x00, 0x00, 0x00}, // bfill pi h e 
	{0x757e, &op_bfill,	 14,   7,   5, 0xff, 0x00, 0x00, 0x00}, // bfill pi h f 
	{0x767e, &op_bfill,	 14,   7,   6, 0xff, 0x00, 0x00, 0x00}, // bfill pi h g 
	{0x777e, &op_bfill,	 14,   7,   7, 0xff, 0x00, 0x00, 0x00}, // bfill pi h h 
	{0x787e, &op_bfill,	 14,   7,   8, 0xff, 0x00, 0x00, 0x00}, // bfill pi h pc 
	{0x797e, &op_bfill,	 14,   7,   9, 0xff, 0x00, 0x00, 0x00}, // bfill pi h ra 
	{0x7a7e, &op_bfill,	 14,   7,  10, 0xff, 0x00, 0x00, 0x00}, // bfill pi h sb 
	{0x7b7e, &op_bfill,	 14,   7,  11, 0xff, 0x00, 0x00, 0x00}, // bfill pi h sp 
	{0x7c7e, &op_bfill,	 14,   7,  12, 0xff, 0x00, 0x00, 0x00}, // bfill pi h db 
	{0x7d7e, &op_bfill,	 14,   7,  13, 0xff, 0x00, 0x00, 0x00}, // bfill pi h cb 
	{0x7e7e, &op_bfill,	 14,   7,  14, 0xff, 0x00, 0x00, 0x00}, // bfill pi h pi 
	{0x7f7e, &op_bfill,	 14,   7,   8, 0xff, 0x00, 0x04, 0x00}, // bfill pi h <literal> 
	{0x708e, &op_bfill,	 14,   8,   0, 0xff, 0x00, 0x00, 0x00}, // bfill pi pc a 
	{0x718e, &op_bfill,	 14,   8,   1, 0xff, 0x00, 0x00, 0x00}, // bfill pi pc b 
	{0x728e, &op_bfill,	 14,   8,   2, 0xff, 0x00, 0x00, 0x00}, // bfill pi pc c 
	{0x738e, &op_bfill,	 14,   8,   3, 0xff, 0x00, 0x00, 0x00}, // bfill pi pc d 
	{0x748e, &op_bfill,	 14,   8,   4, 0xff, 0x00, 0x00, 0x00}, // bfill pi pc e 
	{0x758e, &op_bfill,	 14,   8,   5, 0xff, 0x00, 0x00, 0x00}, // bfill pi pc f 
	{0x768e, &op_bfill,	 14,   8,   6, 0xff, 0x00, 0x00, 0x00}, // bfill pi pc g 
	{0x778e, &op_bfill,	 14,   8,   7, 0xff, 0x00, 0x00, 0x00}, // bfill pi pc h 
	{0x788e, &op_bfill,	 14,   8,   8, 0xff, 0x00, 0x00, 0x00}, // bfill pi pc pc 
	{0x798e, &op_bfill,	 14,   8,   9, 0xff, 0x00, 0x00, 0x00}, // bfill pi pc ra 
	{0x7a8e, &op_bfill,	 14,   8,  10, 0xff, 0x00, 0x00, 0x00}, // bfill pi pc sb 
	{0x7b8e, &op_bfill,	 14,   8,  11, 0xff, 0x00, 0x00, 0x00}, // bfill pi pc sp 
	{0x7c8e, &op_bfill,	 14,   8,  12, 0xff, 0x00, 0x00, 0x00}, // bfill pi pc db 
	{0x7d8e, &op_bfill,	 14,   8,  13, 0xff, 0x00, 0x00, 0x00}, // bfill pi pc cb 
	{0x7e8e, &op_bfill,	 14,   8,  14, 0xff, 0x00, 0x00, 0x00}, // bfill pi pc pi 
	{0x7f8e, &op_bfill,	 14,   8,   8, 0xff, 0x00, 0x04, 0x00}, // bfill pi pc <literal> 
	{0x709e, &op_bfill,	 14,   9,   0, 0xff, 0x00, 0x00, 0x00}, // bfill pi ra a 
	{0x719e, &op_bfill,	 14,   9,   1, 0xff, 0x00, 0x00, 0x00}, // bfill pi ra b 
	{0x729e, &op_bfill,	 14,   9,   2, 0xff, 0x00, 0x00, 0x00}, // bfill pi ra c 
	{0x739e, &op_bfill,	 14,   9,   3, 0xff, 0x00, 0x00, 0x00}, // bfill pi ra d 
	{0x749e, &op_bfill,	 14,   9,   4, 0xff, 0x00, 0x00, 0x00}, // bfill pi ra e 
	{0x759e, &op_bfill,	 14,   9,   5, 0xff, 0x00, 0x00, 0x00}, // bfill pi ra f 
	{0x769e, &op_bfill,	 14,   9,   6, 0xff, 0x00, 0x00, 0x00}, // bfill pi ra g 
	{0x779e, &op_bfill,	 14,   9,   7, 0xff, 0x00, 0x00, 0x00}, // bfill pi ra h 
	{0x789e, &op_bfill,	 14,   9,   8, 0xff, 0x00, 0x00, 0x00}, // bfill pi ra pc 
	{0x799e, &op_bfill,	 14,   9,   9, 0xff, 0x00, 0x00, 0x00}, // bfill pi ra ra 
	{0x7a9e, &op_bfill,	 14,   9,  10, 0xff, 0x00, 0x00, 0x00}, // bfill pi ra sb 
	{0x7b9e, &op_bfill,	 14,   9,  11, 0xff, 0x00, 0x00, 0x00}, // bfill pi ra sp 
	{0x7c9e, &op_bfill,	 14,   9,  12, 0xff, 0x00, 0x00, 0x00}, // bfill pi ra db 
	{0x7d9e, &op_bfill,	 14,   9,  13, 0xff, 0x00, 0x00, 0x00}, // bfill pi ra cb 
	{0x7e9e, &op_bfill,	 14,   9,  14, 0xff, 0x00, 0x00, 0x00}, // bfill pi ra pi 
	{0x7f9e, &op_bfill,	 14,   9,   8, 0xff, 0x00, 0x04, 0x00}, // bfill pi ra <literal> 
	{0x70ae, &op_bfill,	 14,  10,   0, 0xff, 0x00, 0x00, 0x00}, // bfill pi sb a 
	{0x71ae, &op_bfill,	 14,  10,   1, 0xff, 0x00, 0x00, 0x00}, // bfill pi sb b 
	{0x72ae, &op_bfill,	 14,  10,   2, 0xff, 0x00, 0x00, 0x00}, // bfill pi sb c 
	{0x73ae, &op_bfill,	 14,  10,   3, 0xff, 0x00, 0x00, 0x00}, // bfill pi sb d 
	{0x74ae, &op_bfill,	 14,  10,   4, 0xff, 0x00, 0x00, 0x00}, // bfill pi sb e 
	{0x75ae, &op_bfill,	 14,  10,   5, 0xff, 0x00, 0x00, 0x00}, // bfill pi sb f 
	{0x76ae, &op_bfill,	 14,  10,   6, 0xff, 0x00, 0x00, 0x00}, // bfill pi sb g 
	{0x77ae, &op_bfill,	 14,  10,   7, 0xff, 0x00, 0x00, 0x00}, // bfill pi sb h 
	{0x78ae, &op_bfill,	 14,  10,   8, 0xff, 0x00, 0x00, 0x00}, // bfill pi sb pc 
	{0x79ae, &op_bfill,	 14,  10,   9, 0xff, 0x00, 0x00, 0x00}, // bfill pi sb ra 
	{0x7aae, &op_bfill,	 14,  10,  10, 0xff, 0x00, 0x00, 0x00}, // bfill pi sb sb 
	{0x7bae, &op_bfill,	 14,  10,  11, 0xff, 0x00, 0x00, 0x00}, // bfill pi sb sp 
	{0x7cae, &op_bfill,	 14,  10,  12, 0xff, 0x00, 0x00, 0x00}, // bfill pi sb db 
	{0x7dae, &op_bfill,	 14,  10,  13, 0xff, 0x00, 0x00, 0x00}, // bfill pi sb cb 
	{0x7eae, &op_bfill,	 14,  10,  14, 0xff, 0x00, 0x00, 0x00}, // bfill pi sb pi 
	{0x7fae, &op_bfill,	 14,  10,   8, 0xff, 0x00, 0x04, 0x00}, // bfill pi sb <literal> 
	{0x70be, &op_bfill,	 14,  11,   0, 0xff, 0x00, 0x00, 0x00}, // bfill pi sp a 
	{0x71be, &op_bfill,	 14,  11,   1, 0xff, 0x00, 0x00, 0x00}, // bfill pi sp b 
	{0x72be, &op_bfill,	 14,  11,   2, 0xff, 0x00, 0x00, 0x00}, // bfill pi sp c 
	{0x73be, &op_bfill,	 14,  11,   3, 0xff, 0x00, 0x00, 0x00}, // bfill pi sp d 
	{0x74be, &op_bfill,	 14,  11,   4, 0xff, 0x00, 0x00, 0x00}, // bfill pi sp e 
	{0x75be, &op_bfill,	 14,  11,   5, 0xff, 0x00, 0x00, 0x00}, // bfill pi sp f 
	{0x76be, &op_bfill,	 14,  11,   6, 0xff, 0x00, 0x00, 0x00}, // bfill pi sp g 
	{0x77be, &op_bfill,	 14,  11,   7, 0xff, 0x00, 0x00, 0x00}, // bfill pi sp h 
	{0x78be, &op_bfill,	 14,  11,   8, 0xff, 0x00, 0x00, 0x00}, // bfill pi sp pc 
	{0x79be, &op_bfill,	 14,  11,   9, 0xff, 0x00, 0x00, 0x00}, // bfill pi sp ra 
	{0x7abe, &op_bfill,	 14,  11,  10, 0xff, 0x00, 0x00, 0x00}, // bfill pi sp sb 
	{0x7bbe, &op_bfill,	 14,  11,  11, 0xff, 0x00, 0x00, 0x00}, // bfill pi sp sp 
	{0x7cbe, &op_bfill,	 14,  11,  12, 0xff, 0x00, 0x00, 0x00}, // bfill pi sp db 
	{0x7dbe, &op_bfill,	 14,  11,  13, 0xff, 0x00, 0x00, 0x00}, // bfill pi sp cb 
	{0x7ebe, &op_bfill,	 14,  11,  14, 0xff, 0x00, 0x00, 0x00}, // bfill pi sp pi 
	{0x7fbe, &op_bfill,	 14,  11,   8, 0xff, 0x00, 0x04, 0x00}, // bfill pi sp <literal> 
	{0x70ce, &op_bfill,	 14,  12,   0, 0xff, 0x00, 0x00, 0x00}, // bfill pi db a 
	{0x71ce, &op_bfill,	 14,  12,   1, 0xff, 0x00, 0x00, 0x00}, // bfill pi db b 
	{0x72ce, &op_bfill,	 14,  12,   2, 0xff, 0x00, 0x00, 0x00}, // bfill pi db c 
	{0x73ce, &op_bfill,	 14,  12,   3, 0xff, 0x00, 0x00, 0x00}, // bfill pi db d 
	{0x74ce, &op_bfill,	 14,  12,   4, 0xff, 0x00, 0x00, 0x00}, // bfill pi db e 
	{0x75ce, &op_bfill,	 14,  12,   5, 0xff, 0x00, 0x00, 0x00}, // bfill pi db f 
	{0x76ce, &op_bfill,	 14,  12,   6, 0xff, 0x00, 0x00, 0x00}, // bfill pi db g 
	{0x77ce, &op_bfill,	 14,  12,   7, 0xff, 0x00, 0x00, 0x00}, // bfill pi db h 
	{0x78ce, &op_bfill,	 14,  12,   8, 0xff, 0x00, 0x00, 0x00}, // bfill pi db pc 
	{0x79ce, &op_bfill,	 14,  12,   9, 0xff, 0x00, 0x00, 0x00}, // bfill pi db ra 
	{0x7ace, &op_bfill,	 14,  12,  10, 0xff, 0x00, 0x00, 0x00}, // bfill pi db sb 
	{0x7bce, &op_bfill,	 14,  12,  11, 0xff, 0x00, 0x00, 0x00}, // bfill pi db sp 
	{0x7cce, &op_bfill,	 14,  12,  12, 0xff, 0x00, 0x00, 0x00}, // bfill pi db db 
	{0x7dce, &op_bfill,	 14,  12,  13, 0xff, 0x00, 0x00, 0x00}, // bfill pi db cb 
	{0x7ece, &op_bfill,	 14,  12,  14, 0xff, 0x00, 0x00, 0x00}, // bfill pi db pi 
	{0x7fce, &op_bfill,	 14,  12,   8, 0xff, 0x00, 0x04, 0x00}, // bfill pi db <literal> 
	{0x70de, &op_bfill,	 14,  13,   0, 0xff, 0x00, 0x00, 0x00}, // bfill pi cb a 
	{0x71de, &op_bfill,	 14,  13,   1, 0xff, 0x00, 0x00, 0x00}, // bfill pi cb b 
	{0x72de, &op_bfill,	 14,  13,   2, 0xff, 0x00, 0x00, 0x00}, // bfill pi cb c 
	{0x73de, &op_bfill,	 14,  13,   3, 0xff, 0x00, 0x00, 0x00}, // bfill pi cb d 
	{0x74de, &op_bfill,	 14,  13,   4, 0xff, 0x00, 0x00, 0x00}, // bfill pi cb e 
	{0x75de, &op_bfill,	 14,  13,   5, 0xff, 0x00, 0x00, 0x00}, // bfill pi cb f 
	{0x76de, &op_bfill,	 14,  13,   6, 0xff, 0x00, 0x00, 0x00}, // bfill pi cb g 
	{0x77de, &op_bfill,	 14,  13,   7, 0xff, 0x00, 0x00, 0x00}, // bfill pi cb h 
	{0x78de, &op_bfill,	 14,  13,   8, 0xff, 0x00, 0x00, 0x00}, // bfill pi cb pc 
	{0x79de, &op_bfill,	 14,  13,   9, 0xff, 0x00, 0x00, 0x00}, // bfill pi cb ra 
	{0x7ade, &op_bfill,	 14,  13,  10, 0xff, 0x00, 0x00, 0x00}, // bfill pi cb sb 
	{0x7bde, &op_bfill,	 14,  13,  11, 0xff, 0x00, 0x00, 0x00}, // bfill pi cb sp 
	{0x7cde, &op_bfill,	 14,  13,  12, 0xff, 0x00, 0x00, 0x00}, // bfill pi cb db 
	{0x7dde, &op_bfill,	 14,  13,  13, 0xff, 0x00, 0x00, 0x00}, // bfill pi cb cb 
	{0x7ede, &op_bfill,	 14,  13,  14, 0xff, 0x00, 0x00, 0x00}, // bfill pi cb pi 
	{0x7fde, &op_bfill,	 14,  13,   8, 0xff, 0x00, 0x04, 0x00}, // bfill pi cb <literal> 
	{0x70ee, &op_bfill,	 14,  14,   0, 0xff, 0x00, 0x00, 0x00}, // bfill pi pi a 
	{0x71ee, &op_bfill,	 14,  14,   1, 0xff, 0x00, 0x00, 0x00}, // bfill pi pi b 
	{0x72ee, &op_bfill,	 14,  14,   2, 0xff, 0x00, 0x00, 0x00}, // bfill pi pi c 
	{0x73ee, &op_bfill,	 14,  14,   3, 0xff, 0x00, 0x00, 0x00}, // bfill pi pi d 
	{0x74ee, &op_bfill,	 14,  14,   4, 0xff, 0x00, 0x00, 0x00}, // bfill pi pi e 
	{0x75ee, &op_bfill,	 14,  14,   5, 0xff, 0x00, 0x00, 0x00}, // bfill pi pi f 
	{0x76ee, &op_bfill,	 14,  14,   6, 0xff, 0x00, 0x00, 0x00}, // bfill pi pi g 
	{0x77ee, &op_bfill,	 14,  14,   7, 0xff, 0x00, 0x00, 0x00}, // bfill pi pi h 
	{0x78ee, &op_bfill,	 14,  14,   8, 0xff, 0x00, 0x00, 0x00}, // bfill pi pi pc 
	{0x79ee, &op_bfill,	 14,  14,   9, 0xff, 0x00, 0x00, 0x00}, // bfill pi pi ra 
	{0x7aee, &op_bfill,	 14,  14,  10, 0xff, 0x00, 0x00, 0x00}, // bfill pi pi sb 
	{0x7bee, &op_bfill,	 14,  14,  11, 0xff, 0x00, 0x00, 0x00}, // bfill pi pi sp 
	{0x7cee, &op_bfill,	 14,  14,  12, 0xff, 0x00, 0x00, 0x00}, // bfill pi pi db 
	{0x7dee, &op_bfill,	 14,  14,  13, 0xff, 0x00, 0x00, 0x00}, // bfill pi pi cb 
	{0x7eee, &op_bfill,	 14,  14,  14, 0xff, 0x00, 0x00, 0x00}, // bfill pi pi pi 
	{0x7fee, &op_bfill,	 14,  14,   8, 0xff, 0x00, 0x04, 0x00}, // bfill pi pi <literal> 
	{0x70fe, &op_bfill,	 14,  15,   0, 0xff, 0x00, 0x00, 0x00}, // bfill pi status a 
	{0x71fe, &op_bfill,	 14,  15,   1, 0xff, 0x00, 0x00, 0x00}, // bfill pi status b 
	{0x72fe, &op_bfill,	 14,  15,   2, 0xff, 0x00, 0x00, 0x00}, // bfill pi status c 
	{0x73fe, &op_bfill,	 14,  15,   3, 0xff, 0x00, 0x00, 0x00}, // bfill pi status d 
	{0x74fe, &op_bfill,	 14,  15,   4, 0xff, 0x00, 0x00, 0x00}, // bfill pi status e 
	{0x75fe, &op_bfill,	 14,  15,   5, 0xff, 0x00, 0x00, 0x00}, // bfill pi status f 
	{0x76fe, &op_bfill,	 14,  15,   6, 0xff, 0x00, 0x00, 0x00}, // bfill pi status g 
	{0x77fe, &op_bfill,	 14,  15,   7, 0xff, 0x00, 0x00, 0x00}, // bfill pi status h 
	{0x78fe, &op_bfill,	 14,  15,   8, 0xff, 0x00, 0x00, 0x00}, // bfill pi status pc 
	{0x79fe, &op_bfill,	 14,  15,   9, 0xff, 0x00, 0x00, 0x00}, // bfill pi status ra 
	{0x7afe, &op_bfill,	 14,  15,  10, 0xff, 0x00, 0x00, 0x00}, // bfill pi status sb 
	{0x7bfe, &op_bfill,	 14,  15,  11, 0xff, 0x00, 0x00, 0x00}, // bfill pi status sp 
	{0x7cfe, &op_bfill,	 14,  15,  12, 0xff, 0x00, 0x00, 0x00}, // bfill pi status db 
	{0x7dfe, &op_bfill,	 14,  15,  13, 0xff, 0x00, 0x00, 0x00}, // bfill pi status cb 
	{0x7efe, &op_bfill,	 14,  15,  14, 0xff, 0x00, 0x00, 0x00}, // bfill pi status pi 
	{0x7ffe, &op_bfill,	 14,  15,   8, 0xff, 0x00, 0x04, 0x00}, // bfill pi status <literal> 
	{0x700f, &op_bfill,	 15,   0,   0, 0xff, 0x00, 0x00, 0x00}, // bfill status a a 
	{0x710f, &op_bfill,	 15,   0,   1, 0xff, 0x00, 0x00, 0x00}, // bfill status a b 
	{0x720f, &op_bfill,	 15,   0,   2, 0xff, 0x00, 0x00, 0x00}, // bfill status a c 
	{0x730f, &op_bfill,	 15,   0,   3, 0xff, 0x00, 0x00, 0x00}, // bfill status a d 
	{0x740f, &op_bfill,	 15,   0,   4, 0xff, 0x00, 0x00, 0x00}, // bfill status a e 
	{0x750f, &op_bfill,	 15,   0,   5, 0xff, 0x00, 0x00, 0x00}, // bfill status a f 
	{0x760f, &op_bfill,	 15,   0,   6, 0xff, 0x00, 0x00, 0x00}, // bfill status a g 
	{0x770f, &op_bfill,	 15,   0,   7, 0xff, 0x00, 0x00, 0x00}, // bfill status a h 
	{0x780f, &op_bfill,	 15,   0,   8, 0xff, 0x00, 0x00, 0x00}, // bfill status a pc 
	{0x790f, &op_bfill,	 15,   0,   9, 0xff, 0x00, 0x00, 0x00}, // bfill status a ra 
	{0x7a0f, &op_bfill,	 15,   0,  10, 0xff, 0x00, 0x00, 0x00}, // bfill status a sb 
	{0x7b0f, &op_bfill,	 15,   0,  11, 0xff, 0x00, 0x00, 0x00}, // bfill status a sp 
	{0x7c0f, &op_bfill,	 15,   0,  12, 0xff, 0x00, 0x00, 0x00}, // bfill status a db 
	{0x7d0f, &op_bfill,	 15,   0,  13, 0xff, 0x00, 0x00, 0x00}, // bfill status a cb 
	{0x7e0f, &op_bfill,	 15,   0,  14, 0xff, 0x00, 0x00, 0x00}, // bfill status a pi 
	{0x7f0f, &op_bfill,	 15,   0,   8, 0xff, 0x00, 0x04, 0x00}, // bfill status a <literal> 
	{0x701f, &op_bfill,	 15,   1,   0, 0xff, 0x00, 0x00, 0x00}, // bfill status b a 
	{0x711f, &op_bfill,	 15,   1,   1, 0xff, 0x00, 0x00, 0x00}, // bfill status b b 
	{0x721f, &op_bfill,	 15,   1,   2, 0xff, 0x00, 0x00, 0x00}, // bfill status b c 
	{0x731f, &op_bfill,	 15,   1,   3, 0xff, 0x00, 0x00, 0x00}, // bfill status b d 
	{0x741f, &op_bfill,	 15,   1,   4, 0xff, 0x00, 0x00, 0x00}, // bfill status b e 
	{0x751f, &op_bfill,	 15,   1,   5, 0xff, 0x00, 0x00, 0x00}, // bfill status b f 
	{0x761f, &op_bfill,	 15,   1,   6, 0xff, 0x00, 0x00, 0x00}, // bfill status b g 
	{0x771f, &op_bfill,	 15,   1,   7, 0xff, 0x00, 0x00, 0x00}, // bfill status b h 
	{0x781f, &op_bfill,	 15,   1,   8, 0xff, 0x00, 0x00, 0x00}, // bfill status b pc 
	{0x791f, &op_bfill,	 15,   1,   9, 0xff, 0x00, 0x00, 0x00}, // bfill status b ra 
	{0x7a1f, &op_bfill,	 15,   1,  10, 0xff, 0x00, 0x00, 0x00}, // bfill status b sb 
	{0x7b1f, &op_bfill,	 15,   1,  11, 0xff, 0x00, 0x00, 0x00}, // bfill status b sp 
	{0x7c1f, &op_bfill,	 15,   1,  12, 0xff, 0x00, 0x00, 0x00}, // bfill status b db 
	{0x7d1f, &op_bfill,	 15,   1,  13, 0xff, 0x00, 0x00, 0x00}, // bfill status b cb 
	{0x7e1f, &op_bfill,	 15,   1,  14, 0xff, 0x00, 0x00, 0x00}, // bfill status b pi 
	{0x7f1f, &op_bfill,	 15,   1,   8, 0xff, 0x00, 0x04, 0x00}, // bfill status b <literal> 
	{0x702f, &op_bfill,	 15,   2,   0, 0xff, 0x00, 0x00, 0x00}, // bfill status c a 
	{0x712f, &op_bfill,	 15,   2,   1, 0xff, 0x00, 0x00, 0x00}, // bfill status c b 
	{0x722f, &op_bfill,	 15,   2,   2, 0xff, 0x00, 0x00, 0x00}, // bfill status c c 
	{0x732f, &op_bfill,	 15,   2,   3, 0xff, 0x00, 0x00, 0x00}, // bfill status c d 
	{0x742f, &op_bfill,	 15,   2,   4, 0xff, 0x00, 0x00, 0x00}, // bfill status c e 
	{0x752f, &op_bfill,	 15,   2,   5, 0xff, 0x00, 0x00, 0x00}, // bfill status c f 
	{0x762f, &op_bfill,	 15,   2,   6, 0xff, 0x00, 0x00, 0x00}, // bfill status c g 
	{0x772f, &op_bfill,	 15,   2,   7, 0xff, 0x00, 0x00, 0x00}, // bfill status c h 
	{0x782f, &op_bfill,	 15,   2,   8, 0xff, 0x00, 0x00, 0x00}, // bfill status c pc 
	{0x792f, &op_bfill,	 15,   2,   9, 0xff, 0x00, 0x00, 0x00}, // bfill status c ra 
	{0x7a2f, &op_bfill,	 15,   2,  10, 0xff, 0x00, 0x00, 0x00}, // bfill status c sb 
	{0x7b2f, &op_bfill,	 15,   2,  11, 0xff, 0x00, 0x00, 0x00}, // bfill status c sp 
	{0x7c2f, &op_bfill,	 15,   2,  12, 0xff, 0x00, 0x00, 0x00}, // bfill status c db 
	{0x7d2f, &op_bfill,	 15,   2,  13, 0xff, 0x00, 0x00, 0x00}, // bfill status c cb 
	{0x7e2f, &op_bfill,	 15,   2,  14, 0xff, 0x00, 0x00, 0x00}, // bfill status c pi 
	{0x7f2f, &op_bfill,	 15,   2,   8, 0xff, 0x00, 0x04, 0x00}, // bfill status c <literal> 
	{0x703f, &op_bfill,	 15,   3,   0, 0xff, 0x00, 0x00, 0x00}, // bfill status d a 
	{0x713f, &op_bfill,	 15,   3,   1, 0xff, 0x00, 0x00, 0x00}, // bfill status d b 
	{0x723f, &op_bfill,	 15,   3,   2, 0xff, 0x00, 0x00, 0x00}, // bfill status d c 
	{0x733f, &op_bfill,	 15,   3,   3, 0xff, 0x00, 0x00, 0x00}, // bfill status d d 
	{0x743f, &op_bfill,	 15,   3,   4, 0xff, 0x00, 0x00, 0x00}, // bfill status d e 
	{0x753f, &op_bfill,	 15,   3,   5, 0xff, 0x00, 0x00, 0x00}, // bfill status d f 
	{0x763f, &op_bfill,	 15,   3,   6, 0xff, 0x00, 0x00, 0x00}, // bfill status d g 
	{0x773f, &op_bfill,	 15,   3,   7, 0xff, 0x00, 0x00, 0x00}, // bfill status d h 
	{0x783f, &op_bfill,	 15,   3,   8, 0xff, 0x00, 0x00, 0x00}, // bfill status d pc 
	{0x793f, &op_bfill,	 15,   3,   9, 0xff, 0x00, 0x00, 0x00}, // bfill status d ra 
	{0x7a3f, &op_bfill,	 15,   3,  10, 0xff, 0x00, 0x00, 0x00}, // bfill status d sb 
	{0x7b3f, &op_bfill,	 15,   3,  11, 0xff, 0x00, 0x00, 0x00}, // bfill status d sp 
	{0x7c3f, &op_bfill,	 15,   3,  12, 0xff, 0x00, 0x00, 0x00}, // bfill status d db 
	{0x7d3f, &op_bfill,	 15,   3,  13, 0xff, 0x00, 0x00, 0x00}, // bfill status d cb 
	{0x7e3f, &op_bfill,	 15,   3,  14, 0xff, 0x00, 0x00, 0x00}, // bfill status d pi 
	{0x7f3f, &op_bfill,	 15,   3,   8, 0xff, 0x00, 0x04, 0x00}, // bfill status d <literal> 
	{0x704f, &op_bfill,	 15,   4,   0, 0xff, 0x00, 0x00, 0x00}, // bfill status e a 
	{0x714f, &op_bfill,	 15,   4,   1, 0xff, 0x00, 0x00, 0x00}, // bfill status e b 
	{0x724f, &op_bfill,	 15,   4,   2, 0xff, 0x00, 0x00, 0x00}, // bfill status e c 
	{0x734f, &op_bfill,	 15,   4,   3, 0xff, 0x00, 0x00, 0x00}, // bfill status e d 
	{0x744f, &op_bfill,	 15,   4,   4, 0xff, 0x00, 0x00, 0x00}, // bfill status e e 
	{0x754f, &op_bfill,	 15,   4,   5, 0xff, 0x00, 0x00, 0x00}, // bfill status e f 
	{0x764f, &op_bfill,	 15,   4,   6, 0xff, 0x00, 0x00, 0x00}, // bfill status e g 
	{0x774f, &op_bfill,	 15,   4,   7, 0xff, 0x00, 0x00, 0x00}, // bfill status e h 
	{0x784f, &op_bfill,	 15,   4,   8, 0xff, 0x00, 0x00, 0x00}, // bfill status e pc 
	{0x794f, &op_bfill,	 15,   4,   9, 0xff, 0x00, 0x00, 0x00}, // bfill status e ra 
	{0x7a4f, &op_bfill,	 15,   4,  10, 0xff, 0x00, 0x00, 0x00}, // bfill status e sb 
	{0x7b4f, &op_bfill,	 15,   4,  11, 0xff, 0x00, 0x00, 0x00}, // bfill status e sp 
	{0x7c4f, &op_bfill,	 15,   4,  12, 0xff, 0x00, 0x00, 0x00}, // bfill status e db 
	{0x7d4f, &op_bfill,	 15,   4,  13, 0xff, 0x00, 0x00, 0x00}, // bfill status e cb 
	{0x7e4f, &op_bfill,	 15,   4,  14, 0xff, 0x00, 0x00, 0x00}, // bfill status e pi 
	{0x7f4f, &op_bfill,	 15,   4,   8, 0xff, 0x00, 0x04, 0x00}, // bfill status e <literal> 
	{0x705f, &op_bfill,	 15,   5,   0, 0xff, 0x00, 0x00, 0x00}, // bfill status f a 
	{0x715f, &op_bfill,	 15,   5,   1, 0xff, 0x00, 0x00, 0x00}, // bfill status f b 
	{0x725f, &op_bfill,	 15,   5,   2, 0xff, 0x00, 0x00, 0x00}, // bfill status f c 
	{0x735f, &op_bfill,	 15,   5,   3, 0xff, 0x00, 0x00, 0x00}, // bfill status f d 
	{0x745f, &op_bfill,	 15,   5,   4, 0xff, 0x00, 0x00, 0x00}, // bfill status f e 
	{0x755f, &op_bfill,	 15,   5,   5, 0xff, 0x00, 0x00, 0x00}, // bfill status f f 
	{0x765f, &op_bfill,	 15,   5,   6, 0xff, 0x00, 0x00, 0x00}, // bfill status f g 
	{0x775f, &op_bfill,	 15,   5,   7, 0xff, 0x00, 0x00, 0x00}, // bfill status f h 
	{0x785f, &op_bfill,	 15,   5,   8, 0xff, 0x00, 0x00, 0x00}, // bfill status f pc 
	{0x795f, &op_bfill,	 15,   5,   9, 0xff, 0x00, 0x00, 0x00}, // bfill status f ra 
	{0x7a5f, &op_bfill,	 15,   5,  10, 0xff, 0x00, 0x00, 0x00}, // bfill status f sb 
	{0x7b5f, &op_bfill,	 15,   5,  11, 0xff, 0x00, 0x00, 0x00}, // bfill status f sp 
	{0x7c5f, &op_bfill,	 15,   5,  12, 0xff, 0x00, 0x00, 0x00}, // bfill status f db 
	{0x7d5f, &op_bfill,	 15,   5,  13, 0xff, 0x00, 0x00, 0x00}, // bfill status f cb 
	{0x7e5f, &op_bfill,	 15,   5,  14, 0xff, 0x00, 0x00, 0x00}, // bfill status f pi 
	{0x7f5f, &op_bfill,	 15,   5,   8, 0xff, 0x00, 0x04, 0x00}, // bfill status f <literal> 
	{0x706f, &op_bfill,	 15,   6,   0, 0xff, 0x00, 0x00, 0x00}, // bfill status g a 
	{0x716f, &op_bfill,	 15,   6,   1, 0xff, 0x00, 0x00, 0x00}, // bfill status g b 
	{0x726f, &op_bfill,	 15,   6,   2, 0xff, 0x00, 0x00, 0x00}, // bfill status g c 
	{0x736f, &op_bfill,	 15,   6,   3, 0xff, 0x00, 0x00, 0x00}, // bfill status g d 
	{0x746f, &op_bfill,	 15,   6,   4, 0xff, 0x00, 0x00, 0x00}, // bfill status g e 
	{0x756f, &op_bfill,	 15,   6,   5, 0xff, 0x00, 0x00, 0x00}, // bfill status g f 
	{0x766f, &op_bfill,	 15,   6,   6, 0xff, 0x00, 0x00, 0x00}, // bfill status g g 
	{0x776f, &op_bfill,	 15,   6,   7, 0xff, 0x00, 0x00, 0x00}, // bfill status g h 
	{0x786f, &op_bfill,	 15,   6,   8, 0xff, 0x00, 0x00, 0x00}, // bfill status g pc 
	{0x796f, &op_bfill,	 15,   6,   9, 0xff, 0x00, 0x00, 0x00}, // bfill status g ra 
	{0x7a6f, &op_bfill,	 15,   6,  10, 0xff, 0x00, 0x00, 0x00}, // bfill status g sb 
	{0x7b6f, &op_bfill,	 15,   6,  11, 0xff, 0x00, 0x00, 0x00}, // bfill status g sp 
	{0x7c6f, &op_bfill,	 15,   6,  12, 0xff, 0x00, 0x00, 0x00}, // bfill status g db 
	{0x7d6f, &op_bfill,	 15,   6,  13, 0xff, 0x00, 0x00, 0x00}, // bfill status g cb 
	{0x7e6f, &op_bfill,	 15,   6,  14, 0xff, 0x00, 0x00, 0x00}, // bfill status g pi 
	{0x7f6f, &op_bfill,	 15,   6,   8, 0xff, 0x00, 0x04, 0x00}, // bfill status g <literal> 
	{0x707f, &op_bfill,	 15,   7,   0, 0xff, 0x00, 0x00, 0x00}, // bfill status h a 
	{0x717f, &op_bfill,	 15,   7,   1, 0xff, 0x00, 0x00, 0x00}, // bfill status h b 
	{0x727f, &op_bfill,	 15,   7,   2, 0xff, 0x00, 0x00, 0x00}, // bfill status h c 
	{0x737f, &op_bfill,	 15,   7,   3, 0xff, 0x00, 0x00, 0x00}, // bfill status h d 
	{0x747f, &op_bfill,	 15,   7,   4, 0xff, 0x00, 0x00, 0x00}, // bfill status h e 
	{0x757f, &op_bfill,	 15,   7,   5, 0xff, 0x00, 0x00, 0x00}, // bfill status h f 
	{0x767f, &op_bfill,	 15,   7,   6, 0xff, 0x00, 0x00, 0x00}, // bfill status h g 
	{0x777f, &op_bfill,	 15,   7,   7, 0xff, 0x00, 0x00, 0x00}, // bfill status h h 
	{0x787f, &op_bfill,	 15,   7,   8, 0xff, 0x00, 0x00, 0x00}, // bfill status h pc 
	{0x797f, &op_bfill,	 15,   7,   9, 0xff, 0x00, 0x00, 0x00}, // bfill status h ra 
	{0x7a7f, &op_bfill,	 15,   7,  10, 0xff, 0x00, 0x00, 0x00}, // bfill status h sb 
	{0x7b7f, &op_bfill,	 15,   7,  11, 0xff, 0x00, 0x00, 0x00}, // bfill status h sp 
	{0x7c7f, &op_bfill,	 15,   7,  12, 0xff, 0x00, 0x00, 0x00}, // bfill status h db 
	{0x7d7f, &op_bfill,	 15,   7,  13, 0xff, 0x00, 0x00, 0x00}, // bfill status h cb 
	{0x7e7f, &op_bfill,	 15,   7,  14, 0xff, 0x00, 0x00, 0x00}, // bfill status h pi 
	{0x7f7f, &op_bfill,	 15,   7,   8, 0xff, 0x00, 0x04, 0x00}, // bfill status h <literal> 
	{0x708f, &op_bfill,	 15,   8,   0, 0xff, 0x00, 0x00, 0x00}, // bfill status pc a 
	{0x718f, &op_bfill,	 15,   8,   1, 0xff, 0x00, 0x00, 0x00}, // bfill status pc b 
	{0x728f, &op_bfill,	 15,   8,   2, 0xff, 0x00, 0x00, 0x00}, // bfill status pc c 
	{0x738f, &op_bfill,	 15,   8,   3, 0xff, 0x00, 0x00, 0x00}, // bfill status pc d 
	{0x748f, &op_bfill,	 15,   8,   4, 0xff, 0x00, 0x00, 0x00}, // bfill status pc e 
	{0x758f, &op_bfill,	 15,   8,   5, 0xff, 0x00, 0x00, 0x00}, // bfill status pc f 
	{0x768f, &op_bfill,	 15,   8,   6, 0xff, 0x00, 0x00, 0x00}, // bfill status pc g 
	{0x778f, &op_bfill,	 15,   8,   7, 0xff, 0x00, 0x00, 0x00}, // bfill status pc h 
	{0x788f, &op_bfill,	 15,   8,   8, 0xff, 0x00, 0x00, 0x00}, // bfill status pc pc 
	{0x798f, &op_bfill,	 15,   8,   9, 0xff, 0x00, 0x00, 0x00}, // bfill status pc ra 
	{0x7a8f, &op_bfill,	 15,   8,  10, 0xff, 0x00, 0x00, 0x00}, // bfill status pc sb 
	{0x7b8f, &op_bfill,	 15,   8,  11, 0xff, 0x00, 0x00, 0x00}, // bfill status pc sp 
	{0x7c8f, &op_bfill,	 15,   8,  12, 0xff, 0x00, 0x00, 0x00}, // bfill status pc db 
	{0x7d8f, &op_bfill,	 15,   8,  13, 0xff, 0x00, 0x00, 0x00}, // bfill status pc cb 
	{0x7e8f, &op_bfill,	 15,   8,  14, 0xff, 0x00, 0x00, 0x00}, // bfill status pc pi 
	{0x7f8f, &op_bfill,	 15,   8,   8, 0xff, 0x00, 0x04, 0x00}, // bfill status pc <literal> 
	{0x709f, &op_bfill,	 15,   9,   0, 0xff, 0x00, 0x00, 0x00}, // bfill status ra a 
	{0x719f, &op_bfill,	 15,   9,   1, 0xff, 0x00, 0x00, 0x00}, // bfill status ra b 
	{0x729f, &op_bfill,	 15,   9,   2, 0xff, 0x00, 0x00, 0x00}, // bfill status ra c 
	{0x739f, &op_bfill,	 15,   9,   3, 0xff, 0x00, 0x00, 0x00}, // bfill status ra d 
	{0x749f, &op_bfill,	 15,   9,   4, 0xff, 0x00, 0x00, 0x00}, // bfill status ra e 
	{0x759f, &op_bfill,	 15,   9,   5, 0xff, 0x00, 0x00, 0x00}, // bfill status ra f 
	{0x769f, &op_bfill,	 15,   9,   6, 0xff, 0x00, 0x00, 0x00}, // bfill status ra g 
	{0x779f, &op_bfill,	 15,   9,   7, 0xff, 0x00, 0x00, 0x00}, // bfill status ra h 
	{0x789f, &op_bfill,	 15,   9,   8, 0xff, 0x00, 0x00, 0x00}, // bfill status ra pc 
	{0x799f, &op_bfill,	 15,   9,   9, 0xff, 0x00, 0x00, 0x00}, // bfill status ra ra 
	{0x7a9f, &op_bfill,	 15,   9,  10, 0xff, 0x00, 0x00, 0x00}, // bfill status ra sb 
	{0x7b9f, &op_bfill,	 15,   9,  11, 0xff, 0x00, 0x00, 0x00}, // bfill status ra sp 
	{0x7c9f, &op_bfill,	 15,   9,  12, 0xff, 0x00, 0x00, 0x00}, // bfill status ra db 
	{0x7d9f, &op_bfill,	 15,   9,  13, 0xff, 0x00, 0x00, 0x00}, // bfill status ra cb 
	{0x7e9f, &op_bfill,	 15,   9,  14, 0xff, 0x00, 0x00, 0x00}, // bfill status ra pi 
	{0x7f9f, &op_bfill,	 15,   9,   8, 0xff, 0x00, 0x04, 0x00}, // bfill status ra <literal> 
	{0x70af, &op_bfill,	 15,  10,   0, 0xff, 0x00, 0x00, 0x00}, // bfill status sb a 
	{0x71af, &op_bfill,	 15,  10,   1, 0xff, 0x00, 0x00, 0x00}, // bfill status sb b 
	{0x72af, &op_bfill,	 15,  10,   2, 0xff, 0x00, 0x00, 0x00}, // bfill status sb c 
	{0x73af, &op_bfill,	 15,  10,   3, 0xff, 0x00, 0x00, 0x00}, // bfill status sb d 
	{0x74af, &op_bfill,	 15,  10,   4, 0xff, 0x00, 0x00, 0x00}, // bfill status sb e 
	{0x75af, &op_bfill,	 15,  10,   5, 0xff, 0x00, 0x00, 0x00}, // bfill status sb f 
	{0x76af, &op_bfill,	 15,  10,   6, 0xff, 0x00, 0x00, 0x00}, // bfill status sb g 
	{0x77af, &op_bfill,	 15,  10,   7, 0xff, 0x00, 0x00, 0x00}, // bfill status sb h 
	{0x78af, &op_bfill,	 15,  10,   8, 0xff, 0x00, 0x00, 0x00}, // bfill status sb pc 
	{0x79af, &op_bfill,	 15,  10,   9, 0xff, 0x00, 0x00, 0x00}, // bfill status sb ra 
	{0x7aaf, &op_bfill,	 15,  10,  10, 0xff, 0x00, 0x00, 0x00}, // bfill status sb sb 
	{0x7baf, &op_bfill,	 15,  10,  11, 0xff, 0x00, 0x00, 0x00}, // bfill status sb sp 
	{0x7caf, &op_bfill,	 15,  10,  12, 0xff, 0x00, 0x00, 0x00}, // bfill status sb db 
	{0x7daf, &op_bfill,	 15,  10,  13, 0xff, 0x00, 0x00, 0x00}, // bfill status sb cb 
	{0x7eaf, &op_bfill,	 15,  10,  14, 0xff, 0x00, 0x00, 0x00}, // bfill status sb pi 
	{0x7faf, &op_bfill,	 15,  10,   8, 0xff, 0x00, 0x04, 0x00}, // bfill status sb <literal> 
	{0x70bf, &op_bfill,	 15,  11,   0, 0xff, 0x00, 0x00, 0x00}, // bfill status sp a 
	{0x71bf, &op_bfill,	 15,  11,   1, 0xff, 0x00, 0x00, 0x00}, // bfill status sp b 
	{0x72bf, &op_bfill,	 15,  11,   2, 0xff, 0x00, 0x00, 0x00}, // bfill status sp c 
	{0x73bf, &op_bfill,	 15,  11,   3, 0xff, 0x00, 0x00, 0x00}, // bfill status sp d 
	{0x74bf, &op_bfill,	 15,  11,   4, 0xff, 0x00, 0x00, 0x00}, // bfill status sp e 
	{0x75bf, &op_bfill,	 15,  11,   5, 0xff, 0x00, 0x00, 0x00}, // bfill status sp f 
	{0x76bf, &op_bfill,	 15,  11,   6, 0xff, 0x00, 0x00, 0x00}, // bfill status sp g 
	{0x77bf, &op_bfill,	 15,  11,   7, 0xff, 0x00, 0x00, 0x00}, // bfill status sp h 
	{0x78bf, &op_bfill,	 15,  11,   8, 0xff, 0x00, 0x00, 0x00}, // bfill status sp pc 
	{0x79bf, &op_bfill,	 15,  11,   9, 0xff, 0x00, 0x00, 0x00}, // bfill status sp ra 
	{0x7abf, &op_bfill,	 15,  11,  10, 0xff, 0x00, 0x00, 0x00}, // bfill status sp sb 
	{0x7bbf, &op_bfill,	 15,  11,  11, 0xff, 0x00, 0x00, 0x00}, // bfill status sp sp 
	{0x7cbf, &op_bfill,	 15,  11,  12, 0xff, 0x00, 0x00, 0x00}, // bfill status sp db 
	{0x7dbf, &op_bfill,	 15,  11,  13, 0xff, 0x00, 0x00, 0x00}, // bfill status sp cb 
	{0x7ebf, &op_bfill,	 15,  11,  14, 0xff, 0x00, 0x00, 0x00}, // bfill status sp pi 
	{0x7fbf, &op_bfill,	 15,  11,   8, 0xff, 0x00, 0x04, 0x00}, // bfill status sp <literal> 
	{0x70cf, &op_bfill,	 15,  12,   0, 0xff, 0x00, 0x00, 0x00}, // bfill status db a 
	{0x71cf, &op_bfill,	 15,  12,   1, 0xff, 0x00, 0x00, 0x00}, // bfill status db b 
	{0x72cf, &op_bfill,	 15,  12,   2, 0xff, 0x00, 0x00, 0x00}, // bfill status db c 
	{0x73cf, &op_bfill,	 15,  12,   3, 0xff, 0x00, 0x00, 0x00}, // bfill status db d 
	{0x74cf, &op_bfill,	 15,  12,   4, 0xff, 0x00, 0x00, 0x00}, // bfill status db e 
	{0x75cf, &op_bfill,	 15,  12,   5, 0xff, 0x00, 0x00, 0x00}, // bfill status db f 
	{0x76cf, &op_bfill,	 15,  12,   6, 0xff, 0x00, 0x00, 0x00}, // bfill status db g 
	{0x77cf, &op_bfill,	 15,  12,   7, 0xff, 0x00, 0x00, 0x00}, // bfill status db h 
	{0x78cf, &op_bfill,	 15,  12,   8, 0xff, 0x00, 0x00, 0x00}, // bfill status db pc 
	{0x79cf, &op_bfill,	 15,  12,   9, 0xff, 0x00, 0x00, 0x00}, // bfill status db ra 
	{0x7acf, &op_bfill,	 15,  12,  10, 0xff, 0x00, 0x00, 0x00}, // bfill status db sb 
	{0x7bcf, &op_bfill,	 15,  12,  11, 0xff, 0x00, 0x00, 0x00}, // bfill status db sp 
	{0x7ccf, &op_bfill,	 15,  12,  12, 0xff, 0x00, 0x00, 0x00}, // bfill status db db 
	{0x7dcf, &op_bfill,	 15,  12,  13, 0xff, 0x00, 0x00, 0x00}, // bfill status db cb 
	{0x7ecf, &op_bfill,	 15,  12,  14, 0xff, 0x00, 0x00, 0x00}, // bfill status db pi 
	{0x7fcf, &op_bfill,	 15,  12,   8, 0xff, 0x00, 0x04, 0x00}, // bfill status db <literal> 
	{0x70df, &op_bfill,	 15,  13,   0, 0xff, 0x00, 0x00, 0x00}, // bfill status cb a 
	{0x71df, &op_bfill,	 15,  13,   1, 0xff, 0x00, 0x00, 0x00}, // bfill status cb b 
	{0x72df, &op_bfill,	 15,  13,   2, 0xff, 0x00, 0x00, 0x00}, // bfill status cb c 
	{0x73df, &op_bfill,	 15,  13,   3, 0xff, 0x00, 0x00, 0x00}, // bfill status cb d 
	{0x74df, &op_bfill,	 15,  13,   4, 0xff, 0x00, 0x00, 0x00}, // bfill status cb e 
	{0x75df, &op_bfill,	 15,  13,   5, 0xff, 0x00, 0x00, 0x00}, // bfill status cb f 
	{0x76df, &op_bfill,	 15,  13,   6, 0xff, 0x00, 0x00, 0x00}, // bfill status cb g 
	{0x77df, &op_bfill,	 15,  13,   7, 0xff, 0x00, 0x00, 0x00}, // bfill status cb h 
	{0x78df, &op_bfill,	 15,  13,   8, 0xff, 0x00, 0x00, 0x00}, // bfill status cb pc 
	{0x79df, &op_bfill,	 15,  13,   9, 0xff, 0x00, 0x00, 0x00}, // bfill status cb ra 
	{0x7adf, &op_bfill,	 15,  13,  10, 0xff, 0x00, 0x00, 0x00}, // bfill status cb sb 
	{0x7bdf, &op_bfill,	 15,  13,  11, 0xff, 0x00, 0x00, 0x00}, // bfill status cb sp 
	{0x7cdf, &op_bfill,	 15,  13,  12, 0xff, 0x00, 0x00, 0x00}, // bfill status cb db 
	{0x7ddf, &op_bfill,	 15,  13,  13, 0xff, 0x00, 0x00, 0x00}, // bfill status cb cb 
	{0x7edf, &op_bfill,	 15,  13,  14, 0xff, 0x00, 0x00, 0x00}, // bfill status cb pi 
	{0x7fdf, &op_bfill,	 15,  13,   8, 0xff, 0x00, 0x04, 0x00}, // bfill status cb <literal> 
	{0x70ef, &op_bfill,	 15,  14,   0, 0xff, 0x00, 0x00, 0x00}, // bfill status pi a 
	{0x71ef, &op_bfill,	 15,  14,   1, 0xff, 0x00, 0x00, 0x00}, // bfill status pi b 
	{0x72ef, &op_bfill,	 15,  14,   2, 0xff, 0x00, 0x00, 0x00}, // bfill status pi c 
	{0x73ef, &op_bfill,	 15,  14,   3, 0xff, 0x00, 0x00, 0x00}, // bfill status pi d 
	{0x74ef, &op_bfill,	 15,  14,   4, 0xff, 0x00, 0x00, 0x00}, // bfill status pi e 
	{0x75ef, &op_bfill,	 15,  14,   5, 0xff, 0x00, 0x00, 0x00}, // bfill status pi f 
	{0x76ef, &op_bfill,	 15,  14,   6, 0xff, 0x00, 0x00, 0x00}, // bfill status pi g 
	{0x77ef, &op_bfill,	 15,  14,   7, 0xff, 0x00, 0x00, 0x00}, // bfill status pi h 
	{0x78ef, &op_bfill,	 15,  14,   8, 0xff, 0x00, 0x00, 0x00}, // bfill status pi pc 
	{0x79ef, &op_bfill,	 15,  14,   9, 0xff, 0x00, 0x00, 0x00}, // bfill status pi ra 
	{0x7aef, &op_bfill,	 15,  14,  10, 0xff, 0x00, 0x00, 0x00}, // bfill status pi sb 
	{0x7bef, &op_bfill,	 15,  14,  11, 0xff, 0x00, 0x00, 0x00}, // bfill status pi sp 
	{0x7cef, &op_bfill,	 15,  14,  12, 0xff, 0x00, 0x00, 0x00}, // bfill status pi db 
	{0x7def, &op_bfill,	 15,  14,  13, 0xff, 0x00, 0x00, 0x00}, // bfill status pi cb 
	{0x7eef, &op_bfill,	 15,  14,  14, 0xff, 0x00, 0x00, 0x00}, // bfill status pi pi 
	{0x7fef, &op_bfill,	 15,  14,   8, 0xff, 0x00, 0x04, 0x00}, // bfill status pi <literal> 
	{0x70ff, &op_bfill,	 15,  15,   0, 0xff, 0x00, 0x00, 0x00}, // bfill status status a 
	{0x71ff, &op_bfill,	 15,  15,   1, 0xff, 0x00, 0x00, 0x00}, // bfill status status b 
	{0x72ff, &op_bfill,	 15,  15,   2, 0xff, 0x00, 0x00, 0x00}, // bfill status status c 
	{0x73ff, &op_bfill,	 15,  15,   3, 0xff, 0x00, 0x00, 0x00}, // bfill status status d 
	{0x74ff, &op_bfill,	 15,  15,   4, 0xff, 0x00, 0x00, 0x00}, // bfill status status e 
	{0x75ff, &op_bfill,	 15,  15,   5, 0xff, 0x00, 0x00, 0x00}, // bfill status status f 
	{0x76ff, &op_bfill,	 15,  15,   6, 0xff, 0x00, 0x00, 0x00}, // bfill status status g 
	{0x77ff, &op_bfill,	 15,  15,   7, 0xff, 0x00, 0x00, 0x00}, // bfill status status h 
	{0x78ff, &op_bfill,	 15,  15,   8, 0xff, 0x00, 0x00, 0x00}, // bfill status status pc 
	{0x79ff, &op_bfill,	 15,  15,   9, 0xff, 0x00, 0x00, 0x00}, // bfill status status ra 
	{0x7aff, &op_bfill,	 15,  15,  10, 0xff, 0x00, 0x00, 0x00}, // bfill status status sb 
	{0x7bff, &op_bfill,	 15,  15,  11, 0xff, 0x00, 0x00, 0x00}, // bfill status status sp 
	{0x7cff, &op_bfill,	 15,  15,  12, 0xff, 0x00, 0x00, 0x00}, // bfill status status db 
	{0x7dff, &op_bfill,	 15,  15,  13, 0xff, 0x00, 0x00, 0x00}, // bfill status status cb 
	{0x7eff, &op_bfill,	 15,  15,  14, 0xff, 0x00, 0x00, 0x00}, // bfill status status pi 
	{0x7fff, &op_bfill,	 15,  15,   8, 0xff, 0x00, 0x04, 0x00}, // bfill status status <literal> 
	{0x6000, &op_jmp,	  0, 255, 255, 0x00, 0x00, 0x00, 0x00}, // jmp a   
    {0x6001, &op_jmp,	  1, 255, 255, 0x00, 0x00, 0x00, 0x00}, // jmp b   
    {0x6002, &op_jmp,	  2, 255, 255, 0x00, 0x00, 0x00, 0x00}, // jmp c   
    {0x6003, &op_jmp,	  3, 255, 255, 0x00, 0x00, 0x00, 0x00}, // jmp d   
    {0x6004, &op_jmp,	  4, 255, 255, 0x00, 0x00, 0x00, 0x00}, // jmp e   
    {0x6005, &op_jmp,	  5, 255, 255, 0x00, 0x00, 0x00, 0x00}, // jmp f   
    {0x6006, &op_jmp,	  6, 255, 255, 0x00, 0x00, 0x00, 0x00}, // jmp g   
    {0x6007, &op_jmp,	  7, 255, 255, 0x00, 0x00, 0x00, 0x00}, // jmp h   
    {0x6008, &op_jmp,	  8, 255, 255, 0x00, 0x00, 0x00, 0x00}, // jmp pc   
    {0x6009, &op_jmp,	  9, 255, 255, 0x00, 0x00, 0x00, 0x00}, // jmp ra   
    {0x600a, &op_jmp,	 10, 255, 255, 0x00, 0x00, 0x00, 0x00}, // jmp sb   
    {0x600b, &op_jmp,	 11, 255, 255, 0x00, 0x00, 0x00, 0x00}, // jmp sp   
    {0x600c, &op_jmp,	 12, 255, 255, 0x00, 0x00, 0x00, 0x00}, // jmp db   
    {0x600d, &op_jmp,	 13, 255, 255, 0x00, 0x00, 0x00, 0x00}, // jmp cb   
    {0x600e, &op_jmp,	 14, 255, 255, 0x00, 0x00, 0x00, 0x00}, // jmp pi   
    {0x600f, &op_jmp,	  8, 255, 255, 0x00, 0x00, 0x04, 0x00}, // jmp <literal>   
    {0x6040, &op_jn,	  0, 255, 255, 0x04, 0x00, 0x00, 0x00}, // jne a   
    {0x6041, &op_jn,	  1, 255, 255, 0x04, 0x00, 0x00, 0x00}, // jne b   
    {0x6042, &op_jn,	  2, 255, 255, 0x04, 0x00, 0x00, 0x00}, // jne c   
    {0x6043, &op_jn,	  3, 255, 255, 0x04, 0x00, 0x00, 0x00}, // jne d   
    {0x6044, &op_jn,	  4, 255, 255, 0x04, 0x00, 0x00, 0x00}, // jne e   
    {0x6045, &op_jn,	  5, 255, 255, 0x04, 0x00, 0x00, 0x00}, // jne f   
    {0x6046, &op_jn,	  6, 255, 255, 0x04, 0x00, 0x00, 0x00}, // jne g   
    {0x6047, &op_jn,	  7, 255, 255, 0x04, 0x00, 0x00, 0x00}, // jne h   
    {0x6048, &op_jn,	  8, 255, 255, 0x04, 0x00, 0x00, 0x00}, // jne pc   
    {0x6049, &op_jn,	  9, 255, 255, 0x04, 0x00, 0x00, 0x00}, // jne ra   
    {0x604a, &op_jn,	 10, 255, 255, 0x04, 0x00, 0x00, 0x00}, // jne sb   
    {0x604b, &op_jn,	 11, 255, 255, 0x04, 0x00, 0x00, 0x00}, // jne sp   
    {0x604c, &op_jn,	 12, 255, 255, 0x04, 0x00, 0x00, 0x00}, // jne db   
    {0x604d, &op_jn,	 13, 255, 255, 0x04, 0x00, 0x00, 0x00}, // jne cb   
    {0x604e, &op_jn,	 14, 255, 255, 0x04, 0x00, 0x00, 0x00}, // jne pi   
    {0x604f, &op_jn,	  8, 255, 255, 0x04, 0x00, 0x04, 0x00}, // jne <literal>   
    {0x4010, &op_jmp,	  0, 255, 255, 0x01, 0x00, 0x00, 0x00}, // jc a   
    {0x4011, &op_jmp,	  1, 255, 255, 0x01, 0x00, 0x00, 0x00}, // jc b   
    {0x4012, &op_jmp,	  2, 255, 255, 0x01, 0x00, 0x00, 0x00}, // jc c   
    {0x4013, &op_jmp,	  3, 255, 255, 0x01, 0x00, 0x00, 0x00}, // jc d   
    {0x4014, &op_jmp,	  4, 255, 255, 0x01, 0x00, 0x00, 0x00}, // jc e   
    {0x4015, &op_jmp,	  5, 255, 255, 0x01, 0x00, 0x00, 0x00}, // jc f   
    {0x4016, &op_jmp,	  6, 255, 255, 0x01, 0x00, 0x00, 0x00}, // jc g   
    {0x4017, &op_jmp,	  7, 255, 255, 0x01, 0x00, 0x00, 0x00}, // jc h   
    {0x4018, &op_jmp,	  8, 255, 255, 0x01, 0x00, 0x00, 0x00}, // jc pc   
    {0x4019, &op_jmp,	  9, 255, 255, 0x01, 0x00, 0x00, 0x00}, // jc ra   
    {0x401a, &op_jmp,	 10, 255, 255, 0x01, 0x00, 0x00, 0x00}, // jc sb   
    {0x401b, &op_jmp,	 11, 255, 255, 0x01, 0x00, 0x00, 0x00}, // jc sp   
    {0x401c, &op_jmp,	 12, 255, 255, 0x01, 0x00, 0x00, 0x00}, // jc db   
    {0x401d, &op_jmp,	 13, 255, 255, 0x01, 0x00, 0x00, 0x00}, // jc cb   
    {0x401e, &op_jmp,	 14, 255, 255, 0x01, 0x00, 0x00, 0x00}, // jc pi   
    {0x401f, &op_jmp,	  8, 255, 255, 0x01, 0x00, 0x04, 0x00}, // jc <literal>   
    {0x6010, &op_jn,	  0, 255, 255, 0x01, 0x00, 0x00, 0x00}, // jnc a   
    {0x6011, &op_jn,	  1, 255, 255, 0x01, 0x00, 0x00, 0x00}, // jnc b   
    {0x6012, &op_jn,	  2, 255, 255, 0x01, 0x00, 0x00, 0x00}, // jnc c   
    {0x6013, &op_jn,	  3, 255, 255, 0x01, 0x00, 0x00, 0x00}, // jnc d   
    {0x6014, &op_jn,	  4, 255, 255, 0x01, 0x00, 0x00, 0x00}, // jnc e   
    {0x6015, &op_jn,	  5, 255, 255, 0x01, 0x00, 0x00, 0x00}, // jnc f   
    {0x6016, &op_jn,	  6, 255, 255, 0x01, 0x00, 0x00, 0x00}, // jnc g   
    {0x6017, &op_jn,	  7, 255, 255, 0x01, 0x00, 0x00, 0x00}, // jnc h   
    {0x6018, &op_jn,	  8, 255, 255, 0x01, 0x00, 0x00, 0x00}, // jnc pc   
    {0x6019, &op_jn,	  9, 255, 255, 0x01, 0x00, 0x00, 0x00}, // jnc ra   
    {0x601a, &op_jn,	 10, 255, 255, 0x01, 0x00, 0x00, 0x00}, // jnc sb   
    {0x601b, &op_jn,	 11, 255, 255, 0x01, 0x00, 0x00, 0x00}, // jnc sp   
    {0x601c, &op_jn,	 12, 255, 255, 0x01, 0x00, 0x00, 0x00}, // jnc db   
    {0x601d, &op_jn,	 13, 255, 255, 0x01, 0x00, 0x00, 0x00}, // jnc cb   
    {0x601e, &op_jn,	 14, 255, 255, 0x01, 0x00, 0x00, 0x00}, // jnc pi   
    {0x601f, &op_jn,	  8, 255, 255, 0x01, 0x00, 0x04, 0x00}, // jnc <literal>   
    {0x40c0, &op_jmp,	  0, 255, 255, 0x0c, 0x00, 0x00, 0x00}, // jge a   
    {0x40c1, &op_jmp,	  1, 255, 255, 0x0c, 0x00, 0x00, 0x00}, // jge b   
    {0x40c2, &op_jmp,	  2, 255, 255, 0x0c, 0x00, 0x00, 0x00}, // jge c   
    {0x40c3, &op_jmp,	  3, 255, 255, 0x0c, 0x00, 0x00, 0x00}, // jge d   
    {0x40c4, &op_jmp,	  4, 255, 255, 0x0c, 0x00, 0x00, 0x00}, // jge e   
    {0x40c5, &op_jmp,	  5, 255, 255, 0x0c, 0x00, 0x00, 0x00}, // jge f   
    {0x40c6, &op_jmp,	  6, 255, 255, 0x0c, 0x00, 0x00, 0x00}, // jge g   
    {0x40c7, &op_jmp,	  7, 255, 255, 0x0c, 0x00, 0x00, 0x00}, // jge h   
    {0x40c8, &op_jmp,	  8, 255, 255, 0x0c, 0x00, 0x00, 0x00}, // jge pc   
    {0x40c9, &op_jmp,	  9, 255, 255, 0x0c, 0x00, 0x00, 0x00}, // jge ra   
    {0x40ca, &op_jmp,	 10, 255, 255, 0x0c, 0x00, 0x00, 0x00}, // jge sb   
    {0x40cb, &op_jmp,	 11, 255, 255, 0x0c, 0x00, 0x00, 0x00}, // jge sp   
    {0x40cc, &op_jmp,	 12, 255, 255, 0x0c, 0x00, 0x00, 0x00}, // jge db   
    {0x40cd, &op_jmp,	 13, 255, 255, 0x0c, 0x00, 0x00, 0x00}, // jge cb   
    {0x40ce, &op_jmp,	 14, 255, 255, 0x0c, 0x00, 0x00, 0x00}, // jge pi   
    {0x40cf, &op_jmp,	  8, 255, 255, 0x0c, 0x00, 0x04, 0x00}, // jge <literal>   
    {0x4040, &op_jmp,	  0, 255, 255, 0x04, 0x00, 0x00, 0x00}, // je a   
    {0x4041, &op_jmp,	  1, 255, 255, 0x04, 0x00, 0x00, 0x00}, // je b   
    {0x4042, &op_jmp,	  2, 255, 255, 0x04, 0x00, 0x00, 0x00}, // je c   
    {0x4043, &op_jmp,	  3, 255, 255, 0x04, 0x00, 0x00, 0x00}, // je d   
    {0x4044, &op_jmp,	  4, 255, 255, 0x04, 0x00, 0x00, 0x00}, // je e   
    {0x4045, &op_jmp,	  5, 255, 255, 0x04, 0x00, 0x00, 0x00}, // je f   
    {0x4046, &op_jmp,	  6, 255, 255, 0x04, 0x00, 0x00, 0x00}, // je g   
    {0x4047, &op_jmp,	  7, 255, 255, 0x04, 0x00, 0x00, 0x00}, // je h   
    {0x4048, &op_jmp,	  8, 255, 255, 0x04, 0x00, 0x00, 0x00}, // je pc   
    {0x4049, &op_jmp,	  9, 255, 255, 0x04, 0x00, 0x00, 0x00}, // je ra   
    {0x404a, &op_jmp,	 10, 255, 255, 0x04, 0x00, 0x00, 0x00}, // je sb   
    {0x404b, &op_jmp,	 11, 255, 255, 0x04, 0x00, 0x00, 0x00}, // je sp   
    {0x404c, &op_jmp,	 12, 255, 255, 0x04, 0x00, 0x00, 0x00}, // je db   
    {0x404d, &op_jmp,	 13, 255, 255, 0x04, 0x00, 0x00, 0x00}, // je cb   
    {0x404e, &op_jmp,	 14, 255, 255, 0x04, 0x00, 0x00, 0x00}, // je pi   
    {0x404f, &op_jmp,	  8, 255, 255, 0x04, 0x00, 0x04, 0x00}, // je <literal>   
    {0x4060, &op_jmp,	  0, 255, 255, 0x06, 0x00, 0x00, 0x00}, // jle a   
    {0x4061, &op_jmp,	  1, 255, 255, 0x06, 0x00, 0x00, 0x00}, // jle b   
    {0x4062, &op_jmp,	  2, 255, 255, 0x06, 0x00, 0x00, 0x00}, // jle c   
    {0x4063, &op_jmp,	  3, 255, 255, 0x06, 0x00, 0x00, 0x00}, // jle d   
    {0x4064, &op_jmp,	  4, 255, 255, 0x06, 0x00, 0x00, 0x00}, // jle e   
    {0x4065, &op_jmp,	  5, 255, 255, 0x06, 0x00, 0x00, 0x00}, // jle f   
    {0x4066, &op_jmp,	  6, 255, 255, 0x06, 0x00, 0x00, 0x00}, // jle g   
    {0x4067, &op_jmp,	  7, 255, 255, 0x06, 0x00, 0x00, 0x00}, // jle h   
    {0x4068, &op_jmp,	  8, 255, 255, 0x06, 0x00, 0x00, 0x00}, // jle pc   
    {0x4069, &op_jmp,	  9, 255, 255, 0x06, 0x00, 0x00, 0x00}, // jle ra   
    {0x406a, &op_jmp,	 10, 255, 255, 0x06, 0x00, 0x00, 0x00}, // jle sb   
    {0x406b, &op_jmp,	 11, 255, 255, 0x06, 0x00, 0x00, 0x00}, // jle sp   
    {0x406c, &op_jmp,	 12, 255, 255, 0x06, 0x00, 0x00, 0x00}, // jle db   
    {0x406d, &op_jmp,	 13, 255, 255, 0x06, 0x00, 0x00, 0x00}, // jle cb   
    {0x406e, &op_jmp,	 14, 255, 255, 0x06, 0x00, 0x00, 0x00}, // jle pi   
    {0x406f, &op_jmp,	  8, 255, 255, 0x06, 0x00, 0x04, 0x00}, // jle <literal>   
    {0x4080, &op_jmp,	  0, 255, 255, 0x08, 0x00, 0x00, 0x00}, // jg a   
    {0x4081, &op_jmp,	  1, 255, 255, 0x08, 0x00, 0x00, 0x00}, // jg b   
    {0x4082, &op_jmp,	  2, 255, 255, 0x08, 0x00, 0x00, 0x00}, // jg c   
    {0x4083, &op_jmp,	  3, 255, 255, 0x08, 0x00, 0x00, 0x00}, // jg d   
    {0x4084, &op_jmp,	  4, 255, 255, 0x08, 0x00, 0x00, 0x00}, // jg e   
    {0x4085, &op_jmp,	  5, 255, 255, 0x08, 0x00, 0x00, 0x00}, // jg f   
    {0x4086, &op_jmp,	  6, 255, 255, 0x08, 0x00, 0x00, 0x00}, // jg g   
    {0x4087, &op_jmp,	  7, 255, 255, 0x08, 0x00, 0x00, 0x00}, // jg h   
    {0x4088, &op_jmp,	  8, 255, 255, 0x08, 0x00, 0x00, 0x00}, // jg pc   
    {0x4089, &op_jmp,	  9, 255, 255, 0x08, 0x00, 0x00, 0x00}, // jg ra   
    {0x408a, &op_jmp,	 10, 255, 255, 0x08, 0x00, 0x00, 0x00}, // jg sb   
    {0x408b, &op_jmp,	 11, 255, 255, 0x08, 0x00, 0x00, 0x00}, // jg sp   
    {0x408c, &op_jmp,	 12, 255, 255, 0x08, 0x00, 0x00, 0x00}, // jg db   
    {0x408d, &op_jmp,	 13, 255, 255, 0x08, 0x00, 0x00, 0x00}, // jg cb   
    {0x408e, &op_jmp,	 14, 255, 255, 0x08, 0x00, 0x00, 0x00}, // jg pi   
    {0x408f, &op_jmp,	  8, 255, 255, 0x08, 0x00, 0x04, 0x00}, // jg <literal>   
    {0x4020, &op_jmp,	  0, 255, 255, 0x02, 0x00, 0x00, 0x00}, // jl a   
    {0x4021, &op_jmp,	  1, 255, 255, 0x02, 0x00, 0x00, 0x00}, // jl b   
    {0x4022, &op_jmp,	  2, 255, 255, 0x02, 0x00, 0x00, 0x00}, // jl c   
    {0x4023, &op_jmp,	  3, 255, 255, 0x02, 0x00, 0x00, 0x00}, // jl d   
    {0x4024, &op_jmp,	  4, 255, 255, 0x02, 0x00, 0x00, 0x00}, // jl e   
    {0x4025, &op_jmp,	  5, 255, 255, 0x02, 0x00, 0x00, 0x00}, // jl f   
    {0x4026, &op_jmp,	  6, 255, 255, 0x02, 0x00, 0x00, 0x00}, // jl g   
    {0x4027, &op_jmp,	  7, 255, 255, 0x02, 0x00, 0x00, 0x00}, // jl h   
    {0x4028, &op_jmp,	  8, 255, 255, 0x02, 0x00, 0x00, 0x00}, // jl pc   
    {0x4029, &op_jmp,	  9, 255, 255, 0x02, 0x00, 0x00, 0x00}, // jl ra   
    {0x402a, &op_jmp,	 10, 255, 255, 0x02, 0x00, 0x00, 0x00}, // jl sb   
    {0x402b, &op_jmp,	 11, 255, 255, 0x02, 0x00, 0x00, 0x00}, // jl sp   
    {0x402c, &op_jmp,	 12, 255, 255, 0x02, 0x00, 0x00, 0x00}, // jl db   
    {0x402d, &op_jmp,	 13, 255, 255, 0x02, 0x00, 0x00, 0x00}, // jl cb   
    {0x402e, &op_jmp,	 14, 255, 255, 0x02, 0x00, 0x00, 0x00}, // jl pi   
    {0x402f, &op_jmp,	  8, 255, 255, 0x02, 0x00, 0x04, 0x00}, // jl <literal>   
    {0x4100, &op_jmp,	  0, 255, 255, 0x10, 0x00, 0x00, 0x00}, // jz a   
    {0x4101, &op_jmp,	  1, 255, 255, 0x10, 0x00, 0x00, 0x00}, // jz b   
    {0x4102, &op_jmp,	  2, 255, 255, 0x10, 0x00, 0x00, 0x00}, // jz c   
    {0x4103, &op_jmp,	  3, 255, 255, 0x10, 0x00, 0x00, 0x00}, // jz d   
    {0x4104, &op_jmp,	  4, 255, 255, 0x10, 0x00, 0x00, 0x00}, // jz e   
    {0x4105, &op_jmp,	  5, 255, 255, 0x10, 0x00, 0x00, 0x00}, // jz f   
    {0x4106, &op_jmp,	  6, 255, 255, 0x10, 0x00, 0x00, 0x00}, // jz g   
    {0x4107, &op_jmp,	  7, 255, 255, 0x10, 0x00, 0x00, 0x00}, // jz h   
    {0x4108, &op_jmp,	  8, 255, 255, 0x10, 0x00, 0x00, 0x00}, // jz pc   
    {0x4109, &op_jmp,	  9, 255, 255, 0x10, 0x00, 0x00, 0x00}, // jz ra   
    {0x410a, &op_jmp,	 10, 255, 255, 0x10, 0x00, 0x00, 0x00}, // jz sb   
    {0x410b, &op_jmp,	 11, 255, 255, 0x10, 0x00, 0x00, 0x00}, // jz sp   
    {0x410c, &op_jmp,	 12, 255, 255, 0x10, 0x00, 0x00, 0x00}, // jz db   
    {0x410d, &op_jmp,	 13, 255, 255, 0x10, 0x00, 0x00, 0x00}, // jz cb   
    {0x410e, &op_jmp,	 14, 255, 255, 0x10, 0x00, 0x00, 0x00}, // jz pi   
    {0x410f, &op_jmp,	  8, 255, 255, 0x10, 0x00, 0x04, 0x00}, // jz <literal>   
    {0x6100, &op_jn,	  0, 255, 255, 0x10, 0x00, 0x00, 0x00}, // jnz a   
    {0x6101, &op_jn,	  1, 255, 255, 0x10, 0x00, 0x00, 0x00}, // jnz b   
    {0x6102, &op_jn,	  2, 255, 255, 0x10, 0x00, 0x00, 0x00}, // jnz c   
    {0x6103, &op_jn,	  3, 255, 255, 0x10, 0x00, 0x00, 0x00}, // jnz d   
    {0x6104, &op_jn,	  4, 255, 255, 0x10, 0x00, 0x00, 0x00}, // jnz e   
    {0x6105, &op_jn,	  5, 255, 255, 0x10, 0x00, 0x00, 0x00}, // jnz f   
    {0x6106, &op_jn,	  6, 255, 255, 0x10, 0x00, 0x00, 0x00}, // jnz g   
    {0x6107, &op_jn,	  7, 255, 255, 0x10, 0x00, 0x00, 0x00}, // jnz h   
    {0x6108, &op_jn,	  8, 255, 255, 0x10, 0x00, 0x00, 0x00}, // jnz pc   
    {0x6109, &op_jn,	  9, 255, 255, 0x10, 0x00, 0x00, 0x00}, // jnz ra   
    {0x610a, &op_jn,	 10, 255, 255, 0x10, 0x00, 0x00, 0x00}, // jnz sb   
    {0x610b, &op_jn,	 11, 255, 255, 0x10, 0x00, 0x00, 0x00}, // jnz sp   
    {0x610c, &op_jn,	 12, 255, 255, 0x10, 0x00, 0x00, 0x00}, // jnz db   
    {0x610d, &op_jn,	 13, 255, 255, 0x10, 0x00, 0x00, 0x00}, // jnz cb   
    {0x610e, &op_jn,	 14, 255, 255, 0x10, 0x00, 0x00, 0x00}, // jnz pi   
    {0x610f, &op_jn,	  8, 255, 255, 0x10, 0x00, 0x04, 0x00}, // jnz <literal>   
    {0x4200, &op_jmp,	  0, 255, 255, 0x20, 0x00, 0x00, 0x00}, // js a   
    {0x4201, &op_jmp,	  1, 255, 255, 0x20, 0x00, 0x00, 0x00}, // js b   
    {0x4202, &op_jmp,	  2, 255, 255, 0x20, 0x00, 0x00, 0x00}, // js c   
    {0x4203, &op_jmp,	  3, 255, 255, 0x20, 0x00, 0x00, 0x00}, // js d   
    {0x4204, &op_jmp,	  4, 255, 255, 0x20, 0x00, 0x00, 0x00}, // js e   
    {0x4205, &op_jmp,	  5, 255, 255, 0x20, 0x00, 0x00, 0x00}, // js f   
    {0x4206, &op_jmp,	  6, 255, 255, 0x20, 0x00, 0x00, 0x00}, // js g   
    {0x4207, &op_jmp,	  7, 255, 255, 0x20, 0x00, 0x00, 0x00}, // js h   
    {0x4208, &op_jmp,	  8, 255, 255, 0x20, 0x00, 0x00, 0x00}, // js pc   
    {0x4209, &op_jmp,	  9, 255, 255, 0x20, 0x00, 0x00, 0x00}, // js ra   
    {0x420a, &op_jmp,	 10, 255, 255, 0x20, 0x00, 0x00, 0x00}, // js sb   
    {0x420b, &op_jmp,	 11, 255, 255, 0x20, 0x00, 0x00, 0x00}, // js sp   
    {0x420c, &op_jmp,	 12, 255, 255, 0x20, 0x00, 0x00, 0x00}, // js db   
    {0x420d, &op_jmp,	 13, 255, 255, 0x20, 0x00, 0x00, 0x00}, // js cb   
    {0x420e, &op_jmp,	 14, 255, 255, 0x20, 0x00, 0x00, 0x00}, // js pi   
    {0x420f, &op_jmp,	  8, 255, 255, 0x20, 0x00, 0x04, 0x00}, // js <literal>   
    {0x6200, &op_jn,	  0, 255, 255, 0x20, 0x00, 0x00, 0x00}, // jns a   
    {0x6201, &op_jn,	  1, 255, 255, 0x20, 0x00, 0x00, 0x00}, // jns b   
    {0x6202, &op_jn,	  2, 255, 255, 0x20, 0x00, 0x00, 0x00}, // jns c   
    {0x6203, &op_jn,	  3, 255, 255, 0x20, 0x00, 0x00, 0x00}, // jns d   
    {0x6204, &op_jn,	  4, 255, 255, 0x20, 0x00, 0x00, 0x00}, // jns e   
    {0x6205, &op_jn,	  5, 255, 255, 0x20, 0x00, 0x00, 0x00}, // jns f   
    {0x6206, &op_jn,	  6, 255, 255, 0x20, 0x00, 0x00, 0x00}, // jns g   
    {0x6207, &op_jn,	  7, 255, 255, 0x20, 0x00, 0x00, 0x00}, // jns h   
    {0x6208, &op_jn,	  8, 255, 255, 0x20, 0x00, 0x00, 0x00}, // jns pc   
    {0x6209, &op_jn,	  9, 255, 255, 0x20, 0x00, 0x00, 0x00}, // jns ra   
    {0x620a, &op_jn,	 10, 255, 255, 0x20, 0x00, 0x00, 0x00}, // jns sb   
    {0x620b, &op_jn,	 11, 255, 255, 0x20, 0x00, 0x00, 0x00}, // jns sp   
    {0x620c, &op_jn,	 12, 255, 255, 0x20, 0x00, 0x00, 0x00}, // jns db   
    {0x620d, &op_jn,	 13, 255, 255, 0x20, 0x00, 0x00, 0x00}, // jns cb   
    {0x620e, &op_jn,	 14, 255, 255, 0x20, 0x00, 0x00, 0x00}, // jns pi   
    {0x620f, &op_jn,	  8, 255, 255, 0x20, 0x00, 0x04, 0x00}, // jns <literal>   
    {0x1800, &op_rep,	  0, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.n a   
    {0x1801, &op_rep,	  1, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.n b   
    {0x1802, &op_rep,	  2, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.n c   
    {0x1803, &op_rep,	  3, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.n d   
    {0x1804, &op_rep,	  4, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.n e   
    {0x1805, &op_rep,	  5, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.n f   
    {0x1806, &op_rep,	  6, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.n g   
    {0x1807, &op_rep,	  7, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.n h   
    {0x1808, &op_rep,	  8, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.n pc   
    {0x1809, &op_rep,	  9, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.n ra   
    {0x180a, &op_rep,	 10, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.n sb   
    {0x180b, &op_rep,	 11, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.n sp   
    {0x180c, &op_rep,	 12, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.n db   
    {0x180d, &op_rep,	 13, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.n cb   
    {0x180e, &op_rep,	 14, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.n pi   
    {0x180f, &op_rep,	  8, 255, 255, 0xff, 0x00, 0x04, 0x00}, // rep.n <literal>   
    {0x1810, &op_rep,	  0, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.wr a   
    {0x1811, &op_rep,	  1, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.wr b   
    {0x1812, &op_rep,	  2, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.wr c   
    {0x1813, &op_rep,	  3, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.wr d   
    {0x1814, &op_rep,	  4, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.wr e   
    {0x1815, &op_rep,	  5, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.wr f   
    {0x1816, &op_rep,	  6, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.wr g   
    {0x1817, &op_rep,	  7, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.wr h   
    {0x1818, &op_rep,	  8, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.wr pc   
    {0x1819, &op_rep,	  9, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.wr ra   
    {0x181a, &op_rep,	 10, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.wr sb   
    {0x181b, &op_rep,	 11, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.wr sp   
    {0x181c, &op_rep,	 12, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.wr db   
    {0x181d, &op_rep,	 13, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.wr cb   
    {0x181e, &op_rep,	 14, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.wr pi   
    {0x181f, &op_rep,	  8, 255, 255, 0xff, 0x00, 0x04, 0x00}, // rep.wr <literal>   
    {0x1820, &op_rep,	  0, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.ws a   
    {0x1821, &op_rep,	  1, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.ws b   
    {0x1822, &op_rep,	  2, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.ws c   
    {0x1823, &op_rep,	  3, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.ws d   
    {0x1824, &op_rep,	  4, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.ws e   
    {0x1825, &op_rep,	  5, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.ws f   
    {0x1826, &op_rep,	  6, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.ws g   
    {0x1827, &op_rep,	  7, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.ws h   
    {0x1828, &op_rep,	  8, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.ws pc   
    {0x1829, &op_rep,	  9, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.ws ra   
    {0x182a, &op_rep,	 10, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.ws sb   
    {0x182b, &op_rep,	 11, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.ws sp   
    {0x182c, &op_rep,	 12, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.ws db   
    {0x182d, &op_rep,	 13, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.ws cb   
    {0x182e, &op_rep,	 14, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.ws pi   
    {0x182f, &op_rep,	  8, 255, 255, 0xff, 0x00, 0x04, 0x00}, // rep.ws <literal>   
    {0x1830, &op_rep,	  0, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.wrs a   
    {0x1831, &op_rep,	  1, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.wrs b   
    {0x1832, &op_rep,	  2, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.wrs c   
    {0x1833, &op_rep,	  3, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.wrs d   
    {0x1834, &op_rep,	  4, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.wrs e   
    {0x1835, &op_rep,	  5, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.wrs f   
    {0x1836, &op_rep,	  6, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.wrs g   
    {0x1837, &op_rep,	  7, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.wrs h   
    {0x1838, &op_rep,	  8, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.wrs pc   
    {0x1839, &op_rep,	  9, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.wrs ra   
    {0x183a, &op_rep,	 10, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.wrs sb   
    {0x183b, &op_rep,	 11, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.wrs sp   
    {0x183c, &op_rep,	 12, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.wrs db   
    {0x183d, &op_rep,	 13, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.wrs cb   
    {0x183e, &op_rep,	 14, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.wrs pi   
    {0x183f, &op_rep,	  8, 255, 255, 0xff, 0x00, 0x04, 0x00}, // rep.wrs <literal>   
    {0x1850, &op_rep,	  0, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.dr a   
    {0x1851, &op_rep,	  1, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.dr b   
    {0x1852, &op_rep,	  2, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.dr c   
    {0x1853, &op_rep,	  3, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.dr d   
    {0x1854, &op_rep,	  4, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.dr e   
    {0x1855, &op_rep,	  5, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.dr f   
    {0x1856, &op_rep,	  6, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.dr g   
    {0x1857, &op_rep,	  7, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.dr h   
    {0x1858, &op_rep,	  8, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.dr pc   
    {0x1859, &op_rep,	  9, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.dr ra   
    {0x185a, &op_rep,	 10, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.dr sb   
    {0x185b, &op_rep,	 11, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.dr sp   
    {0x185c, &op_rep,	 12, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.dr db   
    {0x185d, &op_rep,	 13, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.dr cb   
    {0x185e, &op_rep,	 14, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.dr pi   
    {0x185f, &op_rep,	  8, 255, 255, 0xff, 0x00, 0x04, 0x00}, // rep.dr <literal>   
    {0x1860, &op_rep,	  0, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.ds a   
    {0x1861, &op_rep,	  1, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.ds b   
    {0x1862, &op_rep,	  2, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.ds c   
    {0x1863, &op_rep,	  3, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.ds d   
    {0x1864, &op_rep,	  4, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.ds e   
    {0x1865, &op_rep,	  5, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.ds f   
    {0x1866, &op_rep,	  6, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.ds g   
    {0x1867, &op_rep,	  7, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.ds h   
    {0x1868, &op_rep,	  8, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.ds pc   
    {0x1869, &op_rep,	  9, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.ds ra   
    {0x186a, &op_rep,	 10, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.ds sb   
    {0x186b, &op_rep,	 11, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.ds sp   
    {0x186c, &op_rep,	 12, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.ds db   
    {0x186d, &op_rep,	 13, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.ds cb   
    {0x186e, &op_rep,	 14, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.ds pi   
    {0x186f, &op_rep,	  8, 255, 255, 0xff, 0x00, 0x04, 0x00}, // rep.ds <literal>   
    {0x1870, &op_rep,	  0, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.drs a   
    {0x1871, &op_rep,	  1, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.drs b   
    {0x1872, &op_rep,	  2, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.drs c   
    {0x1873, &op_rep,	  3, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.drs d   
    {0x1874, &op_rep,	  4, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.drs e   
    {0x1875, &op_rep,	  5, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.drs f   
    {0x1876, &op_rep,	  6, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.drs g   
    {0x1877, &op_rep,	  7, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.drs h   
    {0x1878, &op_rep,	  8, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.drs pc   
    {0x1879, &op_rep,	  9, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.drs ra   
    {0x187a, &op_rep,	 10, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.drs sb   
    {0x187b, &op_rep,	 11, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.drs sp   
    {0x187c, &op_rep,	 12, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.drs db   
    {0x187d, &op_rep,	 13, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.drs cb   
    {0x187e, &op_rep,	 14, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.drs pi   
    {0x187f, &op_rep,	  8, 255, 255, 0xff, 0x00, 0x04, 0x00}, // rep.drs <literal>   
    {0x1890, &op_rep,	  0, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.qr a   
    {0x1891, &op_rep,	  1, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.qr b   
    {0x1892, &op_rep,	  2, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.qr c   
    {0x1893, &op_rep,	  3, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.qr d   
    {0x1894, &op_rep,	  4, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.qr e   
    {0x1895, &op_rep,	  5, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.qr f   
    {0x1896, &op_rep,	  6, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.qr g   
    {0x1897, &op_rep,	  7, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.qr h   
    {0x1898, &op_rep,	  8, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.qr pc   
    {0x1899, &op_rep,	  9, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.qr ra   
    {0x189a, &op_rep,	 10, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.qr sb   
    {0x189b, &op_rep,	 11, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.qr sp   
    {0x189c, &op_rep,	 12, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.qr db   
    {0x189d, &op_rep,	 13, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.qr cb   
    {0x189e, &op_rep,	 14, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.qr pi   
    {0x189f, &op_rep,	  8, 255, 255, 0xff, 0x00, 0x04, 0x00}, // rep.qr <literal>   
    {0x18a0, &op_rep,	  0, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.qs a   
    {0x18a1, &op_rep,	  1, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.qs b   
    {0x18a2, &op_rep,	  2, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.qs c   
    {0x18a3, &op_rep,	  3, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.qs d   
    {0x18a4, &op_rep,	  4, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.qs e   
    {0x18a5, &op_rep,	  5, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.qs f   
    {0x18a6, &op_rep,	  6, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.qs g   
    {0x18a7, &op_rep,	  7, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.qs h   
    {0x18a8, &op_rep,	  8, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.qs pc   
    {0x18a9, &op_rep,	  9, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.qs ra   
    {0x18aa, &op_rep,	 10, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.qs sb   
    {0x18ab, &op_rep,	 11, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.qs sp   
    {0x18ac, &op_rep,	 12, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.qs db   
    {0x18ad, &op_rep,	 13, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.qs cb   
    {0x18ae, &op_rep,	 14, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.qs pi   
    {0x18af, &op_rep,	  8, 255, 255, 0xff, 0x00, 0x04, 0x00}, // rep.qs <literal>   
    {0x18b0, &op_rep,	  0, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.qrs a   
    {0x18b1, &op_rep,	  1, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.qrs b   
    {0x18b2, &op_rep,	  2, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.qrs c   
    {0x18b3, &op_rep,	  3, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.qrs d   
    {0x18b4, &op_rep,	  4, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.qrs e   
    {0x18b5, &op_rep,	  5, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.qrs f   
    {0x18b6, &op_rep,	  6, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.qrs g   
    {0x18b7, &op_rep,	  7, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.qrs h   
    {0x18b8, &op_rep,	  8, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.qrs pc   
    {0x18b9, &op_rep,	  9, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.qrs ra   
    {0x18ba, &op_rep,	 10, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.qrs sb   
    {0x18bb, &op_rep,	 11, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.qrs sp   
    {0x18bc, &op_rep,	 12, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.qrs db   
    {0x18bd, &op_rep,	 13, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.qrs cb   
    {0x18be, &op_rep,	 14, 255, 255, 0xff, 0x00, 0x00, 0x00}, // rep.qrs pi   
    {0x18bf, &op_rep,	  8, 255, 255, 0xff, 0x00, 0x04, 0x00}, // rep.qrs <literal>   
    {0xf000, &op_int,	255, 255, 255, 0x00, 0x00, 0x00, 0x00}, // int 0   
    {0xf001, &op_int,	255, 255, 255, 0x01, 0x00, 0x00, 0x00}, // int 1   
    {0xf002, &op_int,	255, 255, 255, 0x02, 0x00, 0x00, 0x00}, // int 2   
    {0xf003, &op_int,	255, 255, 255, 0x03, 0x00, 0x00, 0x00}, // int 3   
    {0xf004, &op_int,	255, 255, 255, 0x04, 0x00, 0x00, 0x00}, // int 4   
    {0xf005, &op_int,	255, 255, 255, 0x05, 0x00, 0x00, 0x00}, // int 5   
    {0xf006, &op_int,	255, 255, 255, 0x06, 0x00, 0x00, 0x00}, // int 6   
    {0xf007, &op_int,	255, 255, 255, 0x07, 0x00, 0x00, 0x00}, // int 7   
    {0xf008, &op_int,	255, 255, 255, 0x08, 0x00, 0x00, 0x00}, // int 8   
    {0xf009, &op_int,	255, 255, 255, 0x09, 0x00, 0x00, 0x00}, // int 9   
    {0xf00a, &op_int,	255, 255, 255, 0x0a, 0x00, 0x00, 0x00}, // int 10   
    {0xf00b, &op_int,	255, 255, 255, 0x0b, 0x00, 0x00, 0x00}, // int 11   
    {0xf00c, &op_int,	255, 255, 255, 0x0c, 0x00, 0x00, 0x00}, // int 12   
    {0xf00d, &op_int,	255, 255, 255, 0x0d, 0x00, 0x00, 0x00}, // int 13   
    {0xf00e, &op_int,	255, 255, 255, 0x0e, 0x00, 0x00, 0x00}, // int 14   
    {0xf00f, &op_int,	255, 255, 255, 0x0f, 0x00, 0x00, 0x00}, // int 15   
    {0xf010, &op_int,	255, 255, 255, 0x10, 0x00, 0x00, 0x00}, // int 16   
    {0xf011, &op_int,	255, 255, 255, 0x11, 0x00, 0x00, 0x00}, // int 17   
    {0xf012, &op_int,	255, 255, 255, 0x12, 0x00, 0x00, 0x00}, // int 18   
    {0xf013, &op_int,	255, 255, 255, 0x13, 0x00, 0x00, 0x00}, // int 19   
    {0xf014, &op_int,	255, 255, 255, 0x14, 0x00, 0x00, 0x00}, // int 20   
    {0xf015, &op_int,	255, 255, 255, 0x15, 0x00, 0x00, 0x00}, // int 21   
    {0xf016, &op_int,	255, 255, 255, 0x16, 0x00, 0x00, 0x00}, // int 22   
    {0xf017, &op_int,	255, 255, 255, 0x17, 0x00, 0x00, 0x00}, // int 23   
    {0xf018, &op_int,	255, 255, 255, 0x18, 0x00, 0x00, 0x00}, // int 24   
    {0xf019, &op_int,	255, 255, 255, 0x19, 0x00, 0x00, 0x00}, // int 25   
    {0xf01a, &op_int,	255, 255, 255, 0x1a, 0x00, 0x00, 0x00}, // int 26   
    {0xf01b, &op_int,	255, 255, 255, 0x1b, 0x00, 0x00, 0x00}, // int 27   
    {0xf01c, &op_int,	255, 255, 255, 0x1c, 0x00, 0x00, 0x00}, // int 28   
    {0xf01d, &op_int,	255, 255, 255, 0x1d, 0x00, 0x00, 0x00}, // int 29   
    {0xf01e, &op_int,	255, 255, 255, 0x1e, 0x00, 0x00, 0x00}, // int 30   
    {0xf01f, &op_int,	255, 255, 255, 0x1f, 0x00, 0x00, 0x00}, // int 31   
    {0xf020, &op_int,	255, 255, 255, 0x20, 0x00, 0x00, 0x00}, // int 32   
    {0xf021, &op_int,	255, 255, 255, 0x21, 0x00, 0x00, 0x00}, // int 33   
    {0xf022, &op_int,	255, 255, 255, 0x22, 0x00, 0x00, 0x00}, // int 34   
    {0xf023, &op_int,	255, 255, 255, 0x23, 0x00, 0x00, 0x00}, // int 35   
    {0xf024, &op_int,	255, 255, 255, 0x24, 0x00, 0x00, 0x00}, // int 36   
    {0xf025, &op_int,	255, 255, 255, 0x25, 0x00, 0x00, 0x00}, // int 37   
    {0xf026, &op_int,	255, 255, 255, 0x26, 0x00, 0x00, 0x00}, // int 38   
    {0xf027, &op_int,	255, 255, 255, 0x27, 0x00, 0x00, 0x00}, // int 39   
    {0xf028, &op_int,	255, 255, 255, 0x28, 0x00, 0x00, 0x00}, // int 40   
    {0xf029, &op_int,	255, 255, 255, 0x29, 0x00, 0x00, 0x00}, // int 41   
    {0xf02a, &op_int,	255, 255, 255, 0x2a, 0x00, 0x00, 0x00}, // int 42   
    {0xf02b, &op_int,	255, 255, 255, 0x2b, 0x00, 0x00, 0x00}, // int 43   
    {0xf02c, &op_int,	255, 255, 255, 0x2c, 0x00, 0x00, 0x00}, // int 44   
    {0xf02d, &op_int,	255, 255, 255, 0x2d, 0x00, 0x00, 0x00}, // int 45   
    {0xf02e, &op_int,	255, 255, 255, 0x2e, 0x00, 0x00, 0x00}, // int 46   
    {0xf02f, &op_int,	255, 255, 255, 0x2f, 0x00, 0x00, 0x00}, // int 47   
    {0xf030, &op_int,	255, 255, 255, 0x30, 0x00, 0x00, 0x00}, // int 48   
    {0xf031, &op_int,	255, 255, 255, 0x31, 0x00, 0x00, 0x00}, // int 49   
    {0xf032, &op_int,	255, 255, 255, 0x32, 0x00, 0x00, 0x00}, // int 50   
    {0xf033, &op_int,	255, 255, 255, 0x33, 0x00, 0x00, 0x00}, // int 51   
    {0xf034, &op_int,	255, 255, 255, 0x34, 0x00, 0x00, 0x00}, // int 52   
    {0xf035, &op_int,	255, 255, 255, 0x35, 0x00, 0x00, 0x00}, // int 53   
    {0xf036, &op_int,	255, 255, 255, 0x36, 0x00, 0x00, 0x00}, // int 54   
    {0xf037, &op_int,	255, 255, 255, 0x37, 0x00, 0x00, 0x00}, // int 55   
    {0xf038, &op_int,	255, 255, 255, 0x38, 0x00, 0x00, 0x00}, // int 56   
    {0xf039, &op_int,	255, 255, 255, 0x39, 0x00, 0x00, 0x00}, // int 57   
    {0xf03a, &op_int,	255, 255, 255, 0x3a, 0x00, 0x00, 0x00}, // int 58   
    {0xf03b, &op_int,	255, 255, 255, 0x3b, 0x00, 0x00, 0x00}, // int 59   
    {0xf03c, &op_int,	255, 255, 255, 0x3c, 0x00, 0x00, 0x00}, // int 60   
    {0xf03d, &op_int,	255, 255, 255, 0x3d, 0x00, 0x00, 0x00}, // int 61   
    {0xf03e, &op_int,	255, 255, 255, 0x3e, 0x00, 0x00, 0x00}, // int 62   
    {0xf03f, &op_int,	255, 255, 255, 0x3f, 0x00, 0x00, 0x00}, // int 63   
    {0xf040, &op_int,	255, 255, 255, 0x40, 0x00, 0x00, 0x00}, // int 64   
    {0xf041, &op_int,	255, 255, 255, 0x41, 0x00, 0x00, 0x00}, // int 65   
    {0xf042, &op_int,	255, 255, 255, 0x42, 0x00, 0x00, 0x00}, // int 66   
    {0xf043, &op_int,	255, 255, 255, 0x43, 0x00, 0x00, 0x00}, // int 67   
    {0xf044, &op_int,	255, 255, 255, 0x44, 0x00, 0x00, 0x00}, // int 68   
    {0xf045, &op_int,	255, 255, 255, 0x45, 0x00, 0x00, 0x00}, // int 69   
    {0xf046, &op_int,	255, 255, 255, 0x46, 0x00, 0x00, 0x00}, // int 70   
    {0xf047, &op_int,	255, 255, 255, 0x47, 0x00, 0x00, 0x00}, // int 71   
    {0xf048, &op_int,	255, 255, 255, 0x48, 0x00, 0x00, 0x00}, // int 72   
    {0xf049, &op_int,	255, 255, 255, 0x49, 0x00, 0x00, 0x00}, // int 73   
    {0xf04a, &op_int,	255, 255, 255, 0x4a, 0x00, 0x00, 0x00}, // int 74   
    {0xf04b, &op_int,	255, 255, 255, 0x4b, 0x00, 0x00, 0x00}, // int 75   
    {0xf04c, &op_int,	255, 255, 255, 0x4c, 0x00, 0x00, 0x00}, // int 76   
    {0xf04d, &op_int,	255, 255, 255, 0x4d, 0x00, 0x00, 0x00}, // int 77   
    {0xf04e, &op_int,	255, 255, 255, 0x4e, 0x00, 0x00, 0x00}, // int 78   
    {0xf04f, &op_int,	255, 255, 255, 0x4f, 0x00, 0x00, 0x00}, // int 79   
    {0xf050, &op_int,	255, 255, 255, 0x50, 0x00, 0x00, 0x00}, // int 80   
    {0xf051, &op_int,	255, 255, 255, 0x51, 0x00, 0x00, 0x00}, // int 81   
    {0xf052, &op_int,	255, 255, 255, 0x52, 0x00, 0x00, 0x00}, // int 82   
    {0xf053, &op_int,	255, 255, 255, 0x53, 0x00, 0x00, 0x00}, // int 83   
    {0xf054, &op_int,	255, 255, 255, 0x54, 0x00, 0x00, 0x00}, // int 84   
    {0xf055, &op_int,	255, 255, 255, 0x55, 0x00, 0x00, 0x00}, // int 85   
    {0xf056, &op_int,	255, 255, 255, 0x56, 0x00, 0x00, 0x00}, // int 86   
    {0xf057, &op_int,	255, 255, 255, 0x57, 0x00, 0x00, 0x00}, // int 87   
    {0xf058, &op_int,	255, 255, 255, 0x58, 0x00, 0x00, 0x00}, // int 88   
    {0xf059, &op_int,	255, 255, 255, 0x59, 0x00, 0x00, 0x00}, // int 89   
    {0xf05a, &op_int,	255, 255, 255, 0x5a, 0x00, 0x00, 0x00}, // int 90   
    {0xf05b, &op_int,	255, 255, 255, 0x5b, 0x00, 0x00, 0x00}, // int 91   
    {0xf05c, &op_int,	255, 255, 255, 0x5c, 0x00, 0x00, 0x00}, // int 92   
    {0xf05d, &op_int,	255, 255, 255, 0x5d, 0x00, 0x00, 0x00}, // int 93   
    {0xf05e, &op_int,	255, 255, 255, 0x5e, 0x00, 0x00, 0x00}, // int 94   
    {0xf05f, &op_int,	255, 255, 255, 0x5f, 0x00, 0x00, 0x00}, // int 95   
    {0xf060, &op_int,	255, 255, 255, 0x60, 0x00, 0x00, 0x00}, // int 96   
    {0xf061, &op_int,	255, 255, 255, 0x61, 0x00, 0x00, 0x00}, // int 97   
    {0xf062, &op_int,	255, 255, 255, 0x62, 0x00, 0x00, 0x00}, // int 98   
    {0xf063, &op_int,	255, 255, 255, 0x63, 0x00, 0x00, 0x00}, // int 99   
    {0xf064, &op_int,	255, 255, 255, 0x64, 0x00, 0x00, 0x00}, // int 100   
    {0xf065, &op_int,	255, 255, 255, 0x65, 0x00, 0x00, 0x00}, // int 101   
    {0xf066, &op_int,	255, 255, 255, 0x66, 0x00, 0x00, 0x00}, // int 102   
    {0xf067, &op_int,	255, 255, 255, 0x67, 0x00, 0x00, 0x00}, // int 103   
    {0xf068, &op_int,	255, 255, 255, 0x68, 0x00, 0x00, 0x00}, // int 104   
    {0xf069, &op_int,	255, 255, 255, 0x69, 0x00, 0x00, 0x00}, // int 105   
    {0xf06a, &op_int,	255, 255, 255, 0x6a, 0x00, 0x00, 0x00}, // int 106   
    {0xf06b, &op_int,	255, 255, 255, 0x6b, 0x00, 0x00, 0x00}, // int 107   
    {0xf06c, &op_int,	255, 255, 255, 0x6c, 0x00, 0x00, 0x00}, // int 108   
    {0xf06d, &op_int,	255, 255, 255, 0x6d, 0x00, 0x00, 0x00}, // int 109   
    {0xf06e, &op_int,	255, 255, 255, 0x6e, 0x00, 0x00, 0x00}, // int 110   
    {0xf06f, &op_int,	255, 255, 255, 0x6f, 0x00, 0x00, 0x00}, // int 111   
    {0xf070, &op_int,	255, 255, 255, 0x70, 0x00, 0x00, 0x00}, // int 112   
    {0xf071, &op_int,	255, 255, 255, 0x71, 0x00, 0x00, 0x00}, // int 113   
    {0xf072, &op_int,	255, 255, 255, 0x72, 0x00, 0x00, 0x00}, // int 114   
    {0xf073, &op_int,	255, 255, 255, 0x73, 0x00, 0x00, 0x00}, // int 115   
    {0xf074, &op_int,	255, 255, 255, 0x74, 0x00, 0x00, 0x00}, // int 116   
    {0xf075, &op_int,	255, 255, 255, 0x75, 0x00, 0x00, 0x00}, // int 117   
    {0xf076, &op_int,	255, 255, 255, 0x76, 0x00, 0x00, 0x00}, // int 118   
    {0xf077, &op_int,	255, 255, 255, 0x77, 0x00, 0x00, 0x00}, // int 119   
    {0xf078, &op_int,	255, 255, 255, 0x78, 0x00, 0x00, 0x00}, // int 120   
    {0xf079, &op_int,	255, 255, 255, 0x79, 0x00, 0x00, 0x00}, // int 121   
    {0xf07a, &op_int,	255, 255, 255, 0x7a, 0x00, 0x00, 0x00}, // int 122   
    {0xf07b, &op_int,	255, 255, 255, 0x7b, 0x00, 0x00, 0x00}, // int 123   
    {0xf07c, &op_int,	255, 255, 255, 0x7c, 0x00, 0x00, 0x00}, // int 124   
    {0xf07d, &op_int,	255, 255, 255, 0x7d, 0x00, 0x00, 0x00}, // int 125   
    {0xf07e, &op_int,	255, 255, 255, 0x7e, 0x00, 0x00, 0x00}, // int 126   
    {0xf07f, &op_int,	255, 255, 255, 0x7f, 0x00, 0x00, 0x00}, // int 127   
    {0xf080, &op_int,	255, 255, 255, 0x80, 0x00, 0x00, 0x00}, // int 128   
    {0xf081, &op_int,	255, 255, 255, 0x81, 0x00, 0x00, 0x00}, // int 129   
    {0xf082, &op_int,	255, 255, 255, 0x82, 0x00, 0x00, 0x00}, // int 130   
    {0xf083, &op_int,	255, 255, 255, 0x83, 0x00, 0x00, 0x00}, // int 131   
    {0xf084, &op_int,	255, 255, 255, 0x84, 0x00, 0x00, 0x00}, // int 132   
    {0xf085, &op_int,	255, 255, 255, 0x85, 0x00, 0x00, 0x00}, // int 133   
    {0xf086, &op_int,	255, 255, 255, 0x86, 0x00, 0x00, 0x00}, // int 134   
    {0xf087, &op_int,	255, 255, 255, 0x87, 0x00, 0x00, 0x00}, // int 135   
    {0xf088, &op_int,	255, 255, 255, 0x88, 0x00, 0x00, 0x00}, // int 136   
    {0xf089, &op_int,	255, 255, 255, 0x89, 0x00, 0x00, 0x00}, // int 137   
    {0xf08a, &op_int,	255, 255, 255, 0x8a, 0x00, 0x00, 0x00}, // int 138   
    {0xf08b, &op_int,	255, 255, 255, 0x8b, 0x00, 0x00, 0x00}, // int 139   
    {0xf08c, &op_int,	255, 255, 255, 0x8c, 0x00, 0x00, 0x00}, // int 140   
    {0xf08d, &op_int,	255, 255, 255, 0x8d, 0x00, 0x00, 0x00}, // int 141   
    {0xf08e, &op_int,	255, 255, 255, 0x8e, 0x00, 0x00, 0x00}, // int 142   
    {0xf08f, &op_int,	255, 255, 255, 0x8f, 0x00, 0x00, 0x00}, // int 143   
    {0xf090, &op_int,	255, 255, 255, 0x90, 0x00, 0x00, 0x00}, // int 144   
    {0xf091, &op_int,	255, 255, 255, 0x91, 0x00, 0x00, 0x00}, // int 145   
    {0xf092, &op_int,	255, 255, 255, 0x92, 0x00, 0x00, 0x00}, // int 146   
    {0xf093, &op_int,	255, 255, 255, 0x93, 0x00, 0x00, 0x00}, // int 147   
    {0xf094, &op_int,	255, 255, 255, 0x94, 0x00, 0x00, 0x00}, // int 148   
    {0xf095, &op_int,	255, 255, 255, 0x95, 0x00, 0x00, 0x00}, // int 149   
    {0xf096, &op_int,	255, 255, 255, 0x96, 0x00, 0x00, 0x00}, // int 150   
    {0xf097, &op_int,	255, 255, 255, 0x97, 0x00, 0x00, 0x00}, // int 151   
    {0xf098, &op_int,	255, 255, 255, 0x98, 0x00, 0x00, 0x00}, // int 152   
    {0xf099, &op_int,	255, 255, 255, 0x99, 0x00, 0x00, 0x00}, // int 153   
    {0xf09a, &op_int,	255, 255, 255, 0x9a, 0x00, 0x00, 0x00}, // int 154   
    {0xf09b, &op_int,	255, 255, 255, 0x9b, 0x00, 0x00, 0x00}, // int 155   
    {0xf09c, &op_int,	255, 255, 255, 0x9c, 0x00, 0x00, 0x00}, // int 156   
    {0xf09d, &op_int,	255, 255, 255, 0x9d, 0x00, 0x00, 0x00}, // int 157   
    {0xf09e, &op_int,	255, 255, 255, 0x9e, 0x00, 0x00, 0x00}, // int 158   
    {0xf09f, &op_int,	255, 255, 255, 0x9f, 0x00, 0x00, 0x00}, // int 159   
    {0xf0a0, &op_int,	255, 255, 255, 0xa0, 0x00, 0x00, 0x00}, // int 160   
    {0xf0a1, &op_int,	255, 255, 255, 0xa1, 0x00, 0x00, 0x00}, // int 161   
    {0xf0a2, &op_int,	255, 255, 255, 0xa2, 0x00, 0x00, 0x00}, // int 162   
    {0xf0a3, &op_int,	255, 255, 255, 0xa3, 0x00, 0x00, 0x00}, // int 163   
    {0xf0a4, &op_int,	255, 255, 255, 0xa4, 0x00, 0x00, 0x00}, // int 164   
    {0xf0a5, &op_int,	255, 255, 255, 0xa5, 0x00, 0x00, 0x00}, // int 165   
    {0xf0a6, &op_int,	255, 255, 255, 0xa6, 0x00, 0x00, 0x00}, // int 166   
    {0xf0a7, &op_int,	255, 255, 255, 0xa7, 0x00, 0x00, 0x00}, // int 167   
    {0xf0a8, &op_int,	255, 255, 255, 0xa8, 0x00, 0x00, 0x00}, // int 168   
    {0xf0a9, &op_int,	255, 255, 255, 0xa9, 0x00, 0x00, 0x00}, // int 169   
    {0xf0aa, &op_int,	255, 255, 255, 0xaa, 0x00, 0x00, 0x00}, // int 170   
    {0xf0ab, &op_int,	255, 255, 255, 0xab, 0x00, 0x00, 0x00}, // int 171   
    {0xf0ac, &op_int,	255, 255, 255, 0xac, 0x00, 0x00, 0x00}, // int 172   
    {0xf0ad, &op_int,	255, 255, 255, 0xad, 0x00, 0x00, 0x00}, // int 173   
    {0xf0ae, &op_int,	255, 255, 255, 0xae, 0x00, 0x00, 0x00}, // int 174   
    {0xf0af, &op_int,	255, 255, 255, 0xaf, 0x00, 0x00, 0x00}, // int 175   
    {0xf0b0, &op_int,	255, 255, 255, 0xb0, 0x00, 0x00, 0x00}, // int 176   
    {0xf0b1, &op_int,	255, 255, 255, 0xb1, 0x00, 0x00, 0x00}, // int 177   
    {0xf0b2, &op_int,	255, 255, 255, 0xb2, 0x00, 0x00, 0x00}, // int 178   
    {0xf0b3, &op_int,	255, 255, 255, 0xb3, 0x00, 0x00, 0x00}, // int 179   
    {0xf0b4, &op_int,	255, 255, 255, 0xb4, 0x00, 0x00, 0x00}, // int 180   
    {0xf0b5, &op_int,	255, 255, 255, 0xb5, 0x00, 0x00, 0x00}, // int 181   
    {0xf0b6, &op_int,	255, 255, 255, 0xb6, 0x00, 0x00, 0x00}, // int 182   
    {0xf0b7, &op_int,	255, 255, 255, 0xb7, 0x00, 0x00, 0x00}, // int 183   
    {0xf0b8, &op_int,	255, 255, 255, 0xb8, 0x00, 0x00, 0x00}, // int 184   
    {0xf0b9, &op_int,	255, 255, 255, 0xb9, 0x00, 0x00, 0x00}, // int 185   
    {0xf0ba, &op_int,	255, 255, 255, 0xba, 0x00, 0x00, 0x00}, // int 186   
    {0xf0bb, &op_int,	255, 255, 255, 0xbb, 0x00, 0x00, 0x00}, // int 187   
    {0xf0bc, &op_int,	255, 255, 255, 0xbc, 0x00, 0x00, 0x00}, // int 188   
    {0xf0bd, &op_int,	255, 255, 255, 0xbd, 0x00, 0x00, 0x00}, // int 189   
    {0xf0be, &op_int,	255, 255, 255, 0xbe, 0x00, 0x00, 0x00}, // int 190   
    {0xf0bf, &op_int,	255, 255, 255, 0xbf, 0x00, 0x00, 0x00}, // int 191   
    {0xf0c0, &op_int,	255, 255, 255, 0xc0, 0x00, 0x00, 0x00}, // int 192   
    {0xf0c1, &op_int,	255, 255, 255, 0xc1, 0x00, 0x00, 0x00}, // int 193   
    {0xf0c2, &op_int,	255, 255, 255, 0xc2, 0x00, 0x00, 0x00}, // int 194   
    {0xf0c3, &op_int,	255, 255, 255, 0xc3, 0x00, 0x00, 0x00}, // int 195   
    {0xf0c4, &op_int,	255, 255, 255, 0xc4, 0x00, 0x00, 0x00}, // int 196   
    {0xf0c5, &op_int,	255, 255, 255, 0xc5, 0x00, 0x00, 0x00}, // int 197   
    {0xf0c6, &op_int,	255, 255, 255, 0xc6, 0x00, 0x00, 0x00}, // int 198   
    {0xf0c7, &op_int,	255, 255, 255, 0xc7, 0x00, 0x00, 0x00}, // int 199   
    {0xf0c8, &op_int,	255, 255, 255, 0xc8, 0x00, 0x00, 0x00}, // int 200   
    {0xf0c9, &op_int,	255, 255, 255, 0xc9, 0x00, 0x00, 0x00}, // int 201   
    {0xf0ca, &op_int,	255, 255, 255, 0xca, 0x00, 0x00, 0x00}, // int 202   
    {0xf0cb, &op_int,	255, 255, 255, 0xcb, 0x00, 0x00, 0x00}, // int 203   
    {0xf0cc, &op_int,	255, 255, 255, 0xcc, 0x00, 0x00, 0x00}, // int 204   
    {0xf0cd, &op_int,	255, 255, 255, 0xcd, 0x00, 0x00, 0x00}, // int 205   
    {0xf0ce, &op_int,	255, 255, 255, 0xce, 0x00, 0x00, 0x00}, // int 206   
    {0xf0cf, &op_int,	255, 255, 255, 0xcf, 0x00, 0x00, 0x00}, // int 207   
    {0xf0d0, &op_int,	255, 255, 255, 0xd0, 0x00, 0x00, 0x00}, // int 208   
    {0xf0d1, &op_int,	255, 255, 255, 0xd1, 0x00, 0x00, 0x00}, // int 209   
    {0xf0d2, &op_int,	255, 255, 255, 0xd2, 0x00, 0x00, 0x00}, // int 210   
    {0xf0d3, &op_int,	255, 255, 255, 0xd3, 0x00, 0x00, 0x00}, // int 211   
    {0xf0d4, &op_int,	255, 255, 255, 0xd4, 0x00, 0x00, 0x00}, // int 212   
    {0xf0d5, &op_int,	255, 255, 255, 0xd5, 0x00, 0x00, 0x00}, // int 213   
    {0xf0d6, &op_int,	255, 255, 255, 0xd6, 0x00, 0x00, 0x00}, // int 214   
    {0xf0d7, &op_int,	255, 255, 255, 0xd7, 0x00, 0x00, 0x00}, // int 215   
    {0xf0d8, &op_int,	255, 255, 255, 0xd8, 0x00, 0x00, 0x00}, // int 216   
    {0xf0d9, &op_int,	255, 255, 255, 0xd9, 0x00, 0x00, 0x00}, // int 217   
    {0xf0da, &op_int,	255, 255, 255, 0xda, 0x00, 0x00, 0x00}, // int 218   
    {0xf0db, &op_int,	255, 255, 255, 0xdb, 0x00, 0x00, 0x00}, // int 219   
    {0xf0dc, &op_int,	255, 255, 255, 0xdc, 0x00, 0x00, 0x00}, // int 220   
    {0xf0dd, &op_int,	255, 255, 255, 0xdd, 0x00, 0x00, 0x00}, // int 221   
    {0xf0de, &op_int,	255, 255, 255, 0xde, 0x00, 0x00, 0x00}, // int 222   
    {0xf0df, &op_int,	255, 255, 255, 0xdf, 0x00, 0x00, 0x00}, // int 223   
    {0xf0e0, &op_int,	255, 255, 255, 0xe0, 0x00, 0x00, 0x00}, // int 224   
    {0xf0e1, &op_int,	255, 255, 255, 0xe1, 0x00, 0x00, 0x00}, // int 225   
    {0xf0e2, &op_int,	255, 255, 255, 0xe2, 0x00, 0x00, 0x00}, // int 226   
    {0xf0e3, &op_int,	255, 255, 255, 0xe3, 0x00, 0x00, 0x00}, // int 227   
    {0xf0e4, &op_int,	255, 255, 255, 0xe4, 0x00, 0x00, 0x00}, // int 228   
    {0xf0e5, &op_int,	255, 255, 255, 0xe5, 0x00, 0x00, 0x00}, // int 229   
    {0xf0e6, &op_int,	255, 255, 255, 0xe6, 0x00, 0x00, 0x00}, // int 230   
    {0xf0e7, &op_int,	255, 255, 255, 0xe7, 0x00, 0x00, 0x00}, // int 231   
    {0xf0e8, &op_int,	255, 255, 255, 0xe8, 0x00, 0x00, 0x00}, // int 232   
    {0xf0e9, &op_int,	255, 255, 255, 0xe9, 0x00, 0x00, 0x00}, // int 233   
    {0xf0ea, &op_int,	255, 255, 255, 0xea, 0x00, 0x00, 0x00}, // int 234   
    {0xf0eb, &op_int,	255, 255, 255, 0xeb, 0x00, 0x00, 0x00}, // int 235   
    {0xf0ec, &op_int,	255, 255, 255, 0xec, 0x00, 0x00, 0x00}, // int 236   
    {0xf0ed, &op_int,	255, 255, 255, 0xed, 0x00, 0x00, 0x00}, // int 237   
    {0xf0ee, &op_int,	255, 255, 255, 0xee, 0x00, 0x00, 0x00}, // int 238   
    {0xf0ef, &op_int,	255, 255, 255, 0xef, 0x00, 0x00, 0x00}, // int 239   
    {0xf0f0, &op_int,	255, 255, 255, 0xf0, 0x00, 0x00, 0x00}, // int 240   
    {0xf0f1, &op_int,	255, 255, 255, 0xf1, 0x00, 0x00, 0x00}, // int 241   
    {0xf0f2, &op_int,	255, 255, 255, 0xf2, 0x00, 0x00, 0x00}, // int 242   
    {0xf0f3, &op_int,	255, 255, 255, 0xf3, 0x00, 0x00, 0x00}, // int 243   
    {0xf0f4, &op_int,	255, 255, 255, 0xf4, 0x00, 0x00, 0x00}, // int 244   
    {0xf0f5, &op_int,	255, 255, 255, 0xf5, 0x00, 0x00, 0x00}, // int 245   
    {0xf0f6, &op_int,	255, 255, 255, 0xf6, 0x00, 0x00, 0x00}, // int 246   
    {0xf0f7, &op_int,	255, 255, 255, 0xf7, 0x00, 0x00, 0x00}, // int 247   
    {0xf0f8, &op_int,	255, 255, 255, 0xf8, 0x00, 0x00, 0x00}, // int 248   
    {0xf0f9, &op_int,	255, 255, 255, 0xf9, 0x00, 0x00, 0x00}, // int 249   
    {0xf0fa, &op_int,	255, 255, 255, 0xfa, 0x00, 0x00, 0x00}, // int 250   
    {0xf0fb, &op_int,	255, 255, 255, 0xfb, 0x00, 0x00, 0x00}, // int 251   
    {0xf0fc, &op_int,	255, 255, 255, 0xfc, 0x00, 0x00, 0x00}, // int 252   
    {0xf0fd, &op_int,	255, 255, 255, 0xfd, 0x00, 0x00, 0x00}, // int 253   
    {0xf0fe, &op_int,	255, 255, 255, 0xfe, 0x00, 0x00, 0x00}, // int 254   
    {0xf0ff, &op_int,	255, 255, 255, 0xff, 0x00, 0x00, 0x00}, // int 255   
	{0xf100, &op_syscall,	255, 255, 255, 0x00, 0x00, 0x00, 0x00}, // syscall 0   
	{0xf101, &op_syscall,	255, 255, 255, 0x01, 0x00, 0x00, 0x00}, // syscall 1   
	{0xf102, &op_syscall,	255, 255, 255, 0x02, 0x00, 0x00, 0x00}, // syscall 2   
	{0xf103, &op_syscall,	255, 255, 255, 0x03, 0x00, 0x00, 0x00}, // syscall 3   
	{0xf104, &op_syscall,	255, 255, 255, 0x04, 0x00, 0x00, 0x00}, // syscall 4   
	{0xf105, &op_syscall,	255, 255, 255, 0x05, 0x00, 0x00, 0x00}, // syscall 5   
	{0xf106, &op_syscall,	255, 255, 255, 0x06, 0x00, 0x00, 0x00}, // syscall 6   
	{0xf107, &op_syscall,	255, 255, 255, 0x07, 0x00, 0x00, 0x00}, // syscall 7   
	{0xf108, &op_syscall,	255, 255, 255, 0x08, 0x00, 0x00, 0x00}, // syscall 8   
	{0xf109, &op_syscall,	255, 255, 255, 0x09, 0x00, 0x00, 0x00}, // syscall 9   
	{0xf10a, &op_syscall,	255, 255, 255, 0x0a, 0x00, 0x00, 0x00}, // syscall 10   
	{0xf10b, &op_syscall,	255, 255, 255, 0x0b, 0x00, 0x00, 0x00}, // syscall 11   
	{0xf10c, &op_syscall,	255, 255, 255, 0x0c, 0x00, 0x00, 0x00}, // syscall 12   
	{0xf10d, &op_syscall,	255, 255, 255, 0x0d, 0x00, 0x00, 0x00}, // syscall 13   
	{0xf10e, &op_syscall,	255, 255, 255, 0x0e, 0x00, 0x00, 0x00}, // syscall 14   
	{0xf10f, &op_syscall,	255, 255, 255, 0x0f, 0x00, 0x00, 0x00}, // syscall 15   
	{0xf110, &op_syscall,	255, 255, 255, 0x10, 0x00, 0x00, 0x00}, // syscall 16   
	{0xf111, &op_syscall,	255, 255, 255, 0x11, 0x00, 0x00, 0x00}, // syscall 17   
	{0xf112, &op_syscall,	255, 255, 255, 0x12, 0x00, 0x00, 0x00}, // syscall 18   
	{0xf113, &op_syscall,	255, 255, 255, 0x13, 0x00, 0x00, 0x00}, // syscall 19   
	{0xf114, &op_syscall,	255, 255, 255, 0x14, 0x00, 0x00, 0x00}, // syscall 20   
	{0xf115, &op_syscall,	255, 255, 255, 0x15, 0x00, 0x00, 0x00}, // syscall 21   
	{0xf116, &op_syscall,	255, 255, 255, 0x16, 0x00, 0x00, 0x00}, // syscall 22   
	{0xf117, &op_syscall,	255, 255, 255, 0x17, 0x00, 0x00, 0x00}, // syscall 23   
	{0xf118, &op_syscall,	255, 255, 255, 0x18, 0x00, 0x00, 0x00}, // syscall 24   
	{0xf119, &op_syscall,	255, 255, 255, 0x19, 0x00, 0x00, 0x00}, // syscall 25   
	{0xf11a, &op_syscall,	255, 255, 255, 0x1a, 0x00, 0x00, 0x00}, // syscall 26   
	{0xf11b, &op_syscall,	255, 255, 255, 0x1b, 0x00, 0x00, 0x00}, // syscall 27   
	{0xf11c, &op_syscall,	255, 255, 255, 0x1c, 0x00, 0x00, 0x00}, // syscall 28   
	{0xf11d, &op_syscall,	255, 255, 255, 0x1d, 0x00, 0x00, 0x00}, // syscall 29   
	{0xf11e, &op_syscall,	255, 255, 255, 0x1e, 0x00, 0x00, 0x00}, // syscall 30   
	{0xf11f, &op_syscall,	255, 255, 255, 0x1f, 0x00, 0x00, 0x00}, // syscall 31   
	{0xf120, &op_syscall,	255, 255, 255, 0x20, 0x00, 0x00, 0x00}, // syscall 32   
	{0xf121, &op_syscall,	255, 255, 255, 0x21, 0x00, 0x00, 0x00}, // syscall 33   
	{0xf122, &op_syscall,	255, 255, 255, 0x22, 0x00, 0x00, 0x00}, // syscall 34   
	{0xf123, &op_syscall,	255, 255, 255, 0x23, 0x00, 0x00, 0x00}, // syscall 35   
	{0xf124, &op_syscall,	255, 255, 255, 0x24, 0x00, 0x00, 0x00}, // syscall 36   
	{0xf125, &op_syscall,	255, 255, 255, 0x25, 0x00, 0x00, 0x00}, // syscall 37   
	{0xf126, &op_syscall,	255, 255, 255, 0x26, 0x00, 0x00, 0x00}, // syscall 38   
	{0xf127, &op_syscall,	255, 255, 255, 0x27, 0x00, 0x00, 0x00}, // syscall 39   
	{0xf128, &op_syscall,	255, 255, 255, 0x28, 0x00, 0x00, 0x00}, // syscall 40   
	{0xf129, &op_syscall,	255, 255, 255, 0x29, 0x00, 0x00, 0x00}, // syscall 41   
	{0xf12a, &op_syscall,	255, 255, 255, 0x2a, 0x00, 0x00, 0x00}, // syscall 42   
	{0xf12b, &op_syscall,	255, 255, 255, 0x2b, 0x00, 0x00, 0x00}, // syscall 43   
	{0xf12c, &op_syscall,	255, 255, 255, 0x2c, 0x00, 0x00, 0x00}, // syscall 44   
	{0xf12d, &op_syscall,	255, 255, 255, 0x2d, 0x00, 0x00, 0x00}, // syscall 45   
	{0xf12e, &op_syscall,	255, 255, 255, 0x2e, 0x00, 0x00, 0x00}, // syscall 46   
	{0xf12f, &op_syscall,	255, 255, 255, 0x2f, 0x00, 0x00, 0x00}, // syscall 47   
	{0xf130, &op_syscall,	255, 255, 255, 0x30, 0x00, 0x00, 0x00}, // syscall 48   
	{0xf131, &op_syscall,	255, 255, 255, 0x31, 0x00, 0x00, 0x00}, // syscall 49   
	{0xf132, &op_syscall,	255, 255, 255, 0x32, 0x00, 0x00, 0x00}, // syscall 50   
	{0xf133, &op_syscall,	255, 255, 255, 0x33, 0x00, 0x00, 0x00}, // syscall 51   
	{0xf134, &op_syscall,	255, 255, 255, 0x34, 0x00, 0x00, 0x00}, // syscall 52   
	{0xf135, &op_syscall,	255, 255, 255, 0x35, 0x00, 0x00, 0x00}, // syscall 53   
	{0xf136, &op_syscall,	255, 255, 255, 0x36, 0x00, 0x00, 0x00}, // syscall 54   
	{0xf137, &op_syscall,	255, 255, 255, 0x37, 0x00, 0x00, 0x00}, // syscall 55   
	{0xf138, &op_syscall,	255, 255, 255, 0x38, 0x00, 0x00, 0x00}, // syscall 56   
	{0xf139, &op_syscall,	255, 255, 255, 0x39, 0x00, 0x00, 0x00}, // syscall 57   
	{0xf13a, &op_syscall,	255, 255, 255, 0x3a, 0x00, 0x00, 0x00}, // syscall 58   
	{0xf13b, &op_syscall,	255, 255, 255, 0x3b, 0x00, 0x00, 0x00}, // syscall 59   
	{0xf13c, &op_syscall,	255, 255, 255, 0x3c, 0x00, 0x00, 0x00}, // syscall 60   
	{0xf13d, &op_syscall,	255, 255, 255, 0x3d, 0x00, 0x00, 0x00}, // syscall 61   
	{0xf13e, &op_syscall,	255, 255, 255, 0x3e, 0x00, 0x00, 0x00}, // syscall 62   
	{0xf13f, &op_syscall,	255, 255, 255, 0x3f, 0x00, 0x00, 0x00}, // syscall 63   
	{0xf140, &op_syscall,	255, 255, 255, 0x40, 0x00, 0x00, 0x00}, // syscall 64   
	{0xf141, &op_syscall,	255, 255, 255, 0x41, 0x00, 0x00, 0x00}, // syscall 65   
	{0xf142, &op_syscall,	255, 255, 255, 0x42, 0x00, 0x00, 0x00}, // syscall 66   
	{0xf143, &op_syscall,	255, 255, 255, 0x43, 0x00, 0x00, 0x00}, // syscall 67   
	{0xf144, &op_syscall,	255, 255, 255, 0x44, 0x00, 0x00, 0x00}, // syscall 68   
	{0xf145, &op_syscall,	255, 255, 255, 0x45, 0x00, 0x00, 0x00}, // syscall 69   
	{0xf146, &op_syscall,	255, 255, 255, 0x46, 0x00, 0x00, 0x00}, // syscall 70   
	{0xf147, &op_syscall,	255, 255, 255, 0x47, 0x00, 0x00, 0x00}, // syscall 71   
	{0xf148, &op_syscall,	255, 255, 255, 0x48, 0x00, 0x00, 0x00}, // syscall 72   
	{0xf149, &op_syscall,	255, 255, 255, 0x49, 0x00, 0x00, 0x00}, // syscall 73   
	{0xf14a, &op_syscall,	255, 255, 255, 0x4a, 0x00, 0x00, 0x00}, // syscall 74   
	{0xf14b, &op_syscall,	255, 255, 255, 0x4b, 0x00, 0x00, 0x00}, // syscall 75   
	{0xf14c, &op_syscall,	255, 255, 255, 0x4c, 0x00, 0x00, 0x00}, // syscall 76   
	{0xf14d, &op_syscall,	255, 255, 255, 0x4d, 0x00, 0x00, 0x00}, // syscall 77   
	{0xf14e, &op_syscall,	255, 255, 255, 0x4e, 0x00, 0x00, 0x00}, // syscall 78   
	{0xf14f, &op_syscall,	255, 255, 255, 0x4f, 0x00, 0x00, 0x00}, // syscall 79   
	{0xf150, &op_syscall,	255, 255, 255, 0x50, 0x00, 0x00, 0x00}, // syscall 80   
	{0xf151, &op_syscall,	255, 255, 255, 0x51, 0x00, 0x00, 0x00}, // syscall 81   
	{0xf152, &op_syscall,	255, 255, 255, 0x52, 0x00, 0x00, 0x00}, // syscall 82   
	{0xf153, &op_syscall,	255, 255, 255, 0x53, 0x00, 0x00, 0x00}, // syscall 83   
	{0xf154, &op_syscall,	255, 255, 255, 0x54, 0x00, 0x00, 0x00}, // syscall 84   
	{0xf155, &op_syscall,	255, 255, 255, 0x55, 0x00, 0x00, 0x00}, // syscall 85   
	{0xf156, &op_syscall,	255, 255, 255, 0x56, 0x00, 0x00, 0x00}, // syscall 86   
	{0xf157, &op_syscall,	255, 255, 255, 0x57, 0x00, 0x00, 0x00}, // syscall 87   
	{0xf158, &op_syscall,	255, 255, 255, 0x58, 0x00, 0x00, 0x00}, // syscall 88   
	{0xf159, &op_syscall,	255, 255, 255, 0x59, 0x00, 0x00, 0x00}, // syscall 89   
	{0xf15a, &op_syscall,	255, 255, 255, 0x5a, 0x00, 0x00, 0x00}, // syscall 90   
	{0xf15b, &op_syscall,	255, 255, 255, 0x5b, 0x00, 0x00, 0x00}, // syscall 91   
	{0xf15c, &op_syscall,	255, 255, 255, 0x5c, 0x00, 0x00, 0x00}, // syscall 92   
	{0xf15d, &op_syscall,	255, 255, 255, 0x5d, 0x00, 0x00, 0x00}, // syscall 93   
	{0xf15e, &op_syscall,	255, 255, 255, 0x5e, 0x00, 0x00, 0x00}, // syscall 94   
	{0xf15f, &op_syscall,	255, 255, 255, 0x5f, 0x00, 0x00, 0x00}, // syscall 95   
	{0xf160, &op_syscall,	255, 255, 255, 0x60, 0x00, 0x00, 0x00}, // syscall 96   
	{0xf161, &op_syscall,	255, 255, 255, 0x61, 0x00, 0x00, 0x00}, // syscall 97   
	{0xf162, &op_syscall,	255, 255, 255, 0x62, 0x00, 0x00, 0x00}, // syscall 98   
	{0xf163, &op_syscall,	255, 255, 255, 0x63, 0x00, 0x00, 0x00}, // syscall 99   
	{0xf164, &op_syscall,	255, 255, 255, 0x64, 0x00, 0x00, 0x00}, // syscall 100   
	{0xf165, &op_syscall,	255, 255, 255, 0x65, 0x00, 0x00, 0x00}, // syscall 101   
	{0xf166, &op_syscall,	255, 255, 255, 0x66, 0x00, 0x00, 0x00}, // syscall 102   
	{0xf167, &op_syscall,	255, 255, 255, 0x67, 0x00, 0x00, 0x00}, // syscall 103   
	{0xf168, &op_syscall,	255, 255, 255, 0x68, 0x00, 0x00, 0x00}, // syscall 104   
	{0xf169, &op_syscall,	255, 255, 255, 0x69, 0x00, 0x00, 0x00}, // syscall 105   
	{0xf16a, &op_syscall,	255, 255, 255, 0x6a, 0x00, 0x00, 0x00}, // syscall 106   
	{0xf16b, &op_syscall,	255, 255, 255, 0x6b, 0x00, 0x00, 0x00}, // syscall 107   
	{0xf16c, &op_syscall,	255, 255, 255, 0x6c, 0x00, 0x00, 0x00}, // syscall 108   
	{0xf16d, &op_syscall,	255, 255, 255, 0x6d, 0x00, 0x00, 0x00}, // syscall 109   
	{0xf16e, &op_syscall,	255, 255, 255, 0x6e, 0x00, 0x00, 0x00}, // syscall 110   
	{0xf16f, &op_syscall,	255, 255, 255, 0x6f, 0x00, 0x00, 0x00}, // syscall 111   
	{0xf170, &op_syscall,	255, 255, 255, 0x70, 0x00, 0x00, 0x00}, // syscall 112   
	{0xf171, &op_syscall,	255, 255, 255, 0x71, 0x00, 0x00, 0x00}, // syscall 113   
	{0xf172, &op_syscall,	255, 255, 255, 0x72, 0x00, 0x00, 0x00}, // syscall 114   
	{0xf173, &op_syscall,	255, 255, 255, 0x73, 0x00, 0x00, 0x00}, // syscall 115   
	{0xf174, &op_syscall,	255, 255, 255, 0x74, 0x00, 0x00, 0x00}, // syscall 116   
	{0xf175, &op_syscall,	255, 255, 255, 0x75, 0x00, 0x00, 0x00}, // syscall 117   
	{0xf176, &op_syscall,	255, 255, 255, 0x76, 0x00, 0x00, 0x00}, // syscall 118   
	{0xf177, &op_syscall,	255, 255, 255, 0x77, 0x00, 0x00, 0x00}, // syscall 119   
	{0xf178, &op_syscall,	255, 255, 255, 0x78, 0x00, 0x00, 0x00}, // syscall 120   
	{0xf179, &op_syscall,	255, 255, 255, 0x79, 0x00, 0x00, 0x00}, // syscall 121   
	{0xf17a, &op_syscall,	255, 255, 255, 0x7a, 0x00, 0x00, 0x00}, // syscall 122   
	{0xf17b, &op_syscall,	255, 255, 255, 0x7b, 0x00, 0x00, 0x00}, // syscall 123   
	{0xf17c, &op_syscall,	255, 255, 255, 0x7c, 0x00, 0x00, 0x00}, // syscall 124   
	{0xf17d, &op_syscall,	255, 255, 255, 0x7d, 0x00, 0x00, 0x00}, // syscall 125   
	{0xf17e, &op_syscall,	255, 255, 255, 0x7e, 0x00, 0x00, 0x00}, // syscall 126   
	{0xf17f, &op_syscall,	255, 255, 255, 0x7f, 0x00, 0x00, 0x00}, // syscall 127   
	{0xf180, &op_syscall,	255, 255, 255, 0x80, 0x00, 0x00, 0x00}, // syscall 128   
	{0xf181, &op_syscall,	255, 255, 255, 0x81, 0x00, 0x00, 0x00}, // syscall 129   
	{0xf182, &op_syscall,	255, 255, 255, 0x82, 0x00, 0x00, 0x00}, // syscall 130   
	{0xf183, &op_syscall,	255, 255, 255, 0x83, 0x00, 0x00, 0x00}, // syscall 131   
	{0xf184, &op_syscall,	255, 255, 255, 0x84, 0x00, 0x00, 0x00}, // syscall 132   
	{0xf185, &op_syscall,	255, 255, 255, 0x85, 0x00, 0x00, 0x00}, // syscall 133   
	{0xf186, &op_syscall,	255, 255, 255, 0x86, 0x00, 0x00, 0x00}, // syscall 134   
	{0xf187, &op_syscall,	255, 255, 255, 0x87, 0x00, 0x00, 0x00}, // syscall 135   
	{0xf188, &op_syscall,	255, 255, 255, 0x88, 0x00, 0x00, 0x00}, // syscall 136   
	{0xf189, &op_syscall,	255, 255, 255, 0x89, 0x00, 0x00, 0x00}, // syscall 137   
	{0xf18a, &op_syscall,	255, 255, 255, 0x8a, 0x00, 0x00, 0x00}, // syscall 138   
	{0xf18b, &op_syscall,	255, 255, 255, 0x8b, 0x00, 0x00, 0x00}, // syscall 139   
	{0xf18c, &op_syscall,	255, 255, 255, 0x8c, 0x00, 0x00, 0x00}, // syscall 140   
	{0xf18d, &op_syscall,	255, 255, 255, 0x8d, 0x00, 0x00, 0x00}, // syscall 141   
	{0xf18e, &op_syscall,	255, 255, 255, 0x8e, 0x00, 0x00, 0x00}, // syscall 142   
	{0xf18f, &op_syscall,	255, 255, 255, 0x8f, 0x00, 0x00, 0x00}, // syscall 143   
	{0xf190, &op_syscall,	255, 255, 255, 0x90, 0x00, 0x00, 0x00}, // syscall 144   
	{0xf191, &op_syscall,	255, 255, 255, 0x91, 0x00, 0x00, 0x00}, // syscall 145   
	{0xf192, &op_syscall,	255, 255, 255, 0x92, 0x00, 0x00, 0x00}, // syscall 146   
	{0xf193, &op_syscall,	255, 255, 255, 0x93, 0x00, 0x00, 0x00}, // syscall 147   
	{0xf194, &op_syscall,	255, 255, 255, 0x94, 0x00, 0x00, 0x00}, // syscall 148   
	{0xf195, &op_syscall,	255, 255, 255, 0x95, 0x00, 0x00, 0x00}, // syscall 149   
	{0xf196, &op_syscall,	255, 255, 255, 0x96, 0x00, 0x00, 0x00}, // syscall 150   
	{0xf197, &op_syscall,	255, 255, 255, 0x97, 0x00, 0x00, 0x00}, // syscall 151   
	{0xf198, &op_syscall,	255, 255, 255, 0x98, 0x00, 0x00, 0x00}, // syscall 152   
	{0xf199, &op_syscall,	255, 255, 255, 0x99, 0x00, 0x00, 0x00}, // syscall 153   
	{0xf19a, &op_syscall,	255, 255, 255, 0x9a, 0x00, 0x00, 0x00}, // syscall 154   
	{0xf19b, &op_syscall,	255, 255, 255, 0x9b, 0x00, 0x00, 0x00}, // syscall 155   
	{0xf19c, &op_syscall,	255, 255, 255, 0x9c, 0x00, 0x00, 0x00}, // syscall 156   
	{0xf19d, &op_syscall,	255, 255, 255, 0x9d, 0x00, 0x00, 0x00}, // syscall 157   
	{0xf19e, &op_syscall,	255, 255, 255, 0x9e, 0x00, 0x00, 0x00}, // syscall 158   
	{0xf19f, &op_syscall,	255, 255, 255, 0x9f, 0x00, 0x00, 0x00}, // syscall 159   
	{0xf1a0, &op_syscall,	255, 255, 255, 0xa0, 0x00, 0x00, 0x00}, // syscall 160   
	{0xf1a1, &op_syscall,	255, 255, 255, 0xa1, 0x00, 0x00, 0x00}, // syscall 161   
	{0xf1a2, &op_syscall,	255, 255, 255, 0xa2, 0x00, 0x00, 0x00}, // syscall 162   
	{0xf1a3, &op_syscall,	255, 255, 255, 0xa3, 0x00, 0x00, 0x00}, // syscall 163   
	{0xf1a4, &op_syscall,	255, 255, 255, 0xa4, 0x00, 0x00, 0x00}, // syscall 164   
	{0xf1a5, &op_syscall,	255, 255, 255, 0xa5, 0x00, 0x00, 0x00}, // syscall 165   
	{0xf1a6, &op_syscall,	255, 255, 255, 0xa6, 0x00, 0x00, 0x00}, // syscall 166   
	{0xf1a7, &op_syscall,	255, 255, 255, 0xa7, 0x00, 0x00, 0x00}, // syscall 167   
	{0xf1a8, &op_syscall,	255, 255, 255, 0xa8, 0x00, 0x00, 0x00}, // syscall 168   
	{0xf1a9, &op_syscall,	255, 255, 255, 0xa9, 0x00, 0x00, 0x00}, // syscall 169   
	{0xf1aa, &op_syscall,	255, 255, 255, 0xaa, 0x00, 0x00, 0x00}, // syscall 170   
	{0xf1ab, &op_syscall,	255, 255, 255, 0xab, 0x00, 0x00, 0x00}, // syscall 171   
	{0xf1ac, &op_syscall,	255, 255, 255, 0xac, 0x00, 0x00, 0x00}, // syscall 172   
	{0xf1ad, &op_syscall,	255, 255, 255, 0xad, 0x00, 0x00, 0x00}, // syscall 173   
	{0xf1ae, &op_syscall,	255, 255, 255, 0xae, 0x00, 0x00, 0x00}, // syscall 174   
	{0xf1af, &op_syscall,	255, 255, 255, 0xaf, 0x00, 0x00, 0x00}, // syscall 175   
	{0xf1b0, &op_syscall,	255, 255, 255, 0xb0, 0x00, 0x00, 0x00}, // syscall 176   
	{0xf1b1, &op_syscall,	255, 255, 255, 0xb1, 0x00, 0x00, 0x00}, // syscall 177   
	{0xf1b2, &op_syscall,	255, 255, 255, 0xb2, 0x00, 0x00, 0x00}, // syscall 178   
	{0xf1b3, &op_syscall,	255, 255, 255, 0xb3, 0x00, 0x00, 0x00}, // syscall 179   
	{0xf1b4, &op_syscall,	255, 255, 255, 0xb4, 0x00, 0x00, 0x00}, // syscall 180   
	{0xf1b5, &op_syscall,	255, 255, 255, 0xb5, 0x00, 0x00, 0x00}, // syscall 181   
	{0xf1b6, &op_syscall,	255, 255, 255, 0xb6, 0x00, 0x00, 0x00}, // syscall 182   
	{0xf1b7, &op_syscall,	255, 255, 255, 0xb7, 0x00, 0x00, 0x00}, // syscall 183   
	{0xf1b8, &op_syscall,	255, 255, 255, 0xb8, 0x00, 0x00, 0x00}, // syscall 184   
	{0xf1b9, &op_syscall,	255, 255, 255, 0xb9, 0x00, 0x00, 0x00}, // syscall 185   
	{0xf1ba, &op_syscall,	255, 255, 255, 0xba, 0x00, 0x00, 0x00}, // syscall 186   
	{0xf1bb, &op_syscall,	255, 255, 255, 0xbb, 0x00, 0x00, 0x00}, // syscall 187   
	{0xf1bc, &op_syscall,	255, 255, 255, 0xbc, 0x00, 0x00, 0x00}, // syscall 188   
	{0xf1bd, &op_syscall,	255, 255, 255, 0xbd, 0x00, 0x00, 0x00}, // syscall 189   
	{0xf1be, &op_syscall,	255, 255, 255, 0xbe, 0x00, 0x00, 0x00}, // syscall 190   
	{0xf1bf, &op_syscall,	255, 255, 255, 0xbf, 0x00, 0x00, 0x00}, // syscall 191   
	{0xf1c0, &op_syscall,	255, 255, 255, 0xc0, 0x00, 0x00, 0x00}, // syscall 192   
	{0xf1c1, &op_syscall,	255, 255, 255, 0xc1, 0x00, 0x00, 0x00}, // syscall 193   
	{0xf1c2, &op_syscall,	255, 255, 255, 0xc2, 0x00, 0x00, 0x00}, // syscall 194   
	{0xf1c3, &op_syscall,	255, 255, 255, 0xc3, 0x00, 0x00, 0x00}, // syscall 195   
	{0xf1c4, &op_syscall,	255, 255, 255, 0xc4, 0x00, 0x00, 0x00}, // syscall 196   
	{0xf1c5, &op_syscall,	255, 255, 255, 0xc5, 0x00, 0x00, 0x00}, // syscall 197   
	{0xf1c6, &op_syscall,	255, 255, 255, 0xc6, 0x00, 0x00, 0x00}, // syscall 198   
	{0xf1c7, &op_syscall,	255, 255, 255, 0xc7, 0x00, 0x00, 0x00}, // syscall 199   
	{0xf1c8, &op_syscall,	255, 255, 255, 0xc8, 0x00, 0x00, 0x00}, // syscall 200   
	{0xf1c9, &op_syscall,	255, 255, 255, 0xc9, 0x00, 0x00, 0x00}, // syscall 201   
	{0xf1ca, &op_syscall,	255, 255, 255, 0xca, 0x00, 0x00, 0x00}, // syscall 202   
	{0xf1cb, &op_syscall,	255, 255, 255, 0xcb, 0x00, 0x00, 0x00}, // syscall 203   
	{0xf1cc, &op_syscall,	255, 255, 255, 0xcc, 0x00, 0x00, 0x00}, // syscall 204   
	{0xf1cd, &op_syscall,	255, 255, 255, 0xcd, 0x00, 0x00, 0x00}, // syscall 205   
	{0xf1ce, &op_syscall,	255, 255, 255, 0xce, 0x00, 0x00, 0x00}, // syscall 206   
	{0xf1cf, &op_syscall,	255, 255, 255, 0xcf, 0x00, 0x00, 0x00}, // syscall 207   
	{0xf1d0, &op_syscall,	255, 255, 255, 0xd0, 0x00, 0x00, 0x00}, // syscall 208   
	{0xf1d1, &op_syscall,	255, 255, 255, 0xd1, 0x00, 0x00, 0x00}, // syscall 209   
	{0xf1d2, &op_syscall,	255, 255, 255, 0xd2, 0x00, 0x00, 0x00}, // syscall 210   
	{0xf1d3, &op_syscall,	255, 255, 255, 0xd3, 0x00, 0x00, 0x00}, // syscall 211   
	{0xf1d4, &op_syscall,	255, 255, 255, 0xd4, 0x00, 0x00, 0x00}, // syscall 212   
	{0xf1d5, &op_syscall,	255, 255, 255, 0xd5, 0x00, 0x00, 0x00}, // syscall 213   
	{0xf1d6, &op_syscall,	255, 255, 255, 0xd6, 0x00, 0x00, 0x00}, // syscall 214   
	{0xf1d7, &op_syscall,	255, 255, 255, 0xd7, 0x00, 0x00, 0x00}, // syscall 215   
	{0xf1d8, &op_syscall,	255, 255, 255, 0xd8, 0x00, 0x00, 0x00}, // syscall 216   
	{0xf1d9, &op_syscall,	255, 255, 255, 0xd9, 0x00, 0x00, 0x00}, // syscall 217   
	{0xf1da, &op_syscall,	255, 255, 255, 0xda, 0x00, 0x00, 0x00}, // syscall 218   
	{0xf1db, &op_syscall,	255, 255, 255, 0xdb, 0x00, 0x00, 0x00}, // syscall 219   
	{0xf1dc, &op_syscall,	255, 255, 255, 0xdc, 0x00, 0x00, 0x00}, // syscall 220   
	{0xf1dd, &op_syscall,	255, 255, 255, 0xdd, 0x00, 0x00, 0x00}, // syscall 221   
	{0xf1de, &op_syscall,	255, 255, 255, 0xde, 0x00, 0x00, 0x00}, // syscall 222   
	{0xf1df, &op_syscall,	255, 255, 255, 0xdf, 0x00, 0x00, 0x00}, // syscall 223   
	{0xf1e0, &op_syscall,	255, 255, 255, 0xe0, 0x00, 0x00, 0x00}, // syscall 224   
	{0xf1e1, &op_syscall,	255, 255, 255, 0xe1, 0x00, 0x00, 0x00}, // syscall 225   
	{0xf1e2, &op_syscall,	255, 255, 255, 0xe2, 0x00, 0x00, 0x00}, // syscall 226   
	{0xf1e3, &op_syscall,	255, 255, 255, 0xe3, 0x00, 0x00, 0x00}, // syscall 227   
	{0xf1e4, &op_syscall,	255, 255, 255, 0xe4, 0x00, 0x00, 0x00}, // syscall 228   
	{0xf1e5, &op_syscall,	255, 255, 255, 0xe5, 0x00, 0x00, 0x00}, // syscall 229   
	{0xf1e6, &op_syscall,	255, 255, 255, 0xe6, 0x00, 0x00, 0x00}, // syscall 230   
	{0xf1e7, &op_syscall,	255, 255, 255, 0xe7, 0x00, 0x00, 0x00}, // syscall 231   
	{0xf1e8, &op_syscall,	255, 255, 255, 0xe8, 0x00, 0x00, 0x00}, // syscall 232   
	{0xf1e9, &op_syscall,	255, 255, 255, 0xe9, 0x00, 0x00, 0x00}, // syscall 233   
	{0xf1ea, &op_syscall,	255, 255, 255, 0xea, 0x00, 0x00, 0x00}, // syscall 234   
	{0xf1eb, &op_syscall,	255, 255, 255, 0xeb, 0x00, 0x00, 0x00}, // syscall 235   
	{0xf1ec, &op_syscall,	255, 255, 255, 0xec, 0x00, 0x00, 0x00}, // syscall 236   
	{0xf1ed, &op_syscall,	255, 255, 255, 0xed, 0x00, 0x00, 0x00}, // syscall 237   
	{0xf1ee, &op_syscall,	255, 255, 255, 0xee, 0x00, 0x00, 0x00}, // syscall 238   
	{0xf1ef, &op_syscall,	255, 255, 255, 0xef, 0x00, 0x00, 0x00}, // syscall 239   
	{0xf1f0, &op_syscall,	255, 255, 255, 0xf0, 0x00, 0x00, 0x00}, // syscall 240   
	{0xf1f1, &op_syscall,	255, 255, 255, 0xf1, 0x00, 0x00, 0x00}, // syscall 241   
	{0xf1f2, &op_syscall,	255, 255, 255, 0xf2, 0x00, 0x00, 0x00}, // syscall 242   
	{0xf1f3, &op_syscall,	255, 255, 255, 0xf3, 0x00, 0x00, 0x00}, // syscall 243   
	{0xf1f4, &op_syscall,	255, 255, 255, 0xf4, 0x00, 0x00, 0x00}, // syscall 244   
	{0xf1f5, &op_syscall,	255, 255, 255, 0xf5, 0x00, 0x00, 0x00}, // syscall 245   
	{0xf1f6, &op_syscall,	255, 255, 255, 0xf6, 0x00, 0x00, 0x00}, // syscall 246   
	{0xf1f7, &op_syscall,	255, 255, 255, 0xf7, 0x00, 0x00, 0x00}, // syscall 247   
	{0xf1f8, &op_syscall,	255, 255, 255, 0xf8, 0x00, 0x00, 0x00}, // syscall 248   
	{0xf1f9, &op_syscall,	255, 255, 255, 0xf9, 0x00, 0x00, 0x00}, // syscall 249   
	{0xf1fa, &op_syscall,	255, 255, 255, 0xfa, 0x00, 0x00, 0x00}, // syscall 250   
	{0xf1fb, &op_syscall,	255, 255, 255, 0xfb, 0x00, 0x00, 0x00}, // syscall 251   
	{0xf1fc, &op_syscall,	255, 255, 255, 0xfc, 0x00, 0x00, 0x00}, // syscall 252   
	{0xf1fd, &op_syscall,	255, 255, 255, 0xfd, 0x00, 0x00, 0x00}, // syscall 253   
	{0xf1fe, &op_syscall,	255, 255, 255, 0xfe, 0x00, 0x00, 0x00}, // syscall 254   
	{0xf1ff, &op_syscall,	255, 255, 255, 0xff, 0x00, 0x00, 0x00}, // syscall 255   
    {0xf401, &op_iret,	255, 255, 255, 0xff, 0x00, 0x00, 0x00}, // iret    
    {0xf410, &op_lmmt,	  0, 255, 255, 0xff, 0x00, 0x00, 0x00}, // lmmt a   
    {0xf411, &op_lmmt,	  1, 255, 255, 0xff, 0x00, 0x00, 0x00}, // lmmt b   
    {0xf412, &op_lmmt,	  2, 255, 255, 0xff, 0x00, 0x00, 0x00}, // lmmt c   
    {0xf413, &op_lmmt,	  3, 255, 255, 0xff, 0x00, 0x00, 0x00}, // lmmt d   
    {0xf414, &op_lmmt,	  4, 255, 255, 0xff, 0x00, 0x00, 0x00}, // lmmt e   
    {0xf415, &op_lmmt,	  5, 255, 255, 0xff, 0x00, 0x00, 0x00}, // lmmt f   
    {0xf416, &op_lmmt,	  6, 255, 255, 0xff, 0x00, 0x00, 0x00}, // lmmt g   
    {0xf417, &op_lmmt,	  7, 255, 255, 0xff, 0x00, 0x00, 0x00}, // lmmt h   
    {0xf418, &op_lmmt,	  8, 255, 255, 0xff, 0x00, 0x00, 0x00}, // lmmt pc   
    {0xf419, &op_lmmt,	  9, 255, 255, 0xff, 0x00, 0x00, 0x00}, // lmmt ra   
    {0xf41a, &op_lmmt,	 10, 255, 255, 0xff, 0x00, 0x00, 0x00}, // lmmt sb   
    {0xf41b, &op_lmmt,	 11, 255, 255, 0xff, 0x00, 0x00, 0x00}, // lmmt sp   
    {0xf41c, &op_lmmt,	 12, 255, 255, 0xff, 0x00, 0x00, 0x00}, // lmmt db   
    {0xf41d, &op_lmmt,	 13, 255, 255, 0xff, 0x00, 0x00, 0x00}, // lmmt cb   
    {0xf41e, &op_lmmt,	 14, 255, 255, 0xff, 0x00, 0x00, 0x00}, // lmmt pi   
    {0xf41f, &op_lmmt,	  8, 255, 255, 0xff, 0x00, 0x04, 0x00}, // lmmt <literal>   
    {0xf400, &op_ret,	255, 255, 255, 0xff, 0x00, 0x00, 0x00}, // ret    
    {0xf800, &op_call,	  0, 255, 255, 0xff, 0x00, 0x00, 0x00}, // call a   
    {0xf801, &op_call,	  1, 255, 255, 0xff, 0x00, 0x00, 0x00}, // call b   
    {0xf802, &op_call,	  2, 255, 255, 0xff, 0x00, 0x00, 0x00}, // call c   
    {0xf803, &op_call,	  3, 255, 255, 0xff, 0x00, 0x00, 0x00}, // call d   
    {0xf804, &op_call,	  4, 255, 255, 0xff, 0x00, 0x00, 0x00}, // call e   
    {0xf805, &op_call,	  5, 255, 255, 0xff, 0x00, 0x00, 0x00}, // call f   
    {0xf806, &op_call,	  6, 255, 255, 0xff, 0x00, 0x00, 0x00}, // call g   
    {0xf807, &op_call,	  7, 255, 255, 0xff, 0x00, 0x00, 0x00}, // call h   
    {0xf808, &op_call,	  8, 255, 255, 0xff, 0x00, 0x00, 0x00}, // call pc   
    {0xf809, &op_call,	  9, 255, 255, 0xff, 0x00, 0x00, 0x00}, // call ra   
    {0xf80a, &op_call,	 10, 255, 255, 0xff, 0x00, 0x00, 0x00}, // call sb   
    {0xf80b, &op_call,	 11, 255, 255, 0xff, 0x00, 0x00, 0x00}, // call sp   
    {0xf80c, &op_call,	 12, 255, 255, 0xff, 0x00, 0x00, 0x00}, // call db   
    {0xf80d, &op_call,	 13, 255, 255, 0xff, 0x00, 0x00, 0x00}, // call cb   
    {0xf80e, &op_call,	 14, 255, 255, 0xff, 0x00, 0x00, 0x00}, // call pi   
    {0xf80f, &op_call,	  8, 255, 255, 0xff, 0x00, 0x04, 0x00}, // call <literal>   
	{0xf900, &op_load_ia,	  0,   0,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia a a <literal> 
	{0xf910, &op_load_ia,	  0,   1,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia a b <literal> 
	{0xf920, &op_load_ia,	  0,   2,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia a c <literal> 
	{0xf930, &op_load_ia,	  0,   3,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia a d <literal> 
	{0xf940, &op_load_ia,	  0,   4,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia a e <literal> 
	{0xf950, &op_load_ia,	  0,   5,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia a f <literal> 
	{0xf960, &op_load_ia,	  0,   6,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia a g <literal> 
	{0xf970, &op_load_ia,	  0,   7,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia a h <literal> 
	{0xf980, &op_load_ia,	  0,   8,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia a pc <literal> 
	{0xf990, &op_load_ia,	  0,   9,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia a ra <literal> 
	{0xf9a0, &op_load_ia,	  0,  10,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia a sb <literal> 
	{0xf9b0, &op_load_ia,	  0,  11,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia a sp <literal> 
	{0xf9c0, &op_load_ia,	  0,  12,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia a db <literal> 
	{0xf9d0, &op_load_ia,	  0,  13,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia a cb <literal> 
	{0xf9e0, &op_load_ia,	  0,  14,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia a pi <literal> 
	{0xf901, &op_load_ia,	  1,   0,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia b a <literal> 
	{0xf911, &op_load_ia,	  1,   1,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia b b <literal> 
	{0xf921, &op_load_ia,	  1,   2,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia b c <literal> 
	{0xf931, &op_load_ia,	  1,   3,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia b d <literal> 
	{0xf941, &op_load_ia,	  1,   4,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia b e <literal> 
	{0xf951, &op_load_ia,	  1,   5,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia b f <literal> 
	{0xf961, &op_load_ia,	  1,   6,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia b g <literal> 
	{0xf971, &op_load_ia,	  1,   7,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia b h <literal> 
	{0xf981, &op_load_ia,	  1,   8,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia b pc <literal> 
	{0xf991, &op_load_ia,	  1,   9,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia b ra <literal> 
	{0xf9a1, &op_load_ia,	  1,  10,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia b sb <literal> 
	{0xf9b1, &op_load_ia,	  1,  11,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia b sp <literal> 
	{0xf9c1, &op_load_ia,	  1,  12,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia b db <literal> 
	{0xf9d1, &op_load_ia,	  1,  13,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia b cb <literal> 
	{0xf9e1, &op_load_ia,	  1,  14,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia b pi <literal> 
	{0xf902, &op_load_ia,	  2,   0,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia c a <literal> 
	{0xf912, &op_load_ia,	  2,   1,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia c b <literal> 
	{0xf922, &op_load_ia,	  2,   2,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia c c <literal> 
	{0xf932, &op_load_ia,	  2,   3,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia c d <literal> 
	{0xf942, &op_load_ia,	  2,   4,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia c e <literal> 
	{0xf952, &op_load_ia,	  2,   5,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia c f <literal> 
	{0xf962, &op_load_ia,	  2,   6,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia c g <literal> 
	{0xf972, &op_load_ia,	  2,   7,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia c h <literal> 
	{0xf982, &op_load_ia,	  2,   8,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia c pc <literal> 
	{0xf992, &op_load_ia,	  2,   9,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia c ra <literal> 
	{0xf9a2, &op_load_ia,	  2,  10,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia c sb <literal> 
	{0xf9b2, &op_load_ia,	  2,  11,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia c sp <literal> 
	{0xf9c2, &op_load_ia,	  2,  12,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia c db <literal> 
	{0xf9d2, &op_load_ia,	  2,  13,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia c cb <literal> 
	{0xf9e2, &op_load_ia,	  2,  14,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia c pi <literal> 
	{0xf903, &op_load_ia,	  3,   0,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia d a <literal> 
	{0xf913, &op_load_ia,	  3,   1,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia d b <literal> 
	{0xf923, &op_load_ia,	  3,   2,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia d c <literal> 
	{0xf933, &op_load_ia,	  3,   3,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia d d <literal> 
	{0xf943, &op_load_ia,	  3,   4,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia d e <literal> 
	{0xf953, &op_load_ia,	  3,   5,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia d f <literal> 
	{0xf963, &op_load_ia,	  3,   6,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia d g <literal> 
	{0xf973, &op_load_ia,	  3,   7,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia d h <literal> 
	{0xf983, &op_load_ia,	  3,   8,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia d pc <literal> 
	{0xf993, &op_load_ia,	  3,   9,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia d ra <literal> 
	{0xf9a3, &op_load_ia,	  3,  10,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia d sb <literal> 
	{0xf9b3, &op_load_ia,	  3,  11,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia d sp <literal> 
	{0xf9c3, &op_load_ia,	  3,  12,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia d db <literal> 
	{0xf9d3, &op_load_ia,	  3,  13,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia d cb <literal> 
	{0xf9e3, &op_load_ia,	  3,  14,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia d pi <literal> 
	{0xf904, &op_load_ia,	  4,   0,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia e a <literal> 
	{0xf914, &op_load_ia,	  4,   1,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia e b <literal> 
	{0xf924, &op_load_ia,	  4,   2,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia e c <literal> 
	{0xf934, &op_load_ia,	  4,   3,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia e d <literal> 
	{0xf944, &op_load_ia,	  4,   4,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia e e <literal> 
	{0xf954, &op_load_ia,	  4,   5,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia e f <literal> 
	{0xf964, &op_load_ia,	  4,   6,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia e g <literal> 
	{0xf974, &op_load_ia,	  4,   7,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia e h <literal> 
	{0xf984, &op_load_ia,	  4,   8,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia e pc <literal> 
	{0xf994, &op_load_ia,	  4,   9,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia e ra <literal> 
	{0xf9a4, &op_load_ia,	  4,  10,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia e sb <literal> 
	{0xf9b4, &op_load_ia,	  4,  11,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia e sp <literal> 
	{0xf9c4, &op_load_ia,	  4,  12,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia e db <literal> 
	{0xf9d4, &op_load_ia,	  4,  13,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia e cb <literal> 
	{0xf9e4, &op_load_ia,	  4,  14,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia e pi <literal> 
	{0xf905, &op_load_ia,	  5,   0,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia f a <literal> 
	{0xf915, &op_load_ia,	  5,   1,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia f b <literal> 
	{0xf925, &op_load_ia,	  5,   2,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia f c <literal> 
	{0xf935, &op_load_ia,	  5,   3,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia f d <literal> 
	{0xf945, &op_load_ia,	  5,   4,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia f e <literal> 
	{0xf955, &op_load_ia,	  5,   5,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia f f <literal> 
	{0xf965, &op_load_ia,	  5,   6,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia f g <literal> 
	{0xf975, &op_load_ia,	  5,   7,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia f h <literal> 
	{0xf985, &op_load_ia,	  5,   8,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia f pc <literal> 
	{0xf995, &op_load_ia,	  5,   9,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia f ra <literal> 
	{0xf9a5, &op_load_ia,	  5,  10,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia f sb <literal> 
	{0xf9b5, &op_load_ia,	  5,  11,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia f sp <literal> 
	{0xf9c5, &op_load_ia,	  5,  12,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia f db <literal> 
	{0xf9d5, &op_load_ia,	  5,  13,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia f cb <literal> 
	{0xf9e5, &op_load_ia,	  5,  14,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia f pi <literal> 
	{0xf906, &op_load_ia,	  6,   0,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia g a <literal> 
	{0xf916, &op_load_ia,	  6,   1,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia g b <literal> 
	{0xf926, &op_load_ia,	  6,   2,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia g c <literal> 
	{0xf936, &op_load_ia,	  6,   3,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia g d <literal> 
	{0xf946, &op_load_ia,	  6,   4,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia g e <literal> 
	{0xf956, &op_load_ia,	  6,   5,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia g f <literal> 
	{0xf966, &op_load_ia,	  6,   6,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia g g <literal> 
	{0xf976, &op_load_ia,	  6,   7,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia g h <literal> 
	{0xf986, &op_load_ia,	  6,   8,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia g pc <literal> 
	{0xf996, &op_load_ia,	  6,   9,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia g ra <literal> 
	{0xf9a6, &op_load_ia,	  6,  10,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia g sb <literal> 
	{0xf9b6, &op_load_ia,	  6,  11,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia g sp <literal> 
	{0xf9c6, &op_load_ia,	  6,  12,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia g db <literal> 
	{0xf9d6, &op_load_ia,	  6,  13,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia g cb <literal> 
	{0xf9e6, &op_load_ia,	  6,  14,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia g pi <literal> 
	{0xf907, &op_load_ia,	  7,   0,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia h a <literal> 
	{0xf917, &op_load_ia,	  7,   1,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia h b <literal> 
	{0xf927, &op_load_ia,	  7,   2,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia h c <literal> 
	{0xf937, &op_load_ia,	  7,   3,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia h d <literal> 
	{0xf947, &op_load_ia,	  7,   4,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia h e <literal> 
	{0xf957, &op_load_ia,	  7,   5,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia h f <literal> 
	{0xf967, &op_load_ia,	  7,   6,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia h g <literal> 
	{0xf977, &op_load_ia,	  7,   7,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia h h <literal> 
	{0xf987, &op_load_ia,	  7,   8,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia h pc <literal> 
	{0xf997, &op_load_ia,	  7,   9,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia h ra <literal> 
	{0xf9a7, &op_load_ia,	  7,  10,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia h sb <literal> 
	{0xf9b7, &op_load_ia,	  7,  11,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia h sp <literal> 
	{0xf9c7, &op_load_ia,	  7,  12,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia h db <literal> 
	{0xf9d7, &op_load_ia,	  7,  13,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia h cb <literal> 
	{0xf9e7, &op_load_ia,	  7,  14,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia h pi <literal> 
	{0xf908, &op_load_ia,	  8,   0,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia pc a <literal> 
	{0xf918, &op_load_ia,	  8,   1,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia pc b <literal> 
	{0xf928, &op_load_ia,	  8,   2,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia pc c <literal> 
	{0xf938, &op_load_ia,	  8,   3,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia pc d <literal> 
	{0xf948, &op_load_ia,	  8,   4,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia pc e <literal> 
	{0xf958, &op_load_ia,	  8,   5,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia pc f <literal> 
	{0xf968, &op_load_ia,	  8,   6,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia pc g <literal> 
	{0xf978, &op_load_ia,	  8,   7,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia pc h <literal> 
	{0xf988, &op_load_ia,	  8,   8,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia pc pc <literal> 
	{0xf998, &op_load_ia,	  8,   9,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia pc ra <literal> 
	{0xf9a8, &op_load_ia,	  8,  10,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia pc sb <literal> 
	{0xf9b8, &op_load_ia,	  8,  11,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia pc sp <literal> 
	{0xf9c8, &op_load_ia,	  8,  12,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia pc db <literal> 
	{0xf9d8, &op_load_ia,	  8,  13,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia pc cb <literal> 
	{0xf9e8, &op_load_ia,	  8,  14,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia pc pi <literal> 
	{0xf909, &op_load_ia,	  9,   0,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia ra a <literal> 
	{0xf919, &op_load_ia,	  9,   1,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia ra b <literal> 
	{0xf929, &op_load_ia,	  9,   2,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia ra c <literal> 
	{0xf939, &op_load_ia,	  9,   3,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia ra d <literal> 
	{0xf949, &op_load_ia,	  9,   4,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia ra e <literal> 
	{0xf959, &op_load_ia,	  9,   5,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia ra f <literal> 
	{0xf969, &op_load_ia,	  9,   6,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia ra g <literal> 
	{0xf979, &op_load_ia,	  9,   7,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia ra h <literal> 
	{0xf989, &op_load_ia,	  9,   8,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia ra pc <literal> 
	{0xf999, &op_load_ia,	  9,   9,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia ra ra <literal> 
	{0xf9a9, &op_load_ia,	  9,  10,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia ra sb <literal> 
	{0xf9b9, &op_load_ia,	  9,  11,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia ra sp <literal> 
	{0xf9c9, &op_load_ia,	  9,  12,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia ra db <literal> 
	{0xf9d9, &op_load_ia,	  9,  13,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia ra cb <literal> 
	{0xf9e9, &op_load_ia,	  9,  14,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia ra pi <literal> 
	{0xf90a, &op_load_ia,	 10,   0,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia sb a <literal> 
	{0xf91a, &op_load_ia,	 10,   1,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia sb b <literal> 
	{0xf92a, &op_load_ia,	 10,   2,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia sb c <literal> 
	{0xf93a, &op_load_ia,	 10,   3,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia sb d <literal> 
	{0xf94a, &op_load_ia,	 10,   4,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia sb e <literal> 
	{0xf95a, &op_load_ia,	 10,   5,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia sb f <literal> 
	{0xf96a, &op_load_ia,	 10,   6,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia sb g <literal> 
	{0xf97a, &op_load_ia,	 10,   7,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia sb h <literal> 
	{0xf98a, &op_load_ia,	 10,   8,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia sb pc <literal> 
	{0xf99a, &op_load_ia,	 10,   9,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia sb ra <literal> 
	{0xf9aa, &op_load_ia,	 10,  10,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia sb sb <literal> 
	{0xf9ba, &op_load_ia,	 10,  11,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia sb sp <literal> 
	{0xf9ca, &op_load_ia,	 10,  12,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia sb db <literal> 
	{0xf9da, &op_load_ia,	 10,  13,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia sb cb <literal> 
	{0xf9ea, &op_load_ia,	 10,  14,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia sb pi <literal> 
	{0xf90b, &op_load_ia,	 11,   0,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia sp a <literal> 
	{0xf91b, &op_load_ia,	 11,   1,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia sp b <literal> 
	{0xf92b, &op_load_ia,	 11,   2,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia sp c <literal> 
	{0xf93b, &op_load_ia,	 11,   3,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia sp d <literal> 
	{0xf94b, &op_load_ia,	 11,   4,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia sp e <literal> 
	{0xf95b, &op_load_ia,	 11,   5,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia sp f <literal> 
	{0xf96b, &op_load_ia,	 11,   6,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia sp g <literal> 
	{0xf97b, &op_load_ia,	 11,   7,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia sp h <literal> 
	{0xf98b, &op_load_ia,	 11,   8,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia sp pc <literal> 
	{0xf99b, &op_load_ia,	 11,   9,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia sp ra <literal> 
	{0xf9ab, &op_load_ia,	 11,  10,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia sp sb <literal> 
	{0xf9bb, &op_load_ia,	 11,  11,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia sp sp <literal> 
	{0xf9cb, &op_load_ia,	 11,  12,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia sp db <literal> 
	{0xf9db, &op_load_ia,	 11,  13,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia sp cb <literal> 
	{0xf9eb, &op_load_ia,	 11,  14,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia sp pi <literal> 
	{0xf90c, &op_load_ia,	 12,   0,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia db a <literal> 
	{0xf91c, &op_load_ia,	 12,   1,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia db b <literal> 
	{0xf92c, &op_load_ia,	 12,   2,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia db c <literal> 
	{0xf93c, &op_load_ia,	 12,   3,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia db d <literal> 
	{0xf94c, &op_load_ia,	 12,   4,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia db e <literal> 
	{0xf95c, &op_load_ia,	 12,   5,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia db f <literal> 
	{0xf96c, &op_load_ia,	 12,   6,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia db g <literal> 
	{0xf97c, &op_load_ia,	 12,   7,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia db h <literal> 
	{0xf98c, &op_load_ia,	 12,   8,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia db pc <literal> 
	{0xf99c, &op_load_ia,	 12,   9,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia db ra <literal> 
	{0xf9ac, &op_load_ia,	 12,  10,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia db sb <literal> 
	{0xf9bc, &op_load_ia,	 12,  11,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia db sp <literal> 
	{0xf9cc, &op_load_ia,	 12,  12,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia db db <literal> 
	{0xf9dc, &op_load_ia,	 12,  13,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia db cb <literal> 
	{0xf9ec, &op_load_ia,	 12,  14,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia db pi <literal> 
	{0xf90d, &op_load_ia,	 13,   0,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia cb a <literal> 
	{0xf91d, &op_load_ia,	 13,   1,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia cb b <literal> 
	{0xf92d, &op_load_ia,	 13,   2,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia cb c <literal> 
	{0xf93d, &op_load_ia,	 13,   3,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia cb d <literal> 
	{0xf94d, &op_load_ia,	 13,   4,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia cb e <literal> 
	{0xf95d, &op_load_ia,	 13,   5,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia cb f <literal> 
	{0xf96d, &op_load_ia,	 13,   6,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia cb g <literal> 
	{0xf97d, &op_load_ia,	 13,   7,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia cb h <literal> 
	{0xf98d, &op_load_ia,	 13,   8,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia cb pc <literal> 
	{0xf99d, &op_load_ia,	 13,   9,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia cb ra <literal> 
	{0xf9ad, &op_load_ia,	 13,  10,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia cb sb <literal> 
	{0xf9bd, &op_load_ia,	 13,  11,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia cb sp <literal> 
	{0xf9cd, &op_load_ia,	 13,  12,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia cb db <literal> 
	{0xf9dd, &op_load_ia,	 13,  13,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia cb cb <literal> 
	{0xf9ed, &op_load_ia,	 13,  14,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia cb pi <literal> 
	{0xf90e, &op_load_ia,	 14,   0,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia pi a <literal> 
	{0xf91e, &op_load_ia,	 14,   1,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia pi b <literal> 
	{0xf92e, &op_load_ia,	 14,   2,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia pi c <literal> 
	{0xf93e, &op_load_ia,	 14,   3,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia pi d <literal> 
	{0xf94e, &op_load_ia,	 14,   4,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia pi e <literal> 
	{0xf95e, &op_load_ia,	 14,   5,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia pi f <literal> 
	{0xf96e, &op_load_ia,	 14,   6,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia pi g <literal> 
	{0xf97e, &op_load_ia,	 14,   7,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia pi h <literal> 
	{0xf98e, &op_load_ia,	 14,   8,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia pi pc <literal> 
	{0xf99e, &op_load_ia,	 14,   9,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia pi ra <literal> 
	{0xf9ae, &op_load_ia,	 14,  10,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia pi sb <literal> 
	{0xf9be, &op_load_ia,	 14,  11,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia pi sp <literal> 
	{0xf9ce, &op_load_ia,	 14,  12,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia pi db <literal> 
	{0xf9de, &op_load_ia,	 14,  13,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia pi cb <literal> 
	{0xf9ee, &op_load_ia,	 14,  14,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia pi pi <literal> 
	{0xf90f, &op_load_ia,	 15,   0,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia status a <literal> 
	{0xf91f, &op_load_ia,	 15,   1,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia status b <literal> 
	{0xf92f, &op_load_ia,	 15,   2,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia status c <literal> 
	{0xf93f, &op_load_ia,	 15,   3,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia status d <literal> 
	{0xf94f, &op_load_ia,	 15,   4,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia status e <literal> 
	{0xf95f, &op_load_ia,	 15,   5,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia status f <literal> 
	{0xf96f, &op_load_ia,	 15,   6,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia status g <literal> 
	{0xf97f, &op_load_ia,	 15,   7,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia status h <literal> 
	{0xf98f, &op_load_ia,	 15,   8,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia status pc <literal> 
	{0xf99f, &op_load_ia,	 15,   9,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia status ra <literal> 
	{0xf9af, &op_load_ia,	 15,  10,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia status sb <literal> 
	{0xf9bf, &op_load_ia,	 15,  11,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia status sp <literal> 
	{0xf9cf, &op_load_ia,	 15,  12,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia status db <literal> 
	{0xf9df, &op_load_ia,	 15,  13,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia status cb <literal> 
	{0xf9ef, &op_load_ia,	 15,  14,   8, 0xff, 0x00, 0x04, 0x01}, // load.wia status pi <literal> 
	{0xfa00, &op_load_ia,	  0,   0,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia a a <literal> 
	{0xfa10, &op_load_ia,	  0,   1,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia a b <literal> 
	{0xfa20, &op_load_ia,	  0,   2,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia a c <literal> 
	{0xfa30, &op_load_ia,	  0,   3,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia a d <literal> 
	{0xfa40, &op_load_ia,	  0,   4,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia a e <literal> 
	{0xfa50, &op_load_ia,	  0,   5,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia a f <literal> 
	{0xfa60, &op_load_ia,	  0,   6,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia a g <literal> 
	{0xfa70, &op_load_ia,	  0,   7,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia a h <literal> 
	{0xfa80, &op_load_ia,	  0,   8,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia a pc <literal> 
	{0xfa90, &op_load_ia,	  0,   9,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia a ra <literal> 
	{0xfaa0, &op_load_ia,	  0,  10,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia a sb <literal> 
	{0xfab0, &op_load_ia,	  0,  11,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia a sp <literal> 
	{0xfac0, &op_load_ia,	  0,  12,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia a db <literal> 
	{0xfad0, &op_load_ia,	  0,  13,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia a cb <literal> 
	{0xfae0, &op_load_ia,	  0,  14,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia a pi <literal> 
	{0xfa01, &op_load_ia,	  1,   0,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia b a <literal> 
	{0xfa11, &op_load_ia,	  1,   1,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia b b <literal> 
	{0xfa21, &op_load_ia,	  1,   2,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia b c <literal> 
	{0xfa31, &op_load_ia,	  1,   3,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia b d <literal> 
	{0xfa41, &op_load_ia,	  1,   4,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia b e <literal> 
	{0xfa51, &op_load_ia,	  1,   5,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia b f <literal> 
	{0xfa61, &op_load_ia,	  1,   6,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia b g <literal> 
	{0xfa71, &op_load_ia,	  1,   7,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia b h <literal> 
	{0xfa81, &op_load_ia,	  1,   8,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia b pc <literal> 
	{0xfa91, &op_load_ia,	  1,   9,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia b ra <literal> 
	{0xfaa1, &op_load_ia,	  1,  10,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia b sb <literal> 
	{0xfab1, &op_load_ia,	  1,  11,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia b sp <literal> 
	{0xfac1, &op_load_ia,	  1,  12,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia b db <literal> 
	{0xfad1, &op_load_ia,	  1,  13,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia b cb <literal> 
	{0xfae1, &op_load_ia,	  1,  14,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia b pi <literal> 
	{0xfa02, &op_load_ia,	  2,   0,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia c a <literal> 
	{0xfa12, &op_load_ia,	  2,   1,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia c b <literal> 
	{0xfa22, &op_load_ia,	  2,   2,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia c c <literal> 
	{0xfa32, &op_load_ia,	  2,   3,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia c d <literal> 
	{0xfa42, &op_load_ia,	  2,   4,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia c e <literal> 
	{0xfa52, &op_load_ia,	  2,   5,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia c f <literal> 
	{0xfa62, &op_load_ia,	  2,   6,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia c g <literal> 
	{0xfa72, &op_load_ia,	  2,   7,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia c h <literal> 
	{0xfa82, &op_load_ia,	  2,   8,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia c pc <literal> 
	{0xfa92, &op_load_ia,	  2,   9,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia c ra <literal> 
	{0xfaa2, &op_load_ia,	  2,  10,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia c sb <literal> 
	{0xfab2, &op_load_ia,	  2,  11,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia c sp <literal> 
	{0xfac2, &op_load_ia,	  2,  12,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia c db <literal> 
	{0xfad2, &op_load_ia,	  2,  13,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia c cb <literal> 
	{0xfae2, &op_load_ia,	  2,  14,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia c pi <literal> 
	{0xfa03, &op_load_ia,	  3,   0,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia d a <literal> 
	{0xfa13, &op_load_ia,	  3,   1,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia d b <literal> 
	{0xfa23, &op_load_ia,	  3,   2,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia d c <literal> 
	{0xfa33, &op_load_ia,	  3,   3,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia d d <literal> 
	{0xfa43, &op_load_ia,	  3,   4,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia d e <literal> 
	{0xfa53, &op_load_ia,	  3,   5,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia d f <literal> 
	{0xfa63, &op_load_ia,	  3,   6,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia d g <literal> 
	{0xfa73, &op_load_ia,	  3,   7,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia d h <literal> 
	{0xfa83, &op_load_ia,	  3,   8,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia d pc <literal> 
	{0xfa93, &op_load_ia,	  3,   9,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia d ra <literal> 
	{0xfaa3, &op_load_ia,	  3,  10,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia d sb <literal> 
	{0xfab3, &op_load_ia,	  3,  11,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia d sp <literal> 
	{0xfac3, &op_load_ia,	  3,  12,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia d db <literal> 
	{0xfad3, &op_load_ia,	  3,  13,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia d cb <literal> 
	{0xfae3, &op_load_ia,	  3,  14,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia d pi <literal> 
	{0xfa04, &op_load_ia,	  4,   0,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia e a <literal> 
	{0xfa14, &op_load_ia,	  4,   1,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia e b <literal> 
	{0xfa24, &op_load_ia,	  4,   2,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia e c <literal> 
	{0xfa34, &op_load_ia,	  4,   3,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia e d <literal> 
	{0xfa44, &op_load_ia,	  4,   4,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia e e <literal> 
	{0xfa54, &op_load_ia,	  4,   5,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia e f <literal> 
	{0xfa64, &op_load_ia,	  4,   6,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia e g <literal> 
	{0xfa74, &op_load_ia,	  4,   7,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia e h <literal> 
	{0xfa84, &op_load_ia,	  4,   8,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia e pc <literal> 
	{0xfa94, &op_load_ia,	  4,   9,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia e ra <literal> 
	{0xfaa4, &op_load_ia,	  4,  10,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia e sb <literal> 
	{0xfab4, &op_load_ia,	  4,  11,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia e sp <literal> 
	{0xfac4, &op_load_ia,	  4,  12,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia e db <literal> 
	{0xfad4, &op_load_ia,	  4,  13,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia e cb <literal> 
	{0xfae4, &op_load_ia,	  4,  14,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia e pi <literal> 
	{0xfa05, &op_load_ia,	  5,   0,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia f a <literal> 
	{0xfa15, &op_load_ia,	  5,   1,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia f b <literal> 
	{0xfa25, &op_load_ia,	  5,   2,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia f c <literal> 
	{0xfa35, &op_load_ia,	  5,   3,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia f d <literal> 
	{0xfa45, &op_load_ia,	  5,   4,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia f e <literal> 
	{0xfa55, &op_load_ia,	  5,   5,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia f f <literal> 
	{0xfa65, &op_load_ia,	  5,   6,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia f g <literal> 
	{0xfa75, &op_load_ia,	  5,   7,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia f h <literal> 
	{0xfa85, &op_load_ia,	  5,   8,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia f pc <literal> 
	{0xfa95, &op_load_ia,	  5,   9,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia f ra <literal> 
	{0xfaa5, &op_load_ia,	  5,  10,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia f sb <literal> 
	{0xfab5, &op_load_ia,	  5,  11,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia f sp <literal> 
	{0xfac5, &op_load_ia,	  5,  12,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia f db <literal> 
	{0xfad5, &op_load_ia,	  5,  13,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia f cb <literal> 
	{0xfae5, &op_load_ia,	  5,  14,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia f pi <literal> 
	{0xfa06, &op_load_ia,	  6,   0,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia g a <literal> 
	{0xfa16, &op_load_ia,	  6,   1,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia g b <literal> 
	{0xfa26, &op_load_ia,	  6,   2,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia g c <literal> 
	{0xfa36, &op_load_ia,	  6,   3,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia g d <literal> 
	{0xfa46, &op_load_ia,	  6,   4,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia g e <literal> 
	{0xfa56, &op_load_ia,	  6,   5,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia g f <literal> 
	{0xfa66, &op_load_ia,	  6,   6,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia g g <literal> 
	{0xfa76, &op_load_ia,	  6,   7,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia g h <literal> 
	{0xfa86, &op_load_ia,	  6,   8,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia g pc <literal> 
	{0xfa96, &op_load_ia,	  6,   9,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia g ra <literal> 
	{0xfaa6, &op_load_ia,	  6,  10,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia g sb <literal> 
	{0xfab6, &op_load_ia,	  6,  11,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia g sp <literal> 
	{0xfac6, &op_load_ia,	  6,  12,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia g db <literal> 
	{0xfad6, &op_load_ia,	  6,  13,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia g cb <literal> 
	{0xfae6, &op_load_ia,	  6,  14,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia g pi <literal> 
	{0xfa07, &op_load_ia,	  7,   0,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia h a <literal> 
	{0xfa17, &op_load_ia,	  7,   1,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia h b <literal> 
	{0xfa27, &op_load_ia,	  7,   2,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia h c <literal> 
	{0xfa37, &op_load_ia,	  7,   3,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia h d <literal> 
	{0xfa47, &op_load_ia,	  7,   4,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia h e <literal> 
	{0xfa57, &op_load_ia,	  7,   5,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia h f <literal> 
	{0xfa67, &op_load_ia,	  7,   6,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia h g <literal> 
	{0xfa77, &op_load_ia,	  7,   7,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia h h <literal> 
	{0xfa87, &op_load_ia,	  7,   8,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia h pc <literal> 
	{0xfa97, &op_load_ia,	  7,   9,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia h ra <literal> 
	{0xfaa7, &op_load_ia,	  7,  10,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia h sb <literal> 
	{0xfab7, &op_load_ia,	  7,  11,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia h sp <literal> 
	{0xfac7, &op_load_ia,	  7,  12,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia h db <literal> 
	{0xfad7, &op_load_ia,	  7,  13,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia h cb <literal> 
	{0xfae7, &op_load_ia,	  7,  14,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia h pi <literal> 
	{0xfa08, &op_load_ia,	  8,   0,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia pc a <literal> 
	{0xfa18, &op_load_ia,	  8,   1,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia pc b <literal> 
	{0xfa28, &op_load_ia,	  8,   2,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia pc c <literal> 
	{0xfa38, &op_load_ia,	  8,   3,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia pc d <literal> 
	{0xfa48, &op_load_ia,	  8,   4,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia pc e <literal> 
	{0xfa58, &op_load_ia,	  8,   5,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia pc f <literal> 
	{0xfa68, &op_load_ia,	  8,   6,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia pc g <literal> 
	{0xfa78, &op_load_ia,	  8,   7,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia pc h <literal> 
	{0xfa88, &op_load_ia,	  8,   8,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia pc pc <literal> 
	{0xfa98, &op_load_ia,	  8,   9,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia pc ra <literal> 
	{0xfaa8, &op_load_ia,	  8,  10,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia pc sb <literal> 
	{0xfab8, &op_load_ia,	  8,  11,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia pc sp <literal> 
	{0xfac8, &op_load_ia,	  8,  12,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia pc db <literal> 
	{0xfad8, &op_load_ia,	  8,  13,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia pc cb <literal> 
	{0xfae8, &op_load_ia,	  8,  14,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia pc pi <literal> 
	{0xfa09, &op_load_ia,	  9,   0,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia ra a <literal> 
	{0xfa19, &op_load_ia,	  9,   1,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia ra b <literal> 
	{0xfa29, &op_load_ia,	  9,   2,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia ra c <literal> 
	{0xfa39, &op_load_ia,	  9,   3,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia ra d <literal> 
	{0xfa49, &op_load_ia,	  9,   4,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia ra e <literal> 
	{0xfa59, &op_load_ia,	  9,   5,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia ra f <literal> 
	{0xfa69, &op_load_ia,	  9,   6,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia ra g <literal> 
	{0xfa79, &op_load_ia,	  9,   7,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia ra h <literal> 
	{0xfa89, &op_load_ia,	  9,   8,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia ra pc <literal> 
	{0xfa99, &op_load_ia,	  9,   9,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia ra ra <literal> 
	{0xfaa9, &op_load_ia,	  9,  10,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia ra sb <literal> 
	{0xfab9, &op_load_ia,	  9,  11,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia ra sp <literal> 
	{0xfac9, &op_load_ia,	  9,  12,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia ra db <literal> 
	{0xfad9, &op_load_ia,	  9,  13,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia ra cb <literal> 
	{0xfae9, &op_load_ia,	  9,  14,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia ra pi <literal> 
	{0xfa0a, &op_load_ia,	 10,   0,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia sb a <literal> 
	{0xfa1a, &op_load_ia,	 10,   1,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia sb b <literal> 
	{0xfa2a, &op_load_ia,	 10,   2,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia sb c <literal> 
	{0xfa3a, &op_load_ia,	 10,   3,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia sb d <literal> 
	{0xfa4a, &op_load_ia,	 10,   4,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia sb e <literal> 
	{0xfa5a, &op_load_ia,	 10,   5,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia sb f <literal> 
	{0xfa6a, &op_load_ia,	 10,   6,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia sb g <literal> 
	{0xfa7a, &op_load_ia,	 10,   7,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia sb h <literal> 
	{0xfa8a, &op_load_ia,	 10,   8,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia sb pc <literal> 
	{0xfa9a, &op_load_ia,	 10,   9,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia sb ra <literal> 
	{0xfaaa, &op_load_ia,	 10,  10,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia sb sb <literal> 
	{0xfaba, &op_load_ia,	 10,  11,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia sb sp <literal> 
	{0xfaca, &op_load_ia,	 10,  12,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia sb db <literal> 
	{0xfada, &op_load_ia,	 10,  13,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia sb cb <literal> 
	{0xfaea, &op_load_ia,	 10,  14,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia sb pi <literal> 
	{0xfa0b, &op_load_ia,	 11,   0,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia sp a <literal> 
	{0xfa1b, &op_load_ia,	 11,   1,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia sp b <literal> 
	{0xfa2b, &op_load_ia,	 11,   2,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia sp c <literal> 
	{0xfa3b, &op_load_ia,	 11,   3,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia sp d <literal> 
	{0xfa4b, &op_load_ia,	 11,   4,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia sp e <literal> 
	{0xfa5b, &op_load_ia,	 11,   5,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia sp f <literal> 
	{0xfa6b, &op_load_ia,	 11,   6,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia sp g <literal> 
	{0xfa7b, &op_load_ia,	 11,   7,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia sp h <literal> 
	{0xfa8b, &op_load_ia,	 11,   8,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia sp pc <literal> 
	{0xfa9b, &op_load_ia,	 11,   9,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia sp ra <literal> 
	{0xfaab, &op_load_ia,	 11,  10,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia sp sb <literal> 
	{0xfabb, &op_load_ia,	 11,  11,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia sp sp <literal> 
	{0xfacb, &op_load_ia,	 11,  12,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia sp db <literal> 
	{0xfadb, &op_load_ia,	 11,  13,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia sp cb <literal> 
	{0xfaeb, &op_load_ia,	 11,  14,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia sp pi <literal> 
	{0xfa0c, &op_load_ia,	 12,   0,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia db a <literal> 
	{0xfa1c, &op_load_ia,	 12,   1,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia db b <literal> 
	{0xfa2c, &op_load_ia,	 12,   2,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia db c <literal> 
	{0xfa3c, &op_load_ia,	 12,   3,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia db d <literal> 
	{0xfa4c, &op_load_ia,	 12,   4,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia db e <literal> 
	{0xfa5c, &op_load_ia,	 12,   5,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia db f <literal> 
	{0xfa6c, &op_load_ia,	 12,   6,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia db g <literal> 
	{0xfa7c, &op_load_ia,	 12,   7,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia db h <literal> 
	{0xfa8c, &op_load_ia,	 12,   8,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia db pc <literal> 
	{0xfa9c, &op_load_ia,	 12,   9,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia db ra <literal> 
	{0xfaac, &op_load_ia,	 12,  10,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia db sb <literal> 
	{0xfabc, &op_load_ia,	 12,  11,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia db sp <literal> 
	{0xfacc, &op_load_ia,	 12,  12,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia db db <literal> 
	{0xfadc, &op_load_ia,	 12,  13,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia db cb <literal> 
	{0xfaec, &op_load_ia,	 12,  14,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia db pi <literal> 
	{0xfa0d, &op_load_ia,	 13,   0,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia cb a <literal> 
	{0xfa1d, &op_load_ia,	 13,   1,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia cb b <literal> 
	{0xfa2d, &op_load_ia,	 13,   2,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia cb c <literal> 
	{0xfa3d, &op_load_ia,	 13,   3,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia cb d <literal> 
	{0xfa4d, &op_load_ia,	 13,   4,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia cb e <literal> 
	{0xfa5d, &op_load_ia,	 13,   5,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia cb f <literal> 
	{0xfa6d, &op_load_ia,	 13,   6,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia cb g <literal> 
	{0xfa7d, &op_load_ia,	 13,   7,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia cb h <literal> 
	{0xfa8d, &op_load_ia,	 13,   8,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia cb pc <literal> 
	{0xfa9d, &op_load_ia,	 13,   9,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia cb ra <literal> 
	{0xfaad, &op_load_ia,	 13,  10,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia cb sb <literal> 
	{0xfabd, &op_load_ia,	 13,  11,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia cb sp <literal> 
	{0xfacd, &op_load_ia,	 13,  12,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia cb db <literal> 
	{0xfadd, &op_load_ia,	 13,  13,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia cb cb <literal> 
	{0xfaed, &op_load_ia,	 13,  14,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia cb pi <literal> 
	{0xfa0e, &op_load_ia,	 14,   0,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia pi a <literal> 
	{0xfa1e, &op_load_ia,	 14,   1,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia pi b <literal> 
	{0xfa2e, &op_load_ia,	 14,   2,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia pi c <literal> 
	{0xfa3e, &op_load_ia,	 14,   3,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia pi d <literal> 
	{0xfa4e, &op_load_ia,	 14,   4,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia pi e <literal> 
	{0xfa5e, &op_load_ia,	 14,   5,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia pi f <literal> 
	{0xfa6e, &op_load_ia,	 14,   6,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia pi g <literal> 
	{0xfa7e, &op_load_ia,	 14,   7,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia pi h <literal> 
	{0xfa8e, &op_load_ia,	 14,   8,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia pi pc <literal> 
	{0xfa9e, &op_load_ia,	 14,   9,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia pi ra <literal> 
	{0xfaae, &op_load_ia,	 14,  10,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia pi sb <literal> 
	{0xfabe, &op_load_ia,	 14,  11,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia pi sp <literal> 
	{0xface, &op_load_ia,	 14,  12,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia pi db <literal> 
	{0xfade, &op_load_ia,	 14,  13,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia pi cb <literal> 
	{0xfaee, &op_load_ia,	 14,  14,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia pi pi <literal> 
	{0xfa0f, &op_load_ia,	 15,   0,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia status a <literal> 
	{0xfa1f, &op_load_ia,	 15,   1,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia status b <literal> 
	{0xfa2f, &op_load_ia,	 15,   2,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia status c <literal> 
	{0xfa3f, &op_load_ia,	 15,   3,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia status d <literal> 
	{0xfa4f, &op_load_ia,	 15,   4,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia status e <literal> 
	{0xfa5f, &op_load_ia,	 15,   5,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia status f <literal> 
	{0xfa6f, &op_load_ia,	 15,   6,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia status g <literal> 
	{0xfa7f, &op_load_ia,	 15,   7,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia status h <literal> 
	{0xfa8f, &op_load_ia,	 15,   8,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia status pc <literal> 
	{0xfa9f, &op_load_ia,	 15,   9,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia status ra <literal> 
	{0xfaaf, &op_load_ia,	 15,  10,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia status sb <literal> 
	{0xfabf, &op_load_ia,	 15,  11,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia status sp <literal> 
	{0xfacf, &op_load_ia,	 15,  12,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia status db <literal> 
	{0xfadf, &op_load_ia,	 15,  13,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia status cb <literal> 
	{0xfaef, &op_load_ia,	 15,  14,   8, 0xff, 0x00, 0x04, 0x02}, // load.dia status pi <literal> 
	{0xfb00, &op_load_ia,	  0,   0,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia a a <literal> 
	{0xfb10, &op_load_ia,	  0,   1,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia a b <literal> 
	{0xfb20, &op_load_ia,	  0,   2,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia a c <literal> 
	{0xfb30, &op_load_ia,	  0,   3,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia a d <literal> 
	{0xfb40, &op_load_ia,	  0,   4,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia a e <literal> 
	{0xfb50, &op_load_ia,	  0,   5,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia a f <literal> 
	{0xfb60, &op_load_ia,	  0,   6,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia a g <literal> 
	{0xfb70, &op_load_ia,	  0,   7,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia a h <literal> 
	{0xfb80, &op_load_ia,	  0,   8,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia a pc <literal> 
	{0xfb90, &op_load_ia,	  0,   9,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia a ra <literal> 
	{0xfba0, &op_load_ia,	  0,  10,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia a sb <literal> 
	{0xfbb0, &op_load_ia,	  0,  11,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia a sp <literal> 
	{0xfbc0, &op_load_ia,	  0,  12,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia a db <literal> 
	{0xfbd0, &op_load_ia,	  0,  13,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia a cb <literal> 
	{0xfbe0, &op_load_ia,	  0,  14,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia a pi <literal> 
	{0xfb01, &op_load_ia,	  1,   0,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia b a <literal> 
	{0xfb11, &op_load_ia,	  1,   1,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia b b <literal> 
	{0xfb21, &op_load_ia,	  1,   2,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia b c <literal> 
	{0xfb31, &op_load_ia,	  1,   3,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia b d <literal> 
	{0xfb41, &op_load_ia,	  1,   4,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia b e <literal> 
	{0xfb51, &op_load_ia,	  1,   5,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia b f <literal> 
	{0xfb61, &op_load_ia,	  1,   6,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia b g <literal> 
	{0xfb71, &op_load_ia,	  1,   7,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia b h <literal> 
	{0xfb81, &op_load_ia,	  1,   8,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia b pc <literal> 
	{0xfb91, &op_load_ia,	  1,   9,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia b ra <literal> 
	{0xfba1, &op_load_ia,	  1,  10,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia b sb <literal> 
	{0xfbb1, &op_load_ia,	  1,  11,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia b sp <literal> 
	{0xfbc1, &op_load_ia,	  1,  12,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia b db <literal> 
	{0xfbd1, &op_load_ia,	  1,  13,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia b cb <literal> 
	{0xfbe1, &op_load_ia,	  1,  14,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia b pi <literal> 
	{0xfb02, &op_load_ia,	  2,   0,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia c a <literal> 
	{0xfb12, &op_load_ia,	  2,   1,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia c b <literal> 
	{0xfb22, &op_load_ia,	  2,   2,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia c c <literal> 
	{0xfb32, &op_load_ia,	  2,   3,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia c d <literal> 
	{0xfb42, &op_load_ia,	  2,   4,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia c e <literal> 
	{0xfb52, &op_load_ia,	  2,   5,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia c f <literal> 
	{0xfb62, &op_load_ia,	  2,   6,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia c g <literal> 
	{0xfb72, &op_load_ia,	  2,   7,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia c h <literal> 
	{0xfb82, &op_load_ia,	  2,   8,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia c pc <literal> 
	{0xfb92, &op_load_ia,	  2,   9,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia c ra <literal> 
	{0xfba2, &op_load_ia,	  2,  10,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia c sb <literal> 
	{0xfbb2, &op_load_ia,	  2,  11,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia c sp <literal> 
	{0xfbc2, &op_load_ia,	  2,  12,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia c db <literal> 
	{0xfbd2, &op_load_ia,	  2,  13,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia c cb <literal> 
	{0xfbe2, &op_load_ia,	  2,  14,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia c pi <literal> 
	{0xfb03, &op_load_ia,	  3,   0,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia d a <literal> 
	{0xfb13, &op_load_ia,	  3,   1,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia d b <literal> 
	{0xfb23, &op_load_ia,	  3,   2,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia d c <literal> 
	{0xfb33, &op_load_ia,	  3,   3,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia d d <literal> 
	{0xfb43, &op_load_ia,	  3,   4,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia d e <literal> 
	{0xfb53, &op_load_ia,	  3,   5,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia d f <literal> 
	{0xfb63, &op_load_ia,	  3,   6,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia d g <literal> 
	{0xfb73, &op_load_ia,	  3,   7,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia d h <literal> 
	{0xfb83, &op_load_ia,	  3,   8,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia d pc <literal> 
	{0xfb93, &op_load_ia,	  3,   9,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia d ra <literal> 
	{0xfba3, &op_load_ia,	  3,  10,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia d sb <literal> 
	{0xfbb3, &op_load_ia,	  3,  11,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia d sp <literal> 
	{0xfbc3, &op_load_ia,	  3,  12,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia d db <literal> 
	{0xfbd3, &op_load_ia,	  3,  13,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia d cb <literal> 
	{0xfbe3, &op_load_ia,	  3,  14,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia d pi <literal> 
	{0xfb04, &op_load_ia,	  4,   0,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia e a <literal> 
	{0xfb14, &op_load_ia,	  4,   1,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia e b <literal> 
	{0xfb24, &op_load_ia,	  4,   2,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia e c <literal> 
	{0xfb34, &op_load_ia,	  4,   3,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia e d <literal> 
	{0xfb44, &op_load_ia,	  4,   4,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia e e <literal> 
	{0xfb54, &op_load_ia,	  4,   5,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia e f <literal> 
	{0xfb64, &op_load_ia,	  4,   6,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia e g <literal> 
	{0xfb74, &op_load_ia,	  4,   7,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia e h <literal> 
	{0xfb84, &op_load_ia,	  4,   8,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia e pc <literal> 
	{0xfb94, &op_load_ia,	  4,   9,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia e ra <literal> 
	{0xfba4, &op_load_ia,	  4,  10,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia e sb <literal> 
	{0xfbb4, &op_load_ia,	  4,  11,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia e sp <literal> 
	{0xfbc4, &op_load_ia,	  4,  12,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia e db <literal> 
	{0xfbd4, &op_load_ia,	  4,  13,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia e cb <literal> 
	{0xfbe4, &op_load_ia,	  4,  14,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia e pi <literal> 
	{0xfb05, &op_load_ia,	  5,   0,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia f a <literal> 
	{0xfb15, &op_load_ia,	  5,   1,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia f b <literal> 
	{0xfb25, &op_load_ia,	  5,   2,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia f c <literal> 
	{0xfb35, &op_load_ia,	  5,   3,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia f d <literal> 
	{0xfb45, &op_load_ia,	  5,   4,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia f e <literal> 
	{0xfb55, &op_load_ia,	  5,   5,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia f f <literal> 
	{0xfb65, &op_load_ia,	  5,   6,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia f g <literal> 
	{0xfb75, &op_load_ia,	  5,   7,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia f h <literal> 
	{0xfb85, &op_load_ia,	  5,   8,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia f pc <literal> 
	{0xfb95, &op_load_ia,	  5,   9,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia f ra <literal> 
	{0xfba5, &op_load_ia,	  5,  10,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia f sb <literal> 
	{0xfbb5, &op_load_ia,	  5,  11,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia f sp <literal> 
	{0xfbc5, &op_load_ia,	  5,  12,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia f db <literal> 
	{0xfbd5, &op_load_ia,	  5,  13,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia f cb <literal> 
	{0xfbe5, &op_load_ia,	  5,  14,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia f pi <literal> 
	{0xfb06, &op_load_ia,	  6,   0,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia g a <literal> 
	{0xfb16, &op_load_ia,	  6,   1,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia g b <literal> 
	{0xfb26, &op_load_ia,	  6,   2,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia g c <literal> 
	{0xfb36, &op_load_ia,	  6,   3,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia g d <literal> 
	{0xfb46, &op_load_ia,	  6,   4,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia g e <literal> 
	{0xfb56, &op_load_ia,	  6,   5,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia g f <literal> 
	{0xfb66, &op_load_ia,	  6,   6,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia g g <literal> 
	{0xfb76, &op_load_ia,	  6,   7,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia g h <literal> 
	{0xfb86, &op_load_ia,	  6,   8,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia g pc <literal> 
	{0xfb96, &op_load_ia,	  6,   9,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia g ra <literal> 
	{0xfba6, &op_load_ia,	  6,  10,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia g sb <literal> 
	{0xfbb6, &op_load_ia,	  6,  11,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia g sp <literal> 
	{0xfbc6, &op_load_ia,	  6,  12,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia g db <literal> 
	{0xfbd6, &op_load_ia,	  6,  13,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia g cb <literal> 
	{0xfbe6, &op_load_ia,	  6,  14,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia g pi <literal> 
	{0xfb07, &op_load_ia,	  7,   0,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia h a <literal> 
	{0xfb17, &op_load_ia,	  7,   1,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia h b <literal> 
	{0xfb27, &op_load_ia,	  7,   2,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia h c <literal> 
	{0xfb37, &op_load_ia,	  7,   3,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia h d <literal> 
	{0xfb47, &op_load_ia,	  7,   4,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia h e <literal> 
	{0xfb57, &op_load_ia,	  7,   5,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia h f <literal> 
	{0xfb67, &op_load_ia,	  7,   6,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia h g <literal> 
	{0xfb77, &op_load_ia,	  7,   7,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia h h <literal> 
	{0xfb87, &op_load_ia,	  7,   8,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia h pc <literal> 
	{0xfb97, &op_load_ia,	  7,   9,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia h ra <literal> 
	{0xfba7, &op_load_ia,	  7,  10,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia h sb <literal> 
	{0xfbb7, &op_load_ia,	  7,  11,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia h sp <literal> 
	{0xfbc7, &op_load_ia,	  7,  12,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia h db <literal> 
	{0xfbd7, &op_load_ia,	  7,  13,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia h cb <literal> 
	{0xfbe7, &op_load_ia,	  7,  14,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia h pi <literal> 
	{0xfb08, &op_load_ia,	  8,   0,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia pc a <literal> 
	{0xfb18, &op_load_ia,	  8,   1,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia pc b <literal> 
	{0xfb28, &op_load_ia,	  8,   2,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia pc c <literal> 
	{0xfb38, &op_load_ia,	  8,   3,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia pc d <literal> 
	{0xfb48, &op_load_ia,	  8,   4,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia pc e <literal> 
	{0xfb58, &op_load_ia,	  8,   5,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia pc f <literal> 
	{0xfb68, &op_load_ia,	  8,   6,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia pc g <literal> 
	{0xfb78, &op_load_ia,	  8,   7,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia pc h <literal> 
	{0xfb88, &op_load_ia,	  8,   8,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia pc pc <literal> 
	{0xfb98, &op_load_ia,	  8,   9,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia pc ra <literal> 
	{0xfba8, &op_load_ia,	  8,  10,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia pc sb <literal> 
	{0xfbb8, &op_load_ia,	  8,  11,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia pc sp <literal> 
	{0xfbc8, &op_load_ia,	  8,  12,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia pc db <literal> 
	{0xfbd8, &op_load_ia,	  8,  13,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia pc cb <literal> 
	{0xfbe8, &op_load_ia,	  8,  14,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia pc pi <literal> 
	{0xfb09, &op_load_ia,	  9,   0,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia ra a <literal> 
	{0xfb19, &op_load_ia,	  9,   1,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia ra b <literal> 
	{0xfb29, &op_load_ia,	  9,   2,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia ra c <literal> 
	{0xfb39, &op_load_ia,	  9,   3,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia ra d <literal> 
	{0xfb49, &op_load_ia,	  9,   4,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia ra e <literal> 
	{0xfb59, &op_load_ia,	  9,   5,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia ra f <literal> 
	{0xfb69, &op_load_ia,	  9,   6,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia ra g <literal> 
	{0xfb79, &op_load_ia,	  9,   7,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia ra h <literal> 
	{0xfb89, &op_load_ia,	  9,   8,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia ra pc <literal> 
	{0xfb99, &op_load_ia,	  9,   9,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia ra ra <literal> 
	{0xfba9, &op_load_ia,	  9,  10,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia ra sb <literal> 
	{0xfbb9, &op_load_ia,	  9,  11,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia ra sp <literal> 
	{0xfbc9, &op_load_ia,	  9,  12,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia ra db <literal> 
	{0xfbd9, &op_load_ia,	  9,  13,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia ra cb <literal> 
	{0xfbe9, &op_load_ia,	  9,  14,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia ra pi <literal> 
	{0xfb0a, &op_load_ia,	 10,   0,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia sb a <literal> 
	{0xfb1a, &op_load_ia,	 10,   1,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia sb b <literal> 
	{0xfb2a, &op_load_ia,	 10,   2,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia sb c <literal> 
	{0xfb3a, &op_load_ia,	 10,   3,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia sb d <literal> 
	{0xfb4a, &op_load_ia,	 10,   4,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia sb e <literal> 
	{0xfb5a, &op_load_ia,	 10,   5,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia sb f <literal> 
	{0xfb6a, &op_load_ia,	 10,   6,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia sb g <literal> 
	{0xfb7a, &op_load_ia,	 10,   7,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia sb h <literal> 
	{0xfb8a, &op_load_ia,	 10,   8,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia sb pc <literal> 
	{0xfb9a, &op_load_ia,	 10,   9,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia sb ra <literal> 
	{0xfbaa, &op_load_ia,	 10,  10,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia sb sb <literal> 
	{0xfbba, &op_load_ia,	 10,  11,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia sb sp <literal> 
	{0xfbca, &op_load_ia,	 10,  12,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia sb db <literal> 
	{0xfbda, &op_load_ia,	 10,  13,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia sb cb <literal> 
	{0xfbea, &op_load_ia,	 10,  14,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia sb pi <literal> 
	{0xfb0b, &op_load_ia,	 11,   0,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia sp a <literal> 
	{0xfb1b, &op_load_ia,	 11,   1,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia sp b <literal> 
	{0xfb2b, &op_load_ia,	 11,   2,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia sp c <literal> 
	{0xfb3b, &op_load_ia,	 11,   3,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia sp d <literal> 
	{0xfb4b, &op_load_ia,	 11,   4,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia sp e <literal> 
	{0xfb5b, &op_load_ia,	 11,   5,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia sp f <literal> 
	{0xfb6b, &op_load_ia,	 11,   6,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia sp g <literal> 
	{0xfb7b, &op_load_ia,	 11,   7,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia sp h <literal> 
	{0xfb8b, &op_load_ia,	 11,   8,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia sp pc <literal> 
	{0xfb9b, &op_load_ia,	 11,   9,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia sp ra <literal> 
	{0xfbab, &op_load_ia,	 11,  10,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia sp sb <literal> 
	{0xfbbb, &op_load_ia,	 11,  11,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia sp sp <literal> 
	{0xfbcb, &op_load_ia,	 11,  12,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia sp db <literal> 
	{0xfbdb, &op_load_ia,	 11,  13,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia sp cb <literal> 
	{0xfbeb, &op_load_ia,	 11,  14,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia sp pi <literal> 
	{0xfb0c, &op_load_ia,	 12,   0,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia db a <literal> 
	{0xfb1c, &op_load_ia,	 12,   1,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia db b <literal> 
	{0xfb2c, &op_load_ia,	 12,   2,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia db c <literal> 
	{0xfb3c, &op_load_ia,	 12,   3,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia db d <literal> 
	{0xfb4c, &op_load_ia,	 12,   4,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia db e <literal> 
	{0xfb5c, &op_load_ia,	 12,   5,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia db f <literal> 
	{0xfb6c, &op_load_ia,	 12,   6,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia db g <literal> 
	{0xfb7c, &op_load_ia,	 12,   7,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia db h <literal> 
	{0xfb8c, &op_load_ia,	 12,   8,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia db pc <literal> 
	{0xfb9c, &op_load_ia,	 12,   9,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia db ra <literal> 
	{0xfbac, &op_load_ia,	 12,  10,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia db sb <literal> 
	{0xfbbc, &op_load_ia,	 12,  11,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia db sp <literal> 
	{0xfbcc, &op_load_ia,	 12,  12,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia db db <literal> 
	{0xfbdc, &op_load_ia,	 12,  13,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia db cb <literal> 
	{0xfbec, &op_load_ia,	 12,  14,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia db pi <literal> 
	{0xfb0d, &op_load_ia,	 13,   0,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia cb a <literal> 
	{0xfb1d, &op_load_ia,	 13,   1,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia cb b <literal> 
	{0xfb2d, &op_load_ia,	 13,   2,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia cb c <literal> 
	{0xfb3d, &op_load_ia,	 13,   3,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia cb d <literal> 
	{0xfb4d, &op_load_ia,	 13,   4,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia cb e <literal> 
	{0xfb5d, &op_load_ia,	 13,   5,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia cb f <literal> 
	{0xfb6d, &op_load_ia,	 13,   6,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia cb g <literal> 
	{0xfb7d, &op_load_ia,	 13,   7,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia cb h <literal> 
	{0xfb8d, &op_load_ia,	 13,   8,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia cb pc <literal> 
	{0xfb9d, &op_load_ia,	 13,   9,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia cb ra <literal> 
	{0xfbad, &op_load_ia,	 13,  10,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia cb sb <literal> 
	{0xfbbd, &op_load_ia,	 13,  11,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia cb sp <literal> 
	{0xfbcd, &op_load_ia,	 13,  12,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia cb db <literal> 
	{0xfbdd, &op_load_ia,	 13,  13,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia cb cb <literal> 
	{0xfbed, &op_load_ia,	 13,  14,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia cb pi <literal> 
	{0xfb0e, &op_load_ia,	 14,   0,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia pi a <literal> 
	{0xfb1e, &op_load_ia,	 14,   1,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia pi b <literal> 
	{0xfb2e, &op_load_ia,	 14,   2,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia pi c <literal> 
	{0xfb3e, &op_load_ia,	 14,   3,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia pi d <literal> 
	{0xfb4e, &op_load_ia,	 14,   4,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia pi e <literal> 
	{0xfb5e, &op_load_ia,	 14,   5,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia pi f <literal> 
	{0xfb6e, &op_load_ia,	 14,   6,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia pi g <literal> 
	{0xfb7e, &op_load_ia,	 14,   7,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia pi h <literal> 
	{0xfb8e, &op_load_ia,	 14,   8,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia pi pc <literal> 
	{0xfb9e, &op_load_ia,	 14,   9,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia pi ra <literal> 
	{0xfbae, &op_load_ia,	 14,  10,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia pi sb <literal> 
	{0xfbbe, &op_load_ia,	 14,  11,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia pi sp <literal> 
	{0xfbce, &op_load_ia,	 14,  12,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia pi db <literal> 
	{0xfbde, &op_load_ia,	 14,  13,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia pi cb <literal> 
	{0xfbee, &op_load_ia,	 14,  14,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia pi pi <literal> 
	{0xfb0f, &op_load_ia,	 15,   0,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia status a <literal> 
	{0xfb1f, &op_load_ia,	 15,   1,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia status b <literal> 
	{0xfb2f, &op_load_ia,	 15,   2,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia status c <literal> 
	{0xfb3f, &op_load_ia,	 15,   3,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia status d <literal> 
	{0xfb4f, &op_load_ia,	 15,   4,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia status e <literal> 
	{0xfb5f, &op_load_ia,	 15,   5,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia status f <literal> 
	{0xfb6f, &op_load_ia,	 15,   6,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia status g <literal> 
	{0xfb7f, &op_load_ia,	 15,   7,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia status h <literal> 
	{0xfb8f, &op_load_ia,	 15,   8,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia status pc <literal> 
	{0xfb9f, &op_load_ia,	 15,   9,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia status ra <literal> 
	{0xfbaf, &op_load_ia,	 15,  10,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia status sb <literal> 
	{0xfbbf, &op_load_ia,	 15,  11,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia status sp <literal> 
	{0xfbcf, &op_load_ia,	 15,  12,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia status db <literal> 
	{0xfbdf, &op_load_ia,	 15,  13,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia status cb <literal> 
	{0xfbef, &op_load_ia,	 15,  14,   8, 0xff, 0x00, 0x04, 0x04}, // load.ia status pi <literal> 
	{0xfd00, &op_store_ia,	  0,   0,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia a a <literal> 
	{0xfd10, &op_store_ia,	  0,   1,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia a b <literal> 
	{0xfd20, &op_store_ia,	  0,   2,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia a c <literal> 
	{0xfd30, &op_store_ia,	  0,   3,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia a d <literal> 
	{0xfd40, &op_store_ia,	  0,   4,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia a e <literal> 
	{0xfd50, &op_store_ia,	  0,   5,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia a f <literal> 
	{0xfd60, &op_store_ia,	  0,   6,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia a g <literal> 
	{0xfd70, &op_store_ia,	  0,   7,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia a h <literal> 
	{0xfd80, &op_store_ia,	  0,   8,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia a pc <literal> 
	{0xfd90, &op_store_ia,	  0,   9,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia a ra <literal> 
	{0xfda0, &op_store_ia,	  0,  10,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia a sb <literal> 
	{0xfdb0, &op_store_ia,	  0,  11,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia a sp <literal> 
	{0xfdc0, &op_store_ia,	  0,  12,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia a db <literal> 
	{0xfdd0, &op_store_ia,	  0,  13,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia a cb <literal> 
	{0xfde0, &op_store_ia,	  0,  14,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia a pi <literal> 
	{0xfd01, &op_store_ia,	  1,   0,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia b a <literal> 
	{0xfd11, &op_store_ia,	  1,   1,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia b b <literal> 
	{0xfd21, &op_store_ia,	  1,   2,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia b c <literal> 
	{0xfd31, &op_store_ia,	  1,   3,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia b d <literal> 
	{0xfd41, &op_store_ia,	  1,   4,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia b e <literal> 
	{0xfd51, &op_store_ia,	  1,   5,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia b f <literal> 
	{0xfd61, &op_store_ia,	  1,   6,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia b g <literal> 
	{0xfd71, &op_store_ia,	  1,   7,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia b h <literal> 
	{0xfd81, &op_store_ia,	  1,   8,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia b pc <literal> 
	{0xfd91, &op_store_ia,	  1,   9,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia b ra <literal> 
	{0xfda1, &op_store_ia,	  1,  10,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia b sb <literal> 
	{0xfdb1, &op_store_ia,	  1,  11,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia b sp <literal> 
	{0xfdc1, &op_store_ia,	  1,  12,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia b db <literal> 
	{0xfdd1, &op_store_ia,	  1,  13,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia b cb <literal> 
	{0xfde1, &op_store_ia,	  1,  14,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia b pi <literal> 
	{0xfd02, &op_store_ia,	  2,   0,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia c a <literal> 
	{0xfd12, &op_store_ia,	  2,   1,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia c b <literal> 
	{0xfd22, &op_store_ia,	  2,   2,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia c c <literal> 
	{0xfd32, &op_store_ia,	  2,   3,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia c d <literal> 
	{0xfd42, &op_store_ia,	  2,   4,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia c e <literal> 
	{0xfd52, &op_store_ia,	  2,   5,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia c f <literal> 
	{0xfd62, &op_store_ia,	  2,   6,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia c g <literal> 
	{0xfd72, &op_store_ia,	  2,   7,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia c h <literal> 
	{0xfd82, &op_store_ia,	  2,   8,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia c pc <literal> 
	{0xfd92, &op_store_ia,	  2,   9,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia c ra <literal> 
	{0xfda2, &op_store_ia,	  2,  10,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia c sb <literal> 
	{0xfdb2, &op_store_ia,	  2,  11,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia c sp <literal> 
	{0xfdc2, &op_store_ia,	  2,  12,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia c db <literal> 
	{0xfdd2, &op_store_ia,	  2,  13,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia c cb <literal> 
	{0xfde2, &op_store_ia,	  2,  14,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia c pi <literal> 
	{0xfd03, &op_store_ia,	  3,   0,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia d a <literal> 
	{0xfd13, &op_store_ia,	  3,   1,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia d b <literal> 
	{0xfd23, &op_store_ia,	  3,   2,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia d c <literal> 
	{0xfd33, &op_store_ia,	  3,   3,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia d d <literal> 
	{0xfd43, &op_store_ia,	  3,   4,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia d e <literal> 
	{0xfd53, &op_store_ia,	  3,   5,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia d f <literal> 
	{0xfd63, &op_store_ia,	  3,   6,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia d g <literal> 
	{0xfd73, &op_store_ia,	  3,   7,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia d h <literal> 
	{0xfd83, &op_store_ia,	  3,   8,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia d pc <literal> 
	{0xfd93, &op_store_ia,	  3,   9,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia d ra <literal> 
	{0xfda3, &op_store_ia,	  3,  10,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia d sb <literal> 
	{0xfdb3, &op_store_ia,	  3,  11,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia d sp <literal> 
	{0xfdc3, &op_store_ia,	  3,  12,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia d db <literal> 
	{0xfdd3, &op_store_ia,	  3,  13,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia d cb <literal> 
	{0xfde3, &op_store_ia,	  3,  14,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia d pi <literal> 
	{0xfd04, &op_store_ia,	  4,   0,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia e a <literal> 
	{0xfd14, &op_store_ia,	  4,   1,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia e b <literal> 
	{0xfd24, &op_store_ia,	  4,   2,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia e c <literal> 
	{0xfd34, &op_store_ia,	  4,   3,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia e d <literal> 
	{0xfd44, &op_store_ia,	  4,   4,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia e e <literal> 
	{0xfd54, &op_store_ia,	  4,   5,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia e f <literal> 
	{0xfd64, &op_store_ia,	  4,   6,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia e g <literal> 
	{0xfd74, &op_store_ia,	  4,   7,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia e h <literal> 
	{0xfd84, &op_store_ia,	  4,   8,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia e pc <literal> 
	{0xfd94, &op_store_ia,	  4,   9,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia e ra <literal> 
	{0xfda4, &op_store_ia,	  4,  10,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia e sb <literal> 
	{0xfdb4, &op_store_ia,	  4,  11,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia e sp <literal> 
	{0xfdc4, &op_store_ia,	  4,  12,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia e db <literal> 
	{0xfdd4, &op_store_ia,	  4,  13,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia e cb <literal> 
	{0xfde4, &op_store_ia,	  4,  14,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia e pi <literal> 
	{0xfd05, &op_store_ia,	  5,   0,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia f a <literal> 
	{0xfd15, &op_store_ia,	  5,   1,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia f b <literal> 
	{0xfd25, &op_store_ia,	  5,   2,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia f c <literal> 
	{0xfd35, &op_store_ia,	  5,   3,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia f d <literal> 
	{0xfd45, &op_store_ia,	  5,   4,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia f e <literal> 
	{0xfd55, &op_store_ia,	  5,   5,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia f f <literal> 
	{0xfd65, &op_store_ia,	  5,   6,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia f g <literal> 
	{0xfd75, &op_store_ia,	  5,   7,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia f h <literal> 
	{0xfd85, &op_store_ia,	  5,   8,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia f pc <literal> 
	{0xfd95, &op_store_ia,	  5,   9,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia f ra <literal> 
	{0xfda5, &op_store_ia,	  5,  10,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia f sb <literal> 
	{0xfdb5, &op_store_ia,	  5,  11,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia f sp <literal> 
	{0xfdc5, &op_store_ia,	  5,  12,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia f db <literal> 
	{0xfdd5, &op_store_ia,	  5,  13,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia f cb <literal> 
	{0xfde5, &op_store_ia,	  5,  14,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia f pi <literal> 
	{0xfd06, &op_store_ia,	  6,   0,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia g a <literal> 
	{0xfd16, &op_store_ia,	  6,   1,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia g b <literal> 
	{0xfd26, &op_store_ia,	  6,   2,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia g c <literal> 
	{0xfd36, &op_store_ia,	  6,   3,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia g d <literal> 
	{0xfd46, &op_store_ia,	  6,   4,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia g e <literal> 
	{0xfd56, &op_store_ia,	  6,   5,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia g f <literal> 
	{0xfd66, &op_store_ia,	  6,   6,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia g g <literal> 
	{0xfd76, &op_store_ia,	  6,   7,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia g h <literal> 
	{0xfd86, &op_store_ia,	  6,   8,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia g pc <literal> 
	{0xfd96, &op_store_ia,	  6,   9,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia g ra <literal> 
	{0xfda6, &op_store_ia,	  6,  10,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia g sb <literal> 
	{0xfdb6, &op_store_ia,	  6,  11,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia g sp <literal> 
	{0xfdc6, &op_store_ia,	  6,  12,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia g db <literal> 
	{0xfdd6, &op_store_ia,	  6,  13,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia g cb <literal> 
	{0xfde6, &op_store_ia,	  6,  14,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia g pi <literal> 
	{0xfd07, &op_store_ia,	  7,   0,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia h a <literal> 
	{0xfd17, &op_store_ia,	  7,   1,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia h b <literal> 
	{0xfd27, &op_store_ia,	  7,   2,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia h c <literal> 
	{0xfd37, &op_store_ia,	  7,   3,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia h d <literal> 
	{0xfd47, &op_store_ia,	  7,   4,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia h e <literal> 
	{0xfd57, &op_store_ia,	  7,   5,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia h f <literal> 
	{0xfd67, &op_store_ia,	  7,   6,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia h g <literal> 
	{0xfd77, &op_store_ia,	  7,   7,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia h h <literal> 
	{0xfd87, &op_store_ia,	  7,   8,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia h pc <literal> 
	{0xfd97, &op_store_ia,	  7,   9,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia h ra <literal> 
	{0xfda7, &op_store_ia,	  7,  10,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia h sb <literal> 
	{0xfdb7, &op_store_ia,	  7,  11,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia h sp <literal> 
	{0xfdc7, &op_store_ia,	  7,  12,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia h db <literal> 
	{0xfdd7, &op_store_ia,	  7,  13,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia h cb <literal> 
	{0xfde7, &op_store_ia,	  7,  14,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia h pi <literal> 
	{0xfd08, &op_store_ia,	  8,   0,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia pc a <literal> 
	{0xfd18, &op_store_ia,	  8,   1,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia pc b <literal> 
	{0xfd28, &op_store_ia,	  8,   2,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia pc c <literal> 
	{0xfd38, &op_store_ia,	  8,   3,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia pc d <literal> 
	{0xfd48, &op_store_ia,	  8,   4,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia pc e <literal> 
	{0xfd58, &op_store_ia,	  8,   5,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia pc f <literal> 
	{0xfd68, &op_store_ia,	  8,   6,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia pc g <literal> 
	{0xfd78, &op_store_ia,	  8,   7,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia pc h <literal> 
	{0xfd88, &op_store_ia,	  8,   8,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia pc pc <literal> 
	{0xfd98, &op_store_ia,	  8,   9,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia pc ra <literal> 
	{0xfda8, &op_store_ia,	  8,  10,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia pc sb <literal> 
	{0xfdb8, &op_store_ia,	  8,  11,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia pc sp <literal> 
	{0xfdc8, &op_store_ia,	  8,  12,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia pc db <literal> 
	{0xfdd8, &op_store_ia,	  8,  13,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia pc cb <literal> 
	{0xfde8, &op_store_ia,	  8,  14,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia pc pi <literal> 
	{0xfd09, &op_store_ia,	  9,   0,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia ra a <literal> 
	{0xfd19, &op_store_ia,	  9,   1,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia ra b <literal> 
	{0xfd29, &op_store_ia,	  9,   2,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia ra c <literal> 
	{0xfd39, &op_store_ia,	  9,   3,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia ra d <literal> 
	{0xfd49, &op_store_ia,	  9,   4,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia ra e <literal> 
	{0xfd59, &op_store_ia,	  9,   5,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia ra f <literal> 
	{0xfd69, &op_store_ia,	  9,   6,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia ra g <literal> 
	{0xfd79, &op_store_ia,	  9,   7,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia ra h <literal> 
	{0xfd89, &op_store_ia,	  9,   8,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia ra pc <literal> 
	{0xfd99, &op_store_ia,	  9,   9,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia ra ra <literal> 
	{0xfda9, &op_store_ia,	  9,  10,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia ra sb <literal> 
	{0xfdb9, &op_store_ia,	  9,  11,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia ra sp <literal> 
	{0xfdc9, &op_store_ia,	  9,  12,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia ra db <literal> 
	{0xfdd9, &op_store_ia,	  9,  13,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia ra cb <literal> 
	{0xfde9, &op_store_ia,	  9,  14,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia ra pi <literal> 
	{0xfd0a, &op_store_ia,	 10,   0,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia sb a <literal> 
	{0xfd1a, &op_store_ia,	 10,   1,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia sb b <literal> 
	{0xfd2a, &op_store_ia,	 10,   2,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia sb c <literal> 
	{0xfd3a, &op_store_ia,	 10,   3,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia sb d <literal> 
	{0xfd4a, &op_store_ia,	 10,   4,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia sb e <literal> 
	{0xfd5a, &op_store_ia,	 10,   5,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia sb f <literal> 
	{0xfd6a, &op_store_ia,	 10,   6,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia sb g <literal> 
	{0xfd7a, &op_store_ia,	 10,   7,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia sb h <literal> 
	{0xfd8a, &op_store_ia,	 10,   8,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia sb pc <literal> 
	{0xfd9a, &op_store_ia,	 10,   9,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia sb ra <literal> 
	{0xfdaa, &op_store_ia,	 10,  10,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia sb sb <literal> 
	{0xfdba, &op_store_ia,	 10,  11,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia sb sp <literal> 
	{0xfdca, &op_store_ia,	 10,  12,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia sb db <literal> 
	{0xfdda, &op_store_ia,	 10,  13,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia sb cb <literal> 
	{0xfdea, &op_store_ia,	 10,  14,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia sb pi <literal> 
	{0xfd0b, &op_store_ia,	 11,   0,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia sp a <literal> 
	{0xfd1b, &op_store_ia,	 11,   1,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia sp b <literal> 
	{0xfd2b, &op_store_ia,	 11,   2,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia sp c <literal> 
	{0xfd3b, &op_store_ia,	 11,   3,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia sp d <literal> 
	{0xfd4b, &op_store_ia,	 11,   4,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia sp e <literal> 
	{0xfd5b, &op_store_ia,	 11,   5,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia sp f <literal> 
	{0xfd6b, &op_store_ia,	 11,   6,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia sp g <literal> 
	{0xfd7b, &op_store_ia,	 11,   7,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia sp h <literal> 
	{0xfd8b, &op_store_ia,	 11,   8,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia sp pc <literal> 
	{0xfd9b, &op_store_ia,	 11,   9,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia sp ra <literal> 
	{0xfdab, &op_store_ia,	 11,  10,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia sp sb <literal> 
	{0xfdbb, &op_store_ia,	 11,  11,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia sp sp <literal> 
	{0xfdcb, &op_store_ia,	 11,  12,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia sp db <literal> 
	{0xfddb, &op_store_ia,	 11,  13,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia sp cb <literal> 
	{0xfdeb, &op_store_ia,	 11,  14,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia sp pi <literal> 
	{0xfd0c, &op_store_ia,	 12,   0,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia db a <literal> 
	{0xfd1c, &op_store_ia,	 12,   1,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia db b <literal> 
	{0xfd2c, &op_store_ia,	 12,   2,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia db c <literal> 
	{0xfd3c, &op_store_ia,	 12,   3,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia db d <literal> 
	{0xfd4c, &op_store_ia,	 12,   4,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia db e <literal> 
	{0xfd5c, &op_store_ia,	 12,   5,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia db f <literal> 
	{0xfd6c, &op_store_ia,	 12,   6,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia db g <literal> 
	{0xfd7c, &op_store_ia,	 12,   7,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia db h <literal> 
	{0xfd8c, &op_store_ia,	 12,   8,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia db pc <literal> 
	{0xfd9c, &op_store_ia,	 12,   9,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia db ra <literal> 
	{0xfdac, &op_store_ia,	 12,  10,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia db sb <literal> 
	{0xfdbc, &op_store_ia,	 12,  11,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia db sp <literal> 
	{0xfdcc, &op_store_ia,	 12,  12,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia db db <literal> 
	{0xfddc, &op_store_ia,	 12,  13,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia db cb <literal> 
	{0xfdec, &op_store_ia,	 12,  14,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia db pi <literal> 
	{0xfd0d, &op_store_ia,	 13,   0,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia cb a <literal> 
	{0xfd1d, &op_store_ia,	 13,   1,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia cb b <literal> 
	{0xfd2d, &op_store_ia,	 13,   2,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia cb c <literal> 
	{0xfd3d, &op_store_ia,	 13,   3,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia cb d <literal> 
	{0xfd4d, &op_store_ia,	 13,   4,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia cb e <literal> 
	{0xfd5d, &op_store_ia,	 13,   5,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia cb f <literal> 
	{0xfd6d, &op_store_ia,	 13,   6,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia cb g <literal> 
	{0xfd7d, &op_store_ia,	 13,   7,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia cb h <literal> 
	{0xfd8d, &op_store_ia,	 13,   8,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia cb pc <literal> 
	{0xfd9d, &op_store_ia,	 13,   9,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia cb ra <literal> 
	{0xfdad, &op_store_ia,	 13,  10,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia cb sb <literal> 
	{0xfdbd, &op_store_ia,	 13,  11,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia cb sp <literal> 
	{0xfdcd, &op_store_ia,	 13,  12,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia cb db <literal> 
	{0xfddd, &op_store_ia,	 13,  13,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia cb cb <literal> 
	{0xfded, &op_store_ia,	 13,  14,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia cb pi <literal> 
	{0xfd0e, &op_store_ia,	 14,   0,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia pi a <literal> 
	{0xfd1e, &op_store_ia,	 14,   1,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia pi b <literal> 
	{0xfd2e, &op_store_ia,	 14,   2,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia pi c <literal> 
	{0xfd3e, &op_store_ia,	 14,   3,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia pi d <literal> 
	{0xfd4e, &op_store_ia,	 14,   4,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia pi e <literal> 
	{0xfd5e, &op_store_ia,	 14,   5,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia pi f <literal> 
	{0xfd6e, &op_store_ia,	 14,   6,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia pi g <literal> 
	{0xfd7e, &op_store_ia,	 14,   7,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia pi h <literal> 
	{0xfd8e, &op_store_ia,	 14,   8,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia pi pc <literal> 
	{0xfd9e, &op_store_ia,	 14,   9,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia pi ra <literal> 
	{0xfdae, &op_store_ia,	 14,  10,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia pi sb <literal> 
	{0xfdbe, &op_store_ia,	 14,  11,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia pi sp <literal> 
	{0xfdce, &op_store_ia,	 14,  12,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia pi db <literal> 
	{0xfdde, &op_store_ia,	 14,  13,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia pi cb <literal> 
	{0xfdee, &op_store_ia,	 14,  14,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia pi pi <literal> 
	{0xfd0f, &op_store_ia,	 15,   0,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia status a <literal> 
	{0xfd1f, &op_store_ia,	 15,   1,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia status b <literal> 
	{0xfd2f, &op_store_ia,	 15,   2,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia status c <literal> 
	{0xfd3f, &op_store_ia,	 15,   3,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia status d <literal> 
	{0xfd4f, &op_store_ia,	 15,   4,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia status e <literal> 
	{0xfd5f, &op_store_ia,	 15,   5,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia status f <literal> 
	{0xfd6f, &op_store_ia,	 15,   6,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia status g <literal> 
	{0xfd7f, &op_store_ia,	 15,   7,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia status h <literal> 
	{0xfd8f, &op_store_ia,	 15,   8,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia status pc <literal> 
	{0xfd9f, &op_store_ia,	 15,   9,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia status ra <literal> 
	{0xfdaf, &op_store_ia,	 15,  10,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia status sb <literal> 
	{0xfdbf, &op_store_ia,	 15,  11,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia status sp <literal> 
	{0xfdcf, &op_store_ia,	 15,  12,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia status db <literal> 
	{0xfddf, &op_store_ia,	 15,  13,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia status cb <literal> 
	{0xfdef, &op_store_ia,	 15,  14,   8, 0xff, 0x00, 0x04, 0x01}, // store.wia status pi <literal> 
	{0xfe00, &op_store_ia,	  0,   0,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia a a <literal> 
	{0xfe10, &op_store_ia,	  0,   1,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia a b <literal> 
	{0xfe20, &op_store_ia,	  0,   2,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia a c <literal> 
	{0xfe30, &op_store_ia,	  0,   3,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia a d <literal> 
	{0xfe40, &op_store_ia,	  0,   4,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia a e <literal> 
	{0xfe50, &op_store_ia,	  0,   5,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia a f <literal> 
	{0xfe60, &op_store_ia,	  0,   6,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia a g <literal> 
	{0xfe70, &op_store_ia,	  0,   7,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia a h <literal> 
	{0xfe80, &op_store_ia,	  0,   8,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia a pc <literal> 
	{0xfe90, &op_store_ia,	  0,   9,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia a ra <literal> 
	{0xfea0, &op_store_ia,	  0,  10,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia a sb <literal> 
	{0xfeb0, &op_store_ia,	  0,  11,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia a sp <literal> 
	{0xfec0, &op_store_ia,	  0,  12,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia a db <literal> 
	{0xfed0, &op_store_ia,	  0,  13,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia a cb <literal> 
	{0xfee0, &op_store_ia,	  0,  14,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia a pi <literal> 
	{0xfe01, &op_store_ia,	  1,   0,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia b a <literal> 
	{0xfe11, &op_store_ia,	  1,   1,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia b b <literal> 
	{0xfe21, &op_store_ia,	  1,   2,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia b c <literal> 
	{0xfe31, &op_store_ia,	  1,   3,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia b d <literal> 
	{0xfe41, &op_store_ia,	  1,   4,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia b e <literal> 
	{0xfe51, &op_store_ia,	  1,   5,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia b f <literal> 
	{0xfe61, &op_store_ia,	  1,   6,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia b g <literal> 
	{0xfe71, &op_store_ia,	  1,   7,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia b h <literal> 
	{0xfe81, &op_store_ia,	  1,   8,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia b pc <literal> 
	{0xfe91, &op_store_ia,	  1,   9,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia b ra <literal> 
	{0xfea1, &op_store_ia,	  1,  10,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia b sb <literal> 
	{0xfeb1, &op_store_ia,	  1,  11,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia b sp <literal> 
	{0xfec1, &op_store_ia,	  1,  12,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia b db <literal> 
	{0xfed1, &op_store_ia,	  1,  13,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia b cb <literal> 
	{0xfee1, &op_store_ia,	  1,  14,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia b pi <literal> 
	{0xfe02, &op_store_ia,	  2,   0,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia c a <literal> 
	{0xfe12, &op_store_ia,	  2,   1,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia c b <literal> 
	{0xfe22, &op_store_ia,	  2,   2,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia c c <literal> 
	{0xfe32, &op_store_ia,	  2,   3,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia c d <literal> 
	{0xfe42, &op_store_ia,	  2,   4,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia c e <literal> 
	{0xfe52, &op_store_ia,	  2,   5,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia c f <literal> 
	{0xfe62, &op_store_ia,	  2,   6,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia c g <literal> 
	{0xfe72, &op_store_ia,	  2,   7,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia c h <literal> 
	{0xfe82, &op_store_ia,	  2,   8,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia c pc <literal> 
	{0xfe92, &op_store_ia,	  2,   9,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia c ra <literal> 
	{0xfea2, &op_store_ia,	  2,  10,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia c sb <literal> 
	{0xfeb2, &op_store_ia,	  2,  11,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia c sp <literal> 
	{0xfec2, &op_store_ia,	  2,  12,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia c db <literal> 
	{0xfed2, &op_store_ia,	  2,  13,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia c cb <literal> 
	{0xfee2, &op_store_ia,	  2,  14,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia c pi <literal> 
	{0xfe03, &op_store_ia,	  3,   0,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia d a <literal> 
	{0xfe13, &op_store_ia,	  3,   1,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia d b <literal> 
	{0xfe23, &op_store_ia,	  3,   2,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia d c <literal> 
	{0xfe33, &op_store_ia,	  3,   3,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia d d <literal> 
	{0xfe43, &op_store_ia,	  3,   4,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia d e <literal> 
	{0xfe53, &op_store_ia,	  3,   5,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia d f <literal> 
	{0xfe63, &op_store_ia,	  3,   6,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia d g <literal> 
	{0xfe73, &op_store_ia,	  3,   7,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia d h <literal> 
	{0xfe83, &op_store_ia,	  3,   8,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia d pc <literal> 
	{0xfe93, &op_store_ia,	  3,   9,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia d ra <literal> 
	{0xfea3, &op_store_ia,	  3,  10,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia d sb <literal> 
	{0xfeb3, &op_store_ia,	  3,  11,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia d sp <literal> 
	{0xfec3, &op_store_ia,	  3,  12,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia d db <literal> 
	{0xfed3, &op_store_ia,	  3,  13,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia d cb <literal> 
	{0xfee3, &op_store_ia,	  3,  14,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia d pi <literal> 
	{0xfe04, &op_store_ia,	  4,   0,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia e a <literal> 
	{0xfe14, &op_store_ia,	  4,   1,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia e b <literal> 
	{0xfe24, &op_store_ia,	  4,   2,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia e c <literal> 
	{0xfe34, &op_store_ia,	  4,   3,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia e d <literal> 
	{0xfe44, &op_store_ia,	  4,   4,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia e e <literal> 
	{0xfe54, &op_store_ia,	  4,   5,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia e f <literal> 
	{0xfe64, &op_store_ia,	  4,   6,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia e g <literal> 
	{0xfe74, &op_store_ia,	  4,   7,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia e h <literal> 
	{0xfe84, &op_store_ia,	  4,   8,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia e pc <literal> 
	{0xfe94, &op_store_ia,	  4,   9,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia e ra <literal> 
	{0xfea4, &op_store_ia,	  4,  10,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia e sb <literal> 
	{0xfeb4, &op_store_ia,	  4,  11,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia e sp <literal> 
	{0xfec4, &op_store_ia,	  4,  12,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia e db <literal> 
	{0xfed4, &op_store_ia,	  4,  13,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia e cb <literal> 
	{0xfee4, &op_store_ia,	  4,  14,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia e pi <literal> 
	{0xfe05, &op_store_ia,	  5,   0,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia f a <literal> 
	{0xfe15, &op_store_ia,	  5,   1,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia f b <literal> 
	{0xfe25, &op_store_ia,	  5,   2,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia f c <literal> 
	{0xfe35, &op_store_ia,	  5,   3,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia f d <literal> 
	{0xfe45, &op_store_ia,	  5,   4,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia f e <literal> 
	{0xfe55, &op_store_ia,	  5,   5,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia f f <literal> 
	{0xfe65, &op_store_ia,	  5,   6,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia f g <literal> 
	{0xfe75, &op_store_ia,	  5,   7,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia f h <literal> 
	{0xfe85, &op_store_ia,	  5,   8,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia f pc <literal> 
	{0xfe95, &op_store_ia,	  5,   9,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia f ra <literal> 
	{0xfea5, &op_store_ia,	  5,  10,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia f sb <literal> 
	{0xfeb5, &op_store_ia,	  5,  11,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia f sp <literal> 
	{0xfec5, &op_store_ia,	  5,  12,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia f db <literal> 
	{0xfed5, &op_store_ia,	  5,  13,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia f cb <literal> 
	{0xfee5, &op_store_ia,	  5,  14,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia f pi <literal> 
	{0xfe06, &op_store_ia,	  6,   0,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia g a <literal> 
	{0xfe16, &op_store_ia,	  6,   1,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia g b <literal> 
	{0xfe26, &op_store_ia,	  6,   2,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia g c <literal> 
	{0xfe36, &op_store_ia,	  6,   3,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia g d <literal> 
	{0xfe46, &op_store_ia,	  6,   4,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia g e <literal> 
	{0xfe56, &op_store_ia,	  6,   5,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia g f <literal> 
	{0xfe66, &op_store_ia,	  6,   6,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia g g <literal> 
	{0xfe76, &op_store_ia,	  6,   7,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia g h <literal> 
	{0xfe86, &op_store_ia,	  6,   8,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia g pc <literal> 
	{0xfe96, &op_store_ia,	  6,   9,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia g ra <literal> 
	{0xfea6, &op_store_ia,	  6,  10,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia g sb <literal> 
	{0xfeb6, &op_store_ia,	  6,  11,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia g sp <literal> 
	{0xfec6, &op_store_ia,	  6,  12,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia g db <literal> 
	{0xfed6, &op_store_ia,	  6,  13,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia g cb <literal> 
	{0xfee6, &op_store_ia,	  6,  14,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia g pi <literal> 
	{0xfe07, &op_store_ia,	  7,   0,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia h a <literal> 
	{0xfe17, &op_store_ia,	  7,   1,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia h b <literal> 
	{0xfe27, &op_store_ia,	  7,   2,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia h c <literal> 
	{0xfe37, &op_store_ia,	  7,   3,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia h d <literal> 
	{0xfe47, &op_store_ia,	  7,   4,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia h e <literal> 
	{0xfe57, &op_store_ia,	  7,   5,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia h f <literal> 
	{0xfe67, &op_store_ia,	  7,   6,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia h g <literal> 
	{0xfe77, &op_store_ia,	  7,   7,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia h h <literal> 
	{0xfe87, &op_store_ia,	  7,   8,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia h pc <literal> 
	{0xfe97, &op_store_ia,	  7,   9,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia h ra <literal> 
	{0xfea7, &op_store_ia,	  7,  10,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia h sb <literal> 
	{0xfeb7, &op_store_ia,	  7,  11,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia h sp <literal> 
	{0xfec7, &op_store_ia,	  7,  12,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia h db <literal> 
	{0xfed7, &op_store_ia,	  7,  13,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia h cb <literal> 
	{0xfee7, &op_store_ia,	  7,  14,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia h pi <literal> 
	{0xfe08, &op_store_ia,	  8,   0,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia pc a <literal> 
	{0xfe18, &op_store_ia,	  8,   1,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia pc b <literal> 
	{0xfe28, &op_store_ia,	  8,   2,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia pc c <literal> 
	{0xfe38, &op_store_ia,	  8,   3,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia pc d <literal> 
	{0xfe48, &op_store_ia,	  8,   4,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia pc e <literal> 
	{0xfe58, &op_store_ia,	  8,   5,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia pc f <literal> 
	{0xfe68, &op_store_ia,	  8,   6,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia pc g <literal> 
	{0xfe78, &op_store_ia,	  8,   7,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia pc h <literal> 
	{0xfe88, &op_store_ia,	  8,   8,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia pc pc <literal> 
	{0xfe98, &op_store_ia,	  8,   9,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia pc ra <literal> 
	{0xfea8, &op_store_ia,	  8,  10,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia pc sb <literal> 
	{0xfeb8, &op_store_ia,	  8,  11,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia pc sp <literal> 
	{0xfec8, &op_store_ia,	  8,  12,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia pc db <literal> 
	{0xfed8, &op_store_ia,	  8,  13,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia pc cb <literal> 
	{0xfee8, &op_store_ia,	  8,  14,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia pc pi <literal> 
	{0xfe09, &op_store_ia,	  9,   0,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia ra a <literal> 
	{0xfe19, &op_store_ia,	  9,   1,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia ra b <literal> 
	{0xfe29, &op_store_ia,	  9,   2,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia ra c <literal> 
	{0xfe39, &op_store_ia,	  9,   3,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia ra d <literal> 
	{0xfe49, &op_store_ia,	  9,   4,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia ra e <literal> 
	{0xfe59, &op_store_ia,	  9,   5,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia ra f <literal> 
	{0xfe69, &op_store_ia,	  9,   6,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia ra g <literal> 
	{0xfe79, &op_store_ia,	  9,   7,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia ra h <literal> 
	{0xfe89, &op_store_ia,	  9,   8,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia ra pc <literal> 
	{0xfe99, &op_store_ia,	  9,   9,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia ra ra <literal> 
	{0xfea9, &op_store_ia,	  9,  10,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia ra sb <literal> 
	{0xfeb9, &op_store_ia,	  9,  11,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia ra sp <literal> 
	{0xfec9, &op_store_ia,	  9,  12,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia ra db <literal> 
	{0xfed9, &op_store_ia,	  9,  13,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia ra cb <literal> 
	{0xfee9, &op_store_ia,	  9,  14,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia ra pi <literal> 
	{0xfe0a, &op_store_ia,	 10,   0,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia sb a <literal> 
	{0xfe1a, &op_store_ia,	 10,   1,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia sb b <literal> 
	{0xfe2a, &op_store_ia,	 10,   2,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia sb c <literal> 
	{0xfe3a, &op_store_ia,	 10,   3,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia sb d <literal> 
	{0xfe4a, &op_store_ia,	 10,   4,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia sb e <literal> 
	{0xfe5a, &op_store_ia,	 10,   5,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia sb f <literal> 
	{0xfe6a, &op_store_ia,	 10,   6,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia sb g <literal> 
	{0xfe7a, &op_store_ia,	 10,   7,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia sb h <literal> 
	{0xfe8a, &op_store_ia,	 10,   8,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia sb pc <literal> 
	{0xfe9a, &op_store_ia,	 10,   9,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia sb ra <literal> 
	{0xfeaa, &op_store_ia,	 10,  10,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia sb sb <literal> 
	{0xfeba, &op_store_ia,	 10,  11,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia sb sp <literal> 
	{0xfeca, &op_store_ia,	 10,  12,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia sb db <literal> 
	{0xfeda, &op_store_ia,	 10,  13,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia sb cb <literal> 
	{0xfeea, &op_store_ia,	 10,  14,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia sb pi <literal> 
	{0xfe0b, &op_store_ia,	 11,   0,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia sp a <literal> 
	{0xfe1b, &op_store_ia,	 11,   1,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia sp b <literal> 
	{0xfe2b, &op_store_ia,	 11,   2,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia sp c <literal> 
	{0xfe3b, &op_store_ia,	 11,   3,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia sp d <literal> 
	{0xfe4b, &op_store_ia,	 11,   4,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia sp e <literal> 
	{0xfe5b, &op_store_ia,	 11,   5,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia sp f <literal> 
	{0xfe6b, &op_store_ia,	 11,   6,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia sp g <literal> 
	{0xfe7b, &op_store_ia,	 11,   7,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia sp h <literal> 
	{0xfe8b, &op_store_ia,	 11,   8,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia sp pc <literal> 
	{0xfe9b, &op_store_ia,	 11,   9,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia sp ra <literal> 
	{0xfeab, &op_store_ia,	 11,  10,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia sp sb <literal> 
	{0xfebb, &op_store_ia,	 11,  11,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia sp sp <literal> 
	{0xfecb, &op_store_ia,	 11,  12,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia sp db <literal> 
	{0xfedb, &op_store_ia,	 11,  13,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia sp cb <literal> 
	{0xfeeb, &op_store_ia,	 11,  14,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia sp pi <literal> 
	{0xfe0c, &op_store_ia,	 12,   0,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia db a <literal> 
	{0xfe1c, &op_store_ia,	 12,   1,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia db b <literal> 
	{0xfe2c, &op_store_ia,	 12,   2,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia db c <literal> 
	{0xfe3c, &op_store_ia,	 12,   3,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia db d <literal> 
	{0xfe4c, &op_store_ia,	 12,   4,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia db e <literal> 
	{0xfe5c, &op_store_ia,	 12,   5,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia db f <literal> 
	{0xfe6c, &op_store_ia,	 12,   6,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia db g <literal> 
	{0xfe7c, &op_store_ia,	 12,   7,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia db h <literal> 
	{0xfe8c, &op_store_ia,	 12,   8,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia db pc <literal> 
	{0xfe9c, &op_store_ia,	 12,   9,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia db ra <literal> 
	{0xfeac, &op_store_ia,	 12,  10,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia db sb <literal> 
	{0xfebc, &op_store_ia,	 12,  11,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia db sp <literal> 
	{0xfecc, &op_store_ia,	 12,  12,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia db db <literal> 
	{0xfedc, &op_store_ia,	 12,  13,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia db cb <literal> 
	{0xfeec, &op_store_ia,	 12,  14,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia db pi <literal> 
	{0xfe0d, &op_store_ia,	 13,   0,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia cb a <literal> 
	{0xfe1d, &op_store_ia,	 13,   1,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia cb b <literal> 
	{0xfe2d, &op_store_ia,	 13,   2,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia cb c <literal> 
	{0xfe3d, &op_store_ia,	 13,   3,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia cb d <literal> 
	{0xfe4d, &op_store_ia,	 13,   4,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia cb e <literal> 
	{0xfe5d, &op_store_ia,	 13,   5,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia cb f <literal> 
	{0xfe6d, &op_store_ia,	 13,   6,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia cb g <literal> 
	{0xfe7d, &op_store_ia,	 13,   7,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia cb h <literal> 
	{0xfe8d, &op_store_ia,	 13,   8,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia cb pc <literal> 
	{0xfe9d, &op_store_ia,	 13,   9,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia cb ra <literal> 
	{0xfead, &op_store_ia,	 13,  10,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia cb sb <literal> 
	{0xfebd, &op_store_ia,	 13,  11,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia cb sp <literal> 
	{0xfecd, &op_store_ia,	 13,  12,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia cb db <literal> 
	{0xfedd, &op_store_ia,	 13,  13,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia cb cb <literal> 
	{0xfeed, &op_store_ia,	 13,  14,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia cb pi <literal> 
	{0xfe0e, &op_store_ia,	 14,   0,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia pi a <literal> 
	{0xfe1e, &op_store_ia,	 14,   1,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia pi b <literal> 
	{0xfe2e, &op_store_ia,	 14,   2,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia pi c <literal> 
	{0xfe3e, &op_store_ia,	 14,   3,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia pi d <literal> 
	{0xfe4e, &op_store_ia,	 14,   4,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia pi e <literal> 
	{0xfe5e, &op_store_ia,	 14,   5,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia pi f <literal> 
	{0xfe6e, &op_store_ia,	 14,   6,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia pi g <literal> 
	{0xfe7e, &op_store_ia,	 14,   7,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia pi h <literal> 
	{0xfe8e, &op_store_ia,	 14,   8,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia pi pc <literal> 
	{0xfe9e, &op_store_ia,	 14,   9,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia pi ra <literal> 
	{0xfeae, &op_store_ia,	 14,  10,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia pi sb <literal> 
	{0xfebe, &op_store_ia,	 14,  11,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia pi sp <literal> 
	{0xfece, &op_store_ia,	 14,  12,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia pi db <literal> 
	{0xfede, &op_store_ia,	 14,  13,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia pi cb <literal> 
	{0xfeee, &op_store_ia,	 14,  14,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia pi pi <literal> 
	{0xfe0f, &op_store_ia,	 15,   0,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia status a <literal> 
	{0xfe1f, &op_store_ia,	 15,   1,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia status b <literal> 
	{0xfe2f, &op_store_ia,	 15,   2,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia status c <literal> 
	{0xfe3f, &op_store_ia,	 15,   3,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia status d <literal> 
	{0xfe4f, &op_store_ia,	 15,   4,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia status e <literal> 
	{0xfe5f, &op_store_ia,	 15,   5,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia status f <literal> 
	{0xfe6f, &op_store_ia,	 15,   6,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia status g <literal> 
	{0xfe7f, &op_store_ia,	 15,   7,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia status h <literal> 
	{0xfe8f, &op_store_ia,	 15,   8,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia status pc <literal> 
	{0xfe9f, &op_store_ia,	 15,   9,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia status ra <literal> 
	{0xfeaf, &op_store_ia,	 15,  10,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia status sb <literal> 
	{0xfebf, &op_store_ia,	 15,  11,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia status sp <literal> 
	{0xfecf, &op_store_ia,	 15,  12,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia status db <literal> 
	{0xfedf, &op_store_ia,	 15,  13,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia status cb <literal> 
	{0xfeef, &op_store_ia,	 15,  14,   8, 0xff, 0x00, 0x04, 0x02}, // store.dia status pi <literal> 
	{0xff00, &op_store_ia,	  0,   0,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia a a <literal> 
	{0xff10, &op_store_ia,	  0,   1,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia a b <literal> 
	{0xff20, &op_store_ia,	  0,   2,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia a c <literal> 
	{0xff30, &op_store_ia,	  0,   3,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia a d <literal> 
	{0xff40, &op_store_ia,	  0,   4,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia a e <literal> 
	{0xff50, &op_store_ia,	  0,   5,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia a f <literal> 
	{0xff60, &op_store_ia,	  0,   6,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia a g <literal> 
	{0xff70, &op_store_ia,	  0,   7,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia a h <literal> 
	{0xff80, &op_store_ia,	  0,   8,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia a pc <literal> 
	{0xff90, &op_store_ia,	  0,   9,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia a ra <literal> 
	{0xffa0, &op_store_ia,	  0,  10,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia a sb <literal> 
	{0xffb0, &op_store_ia,	  0,  11,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia a sp <literal> 
	{0xffc0, &op_store_ia,	  0,  12,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia a db <literal> 
	{0xffd0, &op_store_ia,	  0,  13,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia a cb <literal> 
	{0xffe0, &op_store_ia,	  0,  14,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia a pi <literal> 
	{0xff01, &op_store_ia,	  1,   0,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia b a <literal> 
	{0xff11, &op_store_ia,	  1,   1,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia b b <literal> 
	{0xff21, &op_store_ia,	  1,   2,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia b c <literal> 
	{0xff31, &op_store_ia,	  1,   3,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia b d <literal> 
	{0xff41, &op_store_ia,	  1,   4,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia b e <literal> 
	{0xff51, &op_store_ia,	  1,   5,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia b f <literal> 
	{0xff61, &op_store_ia,	  1,   6,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia b g <literal> 
	{0xff71, &op_store_ia,	  1,   7,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia b h <literal> 
	{0xff81, &op_store_ia,	  1,   8,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia b pc <literal> 
	{0xff91, &op_store_ia,	  1,   9,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia b ra <literal> 
	{0xffa1, &op_store_ia,	  1,  10,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia b sb <literal> 
	{0xffb1, &op_store_ia,	  1,  11,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia b sp <literal> 
	{0xffc1, &op_store_ia,	  1,  12,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia b db <literal> 
	{0xffd1, &op_store_ia,	  1,  13,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia b cb <literal> 
	{0xffe1, &op_store_ia,	  1,  14,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia b pi <literal> 
	{0xff02, &op_store_ia,	  2,   0,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia c a <literal> 
	{0xff12, &op_store_ia,	  2,   1,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia c b <literal> 
	{0xff22, &op_store_ia,	  2,   2,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia c c <literal> 
	{0xff32, &op_store_ia,	  2,   3,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia c d <literal> 
	{0xff42, &op_store_ia,	  2,   4,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia c e <literal> 
	{0xff52, &op_store_ia,	  2,   5,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia c f <literal> 
	{0xff62, &op_store_ia,	  2,   6,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia c g <literal> 
	{0xff72, &op_store_ia,	  2,   7,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia c h <literal> 
	{0xff82, &op_store_ia,	  2,   8,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia c pc <literal> 
	{0xff92, &op_store_ia,	  2,   9,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia c ra <literal> 
	{0xffa2, &op_store_ia,	  2,  10,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia c sb <literal> 
	{0xffb2, &op_store_ia,	  2,  11,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia c sp <literal> 
	{0xffc2, &op_store_ia,	  2,  12,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia c db <literal> 
	{0xffd2, &op_store_ia,	  2,  13,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia c cb <literal> 
	{0xffe2, &op_store_ia,	  2,  14,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia c pi <literal> 
	{0xff03, &op_store_ia,	  3,   0,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia d a <literal> 
	{0xff13, &op_store_ia,	  3,   1,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia d b <literal> 
	{0xff23, &op_store_ia,	  3,   2,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia d c <literal> 
	{0xff33, &op_store_ia,	  3,   3,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia d d <literal> 
	{0xff43, &op_store_ia,	  3,   4,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia d e <literal> 
	{0xff53, &op_store_ia,	  3,   5,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia d f <literal> 
	{0xff63, &op_store_ia,	  3,   6,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia d g <literal> 
	{0xff73, &op_store_ia,	  3,   7,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia d h <literal> 
	{0xff83, &op_store_ia,	  3,   8,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia d pc <literal> 
	{0xff93, &op_store_ia,	  3,   9,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia d ra <literal> 
	{0xffa3, &op_store_ia,	  3,  10,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia d sb <literal> 
	{0xffb3, &op_store_ia,	  3,  11,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia d sp <literal> 
	{0xffc3, &op_store_ia,	  3,  12,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia d db <literal> 
	{0xffd3, &op_store_ia,	  3,  13,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia d cb <literal> 
	{0xffe3, &op_store_ia,	  3,  14,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia d pi <literal> 
	{0xff04, &op_store_ia,	  4,   0,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia e a <literal> 
	{0xff14, &op_store_ia,	  4,   1,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia e b <literal> 
	{0xff24, &op_store_ia,	  4,   2,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia e c <literal> 
	{0xff34, &op_store_ia,	  4,   3,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia e d <literal> 
	{0xff44, &op_store_ia,	  4,   4,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia e e <literal> 
	{0xff54, &op_store_ia,	  4,   5,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia e f <literal> 
	{0xff64, &op_store_ia,	  4,   6,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia e g <literal> 
	{0xff74, &op_store_ia,	  4,   7,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia e h <literal> 
	{0xff84, &op_store_ia,	  4,   8,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia e pc <literal> 
	{0xff94, &op_store_ia,	  4,   9,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia e ra <literal> 
	{0xffa4, &op_store_ia,	  4,  10,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia e sb <literal> 
	{0xffb4, &op_store_ia,	  4,  11,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia e sp <literal> 
	{0xffc4, &op_store_ia,	  4,  12,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia e db <literal> 
	{0xffd4, &op_store_ia,	  4,  13,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia e cb <literal> 
	{0xffe4, &op_store_ia,	  4,  14,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia e pi <literal> 
	{0xff05, &op_store_ia,	  5,   0,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia f a <literal> 
	{0xff15, &op_store_ia,	  5,   1,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia f b <literal> 
	{0xff25, &op_store_ia,	  5,   2,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia f c <literal> 
	{0xff35, &op_store_ia,	  5,   3,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia f d <literal> 
	{0xff45, &op_store_ia,	  5,   4,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia f e <literal> 
	{0xff55, &op_store_ia,	  5,   5,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia f f <literal> 
	{0xff65, &op_store_ia,	  5,   6,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia f g <literal> 
	{0xff75, &op_store_ia,	  5,   7,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia f h <literal> 
	{0xff85, &op_store_ia,	  5,   8,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia f pc <literal> 
	{0xff95, &op_store_ia,	  5,   9,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia f ra <literal> 
	{0xffa5, &op_store_ia,	  5,  10,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia f sb <literal> 
	{0xffb5, &op_store_ia,	  5,  11,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia f sp <literal> 
	{0xffc5, &op_store_ia,	  5,  12,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia f db <literal> 
	{0xffd5, &op_store_ia,	  5,  13,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia f cb <literal> 
	{0xffe5, &op_store_ia,	  5,  14,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia f pi <literal> 
	{0xff06, &op_store_ia,	  6,   0,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia g a <literal> 
	{0xff16, &op_store_ia,	  6,   1,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia g b <literal> 
	{0xff26, &op_store_ia,	  6,   2,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia g c <literal> 
	{0xff36, &op_store_ia,	  6,   3,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia g d <literal> 
	{0xff46, &op_store_ia,	  6,   4,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia g e <literal> 
	{0xff56, &op_store_ia,	  6,   5,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia g f <literal> 
	{0xff66, &op_store_ia,	  6,   6,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia g g <literal> 
	{0xff76, &op_store_ia,	  6,   7,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia g h <literal> 
	{0xff86, &op_store_ia,	  6,   8,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia g pc <literal> 
	{0xff96, &op_store_ia,	  6,   9,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia g ra <literal> 
	{0xffa6, &op_store_ia,	  6,  10,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia g sb <literal> 
	{0xffb6, &op_store_ia,	  6,  11,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia g sp <literal> 
	{0xffc6, &op_store_ia,	  6,  12,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia g db <literal> 
	{0xffd6, &op_store_ia,	  6,  13,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia g cb <literal> 
	{0xffe6, &op_store_ia,	  6,  14,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia g pi <literal> 
	{0xff07, &op_store_ia,	  7,   0,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia h a <literal> 
	{0xff17, &op_store_ia,	  7,   1,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia h b <literal> 
	{0xff27, &op_store_ia,	  7,   2,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia h c <literal> 
	{0xff37, &op_store_ia,	  7,   3,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia h d <literal> 
	{0xff47, &op_store_ia,	  7,   4,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia h e <literal> 
	{0xff57, &op_store_ia,	  7,   5,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia h f <literal> 
	{0xff67, &op_store_ia,	  7,   6,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia h g <literal> 
	{0xff77, &op_store_ia,	  7,   7,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia h h <literal> 
	{0xff87, &op_store_ia,	  7,   8,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia h pc <literal> 
	{0xff97, &op_store_ia,	  7,   9,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia h ra <literal> 
	{0xffa7, &op_store_ia,	  7,  10,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia h sb <literal> 
	{0xffb7, &op_store_ia,	  7,  11,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia h sp <literal> 
	{0xffc7, &op_store_ia,	  7,  12,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia h db <literal> 
	{0xffd7, &op_store_ia,	  7,  13,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia h cb <literal> 
	{0xffe7, &op_store_ia,	  7,  14,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia h pi <literal> 
	{0xff08, &op_store_ia,	  8,   0,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia pc a <literal> 
	{0xff18, &op_store_ia,	  8,   1,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia pc b <literal> 
	{0xff28, &op_store_ia,	  8,   2,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia pc c <literal> 
	{0xff38, &op_store_ia,	  8,   3,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia pc d <literal> 
	{0xff48, &op_store_ia,	  8,   4,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia pc e <literal> 
	{0xff58, &op_store_ia,	  8,   5,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia pc f <literal> 
	{0xff68, &op_store_ia,	  8,   6,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia pc g <literal> 
	{0xff78, &op_store_ia,	  8,   7,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia pc h <literal> 
	{0xff88, &op_store_ia,	  8,   8,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia pc pc <literal> 
	{0xff98, &op_store_ia,	  8,   9,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia pc ra <literal> 
	{0xffa8, &op_store_ia,	  8,  10,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia pc sb <literal> 
	{0xffb8, &op_store_ia,	  8,  11,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia pc sp <literal> 
	{0xffc8, &op_store_ia,	  8,  12,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia pc db <literal> 
	{0xffd8, &op_store_ia,	  8,  13,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia pc cb <literal> 
	{0xffe8, &op_store_ia,	  8,  14,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia pc pi <literal> 
	{0xff09, &op_store_ia,	  9,   0,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia ra a <literal> 
	{0xff19, &op_store_ia,	  9,   1,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia ra b <literal> 
	{0xff29, &op_store_ia,	  9,   2,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia ra c <literal> 
	{0xff39, &op_store_ia,	  9,   3,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia ra d <literal> 
	{0xff49, &op_store_ia,	  9,   4,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia ra e <literal> 
	{0xff59, &op_store_ia,	  9,   5,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia ra f <literal> 
	{0xff69, &op_store_ia,	  9,   6,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia ra g <literal> 
	{0xff79, &op_store_ia,	  9,   7,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia ra h <literal> 
	{0xff89, &op_store_ia,	  9,   8,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia ra pc <literal> 
	{0xff99, &op_store_ia,	  9,   9,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia ra ra <literal> 
	{0xffa9, &op_store_ia,	  9,  10,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia ra sb <literal> 
	{0xffb9, &op_store_ia,	  9,  11,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia ra sp <literal> 
	{0xffc9, &op_store_ia,	  9,  12,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia ra db <literal> 
	{0xffd9, &op_store_ia,	  9,  13,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia ra cb <literal> 
	{0xffe9, &op_store_ia,	  9,  14,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia ra pi <literal> 
	{0xff0a, &op_store_ia,	 10,   0,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia sb a <literal> 
	{0xff1a, &op_store_ia,	 10,   1,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia sb b <literal> 
	{0xff2a, &op_store_ia,	 10,   2,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia sb c <literal> 
	{0xff3a, &op_store_ia,	 10,   3,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia sb d <literal> 
	{0xff4a, &op_store_ia,	 10,   4,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia sb e <literal> 
	{0xff5a, &op_store_ia,	 10,   5,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia sb f <literal> 
	{0xff6a, &op_store_ia,	 10,   6,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia sb g <literal> 
	{0xff7a, &op_store_ia,	 10,   7,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia sb h <literal> 
	{0xff8a, &op_store_ia,	 10,   8,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia sb pc <literal> 
	{0xff9a, &op_store_ia,	 10,   9,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia sb ra <literal> 
	{0xffaa, &op_store_ia,	 10,  10,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia sb sb <literal> 
	{0xffba, &op_store_ia,	 10,  11,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia sb sp <literal> 
	{0xffca, &op_store_ia,	 10,  12,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia sb db <literal> 
	{0xffda, &op_store_ia,	 10,  13,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia sb cb <literal> 
	{0xffea, &op_store_ia,	 10,  14,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia sb pi <literal> 
	{0xff0b, &op_store_ia,	 11,   0,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia sp a <literal> 
	{0xff1b, &op_store_ia,	 11,   1,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia sp b <literal> 
	{0xff2b, &op_store_ia,	 11,   2,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia sp c <literal> 
	{0xff3b, &op_store_ia,	 11,   3,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia sp d <literal> 
	{0xff4b, &op_store_ia,	 11,   4,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia sp e <literal> 
	{0xff5b, &op_store_ia,	 11,   5,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia sp f <literal> 
	{0xff6b, &op_store_ia,	 11,   6,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia sp g <literal> 
	{0xff7b, &op_store_ia,	 11,   7,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia sp h <literal> 
	{0xff8b, &op_store_ia,	 11,   8,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia sp pc <literal> 
	{0xff9b, &op_store_ia,	 11,   9,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia sp ra <literal> 
	{0xffab, &op_store_ia,	 11,  10,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia sp sb <literal> 
	{0xffbb, &op_store_ia,	 11,  11,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia sp sp <literal> 
	{0xffcb, &op_store_ia,	 11,  12,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia sp db <literal> 
	{0xffdb, &op_store_ia,	 11,  13,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia sp cb <literal> 
	{0xffeb, &op_store_ia,	 11,  14,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia sp pi <literal> 
	{0xff0c, &op_store_ia,	 12,   0,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia db a <literal> 
	{0xff1c, &op_store_ia,	 12,   1,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia db b <literal> 
	{0xff2c, &op_store_ia,	 12,   2,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia db c <literal> 
	{0xff3c, &op_store_ia,	 12,   3,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia db d <literal> 
	{0xff4c, &op_store_ia,	 12,   4,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia db e <literal> 
	{0xff5c, &op_store_ia,	 12,   5,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia db f <literal> 
	{0xff6c, &op_store_ia,	 12,   6,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia db g <literal> 
	{0xff7c, &op_store_ia,	 12,   7,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia db h <literal> 
	{0xff8c, &op_store_ia,	 12,   8,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia db pc <literal> 
	{0xff9c, &op_store_ia,	 12,   9,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia db ra <literal> 
	{0xffac, &op_store_ia,	 12,  10,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia db sb <literal> 
	{0xffbc, &op_store_ia,	 12,  11,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia db sp <literal> 
	{0xffcc, &op_store_ia,	 12,  12,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia db db <literal> 
	{0xffdc, &op_store_ia,	 12,  13,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia db cb <literal> 
	{0xffec, &op_store_ia,	 12,  14,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia db pi <literal> 
	{0xff0d, &op_store_ia,	 13,   0,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia cb a <literal> 
	{0xff1d, &op_store_ia,	 13,   1,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia cb b <literal> 
	{0xff2d, &op_store_ia,	 13,   2,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia cb c <literal> 
	{0xff3d, &op_store_ia,	 13,   3,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia cb d <literal> 
	{0xff4d, &op_store_ia,	 13,   4,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia cb e <literal> 
	{0xff5d, &op_store_ia,	 13,   5,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia cb f <literal> 
	{0xff6d, &op_store_ia,	 13,   6,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia cb g <literal> 
	{0xff7d, &op_store_ia,	 13,   7,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia cb h <literal> 
	{0xff8d, &op_store_ia,	 13,   8,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia cb pc <literal> 
	{0xff9d, &op_store_ia,	 13,   9,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia cb ra <literal> 
	{0xffad, &op_store_ia,	 13,  10,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia cb sb <literal> 
	{0xffbd, &op_store_ia,	 13,  11,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia cb sp <literal> 
	{0xffcd, &op_store_ia,	 13,  12,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia cb db <literal> 
	{0xffdd, &op_store_ia,	 13,  13,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia cb cb <literal> 
	{0xffed, &op_store_ia,	 13,  14,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia cb pi <literal> 
	{0xff0e, &op_store_ia,	 14,   0,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia pi a <literal> 
	{0xff1e, &op_store_ia,	 14,   1,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia pi b <literal> 
	{0xff2e, &op_store_ia,	 14,   2,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia pi c <literal> 
	{0xff3e, &op_store_ia,	 14,   3,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia pi d <literal> 
	{0xff4e, &op_store_ia,	 14,   4,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia pi e <literal> 
	{0xff5e, &op_store_ia,	 14,   5,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia pi f <literal> 
	{0xff6e, &op_store_ia,	 14,   6,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia pi g <literal> 
	{0xff7e, &op_store_ia,	 14,   7,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia pi h <literal> 
	{0xff8e, &op_store_ia,	 14,   8,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia pi pc <literal> 
	{0xff9e, &op_store_ia,	 14,   9,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia pi ra <literal> 
	{0xffae, &op_store_ia,	 14,  10,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia pi sb <literal> 
	{0xffbe, &op_store_ia,	 14,  11,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia pi sp <literal> 
	{0xffce, &op_store_ia,	 14,  12,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia pi db <literal> 
	{0xffde, &op_store_ia,	 14,  13,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia pi cb <literal> 
	{0xffee, &op_store_ia,	 14,  14,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia pi pi <literal> 
	{0xff0f, &op_store_ia,	 15,   0,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia status a <literal> 
	{0xff1f, &op_store_ia,	 15,   1,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia status b <literal> 
	{0xff2f, &op_store_ia,	 15,   2,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia status c <literal> 
	{0xff3f, &op_store_ia,	 15,   3,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia status d <literal> 
	{0xff4f, &op_store_ia,	 15,   4,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia status e <literal> 
	{0xff5f, &op_store_ia,	 15,   5,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia status f <literal> 
	{0xff6f, &op_store_ia,	 15,   6,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia status g <literal> 
	{0xff7f, &op_store_ia,	 15,   7,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia status h <literal> 
	{0xff8f, &op_store_ia,	 15,   8,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia status pc <literal> 
	{0xff9f, &op_store_ia,	 15,   9,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia status ra <literal> 
	{0xffaf, &op_store_ia,	 15,  10,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia status sb <literal> 
	{0xffbf, &op_store_ia,	 15,  11,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia status sp <literal> 
	{0xffcf, &op_store_ia,	 15,  12,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia status db <literal> 
	{0xffdf, &op_store_ia,	 15,  13,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia status cb <literal> 
	{0xffef, &op_store_ia,	 15,  14,   8, 0xff, 0x00, 0x04, 0x04}, // store.ia status pi <literal> 
    {0x2800, &op_cout,	255, 255, 255, 0x00, 0x00, 0x00, 0x00}, // cout 0   
    {0x2801, &op_cout,	255, 255, 255, 0x01, 0x00, 0x00, 0x00}, // cout 1   
    {0x2802, &op_cout,	255, 255, 255, 0x02, 0x00, 0x00, 0x00}, // cout 2   
    {0x2803, &op_cout,	255, 255, 255, 0x03, 0x00, 0x00, 0x00}, // cout 3   
    {0x2804, &op_cout,	255, 255, 255, 0x04, 0x00, 0x00, 0x00}, // cout 4   
    {0x2805, &op_cout,	255, 255, 255, 0x05, 0x00, 0x00, 0x00}, // cout 5   
    {0x2806, &op_cout,	255, 255, 255, 0x06, 0x00, 0x00, 0x00}, // cout 6   
    {0x2807, &op_cout,	255, 255, 255, 0x07, 0x00, 0x00, 0x00}, // cout 7   
    {0x2808, &op_cout,	255, 255, 255, 0x08, 0x00, 0x00, 0x00}, // cout 8   
    {0x2809, &op_cout,	255, 255, 255, 0x09, 0x00, 0x00, 0x00}, // cout 9   
    {0x280a, &op_cout,	255, 255, 255, 0x0a, 0x00, 0x00, 0x00}, // cout 10   
    {0x280b, &op_cout,	255, 255, 255, 0x0b, 0x00, 0x00, 0x00}, // cout 11   
    {0x280c, &op_cout,	255, 255, 255, 0x0c, 0x00, 0x00, 0x00}, // cout 12   
    {0x280d, &op_cout,	255, 255, 255, 0x0d, 0x00, 0x00, 0x00}, // cout 13   
    {0x280e, &op_cout,	255, 255, 255, 0x0e, 0x00, 0x00, 0x00}, // cout 14   
    {0x280f, &op_cout,	255, 255, 255, 0x0f, 0x00, 0x00, 0x00}, // cout 15   
    {0x2810, &op_cout,	255, 255, 255, 0x10, 0x00, 0x00, 0x00}, // cout 16   
    {0x2811, &op_cout,	255, 255, 255, 0x11, 0x00, 0x00, 0x00}, // cout 17   
    {0x2812, &op_cout,	255, 255, 255, 0x12, 0x00, 0x00, 0x00}, // cout 18   
    {0x2813, &op_cout,	255, 255, 255, 0x13, 0x00, 0x00, 0x00}, // cout 19   
    {0x2814, &op_cout,	255, 255, 255, 0x14, 0x00, 0x00, 0x00}, // cout 20   
    {0x2815, &op_cout,	255, 255, 255, 0x15, 0x00, 0x00, 0x00}, // cout 21   
    {0x2816, &op_cout,	255, 255, 255, 0x16, 0x00, 0x00, 0x00}, // cout 22   
    {0x2817, &op_cout,	255, 255, 255, 0x17, 0x00, 0x00, 0x00}, // cout 23   
    {0x2818, &op_cout,	255, 255, 255, 0x18, 0x00, 0x00, 0x00}, // cout 24   
    {0x2819, &op_cout,	255, 255, 255, 0x19, 0x00, 0x00, 0x00}, // cout 25   
    {0x281a, &op_cout,	255, 255, 255, 0x1a, 0x00, 0x00, 0x00}, // cout 26   
    {0x281b, &op_cout,	255, 255, 255, 0x1b, 0x00, 0x00, 0x00}, // cout 27   
    {0x281c, &op_cout,	255, 255, 255, 0x1c, 0x00, 0x00, 0x00}, // cout 28   
    {0x281d, &op_cout,	255, 255, 255, 0x1d, 0x00, 0x00, 0x00}, // cout 29   
    {0x281e, &op_cout,	255, 255, 255, 0x1e, 0x00, 0x00, 0x00}, // cout 30   
    {0x281f, &op_cout,	255, 255, 255, 0x1f, 0x00, 0x00, 0x00}, // cout 31   
    {0x2820, &op_cout,	255, 255, 255, 0x20, 0x00, 0x00, 0x00}, // cout 32   
    {0x2821, &op_cout,	255, 255, 255, 0x21, 0x00, 0x00, 0x00}, // cout 33   
    {0x2822, &op_cout,	255, 255, 255, 0x22, 0x00, 0x00, 0x00}, // cout 34   
    {0x2823, &op_cout,	255, 255, 255, 0x23, 0x00, 0x00, 0x00}, // cout 35   
    {0x2824, &op_cout,	255, 255, 255, 0x24, 0x00, 0x00, 0x00}, // cout 36   
    {0x2825, &op_cout,	255, 255, 255, 0x25, 0x00, 0x00, 0x00}, // cout 37   
    {0x2826, &op_cout,	255, 255, 255, 0x26, 0x00, 0x00, 0x00}, // cout 38   
    {0x2827, &op_cout,	255, 255, 255, 0x27, 0x00, 0x00, 0x00}, // cout 39   
    {0x2828, &op_cout,	255, 255, 255, 0x28, 0x00, 0x00, 0x00}, // cout 40   
    {0x2829, &op_cout,	255, 255, 255, 0x29, 0x00, 0x00, 0x00}, // cout 41   
    {0x282a, &op_cout,	255, 255, 255, 0x2a, 0x00, 0x00, 0x00}, // cout 42   
    {0x282b, &op_cout,	255, 255, 255, 0x2b, 0x00, 0x00, 0x00}, // cout 43   
    {0x282c, &op_cout,	255, 255, 255, 0x2c, 0x00, 0x00, 0x00}, // cout 44   
    {0x282d, &op_cout,	255, 255, 255, 0x2d, 0x00, 0x00, 0x00}, // cout 45   
    {0x282e, &op_cout,	255, 255, 255, 0x2e, 0x00, 0x00, 0x00}, // cout 46   
    {0x282f, &op_cout,	255, 255, 255, 0x2f, 0x00, 0x00, 0x00}, // cout 47   
    {0x2830, &op_cout,	255, 255, 255, 0x30, 0x00, 0x00, 0x00}, // cout 48   
    {0x2831, &op_cout,	255, 255, 255, 0x31, 0x00, 0x00, 0x00}, // cout 49   
    {0x2832, &op_cout,	255, 255, 255, 0x32, 0x00, 0x00, 0x00}, // cout 50   
    {0x2833, &op_cout,	255, 255, 255, 0x33, 0x00, 0x00, 0x00}, // cout 51   
    {0x2834, &op_cout,	255, 255, 255, 0x34, 0x00, 0x00, 0x00}, // cout 52   
    {0x2835, &op_cout,	255, 255, 255, 0x35, 0x00, 0x00, 0x00}, // cout 53   
    {0x2836, &op_cout,	255, 255, 255, 0x36, 0x00, 0x00, 0x00}, // cout 54   
    {0x2837, &op_cout,	255, 255, 255, 0x37, 0x00, 0x00, 0x00}, // cout 55   
    {0x2838, &op_cout,	255, 255, 255, 0x38, 0x00, 0x00, 0x00}, // cout 56   
    {0x2839, &op_cout,	255, 255, 255, 0x39, 0x00, 0x00, 0x00}, // cout 57   
    {0x283a, &op_cout,	255, 255, 255, 0x3a, 0x00, 0x00, 0x00}, // cout 58   
    {0x283b, &op_cout,	255, 255, 255, 0x3b, 0x00, 0x00, 0x00}, // cout 59   
    {0x283c, &op_cout,	255, 255, 255, 0x3c, 0x00, 0x00, 0x00}, // cout 60   
    {0x283d, &op_cout,	255, 255, 255, 0x3d, 0x00, 0x00, 0x00}, // cout 61   
    {0x283e, &op_cout,	255, 255, 255, 0x3e, 0x00, 0x00, 0x00}, // cout 62   
    {0x283f, &op_cout,	255, 255, 255, 0x3f, 0x00, 0x00, 0x00}, // cout 63   
    {0x2840, &op_cout,	255, 255, 255, 0x40, 0x00, 0x00, 0x00}, // cout 64   
    {0x2841, &op_cout,	255, 255, 255, 0x41, 0x00, 0x00, 0x00}, // cout 65   
    {0x2842, &op_cout,	255, 255, 255, 0x42, 0x00, 0x00, 0x00}, // cout 66   
    {0x2843, &op_cout,	255, 255, 255, 0x43, 0x00, 0x00, 0x00}, // cout 67   
    {0x2844, &op_cout,	255, 255, 255, 0x44, 0x00, 0x00, 0x00}, // cout 68   
    {0x2845, &op_cout,	255, 255, 255, 0x45, 0x00, 0x00, 0x00}, // cout 69   
    {0x2846, &op_cout,	255, 255, 255, 0x46, 0x00, 0x00, 0x00}, // cout 70   
    {0x2847, &op_cout,	255, 255, 255, 0x47, 0x00, 0x00, 0x00}, // cout 71   
    {0x2848, &op_cout,	255, 255, 255, 0x48, 0x00, 0x00, 0x00}, // cout 72   
    {0x2849, &op_cout,	255, 255, 255, 0x49, 0x00, 0x00, 0x00}, // cout 73   
    {0x284a, &op_cout,	255, 255, 255, 0x4a, 0x00, 0x00, 0x00}, // cout 74   
    {0x284b, &op_cout,	255, 255, 255, 0x4b, 0x00, 0x00, 0x00}, // cout 75   
    {0x284c, &op_cout,	255, 255, 255, 0x4c, 0x00, 0x00, 0x00}, // cout 76   
    {0x284d, &op_cout,	255, 255, 255, 0x4d, 0x00, 0x00, 0x00}, // cout 77   
    {0x284e, &op_cout,	255, 255, 255, 0x4e, 0x00, 0x00, 0x00}, // cout 78   
    {0x284f, &op_cout,	255, 255, 255, 0x4f, 0x00, 0x00, 0x00}, // cout 79   
    {0x2850, &op_cout,	255, 255, 255, 0x50, 0x00, 0x00, 0x00}, // cout 80   
    {0x2851, &op_cout,	255, 255, 255, 0x51, 0x00, 0x00, 0x00}, // cout 81   
    {0x2852, &op_cout,	255, 255, 255, 0x52, 0x00, 0x00, 0x00}, // cout 82   
    {0x2853, &op_cout,	255, 255, 255, 0x53, 0x00, 0x00, 0x00}, // cout 83   
    {0x2854, &op_cout,	255, 255, 255, 0x54, 0x00, 0x00, 0x00}, // cout 84   
    {0x2855, &op_cout,	255, 255, 255, 0x55, 0x00, 0x00, 0x00}, // cout 85   
    {0x2856, &op_cout,	255, 255, 255, 0x56, 0x00, 0x00, 0x00}, // cout 86   
    {0x2857, &op_cout,	255, 255, 255, 0x57, 0x00, 0x00, 0x00}, // cout 87   
    {0x2858, &op_cout,	255, 255, 255, 0x58, 0x00, 0x00, 0x00}, // cout 88   
    {0x2859, &op_cout,	255, 255, 255, 0x59, 0x00, 0x00, 0x00}, // cout 89   
    {0x285a, &op_cout,	255, 255, 255, 0x5a, 0x00, 0x00, 0x00}, // cout 90   
    {0x285b, &op_cout,	255, 255, 255, 0x5b, 0x00, 0x00, 0x00}, // cout 91   
    {0x285c, &op_cout,	255, 255, 255, 0x5c, 0x00, 0x00, 0x00}, // cout 92   
    {0x285d, &op_cout,	255, 255, 255, 0x5d, 0x00, 0x00, 0x00}, // cout 93   
    {0x285e, &op_cout,	255, 255, 255, 0x5e, 0x00, 0x00, 0x00}, // cout 94   
    {0x285f, &op_cout,	255, 255, 255, 0x5f, 0x00, 0x00, 0x00}, // cout 95   
    {0x2860, &op_cout,	255, 255, 255, 0x60, 0x00, 0x00, 0x00}, // cout 96   
    {0x2861, &op_cout,	255, 255, 255, 0x61, 0x00, 0x00, 0x00}, // cout 97   
    {0x2862, &op_cout,	255, 255, 255, 0x62, 0x00, 0x00, 0x00}, // cout 98   
    {0x2863, &op_cout,	255, 255, 255, 0x63, 0x00, 0x00, 0x00}, // cout 99   
    {0x2864, &op_cout,	255, 255, 255, 0x64, 0x00, 0x00, 0x00}, // cout 100   
    {0x2865, &op_cout,	255, 255, 255, 0x65, 0x00, 0x00, 0x00}, // cout 101   
    {0x2866, &op_cout,	255, 255, 255, 0x66, 0x00, 0x00, 0x00}, // cout 102   
    {0x2867, &op_cout,	255, 255, 255, 0x67, 0x00, 0x00, 0x00}, // cout 103   
    {0x2868, &op_cout,	255, 255, 255, 0x68, 0x00, 0x00, 0x00}, // cout 104   
    {0x2869, &op_cout,	255, 255, 255, 0x69, 0x00, 0x00, 0x00}, // cout 105   
    {0x286a, &op_cout,	255, 255, 255, 0x6a, 0x00, 0x00, 0x00}, // cout 106   
    {0x286b, &op_cout,	255, 255, 255, 0x6b, 0x00, 0x00, 0x00}, // cout 107   
    {0x286c, &op_cout,	255, 255, 255, 0x6c, 0x00, 0x00, 0x00}, // cout 108   
    {0x286d, &op_cout,	255, 255, 255, 0x6d, 0x00, 0x00, 0x00}, // cout 109   
    {0x286e, &op_cout,	255, 255, 255, 0x6e, 0x00, 0x00, 0x00}, // cout 110   
    {0x286f, &op_cout,	255, 255, 255, 0x6f, 0x00, 0x00, 0x00}, // cout 111   
    {0x2870, &op_cout,	255, 255, 255, 0x70, 0x00, 0x00, 0x00}, // cout 112   
    {0x2871, &op_cout,	255, 255, 255, 0x71, 0x00, 0x00, 0x00}, // cout 113   
    {0x2872, &op_cout,	255, 255, 255, 0x72, 0x00, 0x00, 0x00}, // cout 114   
    {0x2873, &op_cout,	255, 255, 255, 0x73, 0x00, 0x00, 0x00}, // cout 115   
    {0x2874, &op_cout,	255, 255, 255, 0x74, 0x00, 0x00, 0x00}, // cout 116   
    {0x2875, &op_cout,	255, 255, 255, 0x75, 0x00, 0x00, 0x00}, // cout 117   
    {0x2876, &op_cout,	255, 255, 255, 0x76, 0x00, 0x00, 0x00}, // cout 118   
    {0x2877, &op_cout,	255, 255, 255, 0x77, 0x00, 0x00, 0x00}, // cout 119   
    {0x2878, &op_cout,	255, 255, 255, 0x78, 0x00, 0x00, 0x00}, // cout 120   
    {0x2879, &op_cout,	255, 255, 255, 0x79, 0x00, 0x00, 0x00}, // cout 121   
    {0x287a, &op_cout,	255, 255, 255, 0x7a, 0x00, 0x00, 0x00}, // cout 122   
    {0x287b, &op_cout,	255, 255, 255, 0x7b, 0x00, 0x00, 0x00}, // cout 123   
    {0x287c, &op_cout,	255, 255, 255, 0x7c, 0x00, 0x00, 0x00}, // cout 124   
    {0x287d, &op_cout,	255, 255, 255, 0x7d, 0x00, 0x00, 0x00}, // cout 125   
    {0x287e, &op_cout,	255, 255, 255, 0x7e, 0x00, 0x00, 0x00}, // cout 126   
    {0x287f, &op_cout,	255, 255, 255, 0x7f, 0x00, 0x00, 0x00}, // cout 127   
    {0x2880, &op_cout,	255, 255, 255, 0x80, 0x00, 0x00, 0x00}, // cout 128   
    {0x2881, &op_cout,	255, 255, 255, 0x81, 0x00, 0x00, 0x00}, // cout 129   
    {0x2882, &op_cout,	255, 255, 255, 0x82, 0x00, 0x00, 0x00}, // cout 130   
    {0x2883, &op_cout,	255, 255, 255, 0x83, 0x00, 0x00, 0x00}, // cout 131   
    {0x2884, &op_cout,	255, 255, 255, 0x84, 0x00, 0x00, 0x00}, // cout 132   
    {0x2885, &op_cout,	255, 255, 255, 0x85, 0x00, 0x00, 0x00}, // cout 133   
    {0x2886, &op_cout,	255, 255, 255, 0x86, 0x00, 0x00, 0x00}, // cout 134   
    {0x2887, &op_cout,	255, 255, 255, 0x87, 0x00, 0x00, 0x00}, // cout 135   
    {0x2888, &op_cout,	255, 255, 255, 0x88, 0x00, 0x00, 0x00}, // cout 136   
    {0x2889, &op_cout,	255, 255, 255, 0x89, 0x00, 0x00, 0x00}, // cout 137   
    {0x288a, &op_cout,	255, 255, 255, 0x8a, 0x00, 0x00, 0x00}, // cout 138   
    {0x288b, &op_cout,	255, 255, 255, 0x8b, 0x00, 0x00, 0x00}, // cout 139   
    {0x288c, &op_cout,	255, 255, 255, 0x8c, 0x00, 0x00, 0x00}, // cout 140   
    {0x288d, &op_cout,	255, 255, 255, 0x8d, 0x00, 0x00, 0x00}, // cout 141   
    {0x288e, &op_cout,	255, 255, 255, 0x8e, 0x00, 0x00, 0x00}, // cout 142   
    {0x288f, &op_cout,	255, 255, 255, 0x8f, 0x00, 0x00, 0x00}, // cout 143   
    {0x2890, &op_cout,	255, 255, 255, 0x90, 0x00, 0x00, 0x00}, // cout 144   
    {0x2891, &op_cout,	255, 255, 255, 0x91, 0x00, 0x00, 0x00}, // cout 145   
    {0x2892, &op_cout,	255, 255, 255, 0x92, 0x00, 0x00, 0x00}, // cout 146   
    {0x2893, &op_cout,	255, 255, 255, 0x93, 0x00, 0x00, 0x00}, // cout 147   
    {0x2894, &op_cout,	255, 255, 255, 0x94, 0x00, 0x00, 0x00}, // cout 148   
    {0x2895, &op_cout,	255, 255, 255, 0x95, 0x00, 0x00, 0x00}, // cout 149   
    {0x2896, &op_cout,	255, 255, 255, 0x96, 0x00, 0x00, 0x00}, // cout 150   
    {0x2897, &op_cout,	255, 255, 255, 0x97, 0x00, 0x00, 0x00}, // cout 151   
    {0x2898, &op_cout,	255, 255, 255, 0x98, 0x00, 0x00, 0x00}, // cout 152   
    {0x2899, &op_cout,	255, 255, 255, 0x99, 0x00, 0x00, 0x00}, // cout 153   
    {0x289a, &op_cout,	255, 255, 255, 0x9a, 0x00, 0x00, 0x00}, // cout 154   
    {0x289b, &op_cout,	255, 255, 255, 0x9b, 0x00, 0x00, 0x00}, // cout 155   
    {0x289c, &op_cout,	255, 255, 255, 0x9c, 0x00, 0x00, 0x00}, // cout 156   
    {0x289d, &op_cout,	255, 255, 255, 0x9d, 0x00, 0x00, 0x00}, // cout 157   
    {0x289e, &op_cout,	255, 255, 255, 0x9e, 0x00, 0x00, 0x00}, // cout 158   
    {0x289f, &op_cout,	255, 255, 255, 0x9f, 0x00, 0x00, 0x00}, // cout 159   
    {0x28a0, &op_cout,	255, 255, 255, 0xa0, 0x00, 0x00, 0x00}, // cout 160   
    {0x28a1, &op_cout,	255, 255, 255, 0xa1, 0x00, 0x00, 0x00}, // cout 161   
    {0x28a2, &op_cout,	255, 255, 255, 0xa2, 0x00, 0x00, 0x00}, // cout 162   
    {0x28a3, &op_cout,	255, 255, 255, 0xa3, 0x00, 0x00, 0x00}, // cout 163   
    {0x28a4, &op_cout,	255, 255, 255, 0xa4, 0x00, 0x00, 0x00}, // cout 164   
    {0x28a5, &op_cout,	255, 255, 255, 0xa5, 0x00, 0x00, 0x00}, // cout 165   
    {0x28a6, &op_cout,	255, 255, 255, 0xa6, 0x00, 0x00, 0x00}, // cout 166   
    {0x28a7, &op_cout,	255, 255, 255, 0xa7, 0x00, 0x00, 0x00}, // cout 167   
    {0x28a8, &op_cout,	255, 255, 255, 0xa8, 0x00, 0x00, 0x00}, // cout 168   
    {0x28a9, &op_cout,	255, 255, 255, 0xa9, 0x00, 0x00, 0x00}, // cout 169   
    {0x28aa, &op_cout,	255, 255, 255, 0xaa, 0x00, 0x00, 0x00}, // cout 170   
    {0x28ab, &op_cout,	255, 255, 255, 0xab, 0x00, 0x00, 0x00}, // cout 171   
    {0x28ac, &op_cout,	255, 255, 255, 0xac, 0x00, 0x00, 0x00}, // cout 172   
    {0x28ad, &op_cout,	255, 255, 255, 0xad, 0x00, 0x00, 0x00}, // cout 173   
    {0x28ae, &op_cout,	255, 255, 255, 0xae, 0x00, 0x00, 0x00}, // cout 174   
    {0x28af, &op_cout,	255, 255, 255, 0xaf, 0x00, 0x00, 0x00}, // cout 175   
    {0x28b0, &op_cout,	255, 255, 255, 0xb0, 0x00, 0x00, 0x00}, // cout 176   
    {0x28b1, &op_cout,	255, 255, 255, 0xb1, 0x00, 0x00, 0x00}, // cout 177   
    {0x28b2, &op_cout,	255, 255, 255, 0xb2, 0x00, 0x00, 0x00}, // cout 178   
    {0x28b3, &op_cout,	255, 255, 255, 0xb3, 0x00, 0x00, 0x00}, // cout 179   
    {0x28b4, &op_cout,	255, 255, 255, 0xb4, 0x00, 0x00, 0x00}, // cout 180   
    {0x28b5, &op_cout,	255, 255, 255, 0xb5, 0x00, 0x00, 0x00}, // cout 181   
    {0x28b6, &op_cout,	255, 255, 255, 0xb6, 0x00, 0x00, 0x00}, // cout 182   
    {0x28b7, &op_cout,	255, 255, 255, 0xb7, 0x00, 0x00, 0x00}, // cout 183   
    {0x28b8, &op_cout,	255, 255, 255, 0xb8, 0x00, 0x00, 0x00}, // cout 184   
    {0x28b9, &op_cout,	255, 255, 255, 0xb9, 0x00, 0x00, 0x00}, // cout 185   
    {0x28ba, &op_cout,	255, 255, 255, 0xba, 0x00, 0x00, 0x00}, // cout 186   
    {0x28bb, &op_cout,	255, 255, 255, 0xbb, 0x00, 0x00, 0x00}, // cout 187   
    {0x28bc, &op_cout,	255, 255, 255, 0xbc, 0x00, 0x00, 0x00}, // cout 188   
    {0x28bd, &op_cout,	255, 255, 255, 0xbd, 0x00, 0x00, 0x00}, // cout 189   
    {0x28be, &op_cout,	255, 255, 255, 0xbe, 0x00, 0x00, 0x00}, // cout 190   
    {0x28bf, &op_cout,	255, 255, 255, 0xbf, 0x00, 0x00, 0x00}, // cout 191   
    {0x28c0, &op_cout,	255, 255, 255, 0xc0, 0x00, 0x00, 0x00}, // cout 192   
    {0x28c1, &op_cout,	255, 255, 255, 0xc1, 0x00, 0x00, 0x00}, // cout 193   
    {0x28c2, &op_cout,	255, 255, 255, 0xc2, 0x00, 0x00, 0x00}, // cout 194   
    {0x28c3, &op_cout,	255, 255, 255, 0xc3, 0x00, 0x00, 0x00}, // cout 195   
    {0x28c4, &op_cout,	255, 255, 255, 0xc4, 0x00, 0x00, 0x00}, // cout 196   
    {0x28c5, &op_cout,	255, 255, 255, 0xc5, 0x00, 0x00, 0x00}, // cout 197   
    {0x28c6, &op_cout,	255, 255, 255, 0xc6, 0x00, 0x00, 0x00}, // cout 198   
    {0x28c7, &op_cout,	255, 255, 255, 0xc7, 0x00, 0x00, 0x00}, // cout 199   
    {0x28c8, &op_cout,	255, 255, 255, 0xc8, 0x00, 0x00, 0x00}, // cout 200   
    {0x28c9, &op_cout,	255, 255, 255, 0xc9, 0x00, 0x00, 0x00}, // cout 201   
    {0x28ca, &op_cout,	255, 255, 255, 0xca, 0x00, 0x00, 0x00}, // cout 202   
    {0x28cb, &op_cout,	255, 255, 255, 0xcb, 0x00, 0x00, 0x00}, // cout 203   
    {0x28cc, &op_cout,	255, 255, 255, 0xcc, 0x00, 0x00, 0x00}, // cout 204   
    {0x28cd, &op_cout,	255, 255, 255, 0xcd, 0x00, 0x00, 0x00}, // cout 205   
    {0x28ce, &op_cout,	255, 255, 255, 0xce, 0x00, 0x00, 0x00}, // cout 206   
    {0x28cf, &op_cout,	255, 255, 255, 0xcf, 0x00, 0x00, 0x00}, // cout 207   
    {0x28d0, &op_cout,	255, 255, 255, 0xd0, 0x00, 0x00, 0x00}, // cout 208   
    {0x28d1, &op_cout,	255, 255, 255, 0xd1, 0x00, 0x00, 0x00}, // cout 209   
    {0x28d2, &op_cout,	255, 255, 255, 0xd2, 0x00, 0x00, 0x00}, // cout 210   
    {0x28d3, &op_cout,	255, 255, 255, 0xd3, 0x00, 0x00, 0x00}, // cout 211   
    {0x28d4, &op_cout,	255, 255, 255, 0xd4, 0x00, 0x00, 0x00}, // cout 212   
    {0x28d5, &op_cout,	255, 255, 255, 0xd5, 0x00, 0x00, 0x00}, // cout 213   
    {0x28d6, &op_cout,	255, 255, 255, 0xd6, 0x00, 0x00, 0x00}, // cout 214   
    {0x28d7, &op_cout,	255, 255, 255, 0xd7, 0x00, 0x00, 0x00}, // cout 215   
    {0x28d8, &op_cout,	255, 255, 255, 0xd8, 0x00, 0x00, 0x00}, // cout 216   
    {0x28d9, &op_cout,	255, 255, 255, 0xd9, 0x00, 0x00, 0x00}, // cout 217   
    {0x28da, &op_cout,	255, 255, 255, 0xda, 0x00, 0x00, 0x00}, // cout 218   
    {0x28db, &op_cout,	255, 255, 255, 0xdb, 0x00, 0x00, 0x00}, // cout 219   
    {0x28dc, &op_cout,	255, 255, 255, 0xdc, 0x00, 0x00, 0x00}, // cout 220   
    {0x28dd, &op_cout,	255, 255, 255, 0xdd, 0x00, 0x00, 0x00}, // cout 221   
    {0x28de, &op_cout,	255, 255, 255, 0xde, 0x00, 0x00, 0x00}, // cout 222   
    {0x28df, &op_cout,	255, 255, 255, 0xdf, 0x00, 0x00, 0x00}, // cout 223   
    {0x28e0, &op_cout,	255, 255, 255, 0xe0, 0x00, 0x00, 0x00}, // cout 224   
    {0x28e1, &op_cout,	255, 255, 255, 0xe1, 0x00, 0x00, 0x00}, // cout 225   
    {0x28e2, &op_cout,	255, 255, 255, 0xe2, 0x00, 0x00, 0x00}, // cout 226   
    {0x28e3, &op_cout,	255, 255, 255, 0xe3, 0x00, 0x00, 0x00}, // cout 227   
    {0x28e4, &op_cout,	255, 255, 255, 0xe4, 0x00, 0x00, 0x00}, // cout 228   
    {0x28e5, &op_cout,	255, 255, 255, 0xe5, 0x00, 0x00, 0x00}, // cout 229   
    {0x28e6, &op_cout,	255, 255, 255, 0xe6, 0x00, 0x00, 0x00}, // cout 230   
    {0x28e7, &op_cout,	255, 255, 255, 0xe7, 0x00, 0x00, 0x00}, // cout 231   
    {0x28e8, &op_cout,	255, 255, 255, 0xe8, 0x00, 0x00, 0x00}, // cout 232   
    {0x28e9, &op_cout,	255, 255, 255, 0xe9, 0x00, 0x00, 0x00}, // cout 233   
    {0x28ea, &op_cout,	255, 255, 255, 0xea, 0x00, 0x00, 0x00}, // cout 234   
    {0x28eb, &op_cout,	255, 255, 255, 0xeb, 0x00, 0x00, 0x00}, // cout 235   
    {0x28ec, &op_cout,	255, 255, 255, 0xec, 0x00, 0x00, 0x00}, // cout 236   
    {0x28ed, &op_cout,	255, 255, 255, 0xed, 0x00, 0x00, 0x00}, // cout 237   
    {0x28ee, &op_cout,	255, 255, 255, 0xee, 0x00, 0x00, 0x00}, // cout 238   
    {0x28ef, &op_cout,	255, 255, 255, 0xef, 0x00, 0x00, 0x00}, // cout 239   
    {0x28f0, &op_cout,	255, 255, 255, 0xf0, 0x00, 0x00, 0x00}, // cout 240   
    {0x28f1, &op_cout,	255, 255, 255, 0xf1, 0x00, 0x00, 0x00}, // cout 241   
    {0x28f2, &op_cout,	255, 255, 255, 0xf2, 0x00, 0x00, 0x00}, // cout 242   
    {0x28f3, &op_cout,	255, 255, 255, 0xf3, 0x00, 0x00, 0x00}, // cout 243   
    {0x28f4, &op_cout,	255, 255, 255, 0xf4, 0x00, 0x00, 0x00}, // cout 244   
    {0x28f5, &op_cout,	255, 255, 255, 0xf5, 0x00, 0x00, 0x00}, // cout 245   
    {0x28f6, &op_cout,	255, 255, 255, 0xf6, 0x00, 0x00, 0x00}, // cout 246   
    {0x28f7, &op_cout,	255, 255, 255, 0xf7, 0x00, 0x00, 0x00}, // cout 247   
    {0x28f8, &op_cout,	255, 255, 255, 0xf8, 0x00, 0x00, 0x00}, // cout 248   
    {0x28f9, &op_cout,	255, 255, 255, 0xf9, 0x00, 0x00, 0x00}, // cout 249   
    {0x28fa, &op_cout,	255, 255, 255, 0xfa, 0x00, 0x00, 0x00}, // cout 250   
    {0x28fb, &op_cout,	255, 255, 255, 0xfb, 0x00, 0x00, 0x00}, // cout 251   
    {0x28fc, &op_cout,	255, 255, 255, 0xfc, 0x00, 0x00, 0x00}, // cout 252   
    {0x28fd, &op_cout,	255, 255, 255, 0xfd, 0x00, 0x00, 0x00}, // cout 253   
    {0x28fe, &op_cout,	255, 255, 255, 0xfe, 0x00, 0x00, 0x00}, // cout 254   
    {0x28ff, &op_cout,	255, 255, 255, 0xff, 0x00, 0x00, 0x00}, // cout 255   
    {0x2900, &op_creg,	  0, 255, 255, 0xff, 0x02, 0x00, 0x00}, // creg a   
    {0x2901, &op_creg,	  1, 255, 255, 0xff, 0x02, 0x00, 0x00}, // creg b   
    {0x2902, &op_creg,	  2, 255, 255, 0xff, 0x02, 0x00, 0x00}, // creg c   
    {0x2903, &op_creg,	  3, 255, 255, 0xff, 0x02, 0x00, 0x00}, // creg d   
    {0x2904, &op_creg,	  4, 255, 255, 0xff, 0x02, 0x00, 0x00}, // creg e   
    {0x2905, &op_creg,	  5, 255, 255, 0xff, 0x02, 0x00, 0x00}, // creg f   
    {0x2906, &op_creg,	  6, 255, 255, 0xff, 0x02, 0x00, 0x00}, // creg g   
    {0x2907, &op_creg,	  7, 255, 255, 0xff, 0x02, 0x00, 0x00}, // creg h   
    {0x2908, &op_creg,	  8, 255, 255, 0xff, 0x02, 0x00, 0x00}, // creg pc   
    {0x2909, &op_creg,	  9, 255, 255, 0xff, 0x02, 0x00, 0x00}, // creg ra   
    {0x290a, &op_creg,	 10, 255, 255, 0xff, 0x02, 0x00, 0x00}, // creg sb   
    {0x290b, &op_creg,	 11, 255, 255, 0xff, 0x02, 0x00, 0x00}, // creg sp   
    {0x290c, &op_creg,	 12, 255, 255, 0xff, 0x02, 0x00, 0x00}, // creg db   
    {0x290d, &op_creg,	 13, 255, 255, 0xff, 0x02, 0x00, 0x00}, // creg cb   
    {0x290e, &op_creg,	 14, 255, 255, 0xff, 0x02, 0x00, 0x00}, // creg pi   
    {0x290f, &op_creg,	 15, 255, 255, 0xff, 0x02, 0x00, 0x00}, // creg status   
    {0x2910, &op_cregx,	  0, 255, 255, 0xff, 0x02, 0x00, 0x00}, // cregx a   
    {0x2911, &op_cregx,	  1, 255, 255, 0xff, 0x02, 0x00, 0x00}, // cregx b   
    {0x2912, &op_cregx,	  2, 255, 255, 0xff, 0x02, 0x00, 0x00}, // cregx c   
    {0x2913, &op_cregx,	  3, 255, 255, 0xff, 0x02, 0x00, 0x00}, // cregx d   
    {0x2914, &op_cregx,	  4, 255, 255, 0xff, 0x02, 0x00, 0x00}, // cregx e   
    {0x2915, &op_cregx,	  5, 255, 255, 0xff, 0x02, 0x00, 0x00}, // cregx f   
    {0x2916, &op_cregx,	  6, 255, 255, 0xff, 0x02, 0x00, 0x00}, // cregx g   
    {0x2917, &op_cregx,	  7, 255, 255, 0xff, 0x02, 0x00, 0x00}, // cregx h   
    {0x2918, &op_cregx,	  8, 255, 255, 0xff, 0x02, 0x00, 0x00}, // cregx pc   
    {0x2919, &op_cregx,	  9, 255, 255, 0xff, 0x02, 0x00, 0x00}, // cregx ra   
    {0x291a, &op_cregx,	 10, 255, 255, 0xff, 0x02, 0x00, 0x00}, // cregx sb   
    {0x291b, &op_cregx,	 11, 255, 255, 0xff, 0x02, 0x00, 0x00}, // cregx sp   
    {0x291c, &op_cregx,	 12, 255, 255, 0xff, 0x02, 0x00, 0x00}, // cregx db   
    {0x291d, &op_cregx,	 13, 255, 255, 0xff, 0x02, 0x00, 0x00}, // cregx cb   
    {0x291e, &op_cregx,	 14, 255, 255, 0xff, 0x02, 0x00, 0x00}, // cregx pi   
    {0x291f, &op_cregx,	 15, 255, 255, 0xff, 0x02, 0x00, 0x00}, // cregx status   
    {0x2920, &op_crega,	  0, 255, 255, 0xff, 0x02, 0x00, 0x00}, // crega a   
    {0x2921, &op_crega,	  1, 255, 255, 0xff, 0x02, 0x00, 0x00}, // crega b   
    {0x2922, &op_crega,	  2, 255, 255, 0xff, 0x02, 0x00, 0x00}, // crega c   
    {0x2923, &op_crega,	  3, 255, 255, 0xff, 0x02, 0x00, 0x00}, // crega d   
    {0x2924, &op_crega,	  4, 255, 255, 0xff, 0x02, 0x00, 0x00}, // crega e   
    {0x2925, &op_crega,	  5, 255, 255, 0xff, 0x02, 0x00, 0x00}, // crega f   
    {0x2926, &op_crega,	  6, 255, 255, 0xff, 0x02, 0x00, 0x00}, // crega g   
    {0x2927, &op_crega,	  7, 255, 255, 0xff, 0x02, 0x00, 0x00}, // crega h   
    {0x2928, &op_crega,	  8, 255, 255, 0xff, 0x02, 0x00, 0x00}, // crega pc   
    {0x2929, &op_crega,	  9, 255, 255, 0xff, 0x02, 0x00, 0x00}, // crega ra   
    {0x292a, &op_crega,	 10, 255, 255, 0xff, 0x02, 0x00, 0x00}, // crega sb   
    {0x292b, &op_crega,	 11, 255, 255, 0xff, 0x02, 0x00, 0x00}, // crega sp   
    {0x292c, &op_crega,	 12, 255, 255, 0xff, 0x02, 0x00, 0x00}, // crega db   
    {0x292d, &op_crega,	 13, 255, 255, 0xff, 0x02, 0x00, 0x00}, // crega cb   
    {0x292e, &op_crega,	 14, 255, 255, 0xff, 0x02, 0x00, 0x00}, // crega pi   
    {0x292f, &op_crega,	 15, 255, 255, 0xff, 0x02, 0x00, 0x00}, // crega status   
    {0x2930, &op_cregf,	  0, 255, 255, 0xff, 0x02, 0x00, 0x00}, // cregf a   
    {0x2931, &op_cregf,	  1, 255, 255, 0xff, 0x02, 0x00, 0x00}, // cregf b   
    {0x2932, &op_cregf,	  2, 255, 255, 0xff, 0x02, 0x00, 0x00}, // cregf c   
    {0x2933, &op_cregf,	  3, 255, 255, 0xff, 0x02, 0x00, 0x00}, // cregf d   
    {0x2934, &op_cregf,	  4, 255, 255, 0xff, 0x02, 0x00, 0x00}, // cregf e   
    {0x2935, &op_cregf,	  5, 255, 255, 0xff, 0x02, 0x00, 0x00}, // cregf f   
    {0x2936, &op_cregf,	  6, 255, 255, 0xff, 0x02, 0x00, 0x00}, // cregf g   
    {0x2937, &op_cregf,	  7, 255, 255, 0xff, 0x02, 0x00, 0x00}, // cregf h   
    {0x2938, &op_cregf,	  8, 255, 255, 0xff, 0x02, 0x00, 0x00}, // cregf pc   
    {0x2939, &op_cregf,	  9, 255, 255, 0xff, 0x02, 0x00, 0x00}, // cregf ra   
    {0x293a, &op_cregf,	 10, 255, 255, 0xff, 0x02, 0x00, 0x00}, // cregf sb   
    {0x293b, &op_cregf,	 11, 255, 255, 0xff, 0x02, 0x00, 0x00}, // cregf sp   
    {0x293c, &op_cregf,	 12, 255, 255, 0xff, 0x02, 0x00, 0x00}, // cregf db   
    {0x293d, &op_cregf,	 13, 255, 255, 0xff, 0x02, 0x00, 0x00}, // cregf cb   
    {0x293e, &op_cregf,	 14, 255, 255, 0xff, 0x02, 0x00, 0x00}, // cregf pi   
    {0x293f, &op_cregf,	 15, 255, 255, 0xff, 0x02, 0x00, 0x00}, // cregf status   
    {0x2980, &op_cin,	  0, 255, 255, 0xff, 0x02, 0x00, 0x00}, // cin a   
    {0x2981, &op_cin,	  1, 255, 255, 0xff, 0x02, 0x00, 0x00}, // cin b   
    {0x2982, &op_cin,	  2, 255, 255, 0xff, 0x02, 0x00, 0x00}, // cin c   
    {0x2983, &op_cin,	  3, 255, 255, 0xff, 0x02, 0x00, 0x00}, // cin d   
    {0x2984, &op_cin,	  4, 255, 255, 0xff, 0x02, 0x00, 0x00}, // cin e   
    {0x2985, &op_cin,	  5, 255, 255, 0xff, 0x02, 0x00, 0x00}, // cin f   
    {0x2986, &op_cin,	  6, 255, 255, 0xff, 0x02, 0x00, 0x00}, // cin g   
    {0x2987, &op_cin,	  7, 255, 255, 0xff, 0x02, 0x00, 0x00}, // cin h   
    {0x2988, &op_cin,	  8, 255, 255, 0xff, 0x02, 0x00, 0x00}, // cin pc   
    {0x2989, &op_cin,	  9, 255, 255, 0xff, 0x02, 0x00, 0x00}, // cin ra   
    {0x298a, &op_cin,	 10, 255, 255, 0xff, 0x02, 0x00, 0x00}, // cin sb   
    {0x298b, &op_cin,	 11, 255, 255, 0xff, 0x02, 0x00, 0x00}, // cin sp   
    {0x298c, &op_cin,	 12, 255, 255, 0xff, 0x02, 0x00, 0x00}, // cin db   
    {0x298d, &op_cin,	 13, 255, 255, 0xff, 0x02, 0x00, 0x00}, // cin cb   
    {0x298e, &op_cin,	 14, 255, 255, 0xff, 0x02, 0x00, 0x00}, // cin pi   
    {0x298f, &op_cin,	 15, 255, 255, 0xff, 0x02, 0x00, 0x00}, // cin status   
    {0x2990, &op_cinx,	  0, 255, 255, 0xff, 0x02, 0x00, 0x00}, // cinx a   
    {0x2991, &op_cinx,	  1, 255, 255, 0xff, 0x02, 0x00, 0x00}, // cinx b   
    {0x2992, &op_cinx,	  2, 255, 255, 0xff, 0x02, 0x00, 0x00}, // cinx c   
    {0x2993, &op_cinx,	  3, 255, 255, 0xff, 0x02, 0x00, 0x00}, // cinx d   
    {0x2994, &op_cinx,	  4, 255, 255, 0xff, 0x02, 0x00, 0x00}, // cinx e   
    {0x2995, &op_cinx,	  5, 255, 255, 0xff, 0x02, 0x00, 0x00}, // cinx f   
    {0x2996, &op_cinx,	  6, 255, 255, 0xff, 0x02, 0x00, 0x00}, // cinx g   
    {0x2997, &op_cinx,	  7, 255, 255, 0xff, 0x02, 0x00, 0x00}, // cinx h   
    {0x2998, &op_cinx,	  8, 255, 255, 0xff, 0x02, 0x00, 0x00}, // cinx pc   
    {0x2999, &op_cinx,	  9, 255, 255, 0xff, 0x02, 0x00, 0x00}, // cinx ra   
    {0x299a, &op_cinx,	 10, 255, 255, 0xff, 0x02, 0x00, 0x00}, // cinx sb   
    {0x299b, &op_cinx,	 11, 255, 255, 0xff, 0x02, 0x00, 0x00}, // cinx sp   
    {0x299c, &op_cinx,	 12, 255, 255, 0xff, 0x02, 0x00, 0x00}, // cinx db   
    {0x299d, &op_cinx,	 13, 255, 255, 0xff, 0x02, 0x00, 0x00}, // cinx cb   
    {0x299e, &op_cinx,	 14, 255, 255, 0xff, 0x02, 0x00, 0x00}, // cinx pi   
    {0x299f, &op_cinx,	 15, 255, 255, 0xff, 0x02, 0x00, 0x00}, // cinx status   
    {0x29a0, &op_cina,	  0, 255, 255, 0xff, 0x02, 0x00, 0x00}, // cina a   
    {0x29a1, &op_cina,	  1, 255, 255, 0xff, 0x02, 0x00, 0x00}, // cina b   
    {0x29a2, &op_cina,	  2, 255, 255, 0xff, 0x02, 0x00, 0x00}, // cina c   
    {0x29a3, &op_cina,	  3, 255, 255, 0xff, 0x02, 0x00, 0x00}, // cina d   
    {0x29a4, &op_cina,	  4, 255, 255, 0xff, 0x02, 0x00, 0x00}, // cina e   
    {0x29a5, &op_cina,	  5, 255, 255, 0xff, 0x02, 0x00, 0x00}, // cina f   
    {0x29a6, &op_cina,	  6, 255, 255, 0xff, 0x02, 0x00, 0x00}, // cina g   
    {0x29a7, &op_cina,	  7, 255, 255, 0xff, 0x02, 0x00, 0x00}, // cina h   
    {0x29a8, &op_cina,	  8, 255, 255, 0xff, 0x02, 0x00, 0x00}, // cina pc   
    {0x29a9, &op_cina,	  9, 255, 255, 0xff, 0x02, 0x00, 0x00}, // cina ra   
    {0x29aa, &op_cina,	 10, 255, 255, 0xff, 0x02, 0x00, 0x00}, // cina sb   
    {0x29ab, &op_cina,	 11, 255, 255, 0xff, 0x02, 0x00, 0x00}, // cina sp   
    {0x29ac, &op_cina,	 12, 255, 255, 0xff, 0x02, 0x00, 0x00}, // cina db   
    {0x29ad, &op_cina,	 13, 255, 255, 0xff, 0x02, 0x00, 0x00}, // cina cb   
    {0x29ae, &op_cina,	 14, 255, 255, 0xff, 0x02, 0x00, 0x00}, // cina pi   
    {0x29af, &op_cina,	 15, 255, 255, 0xff, 0x02, 0x00, 0x00}, // cina status   
	{0x8000, &op_mod,	  0,   0, 255, 0xff, 0x00, 0x00, 0x01}, // mod.w a a  
	{0x8001, &op_mod,	  1,   0, 255, 0xff, 0x00, 0x00, 0x01}, // mod.w b a  
	{0x8002, &op_mod,	  2,   0, 255, 0xff, 0x00, 0x00, 0x01}, // mod.w c a  
	{0x8003, &op_mod,	  3,   0, 255, 0xff, 0x00, 0x00, 0x01}, // mod.w d a  
	{0x8004, &op_mod,	  4,   0, 255, 0xff, 0x00, 0x00, 0x01}, // mod.w e a  
	{0x8005, &op_mod,	  5,   0, 255, 0xff, 0x00, 0x00, 0x01}, // mod.w f a  
	{0x8006, &op_mod,	  6,   0, 255, 0xff, 0x00, 0x00, 0x01}, // mod.w g a  
	{0x8007, &op_mod,	  7,   0, 255, 0xff, 0x00, 0x00, 0x01}, // mod.w h a  
	{0x8008, &op_mod,	  0,   1, 255, 0xff, 0x00, 0x00, 0x01}, // mod.w a b  
	{0x8009, &op_mod,	  1,   1, 255, 0xff, 0x00, 0x00, 0x01}, // mod.w b b  
	{0x800a, &op_mod,	  2,   1, 255, 0xff, 0x00, 0x00, 0x01}, // mod.w c b  
	{0x800b, &op_mod,	  3,   1, 255, 0xff, 0x00, 0x00, 0x01}, // mod.w d b  
	{0x800c, &op_mod,	  4,   1, 255, 0xff, 0x00, 0x00, 0x01}, // mod.w e b  
	{0x800d, &op_mod,	  5,   1, 255, 0xff, 0x00, 0x00, 0x01}, // mod.w f b  
	{0x800e, &op_mod,	  6,   1, 255, 0xff, 0x00, 0x00, 0x01}, // mod.w g b  
	{0x800f, &op_mod,	  7,   1, 255, 0xff, 0x00, 0x00, 0x01}, // mod.w h b  
	{0x8010, &op_mod,	  0,   2, 255, 0xff, 0x00, 0x00, 0x01}, // mod.w a c  
	{0x8011, &op_mod,	  1,   2, 255, 0xff, 0x00, 0x00, 0x01}, // mod.w b c  
	{0x8012, &op_mod,	  2,   2, 255, 0xff, 0x00, 0x00, 0x01}, // mod.w c c  
	{0x8013, &op_mod,	  3,   2, 255, 0xff, 0x00, 0x00, 0x01}, // mod.w d c  
	{0x8014, &op_mod,	  4,   2, 255, 0xff, 0x00, 0x00, 0x01}, // mod.w e c  
	{0x8015, &op_mod,	  5,   2, 255, 0xff, 0x00, 0x00, 0x01}, // mod.w f c  
	{0x8016, &op_mod,	  6,   2, 255, 0xff, 0x00, 0x00, 0x01}, // mod.w g c  
	{0x8017, &op_mod,	  7,   2, 255, 0xff, 0x00, 0x00, 0x01}, // mod.w h c  
	{0x8018, &op_mod,	  0,   3, 255, 0xff, 0x00, 0x00, 0x01}, // mod.w a d  
	{0x8019, &op_mod,	  1,   3, 255, 0xff, 0x00, 0x00, 0x01}, // mod.w b d  
	{0x801a, &op_mod,	  2,   3, 255, 0xff, 0x00, 0x00, 0x01}, // mod.w c d  
	{0x801b, &op_mod,	  3,   3, 255, 0xff, 0x00, 0x00, 0x01}, // mod.w d d  
	{0x801c, &op_mod,	  4,   3, 255, 0xff, 0x00, 0x00, 0x01}, // mod.w e d  
	{0x801d, &op_mod,	  5,   3, 255, 0xff, 0x00, 0x00, 0x01}, // mod.w f d  
	{0x801e, &op_mod,	  6,   3, 255, 0xff, 0x00, 0x00, 0x01}, // mod.w g d  
	{0x801f, &op_mod,	  7,   3, 255, 0xff, 0x00, 0x00, 0x01}, // mod.w h d  
	{0x8020, &op_mod,	  0,   4, 255, 0xff, 0x00, 0x00, 0x01}, // mod.w a e  
	{0x8021, &op_mod,	  1,   4, 255, 0xff, 0x00, 0x00, 0x01}, // mod.w b e  
	{0x8022, &op_mod,	  2,   4, 255, 0xff, 0x00, 0x00, 0x01}, // mod.w c e  
	{0x8023, &op_mod,	  3,   4, 255, 0xff, 0x00, 0x00, 0x01}, // mod.w d e  
	{0x8024, &op_mod,	  4,   4, 255, 0xff, 0x00, 0x00, 0x01}, // mod.w e e  
	{0x8025, &op_mod,	  5,   4, 255, 0xff, 0x00, 0x00, 0x01}, // mod.w f e  
	{0x8026, &op_mod,	  6,   4, 255, 0xff, 0x00, 0x00, 0x01}, // mod.w g e  
	{0x8027, &op_mod,	  7,   4, 255, 0xff, 0x00, 0x00, 0x01}, // mod.w h e  
	{0x8028, &op_mod,	  0,   5, 255, 0xff, 0x00, 0x00, 0x01}, // mod.w a f  
	{0x8029, &op_mod,	  1,   5, 255, 0xff, 0x00, 0x00, 0x01}, // mod.w b f  
	{0x802a, &op_mod,	  2,   5, 255, 0xff, 0x00, 0x00, 0x01}, // mod.w c f  
	{0x802b, &op_mod,	  3,   5, 255, 0xff, 0x00, 0x00, 0x01}, // mod.w d f  
	{0x802c, &op_mod,	  4,   5, 255, 0xff, 0x00, 0x00, 0x01}, // mod.w e f  
	{0x802d, &op_mod,	  5,   5, 255, 0xff, 0x00, 0x00, 0x01}, // mod.w f f  
	{0x802e, &op_mod,	  6,   5, 255, 0xff, 0x00, 0x00, 0x01}, // mod.w g f  
	{0x802f, &op_mod,	  7,   5, 255, 0xff, 0x00, 0x00, 0x01}, // mod.w h f  
	{0x8030, &op_mod,	  0,   6, 255, 0xff, 0x00, 0x00, 0x01}, // mod.w a g  
	{0x8031, &op_mod,	  1,   6, 255, 0xff, 0x00, 0x00, 0x01}, // mod.w b g  
	{0x8032, &op_mod,	  2,   6, 255, 0xff, 0x00, 0x00, 0x01}, // mod.w c g  
	{0x8033, &op_mod,	  3,   6, 255, 0xff, 0x00, 0x00, 0x01}, // mod.w d g  
	{0x8034, &op_mod,	  4,   6, 255, 0xff, 0x00, 0x00, 0x01}, // mod.w e g  
	{0x8035, &op_mod,	  5,   6, 255, 0xff, 0x00, 0x00, 0x01}, // mod.w f g  
	{0x8036, &op_mod,	  6,   6, 255, 0xff, 0x00, 0x00, 0x01}, // mod.w g g  
	{0x8037, &op_mod,	  7,   6, 255, 0xff, 0x00, 0x00, 0x01}, // mod.w h g  
	{0x8038, &op_mod,	  0,   7, 255, 0xff, 0x00, 0x00, 0x01}, // mod.w a h  
	{0x8039, &op_mod,	  1,   7, 255, 0xff, 0x00, 0x00, 0x01}, // mod.w b h  
	{0x803a, &op_mod,	  2,   7, 255, 0xff, 0x00, 0x00, 0x01}, // mod.w c h  
	{0x803b, &op_mod,	  3,   7, 255, 0xff, 0x00, 0x00, 0x01}, // mod.w d h  
	{0x803c, &op_mod,	  4,   7, 255, 0xff, 0x00, 0x00, 0x01}, // mod.w e h  
	{0x803d, &op_mod,	  5,   7, 255, 0xff, 0x00, 0x00, 0x01}, // mod.w f h  
	{0x803e, &op_mod,	  6,   7, 255, 0xff, 0x00, 0x00, 0x01}, // mod.w g h  
	{0x803f, &op_mod,	  7,   7, 255, 0xff, 0x00, 0x00, 0x01}, // mod.w h h  
	{0x8040, &op_mod,	  0,   0, 255, 0xff, 0x00, 0x00, 0x02}, // mod.d a a  
	{0x8041, &op_mod,	  1,   0, 255, 0xff, 0x00, 0x00, 0x02}, // mod.d b a  
	{0x8042, &op_mod,	  2,   0, 255, 0xff, 0x00, 0x00, 0x02}, // mod.d c a  
	{0x8043, &op_mod,	  3,   0, 255, 0xff, 0x00, 0x00, 0x02}, // mod.d d a  
	{0x8044, &op_mod,	  4,   0, 255, 0xff, 0x00, 0x00, 0x02}, // mod.d e a  
	{0x8045, &op_mod,	  5,   0, 255, 0xff, 0x00, 0x00, 0x02}, // mod.d f a  
	{0x8046, &op_mod,	  6,   0, 255, 0xff, 0x00, 0x00, 0x02}, // mod.d g a  
	{0x8047, &op_mod,	  7,   0, 255, 0xff, 0x00, 0x00, 0x02}, // mod.d h a  
	{0x8048, &op_mod,	  0,   1, 255, 0xff, 0x00, 0x00, 0x02}, // mod.d a b  
	{0x8049, &op_mod,	  1,   1, 255, 0xff, 0x00, 0x00, 0x02}, // mod.d b b  
	{0x804a, &op_mod,	  2,   1, 255, 0xff, 0x00, 0x00, 0x02}, // mod.d c b  
	{0x804b, &op_mod,	  3,   1, 255, 0xff, 0x00, 0x00, 0x02}, // mod.d d b  
	{0x804c, &op_mod,	  4,   1, 255, 0xff, 0x00, 0x00, 0x02}, // mod.d e b  
	{0x804d, &op_mod,	  5,   1, 255, 0xff, 0x00, 0x00, 0x02}, // mod.d f b  
	{0x804e, &op_mod,	  6,   1, 255, 0xff, 0x00, 0x00, 0x02}, // mod.d g b  
	{0x804f, &op_mod,	  7,   1, 255, 0xff, 0x00, 0x00, 0x02}, // mod.d h b  
	{0x8050, &op_mod,	  0,   2, 255, 0xff, 0x00, 0x00, 0x02}, // mod.d a c  
	{0x8051, &op_mod,	  1,   2, 255, 0xff, 0x00, 0x00, 0x02}, // mod.d b c  
	{0x8052, &op_mod,	  2,   2, 255, 0xff, 0x00, 0x00, 0x02}, // mod.d c c  
	{0x8053, &op_mod,	  3,   2, 255, 0xff, 0x00, 0x00, 0x02}, // mod.d d c  
	{0x8054, &op_mod,	  4,   2, 255, 0xff, 0x00, 0x00, 0x02}, // mod.d e c  
	{0x8055, &op_mod,	  5,   2, 255, 0xff, 0x00, 0x00, 0x02}, // mod.d f c  
	{0x8056, &op_mod,	  6,   2, 255, 0xff, 0x00, 0x00, 0x02}, // mod.d g c  
	{0x8057, &op_mod,	  7,   2, 255, 0xff, 0x00, 0x00, 0x02}, // mod.d h c  
	{0x8058, &op_mod,	  0,   3, 255, 0xff, 0x00, 0x00, 0x02}, // mod.d a d  
	{0x8059, &op_mod,	  1,   3, 255, 0xff, 0x00, 0x00, 0x02}, // mod.d b d  
	{0x805a, &op_mod,	  2,   3, 255, 0xff, 0x00, 0x00, 0x02}, // mod.d c d  
	{0x805b, &op_mod,	  3,   3, 255, 0xff, 0x00, 0x00, 0x02}, // mod.d d d  
	{0x805c, &op_mod,	  4,   3, 255, 0xff, 0x00, 0x00, 0x02}, // mod.d e d  
	{0x805d, &op_mod,	  5,   3, 255, 0xff, 0x00, 0x00, 0x02}, // mod.d f d  
	{0x805e, &op_mod,	  6,   3, 255, 0xff, 0x00, 0x00, 0x02}, // mod.d g d  
	{0x805f, &op_mod,	  7,   3, 255, 0xff, 0x00, 0x00, 0x02}, // mod.d h d  
	{0x8060, &op_mod,	  0,   4, 255, 0xff, 0x00, 0x00, 0x02}, // mod.d a e  
	{0x8061, &op_mod,	  1,   4, 255, 0xff, 0x00, 0x00, 0x02}, // mod.d b e  
	{0x8062, &op_mod,	  2,   4, 255, 0xff, 0x00, 0x00, 0x02}, // mod.d c e  
	{0x8063, &op_mod,	  3,   4, 255, 0xff, 0x00, 0x00, 0x02}, // mod.d d e  
	{0x8064, &op_mod,	  4,   4, 255, 0xff, 0x00, 0x00, 0x02}, // mod.d e e  
	{0x8065, &op_mod,	  5,   4, 255, 0xff, 0x00, 0x00, 0x02}, // mod.d f e  
	{0x8066, &op_mod,	  6,   4, 255, 0xff, 0x00, 0x00, 0x02}, // mod.d g e  
	{0x8067, &op_mod,	  7,   4, 255, 0xff, 0x00, 0x00, 0x02}, // mod.d h e  
	{0x8068, &op_mod,	  0,   5, 255, 0xff, 0x00, 0x00, 0x02}, // mod.d a f  
	{0x8069, &op_mod,	  1,   5, 255, 0xff, 0x00, 0x00, 0x02}, // mod.d b f  
	{0x806a, &op_mod,	  2,   5, 255, 0xff, 0x00, 0x00, 0x02}, // mod.d c f  
	{0x806b, &op_mod,	  3,   5, 255, 0xff, 0x00, 0x00, 0x02}, // mod.d d f  
	{0x806c, &op_mod,	  4,   5, 255, 0xff, 0x00, 0x00, 0x02}, // mod.d e f  
	{0x806d, &op_mod,	  5,   5, 255, 0xff, 0x00, 0x00, 0x02}, // mod.d f f  
	{0x806e, &op_mod,	  6,   5, 255, 0xff, 0x00, 0x00, 0x02}, // mod.d g f  
	{0x806f, &op_mod,	  7,   5, 255, 0xff, 0x00, 0x00, 0x02}, // mod.d h f  
	{0x8070, &op_mod,	  0,   6, 255, 0xff, 0x00, 0x00, 0x02}, // mod.d a g  
	{0x8071, &op_mod,	  1,   6, 255, 0xff, 0x00, 0x00, 0x02}, // mod.d b g  
	{0x8072, &op_mod,	  2,   6, 255, 0xff, 0x00, 0x00, 0x02}, // mod.d c g  
	{0x8073, &op_mod,	  3,   6, 255, 0xff, 0x00, 0x00, 0x02}, // mod.d d g  
	{0x8074, &op_mod,	  4,   6, 255, 0xff, 0x00, 0x00, 0x02}, // mod.d e g  
	{0x8075, &op_mod,	  5,   6, 255, 0xff, 0x00, 0x00, 0x02}, // mod.d f g  
	{0x8076, &op_mod,	  6,   6, 255, 0xff, 0x00, 0x00, 0x02}, // mod.d g g  
	{0x8077, &op_mod,	  7,   6, 255, 0xff, 0x00, 0x00, 0x02}, // mod.d h g  
	{0x8078, &op_mod,	  0,   7, 255, 0xff, 0x00, 0x00, 0x02}, // mod.d a h  
	{0x8079, &op_mod,	  1,   7, 255, 0xff, 0x00, 0x00, 0x02}, // mod.d b h  
	{0x807a, &op_mod,	  2,   7, 255, 0xff, 0x00, 0x00, 0x02}, // mod.d c h  
	{0x807b, &op_mod,	  3,   7, 255, 0xff, 0x00, 0x00, 0x02}, // mod.d d h  
	{0x807c, &op_mod,	  4,   7, 255, 0xff, 0x00, 0x00, 0x02}, // mod.d e h  
	{0x807d, &op_mod,	  5,   7, 255, 0xff, 0x00, 0x00, 0x02}, // mod.d f h  
	{0x807e, &op_mod,	  6,   7, 255, 0xff, 0x00, 0x00, 0x02}, // mod.d g h  
	{0x807f, &op_mod,	  7,   7, 255, 0xff, 0x00, 0x00, 0x02}, // mod.d h h  
	{0x8080, &op_mod,	  0,   0, 255, 0xff, 0x00, 0x00, 0x04}, // mod a a  
	{0x8081, &op_mod,	  1,   0, 255, 0xff, 0x00, 0x00, 0x04}, // mod b a  
	{0x8082, &op_mod,	  2,   0, 255, 0xff, 0x00, 0x00, 0x04}, // mod c a  
	{0x8083, &op_mod,	  3,   0, 255, 0xff, 0x00, 0x00, 0x04}, // mod d a  
	{0x8084, &op_mod,	  4,   0, 255, 0xff, 0x00, 0x00, 0x04}, // mod e a  
	{0x8085, &op_mod,	  5,   0, 255, 0xff, 0x00, 0x00, 0x04}, // mod f a  
	{0x8086, &op_mod,	  6,   0, 255, 0xff, 0x00, 0x00, 0x04}, // mod g a  
	{0x8087, &op_mod,	  7,   0, 255, 0xff, 0x00, 0x00, 0x04}, // mod h a  
	{0x8088, &op_mod,	  0,   1, 255, 0xff, 0x00, 0x00, 0x04}, // mod a b  
	{0x8089, &op_mod,	  1,   1, 255, 0xff, 0x00, 0x00, 0x04}, // mod b b  
	{0x808a, &op_mod,	  2,   1, 255, 0xff, 0x00, 0x00, 0x04}, // mod c b  
	{0x808b, &op_mod,	  3,   1, 255, 0xff, 0x00, 0x00, 0x04}, // mod d b  
	{0x808c, &op_mod,	  4,   1, 255, 0xff, 0x00, 0x00, 0x04}, // mod e b  
	{0x808d, &op_mod,	  5,   1, 255, 0xff, 0x00, 0x00, 0x04}, // mod f b  
	{0x808e, &op_mod,	  6,   1, 255, 0xff, 0x00, 0x00, 0x04}, // mod g b  
	{0x808f, &op_mod,	  7,   1, 255, 0xff, 0x00, 0x00, 0x04}, // mod h b  
	{0x8090, &op_mod,	  0,   2, 255, 0xff, 0x00, 0x00, 0x04}, // mod a c  
	{0x8091, &op_mod,	  1,   2, 255, 0xff, 0x00, 0x00, 0x04}, // mod b c  
	{0x8092, &op_mod,	  2,   2, 255, 0xff, 0x00, 0x00, 0x04}, // mod c c  
	{0x8093, &op_mod,	  3,   2, 255, 0xff, 0x00, 0x00, 0x04}, // mod d c  
	{0x8094, &op_mod,	  4,   2, 255, 0xff, 0x00, 0x00, 0x04}, // mod e c  
	{0x8095, &op_mod,	  5,   2, 255, 0xff, 0x00, 0x00, 0x04}, // mod f c  
	{0x8096, &op_mod,	  6,   2, 255, 0xff, 0x00, 0x00, 0x04}, // mod g c  
	{0x8097, &op_mod,	  7,   2, 255, 0xff, 0x00, 0x00, 0x04}, // mod h c  
	{0x8098, &op_mod,	  0,   3, 255, 0xff, 0x00, 0x00, 0x04}, // mod a d  
	{0x8099, &op_mod,	  1,   3, 255, 0xff, 0x00, 0x00, 0x04}, // mod b d  
	{0x809a, &op_mod,	  2,   3, 255, 0xff, 0x00, 0x00, 0x04}, // mod c d  
	{0x809b, &op_mod,	  3,   3, 255, 0xff, 0x00, 0x00, 0x04}, // mod d d  
	{0x809c, &op_mod,	  4,   3, 255, 0xff, 0x00, 0x00, 0x04}, // mod e d  
	{0x809d, &op_mod,	  5,   3, 255, 0xff, 0x00, 0x00, 0x04}, // mod f d  
	{0x809e, &op_mod,	  6,   3, 255, 0xff, 0x00, 0x00, 0x04}, // mod g d  
	{0x809f, &op_mod,	  7,   3, 255, 0xff, 0x00, 0x00, 0x04}, // mod h d  
	{0x80a0, &op_mod,	  0,   4, 255, 0xff, 0x00, 0x00, 0x04}, // mod a e  
	{0x80a1, &op_mod,	  1,   4, 255, 0xff, 0x00, 0x00, 0x04}, // mod b e  
	{0x80a2, &op_mod,	  2,   4, 255, 0xff, 0x00, 0x00, 0x04}, // mod c e  
	{0x80a3, &op_mod,	  3,   4, 255, 0xff, 0x00, 0x00, 0x04}, // mod d e  
	{0x80a4, &op_mod,	  4,   4, 255, 0xff, 0x00, 0x00, 0x04}, // mod e e  
	{0x80a5, &op_mod,	  5,   4, 255, 0xff, 0x00, 0x00, 0x04}, // mod f e  
	{0x80a6, &op_mod,	  6,   4, 255, 0xff, 0x00, 0x00, 0x04}, // mod g e  
	{0x80a7, &op_mod,	  7,   4, 255, 0xff, 0x00, 0x00, 0x04}, // mod h e  
	{0x80a8, &op_mod,	  0,   5, 255, 0xff, 0x00, 0x00, 0x04}, // mod a f  
	{0x80a9, &op_mod,	  1,   5, 255, 0xff, 0x00, 0x00, 0x04}, // mod b f  
	{0x80aa, &op_mod,	  2,   5, 255, 0xff, 0x00, 0x00, 0x04}, // mod c f  
	{0x80ab, &op_mod,	  3,   5, 255, 0xff, 0x00, 0x00, 0x04}, // mod d f  
	{0x80ac, &op_mod,	  4,   5, 255, 0xff, 0x00, 0x00, 0x04}, // mod e f  
	{0x80ad, &op_mod,	  5,   5, 255, 0xff, 0x00, 0x00, 0x04}, // mod f f  
	{0x80ae, &op_mod,	  6,   5, 255, 0xff, 0x00, 0x00, 0x04}, // mod g f  
	{0x80af, &op_mod,	  7,   5, 255, 0xff, 0x00, 0x00, 0x04}, // mod h f  
	{0x80b0, &op_mod,	  0,   6, 255, 0xff, 0x00, 0x00, 0x04}, // mod a g  
	{0x80b1, &op_mod,	  1,   6, 255, 0xff, 0x00, 0x00, 0x04}, // mod b g  
	{0x80b2, &op_mod,	  2,   6, 255, 0xff, 0x00, 0x00, 0x04}, // mod c g  
	{0x80b3, &op_mod,	  3,   6, 255, 0xff, 0x00, 0x00, 0x04}, // mod d g  
	{0x80b4, &op_mod,	  4,   6, 255, 0xff, 0x00, 0x00, 0x04}, // mod e g  
	{0x80b5, &op_mod,	  5,   6, 255, 0xff, 0x00, 0x00, 0x04}, // mod f g  
	{0x80b6, &op_mod,	  6,   6, 255, 0xff, 0x00, 0x00, 0x04}, // mod g g  
	{0x80b7, &op_mod,	  7,   6, 255, 0xff, 0x00, 0x00, 0x04}, // mod h g  
	{0x80b8, &op_mod,	  0,   7, 255, 0xff, 0x00, 0x00, 0x04}, // mod a h  
	{0x80b9, &op_mod,	  1,   7, 255, 0xff, 0x00, 0x00, 0x04}, // mod b h  
	{0x80ba, &op_mod,	  2,   7, 255, 0xff, 0x00, 0x00, 0x04}, // mod c h  
	{0x80bb, &op_mod,	  3,   7, 255, 0xff, 0x00, 0x00, 0x04}, // mod d h  
	{0x80bc, &op_mod,	  4,   7, 255, 0xff, 0x00, 0x00, 0x04}, // mod e h  
	{0x80bd, &op_mod,	  5,   7, 255, 0xff, 0x00, 0x00, 0x04}, // mod f h  
	{0x80be, &op_mod,	  6,   7, 255, 0xff, 0x00, 0x00, 0x04}, // mod g h  
	{0x80bf, &op_mod,	  7,   7, 255, 0xff, 0x00, 0x00, 0x04}, // mod h h  
	{0x8100, &op_mod,	  0,   0, 255, 0xff, 0x01, 0x00, 0x01}, // mod.wr a a  
	{0x8101, &op_mod,	  1,   0, 255, 0xff, 0x01, 0x00, 0x01}, // mod.wr b a  
	{0x8102, &op_mod,	  2,   0, 255, 0xff, 0x01, 0x00, 0x01}, // mod.wr c a  
	{0x8103, &op_mod,	  3,   0, 255, 0xff, 0x01, 0x00, 0x01}, // mod.wr d a  
	{0x8104, &op_mod,	  4,   0, 255, 0xff, 0x01, 0x00, 0x01}, // mod.wr e a  
	{0x8105, &op_mod,	  5,   0, 255, 0xff, 0x01, 0x00, 0x01}, // mod.wr f a  
	{0x8106, &op_mod,	  6,   0, 255, 0xff, 0x01, 0x00, 0x01}, // mod.wr g a  
	{0x8107, &op_mod,	  7,   0, 255, 0xff, 0x01, 0x00, 0x01}, // mod.wr h a  
	{0x8108, &op_mod,	  0,   1, 255, 0xff, 0x01, 0x00, 0x01}, // mod.wr a b  
	{0x8109, &op_mod,	  1,   1, 255, 0xff, 0x01, 0x00, 0x01}, // mod.wr b b  
	{0x810a, &op_mod,	  2,   1, 255, 0xff, 0x01, 0x00, 0x01}, // mod.wr c b  
	{0x810b, &op_mod,	  3,   1, 255, 0xff, 0x01, 0x00, 0x01}, // mod.wr d b  
	{0x810c, &op_mod,	  4,   1, 255, 0xff, 0x01, 0x00, 0x01}, // mod.wr e b  
	{0x810d, &op_mod,	  5,   1, 255, 0xff, 0x01, 0x00, 0x01}, // mod.wr f b  
	{0x810e, &op_mod,	  6,   1, 255, 0xff, 0x01, 0x00, 0x01}, // mod.wr g b  
	{0x810f, &op_mod,	  7,   1, 255, 0xff, 0x01, 0x00, 0x01}, // mod.wr h b  
	{0x8110, &op_mod,	  0,   2, 255, 0xff, 0x01, 0x00, 0x01}, // mod.wr a c  
	{0x8111, &op_mod,	  1,   2, 255, 0xff, 0x01, 0x00, 0x01}, // mod.wr b c  
	{0x8112, &op_mod,	  2,   2, 255, 0xff, 0x01, 0x00, 0x01}, // mod.wr c c  
	{0x8113, &op_mod,	  3,   2, 255, 0xff, 0x01, 0x00, 0x01}, // mod.wr d c  
	{0x8114, &op_mod,	  4,   2, 255, 0xff, 0x01, 0x00, 0x01}, // mod.wr e c  
	{0x8115, &op_mod,	  5,   2, 255, 0xff, 0x01, 0x00, 0x01}, // mod.wr f c  
	{0x8116, &op_mod,	  6,   2, 255, 0xff, 0x01, 0x00, 0x01}, // mod.wr g c  
	{0x8117, &op_mod,	  7,   2, 255, 0xff, 0x01, 0x00, 0x01}, // mod.wr h c  
	{0x8118, &op_mod,	  0,   3, 255, 0xff, 0x01, 0x00, 0x01}, // mod.wr a d  
	{0x8119, &op_mod,	  1,   3, 255, 0xff, 0x01, 0x00, 0x01}, // mod.wr b d  
	{0x811a, &op_mod,	  2,   3, 255, 0xff, 0x01, 0x00, 0x01}, // mod.wr c d  
	{0x811b, &op_mod,	  3,   3, 255, 0xff, 0x01, 0x00, 0x01}, // mod.wr d d  
	{0x811c, &op_mod,	  4,   3, 255, 0xff, 0x01, 0x00, 0x01}, // mod.wr e d  
	{0x811d, &op_mod,	  5,   3, 255, 0xff, 0x01, 0x00, 0x01}, // mod.wr f d  
	{0x811e, &op_mod,	  6,   3, 255, 0xff, 0x01, 0x00, 0x01}, // mod.wr g d  
	{0x811f, &op_mod,	  7,   3, 255, 0xff, 0x01, 0x00, 0x01}, // mod.wr h d  
	{0x8120, &op_mod,	  0,   4, 255, 0xff, 0x01, 0x00, 0x01}, // mod.wr a e  
	{0x8121, &op_mod,	  1,   4, 255, 0xff, 0x01, 0x00, 0x01}, // mod.wr b e  
	{0x8122, &op_mod,	  2,   4, 255, 0xff, 0x01, 0x00, 0x01}, // mod.wr c e  
	{0x8123, &op_mod,	  3,   4, 255, 0xff, 0x01, 0x00, 0x01}, // mod.wr d e  
	{0x8124, &op_mod,	  4,   4, 255, 0xff, 0x01, 0x00, 0x01}, // mod.wr e e  
	{0x8125, &op_mod,	  5,   4, 255, 0xff, 0x01, 0x00, 0x01}, // mod.wr f e  
	{0x8126, &op_mod,	  6,   4, 255, 0xff, 0x01, 0x00, 0x01}, // mod.wr g e  
	{0x8127, &op_mod,	  7,   4, 255, 0xff, 0x01, 0x00, 0x01}, // mod.wr h e  
	{0x8128, &op_mod,	  0,   5, 255, 0xff, 0x01, 0x00, 0x01}, // mod.wr a f  
	{0x8129, &op_mod,	  1,   5, 255, 0xff, 0x01, 0x00, 0x01}, // mod.wr b f  
	{0x812a, &op_mod,	  2,   5, 255, 0xff, 0x01, 0x00, 0x01}, // mod.wr c f  
	{0x812b, &op_mod,	  3,   5, 255, 0xff, 0x01, 0x00, 0x01}, // mod.wr d f  
	{0x812c, &op_mod,	  4,   5, 255, 0xff, 0x01, 0x00, 0x01}, // mod.wr e f  
	{0x812d, &op_mod,	  5,   5, 255, 0xff, 0x01, 0x00, 0x01}, // mod.wr f f  
	{0x812e, &op_mod,	  6,   5, 255, 0xff, 0x01, 0x00, 0x01}, // mod.wr g f  
	{0x812f, &op_mod,	  7,   5, 255, 0xff, 0x01, 0x00, 0x01}, // mod.wr h f  
	{0x8130, &op_mod,	  0,   6, 255, 0xff, 0x01, 0x00, 0x01}, // mod.wr a g  
	{0x8131, &op_mod,	  1,   6, 255, 0xff, 0x01, 0x00, 0x01}, // mod.wr b g  
	{0x8132, &op_mod,	  2,   6, 255, 0xff, 0x01, 0x00, 0x01}, // mod.wr c g  
	{0x8133, &op_mod,	  3,   6, 255, 0xff, 0x01, 0x00, 0x01}, // mod.wr d g  
	{0x8134, &op_mod,	  4,   6, 255, 0xff, 0x01, 0x00, 0x01}, // mod.wr e g  
	{0x8135, &op_mod,	  5,   6, 255, 0xff, 0x01, 0x00, 0x01}, // mod.wr f g  
	{0x8136, &op_mod,	  6,   6, 255, 0xff, 0x01, 0x00, 0x01}, // mod.wr g g  
	{0x8137, &op_mod,	  7,   6, 255, 0xff, 0x01, 0x00, 0x01}, // mod.wr h g  
	{0x8138, &op_mod,	  0,   7, 255, 0xff, 0x01, 0x00, 0x01}, // mod.wr a h  
	{0x8139, &op_mod,	  1,   7, 255, 0xff, 0x01, 0x00, 0x01}, // mod.wr b h  
	{0x813a, &op_mod,	  2,   7, 255, 0xff, 0x01, 0x00, 0x01}, // mod.wr c h  
	{0x813b, &op_mod,	  3,   7, 255, 0xff, 0x01, 0x00, 0x01}, // mod.wr d h  
	{0x813c, &op_mod,	  4,   7, 255, 0xff, 0x01, 0x00, 0x01}, // mod.wr e h  
	{0x813d, &op_mod,	  5,   7, 255, 0xff, 0x01, 0x00, 0x01}, // mod.wr f h  
	{0x813e, &op_mod,	  6,   7, 255, 0xff, 0x01, 0x00, 0x01}, // mod.wr g h  
	{0x813f, &op_mod,	  7,   7, 255, 0xff, 0x01, 0x00, 0x01}, // mod.wr h h  
	{0x8140, &op_mod,	  0,   0, 255, 0xff, 0x01, 0x00, 0x02}, // mod.dr a a  
	{0x8141, &op_mod,	  1,   0, 255, 0xff, 0x01, 0x00, 0x02}, // mod.dr b a  
	{0x8142, &op_mod,	  2,   0, 255, 0xff, 0x01, 0x00, 0x02}, // mod.dr c a  
	{0x8143, &op_mod,	  3,   0, 255, 0xff, 0x01, 0x00, 0x02}, // mod.dr d a  
	{0x8144, &op_mod,	  4,   0, 255, 0xff, 0x01, 0x00, 0x02}, // mod.dr e a  
	{0x8145, &op_mod,	  5,   0, 255, 0xff, 0x01, 0x00, 0x02}, // mod.dr f a  
	{0x8146, &op_mod,	  6,   0, 255, 0xff, 0x01, 0x00, 0x02}, // mod.dr g a  
	{0x8147, &op_mod,	  7,   0, 255, 0xff, 0x01, 0x00, 0x02}, // mod.dr h a  
	{0x8148, &op_mod,	  0,   1, 255, 0xff, 0x01, 0x00, 0x02}, // mod.dr a b  
	{0x8149, &op_mod,	  1,   1, 255, 0xff, 0x01, 0x00, 0x02}, // mod.dr b b  
	{0x814a, &op_mod,	  2,   1, 255, 0xff, 0x01, 0x00, 0x02}, // mod.dr c b  
	{0x814b, &op_mod,	  3,   1, 255, 0xff, 0x01, 0x00, 0x02}, // mod.dr d b  
	{0x814c, &op_mod,	  4,   1, 255, 0xff, 0x01, 0x00, 0x02}, // mod.dr e b  
	{0x814d, &op_mod,	  5,   1, 255, 0xff, 0x01, 0x00, 0x02}, // mod.dr f b  
	{0x814e, &op_mod,	  6,   1, 255, 0xff, 0x01, 0x00, 0x02}, // mod.dr g b  
	{0x814f, &op_mod,	  7,   1, 255, 0xff, 0x01, 0x00, 0x02}, // mod.dr h b  
	{0x8150, &op_mod,	  0,   2, 255, 0xff, 0x01, 0x00, 0x02}, // mod.dr a c  
	{0x8151, &op_mod,	  1,   2, 255, 0xff, 0x01, 0x00, 0x02}, // mod.dr b c  
	{0x8152, &op_mod,	  2,   2, 255, 0xff, 0x01, 0x00, 0x02}, // mod.dr c c  
	{0x8153, &op_mod,	  3,   2, 255, 0xff, 0x01, 0x00, 0x02}, // mod.dr d c  
	{0x8154, &op_mod,	  4,   2, 255, 0xff, 0x01, 0x00, 0x02}, // mod.dr e c  
	{0x8155, &op_mod,	  5,   2, 255, 0xff, 0x01, 0x00, 0x02}, // mod.dr f c  
	{0x8156, &op_mod,	  6,   2, 255, 0xff, 0x01, 0x00, 0x02}, // mod.dr g c  
	{0x8157, &op_mod,	  7,   2, 255, 0xff, 0x01, 0x00, 0x02}, // mod.dr h c  
	{0x8158, &op_mod,	  0,   3, 255, 0xff, 0x01, 0x00, 0x02}, // mod.dr a d  
	{0x8159, &op_mod,	  1,   3, 255, 0xff, 0x01, 0x00, 0x02}, // mod.dr b d  
	{0x815a, &op_mod,	  2,   3, 255, 0xff, 0x01, 0x00, 0x02}, // mod.dr c d  
	{0x815b, &op_mod,	  3,   3, 255, 0xff, 0x01, 0x00, 0x02}, // mod.dr d d  
	{0x815c, &op_mod,	  4,   3, 255, 0xff, 0x01, 0x00, 0x02}, // mod.dr e d  
	{0x815d, &op_mod,	  5,   3, 255, 0xff, 0x01, 0x00, 0x02}, // mod.dr f d  
	{0x815e, &op_mod,	  6,   3, 255, 0xff, 0x01, 0x00, 0x02}, // mod.dr g d  
	{0x815f, &op_mod,	  7,   3, 255, 0xff, 0x01, 0x00, 0x02}, // mod.dr h d  
	{0x8160, &op_mod,	  0,   4, 255, 0xff, 0x01, 0x00, 0x02}, // mod.dr a e  
	{0x8161, &op_mod,	  1,   4, 255, 0xff, 0x01, 0x00, 0x02}, // mod.dr b e  
	{0x8162, &op_mod,	  2,   4, 255, 0xff, 0x01, 0x00, 0x02}, // mod.dr c e  
	{0x8163, &op_mod,	  3,   4, 255, 0xff, 0x01, 0x00, 0x02}, // mod.dr d e  
	{0x8164, &op_mod,	  4,   4, 255, 0xff, 0x01, 0x00, 0x02}, // mod.dr e e  
	{0x8165, &op_mod,	  5,   4, 255, 0xff, 0x01, 0x00, 0x02}, // mod.dr f e  
	{0x8166, &op_mod,	  6,   4, 255, 0xff, 0x01, 0x00, 0x02}, // mod.dr g e  
	{0x8167, &op_mod,	  7,   4, 255, 0xff, 0x01, 0x00, 0x02}, // mod.dr h e  
	{0x8168, &op_mod,	  0,   5, 255, 0xff, 0x01, 0x00, 0x02}, // mod.dr a f  
	{0x8169, &op_mod,	  1,   5, 255, 0xff, 0x01, 0x00, 0x02}, // mod.dr b f  
	{0x816a, &op_mod,	  2,   5, 255, 0xff, 0x01, 0x00, 0x02}, // mod.dr c f  
	{0x816b, &op_mod,	  3,   5, 255, 0xff, 0x01, 0x00, 0x02}, // mod.dr d f  
	{0x816c, &op_mod,	  4,   5, 255, 0xff, 0x01, 0x00, 0x02}, // mod.dr e f  
	{0x816d, &op_mod,	  5,   5, 255, 0xff, 0x01, 0x00, 0x02}, // mod.dr f f  
	{0x816e, &op_mod,	  6,   5, 255, 0xff, 0x01, 0x00, 0x02}, // mod.dr g f  
	{0x816f, &op_mod,	  7,   5, 255, 0xff, 0x01, 0x00, 0x02}, // mod.dr h f  
	{0x8170, &op_mod,	  0,   6, 255, 0xff, 0x01, 0x00, 0x02}, // mod.dr a g  
	{0x8171, &op_mod,	  1,   6, 255, 0xff, 0x01, 0x00, 0x02}, // mod.dr b g  
	{0x8172, &op_mod,	  2,   6, 255, 0xff, 0x01, 0x00, 0x02}, // mod.dr c g  
	{0x8173, &op_mod,	  3,   6, 255, 0xff, 0x01, 0x00, 0x02}, // mod.dr d g  
	{0x8174, &op_mod,	  4,   6, 255, 0xff, 0x01, 0x00, 0x02}, // mod.dr e g  
	{0x8175, &op_mod,	  5,   6, 255, 0xff, 0x01, 0x00, 0x02}, // mod.dr f g  
	{0x8176, &op_mod,	  6,   6, 255, 0xff, 0x01, 0x00, 0x02}, // mod.dr g g  
	{0x8177, &op_mod,	  7,   6, 255, 0xff, 0x01, 0x00, 0x02}, // mod.dr h g  
	{0x8178, &op_mod,	  0,   7, 255, 0xff, 0x01, 0x00, 0x02}, // mod.dr a h  
	{0x8179, &op_mod,	  1,   7, 255, 0xff, 0x01, 0x00, 0x02}, // mod.dr b h  
	{0x817a, &op_mod,	  2,   7, 255, 0xff, 0x01, 0x00, 0x02}, // mod.dr c h  
	{0x817b, &op_mod,	  3,   7, 255, 0xff, 0x01, 0x00, 0x02}, // mod.dr d h  
	{0x817c, &op_mod,	  4,   7, 255, 0xff, 0x01, 0x00, 0x02}, // mod.dr e h  
	{0x817d, &op_mod,	  5,   7, 255, 0xff, 0x01, 0x00, 0x02}, // mod.dr f h  
	{0x817e, &op_mod,	  6,   7, 255, 0xff, 0x01, 0x00, 0x02}, // mod.dr g h  
	{0x817f, &op_mod,	  7,   7, 255, 0xff, 0x01, 0x00, 0x02}, // mod.dr h h  
	{0x8180, &op_mod,	  0,   0, 255, 0xff, 0x01, 0x00, 0x04}, // mod.r a a  
	{0x8181, &op_mod,	  1,   0, 255, 0xff, 0x01, 0x00, 0x04}, // mod.r b a  
	{0x8182, &op_mod,	  2,   0, 255, 0xff, 0x01, 0x00, 0x04}, // mod.r c a  
	{0x8183, &op_mod,	  3,   0, 255, 0xff, 0x01, 0x00, 0x04}, // mod.r d a  
	{0x8184, &op_mod,	  4,   0, 255, 0xff, 0x01, 0x00, 0x04}, // mod.r e a  
	{0x8185, &op_mod,	  5,   0, 255, 0xff, 0x01, 0x00, 0x04}, // mod.r f a  
	{0x8186, &op_mod,	  6,   0, 255, 0xff, 0x01, 0x00, 0x04}, // mod.r g a  
	{0x8187, &op_mod,	  7,   0, 255, 0xff, 0x01, 0x00, 0x04}, // mod.r h a  
	{0x8188, &op_mod,	  0,   1, 255, 0xff, 0x01, 0x00, 0x04}, // mod.r a b  
	{0x8189, &op_mod,	  1,   1, 255, 0xff, 0x01, 0x00, 0x04}, // mod.r b b  
	{0x818a, &op_mod,	  2,   1, 255, 0xff, 0x01, 0x00, 0x04}, // mod.r c b  
	{0x818b, &op_mod,	  3,   1, 255, 0xff, 0x01, 0x00, 0x04}, // mod.r d b  
	{0x818c, &op_mod,	  4,   1, 255, 0xff, 0x01, 0x00, 0x04}, // mod.r e b  
	{0x818d, &op_mod,	  5,   1, 255, 0xff, 0x01, 0x00, 0x04}, // mod.r f b  
	{0x818e, &op_mod,	  6,   1, 255, 0xff, 0x01, 0x00, 0x04}, // mod.r g b  
	{0x818f, &op_mod,	  7,   1, 255, 0xff, 0x01, 0x00, 0x04}, // mod.r h b  
	{0x8190, &op_mod,	  0,   2, 255, 0xff, 0x01, 0x00, 0x04}, // mod.r a c  
	{0x8191, &op_mod,	  1,   2, 255, 0xff, 0x01, 0x00, 0x04}, // mod.r b c  
	{0x8192, &op_mod,	  2,   2, 255, 0xff, 0x01, 0x00, 0x04}, // mod.r c c  
	{0x8193, &op_mod,	  3,   2, 255, 0xff, 0x01, 0x00, 0x04}, // mod.r d c  
	{0x8194, &op_mod,	  4,   2, 255, 0xff, 0x01, 0x00, 0x04}, // mod.r e c  
	{0x8195, &op_mod,	  5,   2, 255, 0xff, 0x01, 0x00, 0x04}, // mod.r f c  
	{0x8196, &op_mod,	  6,   2, 255, 0xff, 0x01, 0x00, 0x04}, // mod.r g c  
	{0x8197, &op_mod,	  7,   2, 255, 0xff, 0x01, 0x00, 0x04}, // mod.r h c  
	{0x8198, &op_mod,	  0,   3, 255, 0xff, 0x01, 0x00, 0x04}, // mod.r a d  
	{0x8199, &op_mod,	  1,   3, 255, 0xff, 0x01, 0x00, 0x04}, // mod.r b d  
	{0x819a, &op_mod,	  2,   3, 255, 0xff, 0x01, 0x00, 0x04}, // mod.r c d  
	{0x819b, &op_mod,	  3,   3, 255, 0xff, 0x01, 0x00, 0x04}, // mod.r d d  
	{0x819c, &op_mod,	  4,   3, 255, 0xff, 0x01, 0x00, 0x04}, // mod.r e d  
	{0x819d, &op_mod,	  5,   3, 255, 0xff, 0x01, 0x00, 0x04}, // mod.r f d  
	{0x819e, &op_mod,	  6,   3, 255, 0xff, 0x01, 0x00, 0x04}, // mod.r g d  
	{0x819f, &op_mod,	  7,   3, 255, 0xff, 0x01, 0x00, 0x04}, // mod.r h d  
	{0x81a0, &op_mod,	  0,   4, 255, 0xff, 0x01, 0x00, 0x04}, // mod.r a e  
	{0x81a1, &op_mod,	  1,   4, 255, 0xff, 0x01, 0x00, 0x04}, // mod.r b e  
	{0x81a2, &op_mod,	  2,   4, 255, 0xff, 0x01, 0x00, 0x04}, // mod.r c e  
	{0x81a3, &op_mod,	  3,   4, 255, 0xff, 0x01, 0x00, 0x04}, // mod.r d e  
	{0x81a4, &op_mod,	  4,   4, 255, 0xff, 0x01, 0x00, 0x04}, // mod.r e e  
	{0x81a5, &op_mod,	  5,   4, 255, 0xff, 0x01, 0x00, 0x04}, // mod.r f e  
	{0x81a6, &op_mod,	  6,   4, 255, 0xff, 0x01, 0x00, 0x04}, // mod.r g e  
	{0x81a7, &op_mod,	  7,   4, 255, 0xff, 0x01, 0x00, 0x04}, // mod.r h e  
	{0x81a8, &op_mod,	  0,   5, 255, 0xff, 0x01, 0x00, 0x04}, // mod.r a f  
	{0x81a9, &op_mod,	  1,   5, 255, 0xff, 0x01, 0x00, 0x04}, // mod.r b f  
	{0x81aa, &op_mod,	  2,   5, 255, 0xff, 0x01, 0x00, 0x04}, // mod.r c f  
	{0x81ab, &op_mod,	  3,   5, 255, 0xff, 0x01, 0x00, 0x04}, // mod.r d f  
	{0x81ac, &op_mod,	  4,   5, 255, 0xff, 0x01, 0x00, 0x04}, // mod.r e f  
	{0x81ad, &op_mod,	  5,   5, 255, 0xff, 0x01, 0x00, 0x04}, // mod.r f f  
	{0x81ae, &op_mod,	  6,   5, 255, 0xff, 0x01, 0x00, 0x04}, // mod.r g f  
	{0x81af, &op_mod,	  7,   5, 255, 0xff, 0x01, 0x00, 0x04}, // mod.r h f  
	{0x81b0, &op_mod,	  0,   6, 255, 0xff, 0x01, 0x00, 0x04}, // mod.r a g  
	{0x81b1, &op_mod,	  1,   6, 255, 0xff, 0x01, 0x00, 0x04}, // mod.r b g  
	{0x81b2, &op_mod,	  2,   6, 255, 0xff, 0x01, 0x00, 0x04}, // mod.r c g  
	{0x81b3, &op_mod,	  3,   6, 255, 0xff, 0x01, 0x00, 0x04}, // mod.r d g  
	{0x81b4, &op_mod,	  4,   6, 255, 0xff, 0x01, 0x00, 0x04}, // mod.r e g  
	{0x81b5, &op_mod,	  5,   6, 255, 0xff, 0x01, 0x00, 0x04}, // mod.r f g  
	{0x81b6, &op_mod,	  6,   6, 255, 0xff, 0x01, 0x00, 0x04}, // mod.r g g  
	{0x81b7, &op_mod,	  7,   6, 255, 0xff, 0x01, 0x00, 0x04}, // mod.r h g  
	{0x81b8, &op_mod,	  0,   7, 255, 0xff, 0x01, 0x00, 0x04}, // mod.r a h  
	{0x81b9, &op_mod,	  1,   7, 255, 0xff, 0x01, 0x00, 0x04}, // mod.r b h  
	{0x81ba, &op_mod,	  2,   7, 255, 0xff, 0x01, 0x00, 0x04}, // mod.r c h  
	{0x81bb, &op_mod,	  3,   7, 255, 0xff, 0x01, 0x00, 0x04}, // mod.r d h  
	{0x81bc, &op_mod,	  4,   7, 255, 0xff, 0x01, 0x00, 0x04}, // mod.r e h  
	{0x81bd, &op_mod,	  5,   7, 255, 0xff, 0x01, 0x00, 0x04}, // mod.r f h  
	{0x81be, &op_mod,	  6,   7, 255, 0xff, 0x01, 0x00, 0x04}, // mod.r g h  
	{0x81bf, &op_mod,	  7,   7, 255, 0xff, 0x01, 0x00, 0x04}, // mod.r h h  
	{0x80c8, &op_mod,	  0,   8, 255, 0xff, 0x00, 0x01, 0x01}, // mod.wi a <literal>  
	{0x80c9, &op_mod,	  1,   8, 255, 0xff, 0x00, 0x01, 0x01}, // mod.wi b <literal>  
	{0x80ca, &op_mod,	  2,   8, 255, 0xff, 0x00, 0x01, 0x01}, // mod.wi c <literal>  
	{0x80cb, &op_mod,	  3,   8, 255, 0xff, 0x00, 0x01, 0x01}, // mod.wi d <literal>  
	{0x80cc, &op_mod,	  4,   8, 255, 0xff, 0x00, 0x01, 0x01}, // mod.wi e <literal>  
	{0x80cd, &op_mod,	  5,   8, 255, 0xff, 0x00, 0x01, 0x01}, // mod.wi f <literal>  
	{0x80ce, &op_mod,	  6,   8, 255, 0xff, 0x00, 0x01, 0x01}, // mod.wi g <literal>  
	{0x80cf, &op_mod,	  7,   8, 255, 0xff, 0x00, 0x01, 0x01}, // mod.wi h <literal>  
	{0x80d0, &op_mod,	  0,   8, 255, 0xff, 0x00, 0x02, 0x02}, // mod.di a <literal>  
	{0x80d1, &op_mod,	  1,   8, 255, 0xff, 0x00, 0x02, 0x02}, // mod.di b <literal>  
	{0x80d2, &op_mod,	  2,   8, 255, 0xff, 0x00, 0x02, 0x02}, // mod.di c <literal>  
	{0x80d3, &op_mod,	  3,   8, 255, 0xff, 0x00, 0x02, 0x02}, // mod.di d <literal>  
	{0x80d4, &op_mod,	  4,   8, 255, 0xff, 0x00, 0x02, 0x02}, // mod.di e <literal>  
	{0x80d5, &op_mod,	  5,   8, 255, 0xff, 0x00, 0x02, 0x02}, // mod.di f <literal>  
	{0x80d6, &op_mod,	  6,   8, 255, 0xff, 0x00, 0x02, 0x02}, // mod.di g <literal>  
	{0x80d7, &op_mod,	  7,   8, 255, 0xff, 0x00, 0x02, 0x02}, // mod.di h <literal>  
	{0x80e0, &op_mod,	  0,   8, 255, 0xff, 0x00, 0x04, 0x04}, // mod.i a <literal>  
	{0x80e1, &op_mod,	  1,   8, 255, 0xff, 0x00, 0x04, 0x04}, // mod.i b <literal>  
	{0x80e2, &op_mod,	  2,   8, 255, 0xff, 0x00, 0x04, 0x04}, // mod.i c <literal>  
	{0x80e3, &op_mod,	  3,   8, 255, 0xff, 0x00, 0x04, 0x04}, // mod.i d <literal>  
	{0x80e4, &op_mod,	  4,   8, 255, 0xff, 0x00, 0x04, 0x04}, // mod.i e <literal>  
	{0x80e5, &op_mod,	  5,   8, 255, 0xff, 0x00, 0x04, 0x04}, // mod.i f <literal>  
	{0x80e6, &op_mod,	  6,   8, 255, 0xff, 0x00, 0x04, 0x04}, // mod.i g <literal>  
	{0x80e7, &op_mod,	  7,   8, 255, 0xff, 0x00, 0x04, 0x04}, // mod.i h <literal>  
	{0x81c8, &op_mod,	  0,   8, 255, 0xff, 0x01, 0x04, 0x01}, // mod.wri a <literal>  
	{0x81c9, &op_mod,	  1,   8, 255, 0xff, 0x01, 0x04, 0x01}, // mod.wri b <literal>  
	{0x81ca, &op_mod,	  2,   8, 255, 0xff, 0x01, 0x04, 0x01}, // mod.wri c <literal>  
	{0x81cb, &op_mod,	  3,   8, 255, 0xff, 0x01, 0x04, 0x01}, // mod.wri d <literal>  
	{0x81cc, &op_mod,	  4,   8, 255, 0xff, 0x01, 0x04, 0x01}, // mod.wri e <literal>  
	{0x81cd, &op_mod,	  5,   8, 255, 0xff, 0x01, 0x04, 0x01}, // mod.wri f <literal>  
	{0x81ce, &op_mod,	  6,   8, 255, 0xff, 0x01, 0x04, 0x01}, // mod.wri g <literal>  
	{0x81cf, &op_mod,	  7,   8, 255, 0xff, 0x01, 0x04, 0x01}, // mod.wri h <literal>  
	{0x81d0, &op_mod,	  0,   8, 255, 0xff, 0x01, 0x04, 0x02}, // mod.dri a <literal>  
	{0x81d1, &op_mod,	  1,   8, 255, 0xff, 0x01, 0x04, 0x02}, // mod.dri b <literal>  
	{0x81d2, &op_mod,	  2,   8, 255, 0xff, 0x01, 0x04, 0x02}, // mod.dri c <literal>  
	{0x81d3, &op_mod,	  3,   8, 255, 0xff, 0x01, 0x04, 0x02}, // mod.dri d <literal>  
	{0x81d4, &op_mod,	  4,   8, 255, 0xff, 0x01, 0x04, 0x02}, // mod.dri e <literal>  
	{0x81d5, &op_mod,	  5,   8, 255, 0xff, 0x01, 0x04, 0x02}, // mod.dri f <literal>  
	{0x81d6, &op_mod,	  6,   8, 255, 0xff, 0x01, 0x04, 0x02}, // mod.dri g <literal>  
	{0x81d7, &op_mod,	  7,   8, 255, 0xff, 0x01, 0x04, 0x02}, // mod.dri h <literal>  
	{0x81e0, &op_mod,	  0,   8, 255, 0xff, 0x01, 0x04, 0x04}, // mod.ri a <literal>  
	{0x81e1, &op_mod,	  1,   8, 255, 0xff, 0x01, 0x04, 0x04}, // mod.ri b <literal>  
	{0x81e2, &op_mod,	  2,   8, 255, 0xff, 0x01, 0x04, 0x04}, // mod.ri c <literal>  
	{0x81e3, &op_mod,	  3,   8, 255, 0xff, 0x01, 0x04, 0x04}, // mod.ri d <literal>  
	{0x81e4, &op_mod,	  4,   8, 255, 0xff, 0x01, 0x04, 0x04}, // mod.ri e <literal>  
	{0x81e5, &op_mod,	  5,   8, 255, 0xff, 0x01, 0x04, 0x04}, // mod.ri f <literal>  
	{0x81e6, &op_mod,	  6,   8, 255, 0xff, 0x01, 0x04, 0x04}, // mod.ri g <literal>  
	{0x81e7, &op_mod,	  7,   8, 255, 0xff, 0x01, 0x04, 0x04}, // mod.ri h <literal>  
	{0x8200, &op_add,	  0,   0, 255, 0xff, 0x00, 0x00, 0x01}, // add.w a a  
	{0x8201, &op_add,	  1,   0, 255, 0xff, 0x00, 0x00, 0x01}, // add.w b a  
	{0x8202, &op_add,	  2,   0, 255, 0xff, 0x00, 0x00, 0x01}, // add.w c a  
	{0x8203, &op_add,	  3,   0, 255, 0xff, 0x00, 0x00, 0x01}, // add.w d a  
	{0x8204, &op_add,	  4,   0, 255, 0xff, 0x00, 0x00, 0x01}, // add.w e a  
	{0x8205, &op_add,	  5,   0, 255, 0xff, 0x00, 0x00, 0x01}, // add.w f a  
	{0x8206, &op_add,	  6,   0, 255, 0xff, 0x00, 0x00, 0x01}, // add.w g a  
	{0x8207, &op_add,	  7,   0, 255, 0xff, 0x00, 0x00, 0x01}, // add.w h a  
	{0x8208, &op_add,	  0,   1, 255, 0xff, 0x00, 0x00, 0x01}, // add.w a b  
	{0x8209, &op_add,	  1,   1, 255, 0xff, 0x00, 0x00, 0x01}, // add.w b b  
	{0x820a, &op_add,	  2,   1, 255, 0xff, 0x00, 0x00, 0x01}, // add.w c b  
	{0x820b, &op_add,	  3,   1, 255, 0xff, 0x00, 0x00, 0x01}, // add.w d b  
	{0x820c, &op_add,	  4,   1, 255, 0xff, 0x00, 0x00, 0x01}, // add.w e b  
	{0x820d, &op_add,	  5,   1, 255, 0xff, 0x00, 0x00, 0x01}, // add.w f b  
	{0x820e, &op_add,	  6,   1, 255, 0xff, 0x00, 0x00, 0x01}, // add.w g b  
	{0x820f, &op_add,	  7,   1, 255, 0xff, 0x00, 0x00, 0x01}, // add.w h b  
	{0x8210, &op_add,	  0,   2, 255, 0xff, 0x00, 0x00, 0x01}, // add.w a c  
	{0x8211, &op_add,	  1,   2, 255, 0xff, 0x00, 0x00, 0x01}, // add.w b c  
	{0x8212, &op_add,	  2,   2, 255, 0xff, 0x00, 0x00, 0x01}, // add.w c c  
	{0x8213, &op_add,	  3,   2, 255, 0xff, 0x00, 0x00, 0x01}, // add.w d c  
	{0x8214, &op_add,	  4,   2, 255, 0xff, 0x00, 0x00, 0x01}, // add.w e c  
	{0x8215, &op_add,	  5,   2, 255, 0xff, 0x00, 0x00, 0x01}, // add.w f c  
	{0x8216, &op_add,	  6,   2, 255, 0xff, 0x00, 0x00, 0x01}, // add.w g c  
	{0x8217, &op_add,	  7,   2, 255, 0xff, 0x00, 0x00, 0x01}, // add.w h c  
	{0x8218, &op_add,	  0,   3, 255, 0xff, 0x00, 0x00, 0x01}, // add.w a d  
	{0x8219, &op_add,	  1,   3, 255, 0xff, 0x00, 0x00, 0x01}, // add.w b d  
	{0x821a, &op_add,	  2,   3, 255, 0xff, 0x00, 0x00, 0x01}, // add.w c d  
	{0x821b, &op_add,	  3,   3, 255, 0xff, 0x00, 0x00, 0x01}, // add.w d d  
	{0x821c, &op_add,	  4,   3, 255, 0xff, 0x00, 0x00, 0x01}, // add.w e d  
	{0x821d, &op_add,	  5,   3, 255, 0xff, 0x00, 0x00, 0x01}, // add.w f d  
	{0x821e, &op_add,	  6,   3, 255, 0xff, 0x00, 0x00, 0x01}, // add.w g d  
	{0x821f, &op_add,	  7,   3, 255, 0xff, 0x00, 0x00, 0x01}, // add.w h d  
	{0x8220, &op_add,	  0,   4, 255, 0xff, 0x00, 0x00, 0x01}, // add.w a e  
	{0x8221, &op_add,	  1,   4, 255, 0xff, 0x00, 0x00, 0x01}, // add.w b e  
	{0x8222, &op_add,	  2,   4, 255, 0xff, 0x00, 0x00, 0x01}, // add.w c e  
	{0x8223, &op_add,	  3,   4, 255, 0xff, 0x00, 0x00, 0x01}, // add.w d e  
	{0x8224, &op_add,	  4,   4, 255, 0xff, 0x00, 0x00, 0x01}, // add.w e e  
	{0x8225, &op_add,	  5,   4, 255, 0xff, 0x00, 0x00, 0x01}, // add.w f e  
	{0x8226, &op_add,	  6,   4, 255, 0xff, 0x00, 0x00, 0x01}, // add.w g e  
	{0x8227, &op_add,	  7,   4, 255, 0xff, 0x00, 0x00, 0x01}, // add.w h e  
	{0x8228, &op_add,	  0,   5, 255, 0xff, 0x00, 0x00, 0x01}, // add.w a f  
	{0x8229, &op_add,	  1,   5, 255, 0xff, 0x00, 0x00, 0x01}, // add.w b f  
	{0x822a, &op_add,	  2,   5, 255, 0xff, 0x00, 0x00, 0x01}, // add.w c f  
	{0x822b, &op_add,	  3,   5, 255, 0xff, 0x00, 0x00, 0x01}, // add.w d f  
	{0x822c, &op_add,	  4,   5, 255, 0xff, 0x00, 0x00, 0x01}, // add.w e f  
	{0x822d, &op_add,	  5,   5, 255, 0xff, 0x00, 0x00, 0x01}, // add.w f f  
	{0x822e, &op_add,	  6,   5, 255, 0xff, 0x00, 0x00, 0x01}, // add.w g f  
	{0x822f, &op_add,	  7,   5, 255, 0xff, 0x00, 0x00, 0x01}, // add.w h f  
	{0x8230, &op_add,	  0,   6, 255, 0xff, 0x00, 0x00, 0x01}, // add.w a g  
	{0x8231, &op_add,	  1,   6, 255, 0xff, 0x00, 0x00, 0x01}, // add.w b g  
	{0x8232, &op_add,	  2,   6, 255, 0xff, 0x00, 0x00, 0x01}, // add.w c g  
	{0x8233, &op_add,	  3,   6, 255, 0xff, 0x00, 0x00, 0x01}, // add.w d g  
	{0x8234, &op_add,	  4,   6, 255, 0xff, 0x00, 0x00, 0x01}, // add.w e g  
	{0x8235, &op_add,	  5,   6, 255, 0xff, 0x00, 0x00, 0x01}, // add.w f g  
	{0x8236, &op_add,	  6,   6, 255, 0xff, 0x00, 0x00, 0x01}, // add.w g g  
	{0x8237, &op_add,	  7,   6, 255, 0xff, 0x00, 0x00, 0x01}, // add.w h g  
	{0x8238, &op_add,	  0,   7, 255, 0xff, 0x00, 0x00, 0x01}, // add.w a h  
	{0x8239, &op_add,	  1,   7, 255, 0xff, 0x00, 0x00, 0x01}, // add.w b h  
	{0x823a, &op_add,	  2,   7, 255, 0xff, 0x00, 0x00, 0x01}, // add.w c h  
	{0x823b, &op_add,	  3,   7, 255, 0xff, 0x00, 0x00, 0x01}, // add.w d h  
	{0x823c, &op_add,	  4,   7, 255, 0xff, 0x00, 0x00, 0x01}, // add.w e h  
	{0x823d, &op_add,	  5,   7, 255, 0xff, 0x00, 0x00, 0x01}, // add.w f h  
	{0x823e, &op_add,	  6,   7, 255, 0xff, 0x00, 0x00, 0x01}, // add.w g h  
	{0x823f, &op_add,	  7,   7, 255, 0xff, 0x00, 0x00, 0x01}, // add.w h h  
	{0x8240, &op_add,	  0,   0, 255, 0xff, 0x00, 0x00, 0x02}, // add.d a a  
	{0x8241, &op_add,	  1,   0, 255, 0xff, 0x00, 0x00, 0x02}, // add.d b a  
	{0x8242, &op_add,	  2,   0, 255, 0xff, 0x00, 0x00, 0x02}, // add.d c a  
	{0x8243, &op_add,	  3,   0, 255, 0xff, 0x00, 0x00, 0x02}, // add.d d a  
	{0x8244, &op_add,	  4,   0, 255, 0xff, 0x00, 0x00, 0x02}, // add.d e a  
	{0x8245, &op_add,	  5,   0, 255, 0xff, 0x00, 0x00, 0x02}, // add.d f a  
	{0x8246, &op_add,	  6,   0, 255, 0xff, 0x00, 0x00, 0x02}, // add.d g a  
	{0x8247, &op_add,	  7,   0, 255, 0xff, 0x00, 0x00, 0x02}, // add.d h a  
	{0x8248, &op_add,	  0,   1, 255, 0xff, 0x00, 0x00, 0x02}, // add.d a b  
	{0x8249, &op_add,	  1,   1, 255, 0xff, 0x00, 0x00, 0x02}, // add.d b b  
	{0x824a, &op_add,	  2,   1, 255, 0xff, 0x00, 0x00, 0x02}, // add.d c b  
	{0x824b, &op_add,	  3,   1, 255, 0xff, 0x00, 0x00, 0x02}, // add.d d b  
	{0x824c, &op_add,	  4,   1, 255, 0xff, 0x00, 0x00, 0x02}, // add.d e b  
	{0x824d, &op_add,	  5,   1, 255, 0xff, 0x00, 0x00, 0x02}, // add.d f b  
	{0x824e, &op_add,	  6,   1, 255, 0xff, 0x00, 0x00, 0x02}, // add.d g b  
	{0x824f, &op_add,	  7,   1, 255, 0xff, 0x00, 0x00, 0x02}, // add.d h b  
	{0x8250, &op_add,	  0,   2, 255, 0xff, 0x00, 0x00, 0x02}, // add.d a c  
	{0x8251, &op_add,	  1,   2, 255, 0xff, 0x00, 0x00, 0x02}, // add.d b c  
	{0x8252, &op_add,	  2,   2, 255, 0xff, 0x00, 0x00, 0x02}, // add.d c c  
	{0x8253, &op_add,	  3,   2, 255, 0xff, 0x00, 0x00, 0x02}, // add.d d c  
	{0x8254, &op_add,	  4,   2, 255, 0xff, 0x00, 0x00, 0x02}, // add.d e c  
	{0x8255, &op_add,	  5,   2, 255, 0xff, 0x00, 0x00, 0x02}, // add.d f c  
	{0x8256, &op_add,	  6,   2, 255, 0xff, 0x00, 0x00, 0x02}, // add.d g c  
	{0x8257, &op_add,	  7,   2, 255, 0xff, 0x00, 0x00, 0x02}, // add.d h c  
	{0x8258, &op_add,	  0,   3, 255, 0xff, 0x00, 0x00, 0x02}, // add.d a d  
	{0x8259, &op_add,	  1,   3, 255, 0xff, 0x00, 0x00, 0x02}, // add.d b d  
	{0x825a, &op_add,	  2,   3, 255, 0xff, 0x00, 0x00, 0x02}, // add.d c d  
	{0x825b, &op_add,	  3,   3, 255, 0xff, 0x00, 0x00, 0x02}, // add.d d d  
	{0x825c, &op_add,	  4,   3, 255, 0xff, 0x00, 0x00, 0x02}, // add.d e d  
	{0x825d, &op_add,	  5,   3, 255, 0xff, 0x00, 0x00, 0x02}, // add.d f d  
	{0x825e, &op_add,	  6,   3, 255, 0xff, 0x00, 0x00, 0x02}, // add.d g d  
	{0x825f, &op_add,	  7,   3, 255, 0xff, 0x00, 0x00, 0x02}, // add.d h d  
	{0x8260, &op_add,	  0,   4, 255, 0xff, 0x00, 0x00, 0x02}, // add.d a e  
	{0x8261, &op_add,	  1,   4, 255, 0xff, 0x00, 0x00, 0x02}, // add.d b e  
	{0x8262, &op_add,	  2,   4, 255, 0xff, 0x00, 0x00, 0x02}, // add.d c e  
	{0x8263, &op_add,	  3,   4, 255, 0xff, 0x00, 0x00, 0x02}, // add.d d e  
	{0x8264, &op_add,	  4,   4, 255, 0xff, 0x00, 0x00, 0x02}, // add.d e e  
	{0x8265, &op_add,	  5,   4, 255, 0xff, 0x00, 0x00, 0x02}, // add.d f e  
	{0x8266, &op_add,	  6,   4, 255, 0xff, 0x00, 0x00, 0x02}, // add.d g e  
	{0x8267, &op_add,	  7,   4, 255, 0xff, 0x00, 0x00, 0x02}, // add.d h e  
	{0x8268, &op_add,	  0,   5, 255, 0xff, 0x00, 0x00, 0x02}, // add.d a f  
	{0x8269, &op_add,	  1,   5, 255, 0xff, 0x00, 0x00, 0x02}, // add.d b f  
	{0x826a, &op_add,	  2,   5, 255, 0xff, 0x00, 0x00, 0x02}, // add.d c f  
	{0x826b, &op_add,	  3,   5, 255, 0xff, 0x00, 0x00, 0x02}, // add.d d f  
	{0x826c, &op_add,	  4,   5, 255, 0xff, 0x00, 0x00, 0x02}, // add.d e f  
	{0x826d, &op_add,	  5,   5, 255, 0xff, 0x00, 0x00, 0x02}, // add.d f f  
	{0x826e, &op_add,	  6,   5, 255, 0xff, 0x00, 0x00, 0x02}, // add.d g f  
	{0x826f, &op_add,	  7,   5, 255, 0xff, 0x00, 0x00, 0x02}, // add.d h f  
	{0x8270, &op_add,	  0,   6, 255, 0xff, 0x00, 0x00, 0x02}, // add.d a g  
	{0x8271, &op_add,	  1,   6, 255, 0xff, 0x00, 0x00, 0x02}, // add.d b g  
	{0x8272, &op_add,	  2,   6, 255, 0xff, 0x00, 0x00, 0x02}, // add.d c g  
	{0x8273, &op_add,	  3,   6, 255, 0xff, 0x00, 0x00, 0x02}, // add.d d g  
	{0x8274, &op_add,	  4,   6, 255, 0xff, 0x00, 0x00, 0x02}, // add.d e g  
	{0x8275, &op_add,	  5,   6, 255, 0xff, 0x00, 0x00, 0x02}, // add.d f g  
	{0x8276, &op_add,	  6,   6, 255, 0xff, 0x00, 0x00, 0x02}, // add.d g g  
	{0x8277, &op_add,	  7,   6, 255, 0xff, 0x00, 0x00, 0x02}, // add.d h g  
	{0x8278, &op_add,	  0,   7, 255, 0xff, 0x00, 0x00, 0x02}, // add.d a h  
	{0x8279, &op_add,	  1,   7, 255, 0xff, 0x00, 0x00, 0x02}, // add.d b h  
	{0x827a, &op_add,	  2,   7, 255, 0xff, 0x00, 0x00, 0x02}, // add.d c h  
	{0x827b, &op_add,	  3,   7, 255, 0xff, 0x00, 0x00, 0x02}, // add.d d h  
	{0x827c, &op_add,	  4,   7, 255, 0xff, 0x00, 0x00, 0x02}, // add.d e h  
	{0x827d, &op_add,	  5,   7, 255, 0xff, 0x00, 0x00, 0x02}, // add.d f h  
	{0x827e, &op_add,	  6,   7, 255, 0xff, 0x00, 0x00, 0x02}, // add.d g h  
	{0x827f, &op_add,	  7,   7, 255, 0xff, 0x00, 0x00, 0x02}, // add.d h h  
	{0x8280, &op_add,	  0,   0, 255, 0xff, 0x00, 0x00, 0x04}, // add a a  
	{0x8281, &op_add,	  1,   0, 255, 0xff, 0x00, 0x00, 0x04}, // add b a  
	{0x8282, &op_add,	  2,   0, 255, 0xff, 0x00, 0x00, 0x04}, // add c a  
	{0x8283, &op_add,	  3,   0, 255, 0xff, 0x00, 0x00, 0x04}, // add d a  
	{0x8284, &op_add,	  4,   0, 255, 0xff, 0x00, 0x00, 0x04}, // add e a  
	{0x8285, &op_add,	  5,   0, 255, 0xff, 0x00, 0x00, 0x04}, // add f a  
	{0x8286, &op_add,	  6,   0, 255, 0xff, 0x00, 0x00, 0x04}, // add g a  
	{0x8287, &op_add,	  7,   0, 255, 0xff, 0x00, 0x00, 0x04}, // add h a  
	{0x8288, &op_add,	  0,   1, 255, 0xff, 0x00, 0x00, 0x04}, // add a b  
	{0x8289, &op_add,	  1,   1, 255, 0xff, 0x00, 0x00, 0x04}, // add b b  
	{0x828a, &op_add,	  2,   1, 255, 0xff, 0x00, 0x00, 0x04}, // add c b  
	{0x828b, &op_add,	  3,   1, 255, 0xff, 0x00, 0x00, 0x04}, // add d b  
	{0x828c, &op_add,	  4,   1, 255, 0xff, 0x00, 0x00, 0x04}, // add e b  
	{0x828d, &op_add,	  5,   1, 255, 0xff, 0x00, 0x00, 0x04}, // add f b  
	{0x828e, &op_add,	  6,   1, 255, 0xff, 0x00, 0x00, 0x04}, // add g b  
	{0x828f, &op_add,	  7,   1, 255, 0xff, 0x00, 0x00, 0x04}, // add h b  
	{0x8290, &op_add,	  0,   2, 255, 0xff, 0x00, 0x00, 0x04}, // add a c  
	{0x8291, &op_add,	  1,   2, 255, 0xff, 0x00, 0x00, 0x04}, // add b c  
	{0x8292, &op_add,	  2,   2, 255, 0xff, 0x00, 0x00, 0x04}, // add c c  
	{0x8293, &op_add,	  3,   2, 255, 0xff, 0x00, 0x00, 0x04}, // add d c  
	{0x8294, &op_add,	  4,   2, 255, 0xff, 0x00, 0x00, 0x04}, // add e c  
	{0x8295, &op_add,	  5,   2, 255, 0xff, 0x00, 0x00, 0x04}, // add f c  
	{0x8296, &op_add,	  6,   2, 255, 0xff, 0x00, 0x00, 0x04}, // add g c  
	{0x8297, &op_add,	  7,   2, 255, 0xff, 0x00, 0x00, 0x04}, // add h c  
	{0x8298, &op_add,	  0,   3, 255, 0xff, 0x00, 0x00, 0x04}, // add a d  
	{0x8299, &op_add,	  1,   3, 255, 0xff, 0x00, 0x00, 0x04}, // add b d  
	{0x829a, &op_add,	  2,   3, 255, 0xff, 0x00, 0x00, 0x04}, // add c d  
	{0x829b, &op_add,	  3,   3, 255, 0xff, 0x00, 0x00, 0x04}, // add d d  
	{0x829c, &op_add,	  4,   3, 255, 0xff, 0x00, 0x00, 0x04}, // add e d  
	{0x829d, &op_add,	  5,   3, 255, 0xff, 0x00, 0x00, 0x04}, // add f d  
	{0x829e, &op_add,	  6,   3, 255, 0xff, 0x00, 0x00, 0x04}, // add g d  
	{0x829f, &op_add,	  7,   3, 255, 0xff, 0x00, 0x00, 0x04}, // add h d  
	{0x82a0, &op_add,	  0,   4, 255, 0xff, 0x00, 0x00, 0x04}, // add a e  
	{0x82a1, &op_add,	  1,   4, 255, 0xff, 0x00, 0x00, 0x04}, // add b e  
	{0x82a2, &op_add,	  2,   4, 255, 0xff, 0x00, 0x00, 0x04}, // add c e  
	{0x82a3, &op_add,	  3,   4, 255, 0xff, 0x00, 0x00, 0x04}, // add d e  
	{0x82a4, &op_add,	  4,   4, 255, 0xff, 0x00, 0x00, 0x04}, // add e e  
	{0x82a5, &op_add,	  5,   4, 255, 0xff, 0x00, 0x00, 0x04}, // add f e  
	{0x82a6, &op_add,	  6,   4, 255, 0xff, 0x00, 0x00, 0x04}, // add g e  
	{0x82a7, &op_add,	  7,   4, 255, 0xff, 0x00, 0x00, 0x04}, // add h e  
	{0x82a8, &op_add,	  0,   5, 255, 0xff, 0x00, 0x00, 0x04}, // add a f  
	{0x82a9, &op_add,	  1,   5, 255, 0xff, 0x00, 0x00, 0x04}, // add b f  
	{0x82aa, &op_add,	  2,   5, 255, 0xff, 0x00, 0x00, 0x04}, // add c f  
	{0x82ab, &op_add,	  3,   5, 255, 0xff, 0x00, 0x00, 0x04}, // add d f  
	{0x82ac, &op_add,	  4,   5, 255, 0xff, 0x00, 0x00, 0x04}, // add e f  
	{0x82ad, &op_add,	  5,   5, 255, 0xff, 0x00, 0x00, 0x04}, // add f f  
	{0x82ae, &op_add,	  6,   5, 255, 0xff, 0x00, 0x00, 0x04}, // add g f  
	{0x82af, &op_add,	  7,   5, 255, 0xff, 0x00, 0x00, 0x04}, // add h f  
	{0x82b0, &op_add,	  0,   6, 255, 0xff, 0x00, 0x00, 0x04}, // add a g  
	{0x82b1, &op_add,	  1,   6, 255, 0xff, 0x00, 0x00, 0x04}, // add b g  
	{0x82b2, &op_add,	  2,   6, 255, 0xff, 0x00, 0x00, 0x04}, // add c g  
	{0x82b3, &op_add,	  3,   6, 255, 0xff, 0x00, 0x00, 0x04}, // add d g  
	{0x82b4, &op_add,	  4,   6, 255, 0xff, 0x00, 0x00, 0x04}, // add e g  
	{0x82b5, &op_add,	  5,   6, 255, 0xff, 0x00, 0x00, 0x04}, // add f g  
	{0x82b6, &op_add,	  6,   6, 255, 0xff, 0x00, 0x00, 0x04}, // add g g  
	{0x82b7, &op_add,	  7,   6, 255, 0xff, 0x00, 0x00, 0x04}, // add h g  
	{0x82b8, &op_add,	  0,   7, 255, 0xff, 0x00, 0x00, 0x04}, // add a h  
	{0x82b9, &op_add,	  1,   7, 255, 0xff, 0x00, 0x00, 0x04}, // add b h  
	{0x82ba, &op_add,	  2,   7, 255, 0xff, 0x00, 0x00, 0x04}, // add c h  
	{0x82bb, &op_add,	  3,   7, 255, 0xff, 0x00, 0x00, 0x04}, // add d h  
	{0x82bc, &op_add,	  4,   7, 255, 0xff, 0x00, 0x00, 0x04}, // add e h  
	{0x82bd, &op_add,	  5,   7, 255, 0xff, 0x00, 0x00, 0x04}, // add f h  
	{0x82be, &op_add,	  6,   7, 255, 0xff, 0x00, 0x00, 0x04}, // add g h  
	{0x82bf, &op_add,	  7,   7, 255, 0xff, 0x00, 0x00, 0x04}, // add h h  
	{0x8300, &op_add,	  0,   0, 255, 0xff, 0x01, 0x00, 0x01}, // add.wr a a  
	{0x8301, &op_add,	  1,   0, 255, 0xff, 0x01, 0x00, 0x01}, // add.wr b a  
	{0x8302, &op_add,	  2,   0, 255, 0xff, 0x01, 0x00, 0x01}, // add.wr c a  
	{0x8303, &op_add,	  3,   0, 255, 0xff, 0x01, 0x00, 0x01}, // add.wr d a  
	{0x8304, &op_add,	  4,   0, 255, 0xff, 0x01, 0x00, 0x01}, // add.wr e a  
	{0x8305, &op_add,	  5,   0, 255, 0xff, 0x01, 0x00, 0x01}, // add.wr f a  
	{0x8306, &op_add,	  6,   0, 255, 0xff, 0x01, 0x00, 0x01}, // add.wr g a  
	{0x8307, &op_add,	  7,   0, 255, 0xff, 0x01, 0x00, 0x01}, // add.wr h a  
	{0x8308, &op_add,	  0,   1, 255, 0xff, 0x01, 0x00, 0x01}, // add.wr a b  
	{0x8309, &op_add,	  1,   1, 255, 0xff, 0x01, 0x00, 0x01}, // add.wr b b  
	{0x830a, &op_add,	  2,   1, 255, 0xff, 0x01, 0x00, 0x01}, // add.wr c b  
	{0x830b, &op_add,	  3,   1, 255, 0xff, 0x01, 0x00, 0x01}, // add.wr d b  
	{0x830c, &op_add,	  4,   1, 255, 0xff, 0x01, 0x00, 0x01}, // add.wr e b  
	{0x830d, &op_add,	  5,   1, 255, 0xff, 0x01, 0x00, 0x01}, // add.wr f b  
	{0x830e, &op_add,	  6,   1, 255, 0xff, 0x01, 0x00, 0x01}, // add.wr g b  
	{0x830f, &op_add,	  7,   1, 255, 0xff, 0x01, 0x00, 0x01}, // add.wr h b  
	{0x8310, &op_add,	  0,   2, 255, 0xff, 0x01, 0x00, 0x01}, // add.wr a c  
	{0x8311, &op_add,	  1,   2, 255, 0xff, 0x01, 0x00, 0x01}, // add.wr b c  
	{0x8312, &op_add,	  2,   2, 255, 0xff, 0x01, 0x00, 0x01}, // add.wr c c  
	{0x8313, &op_add,	  3,   2, 255, 0xff, 0x01, 0x00, 0x01}, // add.wr d c  
	{0x8314, &op_add,	  4,   2, 255, 0xff, 0x01, 0x00, 0x01}, // add.wr e c  
	{0x8315, &op_add,	  5,   2, 255, 0xff, 0x01, 0x00, 0x01}, // add.wr f c  
	{0x8316, &op_add,	  6,   2, 255, 0xff, 0x01, 0x00, 0x01}, // add.wr g c  
	{0x8317, &op_add,	  7,   2, 255, 0xff, 0x01, 0x00, 0x01}, // add.wr h c  
	{0x8318, &op_add,	  0,   3, 255, 0xff, 0x01, 0x00, 0x01}, // add.wr a d  
	{0x8319, &op_add,	  1,   3, 255, 0xff, 0x01, 0x00, 0x01}, // add.wr b d  
	{0x831a, &op_add,	  2,   3, 255, 0xff, 0x01, 0x00, 0x01}, // add.wr c d  
	{0x831b, &op_add,	  3,   3, 255, 0xff, 0x01, 0x00, 0x01}, // add.wr d d  
	{0x831c, &op_add,	  4,   3, 255, 0xff, 0x01, 0x00, 0x01}, // add.wr e d  
	{0x831d, &op_add,	  5,   3, 255, 0xff, 0x01, 0x00, 0x01}, // add.wr f d  
	{0x831e, &op_add,	  6,   3, 255, 0xff, 0x01, 0x00, 0x01}, // add.wr g d  
	{0x831f, &op_add,	  7,   3, 255, 0xff, 0x01, 0x00, 0x01}, // add.wr h d  
	{0x8320, &op_add,	  0,   4, 255, 0xff, 0x01, 0x00, 0x01}, // add.wr a e  
	{0x8321, &op_add,	  1,   4, 255, 0xff, 0x01, 0x00, 0x01}, // add.wr b e  
	{0x8322, &op_add,	  2,   4, 255, 0xff, 0x01, 0x00, 0x01}, // add.wr c e  
	{0x8323, &op_add,	  3,   4, 255, 0xff, 0x01, 0x00, 0x01}, // add.wr d e  
	{0x8324, &op_add,	  4,   4, 255, 0xff, 0x01, 0x00, 0x01}, // add.wr e e  
	{0x8325, &op_add,	  5,   4, 255, 0xff, 0x01, 0x00, 0x01}, // add.wr f e  
	{0x8326, &op_add,	  6,   4, 255, 0xff, 0x01, 0x00, 0x01}, // add.wr g e  
	{0x8327, &op_add,	  7,   4, 255, 0xff, 0x01, 0x00, 0x01}, // add.wr h e  
	{0x8328, &op_add,	  0,   5, 255, 0xff, 0x01, 0x00, 0x01}, // add.wr a f  
	{0x8329, &op_add,	  1,   5, 255, 0xff, 0x01, 0x00, 0x01}, // add.wr b f  
	{0x832a, &op_add,	  2,   5, 255, 0xff, 0x01, 0x00, 0x01}, // add.wr c f  
	{0x832b, &op_add,	  3,   5, 255, 0xff, 0x01, 0x00, 0x01}, // add.wr d f  
	{0x832c, &op_add,	  4,   5, 255, 0xff, 0x01, 0x00, 0x01}, // add.wr e f  
	{0x832d, &op_add,	  5,   5, 255, 0xff, 0x01, 0x00, 0x01}, // add.wr f f  
	{0x832e, &op_add,	  6,   5, 255, 0xff, 0x01, 0x00, 0x01}, // add.wr g f  
	{0x832f, &op_add,	  7,   5, 255, 0xff, 0x01, 0x00, 0x01}, // add.wr h f  
	{0x8330, &op_add,	  0,   6, 255, 0xff, 0x01, 0x00, 0x01}, // add.wr a g  
	{0x8331, &op_add,	  1,   6, 255, 0xff, 0x01, 0x00, 0x01}, // add.wr b g  
	{0x8332, &op_add,	  2,   6, 255, 0xff, 0x01, 0x00, 0x01}, // add.wr c g  
	{0x8333, &op_add,	  3,   6, 255, 0xff, 0x01, 0x00, 0x01}, // add.wr d g  
	{0x8334, &op_add,	  4,   6, 255, 0xff, 0x01, 0x00, 0x01}, // add.wr e g  
	{0x8335, &op_add,	  5,   6, 255, 0xff, 0x01, 0x00, 0x01}, // add.wr f g  
	{0x8336, &op_add,	  6,   6, 255, 0xff, 0x01, 0x00, 0x01}, // add.wr g g  
	{0x8337, &op_add,	  7,   6, 255, 0xff, 0x01, 0x00, 0x01}, // add.wr h g  
	{0x8338, &op_add,	  0,   7, 255, 0xff, 0x01, 0x00, 0x01}, // add.wr a h  
	{0x8339, &op_add,	  1,   7, 255, 0xff, 0x01, 0x00, 0x01}, // add.wr b h  
	{0x833a, &op_add,	  2,   7, 255, 0xff, 0x01, 0x00, 0x01}, // add.wr c h  
	{0x833b, &op_add,	  3,   7, 255, 0xff, 0x01, 0x00, 0x01}, // add.wr d h  
	{0x833c, &op_add,	  4,   7, 255, 0xff, 0x01, 0x00, 0x01}, // add.wr e h  
	{0x833d, &op_add,	  5,   7, 255, 0xff, 0x01, 0x00, 0x01}, // add.wr f h  
	{0x833e, &op_add,	  6,   7, 255, 0xff, 0x01, 0x00, 0x01}, // add.wr g h  
	{0x833f, &op_add,	  7,   7, 255, 0xff, 0x01, 0x00, 0x01}, // add.wr h h  
	{0x8340, &op_add,	  0,   0, 255, 0xff, 0x01, 0x00, 0x02}, // add.dr a a  
	{0x8341, &op_add,	  1,   0, 255, 0xff, 0x01, 0x00, 0x02}, // add.dr b a  
	{0x8342, &op_add,	  2,   0, 255, 0xff, 0x01, 0x00, 0x02}, // add.dr c a  
	{0x8343, &op_add,	  3,   0, 255, 0xff, 0x01, 0x00, 0x02}, // add.dr d a  
	{0x8344, &op_add,	  4,   0, 255, 0xff, 0x01, 0x00, 0x02}, // add.dr e a  
	{0x8345, &op_add,	  5,   0, 255, 0xff, 0x01, 0x00, 0x02}, // add.dr f a  
	{0x8346, &op_add,	  6,   0, 255, 0xff, 0x01, 0x00, 0x02}, // add.dr g a  
	{0x8347, &op_add,	  7,   0, 255, 0xff, 0x01, 0x00, 0x02}, // add.dr h a  
	{0x8348, &op_add,	  0,   1, 255, 0xff, 0x01, 0x00, 0x02}, // add.dr a b  
	{0x8349, &op_add,	  1,   1, 255, 0xff, 0x01, 0x00, 0x02}, // add.dr b b  
	{0x834a, &op_add,	  2,   1, 255, 0xff, 0x01, 0x00, 0x02}, // add.dr c b  
	{0x834b, &op_add,	  3,   1, 255, 0xff, 0x01, 0x00, 0x02}, // add.dr d b  
	{0x834c, &op_add,	  4,   1, 255, 0xff, 0x01, 0x00, 0x02}, // add.dr e b  
	{0x834d, &op_add,	  5,   1, 255, 0xff, 0x01, 0x00, 0x02}, // add.dr f b  
	{0x834e, &op_add,	  6,   1, 255, 0xff, 0x01, 0x00, 0x02}, // add.dr g b  
	{0x834f, &op_add,	  7,   1, 255, 0xff, 0x01, 0x00, 0x02}, // add.dr h b  
	{0x8350, &op_add,	  0,   2, 255, 0xff, 0x01, 0x00, 0x02}, // add.dr a c  
	{0x8351, &op_add,	  1,   2, 255, 0xff, 0x01, 0x00, 0x02}, // add.dr b c  
	{0x8352, &op_add,	  2,   2, 255, 0xff, 0x01, 0x00, 0x02}, // add.dr c c  
	{0x8353, &op_add,	  3,   2, 255, 0xff, 0x01, 0x00, 0x02}, // add.dr d c  
	{0x8354, &op_add,	  4,   2, 255, 0xff, 0x01, 0x00, 0x02}, // add.dr e c  
	{0x8355, &op_add,	  5,   2, 255, 0xff, 0x01, 0x00, 0x02}, // add.dr f c  
	{0x8356, &op_add,	  6,   2, 255, 0xff, 0x01, 0x00, 0x02}, // add.dr g c  
	{0x8357, &op_add,	  7,   2, 255, 0xff, 0x01, 0x00, 0x02}, // add.dr h c  
	{0x8358, &op_add,	  0,   3, 255, 0xff, 0x01, 0x00, 0x02}, // add.dr a d  
	{0x8359, &op_add,	  1,   3, 255, 0xff, 0x01, 0x00, 0x02}, // add.dr b d  
	{0x835a, &op_add,	  2,   3, 255, 0xff, 0x01, 0x00, 0x02}, // add.dr c d  
	{0x835b, &op_add,	  3,   3, 255, 0xff, 0x01, 0x00, 0x02}, // add.dr d d  
	{0x835c, &op_add,	  4,   3, 255, 0xff, 0x01, 0x00, 0x02}, // add.dr e d  
	{0x835d, &op_add,	  5,   3, 255, 0xff, 0x01, 0x00, 0x02}, // add.dr f d  
	{0x835e, &op_add,	  6,   3, 255, 0xff, 0x01, 0x00, 0x02}, // add.dr g d  
	{0x835f, &op_add,	  7,   3, 255, 0xff, 0x01, 0x00, 0x02}, // add.dr h d  
	{0x8360, &op_add,	  0,   4, 255, 0xff, 0x01, 0x00, 0x02}, // add.dr a e  
	{0x8361, &op_add,	  1,   4, 255, 0xff, 0x01, 0x00, 0x02}, // add.dr b e  
	{0x8362, &op_add,	  2,   4, 255, 0xff, 0x01, 0x00, 0x02}, // add.dr c e  
	{0x8363, &op_add,	  3,   4, 255, 0xff, 0x01, 0x00, 0x02}, // add.dr d e  
	{0x8364, &op_add,	  4,   4, 255, 0xff, 0x01, 0x00, 0x02}, // add.dr e e  
	{0x8365, &op_add,	  5,   4, 255, 0xff, 0x01, 0x00, 0x02}, // add.dr f e  
	{0x8366, &op_add,	  6,   4, 255, 0xff, 0x01, 0x00, 0x02}, // add.dr g e  
	{0x8367, &op_add,	  7,   4, 255, 0xff, 0x01, 0x00, 0x02}, // add.dr h e  
	{0x8368, &op_add,	  0,   5, 255, 0xff, 0x01, 0x00, 0x02}, // add.dr a f  
	{0x8369, &op_add,	  1,   5, 255, 0xff, 0x01, 0x00, 0x02}, // add.dr b f  
	{0x836a, &op_add,	  2,   5, 255, 0xff, 0x01, 0x00, 0x02}, // add.dr c f  
	{0x836b, &op_add,	  3,   5, 255, 0xff, 0x01, 0x00, 0x02}, // add.dr d f  
	{0x836c, &op_add,	  4,   5, 255, 0xff, 0x01, 0x00, 0x02}, // add.dr e f  
	{0x836d, &op_add,	  5,   5, 255, 0xff, 0x01, 0x00, 0x02}, // add.dr f f  
	{0x836e, &op_add,	  6,   5, 255, 0xff, 0x01, 0x00, 0x02}, // add.dr g f  
	{0x836f, &op_add,	  7,   5, 255, 0xff, 0x01, 0x00, 0x02}, // add.dr h f  
	{0x8370, &op_add,	  0,   6, 255, 0xff, 0x01, 0x00, 0x02}, // add.dr a g  
	{0x8371, &op_add,	  1,   6, 255, 0xff, 0x01, 0x00, 0x02}, // add.dr b g  
	{0x8372, &op_add,	  2,   6, 255, 0xff, 0x01, 0x00, 0x02}, // add.dr c g  
	{0x8373, &op_add,	  3,   6, 255, 0xff, 0x01, 0x00, 0x02}, // add.dr d g  
	{0x8374, &op_add,	  4,   6, 255, 0xff, 0x01, 0x00, 0x02}, // add.dr e g  
	{0x8375, &op_add,	  5,   6, 255, 0xff, 0x01, 0x00, 0x02}, // add.dr f g  
	{0x8376, &op_add,	  6,   6, 255, 0xff, 0x01, 0x00, 0x02}, // add.dr g g  
	{0x8377, &op_add,	  7,   6, 255, 0xff, 0x01, 0x00, 0x02}, // add.dr h g  
	{0x8378, &op_add,	  0,   7, 255, 0xff, 0x01, 0x00, 0x02}, // add.dr a h  
	{0x8379, &op_add,	  1,   7, 255, 0xff, 0x01, 0x00, 0x02}, // add.dr b h  
	{0x837a, &op_add,	  2,   7, 255, 0xff, 0x01, 0x00, 0x02}, // add.dr c h  
	{0x837b, &op_add,	  3,   7, 255, 0xff, 0x01, 0x00, 0x02}, // add.dr d h  
	{0x837c, &op_add,	  4,   7, 255, 0xff, 0x01, 0x00, 0x02}, // add.dr e h  
	{0x837d, &op_add,	  5,   7, 255, 0xff, 0x01, 0x00, 0x02}, // add.dr f h  
	{0x837e, &op_add,	  6,   7, 255, 0xff, 0x01, 0x00, 0x02}, // add.dr g h  
	{0x837f, &op_add,	  7,   7, 255, 0xff, 0x01, 0x00, 0x02}, // add.dr h h  
	{0x8380, &op_add,	  0,   0, 255, 0xff, 0x01, 0x00, 0x04}, // add.r a a  
	{0x8381, &op_add,	  1,   0, 255, 0xff, 0x01, 0x00, 0x04}, // add.r b a  
	{0x8382, &op_add,	  2,   0, 255, 0xff, 0x01, 0x00, 0x04}, // add.r c a  
	{0x8383, &op_add,	  3,   0, 255, 0xff, 0x01, 0x00, 0x04}, // add.r d a  
	{0x8384, &op_add,	  4,   0, 255, 0xff, 0x01, 0x00, 0x04}, // add.r e a  
	{0x8385, &op_add,	  5,   0, 255, 0xff, 0x01, 0x00, 0x04}, // add.r f a  
	{0x8386, &op_add,	  6,   0, 255, 0xff, 0x01, 0x00, 0x04}, // add.r g a  
	{0x8387, &op_add,	  7,   0, 255, 0xff, 0x01, 0x00, 0x04}, // add.r h a  
	{0x8388, &op_add,	  0,   1, 255, 0xff, 0x01, 0x00, 0x04}, // add.r a b  
	{0x8389, &op_add,	  1,   1, 255, 0xff, 0x01, 0x00, 0x04}, // add.r b b  
	{0x838a, &op_add,	  2,   1, 255, 0xff, 0x01, 0x00, 0x04}, // add.r c b  
	{0x838b, &op_add,	  3,   1, 255, 0xff, 0x01, 0x00, 0x04}, // add.r d b  
	{0x838c, &op_add,	  4,   1, 255, 0xff, 0x01, 0x00, 0x04}, // add.r e b  
	{0x838d, &op_add,	  5,   1, 255, 0xff, 0x01, 0x00, 0x04}, // add.r f b  
	{0x838e, &op_add,	  6,   1, 255, 0xff, 0x01, 0x00, 0x04}, // add.r g b  
	{0x838f, &op_add,	  7,   1, 255, 0xff, 0x01, 0x00, 0x04}, // add.r h b  
	{0x8390, &op_add,	  0,   2, 255, 0xff, 0x01, 0x00, 0x04}, // add.r a c  
	{0x8391, &op_add,	  1,   2, 255, 0xff, 0x01, 0x00, 0x04}, // add.r b c  
	{0x8392, &op_add,	  2,   2, 255, 0xff, 0x01, 0x00, 0x04}, // add.r c c  
	{0x8393, &op_add,	  3,   2, 255, 0xff, 0x01, 0x00, 0x04}, // add.r d c  
	{0x8394, &op_add,	  4,   2, 255, 0xff, 0x01, 0x00, 0x04}, // add.r e c  
	{0x8395, &op_add,	  5,   2, 255, 0xff, 0x01, 0x00, 0x04}, // add.r f c  
	{0x8396, &op_add,	  6,   2, 255, 0xff, 0x01, 0x00, 0x04}, // add.r g c  
	{0x8397, &op_add,	  7,   2, 255, 0xff, 0x01, 0x00, 0x04}, // add.r h c  
	{0x8398, &op_add,	  0,   3, 255, 0xff, 0x01, 0x00, 0x04}, // add.r a d  
	{0x8399, &op_add,	  1,   3, 255, 0xff, 0x01, 0x00, 0x04}, // add.r b d  
	{0x839a, &op_add,	  2,   3, 255, 0xff, 0x01, 0x00, 0x04}, // add.r c d  
	{0x839b, &op_add,	  3,   3, 255, 0xff, 0x01, 0x00, 0x04}, // add.r d d  
	{0x839c, &op_add,	  4,   3, 255, 0xff, 0x01, 0x00, 0x04}, // add.r e d  
	{0x839d, &op_add,	  5,   3, 255, 0xff, 0x01, 0x00, 0x04}, // add.r f d  
	{0x839e, &op_add,	  6,   3, 255, 0xff, 0x01, 0x00, 0x04}, // add.r g d  
	{0x839f, &op_add,	  7,   3, 255, 0xff, 0x01, 0x00, 0x04}, // add.r h d  
	{0x83a0, &op_add,	  0,   4, 255, 0xff, 0x01, 0x00, 0x04}, // add.r a e  
	{0x83a1, &op_add,	  1,   4, 255, 0xff, 0x01, 0x00, 0x04}, // add.r b e  
	{0x83a2, &op_add,	  2,   4, 255, 0xff, 0x01, 0x00, 0x04}, // add.r c e  
	{0x83a3, &op_add,	  3,   4, 255, 0xff, 0x01, 0x00, 0x04}, // add.r d e  
	{0x83a4, &op_add,	  4,   4, 255, 0xff, 0x01, 0x00, 0x04}, // add.r e e  
	{0x83a5, &op_add,	  5,   4, 255, 0xff, 0x01, 0x00, 0x04}, // add.r f e  
	{0x83a6, &op_add,	  6,   4, 255, 0xff, 0x01, 0x00, 0x04}, // add.r g e  
	{0x83a7, &op_add,	  7,   4, 255, 0xff, 0x01, 0x00, 0x04}, // add.r h e  
	{0x83a8, &op_add,	  0,   5, 255, 0xff, 0x01, 0x00, 0x04}, // add.r a f  
	{0x83a9, &op_add,	  1,   5, 255, 0xff, 0x01, 0x00, 0x04}, // add.r b f  
	{0x83aa, &op_add,	  2,   5, 255, 0xff, 0x01, 0x00, 0x04}, // add.r c f  
	{0x83ab, &op_add,	  3,   5, 255, 0xff, 0x01, 0x00, 0x04}, // add.r d f  
	{0x83ac, &op_add,	  4,   5, 255, 0xff, 0x01, 0x00, 0x04}, // add.r e f  
	{0x83ad, &op_add,	  5,   5, 255, 0xff, 0x01, 0x00, 0x04}, // add.r f f  
	{0x83ae, &op_add,	  6,   5, 255, 0xff, 0x01, 0x00, 0x04}, // add.r g f  
	{0x83af, &op_add,	  7,   5, 255, 0xff, 0x01, 0x00, 0x04}, // add.r h f  
	{0x83b0, &op_add,	  0,   6, 255, 0xff, 0x01, 0x00, 0x04}, // add.r a g  
	{0x83b1, &op_add,	  1,   6, 255, 0xff, 0x01, 0x00, 0x04}, // add.r b g  
	{0x83b2, &op_add,	  2,   6, 255, 0xff, 0x01, 0x00, 0x04}, // add.r c g  
	{0x83b3, &op_add,	  3,   6, 255, 0xff, 0x01, 0x00, 0x04}, // add.r d g  
	{0x83b4, &op_add,	  4,   6, 255, 0xff, 0x01, 0x00, 0x04}, // add.r e g  
	{0x83b5, &op_add,	  5,   6, 255, 0xff, 0x01, 0x00, 0x04}, // add.r f g  
	{0x83b6, &op_add,	  6,   6, 255, 0xff, 0x01, 0x00, 0x04}, // add.r g g  
	{0x83b7, &op_add,	  7,   6, 255, 0xff, 0x01, 0x00, 0x04}, // add.r h g  
	{0x83b8, &op_add,	  0,   7, 255, 0xff, 0x01, 0x00, 0x04}, // add.r a h  
	{0x83b9, &op_add,	  1,   7, 255, 0xff, 0x01, 0x00, 0x04}, // add.r b h  
	{0x83ba, &op_add,	  2,   7, 255, 0xff, 0x01, 0x00, 0x04}, // add.r c h  
	{0x83bb, &op_add,	  3,   7, 255, 0xff, 0x01, 0x00, 0x04}, // add.r d h  
	{0x83bc, &op_add,	  4,   7, 255, 0xff, 0x01, 0x00, 0x04}, // add.r e h  
	{0x83bd, &op_add,	  5,   7, 255, 0xff, 0x01, 0x00, 0x04}, // add.r f h  
	{0x83be, &op_add,	  6,   7, 255, 0xff, 0x01, 0x00, 0x04}, // add.r g h  
	{0x83bf, &op_add,	  7,   7, 255, 0xff, 0x01, 0x00, 0x04}, // add.r h h  
	{0x82c8, &op_add,	  0,   8, 255, 0xff, 0x00, 0x01, 0x01}, // add.wi a <literal>  
	{0x82c9, &op_add,	  1,   8, 255, 0xff, 0x00, 0x01, 0x01}, // add.wi b <literal>  
	{0x82ca, &op_add,	  2,   8, 255, 0xff, 0x00, 0x01, 0x01}, // add.wi c <literal>  
	{0x82cb, &op_add,	  3,   8, 255, 0xff, 0x00, 0x01, 0x01}, // add.wi d <literal>  
	{0x82cc, &op_add,	  4,   8, 255, 0xff, 0x00, 0x01, 0x01}, // add.wi e <literal>  
	{0x82cd, &op_add,	  5,   8, 255, 0xff, 0x00, 0x01, 0x01}, // add.wi f <literal>  
	{0x82ce, &op_add,	  6,   8, 255, 0xff, 0x00, 0x01, 0x01}, // add.wi g <literal>  
	{0x82cf, &op_add,	  7,   8, 255, 0xff, 0x00, 0x01, 0x01}, // add.wi h <literal>  
	{0x82d0, &op_add,	  0,   8, 255, 0xff, 0x00, 0x02, 0x02}, // add.di a <literal>  
	{0x82d1, &op_add,	  1,   8, 255, 0xff, 0x00, 0x02, 0x02}, // add.di b <literal>  
	{0x82d2, &op_add,	  2,   8, 255, 0xff, 0x00, 0x02, 0x02}, // add.di c <literal>  
	{0x82d3, &op_add,	  3,   8, 255, 0xff, 0x00, 0x02, 0x02}, // add.di d <literal>  
	{0x82d4, &op_add,	  4,   8, 255, 0xff, 0x00, 0x02, 0x02}, // add.di e <literal>  
	{0x82d5, &op_add,	  5,   8, 255, 0xff, 0x00, 0x02, 0x02}, // add.di f <literal>  
	{0x82d6, &op_add,	  6,   8, 255, 0xff, 0x00, 0x02, 0x02}, // add.di g <literal>  
	{0x82d7, &op_add,	  7,   8, 255, 0xff, 0x00, 0x02, 0x02}, // add.di h <literal>  
	{0x82e0, &op_add,	  0,   8, 255, 0xff, 0x00, 0x04, 0x04}, // add.i a <literal>  
	{0x82e1, &op_add,	  1,   8, 255, 0xff, 0x00, 0x04, 0x04}, // add.i b <literal>  
	{0x82e2, &op_add,	  2,   8, 255, 0xff, 0x00, 0x04, 0x04}, // add.i c <literal>  
	{0x82e3, &op_add,	  3,   8, 255, 0xff, 0x00, 0x04, 0x04}, // add.i d <literal>  
	{0x82e4, &op_add,	  4,   8, 255, 0xff, 0x00, 0x04, 0x04}, // add.i e <literal>  
	{0x82e5, &op_add,	  5,   8, 255, 0xff, 0x00, 0x04, 0x04}, // add.i f <literal>  
	{0x82e6, &op_add,	  6,   8, 255, 0xff, 0x00, 0x04, 0x04}, // add.i g <literal>  
	{0x82e7, &op_add,	  7,   8, 255, 0xff, 0x00, 0x04, 0x04}, // add.i h <literal>  
	{0x83c8, &op_add,	  0,   8, 255, 0xff, 0x01, 0x04, 0x01}, // add.wri a <literal>  
	{0x83c9, &op_add,	  1,   8, 255, 0xff, 0x01, 0x04, 0x01}, // add.wri b <literal>  
	{0x83ca, &op_add,	  2,   8, 255, 0xff, 0x01, 0x04, 0x01}, // add.wri c <literal>  
	{0x83cb, &op_add,	  3,   8, 255, 0xff, 0x01, 0x04, 0x01}, // add.wri d <literal>  
	{0x83cc, &op_add,	  4,   8, 255, 0xff, 0x01, 0x04, 0x01}, // add.wri e <literal>  
	{0x83cd, &op_add,	  5,   8, 255, 0xff, 0x01, 0x04, 0x01}, // add.wri f <literal>  
	{0x83ce, &op_add,	  6,   8, 255, 0xff, 0x01, 0x04, 0x01}, // add.wri g <literal>  
	{0x83cf, &op_add,	  7,   8, 255, 0xff, 0x01, 0x04, 0x01}, // add.wri h <literal>  
	{0x83d0, &op_add,	  0,   8, 255, 0xff, 0x01, 0x04, 0x02}, // add.dri a <literal>  
	{0x83d1, &op_add,	  1,   8, 255, 0xff, 0x01, 0x04, 0x02}, // add.dri b <literal>  
	{0x83d2, &op_add,	  2,   8, 255, 0xff, 0x01, 0x04, 0x02}, // add.dri c <literal>  
	{0x83d3, &op_add,	  3,   8, 255, 0xff, 0x01, 0x04, 0x02}, // add.dri d <literal>  
	{0x83d4, &op_add,	  4,   8, 255, 0xff, 0x01, 0x04, 0x02}, // add.dri e <literal>  
	{0x83d5, &op_add,	  5,   8, 255, 0xff, 0x01, 0x04, 0x02}, // add.dri f <literal>  
	{0x83d6, &op_add,	  6,   8, 255, 0xff, 0x01, 0x04, 0x02}, // add.dri g <literal>  
	{0x83d7, &op_add,	  7,   8, 255, 0xff, 0x01, 0x04, 0x02}, // add.dri h <literal>  
	{0x83e0, &op_add,	  0,   8, 255, 0xff, 0x01, 0x04, 0x04}, // add.ri a <literal>  
	{0x83e1, &op_add,	  1,   8, 255, 0xff, 0x01, 0x04, 0x04}, // add.ri b <literal>  
	{0x83e2, &op_add,	  2,   8, 255, 0xff, 0x01, 0x04, 0x04}, // add.ri c <literal>  
	{0x83e3, &op_add,	  3,   8, 255, 0xff, 0x01, 0x04, 0x04}, // add.ri d <literal>  
	{0x83e4, &op_add,	  4,   8, 255, 0xff, 0x01, 0x04, 0x04}, // add.ri e <literal>  
	{0x83e5, &op_add,	  5,   8, 255, 0xff, 0x01, 0x04, 0x04}, // add.ri f <literal>  
	{0x83e6, &op_add,	  6,   8, 255, 0xff, 0x01, 0x04, 0x04}, // add.ri g <literal>  
	{0x83e7, &op_add,	  7,   8, 255, 0xff, 0x01, 0x04, 0x04}, // add.ri h <literal>  
	{0x8400, &op_lsh,	  0,   0, 255, 0xff, 0x00, 0x00, 0x01}, // lsh.w a a  
	{0x8401, &op_lsh,	  1,   0, 255, 0xff, 0x00, 0x00, 0x01}, // lsh.w b a  
	{0x8402, &op_lsh,	  2,   0, 255, 0xff, 0x00, 0x00, 0x01}, // lsh.w c a  
	{0x8403, &op_lsh,	  3,   0, 255, 0xff, 0x00, 0x00, 0x01}, // lsh.w d a  
	{0x8404, &op_lsh,	  4,   0, 255, 0xff, 0x00, 0x00, 0x01}, // lsh.w e a  
	{0x8405, &op_lsh,	  5,   0, 255, 0xff, 0x00, 0x00, 0x01}, // lsh.w f a  
	{0x8406, &op_lsh,	  6,   0, 255, 0xff, 0x00, 0x00, 0x01}, // lsh.w g a  
	{0x8407, &op_lsh,	  7,   0, 255, 0xff, 0x00, 0x00, 0x01}, // lsh.w h a  
	{0x8408, &op_lsh,	  0,   1, 255, 0xff, 0x00, 0x00, 0x01}, // lsh.w a b  
	{0x8409, &op_lsh,	  1,   1, 255, 0xff, 0x00, 0x00, 0x01}, // lsh.w b b  
	{0x840a, &op_lsh,	  2,   1, 255, 0xff, 0x00, 0x00, 0x01}, // lsh.w c b  
	{0x840b, &op_lsh,	  3,   1, 255, 0xff, 0x00, 0x00, 0x01}, // lsh.w d b  
	{0x840c, &op_lsh,	  4,   1, 255, 0xff, 0x00, 0x00, 0x01}, // lsh.w e b  
	{0x840d, &op_lsh,	  5,   1, 255, 0xff, 0x00, 0x00, 0x01}, // lsh.w f b  
	{0x840e, &op_lsh,	  6,   1, 255, 0xff, 0x00, 0x00, 0x01}, // lsh.w g b  
	{0x840f, &op_lsh,	  7,   1, 255, 0xff, 0x00, 0x00, 0x01}, // lsh.w h b  
	{0x8410, &op_lsh,	  0,   2, 255, 0xff, 0x00, 0x00, 0x01}, // lsh.w a c  
	{0x8411, &op_lsh,	  1,   2, 255, 0xff, 0x00, 0x00, 0x01}, // lsh.w b c  
	{0x8412, &op_lsh,	  2,   2, 255, 0xff, 0x00, 0x00, 0x01}, // lsh.w c c  
	{0x8413, &op_lsh,	  3,   2, 255, 0xff, 0x00, 0x00, 0x01}, // lsh.w d c  
	{0x8414, &op_lsh,	  4,   2, 255, 0xff, 0x00, 0x00, 0x01}, // lsh.w e c  
	{0x8415, &op_lsh,	  5,   2, 255, 0xff, 0x00, 0x00, 0x01}, // lsh.w f c  
	{0x8416, &op_lsh,	  6,   2, 255, 0xff, 0x00, 0x00, 0x01}, // lsh.w g c  
	{0x8417, &op_lsh,	  7,   2, 255, 0xff, 0x00, 0x00, 0x01}, // lsh.w h c  
	{0x8418, &op_lsh,	  0,   3, 255, 0xff, 0x00, 0x00, 0x01}, // lsh.w a d  
	{0x8419, &op_lsh,	  1,   3, 255, 0xff, 0x00, 0x00, 0x01}, // lsh.w b d  
	{0x841a, &op_lsh,	  2,   3, 255, 0xff, 0x00, 0x00, 0x01}, // lsh.w c d  
	{0x841b, &op_lsh,	  3,   3, 255, 0xff, 0x00, 0x00, 0x01}, // lsh.w d d  
	{0x841c, &op_lsh,	  4,   3, 255, 0xff, 0x00, 0x00, 0x01}, // lsh.w e d  
	{0x841d, &op_lsh,	  5,   3, 255, 0xff, 0x00, 0x00, 0x01}, // lsh.w f d  
	{0x841e, &op_lsh,	  6,   3, 255, 0xff, 0x00, 0x00, 0x01}, // lsh.w g d  
	{0x841f, &op_lsh,	  7,   3, 255, 0xff, 0x00, 0x00, 0x01}, // lsh.w h d  
	{0x8420, &op_lsh,	  0,   4, 255, 0xff, 0x00, 0x00, 0x01}, // lsh.w a e  
	{0x8421, &op_lsh,	  1,   4, 255, 0xff, 0x00, 0x00, 0x01}, // lsh.w b e  
	{0x8422, &op_lsh,	  2,   4, 255, 0xff, 0x00, 0x00, 0x01}, // lsh.w c e  
	{0x8423, &op_lsh,	  3,   4, 255, 0xff, 0x00, 0x00, 0x01}, // lsh.w d e  
	{0x8424, &op_lsh,	  4,   4, 255, 0xff, 0x00, 0x00, 0x01}, // lsh.w e e  
	{0x8425, &op_lsh,	  5,   4, 255, 0xff, 0x00, 0x00, 0x01}, // lsh.w f e  
	{0x8426, &op_lsh,	  6,   4, 255, 0xff, 0x00, 0x00, 0x01}, // lsh.w g e  
	{0x8427, &op_lsh,	  7,   4, 255, 0xff, 0x00, 0x00, 0x01}, // lsh.w h e  
	{0x8428, &op_lsh,	  0,   5, 255, 0xff, 0x00, 0x00, 0x01}, // lsh.w a f  
	{0x8429, &op_lsh,	  1,   5, 255, 0xff, 0x00, 0x00, 0x01}, // lsh.w b f  
	{0x842a, &op_lsh,	  2,   5, 255, 0xff, 0x00, 0x00, 0x01}, // lsh.w c f  
	{0x842b, &op_lsh,	  3,   5, 255, 0xff, 0x00, 0x00, 0x01}, // lsh.w d f  
	{0x842c, &op_lsh,	  4,   5, 255, 0xff, 0x00, 0x00, 0x01}, // lsh.w e f  
	{0x842d, &op_lsh,	  5,   5, 255, 0xff, 0x00, 0x00, 0x01}, // lsh.w f f  
	{0x842e, &op_lsh,	  6,   5, 255, 0xff, 0x00, 0x00, 0x01}, // lsh.w g f  
	{0x842f, &op_lsh,	  7,   5, 255, 0xff, 0x00, 0x00, 0x01}, // lsh.w h f  
	{0x8430, &op_lsh,	  0,   6, 255, 0xff, 0x00, 0x00, 0x01}, // lsh.w a g  
	{0x8431, &op_lsh,	  1,   6, 255, 0xff, 0x00, 0x00, 0x01}, // lsh.w b g  
	{0x8432, &op_lsh,	  2,   6, 255, 0xff, 0x00, 0x00, 0x01}, // lsh.w c g  
	{0x8433, &op_lsh,	  3,   6, 255, 0xff, 0x00, 0x00, 0x01}, // lsh.w d g  
	{0x8434, &op_lsh,	  4,   6, 255, 0xff, 0x00, 0x00, 0x01}, // lsh.w e g  
	{0x8435, &op_lsh,	  5,   6, 255, 0xff, 0x00, 0x00, 0x01}, // lsh.w f g  
	{0x8436, &op_lsh,	  6,   6, 255, 0xff, 0x00, 0x00, 0x01}, // lsh.w g g  
	{0x8437, &op_lsh,	  7,   6, 255, 0xff, 0x00, 0x00, 0x01}, // lsh.w h g  
	{0x8438, &op_lsh,	  0,   7, 255, 0xff, 0x00, 0x00, 0x01}, // lsh.w a h  
	{0x8439, &op_lsh,	  1,   7, 255, 0xff, 0x00, 0x00, 0x01}, // lsh.w b h  
	{0x843a, &op_lsh,	  2,   7, 255, 0xff, 0x00, 0x00, 0x01}, // lsh.w c h  
	{0x843b, &op_lsh,	  3,   7, 255, 0xff, 0x00, 0x00, 0x01}, // lsh.w d h  
	{0x843c, &op_lsh,	  4,   7, 255, 0xff, 0x00, 0x00, 0x01}, // lsh.w e h  
	{0x843d, &op_lsh,	  5,   7, 255, 0xff, 0x00, 0x00, 0x01}, // lsh.w f h  
	{0x843e, &op_lsh,	  6,   7, 255, 0xff, 0x00, 0x00, 0x01}, // lsh.w g h  
	{0x843f, &op_lsh,	  7,   7, 255, 0xff, 0x00, 0x00, 0x01}, // lsh.w h h  
	{0x8440, &op_lsh,	  0,   0, 255, 0xff, 0x00, 0x00, 0x02}, // lsh.d a a  
	{0x8441, &op_lsh,	  1,   0, 255, 0xff, 0x00, 0x00, 0x02}, // lsh.d b a  
	{0x8442, &op_lsh,	  2,   0, 255, 0xff, 0x00, 0x00, 0x02}, // lsh.d c a  
	{0x8443, &op_lsh,	  3,   0, 255, 0xff, 0x00, 0x00, 0x02}, // lsh.d d a  
	{0x8444, &op_lsh,	  4,   0, 255, 0xff, 0x00, 0x00, 0x02}, // lsh.d e a  
	{0x8445, &op_lsh,	  5,   0, 255, 0xff, 0x00, 0x00, 0x02}, // lsh.d f a  
	{0x8446, &op_lsh,	  6,   0, 255, 0xff, 0x00, 0x00, 0x02}, // lsh.d g a  
	{0x8447, &op_lsh,	  7,   0, 255, 0xff, 0x00, 0x00, 0x02}, // lsh.d h a  
	{0x8448, &op_lsh,	  0,   1, 255, 0xff, 0x00, 0x00, 0x02}, // lsh.d a b  
	{0x8449, &op_lsh,	  1,   1, 255, 0xff, 0x00, 0x00, 0x02}, // lsh.d b b  
	{0x844a, &op_lsh,	  2,   1, 255, 0xff, 0x00, 0x00, 0x02}, // lsh.d c b  
	{0x844b, &op_lsh,	  3,   1, 255, 0xff, 0x00, 0x00, 0x02}, // lsh.d d b  
	{0x844c, &op_lsh,	  4,   1, 255, 0xff, 0x00, 0x00, 0x02}, // lsh.d e b  
	{0x844d, &op_lsh,	  5,   1, 255, 0xff, 0x00, 0x00, 0x02}, // lsh.d f b  
	{0x844e, &op_lsh,	  6,   1, 255, 0xff, 0x00, 0x00, 0x02}, // lsh.d g b  
	{0x844f, &op_lsh,	  7,   1, 255, 0xff, 0x00, 0x00, 0x02}, // lsh.d h b  
	{0x8450, &op_lsh,	  0,   2, 255, 0xff, 0x00, 0x00, 0x02}, // lsh.d a c  
	{0x8451, &op_lsh,	  1,   2, 255, 0xff, 0x00, 0x00, 0x02}, // lsh.d b c  
	{0x8452, &op_lsh,	  2,   2, 255, 0xff, 0x00, 0x00, 0x02}, // lsh.d c c  
	{0x8453, &op_lsh,	  3,   2, 255, 0xff, 0x00, 0x00, 0x02}, // lsh.d d c  
	{0x8454, &op_lsh,	  4,   2, 255, 0xff, 0x00, 0x00, 0x02}, // lsh.d e c  
	{0x8455, &op_lsh,	  5,   2, 255, 0xff, 0x00, 0x00, 0x02}, // lsh.d f c  
	{0x8456, &op_lsh,	  6,   2, 255, 0xff, 0x00, 0x00, 0x02}, // lsh.d g c  
	{0x8457, &op_lsh,	  7,   2, 255, 0xff, 0x00, 0x00, 0x02}, // lsh.d h c  
	{0x8458, &op_lsh,	  0,   3, 255, 0xff, 0x00, 0x00, 0x02}, // lsh.d a d  
	{0x8459, &op_lsh,	  1,   3, 255, 0xff, 0x00, 0x00, 0x02}, // lsh.d b d  
	{0x845a, &op_lsh,	  2,   3, 255, 0xff, 0x00, 0x00, 0x02}, // lsh.d c d  
	{0x845b, &op_lsh,	  3,   3, 255, 0xff, 0x00, 0x00, 0x02}, // lsh.d d d  
	{0x845c, &op_lsh,	  4,   3, 255, 0xff, 0x00, 0x00, 0x02}, // lsh.d e d  
	{0x845d, &op_lsh,	  5,   3, 255, 0xff, 0x00, 0x00, 0x02}, // lsh.d f d  
	{0x845e, &op_lsh,	  6,   3, 255, 0xff, 0x00, 0x00, 0x02}, // lsh.d g d  
	{0x845f, &op_lsh,	  7,   3, 255, 0xff, 0x00, 0x00, 0x02}, // lsh.d h d  
	{0x8460, &op_lsh,	  0,   4, 255, 0xff, 0x00, 0x00, 0x02}, // lsh.d a e  
	{0x8461, &op_lsh,	  1,   4, 255, 0xff, 0x00, 0x00, 0x02}, // lsh.d b e  
	{0x8462, &op_lsh,	  2,   4, 255, 0xff, 0x00, 0x00, 0x02}, // lsh.d c e  
	{0x8463, &op_lsh,	  3,   4, 255, 0xff, 0x00, 0x00, 0x02}, // lsh.d d e  
	{0x8464, &op_lsh,	  4,   4, 255, 0xff, 0x00, 0x00, 0x02}, // lsh.d e e  
	{0x8465, &op_lsh,	  5,   4, 255, 0xff, 0x00, 0x00, 0x02}, // lsh.d f e  
	{0x8466, &op_lsh,	  6,   4, 255, 0xff, 0x00, 0x00, 0x02}, // lsh.d g e  
	{0x8467, &op_lsh,	  7,   4, 255, 0xff, 0x00, 0x00, 0x02}, // lsh.d h e  
	{0x8468, &op_lsh,	  0,   5, 255, 0xff, 0x00, 0x00, 0x02}, // lsh.d a f  
	{0x8469, &op_lsh,	  1,   5, 255, 0xff, 0x00, 0x00, 0x02}, // lsh.d b f  
	{0x846a, &op_lsh,	  2,   5, 255, 0xff, 0x00, 0x00, 0x02}, // lsh.d c f  
	{0x846b, &op_lsh,	  3,   5, 255, 0xff, 0x00, 0x00, 0x02}, // lsh.d d f  
	{0x846c, &op_lsh,	  4,   5, 255, 0xff, 0x00, 0x00, 0x02}, // lsh.d e f  
	{0x846d, &op_lsh,	  5,   5, 255, 0xff, 0x00, 0x00, 0x02}, // lsh.d f f  
	{0x846e, &op_lsh,	  6,   5, 255, 0xff, 0x00, 0x00, 0x02}, // lsh.d g f  
	{0x846f, &op_lsh,	  7,   5, 255, 0xff, 0x00, 0x00, 0x02}, // lsh.d h f  
	{0x8470, &op_lsh,	  0,   6, 255, 0xff, 0x00, 0x00, 0x02}, // lsh.d a g  
	{0x8471, &op_lsh,	  1,   6, 255, 0xff, 0x00, 0x00, 0x02}, // lsh.d b g  
	{0x8472, &op_lsh,	  2,   6, 255, 0xff, 0x00, 0x00, 0x02}, // lsh.d c g  
	{0x8473, &op_lsh,	  3,   6, 255, 0xff, 0x00, 0x00, 0x02}, // lsh.d d g  
	{0x8474, &op_lsh,	  4,   6, 255, 0xff, 0x00, 0x00, 0x02}, // lsh.d e g  
	{0x8475, &op_lsh,	  5,   6, 255, 0xff, 0x00, 0x00, 0x02}, // lsh.d f g  
	{0x8476, &op_lsh,	  6,   6, 255, 0xff, 0x00, 0x00, 0x02}, // lsh.d g g  
	{0x8477, &op_lsh,	  7,   6, 255, 0xff, 0x00, 0x00, 0x02}, // lsh.d h g  
	{0x8478, &op_lsh,	  0,   7, 255, 0xff, 0x00, 0x00, 0x02}, // lsh.d a h  
	{0x8479, &op_lsh,	  1,   7, 255, 0xff, 0x00, 0x00, 0x02}, // lsh.d b h  
	{0x847a, &op_lsh,	  2,   7, 255, 0xff, 0x00, 0x00, 0x02}, // lsh.d c h  
	{0x847b, &op_lsh,	  3,   7, 255, 0xff, 0x00, 0x00, 0x02}, // lsh.d d h  
	{0x847c, &op_lsh,	  4,   7, 255, 0xff, 0x00, 0x00, 0x02}, // lsh.d e h  
	{0x847d, &op_lsh,	  5,   7, 255, 0xff, 0x00, 0x00, 0x02}, // lsh.d f h  
	{0x847e, &op_lsh,	  6,   7, 255, 0xff, 0x00, 0x00, 0x02}, // lsh.d g h  
	{0x847f, &op_lsh,	  7,   7, 255, 0xff, 0x00, 0x00, 0x02}, // lsh.d h h  
	{0x8480, &op_lsh,	  0,   0, 255, 0xff, 0x00, 0x00, 0x04}, // lsh a a  
	{0x8481, &op_lsh,	  1,   0, 255, 0xff, 0x00, 0x00, 0x04}, // lsh b a  
	{0x8482, &op_lsh,	  2,   0, 255, 0xff, 0x00, 0x00, 0x04}, // lsh c a  
	{0x8483, &op_lsh,	  3,   0, 255, 0xff, 0x00, 0x00, 0x04}, // lsh d a  
	{0x8484, &op_lsh,	  4,   0, 255, 0xff, 0x00, 0x00, 0x04}, // lsh e a  
	{0x8485, &op_lsh,	  5,   0, 255, 0xff, 0x00, 0x00, 0x04}, // lsh f a  
	{0x8486, &op_lsh,	  6,   0, 255, 0xff, 0x00, 0x00, 0x04}, // lsh g a  
	{0x8487, &op_lsh,	  7,   0, 255, 0xff, 0x00, 0x00, 0x04}, // lsh h a  
	{0x8488, &op_lsh,	  0,   1, 255, 0xff, 0x00, 0x00, 0x04}, // lsh a b  
	{0x8489, &op_lsh,	  1,   1, 255, 0xff, 0x00, 0x00, 0x04}, // lsh b b  
	{0x848a, &op_lsh,	  2,   1, 255, 0xff, 0x00, 0x00, 0x04}, // lsh c b  
	{0x848b, &op_lsh,	  3,   1, 255, 0xff, 0x00, 0x00, 0x04}, // lsh d b  
	{0x848c, &op_lsh,	  4,   1, 255, 0xff, 0x00, 0x00, 0x04}, // lsh e b  
	{0x848d, &op_lsh,	  5,   1, 255, 0xff, 0x00, 0x00, 0x04}, // lsh f b  
	{0x848e, &op_lsh,	  6,   1, 255, 0xff, 0x00, 0x00, 0x04}, // lsh g b  
	{0x848f, &op_lsh,	  7,   1, 255, 0xff, 0x00, 0x00, 0x04}, // lsh h b  
	{0x8490, &op_lsh,	  0,   2, 255, 0xff, 0x00, 0x00, 0x04}, // lsh a c  
	{0x8491, &op_lsh,	  1,   2, 255, 0xff, 0x00, 0x00, 0x04}, // lsh b c  
	{0x8492, &op_lsh,	  2,   2, 255, 0xff, 0x00, 0x00, 0x04}, // lsh c c  
	{0x8493, &op_lsh,	  3,   2, 255, 0xff, 0x00, 0x00, 0x04}, // lsh d c  
	{0x8494, &op_lsh,	  4,   2, 255, 0xff, 0x00, 0x00, 0x04}, // lsh e c  
	{0x8495, &op_lsh,	  5,   2, 255, 0xff, 0x00, 0x00, 0x04}, // lsh f c  
	{0x8496, &op_lsh,	  6,   2, 255, 0xff, 0x00, 0x00, 0x04}, // lsh g c  
	{0x8497, &op_lsh,	  7,   2, 255, 0xff, 0x00, 0x00, 0x04}, // lsh h c  
	{0x8498, &op_lsh,	  0,   3, 255, 0xff, 0x00, 0x00, 0x04}, // lsh a d  
	{0x8499, &op_lsh,	  1,   3, 255, 0xff, 0x00, 0x00, 0x04}, // lsh b d  
	{0x849a, &op_lsh,	  2,   3, 255, 0xff, 0x00, 0x00, 0x04}, // lsh c d  
	{0x849b, &op_lsh,	  3,   3, 255, 0xff, 0x00, 0x00, 0x04}, // lsh d d  
	{0x849c, &op_lsh,	  4,   3, 255, 0xff, 0x00, 0x00, 0x04}, // lsh e d  
	{0x849d, &op_lsh,	  5,   3, 255, 0xff, 0x00, 0x00, 0x04}, // lsh f d  
	{0x849e, &op_lsh,	  6,   3, 255, 0xff, 0x00, 0x00, 0x04}, // lsh g d  
	{0x849f, &op_lsh,	  7,   3, 255, 0xff, 0x00, 0x00, 0x04}, // lsh h d  
	{0x84a0, &op_lsh,	  0,   4, 255, 0xff, 0x00, 0x00, 0x04}, // lsh a e  
	{0x84a1, &op_lsh,	  1,   4, 255, 0xff, 0x00, 0x00, 0x04}, // lsh b e  
	{0x84a2, &op_lsh,	  2,   4, 255, 0xff, 0x00, 0x00, 0x04}, // lsh c e  
	{0x84a3, &op_lsh,	  3,   4, 255, 0xff, 0x00, 0x00, 0x04}, // lsh d e  
	{0x84a4, &op_lsh,	  4,   4, 255, 0xff, 0x00, 0x00, 0x04}, // lsh e e  
	{0x84a5, &op_lsh,	  5,   4, 255, 0xff, 0x00, 0x00, 0x04}, // lsh f e  
	{0x84a6, &op_lsh,	  6,   4, 255, 0xff, 0x00, 0x00, 0x04}, // lsh g e  
	{0x84a7, &op_lsh,	  7,   4, 255, 0xff, 0x00, 0x00, 0x04}, // lsh h e  
	{0x84a8, &op_lsh,	  0,   5, 255, 0xff, 0x00, 0x00, 0x04}, // lsh a f  
	{0x84a9, &op_lsh,	  1,   5, 255, 0xff, 0x00, 0x00, 0x04}, // lsh b f  
	{0x84aa, &op_lsh,	  2,   5, 255, 0xff, 0x00, 0x00, 0x04}, // lsh c f  
	{0x84ab, &op_lsh,	  3,   5, 255, 0xff, 0x00, 0x00, 0x04}, // lsh d f  
	{0x84ac, &op_lsh,	  4,   5, 255, 0xff, 0x00, 0x00, 0x04}, // lsh e f  
	{0x84ad, &op_lsh,	  5,   5, 255, 0xff, 0x00, 0x00, 0x04}, // lsh f f  
	{0x84ae, &op_lsh,	  6,   5, 255, 0xff, 0x00, 0x00, 0x04}, // lsh g f  
	{0x84af, &op_lsh,	  7,   5, 255, 0xff, 0x00, 0x00, 0x04}, // lsh h f  
	{0x84b0, &op_lsh,	  0,   6, 255, 0xff, 0x00, 0x00, 0x04}, // lsh a g  
	{0x84b1, &op_lsh,	  1,   6, 255, 0xff, 0x00, 0x00, 0x04}, // lsh b g  
	{0x84b2, &op_lsh,	  2,   6, 255, 0xff, 0x00, 0x00, 0x04}, // lsh c g  
	{0x84b3, &op_lsh,	  3,   6, 255, 0xff, 0x00, 0x00, 0x04}, // lsh d g  
	{0x84b4, &op_lsh,	  4,   6, 255, 0xff, 0x00, 0x00, 0x04}, // lsh e g  
	{0x84b5, &op_lsh,	  5,   6, 255, 0xff, 0x00, 0x00, 0x04}, // lsh f g  
	{0x84b6, &op_lsh,	  6,   6, 255, 0xff, 0x00, 0x00, 0x04}, // lsh g g  
	{0x84b7, &op_lsh,	  7,   6, 255, 0xff, 0x00, 0x00, 0x04}, // lsh h g  
	{0x84b8, &op_lsh,	  0,   7, 255, 0xff, 0x00, 0x00, 0x04}, // lsh a h  
	{0x84b9, &op_lsh,	  1,   7, 255, 0xff, 0x00, 0x00, 0x04}, // lsh b h  
	{0x84ba, &op_lsh,	  2,   7, 255, 0xff, 0x00, 0x00, 0x04}, // lsh c h  
	{0x84bb, &op_lsh,	  3,   7, 255, 0xff, 0x00, 0x00, 0x04}, // lsh d h  
	{0x84bc, &op_lsh,	  4,   7, 255, 0xff, 0x00, 0x00, 0x04}, // lsh e h  
	{0x84bd, &op_lsh,	  5,   7, 255, 0xff, 0x00, 0x00, 0x04}, // lsh f h  
	{0x84be, &op_lsh,	  6,   7, 255, 0xff, 0x00, 0x00, 0x04}, // lsh g h  
	{0x84bf, &op_lsh,	  7,   7, 255, 0xff, 0x00, 0x00, 0x04}, // lsh h h  
	{0x8500, &op_lsh,	  0,   0, 255, 0xff, 0x01, 0x00, 0x01}, // lsh.wr a a  
	{0x8501, &op_lsh,	  1,   0, 255, 0xff, 0x01, 0x00, 0x01}, // lsh.wr b a  
	{0x8502, &op_lsh,	  2,   0, 255, 0xff, 0x01, 0x00, 0x01}, // lsh.wr c a  
	{0x8503, &op_lsh,	  3,   0, 255, 0xff, 0x01, 0x00, 0x01}, // lsh.wr d a  
	{0x8504, &op_lsh,	  4,   0, 255, 0xff, 0x01, 0x00, 0x01}, // lsh.wr e a  
	{0x8505, &op_lsh,	  5,   0, 255, 0xff, 0x01, 0x00, 0x01}, // lsh.wr f a  
	{0x8506, &op_lsh,	  6,   0, 255, 0xff, 0x01, 0x00, 0x01}, // lsh.wr g a  
	{0x8507, &op_lsh,	  7,   0, 255, 0xff, 0x01, 0x00, 0x01}, // lsh.wr h a  
	{0x8508, &op_lsh,	  0,   1, 255, 0xff, 0x01, 0x00, 0x01}, // lsh.wr a b  
	{0x8509, &op_lsh,	  1,   1, 255, 0xff, 0x01, 0x00, 0x01}, // lsh.wr b b  
	{0x850a, &op_lsh,	  2,   1, 255, 0xff, 0x01, 0x00, 0x01}, // lsh.wr c b  
	{0x850b, &op_lsh,	  3,   1, 255, 0xff, 0x01, 0x00, 0x01}, // lsh.wr d b  
	{0x850c, &op_lsh,	  4,   1, 255, 0xff, 0x01, 0x00, 0x01}, // lsh.wr e b  
	{0x850d, &op_lsh,	  5,   1, 255, 0xff, 0x01, 0x00, 0x01}, // lsh.wr f b  
	{0x850e, &op_lsh,	  6,   1, 255, 0xff, 0x01, 0x00, 0x01}, // lsh.wr g b  
	{0x850f, &op_lsh,	  7,   1, 255, 0xff, 0x01, 0x00, 0x01}, // lsh.wr h b  
	{0x8510, &op_lsh,	  0,   2, 255, 0xff, 0x01, 0x00, 0x01}, // lsh.wr a c  
	{0x8511, &op_lsh,	  1,   2, 255, 0xff, 0x01, 0x00, 0x01}, // lsh.wr b c  
	{0x8512, &op_lsh,	  2,   2, 255, 0xff, 0x01, 0x00, 0x01}, // lsh.wr c c  
	{0x8513, &op_lsh,	  3,   2, 255, 0xff, 0x01, 0x00, 0x01}, // lsh.wr d c  
	{0x8514, &op_lsh,	  4,   2, 255, 0xff, 0x01, 0x00, 0x01}, // lsh.wr e c  
	{0x8515, &op_lsh,	  5,   2, 255, 0xff, 0x01, 0x00, 0x01}, // lsh.wr f c  
	{0x8516, &op_lsh,	  6,   2, 255, 0xff, 0x01, 0x00, 0x01}, // lsh.wr g c  
	{0x8517, &op_lsh,	  7,   2, 255, 0xff, 0x01, 0x00, 0x01}, // lsh.wr h c  
	{0x8518, &op_lsh,	  0,   3, 255, 0xff, 0x01, 0x00, 0x01}, // lsh.wr a d  
	{0x8519, &op_lsh,	  1,   3, 255, 0xff, 0x01, 0x00, 0x01}, // lsh.wr b d  
	{0x851a, &op_lsh,	  2,   3, 255, 0xff, 0x01, 0x00, 0x01}, // lsh.wr c d  
	{0x851b, &op_lsh,	  3,   3, 255, 0xff, 0x01, 0x00, 0x01}, // lsh.wr d d  
	{0x851c, &op_lsh,	  4,   3, 255, 0xff, 0x01, 0x00, 0x01}, // lsh.wr e d  
	{0x851d, &op_lsh,	  5,   3, 255, 0xff, 0x01, 0x00, 0x01}, // lsh.wr f d  
	{0x851e, &op_lsh,	  6,   3, 255, 0xff, 0x01, 0x00, 0x01}, // lsh.wr g d  
	{0x851f, &op_lsh,	  7,   3, 255, 0xff, 0x01, 0x00, 0x01}, // lsh.wr h d  
	{0x8520, &op_lsh,	  0,   4, 255, 0xff, 0x01, 0x00, 0x01}, // lsh.wr a e  
	{0x8521, &op_lsh,	  1,   4, 255, 0xff, 0x01, 0x00, 0x01}, // lsh.wr b e  
	{0x8522, &op_lsh,	  2,   4, 255, 0xff, 0x01, 0x00, 0x01}, // lsh.wr c e  
	{0x8523, &op_lsh,	  3,   4, 255, 0xff, 0x01, 0x00, 0x01}, // lsh.wr d e  
	{0x8524, &op_lsh,	  4,   4, 255, 0xff, 0x01, 0x00, 0x01}, // lsh.wr e e  
	{0x8525, &op_lsh,	  5,   4, 255, 0xff, 0x01, 0x00, 0x01}, // lsh.wr f e  
	{0x8526, &op_lsh,	  6,   4, 255, 0xff, 0x01, 0x00, 0x01}, // lsh.wr g e  
	{0x8527, &op_lsh,	  7,   4, 255, 0xff, 0x01, 0x00, 0x01}, // lsh.wr h e  
	{0x8528, &op_lsh,	  0,   5, 255, 0xff, 0x01, 0x00, 0x01}, // lsh.wr a f  
	{0x8529, &op_lsh,	  1,   5, 255, 0xff, 0x01, 0x00, 0x01}, // lsh.wr b f  
	{0x852a, &op_lsh,	  2,   5, 255, 0xff, 0x01, 0x00, 0x01}, // lsh.wr c f  
	{0x852b, &op_lsh,	  3,   5, 255, 0xff, 0x01, 0x00, 0x01}, // lsh.wr d f  
	{0x852c, &op_lsh,	  4,   5, 255, 0xff, 0x01, 0x00, 0x01}, // lsh.wr e f  
	{0x852d, &op_lsh,	  5,   5, 255, 0xff, 0x01, 0x00, 0x01}, // lsh.wr f f  
	{0x852e, &op_lsh,	  6,   5, 255, 0xff, 0x01, 0x00, 0x01}, // lsh.wr g f  
	{0x852f, &op_lsh,	  7,   5, 255, 0xff, 0x01, 0x00, 0x01}, // lsh.wr h f  
	{0x8530, &op_lsh,	  0,   6, 255, 0xff, 0x01, 0x00, 0x01}, // lsh.wr a g  
	{0x8531, &op_lsh,	  1,   6, 255, 0xff, 0x01, 0x00, 0x01}, // lsh.wr b g  
	{0x8532, &op_lsh,	  2,   6, 255, 0xff, 0x01, 0x00, 0x01}, // lsh.wr c g  
	{0x8533, &op_lsh,	  3,   6, 255, 0xff, 0x01, 0x00, 0x01}, // lsh.wr d g  
	{0x8534, &op_lsh,	  4,   6, 255, 0xff, 0x01, 0x00, 0x01}, // lsh.wr e g  
	{0x8535, &op_lsh,	  5,   6, 255, 0xff, 0x01, 0x00, 0x01}, // lsh.wr f g  
	{0x8536, &op_lsh,	  6,   6, 255, 0xff, 0x01, 0x00, 0x01}, // lsh.wr g g  
	{0x8537, &op_lsh,	  7,   6, 255, 0xff, 0x01, 0x00, 0x01}, // lsh.wr h g  
	{0x8538, &op_lsh,	  0,   7, 255, 0xff, 0x01, 0x00, 0x01}, // lsh.wr a h  
	{0x8539, &op_lsh,	  1,   7, 255, 0xff, 0x01, 0x00, 0x01}, // lsh.wr b h  
	{0x853a, &op_lsh,	  2,   7, 255, 0xff, 0x01, 0x00, 0x01}, // lsh.wr c h  
	{0x853b, &op_lsh,	  3,   7, 255, 0xff, 0x01, 0x00, 0x01}, // lsh.wr d h  
	{0x853c, &op_lsh,	  4,   7, 255, 0xff, 0x01, 0x00, 0x01}, // lsh.wr e h  
	{0x853d, &op_lsh,	  5,   7, 255, 0xff, 0x01, 0x00, 0x01}, // lsh.wr f h  
	{0x853e, &op_lsh,	  6,   7, 255, 0xff, 0x01, 0x00, 0x01}, // lsh.wr g h  
	{0x853f, &op_lsh,	  7,   7, 255, 0xff, 0x01, 0x00, 0x01}, // lsh.wr h h  
	{0x8540, &op_lsh,	  0,   0, 255, 0xff, 0x01, 0x00, 0x02}, // lsh.dr a a  
	{0x8541, &op_lsh,	  1,   0, 255, 0xff, 0x01, 0x00, 0x02}, // lsh.dr b a  
	{0x8542, &op_lsh,	  2,   0, 255, 0xff, 0x01, 0x00, 0x02}, // lsh.dr c a  
	{0x8543, &op_lsh,	  3,   0, 255, 0xff, 0x01, 0x00, 0x02}, // lsh.dr d a  
	{0x8544, &op_lsh,	  4,   0, 255, 0xff, 0x01, 0x00, 0x02}, // lsh.dr e a  
	{0x8545, &op_lsh,	  5,   0, 255, 0xff, 0x01, 0x00, 0x02}, // lsh.dr f a  
	{0x8546, &op_lsh,	  6,   0, 255, 0xff, 0x01, 0x00, 0x02}, // lsh.dr g a  
	{0x8547, &op_lsh,	  7,   0, 255, 0xff, 0x01, 0x00, 0x02}, // lsh.dr h a  
	{0x8548, &op_lsh,	  0,   1, 255, 0xff, 0x01, 0x00, 0x02}, // lsh.dr a b  
	{0x8549, &op_lsh,	  1,   1, 255, 0xff, 0x01, 0x00, 0x02}, // lsh.dr b b  
	{0x854a, &op_lsh,	  2,   1, 255, 0xff, 0x01, 0x00, 0x02}, // lsh.dr c b  
	{0x854b, &op_lsh,	  3,   1, 255, 0xff, 0x01, 0x00, 0x02}, // lsh.dr d b  
	{0x854c, &op_lsh,	  4,   1, 255, 0xff, 0x01, 0x00, 0x02}, // lsh.dr e b  
	{0x854d, &op_lsh,	  5,   1, 255, 0xff, 0x01, 0x00, 0x02}, // lsh.dr f b  
	{0x854e, &op_lsh,	  6,   1, 255, 0xff, 0x01, 0x00, 0x02}, // lsh.dr g b  
	{0x854f, &op_lsh,	  7,   1, 255, 0xff, 0x01, 0x00, 0x02}, // lsh.dr h b  
	{0x8550, &op_lsh,	  0,   2, 255, 0xff, 0x01, 0x00, 0x02}, // lsh.dr a c  
	{0x8551, &op_lsh,	  1,   2, 255, 0xff, 0x01, 0x00, 0x02}, // lsh.dr b c  
	{0x8552, &op_lsh,	  2,   2, 255, 0xff, 0x01, 0x00, 0x02}, // lsh.dr c c  
	{0x8553, &op_lsh,	  3,   2, 255, 0xff, 0x01, 0x00, 0x02}, // lsh.dr d c  
	{0x8554, &op_lsh,	  4,   2, 255, 0xff, 0x01, 0x00, 0x02}, // lsh.dr e c  
	{0x8555, &op_lsh,	  5,   2, 255, 0xff, 0x01, 0x00, 0x02}, // lsh.dr f c  
	{0x8556, &op_lsh,	  6,   2, 255, 0xff, 0x01, 0x00, 0x02}, // lsh.dr g c  
	{0x8557, &op_lsh,	  7,   2, 255, 0xff, 0x01, 0x00, 0x02}, // lsh.dr h c  
	{0x8558, &op_lsh,	  0,   3, 255, 0xff, 0x01, 0x00, 0x02}, // lsh.dr a d  
	{0x8559, &op_lsh,	  1,   3, 255, 0xff, 0x01, 0x00, 0x02}, // lsh.dr b d  
	{0x855a, &op_lsh,	  2,   3, 255, 0xff, 0x01, 0x00, 0x02}, // lsh.dr c d  
	{0x855b, &op_lsh,	  3,   3, 255, 0xff, 0x01, 0x00, 0x02}, // lsh.dr d d  
	{0x855c, &op_lsh,	  4,   3, 255, 0xff, 0x01, 0x00, 0x02}, // lsh.dr e d  
	{0x855d, &op_lsh,	  5,   3, 255, 0xff, 0x01, 0x00, 0x02}, // lsh.dr f d  
	{0x855e, &op_lsh,	  6,   3, 255, 0xff, 0x01, 0x00, 0x02}, // lsh.dr g d  
	{0x855f, &op_lsh,	  7,   3, 255, 0xff, 0x01, 0x00, 0x02}, // lsh.dr h d  
	{0x8560, &op_lsh,	  0,   4, 255, 0xff, 0x01, 0x00, 0x02}, // lsh.dr a e  
	{0x8561, &op_lsh,	  1,   4, 255, 0xff, 0x01, 0x00, 0x02}, // lsh.dr b e  
	{0x8562, &op_lsh,	  2,   4, 255, 0xff, 0x01, 0x00, 0x02}, // lsh.dr c e  
	{0x8563, &op_lsh,	  3,   4, 255, 0xff, 0x01, 0x00, 0x02}, // lsh.dr d e  
	{0x8564, &op_lsh,	  4,   4, 255, 0xff, 0x01, 0x00, 0x02}, // lsh.dr e e  
	{0x8565, &op_lsh,	  5,   4, 255, 0xff, 0x01, 0x00, 0x02}, // lsh.dr f e  
	{0x8566, &op_lsh,	  6,   4, 255, 0xff, 0x01, 0x00, 0x02}, // lsh.dr g e  
	{0x8567, &op_lsh,	  7,   4, 255, 0xff, 0x01, 0x00, 0x02}, // lsh.dr h e  
	{0x8568, &op_lsh,	  0,   5, 255, 0xff, 0x01, 0x00, 0x02}, // lsh.dr a f  
	{0x8569, &op_lsh,	  1,   5, 255, 0xff, 0x01, 0x00, 0x02}, // lsh.dr b f  
	{0x856a, &op_lsh,	  2,   5, 255, 0xff, 0x01, 0x00, 0x02}, // lsh.dr c f  
	{0x856b, &op_lsh,	  3,   5, 255, 0xff, 0x01, 0x00, 0x02}, // lsh.dr d f  
	{0x856c, &op_lsh,	  4,   5, 255, 0xff, 0x01, 0x00, 0x02}, // lsh.dr e f  
	{0x856d, &op_lsh,	  5,   5, 255, 0xff, 0x01, 0x00, 0x02}, // lsh.dr f f  
	{0x856e, &op_lsh,	  6,   5, 255, 0xff, 0x01, 0x00, 0x02}, // lsh.dr g f  
	{0x856f, &op_lsh,	  7,   5, 255, 0xff, 0x01, 0x00, 0x02}, // lsh.dr h f  
	{0x8570, &op_lsh,	  0,   6, 255, 0xff, 0x01, 0x00, 0x02}, // lsh.dr a g  
	{0x8571, &op_lsh,	  1,   6, 255, 0xff, 0x01, 0x00, 0x02}, // lsh.dr b g  
	{0x8572, &op_lsh,	  2,   6, 255, 0xff, 0x01, 0x00, 0x02}, // lsh.dr c g  
	{0x8573, &op_lsh,	  3,   6, 255, 0xff, 0x01, 0x00, 0x02}, // lsh.dr d g  
	{0x8574, &op_lsh,	  4,   6, 255, 0xff, 0x01, 0x00, 0x02}, // lsh.dr e g  
	{0x8575, &op_lsh,	  5,   6, 255, 0xff, 0x01, 0x00, 0x02}, // lsh.dr f g  
	{0x8576, &op_lsh,	  6,   6, 255, 0xff, 0x01, 0x00, 0x02}, // lsh.dr g g  
	{0x8577, &op_lsh,	  7,   6, 255, 0xff, 0x01, 0x00, 0x02}, // lsh.dr h g  
	{0x8578, &op_lsh,	  0,   7, 255, 0xff, 0x01, 0x00, 0x02}, // lsh.dr a h  
	{0x8579, &op_lsh,	  1,   7, 255, 0xff, 0x01, 0x00, 0x02}, // lsh.dr b h  
	{0x857a, &op_lsh,	  2,   7, 255, 0xff, 0x01, 0x00, 0x02}, // lsh.dr c h  
	{0x857b, &op_lsh,	  3,   7, 255, 0xff, 0x01, 0x00, 0x02}, // lsh.dr d h  
	{0x857c, &op_lsh,	  4,   7, 255, 0xff, 0x01, 0x00, 0x02}, // lsh.dr e h  
	{0x857d, &op_lsh,	  5,   7, 255, 0xff, 0x01, 0x00, 0x02}, // lsh.dr f h  
	{0x857e, &op_lsh,	  6,   7, 255, 0xff, 0x01, 0x00, 0x02}, // lsh.dr g h  
	{0x857f, &op_lsh,	  7,   7, 255, 0xff, 0x01, 0x00, 0x02}, // lsh.dr h h  
	{0x8580, &op_lsh,	  0,   0, 255, 0xff, 0x01, 0x00, 0x04}, // lsh.r a a  
	{0x8581, &op_lsh,	  1,   0, 255, 0xff, 0x01, 0x00, 0x04}, // lsh.r b a  
	{0x8582, &op_lsh,	  2,   0, 255, 0xff, 0x01, 0x00, 0x04}, // lsh.r c a  
	{0x8583, &op_lsh,	  3,   0, 255, 0xff, 0x01, 0x00, 0x04}, // lsh.r d a  
	{0x8584, &op_lsh,	  4,   0, 255, 0xff, 0x01, 0x00, 0x04}, // lsh.r e a  
	{0x8585, &op_lsh,	  5,   0, 255, 0xff, 0x01, 0x00, 0x04}, // lsh.r f a  
	{0x8586, &op_lsh,	  6,   0, 255, 0xff, 0x01, 0x00, 0x04}, // lsh.r g a  
	{0x8587, &op_lsh,	  7,   0, 255, 0xff, 0x01, 0x00, 0x04}, // lsh.r h a  
	{0x8588, &op_lsh,	  0,   1, 255, 0xff, 0x01, 0x00, 0x04}, // lsh.r a b  
	{0x8589, &op_lsh,	  1,   1, 255, 0xff, 0x01, 0x00, 0x04}, // lsh.r b b  
	{0x858a, &op_lsh,	  2,   1, 255, 0xff, 0x01, 0x00, 0x04}, // lsh.r c b  
	{0x858b, &op_lsh,	  3,   1, 255, 0xff, 0x01, 0x00, 0x04}, // lsh.r d b  
	{0x858c, &op_lsh,	  4,   1, 255, 0xff, 0x01, 0x00, 0x04}, // lsh.r e b  
	{0x858d, &op_lsh,	  5,   1, 255, 0xff, 0x01, 0x00, 0x04}, // lsh.r f b  
	{0x858e, &op_lsh,	  6,   1, 255, 0xff, 0x01, 0x00, 0x04}, // lsh.r g b  
	{0x858f, &op_lsh,	  7,   1, 255, 0xff, 0x01, 0x00, 0x04}, // lsh.r h b  
	{0x8590, &op_lsh,	  0,   2, 255, 0xff, 0x01, 0x00, 0x04}, // lsh.r a c  
	{0x8591, &op_lsh,	  1,   2, 255, 0xff, 0x01, 0x00, 0x04}, // lsh.r b c  
	{0x8592, &op_lsh,	  2,   2, 255, 0xff, 0x01, 0x00, 0x04}, // lsh.r c c  
	{0x8593, &op_lsh,	  3,   2, 255, 0xff, 0x01, 0x00, 0x04}, // lsh.r d c  
	{0x8594, &op_lsh,	  4,   2, 255, 0xff, 0x01, 0x00, 0x04}, // lsh.r e c  
	{0x8595, &op_lsh,	  5,   2, 255, 0xff, 0x01, 0x00, 0x04}, // lsh.r f c  
	{0x8596, &op_lsh,	  6,   2, 255, 0xff, 0x01, 0x00, 0x04}, // lsh.r g c  
	{0x8597, &op_lsh,	  7,   2, 255, 0xff, 0x01, 0x00, 0x04}, // lsh.r h c  
	{0x8598, &op_lsh,	  0,   3, 255, 0xff, 0x01, 0x00, 0x04}, // lsh.r a d  
	{0x8599, &op_lsh,	  1,   3, 255, 0xff, 0x01, 0x00, 0x04}, // lsh.r b d  
	{0x859a, &op_lsh,	  2,   3, 255, 0xff, 0x01, 0x00, 0x04}, // lsh.r c d  
	{0x859b, &op_lsh,	  3,   3, 255, 0xff, 0x01, 0x00, 0x04}, // lsh.r d d  
	{0x859c, &op_lsh,	  4,   3, 255, 0xff, 0x01, 0x00, 0x04}, // lsh.r e d  
	{0x859d, &op_lsh,	  5,   3, 255, 0xff, 0x01, 0x00, 0x04}, // lsh.r f d  
	{0x859e, &op_lsh,	  6,   3, 255, 0xff, 0x01, 0x00, 0x04}, // lsh.r g d  
	{0x859f, &op_lsh,	  7,   3, 255, 0xff, 0x01, 0x00, 0x04}, // lsh.r h d  
	{0x85a0, &op_lsh,	  0,   4, 255, 0xff, 0x01, 0x00, 0x04}, // lsh.r a e  
	{0x85a1, &op_lsh,	  1,   4, 255, 0xff, 0x01, 0x00, 0x04}, // lsh.r b e  
	{0x85a2, &op_lsh,	  2,   4, 255, 0xff, 0x01, 0x00, 0x04}, // lsh.r c e  
	{0x85a3, &op_lsh,	  3,   4, 255, 0xff, 0x01, 0x00, 0x04}, // lsh.r d e  
	{0x85a4, &op_lsh,	  4,   4, 255, 0xff, 0x01, 0x00, 0x04}, // lsh.r e e  
	{0x85a5, &op_lsh,	  5,   4, 255, 0xff, 0x01, 0x00, 0x04}, // lsh.r f e  
	{0x85a6, &op_lsh,	  6,   4, 255, 0xff, 0x01, 0x00, 0x04}, // lsh.r g e  
	{0x85a7, &op_lsh,	  7,   4, 255, 0xff, 0x01, 0x00, 0x04}, // lsh.r h e  
	{0x85a8, &op_lsh,	  0,   5, 255, 0xff, 0x01, 0x00, 0x04}, // lsh.r a f  
	{0x85a9, &op_lsh,	  1,   5, 255, 0xff, 0x01, 0x00, 0x04}, // lsh.r b f  
	{0x85aa, &op_lsh,	  2,   5, 255, 0xff, 0x01, 0x00, 0x04}, // lsh.r c f  
	{0x85ab, &op_lsh,	  3,   5, 255, 0xff, 0x01, 0x00, 0x04}, // lsh.r d f  
	{0x85ac, &op_lsh,	  4,   5, 255, 0xff, 0x01, 0x00, 0x04}, // lsh.r e f  
	{0x85ad, &op_lsh,	  5,   5, 255, 0xff, 0x01, 0x00, 0x04}, // lsh.r f f  
	{0x85ae, &op_lsh,	  6,   5, 255, 0xff, 0x01, 0x00, 0x04}, // lsh.r g f  
	{0x85af, &op_lsh,	  7,   5, 255, 0xff, 0x01, 0x00, 0x04}, // lsh.r h f  
	{0x85b0, &op_lsh,	  0,   6, 255, 0xff, 0x01, 0x00, 0x04}, // lsh.r a g  
	{0x85b1, &op_lsh,	  1,   6, 255, 0xff, 0x01, 0x00, 0x04}, // lsh.r b g  
	{0x85b2, &op_lsh,	  2,   6, 255, 0xff, 0x01, 0x00, 0x04}, // lsh.r c g  
	{0x85b3, &op_lsh,	  3,   6, 255, 0xff, 0x01, 0x00, 0x04}, // lsh.r d g  
	{0x85b4, &op_lsh,	  4,   6, 255, 0xff, 0x01, 0x00, 0x04}, // lsh.r e g  
	{0x85b5, &op_lsh,	  5,   6, 255, 0xff, 0x01, 0x00, 0x04}, // lsh.r f g  
	{0x85b6, &op_lsh,	  6,   6, 255, 0xff, 0x01, 0x00, 0x04}, // lsh.r g g  
	{0x85b7, &op_lsh,	  7,   6, 255, 0xff, 0x01, 0x00, 0x04}, // lsh.r h g  
	{0x85b8, &op_lsh,	  0,   7, 255, 0xff, 0x01, 0x00, 0x04}, // lsh.r a h  
	{0x85b9, &op_lsh,	  1,   7, 255, 0xff, 0x01, 0x00, 0x04}, // lsh.r b h  
	{0x85ba, &op_lsh,	  2,   7, 255, 0xff, 0x01, 0x00, 0x04}, // lsh.r c h  
	{0x85bb, &op_lsh,	  3,   7, 255, 0xff, 0x01, 0x00, 0x04}, // lsh.r d h  
	{0x85bc, &op_lsh,	  4,   7, 255, 0xff, 0x01, 0x00, 0x04}, // lsh.r e h  
	{0x85bd, &op_lsh,	  5,   7, 255, 0xff, 0x01, 0x00, 0x04}, // lsh.r f h  
	{0x85be, &op_lsh,	  6,   7, 255, 0xff, 0x01, 0x00, 0x04}, // lsh.r g h  
	{0x85bf, &op_lsh,	  7,   7, 255, 0xff, 0x01, 0x00, 0x04}, // lsh.r h h  
	{0x84c8, &op_lsh,	  0,   8, 255, 0xff, 0x00, 0x01, 0x01}, // lsh.wi a <literal>  
	{0x84c9, &op_lsh,	  1,   8, 255, 0xff, 0x00, 0x01, 0x01}, // lsh.wi b <literal>  
	{0x84ca, &op_lsh,	  2,   8, 255, 0xff, 0x00, 0x01, 0x01}, // lsh.wi c <literal>  
	{0x84cb, &op_lsh,	  3,   8, 255, 0xff, 0x00, 0x01, 0x01}, // lsh.wi d <literal>  
	{0x84cc, &op_lsh,	  4,   8, 255, 0xff, 0x00, 0x01, 0x01}, // lsh.wi e <literal>  
	{0x84cd, &op_lsh,	  5,   8, 255, 0xff, 0x00, 0x01, 0x01}, // lsh.wi f <literal>  
	{0x84ce, &op_lsh,	  6,   8, 255, 0xff, 0x00, 0x01, 0x01}, // lsh.wi g <literal>  
	{0x84cf, &op_lsh,	  7,   8, 255, 0xff, 0x00, 0x01, 0x01}, // lsh.wi h <literal>  
	{0x84d0, &op_lsh,	  0,   8, 255, 0xff, 0x00, 0x02, 0x02}, // lsh.di a <literal>  
	{0x84d1, &op_lsh,	  1,   8, 255, 0xff, 0x00, 0x02, 0x02}, // lsh.di b <literal>  
	{0x84d2, &op_lsh,	  2,   8, 255, 0xff, 0x00, 0x02, 0x02}, // lsh.di c <literal>  
	{0x84d3, &op_lsh,	  3,   8, 255, 0xff, 0x00, 0x02, 0x02}, // lsh.di d <literal>  
	{0x84d4, &op_lsh,	  4,   8, 255, 0xff, 0x00, 0x02, 0x02}, // lsh.di e <literal>  
	{0x84d5, &op_lsh,	  5,   8, 255, 0xff, 0x00, 0x02, 0x02}, // lsh.di f <literal>  
	{0x84d6, &op_lsh,	  6,   8, 255, 0xff, 0x00, 0x02, 0x02}, // lsh.di g <literal>  
	{0x84d7, &op_lsh,	  7,   8, 255, 0xff, 0x00, 0x02, 0x02}, // lsh.di h <literal>  
	{0x84e0, &op_lsh,	  0,   8, 255, 0xff, 0x00, 0x04, 0x04}, // lsh.i a <literal>  
	{0x84e1, &op_lsh,	  1,   8, 255, 0xff, 0x00, 0x04, 0x04}, // lsh.i b <literal>  
	{0x84e2, &op_lsh,	  2,   8, 255, 0xff, 0x00, 0x04, 0x04}, // lsh.i c <literal>  
	{0x84e3, &op_lsh,	  3,   8, 255, 0xff, 0x00, 0x04, 0x04}, // lsh.i d <literal>  
	{0x84e4, &op_lsh,	  4,   8, 255, 0xff, 0x00, 0x04, 0x04}, // lsh.i e <literal>  
	{0x84e5, &op_lsh,	  5,   8, 255, 0xff, 0x00, 0x04, 0x04}, // lsh.i f <literal>  
	{0x84e6, &op_lsh,	  6,   8, 255, 0xff, 0x00, 0x04, 0x04}, // lsh.i g <literal>  
	{0x84e7, &op_lsh,	  7,   8, 255, 0xff, 0x00, 0x04, 0x04}, // lsh.i h <literal>  
	{0x85c8, &op_lsh,	  0,   8, 255, 0xff, 0x01, 0x04, 0x01}, // lsh.wri a <literal>  
	{0x85c9, &op_lsh,	  1,   8, 255, 0xff, 0x01, 0x04, 0x01}, // lsh.wri b <literal>  
	{0x85ca, &op_lsh,	  2,   8, 255, 0xff, 0x01, 0x04, 0x01}, // lsh.wri c <literal>  
	{0x85cb, &op_lsh,	  3,   8, 255, 0xff, 0x01, 0x04, 0x01}, // lsh.wri d <literal>  
	{0x85cc, &op_lsh,	  4,   8, 255, 0xff, 0x01, 0x04, 0x01}, // lsh.wri e <literal>  
	{0x85cd, &op_lsh,	  5,   8, 255, 0xff, 0x01, 0x04, 0x01}, // lsh.wri f <literal>  
	{0x85ce, &op_lsh,	  6,   8, 255, 0xff, 0x01, 0x04, 0x01}, // lsh.wri g <literal>  
	{0x85cf, &op_lsh,	  7,   8, 255, 0xff, 0x01, 0x04, 0x01}, // lsh.wri h <literal>  
	{0x85d0, &op_lsh,	  0,   8, 255, 0xff, 0x01, 0x04, 0x02}, // lsh.dri a <literal>  
	{0x85d1, &op_lsh,	  1,   8, 255, 0xff, 0x01, 0x04, 0x02}, // lsh.dri b <literal>  
	{0x85d2, &op_lsh,	  2,   8, 255, 0xff, 0x01, 0x04, 0x02}, // lsh.dri c <literal>  
	{0x85d3, &op_lsh,	  3,   8, 255, 0xff, 0x01, 0x04, 0x02}, // lsh.dri d <literal>  
	{0x85d4, &op_lsh,	  4,   8, 255, 0xff, 0x01, 0x04, 0x02}, // lsh.dri e <literal>  
	{0x85d5, &op_lsh,	  5,   8, 255, 0xff, 0x01, 0x04, 0x02}, // lsh.dri f <literal>  
	{0x85d6, &op_lsh,	  6,   8, 255, 0xff, 0x01, 0x04, 0x02}, // lsh.dri g <literal>  
	{0x85d7, &op_lsh,	  7,   8, 255, 0xff, 0x01, 0x04, 0x02}, // lsh.dri h <literal>  
	{0x85e0, &op_lsh,	  0,   8, 255, 0xff, 0x01, 0x04, 0x04}, // lsh.ri a <literal>  
	{0x85e1, &op_lsh,	  1,   8, 255, 0xff, 0x01, 0x04, 0x04}, // lsh.ri b <literal>  
	{0x85e2, &op_lsh,	  2,   8, 255, 0xff, 0x01, 0x04, 0x04}, // lsh.ri c <literal>  
	{0x85e3, &op_lsh,	  3,   8, 255, 0xff, 0x01, 0x04, 0x04}, // lsh.ri d <literal>  
	{0x85e4, &op_lsh,	  4,   8, 255, 0xff, 0x01, 0x04, 0x04}, // lsh.ri e <literal>  
	{0x85e5, &op_lsh,	  5,   8, 255, 0xff, 0x01, 0x04, 0x04}, // lsh.ri f <literal>  
	{0x85e6, &op_lsh,	  6,   8, 255, 0xff, 0x01, 0x04, 0x04}, // lsh.ri g <literal>  
	{0x85e7, &op_lsh,	  7,   8, 255, 0xff, 0x01, 0x04, 0x04}, // lsh.ri h <literal>  
	{0x8600, &op_sub,	  0,   0, 255, 0xff, 0x00, 0x00, 0x01}, // sub.w a a  
	{0x8601, &op_sub,	  1,   0, 255, 0xff, 0x00, 0x00, 0x01}, // sub.w b a  
	{0x8602, &op_sub,	  2,   0, 255, 0xff, 0x00, 0x00, 0x01}, // sub.w c a  
	{0x8603, &op_sub,	  3,   0, 255, 0xff, 0x00, 0x00, 0x01}, // sub.w d a  
	{0x8604, &op_sub,	  4,   0, 255, 0xff, 0x00, 0x00, 0x01}, // sub.w e a  
	{0x8605, &op_sub,	  5,   0, 255, 0xff, 0x00, 0x00, 0x01}, // sub.w f a  
	{0x8606, &op_sub,	  6,   0, 255, 0xff, 0x00, 0x00, 0x01}, // sub.w g a  
	{0x8607, &op_sub,	  7,   0, 255, 0xff, 0x00, 0x00, 0x01}, // sub.w h a  
	{0x8608, &op_sub,	  0,   1, 255, 0xff, 0x00, 0x00, 0x01}, // sub.w a b  
	{0x8609, &op_sub,	  1,   1, 255, 0xff, 0x00, 0x00, 0x01}, // sub.w b b  
	{0x860a, &op_sub,	  2,   1, 255, 0xff, 0x00, 0x00, 0x01}, // sub.w c b  
	{0x860b, &op_sub,	  3,   1, 255, 0xff, 0x00, 0x00, 0x01}, // sub.w d b  
	{0x860c, &op_sub,	  4,   1, 255, 0xff, 0x00, 0x00, 0x01}, // sub.w e b  
	{0x860d, &op_sub,	  5,   1, 255, 0xff, 0x00, 0x00, 0x01}, // sub.w f b  
	{0x860e, &op_sub,	  6,   1, 255, 0xff, 0x00, 0x00, 0x01}, // sub.w g b  
	{0x860f, &op_sub,	  7,   1, 255, 0xff, 0x00, 0x00, 0x01}, // sub.w h b  
	{0x8610, &op_sub,	  0,   2, 255, 0xff, 0x00, 0x00, 0x01}, // sub.w a c  
	{0x8611, &op_sub,	  1,   2, 255, 0xff, 0x00, 0x00, 0x01}, // sub.w b c  
	{0x8612, &op_sub,	  2,   2, 255, 0xff, 0x00, 0x00, 0x01}, // sub.w c c  
	{0x8613, &op_sub,	  3,   2, 255, 0xff, 0x00, 0x00, 0x01}, // sub.w d c  
	{0x8614, &op_sub,	  4,   2, 255, 0xff, 0x00, 0x00, 0x01}, // sub.w e c  
	{0x8615, &op_sub,	  5,   2, 255, 0xff, 0x00, 0x00, 0x01}, // sub.w f c  
	{0x8616, &op_sub,	  6,   2, 255, 0xff, 0x00, 0x00, 0x01}, // sub.w g c  
	{0x8617, &op_sub,	  7,   2, 255, 0xff, 0x00, 0x00, 0x01}, // sub.w h c  
	{0x8618, &op_sub,	  0,   3, 255, 0xff, 0x00, 0x00, 0x01}, // sub.w a d  
	{0x8619, &op_sub,	  1,   3, 255, 0xff, 0x00, 0x00, 0x01}, // sub.w b d  
	{0x861a, &op_sub,	  2,   3, 255, 0xff, 0x00, 0x00, 0x01}, // sub.w c d  
	{0x861b, &op_sub,	  3,   3, 255, 0xff, 0x00, 0x00, 0x01}, // sub.w d d  
	{0x861c, &op_sub,	  4,   3, 255, 0xff, 0x00, 0x00, 0x01}, // sub.w e d  
	{0x861d, &op_sub,	  5,   3, 255, 0xff, 0x00, 0x00, 0x01}, // sub.w f d  
	{0x861e, &op_sub,	  6,   3, 255, 0xff, 0x00, 0x00, 0x01}, // sub.w g d  
	{0x861f, &op_sub,	  7,   3, 255, 0xff, 0x00, 0x00, 0x01}, // sub.w h d  
	{0x8620, &op_sub,	  0,   4, 255, 0xff, 0x00, 0x00, 0x01}, // sub.w a e  
	{0x8621, &op_sub,	  1,   4, 255, 0xff, 0x00, 0x00, 0x01}, // sub.w b e  
	{0x8622, &op_sub,	  2,   4, 255, 0xff, 0x00, 0x00, 0x01}, // sub.w c e  
	{0x8623, &op_sub,	  3,   4, 255, 0xff, 0x00, 0x00, 0x01}, // sub.w d e  
	{0x8624, &op_sub,	  4,   4, 255, 0xff, 0x00, 0x00, 0x01}, // sub.w e e  
	{0x8625, &op_sub,	  5,   4, 255, 0xff, 0x00, 0x00, 0x01}, // sub.w f e  
	{0x8626, &op_sub,	  6,   4, 255, 0xff, 0x00, 0x00, 0x01}, // sub.w g e  
	{0x8627, &op_sub,	  7,   4, 255, 0xff, 0x00, 0x00, 0x01}, // sub.w h e  
	{0x8628, &op_sub,	  0,   5, 255, 0xff, 0x00, 0x00, 0x01}, // sub.w a f  
	{0x8629, &op_sub,	  1,   5, 255, 0xff, 0x00, 0x00, 0x01}, // sub.w b f  
	{0x862a, &op_sub,	  2,   5, 255, 0xff, 0x00, 0x00, 0x01}, // sub.w c f  
	{0x862b, &op_sub,	  3,   5, 255, 0xff, 0x00, 0x00, 0x01}, // sub.w d f  
	{0x862c, &op_sub,	  4,   5, 255, 0xff, 0x00, 0x00, 0x01}, // sub.w e f  
	{0x862d, &op_sub,	  5,   5, 255, 0xff, 0x00, 0x00, 0x01}, // sub.w f f  
	{0x862e, &op_sub,	  6,   5, 255, 0xff, 0x00, 0x00, 0x01}, // sub.w g f  
	{0x862f, &op_sub,	  7,   5, 255, 0xff, 0x00, 0x00, 0x01}, // sub.w h f  
	{0x8630, &op_sub,	  0,   6, 255, 0xff, 0x00, 0x00, 0x01}, // sub.w a g  
	{0x8631, &op_sub,	  1,   6, 255, 0xff, 0x00, 0x00, 0x01}, // sub.w b g  
	{0x8632, &op_sub,	  2,   6, 255, 0xff, 0x00, 0x00, 0x01}, // sub.w c g  
	{0x8633, &op_sub,	  3,   6, 255, 0xff, 0x00, 0x00, 0x01}, // sub.w d g  
	{0x8634, &op_sub,	  4,   6, 255, 0xff, 0x00, 0x00, 0x01}, // sub.w e g  
	{0x8635, &op_sub,	  5,   6, 255, 0xff, 0x00, 0x00, 0x01}, // sub.w f g  
	{0x8636, &op_sub,	  6,   6, 255, 0xff, 0x00, 0x00, 0x01}, // sub.w g g  
	{0x8637, &op_sub,	  7,   6, 255, 0xff, 0x00, 0x00, 0x01}, // sub.w h g  
	{0x8638, &op_sub,	  0,   7, 255, 0xff, 0x00, 0x00, 0x01}, // sub.w a h  
	{0x8639, &op_sub,	  1,   7, 255, 0xff, 0x00, 0x00, 0x01}, // sub.w b h  
	{0x863a, &op_sub,	  2,   7, 255, 0xff, 0x00, 0x00, 0x01}, // sub.w c h  
	{0x863b, &op_sub,	  3,   7, 255, 0xff, 0x00, 0x00, 0x01}, // sub.w d h  
	{0x863c, &op_sub,	  4,   7, 255, 0xff, 0x00, 0x00, 0x01}, // sub.w e h  
	{0x863d, &op_sub,	  5,   7, 255, 0xff, 0x00, 0x00, 0x01}, // sub.w f h  
	{0x863e, &op_sub,	  6,   7, 255, 0xff, 0x00, 0x00, 0x01}, // sub.w g h  
	{0x863f, &op_sub,	  7,   7, 255, 0xff, 0x00, 0x00, 0x01}, // sub.w h h  
	{0x8640, &op_sub,	  0,   0, 255, 0xff, 0x00, 0x00, 0x02}, // sub.d a a  
	{0x8641, &op_sub,	  1,   0, 255, 0xff, 0x00, 0x00, 0x02}, // sub.d b a  
	{0x8642, &op_sub,	  2,   0, 255, 0xff, 0x00, 0x00, 0x02}, // sub.d c a  
	{0x8643, &op_sub,	  3,   0, 255, 0xff, 0x00, 0x00, 0x02}, // sub.d d a  
	{0x8644, &op_sub,	  4,   0, 255, 0xff, 0x00, 0x00, 0x02}, // sub.d e a  
	{0x8645, &op_sub,	  5,   0, 255, 0xff, 0x00, 0x00, 0x02}, // sub.d f a  
	{0x8646, &op_sub,	  6,   0, 255, 0xff, 0x00, 0x00, 0x02}, // sub.d g a  
	{0x8647, &op_sub,	  7,   0, 255, 0xff, 0x00, 0x00, 0x02}, // sub.d h a  
	{0x8648, &op_sub,	  0,   1, 255, 0xff, 0x00, 0x00, 0x02}, // sub.d a b  
	{0x8649, &op_sub,	  1,   1, 255, 0xff, 0x00, 0x00, 0x02}, // sub.d b b  
	{0x864a, &op_sub,	  2,   1, 255, 0xff, 0x00, 0x00, 0x02}, // sub.d c b  
	{0x864b, &op_sub,	  3,   1, 255, 0xff, 0x00, 0x00, 0x02}, // sub.d d b  
	{0x864c, &op_sub,	  4,   1, 255, 0xff, 0x00, 0x00, 0x02}, // sub.d e b  
	{0x864d, &op_sub,	  5,   1, 255, 0xff, 0x00, 0x00, 0x02}, // sub.d f b  
	{0x864e, &op_sub,	  6,   1, 255, 0xff, 0x00, 0x00, 0x02}, // sub.d g b  
	{0x864f, &op_sub,	  7,   1, 255, 0xff, 0x00, 0x00, 0x02}, // sub.d h b  
	{0x8650, &op_sub,	  0,   2, 255, 0xff, 0x00, 0x00, 0x02}, // sub.d a c  
	{0x8651, &op_sub,	  1,   2, 255, 0xff, 0x00, 0x00, 0x02}, // sub.d b c  
	{0x8652, &op_sub,	  2,   2, 255, 0xff, 0x00, 0x00, 0x02}, // sub.d c c  
	{0x8653, &op_sub,	  3,   2, 255, 0xff, 0x00, 0x00, 0x02}, // sub.d d c  
	{0x8654, &op_sub,	  4,   2, 255, 0xff, 0x00, 0x00, 0x02}, // sub.d e c  
	{0x8655, &op_sub,	  5,   2, 255, 0xff, 0x00, 0x00, 0x02}, // sub.d f c  
	{0x8656, &op_sub,	  6,   2, 255, 0xff, 0x00, 0x00, 0x02}, // sub.d g c  
	{0x8657, &op_sub,	  7,   2, 255, 0xff, 0x00, 0x00, 0x02}, // sub.d h c  
	{0x8658, &op_sub,	  0,   3, 255, 0xff, 0x00, 0x00, 0x02}, // sub.d a d  
	{0x8659, &op_sub,	  1,   3, 255, 0xff, 0x00, 0x00, 0x02}, // sub.d b d  
	{0x865a, &op_sub,	  2,   3, 255, 0xff, 0x00, 0x00, 0x02}, // sub.d c d  
	{0x865b, &op_sub,	  3,   3, 255, 0xff, 0x00, 0x00, 0x02}, // sub.d d d  
	{0x865c, &op_sub,	  4,   3, 255, 0xff, 0x00, 0x00, 0x02}, // sub.d e d  
	{0x865d, &op_sub,	  5,   3, 255, 0xff, 0x00, 0x00, 0x02}, // sub.d f d  
	{0x865e, &op_sub,	  6,   3, 255, 0xff, 0x00, 0x00, 0x02}, // sub.d g d  
	{0x865f, &op_sub,	  7,   3, 255, 0xff, 0x00, 0x00, 0x02}, // sub.d h d  
	{0x8660, &op_sub,	  0,   4, 255, 0xff, 0x00, 0x00, 0x02}, // sub.d a e  
	{0x8661, &op_sub,	  1,   4, 255, 0xff, 0x00, 0x00, 0x02}, // sub.d b e  
	{0x8662, &op_sub,	  2,   4, 255, 0xff, 0x00, 0x00, 0x02}, // sub.d c e  
	{0x8663, &op_sub,	  3,   4, 255, 0xff, 0x00, 0x00, 0x02}, // sub.d d e  
	{0x8664, &op_sub,	  4,   4, 255, 0xff, 0x00, 0x00, 0x02}, // sub.d e e  
	{0x8665, &op_sub,	  5,   4, 255, 0xff, 0x00, 0x00, 0x02}, // sub.d f e  
	{0x8666, &op_sub,	  6,   4, 255, 0xff, 0x00, 0x00, 0x02}, // sub.d g e  
	{0x8667, &op_sub,	  7,   4, 255, 0xff, 0x00, 0x00, 0x02}, // sub.d h e  
	{0x8668, &op_sub,	  0,   5, 255, 0xff, 0x00, 0x00, 0x02}, // sub.d a f  
	{0x8669, &op_sub,	  1,   5, 255, 0xff, 0x00, 0x00, 0x02}, // sub.d b f  
	{0x866a, &op_sub,	  2,   5, 255, 0xff, 0x00, 0x00, 0x02}, // sub.d c f  
	{0x866b, &op_sub,	  3,   5, 255, 0xff, 0x00, 0x00, 0x02}, // sub.d d f  
	{0x866c, &op_sub,	  4,   5, 255, 0xff, 0x00, 0x00, 0x02}, // sub.d e f  
	{0x866d, &op_sub,	  5,   5, 255, 0xff, 0x00, 0x00, 0x02}, // sub.d f f  
	{0x866e, &op_sub,	  6,   5, 255, 0xff, 0x00, 0x00, 0x02}, // sub.d g f  
	{0x866f, &op_sub,	  7,   5, 255, 0xff, 0x00, 0x00, 0x02}, // sub.d h f  
	{0x8670, &op_sub,	  0,   6, 255, 0xff, 0x00, 0x00, 0x02}, // sub.d a g  
	{0x8671, &op_sub,	  1,   6, 255, 0xff, 0x00, 0x00, 0x02}, // sub.d b g  
	{0x8672, &op_sub,	  2,   6, 255, 0xff, 0x00, 0x00, 0x02}, // sub.d c g  
	{0x8673, &op_sub,	  3,   6, 255, 0xff, 0x00, 0x00, 0x02}, // sub.d d g  
	{0x8674, &op_sub,	  4,   6, 255, 0xff, 0x00, 0x00, 0x02}, // sub.d e g  
	{0x8675, &op_sub,	  5,   6, 255, 0xff, 0x00, 0x00, 0x02}, // sub.d f g  
	{0x8676, &op_sub,	  6,   6, 255, 0xff, 0x00, 0x00, 0x02}, // sub.d g g  
	{0x8677, &op_sub,	  7,   6, 255, 0xff, 0x00, 0x00, 0x02}, // sub.d h g  
	{0x8678, &op_sub,	  0,   7, 255, 0xff, 0x00, 0x00, 0x02}, // sub.d a h  
	{0x8679, &op_sub,	  1,   7, 255, 0xff, 0x00, 0x00, 0x02}, // sub.d b h  
	{0x867a, &op_sub,	  2,   7, 255, 0xff, 0x00, 0x00, 0x02}, // sub.d c h  
	{0x867b, &op_sub,	  3,   7, 255, 0xff, 0x00, 0x00, 0x02}, // sub.d d h  
	{0x867c, &op_sub,	  4,   7, 255, 0xff, 0x00, 0x00, 0x02}, // sub.d e h  
	{0x867d, &op_sub,	  5,   7, 255, 0xff, 0x00, 0x00, 0x02}, // sub.d f h  
	{0x867e, &op_sub,	  6,   7, 255, 0xff, 0x00, 0x00, 0x02}, // sub.d g h  
	{0x867f, &op_sub,	  7,   7, 255, 0xff, 0x00, 0x00, 0x02}, // sub.d h h  
	{0x8680, &op_sub,	  0,   0, 255, 0xff, 0x00, 0x00, 0x04}, // sub a a  
	{0x8681, &op_sub,	  1,   0, 255, 0xff, 0x00, 0x00, 0x04}, // sub b a  
	{0x8682, &op_sub,	  2,   0, 255, 0xff, 0x00, 0x00, 0x04}, // sub c a  
	{0x8683, &op_sub,	  3,   0, 255, 0xff, 0x00, 0x00, 0x04}, // sub d a  
	{0x8684, &op_sub,	  4,   0, 255, 0xff, 0x00, 0x00, 0x04}, // sub e a  
	{0x8685, &op_sub,	  5,   0, 255, 0xff, 0x00, 0x00, 0x04}, // sub f a  
	{0x8686, &op_sub,	  6,   0, 255, 0xff, 0x00, 0x00, 0x04}, // sub g a  
	{0x8687, &op_sub,	  7,   0, 255, 0xff, 0x00, 0x00, 0x04}, // sub h a  
	{0x8688, &op_sub,	  0,   1, 255, 0xff, 0x00, 0x00, 0x04}, // sub a b  
	{0x8689, &op_sub,	  1,   1, 255, 0xff, 0x00, 0x00, 0x04}, // sub b b  
	{0x868a, &op_sub,	  2,   1, 255, 0xff, 0x00, 0x00, 0x04}, // sub c b  
	{0x868b, &op_sub,	  3,   1, 255, 0xff, 0x00, 0x00, 0x04}, // sub d b  
	{0x868c, &op_sub,	  4,   1, 255, 0xff, 0x00, 0x00, 0x04}, // sub e b  
	{0x868d, &op_sub,	  5,   1, 255, 0xff, 0x00, 0x00, 0x04}, // sub f b  
	{0x868e, &op_sub,	  6,   1, 255, 0xff, 0x00, 0x00, 0x04}, // sub g b  
	{0x868f, &op_sub,	  7,   1, 255, 0xff, 0x00, 0x00, 0x04}, // sub h b  
	{0x8690, &op_sub,	  0,   2, 255, 0xff, 0x00, 0x00, 0x04}, // sub a c  
	{0x8691, &op_sub,	  1,   2, 255, 0xff, 0x00, 0x00, 0x04}, // sub b c  
	{0x8692, &op_sub,	  2,   2, 255, 0xff, 0x00, 0x00, 0x04}, // sub c c  
	{0x8693, &op_sub,	  3,   2, 255, 0xff, 0x00, 0x00, 0x04}, // sub d c  
	{0x8694, &op_sub,	  4,   2, 255, 0xff, 0x00, 0x00, 0x04}, // sub e c  
	{0x8695, &op_sub,	  5,   2, 255, 0xff, 0x00, 0x00, 0x04}, // sub f c  
	{0x8696, &op_sub,	  6,   2, 255, 0xff, 0x00, 0x00, 0x04}, // sub g c  
	{0x8697, &op_sub,	  7,   2, 255, 0xff, 0x00, 0x00, 0x04}, // sub h c  
	{0x8698, &op_sub,	  0,   3, 255, 0xff, 0x00, 0x00, 0x04}, // sub a d  
	{0x8699, &op_sub,	  1,   3, 255, 0xff, 0x00, 0x00, 0x04}, // sub b d  
	{0x869a, &op_sub,	  2,   3, 255, 0xff, 0x00, 0x00, 0x04}, // sub c d  
	{0x869b, &op_sub,	  3,   3, 255, 0xff, 0x00, 0x00, 0x04}, // sub d d  
	{0x869c, &op_sub,	  4,   3, 255, 0xff, 0x00, 0x00, 0x04}, // sub e d  
	{0x869d, &op_sub,	  5,   3, 255, 0xff, 0x00, 0x00, 0x04}, // sub f d  
	{0x869e, &op_sub,	  6,   3, 255, 0xff, 0x00, 0x00, 0x04}, // sub g d  
	{0x869f, &op_sub,	  7,   3, 255, 0xff, 0x00, 0x00, 0x04}, // sub h d  
	{0x86a0, &op_sub,	  0,   4, 255, 0xff, 0x00, 0x00, 0x04}, // sub a e  
	{0x86a1, &op_sub,	  1,   4, 255, 0xff, 0x00, 0x00, 0x04}, // sub b e  
	{0x86a2, &op_sub,	  2,   4, 255, 0xff, 0x00, 0x00, 0x04}, // sub c e  
	{0x86a3, &op_sub,	  3,   4, 255, 0xff, 0x00, 0x00, 0x04}, // sub d e  
	{0x86a4, &op_sub,	  4,   4, 255, 0xff, 0x00, 0x00, 0x04}, // sub e e  
	{0x86a5, &op_sub,	  5,   4, 255, 0xff, 0x00, 0x00, 0x04}, // sub f e  
	{0x86a6, &op_sub,	  6,   4, 255, 0xff, 0x00, 0x00, 0x04}, // sub g e  
	{0x86a7, &op_sub,	  7,   4, 255, 0xff, 0x00, 0x00, 0x04}, // sub h e  
	{0x86a8, &op_sub,	  0,   5, 255, 0xff, 0x00, 0x00, 0x04}, // sub a f  
	{0x86a9, &op_sub,	  1,   5, 255, 0xff, 0x00, 0x00, 0x04}, // sub b f  
	{0x86aa, &op_sub,	  2,   5, 255, 0xff, 0x00, 0x00, 0x04}, // sub c f  
	{0x86ab, &op_sub,	  3,   5, 255, 0xff, 0x00, 0x00, 0x04}, // sub d f  
	{0x86ac, &op_sub,	  4,   5, 255, 0xff, 0x00, 0x00, 0x04}, // sub e f  
	{0x86ad, &op_sub,	  5,   5, 255, 0xff, 0x00, 0x00, 0x04}, // sub f f  
	{0x86ae, &op_sub,	  6,   5, 255, 0xff, 0x00, 0x00, 0x04}, // sub g f  
	{0x86af, &op_sub,	  7,   5, 255, 0xff, 0x00, 0x00, 0x04}, // sub h f  
	{0x86b0, &op_sub,	  0,   6, 255, 0xff, 0x00, 0x00, 0x04}, // sub a g  
	{0x86b1, &op_sub,	  1,   6, 255, 0xff, 0x00, 0x00, 0x04}, // sub b g  
	{0x86b2, &op_sub,	  2,   6, 255, 0xff, 0x00, 0x00, 0x04}, // sub c g  
	{0x86b3, &op_sub,	  3,   6, 255, 0xff, 0x00, 0x00, 0x04}, // sub d g  
	{0x86b4, &op_sub,	  4,   6, 255, 0xff, 0x00, 0x00, 0x04}, // sub e g  
	{0x86b5, &op_sub,	  5,   6, 255, 0xff, 0x00, 0x00, 0x04}, // sub f g  
	{0x86b6, &op_sub,	  6,   6, 255, 0xff, 0x00, 0x00, 0x04}, // sub g g  
	{0x86b7, &op_sub,	  7,   6, 255, 0xff, 0x00, 0x00, 0x04}, // sub h g  
	{0x86b8, &op_sub,	  0,   7, 255, 0xff, 0x00, 0x00, 0x04}, // sub a h  
	{0x86b9, &op_sub,	  1,   7, 255, 0xff, 0x00, 0x00, 0x04}, // sub b h  
	{0x86ba, &op_sub,	  2,   7, 255, 0xff, 0x00, 0x00, 0x04}, // sub c h  
	{0x86bb, &op_sub,	  3,   7, 255, 0xff, 0x00, 0x00, 0x04}, // sub d h  
	{0x86bc, &op_sub,	  4,   7, 255, 0xff, 0x00, 0x00, 0x04}, // sub e h  
	{0x86bd, &op_sub,	  5,   7, 255, 0xff, 0x00, 0x00, 0x04}, // sub f h  
	{0x86be, &op_sub,	  6,   7, 255, 0xff, 0x00, 0x00, 0x04}, // sub g h  
	{0x86bf, &op_sub,	  7,   7, 255, 0xff, 0x00, 0x00, 0x04}, // sub h h  
	{0x8700, &op_sub,	  0,   0, 255, 0xff, 0x01, 0x00, 0x01}, // sub.wr a a  
	{0x8701, &op_sub,	  1,   0, 255, 0xff, 0x01, 0x00, 0x01}, // sub.wr b a  
	{0x8702, &op_sub,	  2,   0, 255, 0xff, 0x01, 0x00, 0x01}, // sub.wr c a  
	{0x8703, &op_sub,	  3,   0, 255, 0xff, 0x01, 0x00, 0x01}, // sub.wr d a  
	{0x8704, &op_sub,	  4,   0, 255, 0xff, 0x01, 0x00, 0x01}, // sub.wr e a  
	{0x8705, &op_sub,	  5,   0, 255, 0xff, 0x01, 0x00, 0x01}, // sub.wr f a  
	{0x8706, &op_sub,	  6,   0, 255, 0xff, 0x01, 0x00, 0x01}, // sub.wr g a  
	{0x8707, &op_sub,	  7,   0, 255, 0xff, 0x01, 0x00, 0x01}, // sub.wr h a  
	{0x8708, &op_sub,	  0,   1, 255, 0xff, 0x01, 0x00, 0x01}, // sub.wr a b  
	{0x8709, &op_sub,	  1,   1, 255, 0xff, 0x01, 0x00, 0x01}, // sub.wr b b  
	{0x870a, &op_sub,	  2,   1, 255, 0xff, 0x01, 0x00, 0x01}, // sub.wr c b  
	{0x870b, &op_sub,	  3,   1, 255, 0xff, 0x01, 0x00, 0x01}, // sub.wr d b  
	{0x870c, &op_sub,	  4,   1, 255, 0xff, 0x01, 0x00, 0x01}, // sub.wr e b  
	{0x870d, &op_sub,	  5,   1, 255, 0xff, 0x01, 0x00, 0x01}, // sub.wr f b  
	{0x870e, &op_sub,	  6,   1, 255, 0xff, 0x01, 0x00, 0x01}, // sub.wr g b  
	{0x870f, &op_sub,	  7,   1, 255, 0xff, 0x01, 0x00, 0x01}, // sub.wr h b  
	{0x8710, &op_sub,	  0,   2, 255, 0xff, 0x01, 0x00, 0x01}, // sub.wr a c  
	{0x8711, &op_sub,	  1,   2, 255, 0xff, 0x01, 0x00, 0x01}, // sub.wr b c  
	{0x8712, &op_sub,	  2,   2, 255, 0xff, 0x01, 0x00, 0x01}, // sub.wr c c  
	{0x8713, &op_sub,	  3,   2, 255, 0xff, 0x01, 0x00, 0x01}, // sub.wr d c  
	{0x8714, &op_sub,	  4,   2, 255, 0xff, 0x01, 0x00, 0x01}, // sub.wr e c  
	{0x8715, &op_sub,	  5,   2, 255, 0xff, 0x01, 0x00, 0x01}, // sub.wr f c  
	{0x8716, &op_sub,	  6,   2, 255, 0xff, 0x01, 0x00, 0x01}, // sub.wr g c  
	{0x8717, &op_sub,	  7,   2, 255, 0xff, 0x01, 0x00, 0x01}, // sub.wr h c  
	{0x8718, &op_sub,	  0,   3, 255, 0xff, 0x01, 0x00, 0x01}, // sub.wr a d  
	{0x8719, &op_sub,	  1,   3, 255, 0xff, 0x01, 0x00, 0x01}, // sub.wr b d  
	{0x871a, &op_sub,	  2,   3, 255, 0xff, 0x01, 0x00, 0x01}, // sub.wr c d  
	{0x871b, &op_sub,	  3,   3, 255, 0xff, 0x01, 0x00, 0x01}, // sub.wr d d  
	{0x871c, &op_sub,	  4,   3, 255, 0xff, 0x01, 0x00, 0x01}, // sub.wr e d  
	{0x871d, &op_sub,	  5,   3, 255, 0xff, 0x01, 0x00, 0x01}, // sub.wr f d  
	{0x871e, &op_sub,	  6,   3, 255, 0xff, 0x01, 0x00, 0x01}, // sub.wr g d  
	{0x871f, &op_sub,	  7,   3, 255, 0xff, 0x01, 0x00, 0x01}, // sub.wr h d  
	{0x8720, &op_sub,	  0,   4, 255, 0xff, 0x01, 0x00, 0x01}, // sub.wr a e  
	{0x8721, &op_sub,	  1,   4, 255, 0xff, 0x01, 0x00, 0x01}, // sub.wr b e  
	{0x8722, &op_sub,	  2,   4, 255, 0xff, 0x01, 0x00, 0x01}, // sub.wr c e  
	{0x8723, &op_sub,	  3,   4, 255, 0xff, 0x01, 0x00, 0x01}, // sub.wr d e  
	{0x8724, &op_sub,	  4,   4, 255, 0xff, 0x01, 0x00, 0x01}, // sub.wr e e  
	{0x8725, &op_sub,	  5,   4, 255, 0xff, 0x01, 0x00, 0x01}, // sub.wr f e  
	{0x8726, &op_sub,	  6,   4, 255, 0xff, 0x01, 0x00, 0x01}, // sub.wr g e  
	{0x8727, &op_sub,	  7,   4, 255, 0xff, 0x01, 0x00, 0x01}, // sub.wr h e  
	{0x8728, &op_sub,	  0,   5, 255, 0xff, 0x01, 0x00, 0x01}, // sub.wr a f  
	{0x8729, &op_sub,	  1,   5, 255, 0xff, 0x01, 0x00, 0x01}, // sub.wr b f  
	{0x872a, &op_sub,	  2,   5, 255, 0xff, 0x01, 0x00, 0x01}, // sub.wr c f  
	{0x872b, &op_sub,	  3,   5, 255, 0xff, 0x01, 0x00, 0x01}, // sub.wr d f  
	{0x872c, &op_sub,	  4,   5, 255, 0xff, 0x01, 0x00, 0x01}, // sub.wr e f  
	{0x872d, &op_sub,	  5,   5, 255, 0xff, 0x01, 0x00, 0x01}, // sub.wr f f  
	{0x872e, &op_sub,	  6,   5, 255, 0xff, 0x01, 0x00, 0x01}, // sub.wr g f  
	{0x872f, &op_sub,	  7,   5, 255, 0xff, 0x01, 0x00, 0x01}, // sub.wr h f  
	{0x8730, &op_sub,	  0,   6, 255, 0xff, 0x01, 0x00, 0x01}, // sub.wr a g  
	{0x8731, &op_sub,	  1,   6, 255, 0xff, 0x01, 0x00, 0x01}, // sub.wr b g  
	{0x8732, &op_sub,	  2,   6, 255, 0xff, 0x01, 0x00, 0x01}, // sub.wr c g  
	{0x8733, &op_sub,	  3,   6, 255, 0xff, 0x01, 0x00, 0x01}, // sub.wr d g  
	{0x8734, &op_sub,	  4,   6, 255, 0xff, 0x01, 0x00, 0x01}, // sub.wr e g  
	{0x8735, &op_sub,	  5,   6, 255, 0xff, 0x01, 0x00, 0x01}, // sub.wr f g  
	{0x8736, &op_sub,	  6,   6, 255, 0xff, 0x01, 0x00, 0x01}, // sub.wr g g  
	{0x8737, &op_sub,	  7,   6, 255, 0xff, 0x01, 0x00, 0x01}, // sub.wr h g  
	{0x8738, &op_sub,	  0,   7, 255, 0xff, 0x01, 0x00, 0x01}, // sub.wr a h  
	{0x8739, &op_sub,	  1,   7, 255, 0xff, 0x01, 0x00, 0x01}, // sub.wr b h  
	{0x873a, &op_sub,	  2,   7, 255, 0xff, 0x01, 0x00, 0x01}, // sub.wr c h  
	{0x873b, &op_sub,	  3,   7, 255, 0xff, 0x01, 0x00, 0x01}, // sub.wr d h  
	{0x873c, &op_sub,	  4,   7, 255, 0xff, 0x01, 0x00, 0x01}, // sub.wr e h  
	{0x873d, &op_sub,	  5,   7, 255, 0xff, 0x01, 0x00, 0x01}, // sub.wr f h  
	{0x873e, &op_sub,	  6,   7, 255, 0xff, 0x01, 0x00, 0x01}, // sub.wr g h  
	{0x873f, &op_sub,	  7,   7, 255, 0xff, 0x01, 0x00, 0x01}, // sub.wr h h  
	{0x8740, &op_sub,	  0,   0, 255, 0xff, 0x01, 0x00, 0x02}, // sub.dr a a  
	{0x8741, &op_sub,	  1,   0, 255, 0xff, 0x01, 0x00, 0x02}, // sub.dr b a  
	{0x8742, &op_sub,	  2,   0, 255, 0xff, 0x01, 0x00, 0x02}, // sub.dr c a  
	{0x8743, &op_sub,	  3,   0, 255, 0xff, 0x01, 0x00, 0x02}, // sub.dr d a  
	{0x8744, &op_sub,	  4,   0, 255, 0xff, 0x01, 0x00, 0x02}, // sub.dr e a  
	{0x8745, &op_sub,	  5,   0, 255, 0xff, 0x01, 0x00, 0x02}, // sub.dr f a  
	{0x8746, &op_sub,	  6,   0, 255, 0xff, 0x01, 0x00, 0x02}, // sub.dr g a  
	{0x8747, &op_sub,	  7,   0, 255, 0xff, 0x01, 0x00, 0x02}, // sub.dr h a  
	{0x8748, &op_sub,	  0,   1, 255, 0xff, 0x01, 0x00, 0x02}, // sub.dr a b  
	{0x8749, &op_sub,	  1,   1, 255, 0xff, 0x01, 0x00, 0x02}, // sub.dr b b  
	{0x874a, &op_sub,	  2,   1, 255, 0xff, 0x01, 0x00, 0x02}, // sub.dr c b  
	{0x874b, &op_sub,	  3,   1, 255, 0xff, 0x01, 0x00, 0x02}, // sub.dr d b  
	{0x874c, &op_sub,	  4,   1, 255, 0xff, 0x01, 0x00, 0x02}, // sub.dr e b  
	{0x874d, &op_sub,	  5,   1, 255, 0xff, 0x01, 0x00, 0x02}, // sub.dr f b  
	{0x874e, &op_sub,	  6,   1, 255, 0xff, 0x01, 0x00, 0x02}, // sub.dr g b  
	{0x874f, &op_sub,	  7,   1, 255, 0xff, 0x01, 0x00, 0x02}, // sub.dr h b  
	{0x8750, &op_sub,	  0,   2, 255, 0xff, 0x01, 0x00, 0x02}, // sub.dr a c  
	{0x8751, &op_sub,	  1,   2, 255, 0xff, 0x01, 0x00, 0x02}, // sub.dr b c  
	{0x8752, &op_sub,	  2,   2, 255, 0xff, 0x01, 0x00, 0x02}, // sub.dr c c  
	{0x8753, &op_sub,	  3,   2, 255, 0xff, 0x01, 0x00, 0x02}, // sub.dr d c  
	{0x8754, &op_sub,	  4,   2, 255, 0xff, 0x01, 0x00, 0x02}, // sub.dr e c  
	{0x8755, &op_sub,	  5,   2, 255, 0xff, 0x01, 0x00, 0x02}, // sub.dr f c  
	{0x8756, &op_sub,	  6,   2, 255, 0xff, 0x01, 0x00, 0x02}, // sub.dr g c  
	{0x8757, &op_sub,	  7,   2, 255, 0xff, 0x01, 0x00, 0x02}, // sub.dr h c  
	{0x8758, &op_sub,	  0,   3, 255, 0xff, 0x01, 0x00, 0x02}, // sub.dr a d  
	{0x8759, &op_sub,	  1,   3, 255, 0xff, 0x01, 0x00, 0x02}, // sub.dr b d  
	{0x875a, &op_sub,	  2,   3, 255, 0xff, 0x01, 0x00, 0x02}, // sub.dr c d  
	{0x875b, &op_sub,	  3,   3, 255, 0xff, 0x01, 0x00, 0x02}, // sub.dr d d  
	{0x875c, &op_sub,	  4,   3, 255, 0xff, 0x01, 0x00, 0x02}, // sub.dr e d  
	{0x875d, &op_sub,	  5,   3, 255, 0xff, 0x01, 0x00, 0x02}, // sub.dr f d  
	{0x875e, &op_sub,	  6,   3, 255, 0xff, 0x01, 0x00, 0x02}, // sub.dr g d  
	{0x875f, &op_sub,	  7,   3, 255, 0xff, 0x01, 0x00, 0x02}, // sub.dr h d  
	{0x8760, &op_sub,	  0,   4, 255, 0xff, 0x01, 0x00, 0x02}, // sub.dr a e  
	{0x8761, &op_sub,	  1,   4, 255, 0xff, 0x01, 0x00, 0x02}, // sub.dr b e  
	{0x8762, &op_sub,	  2,   4, 255, 0xff, 0x01, 0x00, 0x02}, // sub.dr c e  
	{0x8763, &op_sub,	  3,   4, 255, 0xff, 0x01, 0x00, 0x02}, // sub.dr d e  
	{0x8764, &op_sub,	  4,   4, 255, 0xff, 0x01, 0x00, 0x02}, // sub.dr e e  
	{0x8765, &op_sub,	  5,   4, 255, 0xff, 0x01, 0x00, 0x02}, // sub.dr f e  
	{0x8766, &op_sub,	  6,   4, 255, 0xff, 0x01, 0x00, 0x02}, // sub.dr g e  
	{0x8767, &op_sub,	  7,   4, 255, 0xff, 0x01, 0x00, 0x02}, // sub.dr h e  
	{0x8768, &op_sub,	  0,   5, 255, 0xff, 0x01, 0x00, 0x02}, // sub.dr a f  
	{0x8769, &op_sub,	  1,   5, 255, 0xff, 0x01, 0x00, 0x02}, // sub.dr b f  
	{0x876a, &op_sub,	  2,   5, 255, 0xff, 0x01, 0x00, 0x02}, // sub.dr c f  
	{0x876b, &op_sub,	  3,   5, 255, 0xff, 0x01, 0x00, 0x02}, // sub.dr d f  
	{0x876c, &op_sub,	  4,   5, 255, 0xff, 0x01, 0x00, 0x02}, // sub.dr e f  
	{0x876d, &op_sub,	  5,   5, 255, 0xff, 0x01, 0x00, 0x02}, // sub.dr f f  
	{0x876e, &op_sub,	  6,   5, 255, 0xff, 0x01, 0x00, 0x02}, // sub.dr g f  
	{0x876f, &op_sub,	  7,   5, 255, 0xff, 0x01, 0x00, 0x02}, // sub.dr h f  
	{0x8770, &op_sub,	  0,   6, 255, 0xff, 0x01, 0x00, 0x02}, // sub.dr a g  
	{0x8771, &op_sub,	  1,   6, 255, 0xff, 0x01, 0x00, 0x02}, // sub.dr b g  
	{0x8772, &op_sub,	  2,   6, 255, 0xff, 0x01, 0x00, 0x02}, // sub.dr c g  
	{0x8773, &op_sub,	  3,   6, 255, 0xff, 0x01, 0x00, 0x02}, // sub.dr d g  
	{0x8774, &op_sub,	  4,   6, 255, 0xff, 0x01, 0x00, 0x02}, // sub.dr e g  
	{0x8775, &op_sub,	  5,   6, 255, 0xff, 0x01, 0x00, 0x02}, // sub.dr f g  
	{0x8776, &op_sub,	  6,   6, 255, 0xff, 0x01, 0x00, 0x02}, // sub.dr g g  
	{0x8777, &op_sub,	  7,   6, 255, 0xff, 0x01, 0x00, 0x02}, // sub.dr h g  
	{0x8778, &op_sub,	  0,   7, 255, 0xff, 0x01, 0x00, 0x02}, // sub.dr a h  
	{0x8779, &op_sub,	  1,   7, 255, 0xff, 0x01, 0x00, 0x02}, // sub.dr b h  
	{0x877a, &op_sub,	  2,   7, 255, 0xff, 0x01, 0x00, 0x02}, // sub.dr c h  
	{0x877b, &op_sub,	  3,   7, 255, 0xff, 0x01, 0x00, 0x02}, // sub.dr d h  
	{0x877c, &op_sub,	  4,   7, 255, 0xff, 0x01, 0x00, 0x02}, // sub.dr e h  
	{0x877d, &op_sub,	  5,   7, 255, 0xff, 0x01, 0x00, 0x02}, // sub.dr f h  
	{0x877e, &op_sub,	  6,   7, 255, 0xff, 0x01, 0x00, 0x02}, // sub.dr g h  
	{0x877f, &op_sub,	  7,   7, 255, 0xff, 0x01, 0x00, 0x02}, // sub.dr h h  
	{0x8780, &op_sub,	  0,   0, 255, 0xff, 0x01, 0x00, 0x04}, // sub.r a a  
	{0x8781, &op_sub,	  1,   0, 255, 0xff, 0x01, 0x00, 0x04}, // sub.r b a  
	{0x8782, &op_sub,	  2,   0, 255, 0xff, 0x01, 0x00, 0x04}, // sub.r c a  
	{0x8783, &op_sub,	  3,   0, 255, 0xff, 0x01, 0x00, 0x04}, // sub.r d a  
	{0x8784, &op_sub,	  4,   0, 255, 0xff, 0x01, 0x00, 0x04}, // sub.r e a  
	{0x8785, &op_sub,	  5,   0, 255, 0xff, 0x01, 0x00, 0x04}, // sub.r f a  
	{0x8786, &op_sub,	  6,   0, 255, 0xff, 0x01, 0x00, 0x04}, // sub.r g a  
	{0x8787, &op_sub,	  7,   0, 255, 0xff, 0x01, 0x00, 0x04}, // sub.r h a  
	{0x8788, &op_sub,	  0,   1, 255, 0xff, 0x01, 0x00, 0x04}, // sub.r a b  
	{0x8789, &op_sub,	  1,   1, 255, 0xff, 0x01, 0x00, 0x04}, // sub.r b b  
	{0x878a, &op_sub,	  2,   1, 255, 0xff, 0x01, 0x00, 0x04}, // sub.r c b  
	{0x878b, &op_sub,	  3,   1, 255, 0xff, 0x01, 0x00, 0x04}, // sub.r d b  
	{0x878c, &op_sub,	  4,   1, 255, 0xff, 0x01, 0x00, 0x04}, // sub.r e b  
	{0x878d, &op_sub,	  5,   1, 255, 0xff, 0x01, 0x00, 0x04}, // sub.r f b  
	{0x878e, &op_sub,	  6,   1, 255, 0xff, 0x01, 0x00, 0x04}, // sub.r g b  
	{0x878f, &op_sub,	  7,   1, 255, 0xff, 0x01, 0x00, 0x04}, // sub.r h b  
	{0x8790, &op_sub,	  0,   2, 255, 0xff, 0x01, 0x00, 0x04}, // sub.r a c  
	{0x8791, &op_sub,	  1,   2, 255, 0xff, 0x01, 0x00, 0x04}, // sub.r b c  
	{0x8792, &op_sub,	  2,   2, 255, 0xff, 0x01, 0x00, 0x04}, // sub.r c c  
	{0x8793, &op_sub,	  3,   2, 255, 0xff, 0x01, 0x00, 0x04}, // sub.r d c  
	{0x8794, &op_sub,	  4,   2, 255, 0xff, 0x01, 0x00, 0x04}, // sub.r e c  
	{0x8795, &op_sub,	  5,   2, 255, 0xff, 0x01, 0x00, 0x04}, // sub.r f c  
	{0x8796, &op_sub,	  6,   2, 255, 0xff, 0x01, 0x00, 0x04}, // sub.r g c  
	{0x8797, &op_sub,	  7,   2, 255, 0xff, 0x01, 0x00, 0x04}, // sub.r h c  
	{0x8798, &op_sub,	  0,   3, 255, 0xff, 0x01, 0x00, 0x04}, // sub.r a d  
	{0x8799, &op_sub,	  1,   3, 255, 0xff, 0x01, 0x00, 0x04}, // sub.r b d  
	{0x879a, &op_sub,	  2,   3, 255, 0xff, 0x01, 0x00, 0x04}, // sub.r c d  
	{0x879b, &op_sub,	  3,   3, 255, 0xff, 0x01, 0x00, 0x04}, // sub.r d d  
	{0x879c, &op_sub,	  4,   3, 255, 0xff, 0x01, 0x00, 0x04}, // sub.r e d  
	{0x879d, &op_sub,	  5,   3, 255, 0xff, 0x01, 0x00, 0x04}, // sub.r f d  
	{0x879e, &op_sub,	  6,   3, 255, 0xff, 0x01, 0x00, 0x04}, // sub.r g d  
	{0x879f, &op_sub,	  7,   3, 255, 0xff, 0x01, 0x00, 0x04}, // sub.r h d  
	{0x87a0, &op_sub,	  0,   4, 255, 0xff, 0x01, 0x00, 0x04}, // sub.r a e  
	{0x87a1, &op_sub,	  1,   4, 255, 0xff, 0x01, 0x00, 0x04}, // sub.r b e  
	{0x87a2, &op_sub,	  2,   4, 255, 0xff, 0x01, 0x00, 0x04}, // sub.r c e  
	{0x87a3, &op_sub,	  3,   4, 255, 0xff, 0x01, 0x00, 0x04}, // sub.r d e  
	{0x87a4, &op_sub,	  4,   4, 255, 0xff, 0x01, 0x00, 0x04}, // sub.r e e  
	{0x87a5, &op_sub,	  5,   4, 255, 0xff, 0x01, 0x00, 0x04}, // sub.r f e  
	{0x87a6, &op_sub,	  6,   4, 255, 0xff, 0x01, 0x00, 0x04}, // sub.r g e  
	{0x87a7, &op_sub,	  7,   4, 255, 0xff, 0x01, 0x00, 0x04}, // sub.r h e  
	{0x87a8, &op_sub,	  0,   5, 255, 0xff, 0x01, 0x00, 0x04}, // sub.r a f  
	{0x87a9, &op_sub,	  1,   5, 255, 0xff, 0x01, 0x00, 0x04}, // sub.r b f  
	{0x87aa, &op_sub,	  2,   5, 255, 0xff, 0x01, 0x00, 0x04}, // sub.r c f  
	{0x87ab, &op_sub,	  3,   5, 255, 0xff, 0x01, 0x00, 0x04}, // sub.r d f  
	{0x87ac, &op_sub,	  4,   5, 255, 0xff, 0x01, 0x00, 0x04}, // sub.r e f  
	{0x87ad, &op_sub,	  5,   5, 255, 0xff, 0x01, 0x00, 0x04}, // sub.r f f  
	{0x87ae, &op_sub,	  6,   5, 255, 0xff, 0x01, 0x00, 0x04}, // sub.r g f  
	{0x87af, &op_sub,	  7,   5, 255, 0xff, 0x01, 0x00, 0x04}, // sub.r h f  
	{0x87b0, &op_sub,	  0,   6, 255, 0xff, 0x01, 0x00, 0x04}, // sub.r a g  
	{0x87b1, &op_sub,	  1,   6, 255, 0xff, 0x01, 0x00, 0x04}, // sub.r b g  
	{0x87b2, &op_sub,	  2,   6, 255, 0xff, 0x01, 0x00, 0x04}, // sub.r c g  
	{0x87b3, &op_sub,	  3,   6, 255, 0xff, 0x01, 0x00, 0x04}, // sub.r d g  
	{0x87b4, &op_sub,	  4,   6, 255, 0xff, 0x01, 0x00, 0x04}, // sub.r e g  
	{0x87b5, &op_sub,	  5,   6, 255, 0xff, 0x01, 0x00, 0x04}, // sub.r f g  
	{0x87b6, &op_sub,	  6,   6, 255, 0xff, 0x01, 0x00, 0x04}, // sub.r g g  
	{0x87b7, &op_sub,	  7,   6, 255, 0xff, 0x01, 0x00, 0x04}, // sub.r h g  
	{0x87b8, &op_sub,	  0,   7, 255, 0xff, 0x01, 0x00, 0x04}, // sub.r a h  
	{0x87b9, &op_sub,	  1,   7, 255, 0xff, 0x01, 0x00, 0x04}, // sub.r b h  
	{0x87ba, &op_sub,	  2,   7, 255, 0xff, 0x01, 0x00, 0x04}, // sub.r c h  
	{0x87bb, &op_sub,	  3,   7, 255, 0xff, 0x01, 0x00, 0x04}, // sub.r d h  
	{0x87bc, &op_sub,	  4,   7, 255, 0xff, 0x01, 0x00, 0x04}, // sub.r e h  
	{0x87bd, &op_sub,	  5,   7, 255, 0xff, 0x01, 0x00, 0x04}, // sub.r f h  
	{0x87be, &op_sub,	  6,   7, 255, 0xff, 0x01, 0x00, 0x04}, // sub.r g h  
	{0x87bf, &op_sub,	  7,   7, 255, 0xff, 0x01, 0x00, 0x04}, // sub.r h h  
	{0x86c8, &op_sub,	  0,   8, 255, 0xff, 0x00, 0x01, 0x01}, // sub.wi a <literal>  
	{0x86c9, &op_sub,	  1,   8, 255, 0xff, 0x00, 0x01, 0x01}, // sub.wi b <literal>  
	{0x86ca, &op_sub,	  2,   8, 255, 0xff, 0x00, 0x01, 0x01}, // sub.wi c <literal>  
	{0x86cb, &op_sub,	  3,   8, 255, 0xff, 0x00, 0x01, 0x01}, // sub.wi d <literal>  
	{0x86cc, &op_sub,	  4,   8, 255, 0xff, 0x00, 0x01, 0x01}, // sub.wi e <literal>  
	{0x86cd, &op_sub,	  5,   8, 255, 0xff, 0x00, 0x01, 0x01}, // sub.wi f <literal>  
	{0x86ce, &op_sub,	  6,   8, 255, 0xff, 0x00, 0x01, 0x01}, // sub.wi g <literal>  
	{0x86cf, &op_sub,	  7,   8, 255, 0xff, 0x00, 0x01, 0x01}, // sub.wi h <literal>  
	{0x86d0, &op_sub,	  0,   8, 255, 0xff, 0x00, 0x02, 0x02}, // sub.di a <literal>  
	{0x86d1, &op_sub,	  1,   8, 255, 0xff, 0x00, 0x02, 0x02}, // sub.di b <literal>  
	{0x86d2, &op_sub,	  2,   8, 255, 0xff, 0x00, 0x02, 0x02}, // sub.di c <literal>  
	{0x86d3, &op_sub,	  3,   8, 255, 0xff, 0x00, 0x02, 0x02}, // sub.di d <literal>  
	{0x86d4, &op_sub,	  4,   8, 255, 0xff, 0x00, 0x02, 0x02}, // sub.di e <literal>  
	{0x86d5, &op_sub,	  5,   8, 255, 0xff, 0x00, 0x02, 0x02}, // sub.di f <literal>  
	{0x86d6, &op_sub,	  6,   8, 255, 0xff, 0x00, 0x02, 0x02}, // sub.di g <literal>  
	{0x86d7, &op_sub,	  7,   8, 255, 0xff, 0x00, 0x02, 0x02}, // sub.di h <literal>  
	{0x86e0, &op_sub,	  0,   8, 255, 0xff, 0x00, 0x04, 0x04}, // sub.i a <literal>  
	{0x86e1, &op_sub,	  1,   8, 255, 0xff, 0x00, 0x04, 0x04}, // sub.i b <literal>  
	{0x86e2, &op_sub,	  2,   8, 255, 0xff, 0x00, 0x04, 0x04}, // sub.i c <literal>  
	{0x86e3, &op_sub,	  3,   8, 255, 0xff, 0x00, 0x04, 0x04}, // sub.i d <literal>  
	{0x86e4, &op_sub,	  4,   8, 255, 0xff, 0x00, 0x04, 0x04}, // sub.i e <literal>  
	{0x86e5, &op_sub,	  5,   8, 255, 0xff, 0x00, 0x04, 0x04}, // sub.i f <literal>  
	{0x86e6, &op_sub,	  6,   8, 255, 0xff, 0x00, 0x04, 0x04}, // sub.i g <literal>  
	{0x86e7, &op_sub,	  7,   8, 255, 0xff, 0x00, 0x04, 0x04}, // sub.i h <literal>  
	{0x87c8, &op_sub,	  0,   8, 255, 0xff, 0x01, 0x04, 0x01}, // sub.wri a <literal>  
	{0x87c9, &op_sub,	  1,   8, 255, 0xff, 0x01, 0x04, 0x01}, // sub.wri b <literal>  
	{0x87ca, &op_sub,	  2,   8, 255, 0xff, 0x01, 0x04, 0x01}, // sub.wri c <literal>  
	{0x87cb, &op_sub,	  3,   8, 255, 0xff, 0x01, 0x04, 0x01}, // sub.wri d <literal>  
	{0x87cc, &op_sub,	  4,   8, 255, 0xff, 0x01, 0x04, 0x01}, // sub.wri e <literal>  
	{0x87cd, &op_sub,	  5,   8, 255, 0xff, 0x01, 0x04, 0x01}, // sub.wri f <literal>  
	{0x87ce, &op_sub,	  6,   8, 255, 0xff, 0x01, 0x04, 0x01}, // sub.wri g <literal>  
	{0x87cf, &op_sub,	  7,   8, 255, 0xff, 0x01, 0x04, 0x01}, // sub.wri h <literal>  
	{0x87d0, &op_sub,	  0,   8, 255, 0xff, 0x01, 0x04, 0x02}, // sub.dri a <literal>  
	{0x87d1, &op_sub,	  1,   8, 255, 0xff, 0x01, 0x04, 0x02}, // sub.dri b <literal>  
	{0x87d2, &op_sub,	  2,   8, 255, 0xff, 0x01, 0x04, 0x02}, // sub.dri c <literal>  
	{0x87d3, &op_sub,	  3,   8, 255, 0xff, 0x01, 0x04, 0x02}, // sub.dri d <literal>  
	{0x87d4, &op_sub,	  4,   8, 255, 0xff, 0x01, 0x04, 0x02}, // sub.dri e <literal>  
	{0x87d5, &op_sub,	  5,   8, 255, 0xff, 0x01, 0x04, 0x02}, // sub.dri f <literal>  
	{0x87d6, &op_sub,	  6,   8, 255, 0xff, 0x01, 0x04, 0x02}, // sub.dri g <literal>  
	{0x87d7, &op_sub,	  7,   8, 255, 0xff, 0x01, 0x04, 0x02}, // sub.dri h <literal>  
	{0x87e0, &op_sub,	  0,   8, 255, 0xff, 0x01, 0x04, 0x04}, // sub.ri a <literal>  
	{0x87e1, &op_sub,	  1,   8, 255, 0xff, 0x01, 0x04, 0x04}, // sub.ri b <literal>  
	{0x87e2, &op_sub,	  2,   8, 255, 0xff, 0x01, 0x04, 0x04}, // sub.ri c <literal>  
	{0x87e3, &op_sub,	  3,   8, 255, 0xff, 0x01, 0x04, 0x04}, // sub.ri d <literal>  
	{0x87e4, &op_sub,	  4,   8, 255, 0xff, 0x01, 0x04, 0x04}, // sub.ri e <literal>  
	{0x87e5, &op_sub,	  5,   8, 255, 0xff, 0x01, 0x04, 0x04}, // sub.ri f <literal>  
	{0x87e6, &op_sub,	  6,   8, 255, 0xff, 0x01, 0x04, 0x04}, // sub.ri g <literal>  
	{0x87e7, &op_sub,	  7,   8, 255, 0xff, 0x01, 0x04, 0x04}, // sub.ri h <literal>  
	{0x8800, &op_mul,	  0,   0, 255, 0xff, 0x00, 0x00, 0x01}, // mul.w a a  
	{0x8801, &op_mul,	  1,   0, 255, 0xff, 0x00, 0x00, 0x01}, // mul.w b a  
	{0x8802, &op_mul,	  2,   0, 255, 0xff, 0x00, 0x00, 0x01}, // mul.w c a  
	{0x8803, &op_mul,	  3,   0, 255, 0xff, 0x00, 0x00, 0x01}, // mul.w d a  
	{0x8804, &op_mul,	  4,   0, 255, 0xff, 0x00, 0x00, 0x01}, // mul.w e a  
	{0x8805, &op_mul,	  5,   0, 255, 0xff, 0x00, 0x00, 0x01}, // mul.w f a  
	{0x8806, &op_mul,	  6,   0, 255, 0xff, 0x00, 0x00, 0x01}, // mul.w g a  
	{0x8807, &op_mul,	  7,   0, 255, 0xff, 0x00, 0x00, 0x01}, // mul.w h a  
	{0x8808, &op_mul,	  0,   1, 255, 0xff, 0x00, 0x00, 0x01}, // mul.w a b  
	{0x8809, &op_mul,	  1,   1, 255, 0xff, 0x00, 0x00, 0x01}, // mul.w b b  
	{0x880a, &op_mul,	  2,   1, 255, 0xff, 0x00, 0x00, 0x01}, // mul.w c b  
	{0x880b, &op_mul,	  3,   1, 255, 0xff, 0x00, 0x00, 0x01}, // mul.w d b  
	{0x880c, &op_mul,	  4,   1, 255, 0xff, 0x00, 0x00, 0x01}, // mul.w e b  
	{0x880d, &op_mul,	  5,   1, 255, 0xff, 0x00, 0x00, 0x01}, // mul.w f b  
	{0x880e, &op_mul,	  6,   1, 255, 0xff, 0x00, 0x00, 0x01}, // mul.w g b  
	{0x880f, &op_mul,	  7,   1, 255, 0xff, 0x00, 0x00, 0x01}, // mul.w h b  
	{0x8810, &op_mul,	  0,   2, 255, 0xff, 0x00, 0x00, 0x01}, // mul.w a c  
	{0x8811, &op_mul,	  1,   2, 255, 0xff, 0x00, 0x00, 0x01}, // mul.w b c  
	{0x8812, &op_mul,	  2,   2, 255, 0xff, 0x00, 0x00, 0x01}, // mul.w c c  
	{0x8813, &op_mul,	  3,   2, 255, 0xff, 0x00, 0x00, 0x01}, // mul.w d c  
	{0x8814, &op_mul,	  4,   2, 255, 0xff, 0x00, 0x00, 0x01}, // mul.w e c  
	{0x8815, &op_mul,	  5,   2, 255, 0xff, 0x00, 0x00, 0x01}, // mul.w f c  
	{0x8816, &op_mul,	  6,   2, 255, 0xff, 0x00, 0x00, 0x01}, // mul.w g c  
	{0x8817, &op_mul,	  7,   2, 255, 0xff, 0x00, 0x00, 0x01}, // mul.w h c  
	{0x8818, &op_mul,	  0,   3, 255, 0xff, 0x00, 0x00, 0x01}, // mul.w a d  
	{0x8819, &op_mul,	  1,   3, 255, 0xff, 0x00, 0x00, 0x01}, // mul.w b d  
	{0x881a, &op_mul,	  2,   3, 255, 0xff, 0x00, 0x00, 0x01}, // mul.w c d  
	{0x881b, &op_mul,	  3,   3, 255, 0xff, 0x00, 0x00, 0x01}, // mul.w d d  
	{0x881c, &op_mul,	  4,   3, 255, 0xff, 0x00, 0x00, 0x01}, // mul.w e d  
	{0x881d, &op_mul,	  5,   3, 255, 0xff, 0x00, 0x00, 0x01}, // mul.w f d  
	{0x881e, &op_mul,	  6,   3, 255, 0xff, 0x00, 0x00, 0x01}, // mul.w g d  
	{0x881f, &op_mul,	  7,   3, 255, 0xff, 0x00, 0x00, 0x01}, // mul.w h d  
	{0x8820, &op_mul,	  0,   4, 255, 0xff, 0x00, 0x00, 0x01}, // mul.w a e  
	{0x8821, &op_mul,	  1,   4, 255, 0xff, 0x00, 0x00, 0x01}, // mul.w b e  
	{0x8822, &op_mul,	  2,   4, 255, 0xff, 0x00, 0x00, 0x01}, // mul.w c e  
	{0x8823, &op_mul,	  3,   4, 255, 0xff, 0x00, 0x00, 0x01}, // mul.w d e  
	{0x8824, &op_mul,	  4,   4, 255, 0xff, 0x00, 0x00, 0x01}, // mul.w e e  
	{0x8825, &op_mul,	  5,   4, 255, 0xff, 0x00, 0x00, 0x01}, // mul.w f e  
	{0x8826, &op_mul,	  6,   4, 255, 0xff, 0x00, 0x00, 0x01}, // mul.w g e  
	{0x8827, &op_mul,	  7,   4, 255, 0xff, 0x00, 0x00, 0x01}, // mul.w h e  
	{0x8828, &op_mul,	  0,   5, 255, 0xff, 0x00, 0x00, 0x01}, // mul.w a f  
	{0x8829, &op_mul,	  1,   5, 255, 0xff, 0x00, 0x00, 0x01}, // mul.w b f  
	{0x882a, &op_mul,	  2,   5, 255, 0xff, 0x00, 0x00, 0x01}, // mul.w c f  
	{0x882b, &op_mul,	  3,   5, 255, 0xff, 0x00, 0x00, 0x01}, // mul.w d f  
	{0x882c, &op_mul,	  4,   5, 255, 0xff, 0x00, 0x00, 0x01}, // mul.w e f  
	{0x882d, &op_mul,	  5,   5, 255, 0xff, 0x00, 0x00, 0x01}, // mul.w f f  
	{0x882e, &op_mul,	  6,   5, 255, 0xff, 0x00, 0x00, 0x01}, // mul.w g f  
	{0x882f, &op_mul,	  7,   5, 255, 0xff, 0x00, 0x00, 0x01}, // mul.w h f  
	{0x8830, &op_mul,	  0,   6, 255, 0xff, 0x00, 0x00, 0x01}, // mul.w a g  
	{0x8831, &op_mul,	  1,   6, 255, 0xff, 0x00, 0x00, 0x01}, // mul.w b g  
	{0x8832, &op_mul,	  2,   6, 255, 0xff, 0x00, 0x00, 0x01}, // mul.w c g  
	{0x8833, &op_mul,	  3,   6, 255, 0xff, 0x00, 0x00, 0x01}, // mul.w d g  
	{0x8834, &op_mul,	  4,   6, 255, 0xff, 0x00, 0x00, 0x01}, // mul.w e g  
	{0x8835, &op_mul,	  5,   6, 255, 0xff, 0x00, 0x00, 0x01}, // mul.w f g  
	{0x8836, &op_mul,	  6,   6, 255, 0xff, 0x00, 0x00, 0x01}, // mul.w g g  
	{0x8837, &op_mul,	  7,   6, 255, 0xff, 0x00, 0x00, 0x01}, // mul.w h g  
	{0x8838, &op_mul,	  0,   7, 255, 0xff, 0x00, 0x00, 0x01}, // mul.w a h  
	{0x8839, &op_mul,	  1,   7, 255, 0xff, 0x00, 0x00, 0x01}, // mul.w b h  
	{0x883a, &op_mul,	  2,   7, 255, 0xff, 0x00, 0x00, 0x01}, // mul.w c h  
	{0x883b, &op_mul,	  3,   7, 255, 0xff, 0x00, 0x00, 0x01}, // mul.w d h  
	{0x883c, &op_mul,	  4,   7, 255, 0xff, 0x00, 0x00, 0x01}, // mul.w e h  
	{0x883d, &op_mul,	  5,   7, 255, 0xff, 0x00, 0x00, 0x01}, // mul.w f h  
	{0x883e, &op_mul,	  6,   7, 255, 0xff, 0x00, 0x00, 0x01}, // mul.w g h  
	{0x883f, &op_mul,	  7,   7, 255, 0xff, 0x00, 0x00, 0x01}, // mul.w h h  
	{0x8840, &op_mul,	  0,   0, 255, 0xff, 0x00, 0x00, 0x02}, // mul.d a a  
	{0x8841, &op_mul,	  1,   0, 255, 0xff, 0x00, 0x00, 0x02}, // mul.d b a  
	{0x8842, &op_mul,	  2,   0, 255, 0xff, 0x00, 0x00, 0x02}, // mul.d c a  
	{0x8843, &op_mul,	  3,   0, 255, 0xff, 0x00, 0x00, 0x02}, // mul.d d a  
	{0x8844, &op_mul,	  4,   0, 255, 0xff, 0x00, 0x00, 0x02}, // mul.d e a  
	{0x8845, &op_mul,	  5,   0, 255, 0xff, 0x00, 0x00, 0x02}, // mul.d f a  
	{0x8846, &op_mul,	  6,   0, 255, 0xff, 0x00, 0x00, 0x02}, // mul.d g a  
	{0x8847, &op_mul,	  7,   0, 255, 0xff, 0x00, 0x00, 0x02}, // mul.d h a  
	{0x8848, &op_mul,	  0,   1, 255, 0xff, 0x00, 0x00, 0x02}, // mul.d a b  
	{0x8849, &op_mul,	  1,   1, 255, 0xff, 0x00, 0x00, 0x02}, // mul.d b b  
	{0x884a, &op_mul,	  2,   1, 255, 0xff, 0x00, 0x00, 0x02}, // mul.d c b  
	{0x884b, &op_mul,	  3,   1, 255, 0xff, 0x00, 0x00, 0x02}, // mul.d d b  
	{0x884c, &op_mul,	  4,   1, 255, 0xff, 0x00, 0x00, 0x02}, // mul.d e b  
	{0x884d, &op_mul,	  5,   1, 255, 0xff, 0x00, 0x00, 0x02}, // mul.d f b  
	{0x884e, &op_mul,	  6,   1, 255, 0xff, 0x00, 0x00, 0x02}, // mul.d g b  
	{0x884f, &op_mul,	  7,   1, 255, 0xff, 0x00, 0x00, 0x02}, // mul.d h b  
	{0x8850, &op_mul,	  0,   2, 255, 0xff, 0x00, 0x00, 0x02}, // mul.d a c  
	{0x8851, &op_mul,	  1,   2, 255, 0xff, 0x00, 0x00, 0x02}, // mul.d b c  
	{0x8852, &op_mul,	  2,   2, 255, 0xff, 0x00, 0x00, 0x02}, // mul.d c c  
	{0x8853, &op_mul,	  3,   2, 255, 0xff, 0x00, 0x00, 0x02}, // mul.d d c  
	{0x8854, &op_mul,	  4,   2, 255, 0xff, 0x00, 0x00, 0x02}, // mul.d e c  
	{0x8855, &op_mul,	  5,   2, 255, 0xff, 0x00, 0x00, 0x02}, // mul.d f c  
	{0x8856, &op_mul,	  6,   2, 255, 0xff, 0x00, 0x00, 0x02}, // mul.d g c  
	{0x8857, &op_mul,	  7,   2, 255, 0xff, 0x00, 0x00, 0x02}, // mul.d h c  
	{0x8858, &op_mul,	  0,   3, 255, 0xff, 0x00, 0x00, 0x02}, // mul.d a d  
	{0x8859, &op_mul,	  1,   3, 255, 0xff, 0x00, 0x00, 0x02}, // mul.d b d  
	{0x885a, &op_mul,	  2,   3, 255, 0xff, 0x00, 0x00, 0x02}, // mul.d c d  
	{0x885b, &op_mul,	  3,   3, 255, 0xff, 0x00, 0x00, 0x02}, // mul.d d d  
	{0x885c, &op_mul,	  4,   3, 255, 0xff, 0x00, 0x00, 0x02}, // mul.d e d  
	{0x885d, &op_mul,	  5,   3, 255, 0xff, 0x00, 0x00, 0x02}, // mul.d f d  
	{0x885e, &op_mul,	  6,   3, 255, 0xff, 0x00, 0x00, 0x02}, // mul.d g d  
	{0x885f, &op_mul,	  7,   3, 255, 0xff, 0x00, 0x00, 0x02}, // mul.d h d  
	{0x8860, &op_mul,	  0,   4, 255, 0xff, 0x00, 0x00, 0x02}, // mul.d a e  
	{0x8861, &op_mul,	  1,   4, 255, 0xff, 0x00, 0x00, 0x02}, // mul.d b e  
	{0x8862, &op_mul,	  2,   4, 255, 0xff, 0x00, 0x00, 0x02}, // mul.d c e  
	{0x8863, &op_mul,	  3,   4, 255, 0xff, 0x00, 0x00, 0x02}, // mul.d d e  
	{0x8864, &op_mul,	  4,   4, 255, 0xff, 0x00, 0x00, 0x02}, // mul.d e e  
	{0x8865, &op_mul,	  5,   4, 255, 0xff, 0x00, 0x00, 0x02}, // mul.d f e  
	{0x8866, &op_mul,	  6,   4, 255, 0xff, 0x00, 0x00, 0x02}, // mul.d g e  
	{0x8867, &op_mul,	  7,   4, 255, 0xff, 0x00, 0x00, 0x02}, // mul.d h e  
	{0x8868, &op_mul,	  0,   5, 255, 0xff, 0x00, 0x00, 0x02}, // mul.d a f  
	{0x8869, &op_mul,	  1,   5, 255, 0xff, 0x00, 0x00, 0x02}, // mul.d b f  
	{0x886a, &op_mul,	  2,   5, 255, 0xff, 0x00, 0x00, 0x02}, // mul.d c f  
	{0x886b, &op_mul,	  3,   5, 255, 0xff, 0x00, 0x00, 0x02}, // mul.d d f  
	{0x886c, &op_mul,	  4,   5, 255, 0xff, 0x00, 0x00, 0x02}, // mul.d e f  
	{0x886d, &op_mul,	  5,   5, 255, 0xff, 0x00, 0x00, 0x02}, // mul.d f f  
	{0x886e, &op_mul,	  6,   5, 255, 0xff, 0x00, 0x00, 0x02}, // mul.d g f  
	{0x886f, &op_mul,	  7,   5, 255, 0xff, 0x00, 0x00, 0x02}, // mul.d h f  
	{0x8870, &op_mul,	  0,   6, 255, 0xff, 0x00, 0x00, 0x02}, // mul.d a g  
	{0x8871, &op_mul,	  1,   6, 255, 0xff, 0x00, 0x00, 0x02}, // mul.d b g  
	{0x8872, &op_mul,	  2,   6, 255, 0xff, 0x00, 0x00, 0x02}, // mul.d c g  
	{0x8873, &op_mul,	  3,   6, 255, 0xff, 0x00, 0x00, 0x02}, // mul.d d g  
	{0x8874, &op_mul,	  4,   6, 255, 0xff, 0x00, 0x00, 0x02}, // mul.d e g  
	{0x8875, &op_mul,	  5,   6, 255, 0xff, 0x00, 0x00, 0x02}, // mul.d f g  
	{0x8876, &op_mul,	  6,   6, 255, 0xff, 0x00, 0x00, 0x02}, // mul.d g g  
	{0x8877, &op_mul,	  7,   6, 255, 0xff, 0x00, 0x00, 0x02}, // mul.d h g  
	{0x8878, &op_mul,	  0,   7, 255, 0xff, 0x00, 0x00, 0x02}, // mul.d a h  
	{0x8879, &op_mul,	  1,   7, 255, 0xff, 0x00, 0x00, 0x02}, // mul.d b h  
	{0x887a, &op_mul,	  2,   7, 255, 0xff, 0x00, 0x00, 0x02}, // mul.d c h  
	{0x887b, &op_mul,	  3,   7, 255, 0xff, 0x00, 0x00, 0x02}, // mul.d d h  
	{0x887c, &op_mul,	  4,   7, 255, 0xff, 0x00, 0x00, 0x02}, // mul.d e h  
	{0x887d, &op_mul,	  5,   7, 255, 0xff, 0x00, 0x00, 0x02}, // mul.d f h  
	{0x887e, &op_mul,	  6,   7, 255, 0xff, 0x00, 0x00, 0x02}, // mul.d g h  
	{0x887f, &op_mul,	  7,   7, 255, 0xff, 0x00, 0x00, 0x02}, // mul.d h h  
	{0x8880, &op_mul,	  0,   0, 255, 0xff, 0x00, 0x00, 0x04}, // mul a a  
	{0x8881, &op_mul,	  1,   0, 255, 0xff, 0x00, 0x00, 0x04}, // mul b a  
	{0x8882, &op_mul,	  2,   0, 255, 0xff, 0x00, 0x00, 0x04}, // mul c a  
	{0x8883, &op_mul,	  3,   0, 255, 0xff, 0x00, 0x00, 0x04}, // mul d a  
	{0x8884, &op_mul,	  4,   0, 255, 0xff, 0x00, 0x00, 0x04}, // mul e a  
	{0x8885, &op_mul,	  5,   0, 255, 0xff, 0x00, 0x00, 0x04}, // mul f a  
	{0x8886, &op_mul,	  6,   0, 255, 0xff, 0x00, 0x00, 0x04}, // mul g a  
	{0x8887, &op_mul,	  7,   0, 255, 0xff, 0x00, 0x00, 0x04}, // mul h a  
	{0x8888, &op_mul,	  0,   1, 255, 0xff, 0x00, 0x00, 0x04}, // mul a b  
	{0x8889, &op_mul,	  1,   1, 255, 0xff, 0x00, 0x00, 0x04}, // mul b b  
	{0x888a, &op_mul,	  2,   1, 255, 0xff, 0x00, 0x00, 0x04}, // mul c b  
	{0x888b, &op_mul,	  3,   1, 255, 0xff, 0x00, 0x00, 0x04}, // mul d b  
	{0x888c, &op_mul,	  4,   1, 255, 0xff, 0x00, 0x00, 0x04}, // mul e b  
	{0x888d, &op_mul,	  5,   1, 255, 0xff, 0x00, 0x00, 0x04}, // mul f b  
	{0x888e, &op_mul,	  6,   1, 255, 0xff, 0x00, 0x00, 0x04}, // mul g b  
	{0x888f, &op_mul,	  7,   1, 255, 0xff, 0x00, 0x00, 0x04}, // mul h b  
	{0x8890, &op_mul,	  0,   2, 255, 0xff, 0x00, 0x00, 0x04}, // mul a c  
	{0x8891, &op_mul,	  1,   2, 255, 0xff, 0x00, 0x00, 0x04}, // mul b c  
	{0x8892, &op_mul,	  2,   2, 255, 0xff, 0x00, 0x00, 0x04}, // mul c c  
	{0x8893, &op_mul,	  3,   2, 255, 0xff, 0x00, 0x00, 0x04}, // mul d c  
	{0x8894, &op_mul,	  4,   2, 255, 0xff, 0x00, 0x00, 0x04}, // mul e c  
	{0x8895, &op_mul,	  5,   2, 255, 0xff, 0x00, 0x00, 0x04}, // mul f c  
	{0x8896, &op_mul,	  6,   2, 255, 0xff, 0x00, 0x00, 0x04}, // mul g c  
	{0x8897, &op_mul,	  7,   2, 255, 0xff, 0x00, 0x00, 0x04}, // mul h c  
	{0x8898, &op_mul,	  0,   3, 255, 0xff, 0x00, 0x00, 0x04}, // mul a d  
	{0x8899, &op_mul,	  1,   3, 255, 0xff, 0x00, 0x00, 0x04}, // mul b d  
	{0x889a, &op_mul,	  2,   3, 255, 0xff, 0x00, 0x00, 0x04}, // mul c d  
	{0x889b, &op_mul,	  3,   3, 255, 0xff, 0x00, 0x00, 0x04}, // mul d d  
	{0x889c, &op_mul,	  4,   3, 255, 0xff, 0x00, 0x00, 0x04}, // mul e d  
	{0x889d, &op_mul,	  5,   3, 255, 0xff, 0x00, 0x00, 0x04}, // mul f d  
	{0x889e, &op_mul,	  6,   3, 255, 0xff, 0x00, 0x00, 0x04}, // mul g d  
	{0x889f, &op_mul,	  7,   3, 255, 0xff, 0x00, 0x00, 0x04}, // mul h d  
	{0x88a0, &op_mul,	  0,   4, 255, 0xff, 0x00, 0x00, 0x04}, // mul a e  
	{0x88a1, &op_mul,	  1,   4, 255, 0xff, 0x00, 0x00, 0x04}, // mul b e  
	{0x88a2, &op_mul,	  2,   4, 255, 0xff, 0x00, 0x00, 0x04}, // mul c e  
	{0x88a3, &op_mul,	  3,   4, 255, 0xff, 0x00, 0x00, 0x04}, // mul d e  
	{0x88a4, &op_mul,	  4,   4, 255, 0xff, 0x00, 0x00, 0x04}, // mul e e  
	{0x88a5, &op_mul,	  5,   4, 255, 0xff, 0x00, 0x00, 0x04}, // mul f e  
	{0x88a6, &op_mul,	  6,   4, 255, 0xff, 0x00, 0x00, 0x04}, // mul g e  
	{0x88a7, &op_mul,	  7,   4, 255, 0xff, 0x00, 0x00, 0x04}, // mul h e  
	{0x88a8, &op_mul,	  0,   5, 255, 0xff, 0x00, 0x00, 0x04}, // mul a f  
	{0x88a9, &op_mul,	  1,   5, 255, 0xff, 0x00, 0x00, 0x04}, // mul b f  
	{0x88aa, &op_mul,	  2,   5, 255, 0xff, 0x00, 0x00, 0x04}, // mul c f  
	{0x88ab, &op_mul,	  3,   5, 255, 0xff, 0x00, 0x00, 0x04}, // mul d f  
	{0x88ac, &op_mul,	  4,   5, 255, 0xff, 0x00, 0x00, 0x04}, // mul e f  
	{0x88ad, &op_mul,	  5,   5, 255, 0xff, 0x00, 0x00, 0x04}, // mul f f  
	{0x88ae, &op_mul,	  6,   5, 255, 0xff, 0x00, 0x00, 0x04}, // mul g f  
	{0x88af, &op_mul,	  7,   5, 255, 0xff, 0x00, 0x00, 0x04}, // mul h f  
	{0x88b0, &op_mul,	  0,   6, 255, 0xff, 0x00, 0x00, 0x04}, // mul a g  
	{0x88b1, &op_mul,	  1,   6, 255, 0xff, 0x00, 0x00, 0x04}, // mul b g  
	{0x88b2, &op_mul,	  2,   6, 255, 0xff, 0x00, 0x00, 0x04}, // mul c g  
	{0x88b3, &op_mul,	  3,   6, 255, 0xff, 0x00, 0x00, 0x04}, // mul d g  
	{0x88b4, &op_mul,	  4,   6, 255, 0xff, 0x00, 0x00, 0x04}, // mul e g  
	{0x88b5, &op_mul,	  5,   6, 255, 0xff, 0x00, 0x00, 0x04}, // mul f g  
	{0x88b6, &op_mul,	  6,   6, 255, 0xff, 0x00, 0x00, 0x04}, // mul g g  
	{0x88b7, &op_mul,	  7,   6, 255, 0xff, 0x00, 0x00, 0x04}, // mul h g  
	{0x88b8, &op_mul,	  0,   7, 255, 0xff, 0x00, 0x00, 0x04}, // mul a h  
	{0x88b9, &op_mul,	  1,   7, 255, 0xff, 0x00, 0x00, 0x04}, // mul b h  
	{0x88ba, &op_mul,	  2,   7, 255, 0xff, 0x00, 0x00, 0x04}, // mul c h  
	{0x88bb, &op_mul,	  3,   7, 255, 0xff, 0x00, 0x00, 0x04}, // mul d h  
	{0x88bc, &op_mul,	  4,   7, 255, 0xff, 0x00, 0x00, 0x04}, // mul e h  
	{0x88bd, &op_mul,	  5,   7, 255, 0xff, 0x00, 0x00, 0x04}, // mul f h  
	{0x88be, &op_mul,	  6,   7, 255, 0xff, 0x00, 0x00, 0x04}, // mul g h  
	{0x88bf, &op_mul,	  7,   7, 255, 0xff, 0x00, 0x00, 0x04}, // mul h h  
	{0x8900, &op_mul,	  0,   0, 255, 0xff, 0x01, 0x00, 0x01}, // mul.wr a a  
	{0x8901, &op_mul,	  1,   0, 255, 0xff, 0x01, 0x00, 0x01}, // mul.wr b a  
	{0x8902, &op_mul,	  2,   0, 255, 0xff, 0x01, 0x00, 0x01}, // mul.wr c a  
	{0x8903, &op_mul,	  3,   0, 255, 0xff, 0x01, 0x00, 0x01}, // mul.wr d a  
	{0x8904, &op_mul,	  4,   0, 255, 0xff, 0x01, 0x00, 0x01}, // mul.wr e a  
	{0x8905, &op_mul,	  5,   0, 255, 0xff, 0x01, 0x00, 0x01}, // mul.wr f a  
	{0x8906, &op_mul,	  6,   0, 255, 0xff, 0x01, 0x00, 0x01}, // mul.wr g a  
	{0x8907, &op_mul,	  7,   0, 255, 0xff, 0x01, 0x00, 0x01}, // mul.wr h a  
	{0x8908, &op_mul,	  0,   1, 255, 0xff, 0x01, 0x00, 0x01}, // mul.wr a b  
	{0x8909, &op_mul,	  1,   1, 255, 0xff, 0x01, 0x00, 0x01}, // mul.wr b b  
	{0x890a, &op_mul,	  2,   1, 255, 0xff, 0x01, 0x00, 0x01}, // mul.wr c b  
	{0x890b, &op_mul,	  3,   1, 255, 0xff, 0x01, 0x00, 0x01}, // mul.wr d b  
	{0x890c, &op_mul,	  4,   1, 255, 0xff, 0x01, 0x00, 0x01}, // mul.wr e b  
	{0x890d, &op_mul,	  5,   1, 255, 0xff, 0x01, 0x00, 0x01}, // mul.wr f b  
	{0x890e, &op_mul,	  6,   1, 255, 0xff, 0x01, 0x00, 0x01}, // mul.wr g b  
	{0x890f, &op_mul,	  7,   1, 255, 0xff, 0x01, 0x00, 0x01}, // mul.wr h b  
	{0x8910, &op_mul,	  0,   2, 255, 0xff, 0x01, 0x00, 0x01}, // mul.wr a c  
	{0x8911, &op_mul,	  1,   2, 255, 0xff, 0x01, 0x00, 0x01}, // mul.wr b c  
	{0x8912, &op_mul,	  2,   2, 255, 0xff, 0x01, 0x00, 0x01}, // mul.wr c c  
	{0x8913, &op_mul,	  3,   2, 255, 0xff, 0x01, 0x00, 0x01}, // mul.wr d c  
	{0x8914, &op_mul,	  4,   2, 255, 0xff, 0x01, 0x00, 0x01}, // mul.wr e c  
	{0x8915, &op_mul,	  5,   2, 255, 0xff, 0x01, 0x00, 0x01}, // mul.wr f c  
	{0x8916, &op_mul,	  6,   2, 255, 0xff, 0x01, 0x00, 0x01}, // mul.wr g c  
	{0x8917, &op_mul,	  7,   2, 255, 0xff, 0x01, 0x00, 0x01}, // mul.wr h c  
	{0x8918, &op_mul,	  0,   3, 255, 0xff, 0x01, 0x00, 0x01}, // mul.wr a d  
	{0x8919, &op_mul,	  1,   3, 255, 0xff, 0x01, 0x00, 0x01}, // mul.wr b d  
	{0x891a, &op_mul,	  2,   3, 255, 0xff, 0x01, 0x00, 0x01}, // mul.wr c d  
	{0x891b, &op_mul,	  3,   3, 255, 0xff, 0x01, 0x00, 0x01}, // mul.wr d d  
	{0x891c, &op_mul,	  4,   3, 255, 0xff, 0x01, 0x00, 0x01}, // mul.wr e d  
	{0x891d, &op_mul,	  5,   3, 255, 0xff, 0x01, 0x00, 0x01}, // mul.wr f d  
	{0x891e, &op_mul,	  6,   3, 255, 0xff, 0x01, 0x00, 0x01}, // mul.wr g d  
	{0x891f, &op_mul,	  7,   3, 255, 0xff, 0x01, 0x00, 0x01}, // mul.wr h d  
	{0x8920, &op_mul,	  0,   4, 255, 0xff, 0x01, 0x00, 0x01}, // mul.wr a e  
	{0x8921, &op_mul,	  1,   4, 255, 0xff, 0x01, 0x00, 0x01}, // mul.wr b e  
	{0x8922, &op_mul,	  2,   4, 255, 0xff, 0x01, 0x00, 0x01}, // mul.wr c e  
	{0x8923, &op_mul,	  3,   4, 255, 0xff, 0x01, 0x00, 0x01}, // mul.wr d e  
	{0x8924, &op_mul,	  4,   4, 255, 0xff, 0x01, 0x00, 0x01}, // mul.wr e e  
	{0x8925, &op_mul,	  5,   4, 255, 0xff, 0x01, 0x00, 0x01}, // mul.wr f e  
	{0x8926, &op_mul,	  6,   4, 255, 0xff, 0x01, 0x00, 0x01}, // mul.wr g e  
	{0x8927, &op_mul,	  7,   4, 255, 0xff, 0x01, 0x00, 0x01}, // mul.wr h e  
	{0x8928, &op_mul,	  0,   5, 255, 0xff, 0x01, 0x00, 0x01}, // mul.wr a f  
	{0x8929, &op_mul,	  1,   5, 255, 0xff, 0x01, 0x00, 0x01}, // mul.wr b f  
	{0x892a, &op_mul,	  2,   5, 255, 0xff, 0x01, 0x00, 0x01}, // mul.wr c f  
	{0x892b, &op_mul,	  3,   5, 255, 0xff, 0x01, 0x00, 0x01}, // mul.wr d f  
	{0x892c, &op_mul,	  4,   5, 255, 0xff, 0x01, 0x00, 0x01}, // mul.wr e f  
	{0x892d, &op_mul,	  5,   5, 255, 0xff, 0x01, 0x00, 0x01}, // mul.wr f f  
	{0x892e, &op_mul,	  6,   5, 255, 0xff, 0x01, 0x00, 0x01}, // mul.wr g f  
	{0x892f, &op_mul,	  7,   5, 255, 0xff, 0x01, 0x00, 0x01}, // mul.wr h f  
	{0x8930, &op_mul,	  0,   6, 255, 0xff, 0x01, 0x00, 0x01}, // mul.wr a g  
	{0x8931, &op_mul,	  1,   6, 255, 0xff, 0x01, 0x00, 0x01}, // mul.wr b g  
	{0x8932, &op_mul,	  2,   6, 255, 0xff, 0x01, 0x00, 0x01}, // mul.wr c g  
	{0x8933, &op_mul,	  3,   6, 255, 0xff, 0x01, 0x00, 0x01}, // mul.wr d g  
	{0x8934, &op_mul,	  4,   6, 255, 0xff, 0x01, 0x00, 0x01}, // mul.wr e g  
	{0x8935, &op_mul,	  5,   6, 255, 0xff, 0x01, 0x00, 0x01}, // mul.wr f g  
	{0x8936, &op_mul,	  6,   6, 255, 0xff, 0x01, 0x00, 0x01}, // mul.wr g g  
	{0x8937, &op_mul,	  7,   6, 255, 0xff, 0x01, 0x00, 0x01}, // mul.wr h g  
	{0x8938, &op_mul,	  0,   7, 255, 0xff, 0x01, 0x00, 0x01}, // mul.wr a h  
	{0x8939, &op_mul,	  1,   7, 255, 0xff, 0x01, 0x00, 0x01}, // mul.wr b h  
	{0x893a, &op_mul,	  2,   7, 255, 0xff, 0x01, 0x00, 0x01}, // mul.wr c h  
	{0x893b, &op_mul,	  3,   7, 255, 0xff, 0x01, 0x00, 0x01}, // mul.wr d h  
	{0x893c, &op_mul,	  4,   7, 255, 0xff, 0x01, 0x00, 0x01}, // mul.wr e h  
	{0x893d, &op_mul,	  5,   7, 255, 0xff, 0x01, 0x00, 0x01}, // mul.wr f h  
	{0x893e, &op_mul,	  6,   7, 255, 0xff, 0x01, 0x00, 0x01}, // mul.wr g h  
	{0x893f, &op_mul,	  7,   7, 255, 0xff, 0x01, 0x00, 0x01}, // mul.wr h h  
	{0x8940, &op_mul,	  0,   0, 255, 0xff, 0x01, 0x00, 0x02}, // mul.dr a a  
	{0x8941, &op_mul,	  1,   0, 255, 0xff, 0x01, 0x00, 0x02}, // mul.dr b a  
	{0x8942, &op_mul,	  2,   0, 255, 0xff, 0x01, 0x00, 0x02}, // mul.dr c a  
	{0x8943, &op_mul,	  3,   0, 255, 0xff, 0x01, 0x00, 0x02}, // mul.dr d a  
	{0x8944, &op_mul,	  4,   0, 255, 0xff, 0x01, 0x00, 0x02}, // mul.dr e a  
	{0x8945, &op_mul,	  5,   0, 255, 0xff, 0x01, 0x00, 0x02}, // mul.dr f a  
	{0x8946, &op_mul,	  6,   0, 255, 0xff, 0x01, 0x00, 0x02}, // mul.dr g a  
	{0x8947, &op_mul,	  7,   0, 255, 0xff, 0x01, 0x00, 0x02}, // mul.dr h a  
	{0x8948, &op_mul,	  0,   1, 255, 0xff, 0x01, 0x00, 0x02}, // mul.dr a b  
	{0x8949, &op_mul,	  1,   1, 255, 0xff, 0x01, 0x00, 0x02}, // mul.dr b b  
	{0x894a, &op_mul,	  2,   1, 255, 0xff, 0x01, 0x00, 0x02}, // mul.dr c b  
	{0x894b, &op_mul,	  3,   1, 255, 0xff, 0x01, 0x00, 0x02}, // mul.dr d b  
	{0x894c, &op_mul,	  4,   1, 255, 0xff, 0x01, 0x00, 0x02}, // mul.dr e b  
	{0x894d, &op_mul,	  5,   1, 255, 0xff, 0x01, 0x00, 0x02}, // mul.dr f b  
	{0x894e, &op_mul,	  6,   1, 255, 0xff, 0x01, 0x00, 0x02}, // mul.dr g b  
	{0x894f, &op_mul,	  7,   1, 255, 0xff, 0x01, 0x00, 0x02}, // mul.dr h b  
	{0x8950, &op_mul,	  0,   2, 255, 0xff, 0x01, 0x00, 0x02}, // mul.dr a c  
	{0x8951, &op_mul,	  1,   2, 255, 0xff, 0x01, 0x00, 0x02}, // mul.dr b c  
	{0x8952, &op_mul,	  2,   2, 255, 0xff, 0x01, 0x00, 0x02}, // mul.dr c c  
	{0x8953, &op_mul,	  3,   2, 255, 0xff, 0x01, 0x00, 0x02}, // mul.dr d c  
	{0x8954, &op_mul,	  4,   2, 255, 0xff, 0x01, 0x00, 0x02}, // mul.dr e c  
	{0x8955, &op_mul,	  5,   2, 255, 0xff, 0x01, 0x00, 0x02}, // mul.dr f c  
	{0x8956, &op_mul,	  6,   2, 255, 0xff, 0x01, 0x00, 0x02}, // mul.dr g c  
	{0x8957, &op_mul,	  7,   2, 255, 0xff, 0x01, 0x00, 0x02}, // mul.dr h c  
	{0x8958, &op_mul,	  0,   3, 255, 0xff, 0x01, 0x00, 0x02}, // mul.dr a d  
	{0x8959, &op_mul,	  1,   3, 255, 0xff, 0x01, 0x00, 0x02}, // mul.dr b d  
	{0x895a, &op_mul,	  2,   3, 255, 0xff, 0x01, 0x00, 0x02}, // mul.dr c d  
	{0x895b, &op_mul,	  3,   3, 255, 0xff, 0x01, 0x00, 0x02}, // mul.dr d d  
	{0x895c, &op_mul,	  4,   3, 255, 0xff, 0x01, 0x00, 0x02}, // mul.dr e d  
	{0x895d, &op_mul,	  5,   3, 255, 0xff, 0x01, 0x00, 0x02}, // mul.dr f d  
	{0x895e, &op_mul,	  6,   3, 255, 0xff, 0x01, 0x00, 0x02}, // mul.dr g d  
	{0x895f, &op_mul,	  7,   3, 255, 0xff, 0x01, 0x00, 0x02}, // mul.dr h d  
	{0x8960, &op_mul,	  0,   4, 255, 0xff, 0x01, 0x00, 0x02}, // mul.dr a e  
	{0x8961, &op_mul,	  1,   4, 255, 0xff, 0x01, 0x00, 0x02}, // mul.dr b e  
	{0x8962, &op_mul,	  2,   4, 255, 0xff, 0x01, 0x00, 0x02}, // mul.dr c e  
	{0x8963, &op_mul,	  3,   4, 255, 0xff, 0x01, 0x00, 0x02}, // mul.dr d e  
	{0x8964, &op_mul,	  4,   4, 255, 0xff, 0x01, 0x00, 0x02}, // mul.dr e e  
	{0x8965, &op_mul,	  5,   4, 255, 0xff, 0x01, 0x00, 0x02}, // mul.dr f e  
	{0x8966, &op_mul,	  6,   4, 255, 0xff, 0x01, 0x00, 0x02}, // mul.dr g e  
	{0x8967, &op_mul,	  7,   4, 255, 0xff, 0x01, 0x00, 0x02}, // mul.dr h e  
	{0x8968, &op_mul,	  0,   5, 255, 0xff, 0x01, 0x00, 0x02}, // mul.dr a f  
	{0x8969, &op_mul,	  1,   5, 255, 0xff, 0x01, 0x00, 0x02}, // mul.dr b f  
	{0x896a, &op_mul,	  2,   5, 255, 0xff, 0x01, 0x00, 0x02}, // mul.dr c f  
	{0x896b, &op_mul,	  3,   5, 255, 0xff, 0x01, 0x00, 0x02}, // mul.dr d f  
	{0x896c, &op_mul,	  4,   5, 255, 0xff, 0x01, 0x00, 0x02}, // mul.dr e f  
	{0x896d, &op_mul,	  5,   5, 255, 0xff, 0x01, 0x00, 0x02}, // mul.dr f f  
	{0x896e, &op_mul,	  6,   5, 255, 0xff, 0x01, 0x00, 0x02}, // mul.dr g f  
	{0x896f, &op_mul,	  7,   5, 255, 0xff, 0x01, 0x00, 0x02}, // mul.dr h f  
	{0x8970, &op_mul,	  0,   6, 255, 0xff, 0x01, 0x00, 0x02}, // mul.dr a g  
	{0x8971, &op_mul,	  1,   6, 255, 0xff, 0x01, 0x00, 0x02}, // mul.dr b g  
	{0x8972, &op_mul,	  2,   6, 255, 0xff, 0x01, 0x00, 0x02}, // mul.dr c g  
	{0x8973, &op_mul,	  3,   6, 255, 0xff, 0x01, 0x00, 0x02}, // mul.dr d g  
	{0x8974, &op_mul,	  4,   6, 255, 0xff, 0x01, 0x00, 0x02}, // mul.dr e g  
	{0x8975, &op_mul,	  5,   6, 255, 0xff, 0x01, 0x00, 0x02}, // mul.dr f g  
	{0x8976, &op_mul,	  6,   6, 255, 0xff, 0x01, 0x00, 0x02}, // mul.dr g g  
	{0x8977, &op_mul,	  7,   6, 255, 0xff, 0x01, 0x00, 0x02}, // mul.dr h g  
	{0x8978, &op_mul,	  0,   7, 255, 0xff, 0x01, 0x00, 0x02}, // mul.dr a h  
	{0x8979, &op_mul,	  1,   7, 255, 0xff, 0x01, 0x00, 0x02}, // mul.dr b h  
	{0x897a, &op_mul,	  2,   7, 255, 0xff, 0x01, 0x00, 0x02}, // mul.dr c h  
	{0x897b, &op_mul,	  3,   7, 255, 0xff, 0x01, 0x00, 0x02}, // mul.dr d h  
	{0x897c, &op_mul,	  4,   7, 255, 0xff, 0x01, 0x00, 0x02}, // mul.dr e h  
	{0x897d, &op_mul,	  5,   7, 255, 0xff, 0x01, 0x00, 0x02}, // mul.dr f h  
	{0x897e, &op_mul,	  6,   7, 255, 0xff, 0x01, 0x00, 0x02}, // mul.dr g h  
	{0x897f, &op_mul,	  7,   7, 255, 0xff, 0x01, 0x00, 0x02}, // mul.dr h h  
	{0x8980, &op_mul,	  0,   0, 255, 0xff, 0x01, 0x00, 0x04}, // mul.r a a  
	{0x8981, &op_mul,	  1,   0, 255, 0xff, 0x01, 0x00, 0x04}, // mul.r b a  
	{0x8982, &op_mul,	  2,   0, 255, 0xff, 0x01, 0x00, 0x04}, // mul.r c a  
	{0x8983, &op_mul,	  3,   0, 255, 0xff, 0x01, 0x00, 0x04}, // mul.r d a  
	{0x8984, &op_mul,	  4,   0, 255, 0xff, 0x01, 0x00, 0x04}, // mul.r e a  
	{0x8985, &op_mul,	  5,   0, 255, 0xff, 0x01, 0x00, 0x04}, // mul.r f a  
	{0x8986, &op_mul,	  6,   0, 255, 0xff, 0x01, 0x00, 0x04}, // mul.r g a  
	{0x8987, &op_mul,	  7,   0, 255, 0xff, 0x01, 0x00, 0x04}, // mul.r h a  
	{0x8988, &op_mul,	  0,   1, 255, 0xff, 0x01, 0x00, 0x04}, // mul.r a b  
	{0x8989, &op_mul,	  1,   1, 255, 0xff, 0x01, 0x00, 0x04}, // mul.r b b  
	{0x898a, &op_mul,	  2,   1, 255, 0xff, 0x01, 0x00, 0x04}, // mul.r c b  
	{0x898b, &op_mul,	  3,   1, 255, 0xff, 0x01, 0x00, 0x04}, // mul.r d b  
	{0x898c, &op_mul,	  4,   1, 255, 0xff, 0x01, 0x00, 0x04}, // mul.r e b  
	{0x898d, &op_mul,	  5,   1, 255, 0xff, 0x01, 0x00, 0x04}, // mul.r f b  
	{0x898e, &op_mul,	  6,   1, 255, 0xff, 0x01, 0x00, 0x04}, // mul.r g b  
	{0x898f, &op_mul,	  7,   1, 255, 0xff, 0x01, 0x00, 0x04}, // mul.r h b  
	{0x8990, &op_mul,	  0,   2, 255, 0xff, 0x01, 0x00, 0x04}, // mul.r a c  
	{0x8991, &op_mul,	  1,   2, 255, 0xff, 0x01, 0x00, 0x04}, // mul.r b c  
	{0x8992, &op_mul,	  2,   2, 255, 0xff, 0x01, 0x00, 0x04}, // mul.r c c  
	{0x8993, &op_mul,	  3,   2, 255, 0xff, 0x01, 0x00, 0x04}, // mul.r d c  
	{0x8994, &op_mul,	  4,   2, 255, 0xff, 0x01, 0x00, 0x04}, // mul.r e c  
	{0x8995, &op_mul,	  5,   2, 255, 0xff, 0x01, 0x00, 0x04}, // mul.r f c  
	{0x8996, &op_mul,	  6,   2, 255, 0xff, 0x01, 0x00, 0x04}, // mul.r g c  
	{0x8997, &op_mul,	  7,   2, 255, 0xff, 0x01, 0x00, 0x04}, // mul.r h c  
	{0x8998, &op_mul,	  0,   3, 255, 0xff, 0x01, 0x00, 0x04}, // mul.r a d  
	{0x8999, &op_mul,	  1,   3, 255, 0xff, 0x01, 0x00, 0x04}, // mul.r b d  
	{0x899a, &op_mul,	  2,   3, 255, 0xff, 0x01, 0x00, 0x04}, // mul.r c d  
	{0x899b, &op_mul,	  3,   3, 255, 0xff, 0x01, 0x00, 0x04}, // mul.r d d  
	{0x899c, &op_mul,	  4,   3, 255, 0xff, 0x01, 0x00, 0x04}, // mul.r e d  
	{0x899d, &op_mul,	  5,   3, 255, 0xff, 0x01, 0x00, 0x04}, // mul.r f d  
	{0x899e, &op_mul,	  6,   3, 255, 0xff, 0x01, 0x00, 0x04}, // mul.r g d  
	{0x899f, &op_mul,	  7,   3, 255, 0xff, 0x01, 0x00, 0x04}, // mul.r h d  
	{0x89a0, &op_mul,	  0,   4, 255, 0xff, 0x01, 0x00, 0x04}, // mul.r a e  
	{0x89a1, &op_mul,	  1,   4, 255, 0xff, 0x01, 0x00, 0x04}, // mul.r b e  
	{0x89a2, &op_mul,	  2,   4, 255, 0xff, 0x01, 0x00, 0x04}, // mul.r c e  
	{0x89a3, &op_mul,	  3,   4, 255, 0xff, 0x01, 0x00, 0x04}, // mul.r d e  
	{0x89a4, &op_mul,	  4,   4, 255, 0xff, 0x01, 0x00, 0x04}, // mul.r e e  
	{0x89a5, &op_mul,	  5,   4, 255, 0xff, 0x01, 0x00, 0x04}, // mul.r f e  
	{0x89a6, &op_mul,	  6,   4, 255, 0xff, 0x01, 0x00, 0x04}, // mul.r g e  
	{0x89a7, &op_mul,	  7,   4, 255, 0xff, 0x01, 0x00, 0x04}, // mul.r h e  
	{0x89a8, &op_mul,	  0,   5, 255, 0xff, 0x01, 0x00, 0x04}, // mul.r a f  
	{0x89a9, &op_mul,	  1,   5, 255, 0xff, 0x01, 0x00, 0x04}, // mul.r b f  
	{0x89aa, &op_mul,	  2,   5, 255, 0xff, 0x01, 0x00, 0x04}, // mul.r c f  
	{0x89ab, &op_mul,	  3,   5, 255, 0xff, 0x01, 0x00, 0x04}, // mul.r d f  
	{0x89ac, &op_mul,	  4,   5, 255, 0xff, 0x01, 0x00, 0x04}, // mul.r e f  
	{0x89ad, &op_mul,	  5,   5, 255, 0xff, 0x01, 0x00, 0x04}, // mul.r f f  
	{0x89ae, &op_mul,	  6,   5, 255, 0xff, 0x01, 0x00, 0x04}, // mul.r g f  
	{0x89af, &op_mul,	  7,   5, 255, 0xff, 0x01, 0x00, 0x04}, // mul.r h f  
	{0x89b0, &op_mul,	  0,   6, 255, 0xff, 0x01, 0x00, 0x04}, // mul.r a g  
	{0x89b1, &op_mul,	  1,   6, 255, 0xff, 0x01, 0x00, 0x04}, // mul.r b g  
	{0x89b2, &op_mul,	  2,   6, 255, 0xff, 0x01, 0x00, 0x04}, // mul.r c g  
	{0x89b3, &op_mul,	  3,   6, 255, 0xff, 0x01, 0x00, 0x04}, // mul.r d g  
	{0x89b4, &op_mul,	  4,   6, 255, 0xff, 0x01, 0x00, 0x04}, // mul.r e g  
	{0x89b5, &op_mul,	  5,   6, 255, 0xff, 0x01, 0x00, 0x04}, // mul.r f g  
	{0x89b6, &op_mul,	  6,   6, 255, 0xff, 0x01, 0x00, 0x04}, // mul.r g g  
	{0x89b7, &op_mul,	  7,   6, 255, 0xff, 0x01, 0x00, 0x04}, // mul.r h g  
	{0x89b8, &op_mul,	  0,   7, 255, 0xff, 0x01, 0x00, 0x04}, // mul.r a h  
	{0x89b9, &op_mul,	  1,   7, 255, 0xff, 0x01, 0x00, 0x04}, // mul.r b h  
	{0x89ba, &op_mul,	  2,   7, 255, 0xff, 0x01, 0x00, 0x04}, // mul.r c h  
	{0x89bb, &op_mul,	  3,   7, 255, 0xff, 0x01, 0x00, 0x04}, // mul.r d h  
	{0x89bc, &op_mul,	  4,   7, 255, 0xff, 0x01, 0x00, 0x04}, // mul.r e h  
	{0x89bd, &op_mul,	  5,   7, 255, 0xff, 0x01, 0x00, 0x04}, // mul.r f h  
	{0x89be, &op_mul,	  6,   7, 255, 0xff, 0x01, 0x00, 0x04}, // mul.r g h  
	{0x89bf, &op_mul,	  7,   7, 255, 0xff, 0x01, 0x00, 0x04}, // mul.r h h  
	{0x88c8, &op_mul,	  0,   8, 255, 0xff, 0x00, 0x01, 0x01}, // mul.wi a <literal>  
	{0x88c9, &op_mul,	  1,   8, 255, 0xff, 0x00, 0x01, 0x01}, // mul.wi b <literal>  
	{0x88ca, &op_mul,	  2,   8, 255, 0xff, 0x00, 0x01, 0x01}, // mul.wi c <literal>  
	{0x88cb, &op_mul,	  3,   8, 255, 0xff, 0x00, 0x01, 0x01}, // mul.wi d <literal>  
	{0x88cc, &op_mul,	  4,   8, 255, 0xff, 0x00, 0x01, 0x01}, // mul.wi e <literal>  
	{0x88cd, &op_mul,	  5,   8, 255, 0xff, 0x00, 0x01, 0x01}, // mul.wi f <literal>  
	{0x88ce, &op_mul,	  6,   8, 255, 0xff, 0x00, 0x01, 0x01}, // mul.wi g <literal>  
	{0x88cf, &op_mul,	  7,   8, 255, 0xff, 0x00, 0x01, 0x01}, // mul.wi h <literal>  
	{0x88d0, &op_mul,	  0,   8, 255, 0xff, 0x00, 0x02, 0x02}, // mul.di a <literal>  
	{0x88d1, &op_mul,	  1,   8, 255, 0xff, 0x00, 0x02, 0x02}, // mul.di b <literal>  
	{0x88d2, &op_mul,	  2,   8, 255, 0xff, 0x00, 0x02, 0x02}, // mul.di c <literal>  
	{0x88d3, &op_mul,	  3,   8, 255, 0xff, 0x00, 0x02, 0x02}, // mul.di d <literal>  
	{0x88d4, &op_mul,	  4,   8, 255, 0xff, 0x00, 0x02, 0x02}, // mul.di e <literal>  
	{0x88d5, &op_mul,	  5,   8, 255, 0xff, 0x00, 0x02, 0x02}, // mul.di f <literal>  
	{0x88d6, &op_mul,	  6,   8, 255, 0xff, 0x00, 0x02, 0x02}, // mul.di g <literal>  
	{0x88d7, &op_mul,	  7,   8, 255, 0xff, 0x00, 0x02, 0x02}, // mul.di h <literal>  
	{0x88e0, &op_mul,	  0,   8, 255, 0xff, 0x00, 0x04, 0x04}, // mul.i a <literal>  
	{0x88e1, &op_mul,	  1,   8, 255, 0xff, 0x00, 0x04, 0x04}, // mul.i b <literal>  
	{0x88e2, &op_mul,	  2,   8, 255, 0xff, 0x00, 0x04, 0x04}, // mul.i c <literal>  
	{0x88e3, &op_mul,	  3,   8, 255, 0xff, 0x00, 0x04, 0x04}, // mul.i d <literal>  
	{0x88e4, &op_mul,	  4,   8, 255, 0xff, 0x00, 0x04, 0x04}, // mul.i e <literal>  
	{0x88e5, &op_mul,	  5,   8, 255, 0xff, 0x00, 0x04, 0x04}, // mul.i f <literal>  
	{0x88e6, &op_mul,	  6,   8, 255, 0xff, 0x00, 0x04, 0x04}, // mul.i g <literal>  
	{0x88e7, &op_mul,	  7,   8, 255, 0xff, 0x00, 0x04, 0x04}, // mul.i h <literal>  
	{0x89c8, &op_mul,	  0,   8, 255, 0xff, 0x01, 0x04, 0x01}, // mul.wri a <literal>  
	{0x89c9, &op_mul,	  1,   8, 255, 0xff, 0x01, 0x04, 0x01}, // mul.wri b <literal>  
	{0x89ca, &op_mul,	  2,   8, 255, 0xff, 0x01, 0x04, 0x01}, // mul.wri c <literal>  
	{0x89cb, &op_mul,	  3,   8, 255, 0xff, 0x01, 0x04, 0x01}, // mul.wri d <literal>  
	{0x89cc, &op_mul,	  4,   8, 255, 0xff, 0x01, 0x04, 0x01}, // mul.wri e <literal>  
	{0x89cd, &op_mul,	  5,   8, 255, 0xff, 0x01, 0x04, 0x01}, // mul.wri f <literal>  
	{0x89ce, &op_mul,	  6,   8, 255, 0xff, 0x01, 0x04, 0x01}, // mul.wri g <literal>  
	{0x89cf, &op_mul,	  7,   8, 255, 0xff, 0x01, 0x04, 0x01}, // mul.wri h <literal>  
	{0x89d0, &op_mul,	  0,   8, 255, 0xff, 0x01, 0x04, 0x02}, // mul.dri a <literal>  
	{0x89d1, &op_mul,	  1,   8, 255, 0xff, 0x01, 0x04, 0x02}, // mul.dri b <literal>  
	{0x89d2, &op_mul,	  2,   8, 255, 0xff, 0x01, 0x04, 0x02}, // mul.dri c <literal>  
	{0x89d3, &op_mul,	  3,   8, 255, 0xff, 0x01, 0x04, 0x02}, // mul.dri d <literal>  
	{0x89d4, &op_mul,	  4,   8, 255, 0xff, 0x01, 0x04, 0x02}, // mul.dri e <literal>  
	{0x89d5, &op_mul,	  5,   8, 255, 0xff, 0x01, 0x04, 0x02}, // mul.dri f <literal>  
	{0x89d6, &op_mul,	  6,   8, 255, 0xff, 0x01, 0x04, 0x02}, // mul.dri g <literal>  
	{0x89d7, &op_mul,	  7,   8, 255, 0xff, 0x01, 0x04, 0x02}, // mul.dri h <literal>  
	{0x89e0, &op_mul,	  0,   8, 255, 0xff, 0x01, 0x04, 0x04}, // mul.ri a <literal>  
	{0x89e1, &op_mul,	  1,   8, 255, 0xff, 0x01, 0x04, 0x04}, // mul.ri b <literal>  
	{0x89e2, &op_mul,	  2,   8, 255, 0xff, 0x01, 0x04, 0x04}, // mul.ri c <literal>  
	{0x89e3, &op_mul,	  3,   8, 255, 0xff, 0x01, 0x04, 0x04}, // mul.ri d <literal>  
	{0x89e4, &op_mul,	  4,   8, 255, 0xff, 0x01, 0x04, 0x04}, // mul.ri e <literal>  
	{0x89e5, &op_mul,	  5,   8, 255, 0xff, 0x01, 0x04, 0x04}, // mul.ri f <literal>  
	{0x89e6, &op_mul,	  6,   8, 255, 0xff, 0x01, 0x04, 0x04}, // mul.ri g <literal>  
	{0x89e7, &op_mul,	  7,   8, 255, 0xff, 0x01, 0x04, 0x04}, // mul.ri h <literal>  
	{0x8a00, &op_rsh,	  0,   0, 255, 0xff, 0x00, 0x00, 0x01}, // rsh.w a a  
	{0x8a01, &op_rsh,	  1,   0, 255, 0xff, 0x00, 0x00, 0x01}, // rsh.w b a  
	{0x8a02, &op_rsh,	  2,   0, 255, 0xff, 0x00, 0x00, 0x01}, // rsh.w c a  
	{0x8a03, &op_rsh,	  3,   0, 255, 0xff, 0x00, 0x00, 0x01}, // rsh.w d a  
	{0x8a04, &op_rsh,	  4,   0, 255, 0xff, 0x00, 0x00, 0x01}, // rsh.w e a  
	{0x8a05, &op_rsh,	  5,   0, 255, 0xff, 0x00, 0x00, 0x01}, // rsh.w f a  
	{0x8a06, &op_rsh,	  6,   0, 255, 0xff, 0x00, 0x00, 0x01}, // rsh.w g a  
	{0x8a07, &op_rsh,	  7,   0, 255, 0xff, 0x00, 0x00, 0x01}, // rsh.w h a  
	{0x8a08, &op_rsh,	  0,   1, 255, 0xff, 0x00, 0x00, 0x01}, // rsh.w a b  
	{0x8a09, &op_rsh,	  1,   1, 255, 0xff, 0x00, 0x00, 0x01}, // rsh.w b b  
	{0x8a0a, &op_rsh,	  2,   1, 255, 0xff, 0x00, 0x00, 0x01}, // rsh.w c b  
	{0x8a0b, &op_rsh,	  3,   1, 255, 0xff, 0x00, 0x00, 0x01}, // rsh.w d b  
	{0x8a0c, &op_rsh,	  4,   1, 255, 0xff, 0x00, 0x00, 0x01}, // rsh.w e b  
	{0x8a0d, &op_rsh,	  5,   1, 255, 0xff, 0x00, 0x00, 0x01}, // rsh.w f b  
	{0x8a0e, &op_rsh,	  6,   1, 255, 0xff, 0x00, 0x00, 0x01}, // rsh.w g b  
	{0x8a0f, &op_rsh,	  7,   1, 255, 0xff, 0x00, 0x00, 0x01}, // rsh.w h b  
	{0x8a10, &op_rsh,	  0,   2, 255, 0xff, 0x00, 0x00, 0x01}, // rsh.w a c  
	{0x8a11, &op_rsh,	  1,   2, 255, 0xff, 0x00, 0x00, 0x01}, // rsh.w b c  
	{0x8a12, &op_rsh,	  2,   2, 255, 0xff, 0x00, 0x00, 0x01}, // rsh.w c c  
	{0x8a13, &op_rsh,	  3,   2, 255, 0xff, 0x00, 0x00, 0x01}, // rsh.w d c  
	{0x8a14, &op_rsh,	  4,   2, 255, 0xff, 0x00, 0x00, 0x01}, // rsh.w e c  
	{0x8a15, &op_rsh,	  5,   2, 255, 0xff, 0x00, 0x00, 0x01}, // rsh.w f c  
	{0x8a16, &op_rsh,	  6,   2, 255, 0xff, 0x00, 0x00, 0x01}, // rsh.w g c  
	{0x8a17, &op_rsh,	  7,   2, 255, 0xff, 0x00, 0x00, 0x01}, // rsh.w h c  
	{0x8a18, &op_rsh,	  0,   3, 255, 0xff, 0x00, 0x00, 0x01}, // rsh.w a d  
	{0x8a19, &op_rsh,	  1,   3, 255, 0xff, 0x00, 0x00, 0x01}, // rsh.w b d  
	{0x8a1a, &op_rsh,	  2,   3, 255, 0xff, 0x00, 0x00, 0x01}, // rsh.w c d  
	{0x8a1b, &op_rsh,	  3,   3, 255, 0xff, 0x00, 0x00, 0x01}, // rsh.w d d  
	{0x8a1c, &op_rsh,	  4,   3, 255, 0xff, 0x00, 0x00, 0x01}, // rsh.w e d  
	{0x8a1d, &op_rsh,	  5,   3, 255, 0xff, 0x00, 0x00, 0x01}, // rsh.w f d  
	{0x8a1e, &op_rsh,	  6,   3, 255, 0xff, 0x00, 0x00, 0x01}, // rsh.w g d  
	{0x8a1f, &op_rsh,	  7,   3, 255, 0xff, 0x00, 0x00, 0x01}, // rsh.w h d  
	{0x8a20, &op_rsh,	  0,   4, 255, 0xff, 0x00, 0x00, 0x01}, // rsh.w a e  
	{0x8a21, &op_rsh,	  1,   4, 255, 0xff, 0x00, 0x00, 0x01}, // rsh.w b e  
	{0x8a22, &op_rsh,	  2,   4, 255, 0xff, 0x00, 0x00, 0x01}, // rsh.w c e  
	{0x8a23, &op_rsh,	  3,   4, 255, 0xff, 0x00, 0x00, 0x01}, // rsh.w d e  
	{0x8a24, &op_rsh,	  4,   4, 255, 0xff, 0x00, 0x00, 0x01}, // rsh.w e e  
	{0x8a25, &op_rsh,	  5,   4, 255, 0xff, 0x00, 0x00, 0x01}, // rsh.w f e  
	{0x8a26, &op_rsh,	  6,   4, 255, 0xff, 0x00, 0x00, 0x01}, // rsh.w g e  
	{0x8a27, &op_rsh,	  7,   4, 255, 0xff, 0x00, 0x00, 0x01}, // rsh.w h e  
	{0x8a28, &op_rsh,	  0,   5, 255, 0xff, 0x00, 0x00, 0x01}, // rsh.w a f  
	{0x8a29, &op_rsh,	  1,   5, 255, 0xff, 0x00, 0x00, 0x01}, // rsh.w b f  
	{0x8a2a, &op_rsh,	  2,   5, 255, 0xff, 0x00, 0x00, 0x01}, // rsh.w c f  
	{0x8a2b, &op_rsh,	  3,   5, 255, 0xff, 0x00, 0x00, 0x01}, // rsh.w d f  
	{0x8a2c, &op_rsh,	  4,   5, 255, 0xff, 0x00, 0x00, 0x01}, // rsh.w e f  
	{0x8a2d, &op_rsh,	  5,   5, 255, 0xff, 0x00, 0x00, 0x01}, // rsh.w f f  
	{0x8a2e, &op_rsh,	  6,   5, 255, 0xff, 0x00, 0x00, 0x01}, // rsh.w g f  
	{0x8a2f, &op_rsh,	  7,   5, 255, 0xff, 0x00, 0x00, 0x01}, // rsh.w h f  
	{0x8a30, &op_rsh,	  0,   6, 255, 0xff, 0x00, 0x00, 0x01}, // rsh.w a g  
	{0x8a31, &op_rsh,	  1,   6, 255, 0xff, 0x00, 0x00, 0x01}, // rsh.w b g  
	{0x8a32, &op_rsh,	  2,   6, 255, 0xff, 0x00, 0x00, 0x01}, // rsh.w c g  
	{0x8a33, &op_rsh,	  3,   6, 255, 0xff, 0x00, 0x00, 0x01}, // rsh.w d g  
	{0x8a34, &op_rsh,	  4,   6, 255, 0xff, 0x00, 0x00, 0x01}, // rsh.w e g  
	{0x8a35, &op_rsh,	  5,   6, 255, 0xff, 0x00, 0x00, 0x01}, // rsh.w f g  
	{0x8a36, &op_rsh,	  6,   6, 255, 0xff, 0x00, 0x00, 0x01}, // rsh.w g g  
	{0x8a37, &op_rsh,	  7,   6, 255, 0xff, 0x00, 0x00, 0x01}, // rsh.w h g  
	{0x8a38, &op_rsh,	  0,   7, 255, 0xff, 0x00, 0x00, 0x01}, // rsh.w a h  
	{0x8a39, &op_rsh,	  1,   7, 255, 0xff, 0x00, 0x00, 0x01}, // rsh.w b h  
	{0x8a3a, &op_rsh,	  2,   7, 255, 0xff, 0x00, 0x00, 0x01}, // rsh.w c h  
	{0x8a3b, &op_rsh,	  3,   7, 255, 0xff, 0x00, 0x00, 0x01}, // rsh.w d h  
	{0x8a3c, &op_rsh,	  4,   7, 255, 0xff, 0x00, 0x00, 0x01}, // rsh.w e h  
	{0x8a3d, &op_rsh,	  5,   7, 255, 0xff, 0x00, 0x00, 0x01}, // rsh.w f h  
	{0x8a3e, &op_rsh,	  6,   7, 255, 0xff, 0x00, 0x00, 0x01}, // rsh.w g h  
	{0x8a3f, &op_rsh,	  7,   7, 255, 0xff, 0x00, 0x00, 0x01}, // rsh.w h h  
	{0x8a40, &op_rsh,	  0,   0, 255, 0xff, 0x00, 0x00, 0x02}, // rsh.d a a  
	{0x8a41, &op_rsh,	  1,   0, 255, 0xff, 0x00, 0x00, 0x02}, // rsh.d b a  
	{0x8a42, &op_rsh,	  2,   0, 255, 0xff, 0x00, 0x00, 0x02}, // rsh.d c a  
	{0x8a43, &op_rsh,	  3,   0, 255, 0xff, 0x00, 0x00, 0x02}, // rsh.d d a  
	{0x8a44, &op_rsh,	  4,   0, 255, 0xff, 0x00, 0x00, 0x02}, // rsh.d e a  
	{0x8a45, &op_rsh,	  5,   0, 255, 0xff, 0x00, 0x00, 0x02}, // rsh.d f a  
	{0x8a46, &op_rsh,	  6,   0, 255, 0xff, 0x00, 0x00, 0x02}, // rsh.d g a  
	{0x8a47, &op_rsh,	  7,   0, 255, 0xff, 0x00, 0x00, 0x02}, // rsh.d h a  
	{0x8a48, &op_rsh,	  0,   1, 255, 0xff, 0x00, 0x00, 0x02}, // rsh.d a b  
	{0x8a49, &op_rsh,	  1,   1, 255, 0xff, 0x00, 0x00, 0x02}, // rsh.d b b  
	{0x8a4a, &op_rsh,	  2,   1, 255, 0xff, 0x00, 0x00, 0x02}, // rsh.d c b  
	{0x8a4b, &op_rsh,	  3,   1, 255, 0xff, 0x00, 0x00, 0x02}, // rsh.d d b  
	{0x8a4c, &op_rsh,	  4,   1, 255, 0xff, 0x00, 0x00, 0x02}, // rsh.d e b  
	{0x8a4d, &op_rsh,	  5,   1, 255, 0xff, 0x00, 0x00, 0x02}, // rsh.d f b  
	{0x8a4e, &op_rsh,	  6,   1, 255, 0xff, 0x00, 0x00, 0x02}, // rsh.d g b  
	{0x8a4f, &op_rsh,	  7,   1, 255, 0xff, 0x00, 0x00, 0x02}, // rsh.d h b  
	{0x8a50, &op_rsh,	  0,   2, 255, 0xff, 0x00, 0x00, 0x02}, // rsh.d a c  
	{0x8a51, &op_rsh,	  1,   2, 255, 0xff, 0x00, 0x00, 0x02}, // rsh.d b c  
	{0x8a52, &op_rsh,	  2,   2, 255, 0xff, 0x00, 0x00, 0x02}, // rsh.d c c  
	{0x8a53, &op_rsh,	  3,   2, 255, 0xff, 0x00, 0x00, 0x02}, // rsh.d d c  
	{0x8a54, &op_rsh,	  4,   2, 255, 0xff, 0x00, 0x00, 0x02}, // rsh.d e c  
	{0x8a55, &op_rsh,	  5,   2, 255, 0xff, 0x00, 0x00, 0x02}, // rsh.d f c  
	{0x8a56, &op_rsh,	  6,   2, 255, 0xff, 0x00, 0x00, 0x02}, // rsh.d g c  
	{0x8a57, &op_rsh,	  7,   2, 255, 0xff, 0x00, 0x00, 0x02}, // rsh.d h c  
	{0x8a58, &op_rsh,	  0,   3, 255, 0xff, 0x00, 0x00, 0x02}, // rsh.d a d  
	{0x8a59, &op_rsh,	  1,   3, 255, 0xff, 0x00, 0x00, 0x02}, // rsh.d b d  
	{0x8a5a, &op_rsh,	  2,   3, 255, 0xff, 0x00, 0x00, 0x02}, // rsh.d c d  
	{0x8a5b, &op_rsh,	  3,   3, 255, 0xff, 0x00, 0x00, 0x02}, // rsh.d d d  
	{0x8a5c, &op_rsh,	  4,   3, 255, 0xff, 0x00, 0x00, 0x02}, // rsh.d e d  
	{0x8a5d, &op_rsh,	  5,   3, 255, 0xff, 0x00, 0x00, 0x02}, // rsh.d f d  
	{0x8a5e, &op_rsh,	  6,   3, 255, 0xff, 0x00, 0x00, 0x02}, // rsh.d g d  
	{0x8a5f, &op_rsh,	  7,   3, 255, 0xff, 0x00, 0x00, 0x02}, // rsh.d h d  
	{0x8a60, &op_rsh,	  0,   4, 255, 0xff, 0x00, 0x00, 0x02}, // rsh.d a e  
	{0x8a61, &op_rsh,	  1,   4, 255, 0xff, 0x00, 0x00, 0x02}, // rsh.d b e  
	{0x8a62, &op_rsh,	  2,   4, 255, 0xff, 0x00, 0x00, 0x02}, // rsh.d c e  
	{0x8a63, &op_rsh,	  3,   4, 255, 0xff, 0x00, 0x00, 0x02}, // rsh.d d e  
	{0x8a64, &op_rsh,	  4,   4, 255, 0xff, 0x00, 0x00, 0x02}, // rsh.d e e  
	{0x8a65, &op_rsh,	  5,   4, 255, 0xff, 0x00, 0x00, 0x02}, // rsh.d f e  
	{0x8a66, &op_rsh,	  6,   4, 255, 0xff, 0x00, 0x00, 0x02}, // rsh.d g e  
	{0x8a67, &op_rsh,	  7,   4, 255, 0xff, 0x00, 0x00, 0x02}, // rsh.d h e  
	{0x8a68, &op_rsh,	  0,   5, 255, 0xff, 0x00, 0x00, 0x02}, // rsh.d a f  
	{0x8a69, &op_rsh,	  1,   5, 255, 0xff, 0x00, 0x00, 0x02}, // rsh.d b f  
	{0x8a6a, &op_rsh,	  2,   5, 255, 0xff, 0x00, 0x00, 0x02}, // rsh.d c f  
	{0x8a6b, &op_rsh,	  3,   5, 255, 0xff, 0x00, 0x00, 0x02}, // rsh.d d f  
	{0x8a6c, &op_rsh,	  4,   5, 255, 0xff, 0x00, 0x00, 0x02}, // rsh.d e f  
	{0x8a6d, &op_rsh,	  5,   5, 255, 0xff, 0x00, 0x00, 0x02}, // rsh.d f f  
	{0x8a6e, &op_rsh,	  6,   5, 255, 0xff, 0x00, 0x00, 0x02}, // rsh.d g f  
	{0x8a6f, &op_rsh,	  7,   5, 255, 0xff, 0x00, 0x00, 0x02}, // rsh.d h f  
	{0x8a70, &op_rsh,	  0,   6, 255, 0xff, 0x00, 0x00, 0x02}, // rsh.d a g  
	{0x8a71, &op_rsh,	  1,   6, 255, 0xff, 0x00, 0x00, 0x02}, // rsh.d b g  
	{0x8a72, &op_rsh,	  2,   6, 255, 0xff, 0x00, 0x00, 0x02}, // rsh.d c g  
	{0x8a73, &op_rsh,	  3,   6, 255, 0xff, 0x00, 0x00, 0x02}, // rsh.d d g  
	{0x8a74, &op_rsh,	  4,   6, 255, 0xff, 0x00, 0x00, 0x02}, // rsh.d e g  
	{0x8a75, &op_rsh,	  5,   6, 255, 0xff, 0x00, 0x00, 0x02}, // rsh.d f g  
	{0x8a76, &op_rsh,	  6,   6, 255, 0xff, 0x00, 0x00, 0x02}, // rsh.d g g  
	{0x8a77, &op_rsh,	  7,   6, 255, 0xff, 0x00, 0x00, 0x02}, // rsh.d h g  
	{0x8a78, &op_rsh,	  0,   7, 255, 0xff, 0x00, 0x00, 0x02}, // rsh.d a h  
	{0x8a79, &op_rsh,	  1,   7, 255, 0xff, 0x00, 0x00, 0x02}, // rsh.d b h  
	{0x8a7a, &op_rsh,	  2,   7, 255, 0xff, 0x00, 0x00, 0x02}, // rsh.d c h  
	{0x8a7b, &op_rsh,	  3,   7, 255, 0xff, 0x00, 0x00, 0x02}, // rsh.d d h  
	{0x8a7c, &op_rsh,	  4,   7, 255, 0xff, 0x00, 0x00, 0x02}, // rsh.d e h  
	{0x8a7d, &op_rsh,	  5,   7, 255, 0xff, 0x00, 0x00, 0x02}, // rsh.d f h  
	{0x8a7e, &op_rsh,	  6,   7, 255, 0xff, 0x00, 0x00, 0x02}, // rsh.d g h  
	{0x8a7f, &op_rsh,	  7,   7, 255, 0xff, 0x00, 0x00, 0x02}, // rsh.d h h  
	{0x8a80, &op_rsh,	  0,   0, 255, 0xff, 0x00, 0x00, 0x04}, // rsh a a  
	{0x8a81, &op_rsh,	  1,   0, 255, 0xff, 0x00, 0x00, 0x04}, // rsh b a  
	{0x8a82, &op_rsh,	  2,   0, 255, 0xff, 0x00, 0x00, 0x04}, // rsh c a  
	{0x8a83, &op_rsh,	  3,   0, 255, 0xff, 0x00, 0x00, 0x04}, // rsh d a  
	{0x8a84, &op_rsh,	  4,   0, 255, 0xff, 0x00, 0x00, 0x04}, // rsh e a  
	{0x8a85, &op_rsh,	  5,   0, 255, 0xff, 0x00, 0x00, 0x04}, // rsh f a  
	{0x8a86, &op_rsh,	  6,   0, 255, 0xff, 0x00, 0x00, 0x04}, // rsh g a  
	{0x8a87, &op_rsh,	  7,   0, 255, 0xff, 0x00, 0x00, 0x04}, // rsh h a  
	{0x8a88, &op_rsh,	  0,   1, 255, 0xff, 0x00, 0x00, 0x04}, // rsh a b  
	{0x8a89, &op_rsh,	  1,   1, 255, 0xff, 0x00, 0x00, 0x04}, // rsh b b  
	{0x8a8a, &op_rsh,	  2,   1, 255, 0xff, 0x00, 0x00, 0x04}, // rsh c b  
	{0x8a8b, &op_rsh,	  3,   1, 255, 0xff, 0x00, 0x00, 0x04}, // rsh d b  
	{0x8a8c, &op_rsh,	  4,   1, 255, 0xff, 0x00, 0x00, 0x04}, // rsh e b  
	{0x8a8d, &op_rsh,	  5,   1, 255, 0xff, 0x00, 0x00, 0x04}, // rsh f b  
	{0x8a8e, &op_rsh,	  6,   1, 255, 0xff, 0x00, 0x00, 0x04}, // rsh g b  
	{0x8a8f, &op_rsh,	  7,   1, 255, 0xff, 0x00, 0x00, 0x04}, // rsh h b  
	{0x8a90, &op_rsh,	  0,   2, 255, 0xff, 0x00, 0x00, 0x04}, // rsh a c  
	{0x8a91, &op_rsh,	  1,   2, 255, 0xff, 0x00, 0x00, 0x04}, // rsh b c  
	{0x8a92, &op_rsh,	  2,   2, 255, 0xff, 0x00, 0x00, 0x04}, // rsh c c  
	{0x8a93, &op_rsh,	  3,   2, 255, 0xff, 0x00, 0x00, 0x04}, // rsh d c  
	{0x8a94, &op_rsh,	  4,   2, 255, 0xff, 0x00, 0x00, 0x04}, // rsh e c  
	{0x8a95, &op_rsh,	  5,   2, 255, 0xff, 0x00, 0x00, 0x04}, // rsh f c  
	{0x8a96, &op_rsh,	  6,   2, 255, 0xff, 0x00, 0x00, 0x04}, // rsh g c  
	{0x8a97, &op_rsh,	  7,   2, 255, 0xff, 0x00, 0x00, 0x04}, // rsh h c  
	{0x8a98, &op_rsh,	  0,   3, 255, 0xff, 0x00, 0x00, 0x04}, // rsh a d  
	{0x8a99, &op_rsh,	  1,   3, 255, 0xff, 0x00, 0x00, 0x04}, // rsh b d  
	{0x8a9a, &op_rsh,	  2,   3, 255, 0xff, 0x00, 0x00, 0x04}, // rsh c d  
	{0x8a9b, &op_rsh,	  3,   3, 255, 0xff, 0x00, 0x00, 0x04}, // rsh d d  
	{0x8a9c, &op_rsh,	  4,   3, 255, 0xff, 0x00, 0x00, 0x04}, // rsh e d  
	{0x8a9d, &op_rsh,	  5,   3, 255, 0xff, 0x00, 0x00, 0x04}, // rsh f d  
	{0x8a9e, &op_rsh,	  6,   3, 255, 0xff, 0x00, 0x00, 0x04}, // rsh g d  
	{0x8a9f, &op_rsh,	  7,   3, 255, 0xff, 0x00, 0x00, 0x04}, // rsh h d  
	{0x8aa0, &op_rsh,	  0,   4, 255, 0xff, 0x00, 0x00, 0x04}, // rsh a e  
	{0x8aa1, &op_rsh,	  1,   4, 255, 0xff, 0x00, 0x00, 0x04}, // rsh b e  
	{0x8aa2, &op_rsh,	  2,   4, 255, 0xff, 0x00, 0x00, 0x04}, // rsh c e  
	{0x8aa3, &op_rsh,	  3,   4, 255, 0xff, 0x00, 0x00, 0x04}, // rsh d e  
	{0x8aa4, &op_rsh,	  4,   4, 255, 0xff, 0x00, 0x00, 0x04}, // rsh e e  
	{0x8aa5, &op_rsh,	  5,   4, 255, 0xff, 0x00, 0x00, 0x04}, // rsh f e  
	{0x8aa6, &op_rsh,	  6,   4, 255, 0xff, 0x00, 0x00, 0x04}, // rsh g e  
	{0x8aa7, &op_rsh,	  7,   4, 255, 0xff, 0x00, 0x00, 0x04}, // rsh h e  
	{0x8aa8, &op_rsh,	  0,   5, 255, 0xff, 0x00, 0x00, 0x04}, // rsh a f  
	{0x8aa9, &op_rsh,	  1,   5, 255, 0xff, 0x00, 0x00, 0x04}, // rsh b f  
	{0x8aaa, &op_rsh,	  2,   5, 255, 0xff, 0x00, 0x00, 0x04}, // rsh c f  
	{0x8aab, &op_rsh,	  3,   5, 255, 0xff, 0x00, 0x00, 0x04}, // rsh d f  
	{0x8aac, &op_rsh,	  4,   5, 255, 0xff, 0x00, 0x00, 0x04}, // rsh e f  
	{0x8aad, &op_rsh,	  5,   5, 255, 0xff, 0x00, 0x00, 0x04}, // rsh f f  
	{0x8aae, &op_rsh,	  6,   5, 255, 0xff, 0x00, 0x00, 0x04}, // rsh g f  
	{0x8aaf, &op_rsh,	  7,   5, 255, 0xff, 0x00, 0x00, 0x04}, // rsh h f  
	{0x8ab0, &op_rsh,	  0,   6, 255, 0xff, 0x00, 0x00, 0x04}, // rsh a g  
	{0x8ab1, &op_rsh,	  1,   6, 255, 0xff, 0x00, 0x00, 0x04}, // rsh b g  
	{0x8ab2, &op_rsh,	  2,   6, 255, 0xff, 0x00, 0x00, 0x04}, // rsh c g  
	{0x8ab3, &op_rsh,	  3,   6, 255, 0xff, 0x00, 0x00, 0x04}, // rsh d g  
	{0x8ab4, &op_rsh,	  4,   6, 255, 0xff, 0x00, 0x00, 0x04}, // rsh e g  
	{0x8ab5, &op_rsh,	  5,   6, 255, 0xff, 0x00, 0x00, 0x04}, // rsh f g  
	{0x8ab6, &op_rsh,	  6,   6, 255, 0xff, 0x00, 0x00, 0x04}, // rsh g g  
	{0x8ab7, &op_rsh,	  7,   6, 255, 0xff, 0x00, 0x00, 0x04}, // rsh h g  
	{0x8ab8, &op_rsh,	  0,   7, 255, 0xff, 0x00, 0x00, 0x04}, // rsh a h  
	{0x8ab9, &op_rsh,	  1,   7, 255, 0xff, 0x00, 0x00, 0x04}, // rsh b h  
	{0x8aba, &op_rsh,	  2,   7, 255, 0xff, 0x00, 0x00, 0x04}, // rsh c h  
	{0x8abb, &op_rsh,	  3,   7, 255, 0xff, 0x00, 0x00, 0x04}, // rsh d h  
	{0x8abc, &op_rsh,	  4,   7, 255, 0xff, 0x00, 0x00, 0x04}, // rsh e h  
	{0x8abd, &op_rsh,	  5,   7, 255, 0xff, 0x00, 0x00, 0x04}, // rsh f h  
	{0x8abe, &op_rsh,	  6,   7, 255, 0xff, 0x00, 0x00, 0x04}, // rsh g h  
	{0x8abf, &op_rsh,	  7,   7, 255, 0xff, 0x00, 0x00, 0x04}, // rsh h h  
	{0x8b00, &op_rsh,	  0,   0, 255, 0xff, 0x01, 0x00, 0x01}, // rsh.wr a a  
	{0x8b01, &op_rsh,	  1,   0, 255, 0xff, 0x01, 0x00, 0x01}, // rsh.wr b a  
	{0x8b02, &op_rsh,	  2,   0, 255, 0xff, 0x01, 0x00, 0x01}, // rsh.wr c a  
	{0x8b03, &op_rsh,	  3,   0, 255, 0xff, 0x01, 0x00, 0x01}, // rsh.wr d a  
	{0x8b04, &op_rsh,	  4,   0, 255, 0xff, 0x01, 0x00, 0x01}, // rsh.wr e a  
	{0x8b05, &op_rsh,	  5,   0, 255, 0xff, 0x01, 0x00, 0x01}, // rsh.wr f a  
	{0x8b06, &op_rsh,	  6,   0, 255, 0xff, 0x01, 0x00, 0x01}, // rsh.wr g a  
	{0x8b07, &op_rsh,	  7,   0, 255, 0xff, 0x01, 0x00, 0x01}, // rsh.wr h a  
	{0x8b08, &op_rsh,	  0,   1, 255, 0xff, 0x01, 0x00, 0x01}, // rsh.wr a b  
	{0x8b09, &op_rsh,	  1,   1, 255, 0xff, 0x01, 0x00, 0x01}, // rsh.wr b b  
	{0x8b0a, &op_rsh,	  2,   1, 255, 0xff, 0x01, 0x00, 0x01}, // rsh.wr c b  
	{0x8b0b, &op_rsh,	  3,   1, 255, 0xff, 0x01, 0x00, 0x01}, // rsh.wr d b  
	{0x8b0c, &op_rsh,	  4,   1, 255, 0xff, 0x01, 0x00, 0x01}, // rsh.wr e b  
	{0x8b0d, &op_rsh,	  5,   1, 255, 0xff, 0x01, 0x00, 0x01}, // rsh.wr f b  
	{0x8b0e, &op_rsh,	  6,   1, 255, 0xff, 0x01, 0x00, 0x01}, // rsh.wr g b  
	{0x8b0f, &op_rsh,	  7,   1, 255, 0xff, 0x01, 0x00, 0x01}, // rsh.wr h b  
	{0x8b10, &op_rsh,	  0,   2, 255, 0xff, 0x01, 0x00, 0x01}, // rsh.wr a c  
	{0x8b11, &op_rsh,	  1,   2, 255, 0xff, 0x01, 0x00, 0x01}, // rsh.wr b c  
	{0x8b12, &op_rsh,	  2,   2, 255, 0xff, 0x01, 0x00, 0x01}, // rsh.wr c c  
	{0x8b13, &op_rsh,	  3,   2, 255, 0xff, 0x01, 0x00, 0x01}, // rsh.wr d c  
	{0x8b14, &op_rsh,	  4,   2, 255, 0xff, 0x01, 0x00, 0x01}, // rsh.wr e c  
	{0x8b15, &op_rsh,	  5,   2, 255, 0xff, 0x01, 0x00, 0x01}, // rsh.wr f c  
	{0x8b16, &op_rsh,	  6,   2, 255, 0xff, 0x01, 0x00, 0x01}, // rsh.wr g c  
	{0x8b17, &op_rsh,	  7,   2, 255, 0xff, 0x01, 0x00, 0x01}, // rsh.wr h c  
	{0x8b18, &op_rsh,	  0,   3, 255, 0xff, 0x01, 0x00, 0x01}, // rsh.wr a d  
	{0x8b19, &op_rsh,	  1,   3, 255, 0xff, 0x01, 0x00, 0x01}, // rsh.wr b d  
	{0x8b1a, &op_rsh,	  2,   3, 255, 0xff, 0x01, 0x00, 0x01}, // rsh.wr c d  
	{0x8b1b, &op_rsh,	  3,   3, 255, 0xff, 0x01, 0x00, 0x01}, // rsh.wr d d  
	{0x8b1c, &op_rsh,	  4,   3, 255, 0xff, 0x01, 0x00, 0x01}, // rsh.wr e d  
	{0x8b1d, &op_rsh,	  5,   3, 255, 0xff, 0x01, 0x00, 0x01}, // rsh.wr f d  
	{0x8b1e, &op_rsh,	  6,   3, 255, 0xff, 0x01, 0x00, 0x01}, // rsh.wr g d  
	{0x8b1f, &op_rsh,	  7,   3, 255, 0xff, 0x01, 0x00, 0x01}, // rsh.wr h d  
	{0x8b20, &op_rsh,	  0,   4, 255, 0xff, 0x01, 0x00, 0x01}, // rsh.wr a e  
	{0x8b21, &op_rsh,	  1,   4, 255, 0xff, 0x01, 0x00, 0x01}, // rsh.wr b e  
	{0x8b22, &op_rsh,	  2,   4, 255, 0xff, 0x01, 0x00, 0x01}, // rsh.wr c e  
	{0x8b23, &op_rsh,	  3,   4, 255, 0xff, 0x01, 0x00, 0x01}, // rsh.wr d e  
	{0x8b24, &op_rsh,	  4,   4, 255, 0xff, 0x01, 0x00, 0x01}, // rsh.wr e e  
	{0x8b25, &op_rsh,	  5,   4, 255, 0xff, 0x01, 0x00, 0x01}, // rsh.wr f e  
	{0x8b26, &op_rsh,	  6,   4, 255, 0xff, 0x01, 0x00, 0x01}, // rsh.wr g e  
	{0x8b27, &op_rsh,	  7,   4, 255, 0xff, 0x01, 0x00, 0x01}, // rsh.wr h e  
	{0x8b28, &op_rsh,	  0,   5, 255, 0xff, 0x01, 0x00, 0x01}, // rsh.wr a f  
	{0x8b29, &op_rsh,	  1,   5, 255, 0xff, 0x01, 0x00, 0x01}, // rsh.wr b f  
	{0x8b2a, &op_rsh,	  2,   5, 255, 0xff, 0x01, 0x00, 0x01}, // rsh.wr c f  
	{0x8b2b, &op_rsh,	  3,   5, 255, 0xff, 0x01, 0x00, 0x01}, // rsh.wr d f  
	{0x8b2c, &op_rsh,	  4,   5, 255, 0xff, 0x01, 0x00, 0x01}, // rsh.wr e f  
	{0x8b2d, &op_rsh,	  5,   5, 255, 0xff, 0x01, 0x00, 0x01}, // rsh.wr f f  
	{0x8b2e, &op_rsh,	  6,   5, 255, 0xff, 0x01, 0x00, 0x01}, // rsh.wr g f  
	{0x8b2f, &op_rsh,	  7,   5, 255, 0xff, 0x01, 0x00, 0x01}, // rsh.wr h f  
	{0x8b30, &op_rsh,	  0,   6, 255, 0xff, 0x01, 0x00, 0x01}, // rsh.wr a g  
	{0x8b31, &op_rsh,	  1,   6, 255, 0xff, 0x01, 0x00, 0x01}, // rsh.wr b g  
	{0x8b32, &op_rsh,	  2,   6, 255, 0xff, 0x01, 0x00, 0x01}, // rsh.wr c g  
	{0x8b33, &op_rsh,	  3,   6, 255, 0xff, 0x01, 0x00, 0x01}, // rsh.wr d g  
	{0x8b34, &op_rsh,	  4,   6, 255, 0xff, 0x01, 0x00, 0x01}, // rsh.wr e g  
	{0x8b35, &op_rsh,	  5,   6, 255, 0xff, 0x01, 0x00, 0x01}, // rsh.wr f g  
	{0x8b36, &op_rsh,	  6,   6, 255, 0xff, 0x01, 0x00, 0x01}, // rsh.wr g g  
	{0x8b37, &op_rsh,	  7,   6, 255, 0xff, 0x01, 0x00, 0x01}, // rsh.wr h g  
	{0x8b38, &op_rsh,	  0,   7, 255, 0xff, 0x01, 0x00, 0x01}, // rsh.wr a h  
	{0x8b39, &op_rsh,	  1,   7, 255, 0xff, 0x01, 0x00, 0x01}, // rsh.wr b h  
	{0x8b3a, &op_rsh,	  2,   7, 255, 0xff, 0x01, 0x00, 0x01}, // rsh.wr c h  
	{0x8b3b, &op_rsh,	  3,   7, 255, 0xff, 0x01, 0x00, 0x01}, // rsh.wr d h  
	{0x8b3c, &op_rsh,	  4,   7, 255, 0xff, 0x01, 0x00, 0x01}, // rsh.wr e h  
	{0x8b3d, &op_rsh,	  5,   7, 255, 0xff, 0x01, 0x00, 0x01}, // rsh.wr f h  
	{0x8b3e, &op_rsh,	  6,   7, 255, 0xff, 0x01, 0x00, 0x01}, // rsh.wr g h  
	{0x8b3f, &op_rsh,	  7,   7, 255, 0xff, 0x01, 0x00, 0x01}, // rsh.wr h h  
	{0x8b40, &op_rsh,	  0,   0, 255, 0xff, 0x01, 0x00, 0x02}, // rsh.dr a a  
	{0x8b41, &op_rsh,	  1,   0, 255, 0xff, 0x01, 0x00, 0x02}, // rsh.dr b a  
	{0x8b42, &op_rsh,	  2,   0, 255, 0xff, 0x01, 0x00, 0x02}, // rsh.dr c a  
	{0x8b43, &op_rsh,	  3,   0, 255, 0xff, 0x01, 0x00, 0x02}, // rsh.dr d a  
	{0x8b44, &op_rsh,	  4,   0, 255, 0xff, 0x01, 0x00, 0x02}, // rsh.dr e a  
	{0x8b45, &op_rsh,	  5,   0, 255, 0xff, 0x01, 0x00, 0x02}, // rsh.dr f a  
	{0x8b46, &op_rsh,	  6,   0, 255, 0xff, 0x01, 0x00, 0x02}, // rsh.dr g a  
	{0x8b47, &op_rsh,	  7,   0, 255, 0xff, 0x01, 0x00, 0x02}, // rsh.dr h a  
	{0x8b48, &op_rsh,	  0,   1, 255, 0xff, 0x01, 0x00, 0x02}, // rsh.dr a b  
	{0x8b49, &op_rsh,	  1,   1, 255, 0xff, 0x01, 0x00, 0x02}, // rsh.dr b b  
	{0x8b4a, &op_rsh,	  2,   1, 255, 0xff, 0x01, 0x00, 0x02}, // rsh.dr c b  
	{0x8b4b, &op_rsh,	  3,   1, 255, 0xff, 0x01, 0x00, 0x02}, // rsh.dr d b  
	{0x8b4c, &op_rsh,	  4,   1, 255, 0xff, 0x01, 0x00, 0x02}, // rsh.dr e b  
	{0x8b4d, &op_rsh,	  5,   1, 255, 0xff, 0x01, 0x00, 0x02}, // rsh.dr f b  
	{0x8b4e, &op_rsh,	  6,   1, 255, 0xff, 0x01, 0x00, 0x02}, // rsh.dr g b  
	{0x8b4f, &op_rsh,	  7,   1, 255, 0xff, 0x01, 0x00, 0x02}, // rsh.dr h b  
	{0x8b50, &op_rsh,	  0,   2, 255, 0xff, 0x01, 0x00, 0x02}, // rsh.dr a c  
	{0x8b51, &op_rsh,	  1,   2, 255, 0xff, 0x01, 0x00, 0x02}, // rsh.dr b c  
	{0x8b52, &op_rsh,	  2,   2, 255, 0xff, 0x01, 0x00, 0x02}, // rsh.dr c c  
	{0x8b53, &op_rsh,	  3,   2, 255, 0xff, 0x01, 0x00, 0x02}, // rsh.dr d c  
	{0x8b54, &op_rsh,	  4,   2, 255, 0xff, 0x01, 0x00, 0x02}, // rsh.dr e c  
	{0x8b55, &op_rsh,	  5,   2, 255, 0xff, 0x01, 0x00, 0x02}, // rsh.dr f c  
	{0x8b56, &op_rsh,	  6,   2, 255, 0xff, 0x01, 0x00, 0x02}, // rsh.dr g c  
	{0x8b57, &op_rsh,	  7,   2, 255, 0xff, 0x01, 0x00, 0x02}, // rsh.dr h c  
	{0x8b58, &op_rsh,	  0,   3, 255, 0xff, 0x01, 0x00, 0x02}, // rsh.dr a d  
	{0x8b59, &op_rsh,	  1,   3, 255, 0xff, 0x01, 0x00, 0x02}, // rsh.dr b d  
	{0x8b5a, &op_rsh,	  2,   3, 255, 0xff, 0x01, 0x00, 0x02}, // rsh.dr c d  
	{0x8b5b, &op_rsh,	  3,   3, 255, 0xff, 0x01, 0x00, 0x02}, // rsh.dr d d  
	{0x8b5c, &op_rsh,	  4,   3, 255, 0xff, 0x01, 0x00, 0x02}, // rsh.dr e d  
	{0x8b5d, &op_rsh,	  5,   3, 255, 0xff, 0x01, 0x00, 0x02}, // rsh.dr f d  
	{0x8b5e, &op_rsh,	  6,   3, 255, 0xff, 0x01, 0x00, 0x02}, // rsh.dr g d  
	{0x8b5f, &op_rsh,	  7,   3, 255, 0xff, 0x01, 0x00, 0x02}, // rsh.dr h d  
	{0x8b60, &op_rsh,	  0,   4, 255, 0xff, 0x01, 0x00, 0x02}, // rsh.dr a e  
	{0x8b61, &op_rsh,	  1,   4, 255, 0xff, 0x01, 0x00, 0x02}, // rsh.dr b e  
	{0x8b62, &op_rsh,	  2,   4, 255, 0xff, 0x01, 0x00, 0x02}, // rsh.dr c e  
	{0x8b63, &op_rsh,	  3,   4, 255, 0xff, 0x01, 0x00, 0x02}, // rsh.dr d e  
	{0x8b64, &op_rsh,	  4,   4, 255, 0xff, 0x01, 0x00, 0x02}, // rsh.dr e e  
	{0x8b65, &op_rsh,	  5,   4, 255, 0xff, 0x01, 0x00, 0x02}, // rsh.dr f e  
	{0x8b66, &op_rsh,	  6,   4, 255, 0xff, 0x01, 0x00, 0x02}, // rsh.dr g e  
	{0x8b67, &op_rsh,	  7,   4, 255, 0xff, 0x01, 0x00, 0x02}, // rsh.dr h e  
	{0x8b68, &op_rsh,	  0,   5, 255, 0xff, 0x01, 0x00, 0x02}, // rsh.dr a f  
	{0x8b69, &op_rsh,	  1,   5, 255, 0xff, 0x01, 0x00, 0x02}, // rsh.dr b f  
	{0x8b6a, &op_rsh,	  2,   5, 255, 0xff, 0x01, 0x00, 0x02}, // rsh.dr c f  
	{0x8b6b, &op_rsh,	  3,   5, 255, 0xff, 0x01, 0x00, 0x02}, // rsh.dr d f  
	{0x8b6c, &op_rsh,	  4,   5, 255, 0xff, 0x01, 0x00, 0x02}, // rsh.dr e f  
	{0x8b6d, &op_rsh,	  5,   5, 255, 0xff, 0x01, 0x00, 0x02}, // rsh.dr f f  
	{0x8b6e, &op_rsh,	  6,   5, 255, 0xff, 0x01, 0x00, 0x02}, // rsh.dr g f  
	{0x8b6f, &op_rsh,	  7,   5, 255, 0xff, 0x01, 0x00, 0x02}, // rsh.dr h f  
	{0x8b70, &op_rsh,	  0,   6, 255, 0xff, 0x01, 0x00, 0x02}, // rsh.dr a g  
	{0x8b71, &op_rsh,	  1,   6, 255, 0xff, 0x01, 0x00, 0x02}, // rsh.dr b g  
	{0x8b72, &op_rsh,	  2,   6, 255, 0xff, 0x01, 0x00, 0x02}, // rsh.dr c g  
	{0x8b73, &op_rsh,	  3,   6, 255, 0xff, 0x01, 0x00, 0x02}, // rsh.dr d g  
	{0x8b74, &op_rsh,	  4,   6, 255, 0xff, 0x01, 0x00, 0x02}, // rsh.dr e g  
	{0x8b75, &op_rsh,	  5,   6, 255, 0xff, 0x01, 0x00, 0x02}, // rsh.dr f g  
	{0x8b76, &op_rsh,	  6,   6, 255, 0xff, 0x01, 0x00, 0x02}, // rsh.dr g g  
	{0x8b77, &op_rsh,	  7,   6, 255, 0xff, 0x01, 0x00, 0x02}, // rsh.dr h g  
	{0x8b78, &op_rsh,	  0,   7, 255, 0xff, 0x01, 0x00, 0x02}, // rsh.dr a h  
	{0x8b79, &op_rsh,	  1,   7, 255, 0xff, 0x01, 0x00, 0x02}, // rsh.dr b h  
	{0x8b7a, &op_rsh,	  2,   7, 255, 0xff, 0x01, 0x00, 0x02}, // rsh.dr c h  
	{0x8b7b, &op_rsh,	  3,   7, 255, 0xff, 0x01, 0x00, 0x02}, // rsh.dr d h  
	{0x8b7c, &op_rsh,	  4,   7, 255, 0xff, 0x01, 0x00, 0x02}, // rsh.dr e h  
	{0x8b7d, &op_rsh,	  5,   7, 255, 0xff, 0x01, 0x00, 0x02}, // rsh.dr f h  
	{0x8b7e, &op_rsh,	  6,   7, 255, 0xff, 0x01, 0x00, 0x02}, // rsh.dr g h  
	{0x8b7f, &op_rsh,	  7,   7, 255, 0xff, 0x01, 0x00, 0x02}, // rsh.dr h h  
	{0x8b80, &op_rsh,	  0,   0, 255, 0xff, 0x01, 0x00, 0x04}, // rsh.r a a  
	{0x8b81, &op_rsh,	  1,   0, 255, 0xff, 0x01, 0x00, 0x04}, // rsh.r b a  
	{0x8b82, &op_rsh,	  2,   0, 255, 0xff, 0x01, 0x00, 0x04}, // rsh.r c a  
	{0x8b83, &op_rsh,	  3,   0, 255, 0xff, 0x01, 0x00, 0x04}, // rsh.r d a  
	{0x8b84, &op_rsh,	  4,   0, 255, 0xff, 0x01, 0x00, 0x04}, // rsh.r e a  
	{0x8b85, &op_rsh,	  5,   0, 255, 0xff, 0x01, 0x00, 0x04}, // rsh.r f a  
	{0x8b86, &op_rsh,	  6,   0, 255, 0xff, 0x01, 0x00, 0x04}, // rsh.r g a  
	{0x8b87, &op_rsh,	  7,   0, 255, 0xff, 0x01, 0x00, 0x04}, // rsh.r h a  
	{0x8b88, &op_rsh,	  0,   1, 255, 0xff, 0x01, 0x00, 0x04}, // rsh.r a b  
	{0x8b89, &op_rsh,	  1,   1, 255, 0xff, 0x01, 0x00, 0x04}, // rsh.r b b  
	{0x8b8a, &op_rsh,	  2,   1, 255, 0xff, 0x01, 0x00, 0x04}, // rsh.r c b  
	{0x8b8b, &op_rsh,	  3,   1, 255, 0xff, 0x01, 0x00, 0x04}, // rsh.r d b  
	{0x8b8c, &op_rsh,	  4,   1, 255, 0xff, 0x01, 0x00, 0x04}, // rsh.r e b  
	{0x8b8d, &op_rsh,	  5,   1, 255, 0xff, 0x01, 0x00, 0x04}, // rsh.r f b  
	{0x8b8e, &op_rsh,	  6,   1, 255, 0xff, 0x01, 0x00, 0x04}, // rsh.r g b  
	{0x8b8f, &op_rsh,	  7,   1, 255, 0xff, 0x01, 0x00, 0x04}, // rsh.r h b  
	{0x8b90, &op_rsh,	  0,   2, 255, 0xff, 0x01, 0x00, 0x04}, // rsh.r a c  
	{0x8b91, &op_rsh,	  1,   2, 255, 0xff, 0x01, 0x00, 0x04}, // rsh.r b c  
	{0x8b92, &op_rsh,	  2,   2, 255, 0xff, 0x01, 0x00, 0x04}, // rsh.r c c  
	{0x8b93, &op_rsh,	  3,   2, 255, 0xff, 0x01, 0x00, 0x04}, // rsh.r d c  
	{0x8b94, &op_rsh,	  4,   2, 255, 0xff, 0x01, 0x00, 0x04}, // rsh.r e c  
	{0x8b95, &op_rsh,	  5,   2, 255, 0xff, 0x01, 0x00, 0x04}, // rsh.r f c  
	{0x8b96, &op_rsh,	  6,   2, 255, 0xff, 0x01, 0x00, 0x04}, // rsh.r g c  
	{0x8b97, &op_rsh,	  7,   2, 255, 0xff, 0x01, 0x00, 0x04}, // rsh.r h c  
	{0x8b98, &op_rsh,	  0,   3, 255, 0xff, 0x01, 0x00, 0x04}, // rsh.r a d  
	{0x8b99, &op_rsh,	  1,   3, 255, 0xff, 0x01, 0x00, 0x04}, // rsh.r b d  
	{0x8b9a, &op_rsh,	  2,   3, 255, 0xff, 0x01, 0x00, 0x04}, // rsh.r c d  
	{0x8b9b, &op_rsh,	  3,   3, 255, 0xff, 0x01, 0x00, 0x04}, // rsh.r d d  
	{0x8b9c, &op_rsh,	  4,   3, 255, 0xff, 0x01, 0x00, 0x04}, // rsh.r e d  
	{0x8b9d, &op_rsh,	  5,   3, 255, 0xff, 0x01, 0x00, 0x04}, // rsh.r f d  
	{0x8b9e, &op_rsh,	  6,   3, 255, 0xff, 0x01, 0x00, 0x04}, // rsh.r g d  
	{0x8b9f, &op_rsh,	  7,   3, 255, 0xff, 0x01, 0x00, 0x04}, // rsh.r h d  
	{0x8ba0, &op_rsh,	  0,   4, 255, 0xff, 0x01, 0x00, 0x04}, // rsh.r a e  
	{0x8ba1, &op_rsh,	  1,   4, 255, 0xff, 0x01, 0x00, 0x04}, // rsh.r b e  
	{0x8ba2, &op_rsh,	  2,   4, 255, 0xff, 0x01, 0x00, 0x04}, // rsh.r c e  
	{0x8ba3, &op_rsh,	  3,   4, 255, 0xff, 0x01, 0x00, 0x04}, // rsh.r d e  
	{0x8ba4, &op_rsh,	  4,   4, 255, 0xff, 0x01, 0x00, 0x04}, // rsh.r e e  
	{0x8ba5, &op_rsh,	  5,   4, 255, 0xff, 0x01, 0x00, 0x04}, // rsh.r f e  
	{0x8ba6, &op_rsh,	  6,   4, 255, 0xff, 0x01, 0x00, 0x04}, // rsh.r g e  
	{0x8ba7, &op_rsh,	  7,   4, 255, 0xff, 0x01, 0x00, 0x04}, // rsh.r h e  
	{0x8ba8, &op_rsh,	  0,   5, 255, 0xff, 0x01, 0x00, 0x04}, // rsh.r a f  
	{0x8ba9, &op_rsh,	  1,   5, 255, 0xff, 0x01, 0x00, 0x04}, // rsh.r b f  
	{0x8baa, &op_rsh,	  2,   5, 255, 0xff, 0x01, 0x00, 0x04}, // rsh.r c f  
	{0x8bab, &op_rsh,	  3,   5, 255, 0xff, 0x01, 0x00, 0x04}, // rsh.r d f  
	{0x8bac, &op_rsh,	  4,   5, 255, 0xff, 0x01, 0x00, 0x04}, // rsh.r e f  
	{0x8bad, &op_rsh,	  5,   5, 255, 0xff, 0x01, 0x00, 0x04}, // rsh.r f f  
	{0x8bae, &op_rsh,	  6,   5, 255, 0xff, 0x01, 0x00, 0x04}, // rsh.r g f  
	{0x8baf, &op_rsh,	  7,   5, 255, 0xff, 0x01, 0x00, 0x04}, // rsh.r h f  
	{0x8bb0, &op_rsh,	  0,   6, 255, 0xff, 0x01, 0x00, 0x04}, // rsh.r a g  
	{0x8bb1, &op_rsh,	  1,   6, 255, 0xff, 0x01, 0x00, 0x04}, // rsh.r b g  
	{0x8bb2, &op_rsh,	  2,   6, 255, 0xff, 0x01, 0x00, 0x04}, // rsh.r c g  
	{0x8bb3, &op_rsh,	  3,   6, 255, 0xff, 0x01, 0x00, 0x04}, // rsh.r d g  
	{0x8bb4, &op_rsh,	  4,   6, 255, 0xff, 0x01, 0x00, 0x04}, // rsh.r e g  
	{0x8bb5, &op_rsh,	  5,   6, 255, 0xff, 0x01, 0x00, 0x04}, // rsh.r f g  
	{0x8bb6, &op_rsh,	  6,   6, 255, 0xff, 0x01, 0x00, 0x04}, // rsh.r g g  
	{0x8bb7, &op_rsh,	  7,   6, 255, 0xff, 0x01, 0x00, 0x04}, // rsh.r h g  
	{0x8bb8, &op_rsh,	  0,   7, 255, 0xff, 0x01, 0x00, 0x04}, // rsh.r a h  
	{0x8bb9, &op_rsh,	  1,   7, 255, 0xff, 0x01, 0x00, 0x04}, // rsh.r b h  
	{0x8bba, &op_rsh,	  2,   7, 255, 0xff, 0x01, 0x00, 0x04}, // rsh.r c h  
	{0x8bbb, &op_rsh,	  3,   7, 255, 0xff, 0x01, 0x00, 0x04}, // rsh.r d h  
	{0x8bbc, &op_rsh,	  4,   7, 255, 0xff, 0x01, 0x00, 0x04}, // rsh.r e h  
	{0x8bbd, &op_rsh,	  5,   7, 255, 0xff, 0x01, 0x00, 0x04}, // rsh.r f h  
	{0x8bbe, &op_rsh,	  6,   7, 255, 0xff, 0x01, 0x00, 0x04}, // rsh.r g h  
	{0x8bbf, &op_rsh,	  7,   7, 255, 0xff, 0x01, 0x00, 0x04}, // rsh.r h h  
	{0x8ac8, &op_rsh,	  0,   8, 255, 0xff, 0x00, 0x01, 0x01}, // rsh.wi a <literal>  
	{0x8ac9, &op_rsh,	  1,   8, 255, 0xff, 0x00, 0x01, 0x01}, // rsh.wi b <literal>  
	{0x8aca, &op_rsh,	  2,   8, 255, 0xff, 0x00, 0x01, 0x01}, // rsh.wi c <literal>  
	{0x8acb, &op_rsh,	  3,   8, 255, 0xff, 0x00, 0x01, 0x01}, // rsh.wi d <literal>  
	{0x8acc, &op_rsh,	  4,   8, 255, 0xff, 0x00, 0x01, 0x01}, // rsh.wi e <literal>  
	{0x8acd, &op_rsh,	  5,   8, 255, 0xff, 0x00, 0x01, 0x01}, // rsh.wi f <literal>  
	{0x8ace, &op_rsh,	  6,   8, 255, 0xff, 0x00, 0x01, 0x01}, // rsh.wi g <literal>  
	{0x8acf, &op_rsh,	  7,   8, 255, 0xff, 0x00, 0x01, 0x01}, // rsh.wi h <literal>  
	{0x8ad0, &op_rsh,	  0,   8, 255, 0xff, 0x00, 0x02, 0x02}, // rsh.di a <literal>  
	{0x8ad1, &op_rsh,	  1,   8, 255, 0xff, 0x00, 0x02, 0x02}, // rsh.di b <literal>  
	{0x8ad2, &op_rsh,	  2,   8, 255, 0xff, 0x00, 0x02, 0x02}, // rsh.di c <literal>  
	{0x8ad3, &op_rsh,	  3,   8, 255, 0xff, 0x00, 0x02, 0x02}, // rsh.di d <literal>  
	{0x8ad4, &op_rsh,	  4,   8, 255, 0xff, 0x00, 0x02, 0x02}, // rsh.di e <literal>  
	{0x8ad5, &op_rsh,	  5,   8, 255, 0xff, 0x00, 0x02, 0x02}, // rsh.di f <literal>  
	{0x8ad6, &op_rsh,	  6,   8, 255, 0xff, 0x00, 0x02, 0x02}, // rsh.di g <literal>  
	{0x8ad7, &op_rsh,	  7,   8, 255, 0xff, 0x00, 0x02, 0x02}, // rsh.di h <literal>  
	{0x8ae0, &op_rsh,	  0,   8, 255, 0xff, 0x00, 0x04, 0x04}, // rsh.i a <literal>  
	{0x8ae1, &op_rsh,	  1,   8, 255, 0xff, 0x00, 0x04, 0x04}, // rsh.i b <literal>  
	{0x8ae2, &op_rsh,	  2,   8, 255, 0xff, 0x00, 0x04, 0x04}, // rsh.i c <literal>  
	{0x8ae3, &op_rsh,	  3,   8, 255, 0xff, 0x00, 0x04, 0x04}, // rsh.i d <literal>  
	{0x8ae4, &op_rsh,	  4,   8, 255, 0xff, 0x00, 0x04, 0x04}, // rsh.i e <literal>  
	{0x8ae5, &op_rsh,	  5,   8, 255, 0xff, 0x00, 0x04, 0x04}, // rsh.i f <literal>  
	{0x8ae6, &op_rsh,	  6,   8, 255, 0xff, 0x00, 0x04, 0x04}, // rsh.i g <literal>  
	{0x8ae7, &op_rsh,	  7,   8, 255, 0xff, 0x00, 0x04, 0x04}, // rsh.i h <literal>  
	{0x8bc8, &op_rsh,	  0,   8, 255, 0xff, 0x01, 0x04, 0x01}, // rsh.wri a <literal>  
	{0x8bc9, &op_rsh,	  1,   8, 255, 0xff, 0x01, 0x04, 0x01}, // rsh.wri b <literal>  
	{0x8bca, &op_rsh,	  2,   8, 255, 0xff, 0x01, 0x04, 0x01}, // rsh.wri c <literal>  
	{0x8bcb, &op_rsh,	  3,   8, 255, 0xff, 0x01, 0x04, 0x01}, // rsh.wri d <literal>  
	{0x8bcc, &op_rsh,	  4,   8, 255, 0xff, 0x01, 0x04, 0x01}, // rsh.wri e <literal>  
	{0x8bcd, &op_rsh,	  5,   8, 255, 0xff, 0x01, 0x04, 0x01}, // rsh.wri f <literal>  
	{0x8bce, &op_rsh,	  6,   8, 255, 0xff, 0x01, 0x04, 0x01}, // rsh.wri g <literal>  
	{0x8bcf, &op_rsh,	  7,   8, 255, 0xff, 0x01, 0x04, 0x01}, // rsh.wri h <literal>  
	{0x8bd0, &op_rsh,	  0,   8, 255, 0xff, 0x01, 0x04, 0x02}, // rsh.dri a <literal>  
	{0x8bd1, &op_rsh,	  1,   8, 255, 0xff, 0x01, 0x04, 0x02}, // rsh.dri b <literal>  
	{0x8bd2, &op_rsh,	  2,   8, 255, 0xff, 0x01, 0x04, 0x02}, // rsh.dri c <literal>  
	{0x8bd3, &op_rsh,	  3,   8, 255, 0xff, 0x01, 0x04, 0x02}, // rsh.dri d <literal>  
	{0x8bd4, &op_rsh,	  4,   8, 255, 0xff, 0x01, 0x04, 0x02}, // rsh.dri e <literal>  
	{0x8bd5, &op_rsh,	  5,   8, 255, 0xff, 0x01, 0x04, 0x02}, // rsh.dri f <literal>  
	{0x8bd6, &op_rsh,	  6,   8, 255, 0xff, 0x01, 0x04, 0x02}, // rsh.dri g <literal>  
	{0x8bd7, &op_rsh,	  7,   8, 255, 0xff, 0x01, 0x04, 0x02}, // rsh.dri h <literal>  
	{0x8be0, &op_rsh,	  0,   8, 255, 0xff, 0x01, 0x04, 0x04}, // rsh.ri a <literal>  
	{0x8be1, &op_rsh,	  1,   8, 255, 0xff, 0x01, 0x04, 0x04}, // rsh.ri b <literal>  
	{0x8be2, &op_rsh,	  2,   8, 255, 0xff, 0x01, 0x04, 0x04}, // rsh.ri c <literal>  
	{0x8be3, &op_rsh,	  3,   8, 255, 0xff, 0x01, 0x04, 0x04}, // rsh.ri d <literal>  
	{0x8be4, &op_rsh,	  4,   8, 255, 0xff, 0x01, 0x04, 0x04}, // rsh.ri e <literal>  
	{0x8be5, &op_rsh,	  5,   8, 255, 0xff, 0x01, 0x04, 0x04}, // rsh.ri f <literal>  
	{0x8be6, &op_rsh,	  6,   8, 255, 0xff, 0x01, 0x04, 0x04}, // rsh.ri g <literal>  
	{0x8be7, &op_rsh,	  7,   8, 255, 0xff, 0x01, 0x04, 0x04}, // rsh.ri h <literal>  
	{0x8c00, &op_div,	  0,   0, 255, 0xff, 0x00, 0x00, 0x01}, // div.w a a  
	{0x8c01, &op_div,	  1,   0, 255, 0xff, 0x00, 0x00, 0x01}, // div.w b a  
	{0x8c02, &op_div,	  2,   0, 255, 0xff, 0x00, 0x00, 0x01}, // div.w c a  
	{0x8c03, &op_div,	  3,   0, 255, 0xff, 0x00, 0x00, 0x01}, // div.w d a  
	{0x8c04, &op_div,	  4,   0, 255, 0xff, 0x00, 0x00, 0x01}, // div.w e a  
	{0x8c05, &op_div,	  5,   0, 255, 0xff, 0x00, 0x00, 0x01}, // div.w f a  
	{0x8c06, &op_div,	  6,   0, 255, 0xff, 0x00, 0x00, 0x01}, // div.w g a  
	{0x8c07, &op_div,	  7,   0, 255, 0xff, 0x00, 0x00, 0x01}, // div.w h a  
	{0x8c08, &op_div,	  0,   1, 255, 0xff, 0x00, 0x00, 0x01}, // div.w a b  
	{0x8c09, &op_div,	  1,   1, 255, 0xff, 0x00, 0x00, 0x01}, // div.w b b  
	{0x8c0a, &op_div,	  2,   1, 255, 0xff, 0x00, 0x00, 0x01}, // div.w c b  
	{0x8c0b, &op_div,	  3,   1, 255, 0xff, 0x00, 0x00, 0x01}, // div.w d b  
	{0x8c0c, &op_div,	  4,   1, 255, 0xff, 0x00, 0x00, 0x01}, // div.w e b  
	{0x8c0d, &op_div,	  5,   1, 255, 0xff, 0x00, 0x00, 0x01}, // div.w f b  
	{0x8c0e, &op_div,	  6,   1, 255, 0xff, 0x00, 0x00, 0x01}, // div.w g b  
	{0x8c0f, &op_div,	  7,   1, 255, 0xff, 0x00, 0x00, 0x01}, // div.w h b  
	{0x8c10, &op_div,	  0,   2, 255, 0xff, 0x00, 0x00, 0x01}, // div.w a c  
	{0x8c11, &op_div,	  1,   2, 255, 0xff, 0x00, 0x00, 0x01}, // div.w b c  
	{0x8c12, &op_div,	  2,   2, 255, 0xff, 0x00, 0x00, 0x01}, // div.w c c  
	{0x8c13, &op_div,	  3,   2, 255, 0xff, 0x00, 0x00, 0x01}, // div.w d c  
	{0x8c14, &op_div,	  4,   2, 255, 0xff, 0x00, 0x00, 0x01}, // div.w e c  
	{0x8c15, &op_div,	  5,   2, 255, 0xff, 0x00, 0x00, 0x01}, // div.w f c  
	{0x8c16, &op_div,	  6,   2, 255, 0xff, 0x00, 0x00, 0x01}, // div.w g c  
	{0x8c17, &op_div,	  7,   2, 255, 0xff, 0x00, 0x00, 0x01}, // div.w h c  
	{0x8c18, &op_div,	  0,   3, 255, 0xff, 0x00, 0x00, 0x01}, // div.w a d  
	{0x8c19, &op_div,	  1,   3, 255, 0xff, 0x00, 0x00, 0x01}, // div.w b d  
	{0x8c1a, &op_div,	  2,   3, 255, 0xff, 0x00, 0x00, 0x01}, // div.w c d  
	{0x8c1b, &op_div,	  3,   3, 255, 0xff, 0x00, 0x00, 0x01}, // div.w d d  
	{0x8c1c, &op_div,	  4,   3, 255, 0xff, 0x00, 0x00, 0x01}, // div.w e d  
	{0x8c1d, &op_div,	  5,   3, 255, 0xff, 0x00, 0x00, 0x01}, // div.w f d  
	{0x8c1e, &op_div,	  6,   3, 255, 0xff, 0x00, 0x00, 0x01}, // div.w g d  
	{0x8c1f, &op_div,	  7,   3, 255, 0xff, 0x00, 0x00, 0x01}, // div.w h d  
	{0x8c20, &op_div,	  0,   4, 255, 0xff, 0x00, 0x00, 0x01}, // div.w a e  
	{0x8c21, &op_div,	  1,   4, 255, 0xff, 0x00, 0x00, 0x01}, // div.w b e  
	{0x8c22, &op_div,	  2,   4, 255, 0xff, 0x00, 0x00, 0x01}, // div.w c e  
	{0x8c23, &op_div,	  3,   4, 255, 0xff, 0x00, 0x00, 0x01}, // div.w d e  
	{0x8c24, &op_div,	  4,   4, 255, 0xff, 0x00, 0x00, 0x01}, // div.w e e  
	{0x8c25, &op_div,	  5,   4, 255, 0xff, 0x00, 0x00, 0x01}, // div.w f e  
	{0x8c26, &op_div,	  6,   4, 255, 0xff, 0x00, 0x00, 0x01}, // div.w g e  
	{0x8c27, &op_div,	  7,   4, 255, 0xff, 0x00, 0x00, 0x01}, // div.w h e  
	{0x8c28, &op_div,	  0,   5, 255, 0xff, 0x00, 0x00, 0x01}, // div.w a f  
	{0x8c29, &op_div,	  1,   5, 255, 0xff, 0x00, 0x00, 0x01}, // div.w b f  
	{0x8c2a, &op_div,	  2,   5, 255, 0xff, 0x00, 0x00, 0x01}, // div.w c f  
	{0x8c2b, &op_div,	  3,   5, 255, 0xff, 0x00, 0x00, 0x01}, // div.w d f  
	{0x8c2c, &op_div,	  4,   5, 255, 0xff, 0x00, 0x00, 0x01}, // div.w e f  
	{0x8c2d, &op_div,	  5,   5, 255, 0xff, 0x00, 0x00, 0x01}, // div.w f f  
	{0x8c2e, &op_div,	  6,   5, 255, 0xff, 0x00, 0x00, 0x01}, // div.w g f  
	{0x8c2f, &op_div,	  7,   5, 255, 0xff, 0x00, 0x00, 0x01}, // div.w h f  
	{0x8c30, &op_div,	  0,   6, 255, 0xff, 0x00, 0x00, 0x01}, // div.w a g  
	{0x8c31, &op_div,	  1,   6, 255, 0xff, 0x00, 0x00, 0x01}, // div.w b g  
	{0x8c32, &op_div,	  2,   6, 255, 0xff, 0x00, 0x00, 0x01}, // div.w c g  
	{0x8c33, &op_div,	  3,   6, 255, 0xff, 0x00, 0x00, 0x01}, // div.w d g  
	{0x8c34, &op_div,	  4,   6, 255, 0xff, 0x00, 0x00, 0x01}, // div.w e g  
	{0x8c35, &op_div,	  5,   6, 255, 0xff, 0x00, 0x00, 0x01}, // div.w f g  
	{0x8c36, &op_div,	  6,   6, 255, 0xff, 0x00, 0x00, 0x01}, // div.w g g  
	{0x8c37, &op_div,	  7,   6, 255, 0xff, 0x00, 0x00, 0x01}, // div.w h g  
	{0x8c38, &op_div,	  0,   7, 255, 0xff, 0x00, 0x00, 0x01}, // div.w a h  
	{0x8c39, &op_div,	  1,   7, 255, 0xff, 0x00, 0x00, 0x01}, // div.w b h  
	{0x8c3a, &op_div,	  2,   7, 255, 0xff, 0x00, 0x00, 0x01}, // div.w c h  
	{0x8c3b, &op_div,	  3,   7, 255, 0xff, 0x00, 0x00, 0x01}, // div.w d h  
	{0x8c3c, &op_div,	  4,   7, 255, 0xff, 0x00, 0x00, 0x01}, // div.w e h  
	{0x8c3d, &op_div,	  5,   7, 255, 0xff, 0x00, 0x00, 0x01}, // div.w f h  
	{0x8c3e, &op_div,	  6,   7, 255, 0xff, 0x00, 0x00, 0x01}, // div.w g h  
	{0x8c3f, &op_div,	  7,   7, 255, 0xff, 0x00, 0x00, 0x01}, // div.w h h  
	{0x8c40, &op_div,	  0,   0, 255, 0xff, 0x00, 0x00, 0x02}, // div.d a a  
	{0x8c41, &op_div,	  1,   0, 255, 0xff, 0x00, 0x00, 0x02}, // div.d b a  
	{0x8c42, &op_div,	  2,   0, 255, 0xff, 0x00, 0x00, 0x02}, // div.d c a  
	{0x8c43, &op_div,	  3,   0, 255, 0xff, 0x00, 0x00, 0x02}, // div.d d a  
	{0x8c44, &op_div,	  4,   0, 255, 0xff, 0x00, 0x00, 0x02}, // div.d e a  
	{0x8c45, &op_div,	  5,   0, 255, 0xff, 0x00, 0x00, 0x02}, // div.d f a  
	{0x8c46, &op_div,	  6,   0, 255, 0xff, 0x00, 0x00, 0x02}, // div.d g a  
	{0x8c47, &op_div,	  7,   0, 255, 0xff, 0x00, 0x00, 0x02}, // div.d h a  
	{0x8c48, &op_div,	  0,   1, 255, 0xff, 0x00, 0x00, 0x02}, // div.d a b  
	{0x8c49, &op_div,	  1,   1, 255, 0xff, 0x00, 0x00, 0x02}, // div.d b b  
	{0x8c4a, &op_div,	  2,   1, 255, 0xff, 0x00, 0x00, 0x02}, // div.d c b  
	{0x8c4b, &op_div,	  3,   1, 255, 0xff, 0x00, 0x00, 0x02}, // div.d d b  
	{0x8c4c, &op_div,	  4,   1, 255, 0xff, 0x00, 0x00, 0x02}, // div.d e b  
	{0x8c4d, &op_div,	  5,   1, 255, 0xff, 0x00, 0x00, 0x02}, // div.d f b  
	{0x8c4e, &op_div,	  6,   1, 255, 0xff, 0x00, 0x00, 0x02}, // div.d g b  
	{0x8c4f, &op_div,	  7,   1, 255, 0xff, 0x00, 0x00, 0x02}, // div.d h b  
	{0x8c50, &op_div,	  0,   2, 255, 0xff, 0x00, 0x00, 0x02}, // div.d a c  
	{0x8c51, &op_div,	  1,   2, 255, 0xff, 0x00, 0x00, 0x02}, // div.d b c  
	{0x8c52, &op_div,	  2,   2, 255, 0xff, 0x00, 0x00, 0x02}, // div.d c c  
	{0x8c53, &op_div,	  3,   2, 255, 0xff, 0x00, 0x00, 0x02}, // div.d d c  
	{0x8c54, &op_div,	  4,   2, 255, 0xff, 0x00, 0x00, 0x02}, // div.d e c  
	{0x8c55, &op_div,	  5,   2, 255, 0xff, 0x00, 0x00, 0x02}, // div.d f c  
	{0x8c56, &op_div,	  6,   2, 255, 0xff, 0x00, 0x00, 0x02}, // div.d g c  
	{0x8c57, &op_div,	  7,   2, 255, 0xff, 0x00, 0x00, 0x02}, // div.d h c  
	{0x8c58, &op_div,	  0,   3, 255, 0xff, 0x00, 0x00, 0x02}, // div.d a d  
	{0x8c59, &op_div,	  1,   3, 255, 0xff, 0x00, 0x00, 0x02}, // div.d b d  
	{0x8c5a, &op_div,	  2,   3, 255, 0xff, 0x00, 0x00, 0x02}, // div.d c d  
	{0x8c5b, &op_div,	  3,   3, 255, 0xff, 0x00, 0x00, 0x02}, // div.d d d  
	{0x8c5c, &op_div,	  4,   3, 255, 0xff, 0x00, 0x00, 0x02}, // div.d e d  
	{0x8c5d, &op_div,	  5,   3, 255, 0xff, 0x00, 0x00, 0x02}, // div.d f d  
	{0x8c5e, &op_div,	  6,   3, 255, 0xff, 0x00, 0x00, 0x02}, // div.d g d  
	{0x8c5f, &op_div,	  7,   3, 255, 0xff, 0x00, 0x00, 0x02}, // div.d h d  
	{0x8c60, &op_div,	  0,   4, 255, 0xff, 0x00, 0x00, 0x02}, // div.d a e  
	{0x8c61, &op_div,	  1,   4, 255, 0xff, 0x00, 0x00, 0x02}, // div.d b e  
	{0x8c62, &op_div,	  2,   4, 255, 0xff, 0x00, 0x00, 0x02}, // div.d c e  
	{0x8c63, &op_div,	  3,   4, 255, 0xff, 0x00, 0x00, 0x02}, // div.d d e  
	{0x8c64, &op_div,	  4,   4, 255, 0xff, 0x00, 0x00, 0x02}, // div.d e e  
	{0x8c65, &op_div,	  5,   4, 255, 0xff, 0x00, 0x00, 0x02}, // div.d f e  
	{0x8c66, &op_div,	  6,   4, 255, 0xff, 0x00, 0x00, 0x02}, // div.d g e  
	{0x8c67, &op_div,	  7,   4, 255, 0xff, 0x00, 0x00, 0x02}, // div.d h e  
	{0x8c68, &op_div,	  0,   5, 255, 0xff, 0x00, 0x00, 0x02}, // div.d a f  
	{0x8c69, &op_div,	  1,   5, 255, 0xff, 0x00, 0x00, 0x02}, // div.d b f  
	{0x8c6a, &op_div,	  2,   5, 255, 0xff, 0x00, 0x00, 0x02}, // div.d c f  
	{0x8c6b, &op_div,	  3,   5, 255, 0xff, 0x00, 0x00, 0x02}, // div.d d f  
	{0x8c6c, &op_div,	  4,   5, 255, 0xff, 0x00, 0x00, 0x02}, // div.d e f  
	{0x8c6d, &op_div,	  5,   5, 255, 0xff, 0x00, 0x00, 0x02}, // div.d f f  
	{0x8c6e, &op_div,	  6,   5, 255, 0xff, 0x00, 0x00, 0x02}, // div.d g f  
	{0x8c6f, &op_div,	  7,   5, 255, 0xff, 0x00, 0x00, 0x02}, // div.d h f  
	{0x8c70, &op_div,	  0,   6, 255, 0xff, 0x00, 0x00, 0x02}, // div.d a g  
	{0x8c71, &op_div,	  1,   6, 255, 0xff, 0x00, 0x00, 0x02}, // div.d b g  
	{0x8c72, &op_div,	  2,   6, 255, 0xff, 0x00, 0x00, 0x02}, // div.d c g  
	{0x8c73, &op_div,	  3,   6, 255, 0xff, 0x00, 0x00, 0x02}, // div.d d g  
	{0x8c74, &op_div,	  4,   6, 255, 0xff, 0x00, 0x00, 0x02}, // div.d e g  
	{0x8c75, &op_div,	  5,   6, 255, 0xff, 0x00, 0x00, 0x02}, // div.d f g  
	{0x8c76, &op_div,	  6,   6, 255, 0xff, 0x00, 0x00, 0x02}, // div.d g g  
	{0x8c77, &op_div,	  7,   6, 255, 0xff, 0x00, 0x00, 0x02}, // div.d h g  
	{0x8c78, &op_div,	  0,   7, 255, 0xff, 0x00, 0x00, 0x02}, // div.d a h  
	{0x8c79, &op_div,	  1,   7, 255, 0xff, 0x00, 0x00, 0x02}, // div.d b h  
	{0x8c7a, &op_div,	  2,   7, 255, 0xff, 0x00, 0x00, 0x02}, // div.d c h  
	{0x8c7b, &op_div,	  3,   7, 255, 0xff, 0x00, 0x00, 0x02}, // div.d d h  
	{0x8c7c, &op_div,	  4,   7, 255, 0xff, 0x00, 0x00, 0x02}, // div.d e h  
	{0x8c7d, &op_div,	  5,   7, 255, 0xff, 0x00, 0x00, 0x02}, // div.d f h  
	{0x8c7e, &op_div,	  6,   7, 255, 0xff, 0x00, 0x00, 0x02}, // div.d g h  
	{0x8c7f, &op_div,	  7,   7, 255, 0xff, 0x00, 0x00, 0x02}, // div.d h h  
	{0x8c80, &op_div,	  0,   0, 255, 0xff, 0x00, 0x00, 0x04}, // div a a  
	{0x8c81, &op_div,	  1,   0, 255, 0xff, 0x00, 0x00, 0x04}, // div b a  
	{0x8c82, &op_div,	  2,   0, 255, 0xff, 0x00, 0x00, 0x04}, // div c a  
	{0x8c83, &op_div,	  3,   0, 255, 0xff, 0x00, 0x00, 0x04}, // div d a  
	{0x8c84, &op_div,	  4,   0, 255, 0xff, 0x00, 0x00, 0x04}, // div e a  
	{0x8c85, &op_div,	  5,   0, 255, 0xff, 0x00, 0x00, 0x04}, // div f a  
	{0x8c86, &op_div,	  6,   0, 255, 0xff, 0x00, 0x00, 0x04}, // div g a  
	{0x8c87, &op_div,	  7,   0, 255, 0xff, 0x00, 0x00, 0x04}, // div h a  
	{0x8c88, &op_div,	  0,   1, 255, 0xff, 0x00, 0x00, 0x04}, // div a b  
	{0x8c89, &op_div,	  1,   1, 255, 0xff, 0x00, 0x00, 0x04}, // div b b  
	{0x8c8a, &op_div,	  2,   1, 255, 0xff, 0x00, 0x00, 0x04}, // div c b  
	{0x8c8b, &op_div,	  3,   1, 255, 0xff, 0x00, 0x00, 0x04}, // div d b  
	{0x8c8c, &op_div,	  4,   1, 255, 0xff, 0x00, 0x00, 0x04}, // div e b  
	{0x8c8d, &op_div,	  5,   1, 255, 0xff, 0x00, 0x00, 0x04}, // div f b  
	{0x8c8e, &op_div,	  6,   1, 255, 0xff, 0x00, 0x00, 0x04}, // div g b  
	{0x8c8f, &op_div,	  7,   1, 255, 0xff, 0x00, 0x00, 0x04}, // div h b  
	{0x8c90, &op_div,	  0,   2, 255, 0xff, 0x00, 0x00, 0x04}, // div a c  
	{0x8c91, &op_div,	  1,   2, 255, 0xff, 0x00, 0x00, 0x04}, // div b c  
	{0x8c92, &op_div,	  2,   2, 255, 0xff, 0x00, 0x00, 0x04}, // div c c  
	{0x8c93, &op_div,	  3,   2, 255, 0xff, 0x00, 0x00, 0x04}, // div d c  
	{0x8c94, &op_div,	  4,   2, 255, 0xff, 0x00, 0x00, 0x04}, // div e c  
	{0x8c95, &op_div,	  5,   2, 255, 0xff, 0x00, 0x00, 0x04}, // div f c  
	{0x8c96, &op_div,	  6,   2, 255, 0xff, 0x00, 0x00, 0x04}, // div g c  
	{0x8c97, &op_div,	  7,   2, 255, 0xff, 0x00, 0x00, 0x04}, // div h c  
	{0x8c98, &op_div,	  0,   3, 255, 0xff, 0x00, 0x00, 0x04}, // div a d  
	{0x8c99, &op_div,	  1,   3, 255, 0xff, 0x00, 0x00, 0x04}, // div b d  
	{0x8c9a, &op_div,	  2,   3, 255, 0xff, 0x00, 0x00, 0x04}, // div c d  
	{0x8c9b, &op_div,	  3,   3, 255, 0xff, 0x00, 0x00, 0x04}, // div d d  
	{0x8c9c, &op_div,	  4,   3, 255, 0xff, 0x00, 0x00, 0x04}, // div e d  
	{0x8c9d, &op_div,	  5,   3, 255, 0xff, 0x00, 0x00, 0x04}, // div f d  
	{0x8c9e, &op_div,	  6,   3, 255, 0xff, 0x00, 0x00, 0x04}, // div g d  
	{0x8c9f, &op_div,	  7,   3, 255, 0xff, 0x00, 0x00, 0x04}, // div h d  
	{0x8ca0, &op_div,	  0,   4, 255, 0xff, 0x00, 0x00, 0x04}, // div a e  
	{0x8ca1, &op_div,	  1,   4, 255, 0xff, 0x00, 0x00, 0x04}, // div b e  
	{0x8ca2, &op_div,	  2,   4, 255, 0xff, 0x00, 0x00, 0x04}, // div c e  
	{0x8ca3, &op_div,	  3,   4, 255, 0xff, 0x00, 0x00, 0x04}, // div d e  
	{0x8ca4, &op_div,	  4,   4, 255, 0xff, 0x00, 0x00, 0x04}, // div e e  
	{0x8ca5, &op_div,	  5,   4, 255, 0xff, 0x00, 0x00, 0x04}, // div f e  
	{0x8ca6, &op_div,	  6,   4, 255, 0xff, 0x00, 0x00, 0x04}, // div g e  
	{0x8ca7, &op_div,	  7,   4, 255, 0xff, 0x00, 0x00, 0x04}, // div h e  
	{0x8ca8, &op_div,	  0,   5, 255, 0xff, 0x00, 0x00, 0x04}, // div a f  
	{0x8ca9, &op_div,	  1,   5, 255, 0xff, 0x00, 0x00, 0x04}, // div b f  
	{0x8caa, &op_div,	  2,   5, 255, 0xff, 0x00, 0x00, 0x04}, // div c f  
	{0x8cab, &op_div,	  3,   5, 255, 0xff, 0x00, 0x00, 0x04}, // div d f  
	{0x8cac, &op_div,	  4,   5, 255, 0xff, 0x00, 0x00, 0x04}, // div e f  
	{0x8cad, &op_div,	  5,   5, 255, 0xff, 0x00, 0x00, 0x04}, // div f f  
	{0x8cae, &op_div,	  6,   5, 255, 0xff, 0x00, 0x00, 0x04}, // div g f  
	{0x8caf, &op_div,	  7,   5, 255, 0xff, 0x00, 0x00, 0x04}, // div h f  
	{0x8cb0, &op_div,	  0,   6, 255, 0xff, 0x00, 0x00, 0x04}, // div a g  
	{0x8cb1, &op_div,	  1,   6, 255, 0xff, 0x00, 0x00, 0x04}, // div b g  
	{0x8cb2, &op_div,	  2,   6, 255, 0xff, 0x00, 0x00, 0x04}, // div c g  
	{0x8cb3, &op_div,	  3,   6, 255, 0xff, 0x00, 0x00, 0x04}, // div d g  
	{0x8cb4, &op_div,	  4,   6, 255, 0xff, 0x00, 0x00, 0x04}, // div e g  
	{0x8cb5, &op_div,	  5,   6, 255, 0xff, 0x00, 0x00, 0x04}, // div f g  
	{0x8cb6, &op_div,	  6,   6, 255, 0xff, 0x00, 0x00, 0x04}, // div g g  
	{0x8cb7, &op_div,	  7,   6, 255, 0xff, 0x00, 0x00, 0x04}, // div h g  
	{0x8cb8, &op_div,	  0,   7, 255, 0xff, 0x00, 0x00, 0x04}, // div a h  
	{0x8cb9, &op_div,	  1,   7, 255, 0xff, 0x00, 0x00, 0x04}, // div b h  
	{0x8cba, &op_div,	  2,   7, 255, 0xff, 0x00, 0x00, 0x04}, // div c h  
	{0x8cbb, &op_div,	  3,   7, 255, 0xff, 0x00, 0x00, 0x04}, // div d h  
	{0x8cbc, &op_div,	  4,   7, 255, 0xff, 0x00, 0x00, 0x04}, // div e h  
	{0x8cbd, &op_div,	  5,   7, 255, 0xff, 0x00, 0x00, 0x04}, // div f h  
	{0x8cbe, &op_div,	  6,   7, 255, 0xff, 0x00, 0x00, 0x04}, // div g h  
	{0x8cbf, &op_div,	  7,   7, 255, 0xff, 0x00, 0x00, 0x04}, // div h h  
	{0x8d00, &op_div,	  0,   0, 255, 0xff, 0x01, 0x00, 0x01}, // div.wr a a  
	{0x8d01, &op_div,	  1,   0, 255, 0xff, 0x01, 0x00, 0x01}, // div.wr b a  
	{0x8d02, &op_div,	  2,   0, 255, 0xff, 0x01, 0x00, 0x01}, // div.wr c a  
	{0x8d03, &op_div,	  3,   0, 255, 0xff, 0x01, 0x00, 0x01}, // div.wr d a  
	{0x8d04, &op_div,	  4,   0, 255, 0xff, 0x01, 0x00, 0x01}, // div.wr e a  
	{0x8d05, &op_div,	  5,   0, 255, 0xff, 0x01, 0x00, 0x01}, // div.wr f a  
	{0x8d06, &op_div,	  6,   0, 255, 0xff, 0x01, 0x00, 0x01}, // div.wr g a  
	{0x8d07, &op_div,	  7,   0, 255, 0xff, 0x01, 0x00, 0x01}, // div.wr h a  
	{0x8d08, &op_div,	  0,   1, 255, 0xff, 0x01, 0x00, 0x01}, // div.wr a b  
	{0x8d09, &op_div,	  1,   1, 255, 0xff, 0x01, 0x00, 0x01}, // div.wr b b  
	{0x8d0a, &op_div,	  2,   1, 255, 0xff, 0x01, 0x00, 0x01}, // div.wr c b  
	{0x8d0b, &op_div,	  3,   1, 255, 0xff, 0x01, 0x00, 0x01}, // div.wr d b  
	{0x8d0c, &op_div,	  4,   1, 255, 0xff, 0x01, 0x00, 0x01}, // div.wr e b  
	{0x8d0d, &op_div,	  5,   1, 255, 0xff, 0x01, 0x00, 0x01}, // div.wr f b  
	{0x8d0e, &op_div,	  6,   1, 255, 0xff, 0x01, 0x00, 0x01}, // div.wr g b  
	{0x8d0f, &op_div,	  7,   1, 255, 0xff, 0x01, 0x00, 0x01}, // div.wr h b  
	{0x8d10, &op_div,	  0,   2, 255, 0xff, 0x01, 0x00, 0x01}, // div.wr a c  
	{0x8d11, &op_div,	  1,   2, 255, 0xff, 0x01, 0x00, 0x01}, // div.wr b c  
	{0x8d12, &op_div,	  2,   2, 255, 0xff, 0x01, 0x00, 0x01}, // div.wr c c  
	{0x8d13, &op_div,	  3,   2, 255, 0xff, 0x01, 0x00, 0x01}, // div.wr d c  
	{0x8d14, &op_div,	  4,   2, 255, 0xff, 0x01, 0x00, 0x01}, // div.wr e c  
	{0x8d15, &op_div,	  5,   2, 255, 0xff, 0x01, 0x00, 0x01}, // div.wr f c  
	{0x8d16, &op_div,	  6,   2, 255, 0xff, 0x01, 0x00, 0x01}, // div.wr g c  
	{0x8d17, &op_div,	  7,   2, 255, 0xff, 0x01, 0x00, 0x01}, // div.wr h c  
	{0x8d18, &op_div,	  0,   3, 255, 0xff, 0x01, 0x00, 0x01}, // div.wr a d  
	{0x8d19, &op_div,	  1,   3, 255, 0xff, 0x01, 0x00, 0x01}, // div.wr b d  
	{0x8d1a, &op_div,	  2,   3, 255, 0xff, 0x01, 0x00, 0x01}, // div.wr c d  
	{0x8d1b, &op_div,	  3,   3, 255, 0xff, 0x01, 0x00, 0x01}, // div.wr d d  
	{0x8d1c, &op_div,	  4,   3, 255, 0xff, 0x01, 0x00, 0x01}, // div.wr e d  
	{0x8d1d, &op_div,	  5,   3, 255, 0xff, 0x01, 0x00, 0x01}, // div.wr f d  
	{0x8d1e, &op_div,	  6,   3, 255, 0xff, 0x01, 0x00, 0x01}, // div.wr g d  
	{0x8d1f, &op_div,	  7,   3, 255, 0xff, 0x01, 0x00, 0x01}, // div.wr h d  
	{0x8d20, &op_div,	  0,   4, 255, 0xff, 0x01, 0x00, 0x01}, // div.wr a e  
	{0x8d21, &op_div,	  1,   4, 255, 0xff, 0x01, 0x00, 0x01}, // div.wr b e  
	{0x8d22, &op_div,	  2,   4, 255, 0xff, 0x01, 0x00, 0x01}, // div.wr c e  
	{0x8d23, &op_div,	  3,   4, 255, 0xff, 0x01, 0x00, 0x01}, // div.wr d e  
	{0x8d24, &op_div,	  4,   4, 255, 0xff, 0x01, 0x00, 0x01}, // div.wr e e  
	{0x8d25, &op_div,	  5,   4, 255, 0xff, 0x01, 0x00, 0x01}, // div.wr f e  
	{0x8d26, &op_div,	  6,   4, 255, 0xff, 0x01, 0x00, 0x01}, // div.wr g e  
	{0x8d27, &op_div,	  7,   4, 255, 0xff, 0x01, 0x00, 0x01}, // div.wr h e  
	{0x8d28, &op_div,	  0,   5, 255, 0xff, 0x01, 0x00, 0x01}, // div.wr a f  
	{0x8d29, &op_div,	  1,   5, 255, 0xff, 0x01, 0x00, 0x01}, // div.wr b f  
	{0x8d2a, &op_div,	  2,   5, 255, 0xff, 0x01, 0x00, 0x01}, // div.wr c f  
	{0x8d2b, &op_div,	  3,   5, 255, 0xff, 0x01, 0x00, 0x01}, // div.wr d f  
	{0x8d2c, &op_div,	  4,   5, 255, 0xff, 0x01, 0x00, 0x01}, // div.wr e f  
	{0x8d2d, &op_div,	  5,   5, 255, 0xff, 0x01, 0x00, 0x01}, // div.wr f f  
	{0x8d2e, &op_div,	  6,   5, 255, 0xff, 0x01, 0x00, 0x01}, // div.wr g f  
	{0x8d2f, &op_div,	  7,   5, 255, 0xff, 0x01, 0x00, 0x01}, // div.wr h f  
	{0x8d30, &op_div,	  0,   6, 255, 0xff, 0x01, 0x00, 0x01}, // div.wr a g  
	{0x8d31, &op_div,	  1,   6, 255, 0xff, 0x01, 0x00, 0x01}, // div.wr b g  
	{0x8d32, &op_div,	  2,   6, 255, 0xff, 0x01, 0x00, 0x01}, // div.wr c g  
	{0x8d33, &op_div,	  3,   6, 255, 0xff, 0x01, 0x00, 0x01}, // div.wr d g  
	{0x8d34, &op_div,	  4,   6, 255, 0xff, 0x01, 0x00, 0x01}, // div.wr e g  
	{0x8d35, &op_div,	  5,   6, 255, 0xff, 0x01, 0x00, 0x01}, // div.wr f g  
	{0x8d36, &op_div,	  6,   6, 255, 0xff, 0x01, 0x00, 0x01}, // div.wr g g  
	{0x8d37, &op_div,	  7,   6, 255, 0xff, 0x01, 0x00, 0x01}, // div.wr h g  
	{0x8d38, &op_div,	  0,   7, 255, 0xff, 0x01, 0x00, 0x01}, // div.wr a h  
	{0x8d39, &op_div,	  1,   7, 255, 0xff, 0x01, 0x00, 0x01}, // div.wr b h  
	{0x8d3a, &op_div,	  2,   7, 255, 0xff, 0x01, 0x00, 0x01}, // div.wr c h  
	{0x8d3b, &op_div,	  3,   7, 255, 0xff, 0x01, 0x00, 0x01}, // div.wr d h  
	{0x8d3c, &op_div,	  4,   7, 255, 0xff, 0x01, 0x00, 0x01}, // div.wr e h  
	{0x8d3d, &op_div,	  5,   7, 255, 0xff, 0x01, 0x00, 0x01}, // div.wr f h  
	{0x8d3e, &op_div,	  6,   7, 255, 0xff, 0x01, 0x00, 0x01}, // div.wr g h  
	{0x8d3f, &op_div,	  7,   7, 255, 0xff, 0x01, 0x00, 0x01}, // div.wr h h  
	{0x8d40, &op_div,	  0,   0, 255, 0xff, 0x01, 0x00, 0x02}, // div.dr a a  
	{0x8d41, &op_div,	  1,   0, 255, 0xff, 0x01, 0x00, 0x02}, // div.dr b a  
	{0x8d42, &op_div,	  2,   0, 255, 0xff, 0x01, 0x00, 0x02}, // div.dr c a  
	{0x8d43, &op_div,	  3,   0, 255, 0xff, 0x01, 0x00, 0x02}, // div.dr d a  
	{0x8d44, &op_div,	  4,   0, 255, 0xff, 0x01, 0x00, 0x02}, // div.dr e a  
	{0x8d45, &op_div,	  5,   0, 255, 0xff, 0x01, 0x00, 0x02}, // div.dr f a  
	{0x8d46, &op_div,	  6,   0, 255, 0xff, 0x01, 0x00, 0x02}, // div.dr g a  
	{0x8d47, &op_div,	  7,   0, 255, 0xff, 0x01, 0x00, 0x02}, // div.dr h a  
	{0x8d48, &op_div,	  0,   1, 255, 0xff, 0x01, 0x00, 0x02}, // div.dr a b  
	{0x8d49, &op_div,	  1,   1, 255, 0xff, 0x01, 0x00, 0x02}, // div.dr b b  
	{0x8d4a, &op_div,	  2,   1, 255, 0xff, 0x01, 0x00, 0x02}, // div.dr c b  
	{0x8d4b, &op_div,	  3,   1, 255, 0xff, 0x01, 0x00, 0x02}, // div.dr d b  
	{0x8d4c, &op_div,	  4,   1, 255, 0xff, 0x01, 0x00, 0x02}, // div.dr e b  
	{0x8d4d, &op_div,	  5,   1, 255, 0xff, 0x01, 0x00, 0x02}, // div.dr f b  
	{0x8d4e, &op_div,	  6,   1, 255, 0xff, 0x01, 0x00, 0x02}, // div.dr g b  
	{0x8d4f, &op_div,	  7,   1, 255, 0xff, 0x01, 0x00, 0x02}, // div.dr h b  
	{0x8d50, &op_div,	  0,   2, 255, 0xff, 0x01, 0x00, 0x02}, // div.dr a c  
	{0x8d51, &op_div,	  1,   2, 255, 0xff, 0x01, 0x00, 0x02}, // div.dr b c  
	{0x8d52, &op_div,	  2,   2, 255, 0xff, 0x01, 0x00, 0x02}, // div.dr c c  
	{0x8d53, &op_div,	  3,   2, 255, 0xff, 0x01, 0x00, 0x02}, // div.dr d c  
	{0x8d54, &op_div,	  4,   2, 255, 0xff, 0x01, 0x00, 0x02}, // div.dr e c  
	{0x8d55, &op_div,	  5,   2, 255, 0xff, 0x01, 0x00, 0x02}, // div.dr f c  
	{0x8d56, &op_div,	  6,   2, 255, 0xff, 0x01, 0x00, 0x02}, // div.dr g c  
	{0x8d57, &op_div,	  7,   2, 255, 0xff, 0x01, 0x00, 0x02}, // div.dr h c  
	{0x8d58, &op_div,	  0,   3, 255, 0xff, 0x01, 0x00, 0x02}, // div.dr a d  
	{0x8d59, &op_div,	  1,   3, 255, 0xff, 0x01, 0x00, 0x02}, // div.dr b d  
	{0x8d5a, &op_div,	  2,   3, 255, 0xff, 0x01, 0x00, 0x02}, // div.dr c d  
	{0x8d5b, &op_div,	  3,   3, 255, 0xff, 0x01, 0x00, 0x02}, // div.dr d d  
	{0x8d5c, &op_div,	  4,   3, 255, 0xff, 0x01, 0x00, 0x02}, // div.dr e d  
	{0x8d5d, &op_div,	  5,   3, 255, 0xff, 0x01, 0x00, 0x02}, // div.dr f d  
	{0x8d5e, &op_div,	  6,   3, 255, 0xff, 0x01, 0x00, 0x02}, // div.dr g d  
	{0x8d5f, &op_div,	  7,   3, 255, 0xff, 0x01, 0x00, 0x02}, // div.dr h d  
	{0x8d60, &op_div,	  0,   4, 255, 0xff, 0x01, 0x00, 0x02}, // div.dr a e  
	{0x8d61, &op_div,	  1,   4, 255, 0xff, 0x01, 0x00, 0x02}, // div.dr b e  
	{0x8d62, &op_div,	  2,   4, 255, 0xff, 0x01, 0x00, 0x02}, // div.dr c e  
	{0x8d63, &op_div,	  3,   4, 255, 0xff, 0x01, 0x00, 0x02}, // div.dr d e  
	{0x8d64, &op_div,	  4,   4, 255, 0xff, 0x01, 0x00, 0x02}, // div.dr e e  
	{0x8d65, &op_div,	  5,   4, 255, 0xff, 0x01, 0x00, 0x02}, // div.dr f e  
	{0x8d66, &op_div,	  6,   4, 255, 0xff, 0x01, 0x00, 0x02}, // div.dr g e  
	{0x8d67, &op_div,	  7,   4, 255, 0xff, 0x01, 0x00, 0x02}, // div.dr h e  
	{0x8d68, &op_div,	  0,   5, 255, 0xff, 0x01, 0x00, 0x02}, // div.dr a f  
	{0x8d69, &op_div,	  1,   5, 255, 0xff, 0x01, 0x00, 0x02}, // div.dr b f  
	{0x8d6a, &op_div,	  2,   5, 255, 0xff, 0x01, 0x00, 0x02}, // div.dr c f  
	{0x8d6b, &op_div,	  3,   5, 255, 0xff, 0x01, 0x00, 0x02}, // div.dr d f  
	{0x8d6c, &op_div,	  4,   5, 255, 0xff, 0x01, 0x00, 0x02}, // div.dr e f  
	{0x8d6d, &op_div,	  5,   5, 255, 0xff, 0x01, 0x00, 0x02}, // div.dr f f  
	{0x8d6e, &op_div,	  6,   5, 255, 0xff, 0x01, 0x00, 0x02}, // div.dr g f  
	{0x8d6f, &op_div,	  7,   5, 255, 0xff, 0x01, 0x00, 0x02}, // div.dr h f  
	{0x8d70, &op_div,	  0,   6, 255, 0xff, 0x01, 0x00, 0x02}, // div.dr a g  
	{0x8d71, &op_div,	  1,   6, 255, 0xff, 0x01, 0x00, 0x02}, // div.dr b g  
	{0x8d72, &op_div,	  2,   6, 255, 0xff, 0x01, 0x00, 0x02}, // div.dr c g  
	{0x8d73, &op_div,	  3,   6, 255, 0xff, 0x01, 0x00, 0x02}, // div.dr d g  
	{0x8d74, &op_div,	  4,   6, 255, 0xff, 0x01, 0x00, 0x02}, // div.dr e g  
	{0x8d75, &op_div,	  5,   6, 255, 0xff, 0x01, 0x00, 0x02}, // div.dr f g  
	{0x8d76, &op_div,	  6,   6, 255, 0xff, 0x01, 0x00, 0x02}, // div.dr g g  
	{0x8d77, &op_div,	  7,   6, 255, 0xff, 0x01, 0x00, 0x02}, // div.dr h g  
	{0x8d78, &op_div,	  0,   7, 255, 0xff, 0x01, 0x00, 0x02}, // div.dr a h  
	{0x8d79, &op_div,	  1,   7, 255, 0xff, 0x01, 0x00, 0x02}, // div.dr b h  
	{0x8d7a, &op_div,	  2,   7, 255, 0xff, 0x01, 0x00, 0x02}, // div.dr c h  
	{0x8d7b, &op_div,	  3,   7, 255, 0xff, 0x01, 0x00, 0x02}, // div.dr d h  
	{0x8d7c, &op_div,	  4,   7, 255, 0xff, 0x01, 0x00, 0x02}, // div.dr e h  
	{0x8d7d, &op_div,	  5,   7, 255, 0xff, 0x01, 0x00, 0x02}, // div.dr f h  
	{0x8d7e, &op_div,	  6,   7, 255, 0xff, 0x01, 0x00, 0x02}, // div.dr g h  
	{0x8d7f, &op_div,	  7,   7, 255, 0xff, 0x01, 0x00, 0x02}, // div.dr h h  
	{0x8d80, &op_div,	  0,   0, 255, 0xff, 0x01, 0x00, 0x04}, // div.r a a  
	{0x8d81, &op_div,	  1,   0, 255, 0xff, 0x01, 0x00, 0x04}, // div.r b a  
	{0x8d82, &op_div,	  2,   0, 255, 0xff, 0x01, 0x00, 0x04}, // div.r c a  
	{0x8d83, &op_div,	  3,   0, 255, 0xff, 0x01, 0x00, 0x04}, // div.r d a  
	{0x8d84, &op_div,	  4,   0, 255, 0xff, 0x01, 0x00, 0x04}, // div.r e a  
	{0x8d85, &op_div,	  5,   0, 255, 0xff, 0x01, 0x00, 0x04}, // div.r f a  
	{0x8d86, &op_div,	  6,   0, 255, 0xff, 0x01, 0x00, 0x04}, // div.r g a  
	{0x8d87, &op_div,	  7,   0, 255, 0xff, 0x01, 0x00, 0x04}, // div.r h a  
	{0x8d88, &op_div,	  0,   1, 255, 0xff, 0x01, 0x00, 0x04}, // div.r a b  
	{0x8d89, &op_div,	  1,   1, 255, 0xff, 0x01, 0x00, 0x04}, // div.r b b  
	{0x8d8a, &op_div,	  2,   1, 255, 0xff, 0x01, 0x00, 0x04}, // div.r c b  
	{0x8d8b, &op_div,	  3,   1, 255, 0xff, 0x01, 0x00, 0x04}, // div.r d b  
	{0x8d8c, &op_div,	  4,   1, 255, 0xff, 0x01, 0x00, 0x04}, // div.r e b  
	{0x8d8d, &op_div,	  5,   1, 255, 0xff, 0x01, 0x00, 0x04}, // div.r f b  
	{0x8d8e, &op_div,	  6,   1, 255, 0xff, 0x01, 0x00, 0x04}, // div.r g b  
	{0x8d8f, &op_div,	  7,   1, 255, 0xff, 0x01, 0x00, 0x04}, // div.r h b  
	{0x8d90, &op_div,	  0,   2, 255, 0xff, 0x01, 0x00, 0x04}, // div.r a c  
	{0x8d91, &op_div,	  1,   2, 255, 0xff, 0x01, 0x00, 0x04}, // div.r b c  
	{0x8d92, &op_div,	  2,   2, 255, 0xff, 0x01, 0x00, 0x04}, // div.r c c  
	{0x8d93, &op_div,	  3,   2, 255, 0xff, 0x01, 0x00, 0x04}, // div.r d c  
	{0x8d94, &op_div,	  4,   2, 255, 0xff, 0x01, 0x00, 0x04}, // div.r e c  
	{0x8d95, &op_div,	  5,   2, 255, 0xff, 0x01, 0x00, 0x04}, // div.r f c  
	{0x8d96, &op_div,	  6,   2, 255, 0xff, 0x01, 0x00, 0x04}, // div.r g c  
	{0x8d97, &op_div,	  7,   2, 255, 0xff, 0x01, 0x00, 0x04}, // div.r h c  
	{0x8d98, &op_div,	  0,   3, 255, 0xff, 0x01, 0x00, 0x04}, // div.r a d  
	{0x8d99, &op_div,	  1,   3, 255, 0xff, 0x01, 0x00, 0x04}, // div.r b d  
	{0x8d9a, &op_div,	  2,   3, 255, 0xff, 0x01, 0x00, 0x04}, // div.r c d  
	{0x8d9b, &op_div,	  3,   3, 255, 0xff, 0x01, 0x00, 0x04}, // div.r d d  
	{0x8d9c, &op_div,	  4,   3, 255, 0xff, 0x01, 0x00, 0x04}, // div.r e d  
	{0x8d9d, &op_div,	  5,   3, 255, 0xff, 0x01, 0x00, 0x04}, // div.r f d  
	{0x8d9e, &op_div,	  6,   3, 255, 0xff, 0x01, 0x00, 0x04}, // div.r g d  
	{0x8d9f, &op_div,	  7,   3, 255, 0xff, 0x01, 0x00, 0x04}, // div.r h d  
	{0x8da0, &op_div,	  0,   4, 255, 0xff, 0x01, 0x00, 0x04}, // div.r a e  
	{0x8da1, &op_div,	  1,   4, 255, 0xff, 0x01, 0x00, 0x04}, // div.r b e  
	{0x8da2, &op_div,	  2,   4, 255, 0xff, 0x01, 0x00, 0x04}, // div.r c e  
	{0x8da3, &op_div,	  3,   4, 255, 0xff, 0x01, 0x00, 0x04}, // div.r d e  
	{0x8da4, &op_div,	  4,   4, 255, 0xff, 0x01, 0x00, 0x04}, // div.r e e  
	{0x8da5, &op_div,	  5,   4, 255, 0xff, 0x01, 0x00, 0x04}, // div.r f e  
	{0x8da6, &op_div,	  6,   4, 255, 0xff, 0x01, 0x00, 0x04}, // div.r g e  
	{0x8da7, &op_div,	  7,   4, 255, 0xff, 0x01, 0x00, 0x04}, // div.r h e  
	{0x8da8, &op_div,	  0,   5, 255, 0xff, 0x01, 0x00, 0x04}, // div.r a f  
	{0x8da9, &op_div,	  1,   5, 255, 0xff, 0x01, 0x00, 0x04}, // div.r b f  
	{0x8daa, &op_div,	  2,   5, 255, 0xff, 0x01, 0x00, 0x04}, // div.r c f  
	{0x8dab, &op_div,	  3,   5, 255, 0xff, 0x01, 0x00, 0x04}, // div.r d f  
	{0x8dac, &op_div,	  4,   5, 255, 0xff, 0x01, 0x00, 0x04}, // div.r e f  
	{0x8dad, &op_div,	  5,   5, 255, 0xff, 0x01, 0x00, 0x04}, // div.r f f  
	{0x8dae, &op_div,	  6,   5, 255, 0xff, 0x01, 0x00, 0x04}, // div.r g f  
	{0x8daf, &op_div,	  7,   5, 255, 0xff, 0x01, 0x00, 0x04}, // div.r h f  
	{0x8db0, &op_div,	  0,   6, 255, 0xff, 0x01, 0x00, 0x04}, // div.r a g  
	{0x8db1, &op_div,	  1,   6, 255, 0xff, 0x01, 0x00, 0x04}, // div.r b g  
	{0x8db2, &op_div,	  2,   6, 255, 0xff, 0x01, 0x00, 0x04}, // div.r c g  
	{0x8db3, &op_div,	  3,   6, 255, 0xff, 0x01, 0x00, 0x04}, // div.r d g  
	{0x8db4, &op_div,	  4,   6, 255, 0xff, 0x01, 0x00, 0x04}, // div.r e g  
	{0x8db5, &op_div,	  5,   6, 255, 0xff, 0x01, 0x00, 0x04}, // div.r f g  
	{0x8db6, &op_div,	  6,   6, 255, 0xff, 0x01, 0x00, 0x04}, // div.r g g  
	{0x8db7, &op_div,	  7,   6, 255, 0xff, 0x01, 0x00, 0x04}, // div.r h g  
	{0x8db8, &op_div,	  0,   7, 255, 0xff, 0x01, 0x00, 0x04}, // div.r a h  
	{0x8db9, &op_div,	  1,   7, 255, 0xff, 0x01, 0x00, 0x04}, // div.r b h  
	{0x8dba, &op_div,	  2,   7, 255, 0xff, 0x01, 0x00, 0x04}, // div.r c h  
	{0x8dbb, &op_div,	  3,   7, 255, 0xff, 0x01, 0x00, 0x04}, // div.r d h  
	{0x8dbc, &op_div,	  4,   7, 255, 0xff, 0x01, 0x00, 0x04}, // div.r e h  
	{0x8dbd, &op_div,	  5,   7, 255, 0xff, 0x01, 0x00, 0x04}, // div.r f h  
	{0x8dbe, &op_div,	  6,   7, 255, 0xff, 0x01, 0x00, 0x04}, // div.r g h  
	{0x8dbf, &op_div,	  7,   7, 255, 0xff, 0x01, 0x00, 0x04}, // div.r h h  
	{0x8cc8, &op_div,	  0,   8, 255, 0xff, 0x00, 0x01, 0x01}, // div.wi a <literal>  
	{0x8cc9, &op_div,	  1,   8, 255, 0xff, 0x00, 0x01, 0x01}, // div.wi b <literal>  
	{0x8cca, &op_div,	  2,   8, 255, 0xff, 0x00, 0x01, 0x01}, // div.wi c <literal>  
	{0x8ccb, &op_div,	  3,   8, 255, 0xff, 0x00, 0x01, 0x01}, // div.wi d <literal>  
	{0x8ccc, &op_div,	  4,   8, 255, 0xff, 0x00, 0x01, 0x01}, // div.wi e <literal>  
	{0x8ccd, &op_div,	  5,   8, 255, 0xff, 0x00, 0x01, 0x01}, // div.wi f <literal>  
	{0x8cce, &op_div,	  6,   8, 255, 0xff, 0x00, 0x01, 0x01}, // div.wi g <literal>  
	{0x8ccf, &op_div,	  7,   8, 255, 0xff, 0x00, 0x01, 0x01}, // div.wi h <literal>  
	{0x8cd0, &op_div,	  0,   8, 255, 0xff, 0x00, 0x02, 0x02}, // div.di a <literal>  
	{0x8cd1, &op_div,	  1,   8, 255, 0xff, 0x00, 0x02, 0x02}, // div.di b <literal>  
	{0x8cd2, &op_div,	  2,   8, 255, 0xff, 0x00, 0x02, 0x02}, // div.di c <literal>  
	{0x8cd3, &op_div,	  3,   8, 255, 0xff, 0x00, 0x02, 0x02}, // div.di d <literal>  
	{0x8cd4, &op_div,	  4,   8, 255, 0xff, 0x00, 0x02, 0x02}, // div.di e <literal>  
	{0x8cd5, &op_div,	  5,   8, 255, 0xff, 0x00, 0x02, 0x02}, // div.di f <literal>  
	{0x8cd6, &op_div,	  6,   8, 255, 0xff, 0x00, 0x02, 0x02}, // div.di g <literal>  
	{0x8cd7, &op_div,	  7,   8, 255, 0xff, 0x00, 0x02, 0x02}, // div.di h <literal>  
	{0x8ce0, &op_div,	  0,   8, 255, 0xff, 0x00, 0x04, 0x04}, // div.i a <literal>  
	{0x8ce1, &op_div,	  1,   8, 255, 0xff, 0x00, 0x04, 0x04}, // div.i b <literal>  
	{0x8ce2, &op_div,	  2,   8, 255, 0xff, 0x00, 0x04, 0x04}, // div.i c <literal>  
	{0x8ce3, &op_div,	  3,   8, 255, 0xff, 0x00, 0x04, 0x04}, // div.i d <literal>  
	{0x8ce4, &op_div,	  4,   8, 255, 0xff, 0x00, 0x04, 0x04}, // div.i e <literal>  
	{0x8ce5, &op_div,	  5,   8, 255, 0xff, 0x00, 0x04, 0x04}, // div.i f <literal>  
	{0x8ce6, &op_div,	  6,   8, 255, 0xff, 0x00, 0x04, 0x04}, // div.i g <literal>  
	{0x8ce7, &op_div,	  7,   8, 255, 0xff, 0x00, 0x04, 0x04}, // div.i h <literal>  
	{0x8dc8, &op_div,	  0,   8, 255, 0xff, 0x01, 0x04, 0x01}, // div.wri a <literal>  
	{0x8dc9, &op_div,	  1,   8, 255, 0xff, 0x01, 0x04, 0x01}, // div.wri b <literal>  
	{0x8dca, &op_div,	  2,   8, 255, 0xff, 0x01, 0x04, 0x01}, // div.wri c <literal>  
	{0x8dcb, &op_div,	  3,   8, 255, 0xff, 0x01, 0x04, 0x01}, // div.wri d <literal>  
	{0x8dcc, &op_div,	  4,   8, 255, 0xff, 0x01, 0x04, 0x01}, // div.wri e <literal>  
	{0x8dcd, &op_div,	  5,   8, 255, 0xff, 0x01, 0x04, 0x01}, // div.wri f <literal>  
	{0x8dce, &op_div,	  6,   8, 255, 0xff, 0x01, 0x04, 0x01}, // div.wri g <literal>  
	{0x8dcf, &op_div,	  7,   8, 255, 0xff, 0x01, 0x04, 0x01}, // div.wri h <literal>  
	{0x8dd0, &op_div,	  0,   8, 255, 0xff, 0x01, 0x04, 0x02}, // div.dri a <literal>  
	{0x8dd1, &op_div,	  1,   8, 255, 0xff, 0x01, 0x04, 0x02}, // div.dri b <literal>  
	{0x8dd2, &op_div,	  2,   8, 255, 0xff, 0x01, 0x04, 0x02}, // div.dri c <literal>  
	{0x8dd3, &op_div,	  3,   8, 255, 0xff, 0x01, 0x04, 0x02}, // div.dri d <literal>  
	{0x8dd4, &op_div,	  4,   8, 255, 0xff, 0x01, 0x04, 0x02}, // div.dri e <literal>  
	{0x8dd5, &op_div,	  5,   8, 255, 0xff, 0x01, 0x04, 0x02}, // div.dri f <literal>  
	{0x8dd6, &op_div,	  6,   8, 255, 0xff, 0x01, 0x04, 0x02}, // div.dri g <literal>  
	{0x8dd7, &op_div,	  7,   8, 255, 0xff, 0x01, 0x04, 0x02}, // div.dri h <literal>  
	{0x8de0, &op_div,	  0,   8, 255, 0xff, 0x01, 0x04, 0x04}, // div.ri a <literal>  
	{0x8de1, &op_div,	  1,   8, 255, 0xff, 0x01, 0x04, 0x04}, // div.ri b <literal>  
	{0x8de2, &op_div,	  2,   8, 255, 0xff, 0x01, 0x04, 0x04}, // div.ri c <literal>  
	{0x8de3, &op_div,	  3,   8, 255, 0xff, 0x01, 0x04, 0x04}, // div.ri d <literal>  
	{0x8de4, &op_div,	  4,   8, 255, 0xff, 0x01, 0x04, 0x04}, // div.ri e <literal>  
	{0x8de5, &op_div,	  5,   8, 255, 0xff, 0x01, 0x04, 0x04}, // div.ri f <literal>  
	{0x8de6, &op_div,	  6,   8, 255, 0xff, 0x01, 0x04, 0x04}, // div.ri g <literal>  
	{0x8de7, &op_div,	  7,   8, 255, 0xff, 0x01, 0x04, 0x04}, // div.ri h <literal>  
	{0x8e00, &op_cmp,	  0,   0, 255, 0xff, 0x00, 0x00, 0x01}, // cmp.w a a  
	{0x8e01, &op_cmp,	  1,   0, 255, 0xff, 0x00, 0x00, 0x01}, // cmp.w b a  
	{0x8e02, &op_cmp,	  2,   0, 255, 0xff, 0x00, 0x00, 0x01}, // cmp.w c a  
	{0x8e03, &op_cmp,	  3,   0, 255, 0xff, 0x00, 0x00, 0x01}, // cmp.w d a  
	{0x8e04, &op_cmp,	  4,   0, 255, 0xff, 0x00, 0x00, 0x01}, // cmp.w e a  
	{0x8e05, &op_cmp,	  5,   0, 255, 0xff, 0x00, 0x00, 0x01}, // cmp.w f a  
	{0x8e06, &op_cmp,	  6,   0, 255, 0xff, 0x00, 0x00, 0x01}, // cmp.w g a  
	{0x8e07, &op_cmp,	  7,   0, 255, 0xff, 0x00, 0x00, 0x01}, // cmp.w h a  
	{0x8e08, &op_cmp,	  0,   1, 255, 0xff, 0x00, 0x00, 0x01}, // cmp.w a b  
	{0x8e09, &op_cmp,	  1,   1, 255, 0xff, 0x00, 0x00, 0x01}, // cmp.w b b  
	{0x8e0a, &op_cmp,	  2,   1, 255, 0xff, 0x00, 0x00, 0x01}, // cmp.w c b  
	{0x8e0b, &op_cmp,	  3,   1, 255, 0xff, 0x00, 0x00, 0x01}, // cmp.w d b  
	{0x8e0c, &op_cmp,	  4,   1, 255, 0xff, 0x00, 0x00, 0x01}, // cmp.w e b  
	{0x8e0d, &op_cmp,	  5,   1, 255, 0xff, 0x00, 0x00, 0x01}, // cmp.w f b  
	{0x8e0e, &op_cmp,	  6,   1, 255, 0xff, 0x00, 0x00, 0x01}, // cmp.w g b  
	{0x8e0f, &op_cmp,	  7,   1, 255, 0xff, 0x00, 0x00, 0x01}, // cmp.w h b  
	{0x8e10, &op_cmp,	  0,   2, 255, 0xff, 0x00, 0x00, 0x01}, // cmp.w a c  
	{0x8e11, &op_cmp,	  1,   2, 255, 0xff, 0x00, 0x00, 0x01}, // cmp.w b c  
	{0x8e12, &op_cmp,	  2,   2, 255, 0xff, 0x00, 0x00, 0x01}, // cmp.w c c  
	{0x8e13, &op_cmp,	  3,   2, 255, 0xff, 0x00, 0x00, 0x01}, // cmp.w d c  
	{0x8e14, &op_cmp,	  4,   2, 255, 0xff, 0x00, 0x00, 0x01}, // cmp.w e c  
	{0x8e15, &op_cmp,	  5,   2, 255, 0xff, 0x00, 0x00, 0x01}, // cmp.w f c  
	{0x8e16, &op_cmp,	  6,   2, 255, 0xff, 0x00, 0x00, 0x01}, // cmp.w g c  
	{0x8e17, &op_cmp,	  7,   2, 255, 0xff, 0x00, 0x00, 0x01}, // cmp.w h c  
	{0x8e18, &op_cmp,	  0,   3, 255, 0xff, 0x00, 0x00, 0x01}, // cmp.w a d  
	{0x8e19, &op_cmp,	  1,   3, 255, 0xff, 0x00, 0x00, 0x01}, // cmp.w b d  
	{0x8e1a, &op_cmp,	  2,   3, 255, 0xff, 0x00, 0x00, 0x01}, // cmp.w c d  
	{0x8e1b, &op_cmp,	  3,   3, 255, 0xff, 0x00, 0x00, 0x01}, // cmp.w d d  
	{0x8e1c, &op_cmp,	  4,   3, 255, 0xff, 0x00, 0x00, 0x01}, // cmp.w e d  
	{0x8e1d, &op_cmp,	  5,   3, 255, 0xff, 0x00, 0x00, 0x01}, // cmp.w f d  
	{0x8e1e, &op_cmp,	  6,   3, 255, 0xff, 0x00, 0x00, 0x01}, // cmp.w g d  
	{0x8e1f, &op_cmp,	  7,   3, 255, 0xff, 0x00, 0x00, 0x01}, // cmp.w h d  
	{0x8e20, &op_cmp,	  0,   4, 255, 0xff, 0x00, 0x00, 0x01}, // cmp.w a e  
	{0x8e21, &op_cmp,	  1,   4, 255, 0xff, 0x00, 0x00, 0x01}, // cmp.w b e  
	{0x8e22, &op_cmp,	  2,   4, 255, 0xff, 0x00, 0x00, 0x01}, // cmp.w c e  
	{0x8e23, &op_cmp,	  3,   4, 255, 0xff, 0x00, 0x00, 0x01}, // cmp.w d e  
	{0x8e24, &op_cmp,	  4,   4, 255, 0xff, 0x00, 0x00, 0x01}, // cmp.w e e  
	{0x8e25, &op_cmp,	  5,   4, 255, 0xff, 0x00, 0x00, 0x01}, // cmp.w f e  
	{0x8e26, &op_cmp,	  6,   4, 255, 0xff, 0x00, 0x00, 0x01}, // cmp.w g e  
	{0x8e27, &op_cmp,	  7,   4, 255, 0xff, 0x00, 0x00, 0x01}, // cmp.w h e  
	{0x8e28, &op_cmp,	  0,   5, 255, 0xff, 0x00, 0x00, 0x01}, // cmp.w a f  
	{0x8e29, &op_cmp,	  1,   5, 255, 0xff, 0x00, 0x00, 0x01}, // cmp.w b f  
	{0x8e2a, &op_cmp,	  2,   5, 255, 0xff, 0x00, 0x00, 0x01}, // cmp.w c f  
	{0x8e2b, &op_cmp,	  3,   5, 255, 0xff, 0x00, 0x00, 0x01}, // cmp.w d f  
	{0x8e2c, &op_cmp,	  4,   5, 255, 0xff, 0x00, 0x00, 0x01}, // cmp.w e f  
	{0x8e2d, &op_cmp,	  5,   5, 255, 0xff, 0x00, 0x00, 0x01}, // cmp.w f f  
	{0x8e2e, &op_cmp,	  6,   5, 255, 0xff, 0x00, 0x00, 0x01}, // cmp.w g f  
	{0x8e2f, &op_cmp,	  7,   5, 255, 0xff, 0x00, 0x00, 0x01}, // cmp.w h f  
	{0x8e30, &op_cmp,	  0,   6, 255, 0xff, 0x00, 0x00, 0x01}, // cmp.w a g  
	{0x8e31, &op_cmp,	  1,   6, 255, 0xff, 0x00, 0x00, 0x01}, // cmp.w b g  
	{0x8e32, &op_cmp,	  2,   6, 255, 0xff, 0x00, 0x00, 0x01}, // cmp.w c g  
	{0x8e33, &op_cmp,	  3,   6, 255, 0xff, 0x00, 0x00, 0x01}, // cmp.w d g  
	{0x8e34, &op_cmp,	  4,   6, 255, 0xff, 0x00, 0x00, 0x01}, // cmp.w e g  
	{0x8e35, &op_cmp,	  5,   6, 255, 0xff, 0x00, 0x00, 0x01}, // cmp.w f g  
	{0x8e36, &op_cmp,	  6,   6, 255, 0xff, 0x00, 0x00, 0x01}, // cmp.w g g  
	{0x8e37, &op_cmp,	  7,   6, 255, 0xff, 0x00, 0x00, 0x01}, // cmp.w h g  
	{0x8e38, &op_cmp,	  0,   7, 255, 0xff, 0x00, 0x00, 0x01}, // cmp.w a h  
	{0x8e39, &op_cmp,	  1,   7, 255, 0xff, 0x00, 0x00, 0x01}, // cmp.w b h  
	{0x8e3a, &op_cmp,	  2,   7, 255, 0xff, 0x00, 0x00, 0x01}, // cmp.w c h  
	{0x8e3b, &op_cmp,	  3,   7, 255, 0xff, 0x00, 0x00, 0x01}, // cmp.w d h  
	{0x8e3c, &op_cmp,	  4,   7, 255, 0xff, 0x00, 0x00, 0x01}, // cmp.w e h  
	{0x8e3d, &op_cmp,	  5,   7, 255, 0xff, 0x00, 0x00, 0x01}, // cmp.w f h  
	{0x8e3e, &op_cmp,	  6,   7, 255, 0xff, 0x00, 0x00, 0x01}, // cmp.w g h  
	{0x8e3f, &op_cmp,	  7,   7, 255, 0xff, 0x00, 0x00, 0x01}, // cmp.w h h  
	{0x8e40, &op_cmp,	  0,   0, 255, 0xff, 0x00, 0x00, 0x02}, // cmp.d a a  
	{0x8e41, &op_cmp,	  1,   0, 255, 0xff, 0x00, 0x00, 0x02}, // cmp.d b a  
	{0x8e42, &op_cmp,	  2,   0, 255, 0xff, 0x00, 0x00, 0x02}, // cmp.d c a  
	{0x8e43, &op_cmp,	  3,   0, 255, 0xff, 0x00, 0x00, 0x02}, // cmp.d d a  
	{0x8e44, &op_cmp,	  4,   0, 255, 0xff, 0x00, 0x00, 0x02}, // cmp.d e a  
	{0x8e45, &op_cmp,	  5,   0, 255, 0xff, 0x00, 0x00, 0x02}, // cmp.d f a  
	{0x8e46, &op_cmp,	  6,   0, 255, 0xff, 0x00, 0x00, 0x02}, // cmp.d g a  
	{0x8e47, &op_cmp,	  7,   0, 255, 0xff, 0x00, 0x00, 0x02}, // cmp.d h a  
	{0x8e48, &op_cmp,	  0,   1, 255, 0xff, 0x00, 0x00, 0x02}, // cmp.d a b  
	{0x8e49, &op_cmp,	  1,   1, 255, 0xff, 0x00, 0x00, 0x02}, // cmp.d b b  
	{0x8e4a, &op_cmp,	  2,   1, 255, 0xff, 0x00, 0x00, 0x02}, // cmp.d c b  
	{0x8e4b, &op_cmp,	  3,   1, 255, 0xff, 0x00, 0x00, 0x02}, // cmp.d d b  
	{0x8e4c, &op_cmp,	  4,   1, 255, 0xff, 0x00, 0x00, 0x02}, // cmp.d e b  
	{0x8e4d, &op_cmp,	  5,   1, 255, 0xff, 0x00, 0x00, 0x02}, // cmp.d f b  
	{0x8e4e, &op_cmp,	  6,   1, 255, 0xff, 0x00, 0x00, 0x02}, // cmp.d g b  
	{0x8e4f, &op_cmp,	  7,   1, 255, 0xff, 0x00, 0x00, 0x02}, // cmp.d h b  
	{0x8e50, &op_cmp,	  0,   2, 255, 0xff, 0x00, 0x00, 0x02}, // cmp.d a c  
	{0x8e51, &op_cmp,	  1,   2, 255, 0xff, 0x00, 0x00, 0x02}, // cmp.d b c  
	{0x8e52, &op_cmp,	  2,   2, 255, 0xff, 0x00, 0x00, 0x02}, // cmp.d c c  
	{0x8e53, &op_cmp,	  3,   2, 255, 0xff, 0x00, 0x00, 0x02}, // cmp.d d c  
	{0x8e54, &op_cmp,	  4,   2, 255, 0xff, 0x00, 0x00, 0x02}, // cmp.d e c  
	{0x8e55, &op_cmp,	  5,   2, 255, 0xff, 0x00, 0x00, 0x02}, // cmp.d f c  
	{0x8e56, &op_cmp,	  6,   2, 255, 0xff, 0x00, 0x00, 0x02}, // cmp.d g c  
	{0x8e57, &op_cmp,	  7,   2, 255, 0xff, 0x00, 0x00, 0x02}, // cmp.d h c  
	{0x8e58, &op_cmp,	  0,   3, 255, 0xff, 0x00, 0x00, 0x02}, // cmp.d a d  
	{0x8e59, &op_cmp,	  1,   3, 255, 0xff, 0x00, 0x00, 0x02}, // cmp.d b d  
	{0x8e5a, &op_cmp,	  2,   3, 255, 0xff, 0x00, 0x00, 0x02}, // cmp.d c d  
	{0x8e5b, &op_cmp,	  3,   3, 255, 0xff, 0x00, 0x00, 0x02}, // cmp.d d d  
	{0x8e5c, &op_cmp,	  4,   3, 255, 0xff, 0x00, 0x00, 0x02}, // cmp.d e d  
	{0x8e5d, &op_cmp,	  5,   3, 255, 0xff, 0x00, 0x00, 0x02}, // cmp.d f d  
	{0x8e5e, &op_cmp,	  6,   3, 255, 0xff, 0x00, 0x00, 0x02}, // cmp.d g d  
	{0x8e5f, &op_cmp,	  7,   3, 255, 0xff, 0x00, 0x00, 0x02}, // cmp.d h d  
	{0x8e60, &op_cmp,	  0,   4, 255, 0xff, 0x00, 0x00, 0x02}, // cmp.d a e  
	{0x8e61, &op_cmp,	  1,   4, 255, 0xff, 0x00, 0x00, 0x02}, // cmp.d b e  
	{0x8e62, &op_cmp,	  2,   4, 255, 0xff, 0x00, 0x00, 0x02}, // cmp.d c e  
	{0x8e63, &op_cmp,	  3,   4, 255, 0xff, 0x00, 0x00, 0x02}, // cmp.d d e  
	{0x8e64, &op_cmp,	  4,   4, 255, 0xff, 0x00, 0x00, 0x02}, // cmp.d e e  
	{0x8e65, &op_cmp,	  5,   4, 255, 0xff, 0x00, 0x00, 0x02}, // cmp.d f e  
	{0x8e66, &op_cmp,	  6,   4, 255, 0xff, 0x00, 0x00, 0x02}, // cmp.d g e  
	{0x8e67, &op_cmp,	  7,   4, 255, 0xff, 0x00, 0x00, 0x02}, // cmp.d h e  
	{0x8e68, &op_cmp,	  0,   5, 255, 0xff, 0x00, 0x00, 0x02}, // cmp.d a f  
	{0x8e69, &op_cmp,	  1,   5, 255, 0xff, 0x00, 0x00, 0x02}, // cmp.d b f  
	{0x8e6a, &op_cmp,	  2,   5, 255, 0xff, 0x00, 0x00, 0x02}, // cmp.d c f  
	{0x8e6b, &op_cmp,	  3,   5, 255, 0xff, 0x00, 0x00, 0x02}, // cmp.d d f  
	{0x8e6c, &op_cmp,	  4,   5, 255, 0xff, 0x00, 0x00, 0x02}, // cmp.d e f  
	{0x8e6d, &op_cmp,	  5,   5, 255, 0xff, 0x00, 0x00, 0x02}, // cmp.d f f  
	{0x8e6e, &op_cmp,	  6,   5, 255, 0xff, 0x00, 0x00, 0x02}, // cmp.d g f  
	{0x8e6f, &op_cmp,	  7,   5, 255, 0xff, 0x00, 0x00, 0x02}, // cmp.d h f  
	{0x8e70, &op_cmp,	  0,   6, 255, 0xff, 0x00, 0x00, 0x02}, // cmp.d a g  
	{0x8e71, &op_cmp,	  1,   6, 255, 0xff, 0x00, 0x00, 0x02}, // cmp.d b g  
	{0x8e72, &op_cmp,	  2,   6, 255, 0xff, 0x00, 0x00, 0x02}, // cmp.d c g  
	{0x8e73, &op_cmp,	  3,   6, 255, 0xff, 0x00, 0x00, 0x02}, // cmp.d d g  
	{0x8e74, &op_cmp,	  4,   6, 255, 0xff, 0x00, 0x00, 0x02}, // cmp.d e g  
	{0x8e75, &op_cmp,	  5,   6, 255, 0xff, 0x00, 0x00, 0x02}, // cmp.d f g  
	{0x8e76, &op_cmp,	  6,   6, 255, 0xff, 0x00, 0x00, 0x02}, // cmp.d g g  
	{0x8e77, &op_cmp,	  7,   6, 255, 0xff, 0x00, 0x00, 0x02}, // cmp.d h g  
	{0x8e78, &op_cmp,	  0,   7, 255, 0xff, 0x00, 0x00, 0x02}, // cmp.d a h  
	{0x8e79, &op_cmp,	  1,   7, 255, 0xff, 0x00, 0x00, 0x02}, // cmp.d b h  
	{0x8e7a, &op_cmp,	  2,   7, 255, 0xff, 0x00, 0x00, 0x02}, // cmp.d c h  
	{0x8e7b, &op_cmp,	  3,   7, 255, 0xff, 0x00, 0x00, 0x02}, // cmp.d d h  
	{0x8e7c, &op_cmp,	  4,   7, 255, 0xff, 0x00, 0x00, 0x02}, // cmp.d e h  
	{0x8e7d, &op_cmp,	  5,   7, 255, 0xff, 0x00, 0x00, 0x02}, // cmp.d f h  
	{0x8e7e, &op_cmp,	  6,   7, 255, 0xff, 0x00, 0x00, 0x02}, // cmp.d g h  
	{0x8e7f, &op_cmp,	  7,   7, 255, 0xff, 0x00, 0x00, 0x02}, // cmp.d h h  
	{0x8e80, &op_cmp,	  0,   0, 255, 0xff, 0x00, 0x00, 0x04}, // cmp a a  
	{0x8e81, &op_cmp,	  1,   0, 255, 0xff, 0x00, 0x00, 0x04}, // cmp b a  
	{0x8e82, &op_cmp,	  2,   0, 255, 0xff, 0x00, 0x00, 0x04}, // cmp c a  
	{0x8e83, &op_cmp,	  3,   0, 255, 0xff, 0x00, 0x00, 0x04}, // cmp d a  
	{0x8e84, &op_cmp,	  4,   0, 255, 0xff, 0x00, 0x00, 0x04}, // cmp e a  
	{0x8e85, &op_cmp,	  5,   0, 255, 0xff, 0x00, 0x00, 0x04}, // cmp f a  
	{0x8e86, &op_cmp,	  6,   0, 255, 0xff, 0x00, 0x00, 0x04}, // cmp g a  
	{0x8e87, &op_cmp,	  7,   0, 255, 0xff, 0x00, 0x00, 0x04}, // cmp h a  
	{0x8e88, &op_cmp,	  0,   1, 255, 0xff, 0x00, 0x00, 0x04}, // cmp a b  
	{0x8e89, &op_cmp,	  1,   1, 255, 0xff, 0x00, 0x00, 0x04}, // cmp b b  
	{0x8e8a, &op_cmp,	  2,   1, 255, 0xff, 0x00, 0x00, 0x04}, // cmp c b  
	{0x8e8b, &op_cmp,	  3,   1, 255, 0xff, 0x00, 0x00, 0x04}, // cmp d b  
	{0x8e8c, &op_cmp,	  4,   1, 255, 0xff, 0x00, 0x00, 0x04}, // cmp e b  
	{0x8e8d, &op_cmp,	  5,   1, 255, 0xff, 0x00, 0x00, 0x04}, // cmp f b  
	{0x8e8e, &op_cmp,	  6,   1, 255, 0xff, 0x00, 0x00, 0x04}, // cmp g b  
	{0x8e8f, &op_cmp,	  7,   1, 255, 0xff, 0x00, 0x00, 0x04}, // cmp h b  
	{0x8e90, &op_cmp,	  0,   2, 255, 0xff, 0x00, 0x00, 0x04}, // cmp a c  
	{0x8e91, &op_cmp,	  1,   2, 255, 0xff, 0x00, 0x00, 0x04}, // cmp b c  
	{0x8e92, &op_cmp,	  2,   2, 255, 0xff, 0x00, 0x00, 0x04}, // cmp c c  
	{0x8e93, &op_cmp,	  3,   2, 255, 0xff, 0x00, 0x00, 0x04}, // cmp d c  
	{0x8e94, &op_cmp,	  4,   2, 255, 0xff, 0x00, 0x00, 0x04}, // cmp e c  
	{0x8e95, &op_cmp,	  5,   2, 255, 0xff, 0x00, 0x00, 0x04}, // cmp f c  
	{0x8e96, &op_cmp,	  6,   2, 255, 0xff, 0x00, 0x00, 0x04}, // cmp g c  
	{0x8e97, &op_cmp,	  7,   2, 255, 0xff, 0x00, 0x00, 0x04}, // cmp h c  
	{0x8e98, &op_cmp,	  0,   3, 255, 0xff, 0x00, 0x00, 0x04}, // cmp a d  
	{0x8e99, &op_cmp,	  1,   3, 255, 0xff, 0x00, 0x00, 0x04}, // cmp b d  
	{0x8e9a, &op_cmp,	  2,   3, 255, 0xff, 0x00, 0x00, 0x04}, // cmp c d  
	{0x8e9b, &op_cmp,	  3,   3, 255, 0xff, 0x00, 0x00, 0x04}, // cmp d d  
	{0x8e9c, &op_cmp,	  4,   3, 255, 0xff, 0x00, 0x00, 0x04}, // cmp e d  
	{0x8e9d, &op_cmp,	  5,   3, 255, 0xff, 0x00, 0x00, 0x04}, // cmp f d  
	{0x8e9e, &op_cmp,	  6,   3, 255, 0xff, 0x00, 0x00, 0x04}, // cmp g d  
	{0x8e9f, &op_cmp,	  7,   3, 255, 0xff, 0x00, 0x00, 0x04}, // cmp h d  
	{0x8ea0, &op_cmp,	  0,   4, 255, 0xff, 0x00, 0x00, 0x04}, // cmp a e  
	{0x8ea1, &op_cmp,	  1,   4, 255, 0xff, 0x00, 0x00, 0x04}, // cmp b e  
	{0x8ea2, &op_cmp,	  2,   4, 255, 0xff, 0x00, 0x00, 0x04}, // cmp c e  
	{0x8ea3, &op_cmp,	  3,   4, 255, 0xff, 0x00, 0x00, 0x04}, // cmp d e  
	{0x8ea4, &op_cmp,	  4,   4, 255, 0xff, 0x00, 0x00, 0x04}, // cmp e e  
	{0x8ea5, &op_cmp,	  5,   4, 255, 0xff, 0x00, 0x00, 0x04}, // cmp f e  
	{0x8ea6, &op_cmp,	  6,   4, 255, 0xff, 0x00, 0x00, 0x04}, // cmp g e  
	{0x8ea7, &op_cmp,	  7,   4, 255, 0xff, 0x00, 0x00, 0x04}, // cmp h e  
	{0x8ea8, &op_cmp,	  0,   5, 255, 0xff, 0x00, 0x00, 0x04}, // cmp a f  
	{0x8ea9, &op_cmp,	  1,   5, 255, 0xff, 0x00, 0x00, 0x04}, // cmp b f  
	{0x8eaa, &op_cmp,	  2,   5, 255, 0xff, 0x00, 0x00, 0x04}, // cmp c f  
	{0x8eab, &op_cmp,	  3,   5, 255, 0xff, 0x00, 0x00, 0x04}, // cmp d f  
	{0x8eac, &op_cmp,	  4,   5, 255, 0xff, 0x00, 0x00, 0x04}, // cmp e f  
	{0x8ead, &op_cmp,	  5,   5, 255, 0xff, 0x00, 0x00, 0x04}, // cmp f f  
	{0x8eae, &op_cmp,	  6,   5, 255, 0xff, 0x00, 0x00, 0x04}, // cmp g f  
	{0x8eaf, &op_cmp,	  7,   5, 255, 0xff, 0x00, 0x00, 0x04}, // cmp h f  
	{0x8eb0, &op_cmp,	  0,   6, 255, 0xff, 0x00, 0x00, 0x04}, // cmp a g  
	{0x8eb1, &op_cmp,	  1,   6, 255, 0xff, 0x00, 0x00, 0x04}, // cmp b g  
	{0x8eb2, &op_cmp,	  2,   6, 255, 0xff, 0x00, 0x00, 0x04}, // cmp c g  
	{0x8eb3, &op_cmp,	  3,   6, 255, 0xff, 0x00, 0x00, 0x04}, // cmp d g  
	{0x8eb4, &op_cmp,	  4,   6, 255, 0xff, 0x00, 0x00, 0x04}, // cmp e g  
	{0x8eb5, &op_cmp,	  5,   6, 255, 0xff, 0x00, 0x00, 0x04}, // cmp f g  
	{0x8eb6, &op_cmp,	  6,   6, 255, 0xff, 0x00, 0x00, 0x04}, // cmp g g  
	{0x8eb7, &op_cmp,	  7,   6, 255, 0xff, 0x00, 0x00, 0x04}, // cmp h g  
	{0x8eb8, &op_cmp,	  0,   7, 255, 0xff, 0x00, 0x00, 0x04}, // cmp a h  
	{0x8eb9, &op_cmp,	  1,   7, 255, 0xff, 0x00, 0x00, 0x04}, // cmp b h  
	{0x8eba, &op_cmp,	  2,   7, 255, 0xff, 0x00, 0x00, 0x04}, // cmp c h  
	{0x8ebb, &op_cmp,	  3,   7, 255, 0xff, 0x00, 0x00, 0x04}, // cmp d h  
	{0x8ebc, &op_cmp,	  4,   7, 255, 0xff, 0x00, 0x00, 0x04}, // cmp e h  
	{0x8ebd, &op_cmp,	  5,   7, 255, 0xff, 0x00, 0x00, 0x04}, // cmp f h  
	{0x8ebe, &op_cmp,	  6,   7, 255, 0xff, 0x00, 0x00, 0x04}, // cmp g h  
	{0x8ebf, &op_cmp,	  7,   7, 255, 0xff, 0x00, 0x00, 0x04}, // cmp h h  
	{0x8f00, &op_cmp,	  0,   0, 255, 0xff, 0x01, 0x00, 0x01}, // cmp.wr a a  
	{0x8f01, &op_cmp,	  1,   0, 255, 0xff, 0x01, 0x00, 0x01}, // cmp.wr b a  
	{0x8f02, &op_cmp,	  2,   0, 255, 0xff, 0x01, 0x00, 0x01}, // cmp.wr c a  
	{0x8f03, &op_cmp,	  3,   0, 255, 0xff, 0x01, 0x00, 0x01}, // cmp.wr d a  
	{0x8f04, &op_cmp,	  4,   0, 255, 0xff, 0x01, 0x00, 0x01}, // cmp.wr e a  
	{0x8f05, &op_cmp,	  5,   0, 255, 0xff, 0x01, 0x00, 0x01}, // cmp.wr f a  
	{0x8f06, &op_cmp,	  6,   0, 255, 0xff, 0x01, 0x00, 0x01}, // cmp.wr g a  
	{0x8f07, &op_cmp,	  7,   0, 255, 0xff, 0x01, 0x00, 0x01}, // cmp.wr h a  
	{0x8f08, &op_cmp,	  0,   1, 255, 0xff, 0x01, 0x00, 0x01}, // cmp.wr a b  
	{0x8f09, &op_cmp,	  1,   1, 255, 0xff, 0x01, 0x00, 0x01}, // cmp.wr b b  
	{0x8f0a, &op_cmp,	  2,   1, 255, 0xff, 0x01, 0x00, 0x01}, // cmp.wr c b  
	{0x8f0b, &op_cmp,	  3,   1, 255, 0xff, 0x01, 0x00, 0x01}, // cmp.wr d b  
	{0x8f0c, &op_cmp,	  4,   1, 255, 0xff, 0x01, 0x00, 0x01}, // cmp.wr e b  
	{0x8f0d, &op_cmp,	  5,   1, 255, 0xff, 0x01, 0x00, 0x01}, // cmp.wr f b  
	{0x8f0e, &op_cmp,	  6,   1, 255, 0xff, 0x01, 0x00, 0x01}, // cmp.wr g b  
	{0x8f0f, &op_cmp,	  7,   1, 255, 0xff, 0x01, 0x00, 0x01}, // cmp.wr h b  
	{0x8f10, &op_cmp,	  0,   2, 255, 0xff, 0x01, 0x00, 0x01}, // cmp.wr a c  
	{0x8f11, &op_cmp,	  1,   2, 255, 0xff, 0x01, 0x00, 0x01}, // cmp.wr b c  
	{0x8f12, &op_cmp,	  2,   2, 255, 0xff, 0x01, 0x00, 0x01}, // cmp.wr c c  
	{0x8f13, &op_cmp,	  3,   2, 255, 0xff, 0x01, 0x00, 0x01}, // cmp.wr d c  
	{0x8f14, &op_cmp,	  4,   2, 255, 0xff, 0x01, 0x00, 0x01}, // cmp.wr e c  
	{0x8f15, &op_cmp,	  5,   2, 255, 0xff, 0x01, 0x00, 0x01}, // cmp.wr f c  
	{0x8f16, &op_cmp,	  6,   2, 255, 0xff, 0x01, 0x00, 0x01}, // cmp.wr g c  
	{0x8f17, &op_cmp,	  7,   2, 255, 0xff, 0x01, 0x00, 0x01}, // cmp.wr h c  
	{0x8f18, &op_cmp,	  0,   3, 255, 0xff, 0x01, 0x00, 0x01}, // cmp.wr a d  
	{0x8f19, &op_cmp,	  1,   3, 255, 0xff, 0x01, 0x00, 0x01}, // cmp.wr b d  
	{0x8f1a, &op_cmp,	  2,   3, 255, 0xff, 0x01, 0x00, 0x01}, // cmp.wr c d  
	{0x8f1b, &op_cmp,	  3,   3, 255, 0xff, 0x01, 0x00, 0x01}, // cmp.wr d d  
	{0x8f1c, &op_cmp,	  4,   3, 255, 0xff, 0x01, 0x00, 0x01}, // cmp.wr e d  
	{0x8f1d, &op_cmp,	  5,   3, 255, 0xff, 0x01, 0x00, 0x01}, // cmp.wr f d  
	{0x8f1e, &op_cmp,	  6,   3, 255, 0xff, 0x01, 0x00, 0x01}, // cmp.wr g d  
	{0x8f1f, &op_cmp,	  7,   3, 255, 0xff, 0x01, 0x00, 0x01}, // cmp.wr h d  
	{0x8f20, &op_cmp,	  0,   4, 255, 0xff, 0x01, 0x00, 0x01}, // cmp.wr a e  
	{0x8f21, &op_cmp,	  1,   4, 255, 0xff, 0x01, 0x00, 0x01}, // cmp.wr b e  
	{0x8f22, &op_cmp,	  2,   4, 255, 0xff, 0x01, 0x00, 0x01}, // cmp.wr c e  
	{0x8f23, &op_cmp,	  3,   4, 255, 0xff, 0x01, 0x00, 0x01}, // cmp.wr d e  
	{0x8f24, &op_cmp,	  4,   4, 255, 0xff, 0x01, 0x00, 0x01}, // cmp.wr e e  
	{0x8f25, &op_cmp,	  5,   4, 255, 0xff, 0x01, 0x00, 0x01}, // cmp.wr f e  
	{0x8f26, &op_cmp,	  6,   4, 255, 0xff, 0x01, 0x00, 0x01}, // cmp.wr g e  
	{0x8f27, &op_cmp,	  7,   4, 255, 0xff, 0x01, 0x00, 0x01}, // cmp.wr h e  
	{0x8f28, &op_cmp,	  0,   5, 255, 0xff, 0x01, 0x00, 0x01}, // cmp.wr a f  
	{0x8f29, &op_cmp,	  1,   5, 255, 0xff, 0x01, 0x00, 0x01}, // cmp.wr b f  
	{0x8f2a, &op_cmp,	  2,   5, 255, 0xff, 0x01, 0x00, 0x01}, // cmp.wr c f  
	{0x8f2b, &op_cmp,	  3,   5, 255, 0xff, 0x01, 0x00, 0x01}, // cmp.wr d f  
	{0x8f2c, &op_cmp,	  4,   5, 255, 0xff, 0x01, 0x00, 0x01}, // cmp.wr e f  
	{0x8f2d, &op_cmp,	  5,   5, 255, 0xff, 0x01, 0x00, 0x01}, // cmp.wr f f  
	{0x8f2e, &op_cmp,	  6,   5, 255, 0xff, 0x01, 0x00, 0x01}, // cmp.wr g f  
	{0x8f2f, &op_cmp,	  7,   5, 255, 0xff, 0x01, 0x00, 0x01}, // cmp.wr h f  
	{0x8f30, &op_cmp,	  0,   6, 255, 0xff, 0x01, 0x00, 0x01}, // cmp.wr a g  
	{0x8f31, &op_cmp,	  1,   6, 255, 0xff, 0x01, 0x00, 0x01}, // cmp.wr b g  
	{0x8f32, &op_cmp,	  2,   6, 255, 0xff, 0x01, 0x00, 0x01}, // cmp.wr c g  
	{0x8f33, &op_cmp,	  3,   6, 255, 0xff, 0x01, 0x00, 0x01}, // cmp.wr d g  
	{0x8f34, &op_cmp,	  4,   6, 255, 0xff, 0x01, 0x00, 0x01}, // cmp.wr e g  
	{0x8f35, &op_cmp,	  5,   6, 255, 0xff, 0x01, 0x00, 0x01}, // cmp.wr f g  
	{0x8f36, &op_cmp,	  6,   6, 255, 0xff, 0x01, 0x00, 0x01}, // cmp.wr g g  
	{0x8f37, &op_cmp,	  7,   6, 255, 0xff, 0x01, 0x00, 0x01}, // cmp.wr h g  
	{0x8f38, &op_cmp,	  0,   7, 255, 0xff, 0x01, 0x00, 0x01}, // cmp.wr a h  
	{0x8f39, &op_cmp,	  1,   7, 255, 0xff, 0x01, 0x00, 0x01}, // cmp.wr b h  
	{0x8f3a, &op_cmp,	  2,   7, 255, 0xff, 0x01, 0x00, 0x01}, // cmp.wr c h  
	{0x8f3b, &op_cmp,	  3,   7, 255, 0xff, 0x01, 0x00, 0x01}, // cmp.wr d h  
	{0x8f3c, &op_cmp,	  4,   7, 255, 0xff, 0x01, 0x00, 0x01}, // cmp.wr e h  
	{0x8f3d, &op_cmp,	  5,   7, 255, 0xff, 0x01, 0x00, 0x01}, // cmp.wr f h  
	{0x8f3e, &op_cmp,	  6,   7, 255, 0xff, 0x01, 0x00, 0x01}, // cmp.wr g h  
	{0x8f3f, &op_cmp,	  7,   7, 255, 0xff, 0x01, 0x00, 0x01}, // cmp.wr h h  
	{0x8f40, &op_cmp,	  0,   0, 255, 0xff, 0x01, 0x00, 0x02}, // cmp.dr a a  
	{0x8f41, &op_cmp,	  1,   0, 255, 0xff, 0x01, 0x00, 0x02}, // cmp.dr b a  
	{0x8f42, &op_cmp,	  2,   0, 255, 0xff, 0x01, 0x00, 0x02}, // cmp.dr c a  
	{0x8f43, &op_cmp,	  3,   0, 255, 0xff, 0x01, 0x00, 0x02}, // cmp.dr d a  
	{0x8f44, &op_cmp,	  4,   0, 255, 0xff, 0x01, 0x00, 0x02}, // cmp.dr e a  
	{0x8f45, &op_cmp,	  5,   0, 255, 0xff, 0x01, 0x00, 0x02}, // cmp.dr f a  
	{0x8f46, &op_cmp,	  6,   0, 255, 0xff, 0x01, 0x00, 0x02}, // cmp.dr g a  
	{0x8f47, &op_cmp,	  7,   0, 255, 0xff, 0x01, 0x00, 0x02}, // cmp.dr h a  
	{0x8f48, &op_cmp,	  0,   1, 255, 0xff, 0x01, 0x00, 0x02}, // cmp.dr a b  
	{0x8f49, &op_cmp,	  1,   1, 255, 0xff, 0x01, 0x00, 0x02}, // cmp.dr b b  
	{0x8f4a, &op_cmp,	  2,   1, 255, 0xff, 0x01, 0x00, 0x02}, // cmp.dr c b  
	{0x8f4b, &op_cmp,	  3,   1, 255, 0xff, 0x01, 0x00, 0x02}, // cmp.dr d b  
	{0x8f4c, &op_cmp,	  4,   1, 255, 0xff, 0x01, 0x00, 0x02}, // cmp.dr e b  
	{0x8f4d, &op_cmp,	  5,   1, 255, 0xff, 0x01, 0x00, 0x02}, // cmp.dr f b  
	{0x8f4e, &op_cmp,	  6,   1, 255, 0xff, 0x01, 0x00, 0x02}, // cmp.dr g b  
	{0x8f4f, &op_cmp,	  7,   1, 255, 0xff, 0x01, 0x00, 0x02}, // cmp.dr h b  
	{0x8f50, &op_cmp,	  0,   2, 255, 0xff, 0x01, 0x00, 0x02}, // cmp.dr a c  
	{0x8f51, &op_cmp,	  1,   2, 255, 0xff, 0x01, 0x00, 0x02}, // cmp.dr b c  
	{0x8f52, &op_cmp,	  2,   2, 255, 0xff, 0x01, 0x00, 0x02}, // cmp.dr c c  
	{0x8f53, &op_cmp,	  3,   2, 255, 0xff, 0x01, 0x00, 0x02}, // cmp.dr d c  
	{0x8f54, &op_cmp,	  4,   2, 255, 0xff, 0x01, 0x00, 0x02}, // cmp.dr e c  
	{0x8f55, &op_cmp,	  5,   2, 255, 0xff, 0x01, 0x00, 0x02}, // cmp.dr f c  
	{0x8f56, &op_cmp,	  6,   2, 255, 0xff, 0x01, 0x00, 0x02}, // cmp.dr g c  
	{0x8f57, &op_cmp,	  7,   2, 255, 0xff, 0x01, 0x00, 0x02}, // cmp.dr h c  
	{0x8f58, &op_cmp,	  0,   3, 255, 0xff, 0x01, 0x00, 0x02}, // cmp.dr a d  
	{0x8f59, &op_cmp,	  1,   3, 255, 0xff, 0x01, 0x00, 0x02}, // cmp.dr b d  
	{0x8f5a, &op_cmp,	  2,   3, 255, 0xff, 0x01, 0x00, 0x02}, // cmp.dr c d  
	{0x8f5b, &op_cmp,	  3,   3, 255, 0xff, 0x01, 0x00, 0x02}, // cmp.dr d d  
	{0x8f5c, &op_cmp,	  4,   3, 255, 0xff, 0x01, 0x00, 0x02}, // cmp.dr e d  
	{0x8f5d, &op_cmp,	  5,   3, 255, 0xff, 0x01, 0x00, 0x02}, // cmp.dr f d  
	{0x8f5e, &op_cmp,	  6,   3, 255, 0xff, 0x01, 0x00, 0x02}, // cmp.dr g d  
	{0x8f5f, &op_cmp,	  7,   3, 255, 0xff, 0x01, 0x00, 0x02}, // cmp.dr h d  
	{0x8f60, &op_cmp,	  0,   4, 255, 0xff, 0x01, 0x00, 0x02}, // cmp.dr a e  
	{0x8f61, &op_cmp,	  1,   4, 255, 0xff, 0x01, 0x00, 0x02}, // cmp.dr b e  
	{0x8f62, &op_cmp,	  2,   4, 255, 0xff, 0x01, 0x00, 0x02}, // cmp.dr c e  
	{0x8f63, &op_cmp,	  3,   4, 255, 0xff, 0x01, 0x00, 0x02}, // cmp.dr d e  
	{0x8f64, &op_cmp,	  4,   4, 255, 0xff, 0x01, 0x00, 0x02}, // cmp.dr e e  
	{0x8f65, &op_cmp,	  5,   4, 255, 0xff, 0x01, 0x00, 0x02}, // cmp.dr f e  
	{0x8f66, &op_cmp,	  6,   4, 255, 0xff, 0x01, 0x00, 0x02}, // cmp.dr g e  
	{0x8f67, &op_cmp,	  7,   4, 255, 0xff, 0x01, 0x00, 0x02}, // cmp.dr h e  
	{0x8f68, &op_cmp,	  0,   5, 255, 0xff, 0x01, 0x00, 0x02}, // cmp.dr a f  
	{0x8f69, &op_cmp,	  1,   5, 255, 0xff, 0x01, 0x00, 0x02}, // cmp.dr b f  
	{0x8f6a, &op_cmp,	  2,   5, 255, 0xff, 0x01, 0x00, 0x02}, // cmp.dr c f  
	{0x8f6b, &op_cmp,	  3,   5, 255, 0xff, 0x01, 0x00, 0x02}, // cmp.dr d f  
	{0x8f6c, &op_cmp,	  4,   5, 255, 0xff, 0x01, 0x00, 0x02}, // cmp.dr e f  
	{0x8f6d, &op_cmp,	  5,   5, 255, 0xff, 0x01, 0x00, 0x02}, // cmp.dr f f  
	{0x8f6e, &op_cmp,	  6,   5, 255, 0xff, 0x01, 0x00, 0x02}, // cmp.dr g f  
	{0x8f6f, &op_cmp,	  7,   5, 255, 0xff, 0x01, 0x00, 0x02}, // cmp.dr h f  
	{0x8f70, &op_cmp,	  0,   6, 255, 0xff, 0x01, 0x00, 0x02}, // cmp.dr a g  
	{0x8f71, &op_cmp,	  1,   6, 255, 0xff, 0x01, 0x00, 0x02}, // cmp.dr b g  
	{0x8f72, &op_cmp,	  2,   6, 255, 0xff, 0x01, 0x00, 0x02}, // cmp.dr c g  
	{0x8f73, &op_cmp,	  3,   6, 255, 0xff, 0x01, 0x00, 0x02}, // cmp.dr d g  
	{0x8f74, &op_cmp,	  4,   6, 255, 0xff, 0x01, 0x00, 0x02}, // cmp.dr e g  
	{0x8f75, &op_cmp,	  5,   6, 255, 0xff, 0x01, 0x00, 0x02}, // cmp.dr f g  
	{0x8f76, &op_cmp,	  6,   6, 255, 0xff, 0x01, 0x00, 0x02}, // cmp.dr g g  
	{0x8f77, &op_cmp,	  7,   6, 255, 0xff, 0x01, 0x00, 0x02}, // cmp.dr h g  
	{0x8f78, &op_cmp,	  0,   7, 255, 0xff, 0x01, 0x00, 0x02}, // cmp.dr a h  
	{0x8f79, &op_cmp,	  1,   7, 255, 0xff, 0x01, 0x00, 0x02}, // cmp.dr b h  
	{0x8f7a, &op_cmp,	  2,   7, 255, 0xff, 0x01, 0x00, 0x02}, // cmp.dr c h  
	{0x8f7b, &op_cmp,	  3,   7, 255, 0xff, 0x01, 0x00, 0x02}, // cmp.dr d h  
	{0x8f7c, &op_cmp,	  4,   7, 255, 0xff, 0x01, 0x00, 0x02}, // cmp.dr e h  
	{0x8f7d, &op_cmp,	  5,   7, 255, 0xff, 0x01, 0x00, 0x02}, // cmp.dr f h  
	{0x8f7e, &op_cmp,	  6,   7, 255, 0xff, 0x01, 0x00, 0x02}, // cmp.dr g h  
	{0x8f7f, &op_cmp,	  7,   7, 255, 0xff, 0x01, 0x00, 0x02}, // cmp.dr h h  
	{0x8f80, &op_cmp,	  0,   0, 255, 0xff, 0x01, 0x00, 0x04}, // cmp.r a a  
	{0x8f81, &op_cmp,	  1,   0, 255, 0xff, 0x01, 0x00, 0x04}, // cmp.r b a  
	{0x8f82, &op_cmp,	  2,   0, 255, 0xff, 0x01, 0x00, 0x04}, // cmp.r c a  
	{0x8f83, &op_cmp,	  3,   0, 255, 0xff, 0x01, 0x00, 0x04}, // cmp.r d a  
	{0x8f84, &op_cmp,	  4,   0, 255, 0xff, 0x01, 0x00, 0x04}, // cmp.r e a  
	{0x8f85, &op_cmp,	  5,   0, 255, 0xff, 0x01, 0x00, 0x04}, // cmp.r f a  
	{0x8f86, &op_cmp,	  6,   0, 255, 0xff, 0x01, 0x00, 0x04}, // cmp.r g a  
	{0x8f87, &op_cmp,	  7,   0, 255, 0xff, 0x01, 0x00, 0x04}, // cmp.r h a  
	{0x8f88, &op_cmp,	  0,   1, 255, 0xff, 0x01, 0x00, 0x04}, // cmp.r a b  
	{0x8f89, &op_cmp,	  1,   1, 255, 0xff, 0x01, 0x00, 0x04}, // cmp.r b b  
	{0x8f8a, &op_cmp,	  2,   1, 255, 0xff, 0x01, 0x00, 0x04}, // cmp.r c b  
	{0x8f8b, &op_cmp,	  3,   1, 255, 0xff, 0x01, 0x00, 0x04}, // cmp.r d b  
	{0x8f8c, &op_cmp,	  4,   1, 255, 0xff, 0x01, 0x00, 0x04}, // cmp.r e b  
	{0x8f8d, &op_cmp,	  5,   1, 255, 0xff, 0x01, 0x00, 0x04}, // cmp.r f b  
	{0x8f8e, &op_cmp,	  6,   1, 255, 0xff, 0x01, 0x00, 0x04}, // cmp.r g b  
	{0x8f8f, &op_cmp,	  7,   1, 255, 0xff, 0x01, 0x00, 0x04}, // cmp.r h b  
	{0x8f90, &op_cmp,	  0,   2, 255, 0xff, 0x01, 0x00, 0x04}, // cmp.r a c  
	{0x8f91, &op_cmp,	  1,   2, 255, 0xff, 0x01, 0x00, 0x04}, // cmp.r b c  
	{0x8f92, &op_cmp,	  2,   2, 255, 0xff, 0x01, 0x00, 0x04}, // cmp.r c c  
	{0x8f93, &op_cmp,	  3,   2, 255, 0xff, 0x01, 0x00, 0x04}, // cmp.r d c  
	{0x8f94, &op_cmp,	  4,   2, 255, 0xff, 0x01, 0x00, 0x04}, // cmp.r e c  
	{0x8f95, &op_cmp,	  5,   2, 255, 0xff, 0x01, 0x00, 0x04}, // cmp.r f c  
	{0x8f96, &op_cmp,	  6,   2, 255, 0xff, 0x01, 0x00, 0x04}, // cmp.r g c  
	{0x8f97, &op_cmp,	  7,   2, 255, 0xff, 0x01, 0x00, 0x04}, // cmp.r h c  
	{0x8f98, &op_cmp,	  0,   3, 255, 0xff, 0x01, 0x00, 0x04}, // cmp.r a d  
	{0x8f99, &op_cmp,	  1,   3, 255, 0xff, 0x01, 0x00, 0x04}, // cmp.r b d  
	{0x8f9a, &op_cmp,	  2,   3, 255, 0xff, 0x01, 0x00, 0x04}, // cmp.r c d  
	{0x8f9b, &op_cmp,	  3,   3, 255, 0xff, 0x01, 0x00, 0x04}, // cmp.r d d  
	{0x8f9c, &op_cmp,	  4,   3, 255, 0xff, 0x01, 0x00, 0x04}, // cmp.r e d  
	{0x8f9d, &op_cmp,	  5,   3, 255, 0xff, 0x01, 0x00, 0x04}, // cmp.r f d  
	{0x8f9e, &op_cmp,	  6,   3, 255, 0xff, 0x01, 0x00, 0x04}, // cmp.r g d  
	{0x8f9f, &op_cmp,	  7,   3, 255, 0xff, 0x01, 0x00, 0x04}, // cmp.r h d  
	{0x8fa0, &op_cmp,	  0,   4, 255, 0xff, 0x01, 0x00, 0x04}, // cmp.r a e  
	{0x8fa1, &op_cmp,	  1,   4, 255, 0xff, 0x01, 0x00, 0x04}, // cmp.r b e  
	{0x8fa2, &op_cmp,	  2,   4, 255, 0xff, 0x01, 0x00, 0x04}, // cmp.r c e  
	{0x8fa3, &op_cmp,	  3,   4, 255, 0xff, 0x01, 0x00, 0x04}, // cmp.r d e  
	{0x8fa4, &op_cmp,	  4,   4, 255, 0xff, 0x01, 0x00, 0x04}, // cmp.r e e  
	{0x8fa5, &op_cmp,	  5,   4, 255, 0xff, 0x01, 0x00, 0x04}, // cmp.r f e  
	{0x8fa6, &op_cmp,	  6,   4, 255, 0xff, 0x01, 0x00, 0x04}, // cmp.r g e  
	{0x8fa7, &op_cmp,	  7,   4, 255, 0xff, 0x01, 0x00, 0x04}, // cmp.r h e  
	{0x8fa8, &op_cmp,	  0,   5, 255, 0xff, 0x01, 0x00, 0x04}, // cmp.r a f  
	{0x8fa9, &op_cmp,	  1,   5, 255, 0xff, 0x01, 0x00, 0x04}, // cmp.r b f  
	{0x8faa, &op_cmp,	  2,   5, 255, 0xff, 0x01, 0x00, 0x04}, // cmp.r c f  
	{0x8fab, &op_cmp,	  3,   5, 255, 0xff, 0x01, 0x00, 0x04}, // cmp.r d f  
	{0x8fac, &op_cmp,	  4,   5, 255, 0xff, 0x01, 0x00, 0x04}, // cmp.r e f  
	{0x8fad, &op_cmp,	  5,   5, 255, 0xff, 0x01, 0x00, 0x04}, // cmp.r f f  
	{0x8fae, &op_cmp,	  6,   5, 255, 0xff, 0x01, 0x00, 0x04}, // cmp.r g f  
	{0x8faf, &op_cmp,	  7,   5, 255, 0xff, 0x01, 0x00, 0x04}, // cmp.r h f  
	{0x8fb0, &op_cmp,	  0,   6, 255, 0xff, 0x01, 0x00, 0x04}, // cmp.r a g  
	{0x8fb1, &op_cmp,	  1,   6, 255, 0xff, 0x01, 0x00, 0x04}, // cmp.r b g  
	{0x8fb2, &op_cmp,	  2,   6, 255, 0xff, 0x01, 0x00, 0x04}, // cmp.r c g  
	{0x8fb3, &op_cmp,	  3,   6, 255, 0xff, 0x01, 0x00, 0x04}, // cmp.r d g  
	{0x8fb4, &op_cmp,	  4,   6, 255, 0xff, 0x01, 0x00, 0x04}, // cmp.r e g  
	{0x8fb5, &op_cmp,	  5,   6, 255, 0xff, 0x01, 0x00, 0x04}, // cmp.r f g  
	{0x8fb6, &op_cmp,	  6,   6, 255, 0xff, 0x01, 0x00, 0x04}, // cmp.r g g  
	{0x8fb7, &op_cmp,	  7,   6, 255, 0xff, 0x01, 0x00, 0x04}, // cmp.r h g  
	{0x8fb8, &op_cmp,	  0,   7, 255, 0xff, 0x01, 0x00, 0x04}, // cmp.r a h  
	{0x8fb9, &op_cmp,	  1,   7, 255, 0xff, 0x01, 0x00, 0x04}, // cmp.r b h  
	{0x8fba, &op_cmp,	  2,   7, 255, 0xff, 0x01, 0x00, 0x04}, // cmp.r c h  
	{0x8fbb, &op_cmp,	  3,   7, 255, 0xff, 0x01, 0x00, 0x04}, // cmp.r d h  
	{0x8fbc, &op_cmp,	  4,   7, 255, 0xff, 0x01, 0x00, 0x04}, // cmp.r e h  
	{0x8fbd, &op_cmp,	  5,   7, 255, 0xff, 0x01, 0x00, 0x04}, // cmp.r f h  
	{0x8fbe, &op_cmp,	  6,   7, 255, 0xff, 0x01, 0x00, 0x04}, // cmp.r g h  
	{0x8fbf, &op_cmp,	  7,   7, 255, 0xff, 0x01, 0x00, 0x04}, // cmp.r h h  
	{0x8ec8, &op_cmp,	  0,   8, 255, 0xff, 0x00, 0x01, 0x01}, // cmp.wi a <literal>  
	{0x8ec9, &op_cmp,	  1,   8, 255, 0xff, 0x00, 0x01, 0x01}, // cmp.wi b <literal>  
	{0x8eca, &op_cmp,	  2,   8, 255, 0xff, 0x00, 0x01, 0x01}, // cmp.wi c <literal>  
	{0x8ecb, &op_cmp,	  3,   8, 255, 0xff, 0x00, 0x01, 0x01}, // cmp.wi d <literal>  
	{0x8ecc, &op_cmp,	  4,   8, 255, 0xff, 0x00, 0x01, 0x01}, // cmp.wi e <literal>  
	{0x8ecd, &op_cmp,	  5,   8, 255, 0xff, 0x00, 0x01, 0x01}, // cmp.wi f <literal>  
	{0x8ece, &op_cmp,	  6,   8, 255, 0xff, 0x00, 0x01, 0x01}, // cmp.wi g <literal>  
	{0x8ecf, &op_cmp,	  7,   8, 255, 0xff, 0x00, 0x01, 0x01}, // cmp.wi h <literal>  
	{0x8ed0, &op_cmp,	  0,   8, 255, 0xff, 0x00, 0x02, 0x02}, // cmp.di a <literal>  
	{0x8ed1, &op_cmp,	  1,   8, 255, 0xff, 0x00, 0x02, 0x02}, // cmp.di b <literal>  
	{0x8ed2, &op_cmp,	  2,   8, 255, 0xff, 0x00, 0x02, 0x02}, // cmp.di c <literal>  
	{0x8ed3, &op_cmp,	  3,   8, 255, 0xff, 0x00, 0x02, 0x02}, // cmp.di d <literal>  
	{0x8ed4, &op_cmp,	  4,   8, 255, 0xff, 0x00, 0x02, 0x02}, // cmp.di e <literal>  
	{0x8ed5, &op_cmp,	  5,   8, 255, 0xff, 0x00, 0x02, 0x02}, // cmp.di f <literal>  
	{0x8ed6, &op_cmp,	  6,   8, 255, 0xff, 0x00, 0x02, 0x02}, // cmp.di g <literal>  
	{0x8ed7, &op_cmp,	  7,   8, 255, 0xff, 0x00, 0x02, 0x02}, // cmp.di h <literal>  
	{0x8ee0, &op_cmp,	  0,   8, 255, 0xff, 0x00, 0x04, 0x04}, // cmp.i a <literal>  
	{0x8ee1, &op_cmp,	  1,   8, 255, 0xff, 0x00, 0x04, 0x04}, // cmp.i b <literal>  
	{0x8ee2, &op_cmp,	  2,   8, 255, 0xff, 0x00, 0x04, 0x04}, // cmp.i c <literal>  
	{0x8ee3, &op_cmp,	  3,   8, 255, 0xff, 0x00, 0x04, 0x04}, // cmp.i d <literal>  
	{0x8ee4, &op_cmp,	  4,   8, 255, 0xff, 0x00, 0x04, 0x04}, // cmp.i e <literal>  
	{0x8ee5, &op_cmp,	  5,   8, 255, 0xff, 0x00, 0x04, 0x04}, // cmp.i f <literal>  
	{0x8ee6, &op_cmp,	  6,   8, 255, 0xff, 0x00, 0x04, 0x04}, // cmp.i g <literal>  
	{0x8ee7, &op_cmp,	  7,   8, 255, 0xff, 0x00, 0x04, 0x04}, // cmp.i h <literal>  
	{0x8fc8, &op_cmp,	  0,   8, 255, 0xff, 0x01, 0x04, 0x01}, // cmp.wri a <literal>  
	{0x8fc9, &op_cmp,	  1,   8, 255, 0xff, 0x01, 0x04, 0x01}, // cmp.wri b <literal>  
	{0x8fca, &op_cmp,	  2,   8, 255, 0xff, 0x01, 0x04, 0x01}, // cmp.wri c <literal>  
	{0x8fcb, &op_cmp,	  3,   8, 255, 0xff, 0x01, 0x04, 0x01}, // cmp.wri d <literal>  
	{0x8fcc, &op_cmp,	  4,   8, 255, 0xff, 0x01, 0x04, 0x01}, // cmp.wri e <literal>  
	{0x8fcd, &op_cmp,	  5,   8, 255, 0xff, 0x01, 0x04, 0x01}, // cmp.wri f <literal>  
	{0x8fce, &op_cmp,	  6,   8, 255, 0xff, 0x01, 0x04, 0x01}, // cmp.wri g <literal>  
	{0x8fcf, &op_cmp,	  7,   8, 255, 0xff, 0x01, 0x04, 0x01}, // cmp.wri h <literal>  
	{0x8fd0, &op_cmp,	  0,   8, 255, 0xff, 0x01, 0x04, 0x02}, // cmp.dri a <literal>  
	{0x8fd1, &op_cmp,	  1,   8, 255, 0xff, 0x01, 0x04, 0x02}, // cmp.dri b <literal>  
	{0x8fd2, &op_cmp,	  2,   8, 255, 0xff, 0x01, 0x04, 0x02}, // cmp.dri c <literal>  
	{0x8fd3, &op_cmp,	  3,   8, 255, 0xff, 0x01, 0x04, 0x02}, // cmp.dri d <literal>  
	{0x8fd4, &op_cmp,	  4,   8, 255, 0xff, 0x01, 0x04, 0x02}, // cmp.dri e <literal>  
	{0x8fd5, &op_cmp,	  5,   8, 255, 0xff, 0x01, 0x04, 0x02}, // cmp.dri f <literal>  
	{0x8fd6, &op_cmp,	  6,   8, 255, 0xff, 0x01, 0x04, 0x02}, // cmp.dri g <literal>  
	{0x8fd7, &op_cmp,	  7,   8, 255, 0xff, 0x01, 0x04, 0x02}, // cmp.dri h <literal>  
	{0x8fe0, &op_cmp,	  0,   8, 255, 0xff, 0x01, 0x04, 0x04}, // cmp.ri a <literal>  
	{0x8fe1, &op_cmp,	  1,   8, 255, 0xff, 0x01, 0x04, 0x04}, // cmp.ri b <literal>  
	{0x8fe2, &op_cmp,	  2,   8, 255, 0xff, 0x01, 0x04, 0x04}, // cmp.ri c <literal>  
	{0x8fe3, &op_cmp,	  3,   8, 255, 0xff, 0x01, 0x04, 0x04}, // cmp.ri d <literal>  
	{0x8fe4, &op_cmp,	  4,   8, 255, 0xff, 0x01, 0x04, 0x04}, // cmp.ri e <literal>  
	{0x8fe5, &op_cmp,	  5,   8, 255, 0xff, 0x01, 0x04, 0x04}, // cmp.ri f <literal>  
	{0x8fe6, &op_cmp,	  6,   8, 255, 0xff, 0x01, 0x04, 0x04}, // cmp.ri g <literal>  
	{0x8fe7, &op_cmp,	  7,   8, 255, 0xff, 0x01, 0x04, 0x04}, // cmp.ri h <literal>  
	{0x9000, &op_smod,	  0,   0, 255, 0xff, 0x00, 0x00, 0x01}, // smod.w a a  
	{0x9001, &op_smod,	  1,   0, 255, 0xff, 0x00, 0x00, 0x01}, // smod.w b a  
	{0x9002, &op_smod,	  2,   0, 255, 0xff, 0x00, 0x00, 0x01}, // smod.w c a  
	{0x9003, &op_smod,	  3,   0, 255, 0xff, 0x00, 0x00, 0x01}, // smod.w d a  
	{0x9004, &op_smod,	  4,   0, 255, 0xff, 0x00, 0x00, 0x01}, // smod.w e a  
	{0x9005, &op_smod,	  5,   0, 255, 0xff, 0x00, 0x00, 0x01}, // smod.w f a  
	{0x9006, &op_smod,	  6,   0, 255, 0xff, 0x00, 0x00, 0x01}, // smod.w g a  
	{0x9007, &op_smod,	  7,   0, 255, 0xff, 0x00, 0x00, 0x01}, // smod.w h a  
	{0x9008, &op_smod,	  0,   1, 255, 0xff, 0x00, 0x00, 0x01}, // smod.w a b  
	{0x9009, &op_smod,	  1,   1, 255, 0xff, 0x00, 0x00, 0x01}, // smod.w b b  
	{0x900a, &op_smod,	  2,   1, 255, 0xff, 0x00, 0x00, 0x01}, // smod.w c b  
	{0x900b, &op_smod,	  3,   1, 255, 0xff, 0x00, 0x00, 0x01}, // smod.w d b  
	{0x900c, &op_smod,	  4,   1, 255, 0xff, 0x00, 0x00, 0x01}, // smod.w e b  
	{0x900d, &op_smod,	  5,   1, 255, 0xff, 0x00, 0x00, 0x01}, // smod.w f b  
	{0x900e, &op_smod,	  6,   1, 255, 0xff, 0x00, 0x00, 0x01}, // smod.w g b  
	{0x900f, &op_smod,	  7,   1, 255, 0xff, 0x00, 0x00, 0x01}, // smod.w h b  
	{0x9010, &op_smod,	  0,   2, 255, 0xff, 0x00, 0x00, 0x01}, // smod.w a c  
	{0x9011, &op_smod,	  1,   2, 255, 0xff, 0x00, 0x00, 0x01}, // smod.w b c  
	{0x9012, &op_smod,	  2,   2, 255, 0xff, 0x00, 0x00, 0x01}, // smod.w c c  
	{0x9013, &op_smod,	  3,   2, 255, 0xff, 0x00, 0x00, 0x01}, // smod.w d c  
	{0x9014, &op_smod,	  4,   2, 255, 0xff, 0x00, 0x00, 0x01}, // smod.w e c  
	{0x9015, &op_smod,	  5,   2, 255, 0xff, 0x00, 0x00, 0x01}, // smod.w f c  
	{0x9016, &op_smod,	  6,   2, 255, 0xff, 0x00, 0x00, 0x01}, // smod.w g c  
	{0x9017, &op_smod,	  7,   2, 255, 0xff, 0x00, 0x00, 0x01}, // smod.w h c  
	{0x9018, &op_smod,	  0,   3, 255, 0xff, 0x00, 0x00, 0x01}, // smod.w a d  
	{0x9019, &op_smod,	  1,   3, 255, 0xff, 0x00, 0x00, 0x01}, // smod.w b d  
	{0x901a, &op_smod,	  2,   3, 255, 0xff, 0x00, 0x00, 0x01}, // smod.w c d  
	{0x901b, &op_smod,	  3,   3, 255, 0xff, 0x00, 0x00, 0x01}, // smod.w d d  
	{0x901c, &op_smod,	  4,   3, 255, 0xff, 0x00, 0x00, 0x01}, // smod.w e d  
	{0x901d, &op_smod,	  5,   3, 255, 0xff, 0x00, 0x00, 0x01}, // smod.w f d  
	{0x901e, &op_smod,	  6,   3, 255, 0xff, 0x00, 0x00, 0x01}, // smod.w g d  
	{0x901f, &op_smod,	  7,   3, 255, 0xff, 0x00, 0x00, 0x01}, // smod.w h d  
	{0x9020, &op_smod,	  0,   4, 255, 0xff, 0x00, 0x00, 0x01}, // smod.w a e  
	{0x9021, &op_smod,	  1,   4, 255, 0xff, 0x00, 0x00, 0x01}, // smod.w b e  
	{0x9022, &op_smod,	  2,   4, 255, 0xff, 0x00, 0x00, 0x01}, // smod.w c e  
	{0x9023, &op_smod,	  3,   4, 255, 0xff, 0x00, 0x00, 0x01}, // smod.w d e  
	{0x9024, &op_smod,	  4,   4, 255, 0xff, 0x00, 0x00, 0x01}, // smod.w e e  
	{0x9025, &op_smod,	  5,   4, 255, 0xff, 0x00, 0x00, 0x01}, // smod.w f e  
	{0x9026, &op_smod,	  6,   4, 255, 0xff, 0x00, 0x00, 0x01}, // smod.w g e  
	{0x9027, &op_smod,	  7,   4, 255, 0xff, 0x00, 0x00, 0x01}, // smod.w h e  
	{0x9028, &op_smod,	  0,   5, 255, 0xff, 0x00, 0x00, 0x01}, // smod.w a f  
	{0x9029, &op_smod,	  1,   5, 255, 0xff, 0x00, 0x00, 0x01}, // smod.w b f  
	{0x902a, &op_smod,	  2,   5, 255, 0xff, 0x00, 0x00, 0x01}, // smod.w c f  
	{0x902b, &op_smod,	  3,   5, 255, 0xff, 0x00, 0x00, 0x01}, // smod.w d f  
	{0x902c, &op_smod,	  4,   5, 255, 0xff, 0x00, 0x00, 0x01}, // smod.w e f  
	{0x902d, &op_smod,	  5,   5, 255, 0xff, 0x00, 0x00, 0x01}, // smod.w f f  
	{0x902e, &op_smod,	  6,   5, 255, 0xff, 0x00, 0x00, 0x01}, // smod.w g f  
	{0x902f, &op_smod,	  7,   5, 255, 0xff, 0x00, 0x00, 0x01}, // smod.w h f  
	{0x9030, &op_smod,	  0,   6, 255, 0xff, 0x00, 0x00, 0x01}, // smod.w a g  
	{0x9031, &op_smod,	  1,   6, 255, 0xff, 0x00, 0x00, 0x01}, // smod.w b g  
	{0x9032, &op_smod,	  2,   6, 255, 0xff, 0x00, 0x00, 0x01}, // smod.w c g  
	{0x9033, &op_smod,	  3,   6, 255, 0xff, 0x00, 0x00, 0x01}, // smod.w d g  
	{0x9034, &op_smod,	  4,   6, 255, 0xff, 0x00, 0x00, 0x01}, // smod.w e g  
	{0x9035, &op_smod,	  5,   6, 255, 0xff, 0x00, 0x00, 0x01}, // smod.w f g  
	{0x9036, &op_smod,	  6,   6, 255, 0xff, 0x00, 0x00, 0x01}, // smod.w g g  
	{0x9037, &op_smod,	  7,   6, 255, 0xff, 0x00, 0x00, 0x01}, // smod.w h g  
	{0x9038, &op_smod,	  0,   7, 255, 0xff, 0x00, 0x00, 0x01}, // smod.w a h  
	{0x9039, &op_smod,	  1,   7, 255, 0xff, 0x00, 0x00, 0x01}, // smod.w b h  
	{0x903a, &op_smod,	  2,   7, 255, 0xff, 0x00, 0x00, 0x01}, // smod.w c h  
	{0x903b, &op_smod,	  3,   7, 255, 0xff, 0x00, 0x00, 0x01}, // smod.w d h  
	{0x903c, &op_smod,	  4,   7, 255, 0xff, 0x00, 0x00, 0x01}, // smod.w e h  
	{0x903d, &op_smod,	  5,   7, 255, 0xff, 0x00, 0x00, 0x01}, // smod.w f h  
	{0x903e, &op_smod,	  6,   7, 255, 0xff, 0x00, 0x00, 0x01}, // smod.w g h  
	{0x903f, &op_smod,	  7,   7, 255, 0xff, 0x00, 0x00, 0x01}, // smod.w h h  
	{0x9040, &op_smod,	  0,   0, 255, 0xff, 0x00, 0x00, 0x02}, // smod.d a a  
	{0x9041, &op_smod,	  1,   0, 255, 0xff, 0x00, 0x00, 0x02}, // smod.d b a  
	{0x9042, &op_smod,	  2,   0, 255, 0xff, 0x00, 0x00, 0x02}, // smod.d c a  
	{0x9043, &op_smod,	  3,   0, 255, 0xff, 0x00, 0x00, 0x02}, // smod.d d a  
	{0x9044, &op_smod,	  4,   0, 255, 0xff, 0x00, 0x00, 0x02}, // smod.d e a  
	{0x9045, &op_smod,	  5,   0, 255, 0xff, 0x00, 0x00, 0x02}, // smod.d f a  
	{0x9046, &op_smod,	  6,   0, 255, 0xff, 0x00, 0x00, 0x02}, // smod.d g a  
	{0x9047, &op_smod,	  7,   0, 255, 0xff, 0x00, 0x00, 0x02}, // smod.d h a  
	{0x9048, &op_smod,	  0,   1, 255, 0xff, 0x00, 0x00, 0x02}, // smod.d a b  
	{0x9049, &op_smod,	  1,   1, 255, 0xff, 0x00, 0x00, 0x02}, // smod.d b b  
	{0x904a, &op_smod,	  2,   1, 255, 0xff, 0x00, 0x00, 0x02}, // smod.d c b  
	{0x904b, &op_smod,	  3,   1, 255, 0xff, 0x00, 0x00, 0x02}, // smod.d d b  
	{0x904c, &op_smod,	  4,   1, 255, 0xff, 0x00, 0x00, 0x02}, // smod.d e b  
	{0x904d, &op_smod,	  5,   1, 255, 0xff, 0x00, 0x00, 0x02}, // smod.d f b  
	{0x904e, &op_smod,	  6,   1, 255, 0xff, 0x00, 0x00, 0x02}, // smod.d g b  
	{0x904f, &op_smod,	  7,   1, 255, 0xff, 0x00, 0x00, 0x02}, // smod.d h b  
	{0x9050, &op_smod,	  0,   2, 255, 0xff, 0x00, 0x00, 0x02}, // smod.d a c  
	{0x9051, &op_smod,	  1,   2, 255, 0xff, 0x00, 0x00, 0x02}, // smod.d b c  
	{0x9052, &op_smod,	  2,   2, 255, 0xff, 0x00, 0x00, 0x02}, // smod.d c c  
	{0x9053, &op_smod,	  3,   2, 255, 0xff, 0x00, 0x00, 0x02}, // smod.d d c  
	{0x9054, &op_smod,	  4,   2, 255, 0xff, 0x00, 0x00, 0x02}, // smod.d e c  
	{0x9055, &op_smod,	  5,   2, 255, 0xff, 0x00, 0x00, 0x02}, // smod.d f c  
	{0x9056, &op_smod,	  6,   2, 255, 0xff, 0x00, 0x00, 0x02}, // smod.d g c  
	{0x9057, &op_smod,	  7,   2, 255, 0xff, 0x00, 0x00, 0x02}, // smod.d h c  
	{0x9058, &op_smod,	  0,   3, 255, 0xff, 0x00, 0x00, 0x02}, // smod.d a d  
	{0x9059, &op_smod,	  1,   3, 255, 0xff, 0x00, 0x00, 0x02}, // smod.d b d  
	{0x905a, &op_smod,	  2,   3, 255, 0xff, 0x00, 0x00, 0x02}, // smod.d c d  
	{0x905b, &op_smod,	  3,   3, 255, 0xff, 0x00, 0x00, 0x02}, // smod.d d d  
	{0x905c, &op_smod,	  4,   3, 255, 0xff, 0x00, 0x00, 0x02}, // smod.d e d  
	{0x905d, &op_smod,	  5,   3, 255, 0xff, 0x00, 0x00, 0x02}, // smod.d f d  
	{0x905e, &op_smod,	  6,   3, 255, 0xff, 0x00, 0x00, 0x02}, // smod.d g d  
	{0x905f, &op_smod,	  7,   3, 255, 0xff, 0x00, 0x00, 0x02}, // smod.d h d  
	{0x9060, &op_smod,	  0,   4, 255, 0xff, 0x00, 0x00, 0x02}, // smod.d a e  
	{0x9061, &op_smod,	  1,   4, 255, 0xff, 0x00, 0x00, 0x02}, // smod.d b e  
	{0x9062, &op_smod,	  2,   4, 255, 0xff, 0x00, 0x00, 0x02}, // smod.d c e  
	{0x9063, &op_smod,	  3,   4, 255, 0xff, 0x00, 0x00, 0x02}, // smod.d d e  
	{0x9064, &op_smod,	  4,   4, 255, 0xff, 0x00, 0x00, 0x02}, // smod.d e e  
	{0x9065, &op_smod,	  5,   4, 255, 0xff, 0x00, 0x00, 0x02}, // smod.d f e  
	{0x9066, &op_smod,	  6,   4, 255, 0xff, 0x00, 0x00, 0x02}, // smod.d g e  
	{0x9067, &op_smod,	  7,   4, 255, 0xff, 0x00, 0x00, 0x02}, // smod.d h e  
	{0x9068, &op_smod,	  0,   5, 255, 0xff, 0x00, 0x00, 0x02}, // smod.d a f  
	{0x9069, &op_smod,	  1,   5, 255, 0xff, 0x00, 0x00, 0x02}, // smod.d b f  
	{0x906a, &op_smod,	  2,   5, 255, 0xff, 0x00, 0x00, 0x02}, // smod.d c f  
	{0x906b, &op_smod,	  3,   5, 255, 0xff, 0x00, 0x00, 0x02}, // smod.d d f  
	{0x906c, &op_smod,	  4,   5, 255, 0xff, 0x00, 0x00, 0x02}, // smod.d e f  
	{0x906d, &op_smod,	  5,   5, 255, 0xff, 0x00, 0x00, 0x02}, // smod.d f f  
	{0x906e, &op_smod,	  6,   5, 255, 0xff, 0x00, 0x00, 0x02}, // smod.d g f  
	{0x906f, &op_smod,	  7,   5, 255, 0xff, 0x00, 0x00, 0x02}, // smod.d h f  
	{0x9070, &op_smod,	  0,   6, 255, 0xff, 0x00, 0x00, 0x02}, // smod.d a g  
	{0x9071, &op_smod,	  1,   6, 255, 0xff, 0x00, 0x00, 0x02}, // smod.d b g  
	{0x9072, &op_smod,	  2,   6, 255, 0xff, 0x00, 0x00, 0x02}, // smod.d c g  
	{0x9073, &op_smod,	  3,   6, 255, 0xff, 0x00, 0x00, 0x02}, // smod.d d g  
	{0x9074, &op_smod,	  4,   6, 255, 0xff, 0x00, 0x00, 0x02}, // smod.d e g  
	{0x9075, &op_smod,	  5,   6, 255, 0xff, 0x00, 0x00, 0x02}, // smod.d f g  
	{0x9076, &op_smod,	  6,   6, 255, 0xff, 0x00, 0x00, 0x02}, // smod.d g g  
	{0x9077, &op_smod,	  7,   6, 255, 0xff, 0x00, 0x00, 0x02}, // smod.d h g  
	{0x9078, &op_smod,	  0,   7, 255, 0xff, 0x00, 0x00, 0x02}, // smod.d a h  
	{0x9079, &op_smod,	  1,   7, 255, 0xff, 0x00, 0x00, 0x02}, // smod.d b h  
	{0x907a, &op_smod,	  2,   7, 255, 0xff, 0x00, 0x00, 0x02}, // smod.d c h  
	{0x907b, &op_smod,	  3,   7, 255, 0xff, 0x00, 0x00, 0x02}, // smod.d d h  
	{0x907c, &op_smod,	  4,   7, 255, 0xff, 0x00, 0x00, 0x02}, // smod.d e h  
	{0x907d, &op_smod,	  5,   7, 255, 0xff, 0x00, 0x00, 0x02}, // smod.d f h  
	{0x907e, &op_smod,	  6,   7, 255, 0xff, 0x00, 0x00, 0x02}, // smod.d g h  
	{0x907f, &op_smod,	  7,   7, 255, 0xff, 0x00, 0x00, 0x02}, // smod.d h h  
	{0x9080, &op_smod,	  0,   0, 255, 0xff, 0x00, 0x00, 0x04}, // smod a a  
	{0x9081, &op_smod,	  1,   0, 255, 0xff, 0x00, 0x00, 0x04}, // smod b a  
	{0x9082, &op_smod,	  2,   0, 255, 0xff, 0x00, 0x00, 0x04}, // smod c a  
	{0x9083, &op_smod,	  3,   0, 255, 0xff, 0x00, 0x00, 0x04}, // smod d a  
	{0x9084, &op_smod,	  4,   0, 255, 0xff, 0x00, 0x00, 0x04}, // smod e a  
	{0x9085, &op_smod,	  5,   0, 255, 0xff, 0x00, 0x00, 0x04}, // smod f a  
	{0x9086, &op_smod,	  6,   0, 255, 0xff, 0x00, 0x00, 0x04}, // smod g a  
	{0x9087, &op_smod,	  7,   0, 255, 0xff, 0x00, 0x00, 0x04}, // smod h a  
	{0x9088, &op_smod,	  0,   1, 255, 0xff, 0x00, 0x00, 0x04}, // smod a b  
	{0x9089, &op_smod,	  1,   1, 255, 0xff, 0x00, 0x00, 0x04}, // smod b b  
	{0x908a, &op_smod,	  2,   1, 255, 0xff, 0x00, 0x00, 0x04}, // smod c b  
	{0x908b, &op_smod,	  3,   1, 255, 0xff, 0x00, 0x00, 0x04}, // smod d b  
	{0x908c, &op_smod,	  4,   1, 255, 0xff, 0x00, 0x00, 0x04}, // smod e b  
	{0x908d, &op_smod,	  5,   1, 255, 0xff, 0x00, 0x00, 0x04}, // smod f b  
	{0x908e, &op_smod,	  6,   1, 255, 0xff, 0x00, 0x00, 0x04}, // smod g b  
	{0x908f, &op_smod,	  7,   1, 255, 0xff, 0x00, 0x00, 0x04}, // smod h b  
	{0x9090, &op_smod,	  0,   2, 255, 0xff, 0x00, 0x00, 0x04}, // smod a c  
	{0x9091, &op_smod,	  1,   2, 255, 0xff, 0x00, 0x00, 0x04}, // smod b c  
	{0x9092, &op_smod,	  2,   2, 255, 0xff, 0x00, 0x00, 0x04}, // smod c c  
	{0x9093, &op_smod,	  3,   2, 255, 0xff, 0x00, 0x00, 0x04}, // smod d c  
	{0x9094, &op_smod,	  4,   2, 255, 0xff, 0x00, 0x00, 0x04}, // smod e c  
	{0x9095, &op_smod,	  5,   2, 255, 0xff, 0x00, 0x00, 0x04}, // smod f c  
	{0x9096, &op_smod,	  6,   2, 255, 0xff, 0x00, 0x00, 0x04}, // smod g c  
	{0x9097, &op_smod,	  7,   2, 255, 0xff, 0x00, 0x00, 0x04}, // smod h c  
	{0x9098, &op_smod,	  0,   3, 255, 0xff, 0x00, 0x00, 0x04}, // smod a d  
	{0x9099, &op_smod,	  1,   3, 255, 0xff, 0x00, 0x00, 0x04}, // smod b d  
	{0x909a, &op_smod,	  2,   3, 255, 0xff, 0x00, 0x00, 0x04}, // smod c d  
	{0x909b, &op_smod,	  3,   3, 255, 0xff, 0x00, 0x00, 0x04}, // smod d d  
	{0x909c, &op_smod,	  4,   3, 255, 0xff, 0x00, 0x00, 0x04}, // smod e d  
	{0x909d, &op_smod,	  5,   3, 255, 0xff, 0x00, 0x00, 0x04}, // smod f d  
	{0x909e, &op_smod,	  6,   3, 255, 0xff, 0x00, 0x00, 0x04}, // smod g d  
	{0x909f, &op_smod,	  7,   3, 255, 0xff, 0x00, 0x00, 0x04}, // smod h d  
	{0x90a0, &op_smod,	  0,   4, 255, 0xff, 0x00, 0x00, 0x04}, // smod a e  
	{0x90a1, &op_smod,	  1,   4, 255, 0xff, 0x00, 0x00, 0x04}, // smod b e  
	{0x90a2, &op_smod,	  2,   4, 255, 0xff, 0x00, 0x00, 0x04}, // smod c e  
	{0x90a3, &op_smod,	  3,   4, 255, 0xff, 0x00, 0x00, 0x04}, // smod d e  
	{0x90a4, &op_smod,	  4,   4, 255, 0xff, 0x00, 0x00, 0x04}, // smod e e  
	{0x90a5, &op_smod,	  5,   4, 255, 0xff, 0x00, 0x00, 0x04}, // smod f e  
	{0x90a6, &op_smod,	  6,   4, 255, 0xff, 0x00, 0x00, 0x04}, // smod g e  
	{0x90a7, &op_smod,	  7,   4, 255, 0xff, 0x00, 0x00, 0x04}, // smod h e  
	{0x90a8, &op_smod,	  0,   5, 255, 0xff, 0x00, 0x00, 0x04}, // smod a f  
	{0x90a9, &op_smod,	  1,   5, 255, 0xff, 0x00, 0x00, 0x04}, // smod b f  
	{0x90aa, &op_smod,	  2,   5, 255, 0xff, 0x00, 0x00, 0x04}, // smod c f  
	{0x90ab, &op_smod,	  3,   5, 255, 0xff, 0x00, 0x00, 0x04}, // smod d f  
	{0x90ac, &op_smod,	  4,   5, 255, 0xff, 0x00, 0x00, 0x04}, // smod e f  
	{0x90ad, &op_smod,	  5,   5, 255, 0xff, 0x00, 0x00, 0x04}, // smod f f  
	{0x90ae, &op_smod,	  6,   5, 255, 0xff, 0x00, 0x00, 0x04}, // smod g f  
	{0x90af, &op_smod,	  7,   5, 255, 0xff, 0x00, 0x00, 0x04}, // smod h f  
	{0x90b0, &op_smod,	  0,   6, 255, 0xff, 0x00, 0x00, 0x04}, // smod a g  
	{0x90b1, &op_smod,	  1,   6, 255, 0xff, 0x00, 0x00, 0x04}, // smod b g  
	{0x90b2, &op_smod,	  2,   6, 255, 0xff, 0x00, 0x00, 0x04}, // smod c g  
	{0x90b3, &op_smod,	  3,   6, 255, 0xff, 0x00, 0x00, 0x04}, // smod d g  
	{0x90b4, &op_smod,	  4,   6, 255, 0xff, 0x00, 0x00, 0x04}, // smod e g  
	{0x90b5, &op_smod,	  5,   6, 255, 0xff, 0x00, 0x00, 0x04}, // smod f g  
	{0x90b6, &op_smod,	  6,   6, 255, 0xff, 0x00, 0x00, 0x04}, // smod g g  
	{0x90b7, &op_smod,	  7,   6, 255, 0xff, 0x00, 0x00, 0x04}, // smod h g  
	{0x90b8, &op_smod,	  0,   7, 255, 0xff, 0x00, 0x00, 0x04}, // smod a h  
	{0x90b9, &op_smod,	  1,   7, 255, 0xff, 0x00, 0x00, 0x04}, // smod b h  
	{0x90ba, &op_smod,	  2,   7, 255, 0xff, 0x00, 0x00, 0x04}, // smod c h  
	{0x90bb, &op_smod,	  3,   7, 255, 0xff, 0x00, 0x00, 0x04}, // smod d h  
	{0x90bc, &op_smod,	  4,   7, 255, 0xff, 0x00, 0x00, 0x04}, // smod e h  
	{0x90bd, &op_smod,	  5,   7, 255, 0xff, 0x00, 0x00, 0x04}, // smod f h  
	{0x90be, &op_smod,	  6,   7, 255, 0xff, 0x00, 0x00, 0x04}, // smod g h  
	{0x90bf, &op_smod,	  7,   7, 255, 0xff, 0x00, 0x00, 0x04}, // smod h h  
	{0x9100, &op_smod,	  0,   0, 255, 0xff, 0x01, 0x00, 0x01}, // smod.wr a a  
	{0x9101, &op_smod,	  1,   0, 255, 0xff, 0x01, 0x00, 0x01}, // smod.wr b a  
	{0x9102, &op_smod,	  2,   0, 255, 0xff, 0x01, 0x00, 0x01}, // smod.wr c a  
	{0x9103, &op_smod,	  3,   0, 255, 0xff, 0x01, 0x00, 0x01}, // smod.wr d a  
	{0x9104, &op_smod,	  4,   0, 255, 0xff, 0x01, 0x00, 0x01}, // smod.wr e a  
	{0x9105, &op_smod,	  5,   0, 255, 0xff, 0x01, 0x00, 0x01}, // smod.wr f a  
	{0x9106, &op_smod,	  6,   0, 255, 0xff, 0x01, 0x00, 0x01}, // smod.wr g a  
	{0x9107, &op_smod,	  7,   0, 255, 0xff, 0x01, 0x00, 0x01}, // smod.wr h a  
	{0x9108, &op_smod,	  0,   1, 255, 0xff, 0x01, 0x00, 0x01}, // smod.wr a b  
	{0x9109, &op_smod,	  1,   1, 255, 0xff, 0x01, 0x00, 0x01}, // smod.wr b b  
	{0x910a, &op_smod,	  2,   1, 255, 0xff, 0x01, 0x00, 0x01}, // smod.wr c b  
	{0x910b, &op_smod,	  3,   1, 255, 0xff, 0x01, 0x00, 0x01}, // smod.wr d b  
	{0x910c, &op_smod,	  4,   1, 255, 0xff, 0x01, 0x00, 0x01}, // smod.wr e b  
	{0x910d, &op_smod,	  5,   1, 255, 0xff, 0x01, 0x00, 0x01}, // smod.wr f b  
	{0x910e, &op_smod,	  6,   1, 255, 0xff, 0x01, 0x00, 0x01}, // smod.wr g b  
	{0x910f, &op_smod,	  7,   1, 255, 0xff, 0x01, 0x00, 0x01}, // smod.wr h b  
	{0x9110, &op_smod,	  0,   2, 255, 0xff, 0x01, 0x00, 0x01}, // smod.wr a c  
	{0x9111, &op_smod,	  1,   2, 255, 0xff, 0x01, 0x00, 0x01}, // smod.wr b c  
	{0x9112, &op_smod,	  2,   2, 255, 0xff, 0x01, 0x00, 0x01}, // smod.wr c c  
	{0x9113, &op_smod,	  3,   2, 255, 0xff, 0x01, 0x00, 0x01}, // smod.wr d c  
	{0x9114, &op_smod,	  4,   2, 255, 0xff, 0x01, 0x00, 0x01}, // smod.wr e c  
	{0x9115, &op_smod,	  5,   2, 255, 0xff, 0x01, 0x00, 0x01}, // smod.wr f c  
	{0x9116, &op_smod,	  6,   2, 255, 0xff, 0x01, 0x00, 0x01}, // smod.wr g c  
	{0x9117, &op_smod,	  7,   2, 255, 0xff, 0x01, 0x00, 0x01}, // smod.wr h c  
	{0x9118, &op_smod,	  0,   3, 255, 0xff, 0x01, 0x00, 0x01}, // smod.wr a d  
	{0x9119, &op_smod,	  1,   3, 255, 0xff, 0x01, 0x00, 0x01}, // smod.wr b d  
	{0x911a, &op_smod,	  2,   3, 255, 0xff, 0x01, 0x00, 0x01}, // smod.wr c d  
	{0x911b, &op_smod,	  3,   3, 255, 0xff, 0x01, 0x00, 0x01}, // smod.wr d d  
	{0x911c, &op_smod,	  4,   3, 255, 0xff, 0x01, 0x00, 0x01}, // smod.wr e d  
	{0x911d, &op_smod,	  5,   3, 255, 0xff, 0x01, 0x00, 0x01}, // smod.wr f d  
	{0x911e, &op_smod,	  6,   3, 255, 0xff, 0x01, 0x00, 0x01}, // smod.wr g d  
	{0x911f, &op_smod,	  7,   3, 255, 0xff, 0x01, 0x00, 0x01}, // smod.wr h d  
	{0x9120, &op_smod,	  0,   4, 255, 0xff, 0x01, 0x00, 0x01}, // smod.wr a e  
	{0x9121, &op_smod,	  1,   4, 255, 0xff, 0x01, 0x00, 0x01}, // smod.wr b e  
	{0x9122, &op_smod,	  2,   4, 255, 0xff, 0x01, 0x00, 0x01}, // smod.wr c e  
	{0x9123, &op_smod,	  3,   4, 255, 0xff, 0x01, 0x00, 0x01}, // smod.wr d e  
	{0x9124, &op_smod,	  4,   4, 255, 0xff, 0x01, 0x00, 0x01}, // smod.wr e e  
	{0x9125, &op_smod,	  5,   4, 255, 0xff, 0x01, 0x00, 0x01}, // smod.wr f e  
	{0x9126, &op_smod,	  6,   4, 255, 0xff, 0x01, 0x00, 0x01}, // smod.wr g e  
	{0x9127, &op_smod,	  7,   4, 255, 0xff, 0x01, 0x00, 0x01}, // smod.wr h e  
	{0x9128, &op_smod,	  0,   5, 255, 0xff, 0x01, 0x00, 0x01}, // smod.wr a f  
	{0x9129, &op_smod,	  1,   5, 255, 0xff, 0x01, 0x00, 0x01}, // smod.wr b f  
	{0x912a, &op_smod,	  2,   5, 255, 0xff, 0x01, 0x00, 0x01}, // smod.wr c f  
	{0x912b, &op_smod,	  3,   5, 255, 0xff, 0x01, 0x00, 0x01}, // smod.wr d f  
	{0x912c, &op_smod,	  4,   5, 255, 0xff, 0x01, 0x00, 0x01}, // smod.wr e f  
	{0x912d, &op_smod,	  5,   5, 255, 0xff, 0x01, 0x00, 0x01}, // smod.wr f f  
	{0x912e, &op_smod,	  6,   5, 255, 0xff, 0x01, 0x00, 0x01}, // smod.wr g f  
	{0x912f, &op_smod,	  7,   5, 255, 0xff, 0x01, 0x00, 0x01}, // smod.wr h f  
	{0x9130, &op_smod,	  0,   6, 255, 0xff, 0x01, 0x00, 0x01}, // smod.wr a g  
	{0x9131, &op_smod,	  1,   6, 255, 0xff, 0x01, 0x00, 0x01}, // smod.wr b g  
	{0x9132, &op_smod,	  2,   6, 255, 0xff, 0x01, 0x00, 0x01}, // smod.wr c g  
	{0x9133, &op_smod,	  3,   6, 255, 0xff, 0x01, 0x00, 0x01}, // smod.wr d g  
	{0x9134, &op_smod,	  4,   6, 255, 0xff, 0x01, 0x00, 0x01}, // smod.wr e g  
	{0x9135, &op_smod,	  5,   6, 255, 0xff, 0x01, 0x00, 0x01}, // smod.wr f g  
	{0x9136, &op_smod,	  6,   6, 255, 0xff, 0x01, 0x00, 0x01}, // smod.wr g g  
	{0x9137, &op_smod,	  7,   6, 255, 0xff, 0x01, 0x00, 0x01}, // smod.wr h g  
	{0x9138, &op_smod,	  0,   7, 255, 0xff, 0x01, 0x00, 0x01}, // smod.wr a h  
	{0x9139, &op_smod,	  1,   7, 255, 0xff, 0x01, 0x00, 0x01}, // smod.wr b h  
	{0x913a, &op_smod,	  2,   7, 255, 0xff, 0x01, 0x00, 0x01}, // smod.wr c h  
	{0x913b, &op_smod,	  3,   7, 255, 0xff, 0x01, 0x00, 0x01}, // smod.wr d h  
	{0x913c, &op_smod,	  4,   7, 255, 0xff, 0x01, 0x00, 0x01}, // smod.wr e h  
	{0x913d, &op_smod,	  5,   7, 255, 0xff, 0x01, 0x00, 0x01}, // smod.wr f h  
	{0x913e, &op_smod,	  6,   7, 255, 0xff, 0x01, 0x00, 0x01}, // smod.wr g h  
	{0x913f, &op_smod,	  7,   7, 255, 0xff, 0x01, 0x00, 0x01}, // smod.wr h h  
	{0x9140, &op_smod,	  0,   0, 255, 0xff, 0x01, 0x00, 0x02}, // smod.dr a a  
	{0x9141, &op_smod,	  1,   0, 255, 0xff, 0x01, 0x00, 0x02}, // smod.dr b a  
	{0x9142, &op_smod,	  2,   0, 255, 0xff, 0x01, 0x00, 0x02}, // smod.dr c a  
	{0x9143, &op_smod,	  3,   0, 255, 0xff, 0x01, 0x00, 0x02}, // smod.dr d a  
	{0x9144, &op_smod,	  4,   0, 255, 0xff, 0x01, 0x00, 0x02}, // smod.dr e a  
	{0x9145, &op_smod,	  5,   0, 255, 0xff, 0x01, 0x00, 0x02}, // smod.dr f a  
	{0x9146, &op_smod,	  6,   0, 255, 0xff, 0x01, 0x00, 0x02}, // smod.dr g a  
	{0x9147, &op_smod,	  7,   0, 255, 0xff, 0x01, 0x00, 0x02}, // smod.dr h a  
	{0x9148, &op_smod,	  0,   1, 255, 0xff, 0x01, 0x00, 0x02}, // smod.dr a b  
	{0x9149, &op_smod,	  1,   1, 255, 0xff, 0x01, 0x00, 0x02}, // smod.dr b b  
	{0x914a, &op_smod,	  2,   1, 255, 0xff, 0x01, 0x00, 0x02}, // smod.dr c b  
	{0x914b, &op_smod,	  3,   1, 255, 0xff, 0x01, 0x00, 0x02}, // smod.dr d b  
	{0x914c, &op_smod,	  4,   1, 255, 0xff, 0x01, 0x00, 0x02}, // smod.dr e b  
	{0x914d, &op_smod,	  5,   1, 255, 0xff, 0x01, 0x00, 0x02}, // smod.dr f b  
	{0x914e, &op_smod,	  6,   1, 255, 0xff, 0x01, 0x00, 0x02}, // smod.dr g b  
	{0x914f, &op_smod,	  7,   1, 255, 0xff, 0x01, 0x00, 0x02}, // smod.dr h b  
	{0x9150, &op_smod,	  0,   2, 255, 0xff, 0x01, 0x00, 0x02}, // smod.dr a c  
	{0x9151, &op_smod,	  1,   2, 255, 0xff, 0x01, 0x00, 0x02}, // smod.dr b c  
	{0x9152, &op_smod,	  2,   2, 255, 0xff, 0x01, 0x00, 0x02}, // smod.dr c c  
	{0x9153, &op_smod,	  3,   2, 255, 0xff, 0x01, 0x00, 0x02}, // smod.dr d c  
	{0x9154, &op_smod,	  4,   2, 255, 0xff, 0x01, 0x00, 0x02}, // smod.dr e c  
	{0x9155, &op_smod,	  5,   2, 255, 0xff, 0x01, 0x00, 0x02}, // smod.dr f c  
	{0x9156, &op_smod,	  6,   2, 255, 0xff, 0x01, 0x00, 0x02}, // smod.dr g c  
	{0x9157, &op_smod,	  7,   2, 255, 0xff, 0x01, 0x00, 0x02}, // smod.dr h c  
	{0x9158, &op_smod,	  0,   3, 255, 0xff, 0x01, 0x00, 0x02}, // smod.dr a d  
	{0x9159, &op_smod,	  1,   3, 255, 0xff, 0x01, 0x00, 0x02}, // smod.dr b d  
	{0x915a, &op_smod,	  2,   3, 255, 0xff, 0x01, 0x00, 0x02}, // smod.dr c d  
	{0x915b, &op_smod,	  3,   3, 255, 0xff, 0x01, 0x00, 0x02}, // smod.dr d d  
	{0x915c, &op_smod,	  4,   3, 255, 0xff, 0x01, 0x00, 0x02}, // smod.dr e d  
	{0x915d, &op_smod,	  5,   3, 255, 0xff, 0x01, 0x00, 0x02}, // smod.dr f d  
	{0x915e, &op_smod,	  6,   3, 255, 0xff, 0x01, 0x00, 0x02}, // smod.dr g d  
	{0x915f, &op_smod,	  7,   3, 255, 0xff, 0x01, 0x00, 0x02}, // smod.dr h d  
	{0x9160, &op_smod,	  0,   4, 255, 0xff, 0x01, 0x00, 0x02}, // smod.dr a e  
	{0x9161, &op_smod,	  1,   4, 255, 0xff, 0x01, 0x00, 0x02}, // smod.dr b e  
	{0x9162, &op_smod,	  2,   4, 255, 0xff, 0x01, 0x00, 0x02}, // smod.dr c e  
	{0x9163, &op_smod,	  3,   4, 255, 0xff, 0x01, 0x00, 0x02}, // smod.dr d e  
	{0x9164, &op_smod,	  4,   4, 255, 0xff, 0x01, 0x00, 0x02}, // smod.dr e e  
	{0x9165, &op_smod,	  5,   4, 255, 0xff, 0x01, 0x00, 0x02}, // smod.dr f e  
	{0x9166, &op_smod,	  6,   4, 255, 0xff, 0x01, 0x00, 0x02}, // smod.dr g e  
	{0x9167, &op_smod,	  7,   4, 255, 0xff, 0x01, 0x00, 0x02}, // smod.dr h e  
	{0x9168, &op_smod,	  0,   5, 255, 0xff, 0x01, 0x00, 0x02}, // smod.dr a f  
	{0x9169, &op_smod,	  1,   5, 255, 0xff, 0x01, 0x00, 0x02}, // smod.dr b f  
	{0x916a, &op_smod,	  2,   5, 255, 0xff, 0x01, 0x00, 0x02}, // smod.dr c f  
	{0x916b, &op_smod,	  3,   5, 255, 0xff, 0x01, 0x00, 0x02}, // smod.dr d f  
	{0x916c, &op_smod,	  4,   5, 255, 0xff, 0x01, 0x00, 0x02}, // smod.dr e f  
	{0x916d, &op_smod,	  5,   5, 255, 0xff, 0x01, 0x00, 0x02}, // smod.dr f f  
	{0x916e, &op_smod,	  6,   5, 255, 0xff, 0x01, 0x00, 0x02}, // smod.dr g f  
	{0x916f, &op_smod,	  7,   5, 255, 0xff, 0x01, 0x00, 0x02}, // smod.dr h f  
	{0x9170, &op_smod,	  0,   6, 255, 0xff, 0x01, 0x00, 0x02}, // smod.dr a g  
	{0x9171, &op_smod,	  1,   6, 255, 0xff, 0x01, 0x00, 0x02}, // smod.dr b g  
	{0x9172, &op_smod,	  2,   6, 255, 0xff, 0x01, 0x00, 0x02}, // smod.dr c g  
	{0x9173, &op_smod,	  3,   6, 255, 0xff, 0x01, 0x00, 0x02}, // smod.dr d g  
	{0x9174, &op_smod,	  4,   6, 255, 0xff, 0x01, 0x00, 0x02}, // smod.dr e g  
	{0x9175, &op_smod,	  5,   6, 255, 0xff, 0x01, 0x00, 0x02}, // smod.dr f g  
	{0x9176, &op_smod,	  6,   6, 255, 0xff, 0x01, 0x00, 0x02}, // smod.dr g g  
	{0x9177, &op_smod,	  7,   6, 255, 0xff, 0x01, 0x00, 0x02}, // smod.dr h g  
	{0x9178, &op_smod,	  0,   7, 255, 0xff, 0x01, 0x00, 0x02}, // smod.dr a h  
	{0x9179, &op_smod,	  1,   7, 255, 0xff, 0x01, 0x00, 0x02}, // smod.dr b h  
	{0x917a, &op_smod,	  2,   7, 255, 0xff, 0x01, 0x00, 0x02}, // smod.dr c h  
	{0x917b, &op_smod,	  3,   7, 255, 0xff, 0x01, 0x00, 0x02}, // smod.dr d h  
	{0x917c, &op_smod,	  4,   7, 255, 0xff, 0x01, 0x00, 0x02}, // smod.dr e h  
	{0x917d, &op_smod,	  5,   7, 255, 0xff, 0x01, 0x00, 0x02}, // smod.dr f h  
	{0x917e, &op_smod,	  6,   7, 255, 0xff, 0x01, 0x00, 0x02}, // smod.dr g h  
	{0x917f, &op_smod,	  7,   7, 255, 0xff, 0x01, 0x00, 0x02}, // smod.dr h h  
	{0x9180, &op_smod,	  0,   0, 255, 0xff, 0x01, 0x00, 0x04}, // smod.r a a  
	{0x9181, &op_smod,	  1,   0, 255, 0xff, 0x01, 0x00, 0x04}, // smod.r b a  
	{0x9182, &op_smod,	  2,   0, 255, 0xff, 0x01, 0x00, 0x04}, // smod.r c a  
	{0x9183, &op_smod,	  3,   0, 255, 0xff, 0x01, 0x00, 0x04}, // smod.r d a  
	{0x9184, &op_smod,	  4,   0, 255, 0xff, 0x01, 0x00, 0x04}, // smod.r e a  
	{0x9185, &op_smod,	  5,   0, 255, 0xff, 0x01, 0x00, 0x04}, // smod.r f a  
	{0x9186, &op_smod,	  6,   0, 255, 0xff, 0x01, 0x00, 0x04}, // smod.r g a  
	{0x9187, &op_smod,	  7,   0, 255, 0xff, 0x01, 0x00, 0x04}, // smod.r h a  
	{0x9188, &op_smod,	  0,   1, 255, 0xff, 0x01, 0x00, 0x04}, // smod.r a b  
	{0x9189, &op_smod,	  1,   1, 255, 0xff, 0x01, 0x00, 0x04}, // smod.r b b  
	{0x918a, &op_smod,	  2,   1, 255, 0xff, 0x01, 0x00, 0x04}, // smod.r c b  
	{0x918b, &op_smod,	  3,   1, 255, 0xff, 0x01, 0x00, 0x04}, // smod.r d b  
	{0x918c, &op_smod,	  4,   1, 255, 0xff, 0x01, 0x00, 0x04}, // smod.r e b  
	{0x918d, &op_smod,	  5,   1, 255, 0xff, 0x01, 0x00, 0x04}, // smod.r f b  
	{0x918e, &op_smod,	  6,   1, 255, 0xff, 0x01, 0x00, 0x04}, // smod.r g b  
	{0x918f, &op_smod,	  7,   1, 255, 0xff, 0x01, 0x00, 0x04}, // smod.r h b  
	{0x9190, &op_smod,	  0,   2, 255, 0xff, 0x01, 0x00, 0x04}, // smod.r a c  
	{0x9191, &op_smod,	  1,   2, 255, 0xff, 0x01, 0x00, 0x04}, // smod.r b c  
	{0x9192, &op_smod,	  2,   2, 255, 0xff, 0x01, 0x00, 0x04}, // smod.r c c  
	{0x9193, &op_smod,	  3,   2, 255, 0xff, 0x01, 0x00, 0x04}, // smod.r d c  
	{0x9194, &op_smod,	  4,   2, 255, 0xff, 0x01, 0x00, 0x04}, // smod.r e c  
	{0x9195, &op_smod,	  5,   2, 255, 0xff, 0x01, 0x00, 0x04}, // smod.r f c  
	{0x9196, &op_smod,	  6,   2, 255, 0xff, 0x01, 0x00, 0x04}, // smod.r g c  
	{0x9197, &op_smod,	  7,   2, 255, 0xff, 0x01, 0x00, 0x04}, // smod.r h c  
	{0x9198, &op_smod,	  0,   3, 255, 0xff, 0x01, 0x00, 0x04}, // smod.r a d  
	{0x9199, &op_smod,	  1,   3, 255, 0xff, 0x01, 0x00, 0x04}, // smod.r b d  
	{0x919a, &op_smod,	  2,   3, 255, 0xff, 0x01, 0x00, 0x04}, // smod.r c d  
	{0x919b, &op_smod,	  3,   3, 255, 0xff, 0x01, 0x00, 0x04}, // smod.r d d  
	{0x919c, &op_smod,	  4,   3, 255, 0xff, 0x01, 0x00, 0x04}, // smod.r e d  
	{0x919d, &op_smod,	  5,   3, 255, 0xff, 0x01, 0x00, 0x04}, // smod.r f d  
	{0x919e, &op_smod,	  6,   3, 255, 0xff, 0x01, 0x00, 0x04}, // smod.r g d  
	{0x919f, &op_smod,	  7,   3, 255, 0xff, 0x01, 0x00, 0x04}, // smod.r h d  
	{0x91a0, &op_smod,	  0,   4, 255, 0xff, 0x01, 0x00, 0x04}, // smod.r a e  
	{0x91a1, &op_smod,	  1,   4, 255, 0xff, 0x01, 0x00, 0x04}, // smod.r b e  
	{0x91a2, &op_smod,	  2,   4, 255, 0xff, 0x01, 0x00, 0x04}, // smod.r c e  
	{0x91a3, &op_smod,	  3,   4, 255, 0xff, 0x01, 0x00, 0x04}, // smod.r d e  
	{0x91a4, &op_smod,	  4,   4, 255, 0xff, 0x01, 0x00, 0x04}, // smod.r e e  
	{0x91a5, &op_smod,	  5,   4, 255, 0xff, 0x01, 0x00, 0x04}, // smod.r f e  
	{0x91a6, &op_smod,	  6,   4, 255, 0xff, 0x01, 0x00, 0x04}, // smod.r g e  
	{0x91a7, &op_smod,	  7,   4, 255, 0xff, 0x01, 0x00, 0x04}, // smod.r h e  
	{0x91a8, &op_smod,	  0,   5, 255, 0xff, 0x01, 0x00, 0x04}, // smod.r a f  
	{0x91a9, &op_smod,	  1,   5, 255, 0xff, 0x01, 0x00, 0x04}, // smod.r b f  
	{0x91aa, &op_smod,	  2,   5, 255, 0xff, 0x01, 0x00, 0x04}, // smod.r c f  
	{0x91ab, &op_smod,	  3,   5, 255, 0xff, 0x01, 0x00, 0x04}, // smod.r d f  
	{0x91ac, &op_smod,	  4,   5, 255, 0xff, 0x01, 0x00, 0x04}, // smod.r e f  
	{0x91ad, &op_smod,	  5,   5, 255, 0xff, 0x01, 0x00, 0x04}, // smod.r f f  
	{0x91ae, &op_smod,	  6,   5, 255, 0xff, 0x01, 0x00, 0x04}, // smod.r g f  
	{0x91af, &op_smod,	  7,   5, 255, 0xff, 0x01, 0x00, 0x04}, // smod.r h f  
	{0x91b0, &op_smod,	  0,   6, 255, 0xff, 0x01, 0x00, 0x04}, // smod.r a g  
	{0x91b1, &op_smod,	  1,   6, 255, 0xff, 0x01, 0x00, 0x04}, // smod.r b g  
	{0x91b2, &op_smod,	  2,   6, 255, 0xff, 0x01, 0x00, 0x04}, // smod.r c g  
	{0x91b3, &op_smod,	  3,   6, 255, 0xff, 0x01, 0x00, 0x04}, // smod.r d g  
	{0x91b4, &op_smod,	  4,   6, 255, 0xff, 0x01, 0x00, 0x04}, // smod.r e g  
	{0x91b5, &op_smod,	  5,   6, 255, 0xff, 0x01, 0x00, 0x04}, // smod.r f g  
	{0x91b6, &op_smod,	  6,   6, 255, 0xff, 0x01, 0x00, 0x04}, // smod.r g g  
	{0x91b7, &op_smod,	  7,   6, 255, 0xff, 0x01, 0x00, 0x04}, // smod.r h g  
	{0x91b8, &op_smod,	  0,   7, 255, 0xff, 0x01, 0x00, 0x04}, // smod.r a h  
	{0x91b9, &op_smod,	  1,   7, 255, 0xff, 0x01, 0x00, 0x04}, // smod.r b h  
	{0x91ba, &op_smod,	  2,   7, 255, 0xff, 0x01, 0x00, 0x04}, // smod.r c h  
	{0x91bb, &op_smod,	  3,   7, 255, 0xff, 0x01, 0x00, 0x04}, // smod.r d h  
	{0x91bc, &op_smod,	  4,   7, 255, 0xff, 0x01, 0x00, 0x04}, // smod.r e h  
	{0x91bd, &op_smod,	  5,   7, 255, 0xff, 0x01, 0x00, 0x04}, // smod.r f h  
	{0x91be, &op_smod,	  6,   7, 255, 0xff, 0x01, 0x00, 0x04}, // smod.r g h  
	{0x91bf, &op_smod,	  7,   7, 255, 0xff, 0x01, 0x00, 0x04}, // smod.r h h  
	{0x90c8, &op_smod,	  0,   8, 255, 0xff, 0x00, 0x01, 0x01}, // smod.wi a <literal>  
	{0x90c9, &op_smod,	  1,   8, 255, 0xff, 0x00, 0x01, 0x01}, // smod.wi b <literal>  
	{0x90ca, &op_smod,	  2,   8, 255, 0xff, 0x00, 0x01, 0x01}, // smod.wi c <literal>  
	{0x90cb, &op_smod,	  3,   8, 255, 0xff, 0x00, 0x01, 0x01}, // smod.wi d <literal>  
	{0x90cc, &op_smod,	  4,   8, 255, 0xff, 0x00, 0x01, 0x01}, // smod.wi e <literal>  
	{0x90cd, &op_smod,	  5,   8, 255, 0xff, 0x00, 0x01, 0x01}, // smod.wi f <literal>  
	{0x90ce, &op_smod,	  6,   8, 255, 0xff, 0x00, 0x01, 0x01}, // smod.wi g <literal>  
	{0x90cf, &op_smod,	  7,   8, 255, 0xff, 0x00, 0x01, 0x01}, // smod.wi h <literal>  
	{0x90d0, &op_smod,	  0,   8, 255, 0xff, 0x00, 0x02, 0x02}, // smod.di a <literal>  
	{0x90d1, &op_smod,	  1,   8, 255, 0xff, 0x00, 0x02, 0x02}, // smod.di b <literal>  
	{0x90d2, &op_smod,	  2,   8, 255, 0xff, 0x00, 0x02, 0x02}, // smod.di c <literal>  
	{0x90d3, &op_smod,	  3,   8, 255, 0xff, 0x00, 0x02, 0x02}, // smod.di d <literal>  
	{0x90d4, &op_smod,	  4,   8, 255, 0xff, 0x00, 0x02, 0x02}, // smod.di e <literal>  
	{0x90d5, &op_smod,	  5,   8, 255, 0xff, 0x00, 0x02, 0x02}, // smod.di f <literal>  
	{0x90d6, &op_smod,	  6,   8, 255, 0xff, 0x00, 0x02, 0x02}, // smod.di g <literal>  
	{0x90d7, &op_smod,	  7,   8, 255, 0xff, 0x00, 0x02, 0x02}, // smod.di h <literal>  
	{0x90e0, &op_smod,	  0,   8, 255, 0xff, 0x00, 0x04, 0x04}, // smod.i a <literal>  
	{0x90e1, &op_smod,	  1,   8, 255, 0xff, 0x00, 0x04, 0x04}, // smod.i b <literal>  
	{0x90e2, &op_smod,	  2,   8, 255, 0xff, 0x00, 0x04, 0x04}, // smod.i c <literal>  
	{0x90e3, &op_smod,	  3,   8, 255, 0xff, 0x00, 0x04, 0x04}, // smod.i d <literal>  
	{0x90e4, &op_smod,	  4,   8, 255, 0xff, 0x00, 0x04, 0x04}, // smod.i e <literal>  
	{0x90e5, &op_smod,	  5,   8, 255, 0xff, 0x00, 0x04, 0x04}, // smod.i f <literal>  
	{0x90e6, &op_smod,	  6,   8, 255, 0xff, 0x00, 0x04, 0x04}, // smod.i g <literal>  
	{0x90e7, &op_smod,	  7,   8, 255, 0xff, 0x00, 0x04, 0x04}, // smod.i h <literal>  
	{0x91c8, &op_smod,	  0,   8, 255, 0xff, 0x01, 0x04, 0x01}, // smod.wri a <literal>  
	{0x91c9, &op_smod,	  1,   8, 255, 0xff, 0x01, 0x04, 0x01}, // smod.wri b <literal>  
	{0x91ca, &op_smod,	  2,   8, 255, 0xff, 0x01, 0x04, 0x01}, // smod.wri c <literal>  
	{0x91cb, &op_smod,	  3,   8, 255, 0xff, 0x01, 0x04, 0x01}, // smod.wri d <literal>  
	{0x91cc, &op_smod,	  4,   8, 255, 0xff, 0x01, 0x04, 0x01}, // smod.wri e <literal>  
	{0x91cd, &op_smod,	  5,   8, 255, 0xff, 0x01, 0x04, 0x01}, // smod.wri f <literal>  
	{0x91ce, &op_smod,	  6,   8, 255, 0xff, 0x01, 0x04, 0x01}, // smod.wri g <literal>  
	{0x91cf, &op_smod,	  7,   8, 255, 0xff, 0x01, 0x04, 0x01}, // smod.wri h <literal>  
	{0x91d0, &op_smod,	  0,   8, 255, 0xff, 0x01, 0x04, 0x02}, // smod.dri a <literal>  
	{0x91d1, &op_smod,	  1,   8, 255, 0xff, 0x01, 0x04, 0x02}, // smod.dri b <literal>  
	{0x91d2, &op_smod,	  2,   8, 255, 0xff, 0x01, 0x04, 0x02}, // smod.dri c <literal>  
	{0x91d3, &op_smod,	  3,   8, 255, 0xff, 0x01, 0x04, 0x02}, // smod.dri d <literal>  
	{0x91d4, &op_smod,	  4,   8, 255, 0xff, 0x01, 0x04, 0x02}, // smod.dri e <literal>  
	{0x91d5, &op_smod,	  5,   8, 255, 0xff, 0x01, 0x04, 0x02}, // smod.dri f <literal>  
	{0x91d6, &op_smod,	  6,   8, 255, 0xff, 0x01, 0x04, 0x02}, // smod.dri g <literal>  
	{0x91d7, &op_smod,	  7,   8, 255, 0xff, 0x01, 0x04, 0x02}, // smod.dri h <literal>  
	{0x91e0, &op_smod,	  0,   8, 255, 0xff, 0x01, 0x04, 0x04}, // smod.ri a <literal>  
	{0x91e1, &op_smod,	  1,   8, 255, 0xff, 0x01, 0x04, 0x04}, // smod.ri b <literal>  
	{0x91e2, &op_smod,	  2,   8, 255, 0xff, 0x01, 0x04, 0x04}, // smod.ri c <literal>  
	{0x91e3, &op_smod,	  3,   8, 255, 0xff, 0x01, 0x04, 0x04}, // smod.ri d <literal>  
	{0x91e4, &op_smod,	  4,   8, 255, 0xff, 0x01, 0x04, 0x04}, // smod.ri e <literal>  
	{0x91e5, &op_smod,	  5,   8, 255, 0xff, 0x01, 0x04, 0x04}, // smod.ri f <literal>  
	{0x91e6, &op_smod,	  6,   8, 255, 0xff, 0x01, 0x04, 0x04}, // smod.ri g <literal>  
	{0x91e7, &op_smod,	  7,   8, 255, 0xff, 0x01, 0x04, 0x04}, // smod.ri h <literal>  
	{0x9200, &op_sadd,	  0,   0, 255, 0xff, 0x00, 0x00, 0x01}, // sadd.w a a  
	{0x9201, &op_sadd,	  1,   0, 255, 0xff, 0x00, 0x00, 0x01}, // sadd.w b a  
	{0x9202, &op_sadd,	  2,   0, 255, 0xff, 0x00, 0x00, 0x01}, // sadd.w c a  
	{0x9203, &op_sadd,	  3,   0, 255, 0xff, 0x00, 0x00, 0x01}, // sadd.w d a  
	{0x9204, &op_sadd,	  4,   0, 255, 0xff, 0x00, 0x00, 0x01}, // sadd.w e a  
	{0x9205, &op_sadd,	  5,   0, 255, 0xff, 0x00, 0x00, 0x01}, // sadd.w f a  
	{0x9206, &op_sadd,	  6,   0, 255, 0xff, 0x00, 0x00, 0x01}, // sadd.w g a  
	{0x9207, &op_sadd,	  7,   0, 255, 0xff, 0x00, 0x00, 0x01}, // sadd.w h a  
	{0x9208, &op_sadd,	  0,   1, 255, 0xff, 0x00, 0x00, 0x01}, // sadd.w a b  
	{0x9209, &op_sadd,	  1,   1, 255, 0xff, 0x00, 0x00, 0x01}, // sadd.w b b  
	{0x920a, &op_sadd,	  2,   1, 255, 0xff, 0x00, 0x00, 0x01}, // sadd.w c b  
	{0x920b, &op_sadd,	  3,   1, 255, 0xff, 0x00, 0x00, 0x01}, // sadd.w d b  
	{0x920c, &op_sadd,	  4,   1, 255, 0xff, 0x00, 0x00, 0x01}, // sadd.w e b  
	{0x920d, &op_sadd,	  5,   1, 255, 0xff, 0x00, 0x00, 0x01}, // sadd.w f b  
	{0x920e, &op_sadd,	  6,   1, 255, 0xff, 0x00, 0x00, 0x01}, // sadd.w g b  
	{0x920f, &op_sadd,	  7,   1, 255, 0xff, 0x00, 0x00, 0x01}, // sadd.w h b  
	{0x9210, &op_sadd,	  0,   2, 255, 0xff, 0x00, 0x00, 0x01}, // sadd.w a c  
	{0x9211, &op_sadd,	  1,   2, 255, 0xff, 0x00, 0x00, 0x01}, // sadd.w b c  
	{0x9212, &op_sadd,	  2,   2, 255, 0xff, 0x00, 0x00, 0x01}, // sadd.w c c  
	{0x9213, &op_sadd,	  3,   2, 255, 0xff, 0x00, 0x00, 0x01}, // sadd.w d c  
	{0x9214, &op_sadd,	  4,   2, 255, 0xff, 0x00, 0x00, 0x01}, // sadd.w e c  
	{0x9215, &op_sadd,	  5,   2, 255, 0xff, 0x00, 0x00, 0x01}, // sadd.w f c  
	{0x9216, &op_sadd,	  6,   2, 255, 0xff, 0x00, 0x00, 0x01}, // sadd.w g c  
	{0x9217, &op_sadd,	  7,   2, 255, 0xff, 0x00, 0x00, 0x01}, // sadd.w h c  
	{0x9218, &op_sadd,	  0,   3, 255, 0xff, 0x00, 0x00, 0x01}, // sadd.w a d  
	{0x9219, &op_sadd,	  1,   3, 255, 0xff, 0x00, 0x00, 0x01}, // sadd.w b d  
	{0x921a, &op_sadd,	  2,   3, 255, 0xff, 0x00, 0x00, 0x01}, // sadd.w c d  
	{0x921b, &op_sadd,	  3,   3, 255, 0xff, 0x00, 0x00, 0x01}, // sadd.w d d  
	{0x921c, &op_sadd,	  4,   3, 255, 0xff, 0x00, 0x00, 0x01}, // sadd.w e d  
	{0x921d, &op_sadd,	  5,   3, 255, 0xff, 0x00, 0x00, 0x01}, // sadd.w f d  
	{0x921e, &op_sadd,	  6,   3, 255, 0xff, 0x00, 0x00, 0x01}, // sadd.w g d  
	{0x921f, &op_sadd,	  7,   3, 255, 0xff, 0x00, 0x00, 0x01}, // sadd.w h d  
	{0x9220, &op_sadd,	  0,   4, 255, 0xff, 0x00, 0x00, 0x01}, // sadd.w a e  
	{0x9221, &op_sadd,	  1,   4, 255, 0xff, 0x00, 0x00, 0x01}, // sadd.w b e  
	{0x9222, &op_sadd,	  2,   4, 255, 0xff, 0x00, 0x00, 0x01}, // sadd.w c e  
	{0x9223, &op_sadd,	  3,   4, 255, 0xff, 0x00, 0x00, 0x01}, // sadd.w d e  
	{0x9224, &op_sadd,	  4,   4, 255, 0xff, 0x00, 0x00, 0x01}, // sadd.w e e  
	{0x9225, &op_sadd,	  5,   4, 255, 0xff, 0x00, 0x00, 0x01}, // sadd.w f e  
	{0x9226, &op_sadd,	  6,   4, 255, 0xff, 0x00, 0x00, 0x01}, // sadd.w g e  
	{0x9227, &op_sadd,	  7,   4, 255, 0xff, 0x00, 0x00, 0x01}, // sadd.w h e  
	{0x9228, &op_sadd,	  0,   5, 255, 0xff, 0x00, 0x00, 0x01}, // sadd.w a f  
	{0x9229, &op_sadd,	  1,   5, 255, 0xff, 0x00, 0x00, 0x01}, // sadd.w b f  
	{0x922a, &op_sadd,	  2,   5, 255, 0xff, 0x00, 0x00, 0x01}, // sadd.w c f  
	{0x922b, &op_sadd,	  3,   5, 255, 0xff, 0x00, 0x00, 0x01}, // sadd.w d f  
	{0x922c, &op_sadd,	  4,   5, 255, 0xff, 0x00, 0x00, 0x01}, // sadd.w e f  
	{0x922d, &op_sadd,	  5,   5, 255, 0xff, 0x00, 0x00, 0x01}, // sadd.w f f  
	{0x922e, &op_sadd,	  6,   5, 255, 0xff, 0x00, 0x00, 0x01}, // sadd.w g f  
	{0x922f, &op_sadd,	  7,   5, 255, 0xff, 0x00, 0x00, 0x01}, // sadd.w h f  
	{0x9230, &op_sadd,	  0,   6, 255, 0xff, 0x00, 0x00, 0x01}, // sadd.w a g  
	{0x9231, &op_sadd,	  1,   6, 255, 0xff, 0x00, 0x00, 0x01}, // sadd.w b g  
	{0x9232, &op_sadd,	  2,   6, 255, 0xff, 0x00, 0x00, 0x01}, // sadd.w c g  
	{0x9233, &op_sadd,	  3,   6, 255, 0xff, 0x00, 0x00, 0x01}, // sadd.w d g  
	{0x9234, &op_sadd,	  4,   6, 255, 0xff, 0x00, 0x00, 0x01}, // sadd.w e g  
	{0x9235, &op_sadd,	  5,   6, 255, 0xff, 0x00, 0x00, 0x01}, // sadd.w f g  
	{0x9236, &op_sadd,	  6,   6, 255, 0xff, 0x00, 0x00, 0x01}, // sadd.w g g  
	{0x9237, &op_sadd,	  7,   6, 255, 0xff, 0x00, 0x00, 0x01}, // sadd.w h g  
	{0x9238, &op_sadd,	  0,   7, 255, 0xff, 0x00, 0x00, 0x01}, // sadd.w a h  
	{0x9239, &op_sadd,	  1,   7, 255, 0xff, 0x00, 0x00, 0x01}, // sadd.w b h  
	{0x923a, &op_sadd,	  2,   7, 255, 0xff, 0x00, 0x00, 0x01}, // sadd.w c h  
	{0x923b, &op_sadd,	  3,   7, 255, 0xff, 0x00, 0x00, 0x01}, // sadd.w d h  
	{0x923c, &op_sadd,	  4,   7, 255, 0xff, 0x00, 0x00, 0x01}, // sadd.w e h  
	{0x923d, &op_sadd,	  5,   7, 255, 0xff, 0x00, 0x00, 0x01}, // sadd.w f h  
	{0x923e, &op_sadd,	  6,   7, 255, 0xff, 0x00, 0x00, 0x01}, // sadd.w g h  
	{0x923f, &op_sadd,	  7,   7, 255, 0xff, 0x00, 0x00, 0x01}, // sadd.w h h  
	{0x9240, &op_sadd,	  0,   0, 255, 0xff, 0x00, 0x00, 0x02}, // sadd.d a a  
	{0x9241, &op_sadd,	  1,   0, 255, 0xff, 0x00, 0x00, 0x02}, // sadd.d b a  
	{0x9242, &op_sadd,	  2,   0, 255, 0xff, 0x00, 0x00, 0x02}, // sadd.d c a  
	{0x9243, &op_sadd,	  3,   0, 255, 0xff, 0x00, 0x00, 0x02}, // sadd.d d a  
	{0x9244, &op_sadd,	  4,   0, 255, 0xff, 0x00, 0x00, 0x02}, // sadd.d e a  
	{0x9245, &op_sadd,	  5,   0, 255, 0xff, 0x00, 0x00, 0x02}, // sadd.d f a  
	{0x9246, &op_sadd,	  6,   0, 255, 0xff, 0x00, 0x00, 0x02}, // sadd.d g a  
	{0x9247, &op_sadd,	  7,   0, 255, 0xff, 0x00, 0x00, 0x02}, // sadd.d h a  
	{0x9248, &op_sadd,	  0,   1, 255, 0xff, 0x00, 0x00, 0x02}, // sadd.d a b  
	{0x9249, &op_sadd,	  1,   1, 255, 0xff, 0x00, 0x00, 0x02}, // sadd.d b b  
	{0x924a, &op_sadd,	  2,   1, 255, 0xff, 0x00, 0x00, 0x02}, // sadd.d c b  
	{0x924b, &op_sadd,	  3,   1, 255, 0xff, 0x00, 0x00, 0x02}, // sadd.d d b  
	{0x924c, &op_sadd,	  4,   1, 255, 0xff, 0x00, 0x00, 0x02}, // sadd.d e b  
	{0x924d, &op_sadd,	  5,   1, 255, 0xff, 0x00, 0x00, 0x02}, // sadd.d f b  
	{0x924e, &op_sadd,	  6,   1, 255, 0xff, 0x00, 0x00, 0x02}, // sadd.d g b  
	{0x924f, &op_sadd,	  7,   1, 255, 0xff, 0x00, 0x00, 0x02}, // sadd.d h b  
	{0x9250, &op_sadd,	  0,   2, 255, 0xff, 0x00, 0x00, 0x02}, // sadd.d a c  
	{0x9251, &op_sadd,	  1,   2, 255, 0xff, 0x00, 0x00, 0x02}, // sadd.d b c  
	{0x9252, &op_sadd,	  2,   2, 255, 0xff, 0x00, 0x00, 0x02}, // sadd.d c c  
	{0x9253, &op_sadd,	  3,   2, 255, 0xff, 0x00, 0x00, 0x02}, // sadd.d d c  
	{0x9254, &op_sadd,	  4,   2, 255, 0xff, 0x00, 0x00, 0x02}, // sadd.d e c  
	{0x9255, &op_sadd,	  5,   2, 255, 0xff, 0x00, 0x00, 0x02}, // sadd.d f c  
	{0x9256, &op_sadd,	  6,   2, 255, 0xff, 0x00, 0x00, 0x02}, // sadd.d g c  
	{0x9257, &op_sadd,	  7,   2, 255, 0xff, 0x00, 0x00, 0x02}, // sadd.d h c  
	{0x9258, &op_sadd,	  0,   3, 255, 0xff, 0x00, 0x00, 0x02}, // sadd.d a d  
	{0x9259, &op_sadd,	  1,   3, 255, 0xff, 0x00, 0x00, 0x02}, // sadd.d b d  
	{0x925a, &op_sadd,	  2,   3, 255, 0xff, 0x00, 0x00, 0x02}, // sadd.d c d  
	{0x925b, &op_sadd,	  3,   3, 255, 0xff, 0x00, 0x00, 0x02}, // sadd.d d d  
	{0x925c, &op_sadd,	  4,   3, 255, 0xff, 0x00, 0x00, 0x02}, // sadd.d e d  
	{0x925d, &op_sadd,	  5,   3, 255, 0xff, 0x00, 0x00, 0x02}, // sadd.d f d  
	{0x925e, &op_sadd,	  6,   3, 255, 0xff, 0x00, 0x00, 0x02}, // sadd.d g d  
	{0x925f, &op_sadd,	  7,   3, 255, 0xff, 0x00, 0x00, 0x02}, // sadd.d h d  
	{0x9260, &op_sadd,	  0,   4, 255, 0xff, 0x00, 0x00, 0x02}, // sadd.d a e  
	{0x9261, &op_sadd,	  1,   4, 255, 0xff, 0x00, 0x00, 0x02}, // sadd.d b e  
	{0x9262, &op_sadd,	  2,   4, 255, 0xff, 0x00, 0x00, 0x02}, // sadd.d c e  
	{0x9263, &op_sadd,	  3,   4, 255, 0xff, 0x00, 0x00, 0x02}, // sadd.d d e  
	{0x9264, &op_sadd,	  4,   4, 255, 0xff, 0x00, 0x00, 0x02}, // sadd.d e e  
	{0x9265, &op_sadd,	  5,   4, 255, 0xff, 0x00, 0x00, 0x02}, // sadd.d f e  
	{0x9266, &op_sadd,	  6,   4, 255, 0xff, 0x00, 0x00, 0x02}, // sadd.d g e  
	{0x9267, &op_sadd,	  7,   4, 255, 0xff, 0x00, 0x00, 0x02}, // sadd.d h e  
	{0x9268, &op_sadd,	  0,   5, 255, 0xff, 0x00, 0x00, 0x02}, // sadd.d a f  
	{0x9269, &op_sadd,	  1,   5, 255, 0xff, 0x00, 0x00, 0x02}, // sadd.d b f  
	{0x926a, &op_sadd,	  2,   5, 255, 0xff, 0x00, 0x00, 0x02}, // sadd.d c f  
	{0x926b, &op_sadd,	  3,   5, 255, 0xff, 0x00, 0x00, 0x02}, // sadd.d d f  
	{0x926c, &op_sadd,	  4,   5, 255, 0xff, 0x00, 0x00, 0x02}, // sadd.d e f  
	{0x926d, &op_sadd,	  5,   5, 255, 0xff, 0x00, 0x00, 0x02}, // sadd.d f f  
	{0x926e, &op_sadd,	  6,   5, 255, 0xff, 0x00, 0x00, 0x02}, // sadd.d g f  
	{0x926f, &op_sadd,	  7,   5, 255, 0xff, 0x00, 0x00, 0x02}, // sadd.d h f  
	{0x9270, &op_sadd,	  0,   6, 255, 0xff, 0x00, 0x00, 0x02}, // sadd.d a g  
	{0x9271, &op_sadd,	  1,   6, 255, 0xff, 0x00, 0x00, 0x02}, // sadd.d b g  
	{0x9272, &op_sadd,	  2,   6, 255, 0xff, 0x00, 0x00, 0x02}, // sadd.d c g  
	{0x9273, &op_sadd,	  3,   6, 255, 0xff, 0x00, 0x00, 0x02}, // sadd.d d g  
	{0x9274, &op_sadd,	  4,   6, 255, 0xff, 0x00, 0x00, 0x02}, // sadd.d e g  
	{0x9275, &op_sadd,	  5,   6, 255, 0xff, 0x00, 0x00, 0x02}, // sadd.d f g  
	{0x9276, &op_sadd,	  6,   6, 255, 0xff, 0x00, 0x00, 0x02}, // sadd.d g g  
	{0x9277, &op_sadd,	  7,   6, 255, 0xff, 0x00, 0x00, 0x02}, // sadd.d h g  
	{0x9278, &op_sadd,	  0,   7, 255, 0xff, 0x00, 0x00, 0x02}, // sadd.d a h  
	{0x9279, &op_sadd,	  1,   7, 255, 0xff, 0x00, 0x00, 0x02}, // sadd.d b h  
	{0x927a, &op_sadd,	  2,   7, 255, 0xff, 0x00, 0x00, 0x02}, // sadd.d c h  
	{0x927b, &op_sadd,	  3,   7, 255, 0xff, 0x00, 0x00, 0x02}, // sadd.d d h  
	{0x927c, &op_sadd,	  4,   7, 255, 0xff, 0x00, 0x00, 0x02}, // sadd.d e h  
	{0x927d, &op_sadd,	  5,   7, 255, 0xff, 0x00, 0x00, 0x02}, // sadd.d f h  
	{0x927e, &op_sadd,	  6,   7, 255, 0xff, 0x00, 0x00, 0x02}, // sadd.d g h  
	{0x927f, &op_sadd,	  7,   7, 255, 0xff, 0x00, 0x00, 0x02}, // sadd.d h h  
	{0x9280, &op_sadd,	  0,   0, 255, 0xff, 0x00, 0x00, 0x04}, // sadd a a  
	{0x9281, &op_sadd,	  1,   0, 255, 0xff, 0x00, 0x00, 0x04}, // sadd b a  
	{0x9282, &op_sadd,	  2,   0, 255, 0xff, 0x00, 0x00, 0x04}, // sadd c a  
	{0x9283, &op_sadd,	  3,   0, 255, 0xff, 0x00, 0x00, 0x04}, // sadd d a  
	{0x9284, &op_sadd,	  4,   0, 255, 0xff, 0x00, 0x00, 0x04}, // sadd e a  
	{0x9285, &op_sadd,	  5,   0, 255, 0xff, 0x00, 0x00, 0x04}, // sadd f a  
	{0x9286, &op_sadd,	  6,   0, 255, 0xff, 0x00, 0x00, 0x04}, // sadd g a  
	{0x9287, &op_sadd,	  7,   0, 255, 0xff, 0x00, 0x00, 0x04}, // sadd h a  
	{0x9288, &op_sadd,	  0,   1, 255, 0xff, 0x00, 0x00, 0x04}, // sadd a b  
	{0x9289, &op_sadd,	  1,   1, 255, 0xff, 0x00, 0x00, 0x04}, // sadd b b  
	{0x928a, &op_sadd,	  2,   1, 255, 0xff, 0x00, 0x00, 0x04}, // sadd c b  
	{0x928b, &op_sadd,	  3,   1, 255, 0xff, 0x00, 0x00, 0x04}, // sadd d b  
	{0x928c, &op_sadd,	  4,   1, 255, 0xff, 0x00, 0x00, 0x04}, // sadd e b  
	{0x928d, &op_sadd,	  5,   1, 255, 0xff, 0x00, 0x00, 0x04}, // sadd f b  
	{0x928e, &op_sadd,	  6,   1, 255, 0xff, 0x00, 0x00, 0x04}, // sadd g b  
	{0x928f, &op_sadd,	  7,   1, 255, 0xff, 0x00, 0x00, 0x04}, // sadd h b  
	{0x9290, &op_sadd,	  0,   2, 255, 0xff, 0x00, 0x00, 0x04}, // sadd a c  
	{0x9291, &op_sadd,	  1,   2, 255, 0xff, 0x00, 0x00, 0x04}, // sadd b c  
	{0x9292, &op_sadd,	  2,   2, 255, 0xff, 0x00, 0x00, 0x04}, // sadd c c  
	{0x9293, &op_sadd,	  3,   2, 255, 0xff, 0x00, 0x00, 0x04}, // sadd d c  
	{0x9294, &op_sadd,	  4,   2, 255, 0xff, 0x00, 0x00, 0x04}, // sadd e c  
	{0x9295, &op_sadd,	  5,   2, 255, 0xff, 0x00, 0x00, 0x04}, // sadd f c  
	{0x9296, &op_sadd,	  6,   2, 255, 0xff, 0x00, 0x00, 0x04}, // sadd g c  
	{0x9297, &op_sadd,	  7,   2, 255, 0xff, 0x00, 0x00, 0x04}, // sadd h c  
	{0x9298, &op_sadd,	  0,   3, 255, 0xff, 0x00, 0x00, 0x04}, // sadd a d  
	{0x9299, &op_sadd,	  1,   3, 255, 0xff, 0x00, 0x00, 0x04}, // sadd b d  
	{0x929a, &op_sadd,	  2,   3, 255, 0xff, 0x00, 0x00, 0x04}, // sadd c d  
	{0x929b, &op_sadd,	  3,   3, 255, 0xff, 0x00, 0x00, 0x04}, // sadd d d  
	{0x929c, &op_sadd,	  4,   3, 255, 0xff, 0x00, 0x00, 0x04}, // sadd e d  
	{0x929d, &op_sadd,	  5,   3, 255, 0xff, 0x00, 0x00, 0x04}, // sadd f d  
	{0x929e, &op_sadd,	  6,   3, 255, 0xff, 0x00, 0x00, 0x04}, // sadd g d  
	{0x929f, &op_sadd,	  7,   3, 255, 0xff, 0x00, 0x00, 0x04}, // sadd h d  
	{0x92a0, &op_sadd,	  0,   4, 255, 0xff, 0x00, 0x00, 0x04}, // sadd a e  
	{0x92a1, &op_sadd,	  1,   4, 255, 0xff, 0x00, 0x00, 0x04}, // sadd b e  
	{0x92a2, &op_sadd,	  2,   4, 255, 0xff, 0x00, 0x00, 0x04}, // sadd c e  
	{0x92a3, &op_sadd,	  3,   4, 255, 0xff, 0x00, 0x00, 0x04}, // sadd d e  
	{0x92a4, &op_sadd,	  4,   4, 255, 0xff, 0x00, 0x00, 0x04}, // sadd e e  
	{0x92a5, &op_sadd,	  5,   4, 255, 0xff, 0x00, 0x00, 0x04}, // sadd f e  
	{0x92a6, &op_sadd,	  6,   4, 255, 0xff, 0x00, 0x00, 0x04}, // sadd g e  
	{0x92a7, &op_sadd,	  7,   4, 255, 0xff, 0x00, 0x00, 0x04}, // sadd h e  
	{0x92a8, &op_sadd,	  0,   5, 255, 0xff, 0x00, 0x00, 0x04}, // sadd a f  
	{0x92a9, &op_sadd,	  1,   5, 255, 0xff, 0x00, 0x00, 0x04}, // sadd b f  
	{0x92aa, &op_sadd,	  2,   5, 255, 0xff, 0x00, 0x00, 0x04}, // sadd c f  
	{0x92ab, &op_sadd,	  3,   5, 255, 0xff, 0x00, 0x00, 0x04}, // sadd d f  
	{0x92ac, &op_sadd,	  4,   5, 255, 0xff, 0x00, 0x00, 0x04}, // sadd e f  
	{0x92ad, &op_sadd,	  5,   5, 255, 0xff, 0x00, 0x00, 0x04}, // sadd f f  
	{0x92ae, &op_sadd,	  6,   5, 255, 0xff, 0x00, 0x00, 0x04}, // sadd g f  
	{0x92af, &op_sadd,	  7,   5, 255, 0xff, 0x00, 0x00, 0x04}, // sadd h f  
	{0x92b0, &op_sadd,	  0,   6, 255, 0xff, 0x00, 0x00, 0x04}, // sadd a g  
	{0x92b1, &op_sadd,	  1,   6, 255, 0xff, 0x00, 0x00, 0x04}, // sadd b g  
	{0x92b2, &op_sadd,	  2,   6, 255, 0xff, 0x00, 0x00, 0x04}, // sadd c g  
	{0x92b3, &op_sadd,	  3,   6, 255, 0xff, 0x00, 0x00, 0x04}, // sadd d g  
	{0x92b4, &op_sadd,	  4,   6, 255, 0xff, 0x00, 0x00, 0x04}, // sadd e g  
	{0x92b5, &op_sadd,	  5,   6, 255, 0xff, 0x00, 0x00, 0x04}, // sadd f g  
	{0x92b6, &op_sadd,	  6,   6, 255, 0xff, 0x00, 0x00, 0x04}, // sadd g g  
	{0x92b7, &op_sadd,	  7,   6, 255, 0xff, 0x00, 0x00, 0x04}, // sadd h g  
	{0x92b8, &op_sadd,	  0,   7, 255, 0xff, 0x00, 0x00, 0x04}, // sadd a h  
	{0x92b9, &op_sadd,	  1,   7, 255, 0xff, 0x00, 0x00, 0x04}, // sadd b h  
	{0x92ba, &op_sadd,	  2,   7, 255, 0xff, 0x00, 0x00, 0x04}, // sadd c h  
	{0x92bb, &op_sadd,	  3,   7, 255, 0xff, 0x00, 0x00, 0x04}, // sadd d h  
	{0x92bc, &op_sadd,	  4,   7, 255, 0xff, 0x00, 0x00, 0x04}, // sadd e h  
	{0x92bd, &op_sadd,	  5,   7, 255, 0xff, 0x00, 0x00, 0x04}, // sadd f h  
	{0x92be, &op_sadd,	  6,   7, 255, 0xff, 0x00, 0x00, 0x04}, // sadd g h  
	{0x92bf, &op_sadd,	  7,   7, 255, 0xff, 0x00, 0x00, 0x04}, // sadd h h  
	{0x9300, &op_sadd,	  0,   0, 255, 0xff, 0x01, 0x00, 0x01}, // sadd.wr a a  
	{0x9301, &op_sadd,	  1,   0, 255, 0xff, 0x01, 0x00, 0x01}, // sadd.wr b a  
	{0x9302, &op_sadd,	  2,   0, 255, 0xff, 0x01, 0x00, 0x01}, // sadd.wr c a  
	{0x9303, &op_sadd,	  3,   0, 255, 0xff, 0x01, 0x00, 0x01}, // sadd.wr d a  
	{0x9304, &op_sadd,	  4,   0, 255, 0xff, 0x01, 0x00, 0x01}, // sadd.wr e a  
	{0x9305, &op_sadd,	  5,   0, 255, 0xff, 0x01, 0x00, 0x01}, // sadd.wr f a  
	{0x9306, &op_sadd,	  6,   0, 255, 0xff, 0x01, 0x00, 0x01}, // sadd.wr g a  
	{0x9307, &op_sadd,	  7,   0, 255, 0xff, 0x01, 0x00, 0x01}, // sadd.wr h a  
	{0x9308, &op_sadd,	  0,   1, 255, 0xff, 0x01, 0x00, 0x01}, // sadd.wr a b  
	{0x9309, &op_sadd,	  1,   1, 255, 0xff, 0x01, 0x00, 0x01}, // sadd.wr b b  
	{0x930a, &op_sadd,	  2,   1, 255, 0xff, 0x01, 0x00, 0x01}, // sadd.wr c b  
	{0x930b, &op_sadd,	  3,   1, 255, 0xff, 0x01, 0x00, 0x01}, // sadd.wr d b  
	{0x930c, &op_sadd,	  4,   1, 255, 0xff, 0x01, 0x00, 0x01}, // sadd.wr e b  
	{0x930d, &op_sadd,	  5,   1, 255, 0xff, 0x01, 0x00, 0x01}, // sadd.wr f b  
	{0x930e, &op_sadd,	  6,   1, 255, 0xff, 0x01, 0x00, 0x01}, // sadd.wr g b  
	{0x930f, &op_sadd,	  7,   1, 255, 0xff, 0x01, 0x00, 0x01}, // sadd.wr h b  
	{0x9310, &op_sadd,	  0,   2, 255, 0xff, 0x01, 0x00, 0x01}, // sadd.wr a c  
	{0x9311, &op_sadd,	  1,   2, 255, 0xff, 0x01, 0x00, 0x01}, // sadd.wr b c  
	{0x9312, &op_sadd,	  2,   2, 255, 0xff, 0x01, 0x00, 0x01}, // sadd.wr c c  
	{0x9313, &op_sadd,	  3,   2, 255, 0xff, 0x01, 0x00, 0x01}, // sadd.wr d c  
	{0x9314, &op_sadd,	  4,   2, 255, 0xff, 0x01, 0x00, 0x01}, // sadd.wr e c  
	{0x9315, &op_sadd,	  5,   2, 255, 0xff, 0x01, 0x00, 0x01}, // sadd.wr f c  
	{0x9316, &op_sadd,	  6,   2, 255, 0xff, 0x01, 0x00, 0x01}, // sadd.wr g c  
	{0x9317, &op_sadd,	  7,   2, 255, 0xff, 0x01, 0x00, 0x01}, // sadd.wr h c  
	{0x9318, &op_sadd,	  0,   3, 255, 0xff, 0x01, 0x00, 0x01}, // sadd.wr a d  
	{0x9319, &op_sadd,	  1,   3, 255, 0xff, 0x01, 0x00, 0x01}, // sadd.wr b d  
	{0x931a, &op_sadd,	  2,   3, 255, 0xff, 0x01, 0x00, 0x01}, // sadd.wr c d  
	{0x931b, &op_sadd,	  3,   3, 255, 0xff, 0x01, 0x00, 0x01}, // sadd.wr d d  
	{0x931c, &op_sadd,	  4,   3, 255, 0xff, 0x01, 0x00, 0x01}, // sadd.wr e d  
	{0x931d, &op_sadd,	  5,   3, 255, 0xff, 0x01, 0x00, 0x01}, // sadd.wr f d  
	{0x931e, &op_sadd,	  6,   3, 255, 0xff, 0x01, 0x00, 0x01}, // sadd.wr g d  
	{0x931f, &op_sadd,	  7,   3, 255, 0xff, 0x01, 0x00, 0x01}, // sadd.wr h d  
	{0x9320, &op_sadd,	  0,   4, 255, 0xff, 0x01, 0x00, 0x01}, // sadd.wr a e  
	{0x9321, &op_sadd,	  1,   4, 255, 0xff, 0x01, 0x00, 0x01}, // sadd.wr b e  
	{0x9322, &op_sadd,	  2,   4, 255, 0xff, 0x01, 0x00, 0x01}, // sadd.wr c e  
	{0x9323, &op_sadd,	  3,   4, 255, 0xff, 0x01, 0x00, 0x01}, // sadd.wr d e  
	{0x9324, &op_sadd,	  4,   4, 255, 0xff, 0x01, 0x00, 0x01}, // sadd.wr e e  
	{0x9325, &op_sadd,	  5,   4, 255, 0xff, 0x01, 0x00, 0x01}, // sadd.wr f e  
	{0x9326, &op_sadd,	  6,   4, 255, 0xff, 0x01, 0x00, 0x01}, // sadd.wr g e  
	{0x9327, &op_sadd,	  7,   4, 255, 0xff, 0x01, 0x00, 0x01}, // sadd.wr h e  
	{0x9328, &op_sadd,	  0,   5, 255, 0xff, 0x01, 0x00, 0x01}, // sadd.wr a f  
	{0x9329, &op_sadd,	  1,   5, 255, 0xff, 0x01, 0x00, 0x01}, // sadd.wr b f  
	{0x932a, &op_sadd,	  2,   5, 255, 0xff, 0x01, 0x00, 0x01}, // sadd.wr c f  
	{0x932b, &op_sadd,	  3,   5, 255, 0xff, 0x01, 0x00, 0x01}, // sadd.wr d f  
	{0x932c, &op_sadd,	  4,   5, 255, 0xff, 0x01, 0x00, 0x01}, // sadd.wr e f  
	{0x932d, &op_sadd,	  5,   5, 255, 0xff, 0x01, 0x00, 0x01}, // sadd.wr f f  
	{0x932e, &op_sadd,	  6,   5, 255, 0xff, 0x01, 0x00, 0x01}, // sadd.wr g f  
	{0x932f, &op_sadd,	  7,   5, 255, 0xff, 0x01, 0x00, 0x01}, // sadd.wr h f  
	{0x9330, &op_sadd,	  0,   6, 255, 0xff, 0x01, 0x00, 0x01}, // sadd.wr a g  
	{0x9331, &op_sadd,	  1,   6, 255, 0xff, 0x01, 0x00, 0x01}, // sadd.wr b g  
	{0x9332, &op_sadd,	  2,   6, 255, 0xff, 0x01, 0x00, 0x01}, // sadd.wr c g  
	{0x9333, &op_sadd,	  3,   6, 255, 0xff, 0x01, 0x00, 0x01}, // sadd.wr d g  
	{0x9334, &op_sadd,	  4,   6, 255, 0xff, 0x01, 0x00, 0x01}, // sadd.wr e g  
	{0x9335, &op_sadd,	  5,   6, 255, 0xff, 0x01, 0x00, 0x01}, // sadd.wr f g  
	{0x9336, &op_sadd,	  6,   6, 255, 0xff, 0x01, 0x00, 0x01}, // sadd.wr g g  
	{0x9337, &op_sadd,	  7,   6, 255, 0xff, 0x01, 0x00, 0x01}, // sadd.wr h g  
	{0x9338, &op_sadd,	  0,   7, 255, 0xff, 0x01, 0x00, 0x01}, // sadd.wr a h  
	{0x9339, &op_sadd,	  1,   7, 255, 0xff, 0x01, 0x00, 0x01}, // sadd.wr b h  
	{0x933a, &op_sadd,	  2,   7, 255, 0xff, 0x01, 0x00, 0x01}, // sadd.wr c h  
	{0x933b, &op_sadd,	  3,   7, 255, 0xff, 0x01, 0x00, 0x01}, // sadd.wr d h  
	{0x933c, &op_sadd,	  4,   7, 255, 0xff, 0x01, 0x00, 0x01}, // sadd.wr e h  
	{0x933d, &op_sadd,	  5,   7, 255, 0xff, 0x01, 0x00, 0x01}, // sadd.wr f h  
	{0x933e, &op_sadd,	  6,   7, 255, 0xff, 0x01, 0x00, 0x01}, // sadd.wr g h  
	{0x933f, &op_sadd,	  7,   7, 255, 0xff, 0x01, 0x00, 0x01}, // sadd.wr h h  
	{0x9340, &op_sadd,	  0,   0, 255, 0xff, 0x01, 0x00, 0x02}, // sadd.dr a a  
	{0x9341, &op_sadd,	  1,   0, 255, 0xff, 0x01, 0x00, 0x02}, // sadd.dr b a  
	{0x9342, &op_sadd,	  2,   0, 255, 0xff, 0x01, 0x00, 0x02}, // sadd.dr c a  
	{0x9343, &op_sadd,	  3,   0, 255, 0xff, 0x01, 0x00, 0x02}, // sadd.dr d a  
	{0x9344, &op_sadd,	  4,   0, 255, 0xff, 0x01, 0x00, 0x02}, // sadd.dr e a  
	{0x9345, &op_sadd,	  5,   0, 255, 0xff, 0x01, 0x00, 0x02}, // sadd.dr f a  
	{0x9346, &op_sadd,	  6,   0, 255, 0xff, 0x01, 0x00, 0x02}, // sadd.dr g a  
	{0x9347, &op_sadd,	  7,   0, 255, 0xff, 0x01, 0x00, 0x02}, // sadd.dr h a  
	{0x9348, &op_sadd,	  0,   1, 255, 0xff, 0x01, 0x00, 0x02}, // sadd.dr a b  
	{0x9349, &op_sadd,	  1,   1, 255, 0xff, 0x01, 0x00, 0x02}, // sadd.dr b b  
	{0x934a, &op_sadd,	  2,   1, 255, 0xff, 0x01, 0x00, 0x02}, // sadd.dr c b  
	{0x934b, &op_sadd,	  3,   1, 255, 0xff, 0x01, 0x00, 0x02}, // sadd.dr d b  
	{0x934c, &op_sadd,	  4,   1, 255, 0xff, 0x01, 0x00, 0x02}, // sadd.dr e b  
	{0x934d, &op_sadd,	  5,   1, 255, 0xff, 0x01, 0x00, 0x02}, // sadd.dr f b  
	{0x934e, &op_sadd,	  6,   1, 255, 0xff, 0x01, 0x00, 0x02}, // sadd.dr g b  
	{0x934f, &op_sadd,	  7,   1, 255, 0xff, 0x01, 0x00, 0x02}, // sadd.dr h b  
	{0x9350, &op_sadd,	  0,   2, 255, 0xff, 0x01, 0x00, 0x02}, // sadd.dr a c  
	{0x9351, &op_sadd,	  1,   2, 255, 0xff, 0x01, 0x00, 0x02}, // sadd.dr b c  
	{0x9352, &op_sadd,	  2,   2, 255, 0xff, 0x01, 0x00, 0x02}, // sadd.dr c c  
	{0x9353, &op_sadd,	  3,   2, 255, 0xff, 0x01, 0x00, 0x02}, // sadd.dr d c  
	{0x9354, &op_sadd,	  4,   2, 255, 0xff, 0x01, 0x00, 0x02}, // sadd.dr e c  
	{0x9355, &op_sadd,	  5,   2, 255, 0xff, 0x01, 0x00, 0x02}, // sadd.dr f c  
	{0x9356, &op_sadd,	  6,   2, 255, 0xff, 0x01, 0x00, 0x02}, // sadd.dr g c  
	{0x9357, &op_sadd,	  7,   2, 255, 0xff, 0x01, 0x00, 0x02}, // sadd.dr h c  
	{0x9358, &op_sadd,	  0,   3, 255, 0xff, 0x01, 0x00, 0x02}, // sadd.dr a d  
	{0x9359, &op_sadd,	  1,   3, 255, 0xff, 0x01, 0x00, 0x02}, // sadd.dr b d  
	{0x935a, &op_sadd,	  2,   3, 255, 0xff, 0x01, 0x00, 0x02}, // sadd.dr c d  
	{0x935b, &op_sadd,	  3,   3, 255, 0xff, 0x01, 0x00, 0x02}, // sadd.dr d d  
	{0x935c, &op_sadd,	  4,   3, 255, 0xff, 0x01, 0x00, 0x02}, // sadd.dr e d  
	{0x935d, &op_sadd,	  5,   3, 255, 0xff, 0x01, 0x00, 0x02}, // sadd.dr f d  
	{0x935e, &op_sadd,	  6,   3, 255, 0xff, 0x01, 0x00, 0x02}, // sadd.dr g d  
	{0x935f, &op_sadd,	  7,   3, 255, 0xff, 0x01, 0x00, 0x02}, // sadd.dr h d  
	{0x9360, &op_sadd,	  0,   4, 255, 0xff, 0x01, 0x00, 0x02}, // sadd.dr a e  
	{0x9361, &op_sadd,	  1,   4, 255, 0xff, 0x01, 0x00, 0x02}, // sadd.dr b e  
	{0x9362, &op_sadd,	  2,   4, 255, 0xff, 0x01, 0x00, 0x02}, // sadd.dr c e  
	{0x9363, &op_sadd,	  3,   4, 255, 0xff, 0x01, 0x00, 0x02}, // sadd.dr d e  
	{0x9364, &op_sadd,	  4,   4, 255, 0xff, 0x01, 0x00, 0x02}, // sadd.dr e e  
	{0x9365, &op_sadd,	  5,   4, 255, 0xff, 0x01, 0x00, 0x02}, // sadd.dr f e  
	{0x9366, &op_sadd,	  6,   4, 255, 0xff, 0x01, 0x00, 0x02}, // sadd.dr g e  
	{0x9367, &op_sadd,	  7,   4, 255, 0xff, 0x01, 0x00, 0x02}, // sadd.dr h e  
	{0x9368, &op_sadd,	  0,   5, 255, 0xff, 0x01, 0x00, 0x02}, // sadd.dr a f  
	{0x9369, &op_sadd,	  1,   5, 255, 0xff, 0x01, 0x00, 0x02}, // sadd.dr b f  
	{0x936a, &op_sadd,	  2,   5, 255, 0xff, 0x01, 0x00, 0x02}, // sadd.dr c f  
	{0x936b, &op_sadd,	  3,   5, 255, 0xff, 0x01, 0x00, 0x02}, // sadd.dr d f  
	{0x936c, &op_sadd,	  4,   5, 255, 0xff, 0x01, 0x00, 0x02}, // sadd.dr e f  
	{0x936d, &op_sadd,	  5,   5, 255, 0xff, 0x01, 0x00, 0x02}, // sadd.dr f f  
	{0x936e, &op_sadd,	  6,   5, 255, 0xff, 0x01, 0x00, 0x02}, // sadd.dr g f  
	{0x936f, &op_sadd,	  7,   5, 255, 0xff, 0x01, 0x00, 0x02}, // sadd.dr h f  
	{0x9370, &op_sadd,	  0,   6, 255, 0xff, 0x01, 0x00, 0x02}, // sadd.dr a g  
	{0x9371, &op_sadd,	  1,   6, 255, 0xff, 0x01, 0x00, 0x02}, // sadd.dr b g  
	{0x9372, &op_sadd,	  2,   6, 255, 0xff, 0x01, 0x00, 0x02}, // sadd.dr c g  
	{0x9373, &op_sadd,	  3,   6, 255, 0xff, 0x01, 0x00, 0x02}, // sadd.dr d g  
	{0x9374, &op_sadd,	  4,   6, 255, 0xff, 0x01, 0x00, 0x02}, // sadd.dr e g  
	{0x9375, &op_sadd,	  5,   6, 255, 0xff, 0x01, 0x00, 0x02}, // sadd.dr f g  
	{0x9376, &op_sadd,	  6,   6, 255, 0xff, 0x01, 0x00, 0x02}, // sadd.dr g g  
	{0x9377, &op_sadd,	  7,   6, 255, 0xff, 0x01, 0x00, 0x02}, // sadd.dr h g  
	{0x9378, &op_sadd,	  0,   7, 255, 0xff, 0x01, 0x00, 0x02}, // sadd.dr a h  
	{0x9379, &op_sadd,	  1,   7, 255, 0xff, 0x01, 0x00, 0x02}, // sadd.dr b h  
	{0x937a, &op_sadd,	  2,   7, 255, 0xff, 0x01, 0x00, 0x02}, // sadd.dr c h  
	{0x937b, &op_sadd,	  3,   7, 255, 0xff, 0x01, 0x00, 0x02}, // sadd.dr d h  
	{0x937c, &op_sadd,	  4,   7, 255, 0xff, 0x01, 0x00, 0x02}, // sadd.dr e h  
	{0x937d, &op_sadd,	  5,   7, 255, 0xff, 0x01, 0x00, 0x02}, // sadd.dr f h  
	{0x937e, &op_sadd,	  6,   7, 255, 0xff, 0x01, 0x00, 0x02}, // sadd.dr g h  
	{0x937f, &op_sadd,	  7,   7, 255, 0xff, 0x01, 0x00, 0x02}, // sadd.dr h h  
	{0x9380, &op_sadd,	  0,   0, 255, 0xff, 0x01, 0x00, 0x04}, // sadd.r a a  
	{0x9381, &op_sadd,	  1,   0, 255, 0xff, 0x01, 0x00, 0x04}, // sadd.r b a  
	{0x9382, &op_sadd,	  2,   0, 255, 0xff, 0x01, 0x00, 0x04}, // sadd.r c a  
	{0x9383, &op_sadd,	  3,   0, 255, 0xff, 0x01, 0x00, 0x04}, // sadd.r d a  
	{0x9384, &op_sadd,	  4,   0, 255, 0xff, 0x01, 0x00, 0x04}, // sadd.r e a  
	{0x9385, &op_sadd,	  5,   0, 255, 0xff, 0x01, 0x00, 0x04}, // sadd.r f a  
	{0x9386, &op_sadd,	  6,   0, 255, 0xff, 0x01, 0x00, 0x04}, // sadd.r g a  
	{0x9387, &op_sadd,	  7,   0, 255, 0xff, 0x01, 0x00, 0x04}, // sadd.r h a  
	{0x9388, &op_sadd,	  0,   1, 255, 0xff, 0x01, 0x00, 0x04}, // sadd.r a b  
	{0x9389, &op_sadd,	  1,   1, 255, 0xff, 0x01, 0x00, 0x04}, // sadd.r b b  
	{0x938a, &op_sadd,	  2,   1, 255, 0xff, 0x01, 0x00, 0x04}, // sadd.r c b  
	{0x938b, &op_sadd,	  3,   1, 255, 0xff, 0x01, 0x00, 0x04}, // sadd.r d b  
	{0x938c, &op_sadd,	  4,   1, 255, 0xff, 0x01, 0x00, 0x04}, // sadd.r e b  
	{0x938d, &op_sadd,	  5,   1, 255, 0xff, 0x01, 0x00, 0x04}, // sadd.r f b  
	{0x938e, &op_sadd,	  6,   1, 255, 0xff, 0x01, 0x00, 0x04}, // sadd.r g b  
	{0x938f, &op_sadd,	  7,   1, 255, 0xff, 0x01, 0x00, 0x04}, // sadd.r h b  
	{0x9390, &op_sadd,	  0,   2, 255, 0xff, 0x01, 0x00, 0x04}, // sadd.r a c  
	{0x9391, &op_sadd,	  1,   2, 255, 0xff, 0x01, 0x00, 0x04}, // sadd.r b c  
	{0x9392, &op_sadd,	  2,   2, 255, 0xff, 0x01, 0x00, 0x04}, // sadd.r c c  
	{0x9393, &op_sadd,	  3,   2, 255, 0xff, 0x01, 0x00, 0x04}, // sadd.r d c  
	{0x9394, &op_sadd,	  4,   2, 255, 0xff, 0x01, 0x00, 0x04}, // sadd.r e c  
	{0x9395, &op_sadd,	  5,   2, 255, 0xff, 0x01, 0x00, 0x04}, // sadd.r f c  
	{0x9396, &op_sadd,	  6,   2, 255, 0xff, 0x01, 0x00, 0x04}, // sadd.r g c  
	{0x9397, &op_sadd,	  7,   2, 255, 0xff, 0x01, 0x00, 0x04}, // sadd.r h c  
	{0x9398, &op_sadd,	  0,   3, 255, 0xff, 0x01, 0x00, 0x04}, // sadd.r a d  
	{0x9399, &op_sadd,	  1,   3, 255, 0xff, 0x01, 0x00, 0x04}, // sadd.r b d  
	{0x939a, &op_sadd,	  2,   3, 255, 0xff, 0x01, 0x00, 0x04}, // sadd.r c d  
	{0x939b, &op_sadd,	  3,   3, 255, 0xff, 0x01, 0x00, 0x04}, // sadd.r d d  
	{0x939c, &op_sadd,	  4,   3, 255, 0xff, 0x01, 0x00, 0x04}, // sadd.r e d  
	{0x939d, &op_sadd,	  5,   3, 255, 0xff, 0x01, 0x00, 0x04}, // sadd.r f d  
	{0x939e, &op_sadd,	  6,   3, 255, 0xff, 0x01, 0x00, 0x04}, // sadd.r g d  
	{0x939f, &op_sadd,	  7,   3, 255, 0xff, 0x01, 0x00, 0x04}, // sadd.r h d  
	{0x93a0, &op_sadd,	  0,   4, 255, 0xff, 0x01, 0x00, 0x04}, // sadd.r a e  
	{0x93a1, &op_sadd,	  1,   4, 255, 0xff, 0x01, 0x00, 0x04}, // sadd.r b e  
	{0x93a2, &op_sadd,	  2,   4, 255, 0xff, 0x01, 0x00, 0x04}, // sadd.r c e  
	{0x93a3, &op_sadd,	  3,   4, 255, 0xff, 0x01, 0x00, 0x04}, // sadd.r d e  
	{0x93a4, &op_sadd,	  4,   4, 255, 0xff, 0x01, 0x00, 0x04}, // sadd.r e e  
	{0x93a5, &op_sadd,	  5,   4, 255, 0xff, 0x01, 0x00, 0x04}, // sadd.r f e  
	{0x93a6, &op_sadd,	  6,   4, 255, 0xff, 0x01, 0x00, 0x04}, // sadd.r g e  
	{0x93a7, &op_sadd,	  7,   4, 255, 0xff, 0x01, 0x00, 0x04}, // sadd.r h e  
	{0x93a8, &op_sadd,	  0,   5, 255, 0xff, 0x01, 0x00, 0x04}, // sadd.r a f  
	{0x93a9, &op_sadd,	  1,   5, 255, 0xff, 0x01, 0x00, 0x04}, // sadd.r b f  
	{0x93aa, &op_sadd,	  2,   5, 255, 0xff, 0x01, 0x00, 0x04}, // sadd.r c f  
	{0x93ab, &op_sadd,	  3,   5, 255, 0xff, 0x01, 0x00, 0x04}, // sadd.r d f  
	{0x93ac, &op_sadd,	  4,   5, 255, 0xff, 0x01, 0x00, 0x04}, // sadd.r e f  
	{0x93ad, &op_sadd,	  5,   5, 255, 0xff, 0x01, 0x00, 0x04}, // sadd.r f f  
	{0x93ae, &op_sadd,	  6,   5, 255, 0xff, 0x01, 0x00, 0x04}, // sadd.r g f  
	{0x93af, &op_sadd,	  7,   5, 255, 0xff, 0x01, 0x00, 0x04}, // sadd.r h f  
	{0x93b0, &op_sadd,	  0,   6, 255, 0xff, 0x01, 0x00, 0x04}, // sadd.r a g  
	{0x93b1, &op_sadd,	  1,   6, 255, 0xff, 0x01, 0x00, 0x04}, // sadd.r b g  
	{0x93b2, &op_sadd,	  2,   6, 255, 0xff, 0x01, 0x00, 0x04}, // sadd.r c g  
	{0x93b3, &op_sadd,	  3,   6, 255, 0xff, 0x01, 0x00, 0x04}, // sadd.r d g  
	{0x93b4, &op_sadd,	  4,   6, 255, 0xff, 0x01, 0x00, 0x04}, // sadd.r e g  
	{0x93b5, &op_sadd,	  5,   6, 255, 0xff, 0x01, 0x00, 0x04}, // sadd.r f g  
	{0x93b6, &op_sadd,	  6,   6, 255, 0xff, 0x01, 0x00, 0x04}, // sadd.r g g  
	{0x93b7, &op_sadd,	  7,   6, 255, 0xff, 0x01, 0x00, 0x04}, // sadd.r h g  
	{0x93b8, &op_sadd,	  0,   7, 255, 0xff, 0x01, 0x00, 0x04}, // sadd.r a h  
	{0x93b9, &op_sadd,	  1,   7, 255, 0xff, 0x01, 0x00, 0x04}, // sadd.r b h  
	{0x93ba, &op_sadd,	  2,   7, 255, 0xff, 0x01, 0x00, 0x04}, // sadd.r c h  
	{0x93bb, &op_sadd,	  3,   7, 255, 0xff, 0x01, 0x00, 0x04}, // sadd.r d h  
	{0x93bc, &op_sadd,	  4,   7, 255, 0xff, 0x01, 0x00, 0x04}, // sadd.r e h  
	{0x93bd, &op_sadd,	  5,   7, 255, 0xff, 0x01, 0x00, 0x04}, // sadd.r f h  
	{0x93be, &op_sadd,	  6,   7, 255, 0xff, 0x01, 0x00, 0x04}, // sadd.r g h  
	{0x93bf, &op_sadd,	  7,   7, 255, 0xff, 0x01, 0x00, 0x04}, // sadd.r h h  
	{0x92c8, &op_sadd,	  0,   8, 255, 0xff, 0x00, 0x01, 0x01}, // sadd.wi a <literal>  
	{0x92c9, &op_sadd,	  1,   8, 255, 0xff, 0x00, 0x01, 0x01}, // sadd.wi b <literal>  
	{0x92ca, &op_sadd,	  2,   8, 255, 0xff, 0x00, 0x01, 0x01}, // sadd.wi c <literal>  
	{0x92cb, &op_sadd,	  3,   8, 255, 0xff, 0x00, 0x01, 0x01}, // sadd.wi d <literal>  
	{0x92cc, &op_sadd,	  4,   8, 255, 0xff, 0x00, 0x01, 0x01}, // sadd.wi e <literal>  
	{0x92cd, &op_sadd,	  5,   8, 255, 0xff, 0x00, 0x01, 0x01}, // sadd.wi f <literal>  
	{0x92ce, &op_sadd,	  6,   8, 255, 0xff, 0x00, 0x01, 0x01}, // sadd.wi g <literal>  
	{0x92cf, &op_sadd,	  7,   8, 255, 0xff, 0x00, 0x01, 0x01}, // sadd.wi h <literal>  
	{0x92d0, &op_sadd,	  0,   8, 255, 0xff, 0x00, 0x02, 0x02}, // sadd.di a <literal>  
	{0x92d1, &op_sadd,	  1,   8, 255, 0xff, 0x00, 0x02, 0x02}, // sadd.di b <literal>  
	{0x92d2, &op_sadd,	  2,   8, 255, 0xff, 0x00, 0x02, 0x02}, // sadd.di c <literal>  
	{0x92d3, &op_sadd,	  3,   8, 255, 0xff, 0x00, 0x02, 0x02}, // sadd.di d <literal>  
	{0x92d4, &op_sadd,	  4,   8, 255, 0xff, 0x00, 0x02, 0x02}, // sadd.di e <literal>  
	{0x92d5, &op_sadd,	  5,   8, 255, 0xff, 0x00, 0x02, 0x02}, // sadd.di f <literal>  
	{0x92d6, &op_sadd,	  6,   8, 255, 0xff, 0x00, 0x02, 0x02}, // sadd.di g <literal>  
	{0x92d7, &op_sadd,	  7,   8, 255, 0xff, 0x00, 0x02, 0x02}, // sadd.di h <literal>  
	{0x92e0, &op_sadd,	  0,   8, 255, 0xff, 0x00, 0x04, 0x04}, // sadd.i a <literal>  
	{0x92e1, &op_sadd,	  1,   8, 255, 0xff, 0x00, 0x04, 0x04}, // sadd.i b <literal>  
	{0x92e2, &op_sadd,	  2,   8, 255, 0xff, 0x00, 0x04, 0x04}, // sadd.i c <literal>  
	{0x92e3, &op_sadd,	  3,   8, 255, 0xff, 0x00, 0x04, 0x04}, // sadd.i d <literal>  
	{0x92e4, &op_sadd,	  4,   8, 255, 0xff, 0x00, 0x04, 0x04}, // sadd.i e <literal>  
	{0x92e5, &op_sadd,	  5,   8, 255, 0xff, 0x00, 0x04, 0x04}, // sadd.i f <literal>  
	{0x92e6, &op_sadd,	  6,   8, 255, 0xff, 0x00, 0x04, 0x04}, // sadd.i g <literal>  
	{0x92e7, &op_sadd,	  7,   8, 255, 0xff, 0x00, 0x04, 0x04}, // sadd.i h <literal>  
	{0x93c8, &op_sadd,	  0,   8, 255, 0xff, 0x01, 0x04, 0x01}, // sadd.wri a <literal>  
	{0x93c9, &op_sadd,	  1,   8, 255, 0xff, 0x01, 0x04, 0x01}, // sadd.wri b <literal>  
	{0x93ca, &op_sadd,	  2,   8, 255, 0xff, 0x01, 0x04, 0x01}, // sadd.wri c <literal>  
	{0x93cb, &op_sadd,	  3,   8, 255, 0xff, 0x01, 0x04, 0x01}, // sadd.wri d <literal>  
	{0x93cc, &op_sadd,	  4,   8, 255, 0xff, 0x01, 0x04, 0x01}, // sadd.wri e <literal>  
	{0x93cd, &op_sadd,	  5,   8, 255, 0xff, 0x01, 0x04, 0x01}, // sadd.wri f <literal>  
	{0x93ce, &op_sadd,	  6,   8, 255, 0xff, 0x01, 0x04, 0x01}, // sadd.wri g <literal>  
	{0x93cf, &op_sadd,	  7,   8, 255, 0xff, 0x01, 0x04, 0x01}, // sadd.wri h <literal>  
	{0x93d0, &op_sadd,	  0,   8, 255, 0xff, 0x01, 0x04, 0x02}, // sadd.dri a <literal>  
	{0x93d1, &op_sadd,	  1,   8, 255, 0xff, 0x01, 0x04, 0x02}, // sadd.dri b <literal>  
	{0x93d2, &op_sadd,	  2,   8, 255, 0xff, 0x01, 0x04, 0x02}, // sadd.dri c <literal>  
	{0x93d3, &op_sadd,	  3,   8, 255, 0xff, 0x01, 0x04, 0x02}, // sadd.dri d <literal>  
	{0x93d4, &op_sadd,	  4,   8, 255, 0xff, 0x01, 0x04, 0x02}, // sadd.dri e <literal>  
	{0x93d5, &op_sadd,	  5,   8, 255, 0xff, 0x01, 0x04, 0x02}, // sadd.dri f <literal>  
	{0x93d6, &op_sadd,	  6,   8, 255, 0xff, 0x01, 0x04, 0x02}, // sadd.dri g <literal>  
	{0x93d7, &op_sadd,	  7,   8, 255, 0xff, 0x01, 0x04, 0x02}, // sadd.dri h <literal>  
	{0x93e0, &op_sadd,	  0,   8, 255, 0xff, 0x01, 0x04, 0x04}, // sadd.ri a <literal>  
	{0x93e1, &op_sadd,	  1,   8, 255, 0xff, 0x01, 0x04, 0x04}, // sadd.ri b <literal>  
	{0x93e2, &op_sadd,	  2,   8, 255, 0xff, 0x01, 0x04, 0x04}, // sadd.ri c <literal>  
	{0x93e3, &op_sadd,	  3,   8, 255, 0xff, 0x01, 0x04, 0x04}, // sadd.ri d <literal>  
	{0x93e4, &op_sadd,	  4,   8, 255, 0xff, 0x01, 0x04, 0x04}, // sadd.ri e <literal>  
	{0x93e5, &op_sadd,	  5,   8, 255, 0xff, 0x01, 0x04, 0x04}, // sadd.ri f <literal>  
	{0x93e6, &op_sadd,	  6,   8, 255, 0xff, 0x01, 0x04, 0x04}, // sadd.ri g <literal>  
	{0x93e7, &op_sadd,	  7,   8, 255, 0xff, 0x01, 0x04, 0x04}, // sadd.ri h <literal>  
	{0x9400, &op_slsh,	  0,   0, 255, 0xff, 0x00, 0x00, 0x01}, // slsh.w a a  
	{0x9401, &op_slsh,	  1,   0, 255, 0xff, 0x00, 0x00, 0x01}, // slsh.w b a  
	{0x9402, &op_slsh,	  2,   0, 255, 0xff, 0x00, 0x00, 0x01}, // slsh.w c a  
	{0x9403, &op_slsh,	  3,   0, 255, 0xff, 0x00, 0x00, 0x01}, // slsh.w d a  
	{0x9404, &op_slsh,	  4,   0, 255, 0xff, 0x00, 0x00, 0x01}, // slsh.w e a  
	{0x9405, &op_slsh,	  5,   0, 255, 0xff, 0x00, 0x00, 0x01}, // slsh.w f a  
	{0x9406, &op_slsh,	  6,   0, 255, 0xff, 0x00, 0x00, 0x01}, // slsh.w g a  
	{0x9407, &op_slsh,	  7,   0, 255, 0xff, 0x00, 0x00, 0x01}, // slsh.w h a  
	{0x9408, &op_slsh,	  0,   1, 255, 0xff, 0x00, 0x00, 0x01}, // slsh.w a b  
	{0x9409, &op_slsh,	  1,   1, 255, 0xff, 0x00, 0x00, 0x01}, // slsh.w b b  
	{0x940a, &op_slsh,	  2,   1, 255, 0xff, 0x00, 0x00, 0x01}, // slsh.w c b  
	{0x940b, &op_slsh,	  3,   1, 255, 0xff, 0x00, 0x00, 0x01}, // slsh.w d b  
	{0x940c, &op_slsh,	  4,   1, 255, 0xff, 0x00, 0x00, 0x01}, // slsh.w e b  
	{0x940d, &op_slsh,	  5,   1, 255, 0xff, 0x00, 0x00, 0x01}, // slsh.w f b  
	{0x940e, &op_slsh,	  6,   1, 255, 0xff, 0x00, 0x00, 0x01}, // slsh.w g b  
	{0x940f, &op_slsh,	  7,   1, 255, 0xff, 0x00, 0x00, 0x01}, // slsh.w h b  
	{0x9410, &op_slsh,	  0,   2, 255, 0xff, 0x00, 0x00, 0x01}, // slsh.w a c  
	{0x9411, &op_slsh,	  1,   2, 255, 0xff, 0x00, 0x00, 0x01}, // slsh.w b c  
	{0x9412, &op_slsh,	  2,   2, 255, 0xff, 0x00, 0x00, 0x01}, // slsh.w c c  
	{0x9413, &op_slsh,	  3,   2, 255, 0xff, 0x00, 0x00, 0x01}, // slsh.w d c  
	{0x9414, &op_slsh,	  4,   2, 255, 0xff, 0x00, 0x00, 0x01}, // slsh.w e c  
	{0x9415, &op_slsh,	  5,   2, 255, 0xff, 0x00, 0x00, 0x01}, // slsh.w f c  
	{0x9416, &op_slsh,	  6,   2, 255, 0xff, 0x00, 0x00, 0x01}, // slsh.w g c  
	{0x9417, &op_slsh,	  7,   2, 255, 0xff, 0x00, 0x00, 0x01}, // slsh.w h c  
	{0x9418, &op_slsh,	  0,   3, 255, 0xff, 0x00, 0x00, 0x01}, // slsh.w a d  
	{0x9419, &op_slsh,	  1,   3, 255, 0xff, 0x00, 0x00, 0x01}, // slsh.w b d  
	{0x941a, &op_slsh,	  2,   3, 255, 0xff, 0x00, 0x00, 0x01}, // slsh.w c d  
	{0x941b, &op_slsh,	  3,   3, 255, 0xff, 0x00, 0x00, 0x01}, // slsh.w d d  
	{0x941c, &op_slsh,	  4,   3, 255, 0xff, 0x00, 0x00, 0x01}, // slsh.w e d  
	{0x941d, &op_slsh,	  5,   3, 255, 0xff, 0x00, 0x00, 0x01}, // slsh.w f d  
	{0x941e, &op_slsh,	  6,   3, 255, 0xff, 0x00, 0x00, 0x01}, // slsh.w g d  
	{0x941f, &op_slsh,	  7,   3, 255, 0xff, 0x00, 0x00, 0x01}, // slsh.w h d  
	{0x9420, &op_slsh,	  0,   4, 255, 0xff, 0x00, 0x00, 0x01}, // slsh.w a e  
	{0x9421, &op_slsh,	  1,   4, 255, 0xff, 0x00, 0x00, 0x01}, // slsh.w b e  
	{0x9422, &op_slsh,	  2,   4, 255, 0xff, 0x00, 0x00, 0x01}, // slsh.w c e  
	{0x9423, &op_slsh,	  3,   4, 255, 0xff, 0x00, 0x00, 0x01}, // slsh.w d e  
	{0x9424, &op_slsh,	  4,   4, 255, 0xff, 0x00, 0x00, 0x01}, // slsh.w e e  
	{0x9425, &op_slsh,	  5,   4, 255, 0xff, 0x00, 0x00, 0x01}, // slsh.w f e  
	{0x9426, &op_slsh,	  6,   4, 255, 0xff, 0x00, 0x00, 0x01}, // slsh.w g e  
	{0x9427, &op_slsh,	  7,   4, 255, 0xff, 0x00, 0x00, 0x01}, // slsh.w h e  
	{0x9428, &op_slsh,	  0,   5, 255, 0xff, 0x00, 0x00, 0x01}, // slsh.w a f  
	{0x9429, &op_slsh,	  1,   5, 255, 0xff, 0x00, 0x00, 0x01}, // slsh.w b f  
	{0x942a, &op_slsh,	  2,   5, 255, 0xff, 0x00, 0x00, 0x01}, // slsh.w c f  
	{0x942b, &op_slsh,	  3,   5, 255, 0xff, 0x00, 0x00, 0x01}, // slsh.w d f  
	{0x942c, &op_slsh,	  4,   5, 255, 0xff, 0x00, 0x00, 0x01}, // slsh.w e f  
	{0x942d, &op_slsh,	  5,   5, 255, 0xff, 0x00, 0x00, 0x01}, // slsh.w f f  
	{0x942e, &op_slsh,	  6,   5, 255, 0xff, 0x00, 0x00, 0x01}, // slsh.w g f  
	{0x942f, &op_slsh,	  7,   5, 255, 0xff, 0x00, 0x00, 0x01}, // slsh.w h f  
	{0x9430, &op_slsh,	  0,   6, 255, 0xff, 0x00, 0x00, 0x01}, // slsh.w a g  
	{0x9431, &op_slsh,	  1,   6, 255, 0xff, 0x00, 0x00, 0x01}, // slsh.w b g  
	{0x9432, &op_slsh,	  2,   6, 255, 0xff, 0x00, 0x00, 0x01}, // slsh.w c g  
	{0x9433, &op_slsh,	  3,   6, 255, 0xff, 0x00, 0x00, 0x01}, // slsh.w d g  
	{0x9434, &op_slsh,	  4,   6, 255, 0xff, 0x00, 0x00, 0x01}, // slsh.w e g  
	{0x9435, &op_slsh,	  5,   6, 255, 0xff, 0x00, 0x00, 0x01}, // slsh.w f g  
	{0x9436, &op_slsh,	  6,   6, 255, 0xff, 0x00, 0x00, 0x01}, // slsh.w g g  
	{0x9437, &op_slsh,	  7,   6, 255, 0xff, 0x00, 0x00, 0x01}, // slsh.w h g  
	{0x9438, &op_slsh,	  0,   7, 255, 0xff, 0x00, 0x00, 0x01}, // slsh.w a h  
	{0x9439, &op_slsh,	  1,   7, 255, 0xff, 0x00, 0x00, 0x01}, // slsh.w b h  
	{0x943a, &op_slsh,	  2,   7, 255, 0xff, 0x00, 0x00, 0x01}, // slsh.w c h  
	{0x943b, &op_slsh,	  3,   7, 255, 0xff, 0x00, 0x00, 0x01}, // slsh.w d h  
	{0x943c, &op_slsh,	  4,   7, 255, 0xff, 0x00, 0x00, 0x01}, // slsh.w e h  
	{0x943d, &op_slsh,	  5,   7, 255, 0xff, 0x00, 0x00, 0x01}, // slsh.w f h  
	{0x943e, &op_slsh,	  6,   7, 255, 0xff, 0x00, 0x00, 0x01}, // slsh.w g h  
	{0x943f, &op_slsh,	  7,   7, 255, 0xff, 0x00, 0x00, 0x01}, // slsh.w h h  
	{0x9440, &op_slsh,	  0,   0, 255, 0xff, 0x00, 0x00, 0x02}, // slsh.d a a  
	{0x9441, &op_slsh,	  1,   0, 255, 0xff, 0x00, 0x00, 0x02}, // slsh.d b a  
	{0x9442, &op_slsh,	  2,   0, 255, 0xff, 0x00, 0x00, 0x02}, // slsh.d c a  
	{0x9443, &op_slsh,	  3,   0, 255, 0xff, 0x00, 0x00, 0x02}, // slsh.d d a  
	{0x9444, &op_slsh,	  4,   0, 255, 0xff, 0x00, 0x00, 0x02}, // slsh.d e a  
	{0x9445, &op_slsh,	  5,   0, 255, 0xff, 0x00, 0x00, 0x02}, // slsh.d f a  
	{0x9446, &op_slsh,	  6,   0, 255, 0xff, 0x00, 0x00, 0x02}, // slsh.d g a  
	{0x9447, &op_slsh,	  7,   0, 255, 0xff, 0x00, 0x00, 0x02}, // slsh.d h a  
	{0x9448, &op_slsh,	  0,   1, 255, 0xff, 0x00, 0x00, 0x02}, // slsh.d a b  
	{0x9449, &op_slsh,	  1,   1, 255, 0xff, 0x00, 0x00, 0x02}, // slsh.d b b  
	{0x944a, &op_slsh,	  2,   1, 255, 0xff, 0x00, 0x00, 0x02}, // slsh.d c b  
	{0x944b, &op_slsh,	  3,   1, 255, 0xff, 0x00, 0x00, 0x02}, // slsh.d d b  
	{0x944c, &op_slsh,	  4,   1, 255, 0xff, 0x00, 0x00, 0x02}, // slsh.d e b  
	{0x944d, &op_slsh,	  5,   1, 255, 0xff, 0x00, 0x00, 0x02}, // slsh.d f b  
	{0x944e, &op_slsh,	  6,   1, 255, 0xff, 0x00, 0x00, 0x02}, // slsh.d g b  
	{0x944f, &op_slsh,	  7,   1, 255, 0xff, 0x00, 0x00, 0x02}, // slsh.d h b  
	{0x9450, &op_slsh,	  0,   2, 255, 0xff, 0x00, 0x00, 0x02}, // slsh.d a c  
	{0x9451, &op_slsh,	  1,   2, 255, 0xff, 0x00, 0x00, 0x02}, // slsh.d b c  
	{0x9452, &op_slsh,	  2,   2, 255, 0xff, 0x00, 0x00, 0x02}, // slsh.d c c  
	{0x9453, &op_slsh,	  3,   2, 255, 0xff, 0x00, 0x00, 0x02}, // slsh.d d c  
	{0x9454, &op_slsh,	  4,   2, 255, 0xff, 0x00, 0x00, 0x02}, // slsh.d e c  
	{0x9455, &op_slsh,	  5,   2, 255, 0xff, 0x00, 0x00, 0x02}, // slsh.d f c  
	{0x9456, &op_slsh,	  6,   2, 255, 0xff, 0x00, 0x00, 0x02}, // slsh.d g c  
	{0x9457, &op_slsh,	  7,   2, 255, 0xff, 0x00, 0x00, 0x02}, // slsh.d h c  
	{0x9458, &op_slsh,	  0,   3, 255, 0xff, 0x00, 0x00, 0x02}, // slsh.d a d  
	{0x9459, &op_slsh,	  1,   3, 255, 0xff, 0x00, 0x00, 0x02}, // slsh.d b d  
	{0x945a, &op_slsh,	  2,   3, 255, 0xff, 0x00, 0x00, 0x02}, // slsh.d c d  
	{0x945b, &op_slsh,	  3,   3, 255, 0xff, 0x00, 0x00, 0x02}, // slsh.d d d  
	{0x945c, &op_slsh,	  4,   3, 255, 0xff, 0x00, 0x00, 0x02}, // slsh.d e d  
	{0x945d, &op_slsh,	  5,   3, 255, 0xff, 0x00, 0x00, 0x02}, // slsh.d f d  
	{0x945e, &op_slsh,	  6,   3, 255, 0xff, 0x00, 0x00, 0x02}, // slsh.d g d  
	{0x945f, &op_slsh,	  7,   3, 255, 0xff, 0x00, 0x00, 0x02}, // slsh.d h d  
	{0x9460, &op_slsh,	  0,   4, 255, 0xff, 0x00, 0x00, 0x02}, // slsh.d a e  
	{0x9461, &op_slsh,	  1,   4, 255, 0xff, 0x00, 0x00, 0x02}, // slsh.d b e  
	{0x9462, &op_slsh,	  2,   4, 255, 0xff, 0x00, 0x00, 0x02}, // slsh.d c e  
	{0x9463, &op_slsh,	  3,   4, 255, 0xff, 0x00, 0x00, 0x02}, // slsh.d d e  
	{0x9464, &op_slsh,	  4,   4, 255, 0xff, 0x00, 0x00, 0x02}, // slsh.d e e  
	{0x9465, &op_slsh,	  5,   4, 255, 0xff, 0x00, 0x00, 0x02}, // slsh.d f e  
	{0x9466, &op_slsh,	  6,   4, 255, 0xff, 0x00, 0x00, 0x02}, // slsh.d g e  
	{0x9467, &op_slsh,	  7,   4, 255, 0xff, 0x00, 0x00, 0x02}, // slsh.d h e  
	{0x9468, &op_slsh,	  0,   5, 255, 0xff, 0x00, 0x00, 0x02}, // slsh.d a f  
	{0x9469, &op_slsh,	  1,   5, 255, 0xff, 0x00, 0x00, 0x02}, // slsh.d b f  
	{0x946a, &op_slsh,	  2,   5, 255, 0xff, 0x00, 0x00, 0x02}, // slsh.d c f  
	{0x946b, &op_slsh,	  3,   5, 255, 0xff, 0x00, 0x00, 0x02}, // slsh.d d f  
	{0x946c, &op_slsh,	  4,   5, 255, 0xff, 0x00, 0x00, 0x02}, // slsh.d e f  
	{0x946d, &op_slsh,	  5,   5, 255, 0xff, 0x00, 0x00, 0x02}, // slsh.d f f  
	{0x946e, &op_slsh,	  6,   5, 255, 0xff, 0x00, 0x00, 0x02}, // slsh.d g f  
	{0x946f, &op_slsh,	  7,   5, 255, 0xff, 0x00, 0x00, 0x02}, // slsh.d h f  
	{0x9470, &op_slsh,	  0,   6, 255, 0xff, 0x00, 0x00, 0x02}, // slsh.d a g  
	{0x9471, &op_slsh,	  1,   6, 255, 0xff, 0x00, 0x00, 0x02}, // slsh.d b g  
	{0x9472, &op_slsh,	  2,   6, 255, 0xff, 0x00, 0x00, 0x02}, // slsh.d c g  
	{0x9473, &op_slsh,	  3,   6, 255, 0xff, 0x00, 0x00, 0x02}, // slsh.d d g  
	{0x9474, &op_slsh,	  4,   6, 255, 0xff, 0x00, 0x00, 0x02}, // slsh.d e g  
	{0x9475, &op_slsh,	  5,   6, 255, 0xff, 0x00, 0x00, 0x02}, // slsh.d f g  
	{0x9476, &op_slsh,	  6,   6, 255, 0xff, 0x00, 0x00, 0x02}, // slsh.d g g  
	{0x9477, &op_slsh,	  7,   6, 255, 0xff, 0x00, 0x00, 0x02}, // slsh.d h g  
	{0x9478, &op_slsh,	  0,   7, 255, 0xff, 0x00, 0x00, 0x02}, // slsh.d a h  
	{0x9479, &op_slsh,	  1,   7, 255, 0xff, 0x00, 0x00, 0x02}, // slsh.d b h  
	{0x947a, &op_slsh,	  2,   7, 255, 0xff, 0x00, 0x00, 0x02}, // slsh.d c h  
	{0x947b, &op_slsh,	  3,   7, 255, 0xff, 0x00, 0x00, 0x02}, // slsh.d d h  
	{0x947c, &op_slsh,	  4,   7, 255, 0xff, 0x00, 0x00, 0x02}, // slsh.d e h  
	{0x947d, &op_slsh,	  5,   7, 255, 0xff, 0x00, 0x00, 0x02}, // slsh.d f h  
	{0x947e, &op_slsh,	  6,   7, 255, 0xff, 0x00, 0x00, 0x02}, // slsh.d g h  
	{0x947f, &op_slsh,	  7,   7, 255, 0xff, 0x00, 0x00, 0x02}, // slsh.d h h  
	{0x9480, &op_slsh,	  0,   0, 255, 0xff, 0x00, 0x00, 0x04}, // slsh a a  
	{0x9481, &op_slsh,	  1,   0, 255, 0xff, 0x00, 0x00, 0x04}, // slsh b a  
	{0x9482, &op_slsh,	  2,   0, 255, 0xff, 0x00, 0x00, 0x04}, // slsh c a  
	{0x9483, &op_slsh,	  3,   0, 255, 0xff, 0x00, 0x00, 0x04}, // slsh d a  
	{0x9484, &op_slsh,	  4,   0, 255, 0xff, 0x00, 0x00, 0x04}, // slsh e a  
	{0x9485, &op_slsh,	  5,   0, 255, 0xff, 0x00, 0x00, 0x04}, // slsh f a  
	{0x9486, &op_slsh,	  6,   0, 255, 0xff, 0x00, 0x00, 0x04}, // slsh g a  
	{0x9487, &op_slsh,	  7,   0, 255, 0xff, 0x00, 0x00, 0x04}, // slsh h a  
	{0x9488, &op_slsh,	  0,   1, 255, 0xff, 0x00, 0x00, 0x04}, // slsh a b  
	{0x9489, &op_slsh,	  1,   1, 255, 0xff, 0x00, 0x00, 0x04}, // slsh b b  
	{0x948a, &op_slsh,	  2,   1, 255, 0xff, 0x00, 0x00, 0x04}, // slsh c b  
	{0x948b, &op_slsh,	  3,   1, 255, 0xff, 0x00, 0x00, 0x04}, // slsh d b  
	{0x948c, &op_slsh,	  4,   1, 255, 0xff, 0x00, 0x00, 0x04}, // slsh e b  
	{0x948d, &op_slsh,	  5,   1, 255, 0xff, 0x00, 0x00, 0x04}, // slsh f b  
	{0x948e, &op_slsh,	  6,   1, 255, 0xff, 0x00, 0x00, 0x04}, // slsh g b  
	{0x948f, &op_slsh,	  7,   1, 255, 0xff, 0x00, 0x00, 0x04}, // slsh h b  
	{0x9490, &op_slsh,	  0,   2, 255, 0xff, 0x00, 0x00, 0x04}, // slsh a c  
	{0x9491, &op_slsh,	  1,   2, 255, 0xff, 0x00, 0x00, 0x04}, // slsh b c  
	{0x9492, &op_slsh,	  2,   2, 255, 0xff, 0x00, 0x00, 0x04}, // slsh c c  
	{0x9493, &op_slsh,	  3,   2, 255, 0xff, 0x00, 0x00, 0x04}, // slsh d c  
	{0x9494, &op_slsh,	  4,   2, 255, 0xff, 0x00, 0x00, 0x04}, // slsh e c  
	{0x9495, &op_slsh,	  5,   2, 255, 0xff, 0x00, 0x00, 0x04}, // slsh f c  
	{0x9496, &op_slsh,	  6,   2, 255, 0xff, 0x00, 0x00, 0x04}, // slsh g c  
	{0x9497, &op_slsh,	  7,   2, 255, 0xff, 0x00, 0x00, 0x04}, // slsh h c  
	{0x9498, &op_slsh,	  0,   3, 255, 0xff, 0x00, 0x00, 0x04}, // slsh a d  
	{0x9499, &op_slsh,	  1,   3, 255, 0xff, 0x00, 0x00, 0x04}, // slsh b d  
	{0x949a, &op_slsh,	  2,   3, 255, 0xff, 0x00, 0x00, 0x04}, // slsh c d  
	{0x949b, &op_slsh,	  3,   3, 255, 0xff, 0x00, 0x00, 0x04}, // slsh d d  
	{0x949c, &op_slsh,	  4,   3, 255, 0xff, 0x00, 0x00, 0x04}, // slsh e d  
	{0x949d, &op_slsh,	  5,   3, 255, 0xff, 0x00, 0x00, 0x04}, // slsh f d  
	{0x949e, &op_slsh,	  6,   3, 255, 0xff, 0x00, 0x00, 0x04}, // slsh g d  
	{0x949f, &op_slsh,	  7,   3, 255, 0xff, 0x00, 0x00, 0x04}, // slsh h d  
	{0x94a0, &op_slsh,	  0,   4, 255, 0xff, 0x00, 0x00, 0x04}, // slsh a e  
	{0x94a1, &op_slsh,	  1,   4, 255, 0xff, 0x00, 0x00, 0x04}, // slsh b e  
	{0x94a2, &op_slsh,	  2,   4, 255, 0xff, 0x00, 0x00, 0x04}, // slsh c e  
	{0x94a3, &op_slsh,	  3,   4, 255, 0xff, 0x00, 0x00, 0x04}, // slsh d e  
	{0x94a4, &op_slsh,	  4,   4, 255, 0xff, 0x00, 0x00, 0x04}, // slsh e e  
	{0x94a5, &op_slsh,	  5,   4, 255, 0xff, 0x00, 0x00, 0x04}, // slsh f e  
	{0x94a6, &op_slsh,	  6,   4, 255, 0xff, 0x00, 0x00, 0x04}, // slsh g e  
	{0x94a7, &op_slsh,	  7,   4, 255, 0xff, 0x00, 0x00, 0x04}, // slsh h e  
	{0x94a8, &op_slsh,	  0,   5, 255, 0xff, 0x00, 0x00, 0x04}, // slsh a f  
	{0x94a9, &op_slsh,	  1,   5, 255, 0xff, 0x00, 0x00, 0x04}, // slsh b f  
	{0x94aa, &op_slsh,	  2,   5, 255, 0xff, 0x00, 0x00, 0x04}, // slsh c f  
	{0x94ab, &op_slsh,	  3,   5, 255, 0xff, 0x00, 0x00, 0x04}, // slsh d f  
	{0x94ac, &op_slsh,	  4,   5, 255, 0xff, 0x00, 0x00, 0x04}, // slsh e f  
	{0x94ad, &op_slsh,	  5,   5, 255, 0xff, 0x00, 0x00, 0x04}, // slsh f f  
	{0x94ae, &op_slsh,	  6,   5, 255, 0xff, 0x00, 0x00, 0x04}, // slsh g f  
	{0x94af, &op_slsh,	  7,   5, 255, 0xff, 0x00, 0x00, 0x04}, // slsh h f  
	{0x94b0, &op_slsh,	  0,   6, 255, 0xff, 0x00, 0x00, 0x04}, // slsh a g  
	{0x94b1, &op_slsh,	  1,   6, 255, 0xff, 0x00, 0x00, 0x04}, // slsh b g  
	{0x94b2, &op_slsh,	  2,   6, 255, 0xff, 0x00, 0x00, 0x04}, // slsh c g  
	{0x94b3, &op_slsh,	  3,   6, 255, 0xff, 0x00, 0x00, 0x04}, // slsh d g  
	{0x94b4, &op_slsh,	  4,   6, 255, 0xff, 0x00, 0x00, 0x04}, // slsh e g  
	{0x94b5, &op_slsh,	  5,   6, 255, 0xff, 0x00, 0x00, 0x04}, // slsh f g  
	{0x94b6, &op_slsh,	  6,   6, 255, 0xff, 0x00, 0x00, 0x04}, // slsh g g  
	{0x94b7, &op_slsh,	  7,   6, 255, 0xff, 0x00, 0x00, 0x04}, // slsh h g  
	{0x94b8, &op_slsh,	  0,   7, 255, 0xff, 0x00, 0x00, 0x04}, // slsh a h  
	{0x94b9, &op_slsh,	  1,   7, 255, 0xff, 0x00, 0x00, 0x04}, // slsh b h  
	{0x94ba, &op_slsh,	  2,   7, 255, 0xff, 0x00, 0x00, 0x04}, // slsh c h  
	{0x94bb, &op_slsh,	  3,   7, 255, 0xff, 0x00, 0x00, 0x04}, // slsh d h  
	{0x94bc, &op_slsh,	  4,   7, 255, 0xff, 0x00, 0x00, 0x04}, // slsh e h  
	{0x94bd, &op_slsh,	  5,   7, 255, 0xff, 0x00, 0x00, 0x04}, // slsh f h  
	{0x94be, &op_slsh,	  6,   7, 255, 0xff, 0x00, 0x00, 0x04}, // slsh g h  
	{0x94bf, &op_slsh,	  7,   7, 255, 0xff, 0x00, 0x00, 0x04}, // slsh h h  
	{0x9500, &op_slsh,	  0,   0, 255, 0xff, 0x01, 0x00, 0x01}, // slsh.wr a a  
	{0x9501, &op_slsh,	  1,   0, 255, 0xff, 0x01, 0x00, 0x01}, // slsh.wr b a  
	{0x9502, &op_slsh,	  2,   0, 255, 0xff, 0x01, 0x00, 0x01}, // slsh.wr c a  
	{0x9503, &op_slsh,	  3,   0, 255, 0xff, 0x01, 0x00, 0x01}, // slsh.wr d a  
	{0x9504, &op_slsh,	  4,   0, 255, 0xff, 0x01, 0x00, 0x01}, // slsh.wr e a  
	{0x9505, &op_slsh,	  5,   0, 255, 0xff, 0x01, 0x00, 0x01}, // slsh.wr f a  
	{0x9506, &op_slsh,	  6,   0, 255, 0xff, 0x01, 0x00, 0x01}, // slsh.wr g a  
	{0x9507, &op_slsh,	  7,   0, 255, 0xff, 0x01, 0x00, 0x01}, // slsh.wr h a  
	{0x9508, &op_slsh,	  0,   1, 255, 0xff, 0x01, 0x00, 0x01}, // slsh.wr a b  
	{0x9509, &op_slsh,	  1,   1, 255, 0xff, 0x01, 0x00, 0x01}, // slsh.wr b b  
	{0x950a, &op_slsh,	  2,   1, 255, 0xff, 0x01, 0x00, 0x01}, // slsh.wr c b  
	{0x950b, &op_slsh,	  3,   1, 255, 0xff, 0x01, 0x00, 0x01}, // slsh.wr d b  
	{0x950c, &op_slsh,	  4,   1, 255, 0xff, 0x01, 0x00, 0x01}, // slsh.wr e b  
	{0x950d, &op_slsh,	  5,   1, 255, 0xff, 0x01, 0x00, 0x01}, // slsh.wr f b  
	{0x950e, &op_slsh,	  6,   1, 255, 0xff, 0x01, 0x00, 0x01}, // slsh.wr g b  
	{0x950f, &op_slsh,	  7,   1, 255, 0xff, 0x01, 0x00, 0x01}, // slsh.wr h b  
	{0x9510, &op_slsh,	  0,   2, 255, 0xff, 0x01, 0x00, 0x01}, // slsh.wr a c  
	{0x9511, &op_slsh,	  1,   2, 255, 0xff, 0x01, 0x00, 0x01}, // slsh.wr b c  
	{0x9512, &op_slsh,	  2,   2, 255, 0xff, 0x01, 0x00, 0x01}, // slsh.wr c c  
	{0x9513, &op_slsh,	  3,   2, 255, 0xff, 0x01, 0x00, 0x01}, // slsh.wr d c  
	{0x9514, &op_slsh,	  4,   2, 255, 0xff, 0x01, 0x00, 0x01}, // slsh.wr e c  
	{0x9515, &op_slsh,	  5,   2, 255, 0xff, 0x01, 0x00, 0x01}, // slsh.wr f c  
	{0x9516, &op_slsh,	  6,   2, 255, 0xff, 0x01, 0x00, 0x01}, // slsh.wr g c  
	{0x9517, &op_slsh,	  7,   2, 255, 0xff, 0x01, 0x00, 0x01}, // slsh.wr h c  
	{0x9518, &op_slsh,	  0,   3, 255, 0xff, 0x01, 0x00, 0x01}, // slsh.wr a d  
	{0x9519, &op_slsh,	  1,   3, 255, 0xff, 0x01, 0x00, 0x01}, // slsh.wr b d  
	{0x951a, &op_slsh,	  2,   3, 255, 0xff, 0x01, 0x00, 0x01}, // slsh.wr c d  
	{0x951b, &op_slsh,	  3,   3, 255, 0xff, 0x01, 0x00, 0x01}, // slsh.wr d d  
	{0x951c, &op_slsh,	  4,   3, 255, 0xff, 0x01, 0x00, 0x01}, // slsh.wr e d  
	{0x951d, &op_slsh,	  5,   3, 255, 0xff, 0x01, 0x00, 0x01}, // slsh.wr f d  
	{0x951e, &op_slsh,	  6,   3, 255, 0xff, 0x01, 0x00, 0x01}, // slsh.wr g d  
	{0x951f, &op_slsh,	  7,   3, 255, 0xff, 0x01, 0x00, 0x01}, // slsh.wr h d  
	{0x9520, &op_slsh,	  0,   4, 255, 0xff, 0x01, 0x00, 0x01}, // slsh.wr a e  
	{0x9521, &op_slsh,	  1,   4, 255, 0xff, 0x01, 0x00, 0x01}, // slsh.wr b e  
	{0x9522, &op_slsh,	  2,   4, 255, 0xff, 0x01, 0x00, 0x01}, // slsh.wr c e  
	{0x9523, &op_slsh,	  3,   4, 255, 0xff, 0x01, 0x00, 0x01}, // slsh.wr d e  
	{0x9524, &op_slsh,	  4,   4, 255, 0xff, 0x01, 0x00, 0x01}, // slsh.wr e e  
	{0x9525, &op_slsh,	  5,   4, 255, 0xff, 0x01, 0x00, 0x01}, // slsh.wr f e  
	{0x9526, &op_slsh,	  6,   4, 255, 0xff, 0x01, 0x00, 0x01}, // slsh.wr g e  
	{0x9527, &op_slsh,	  7,   4, 255, 0xff, 0x01, 0x00, 0x01}, // slsh.wr h e  
	{0x9528, &op_slsh,	  0,   5, 255, 0xff, 0x01, 0x00, 0x01}, // slsh.wr a f  
	{0x9529, &op_slsh,	  1,   5, 255, 0xff, 0x01, 0x00, 0x01}, // slsh.wr b f  
	{0x952a, &op_slsh,	  2,   5, 255, 0xff, 0x01, 0x00, 0x01}, // slsh.wr c f  
	{0x952b, &op_slsh,	  3,   5, 255, 0xff, 0x01, 0x00, 0x01}, // slsh.wr d f  
	{0x952c, &op_slsh,	  4,   5, 255, 0xff, 0x01, 0x00, 0x01}, // slsh.wr e f  
	{0x952d, &op_slsh,	  5,   5, 255, 0xff, 0x01, 0x00, 0x01}, // slsh.wr f f  
	{0x952e, &op_slsh,	  6,   5, 255, 0xff, 0x01, 0x00, 0x01}, // slsh.wr g f  
	{0x952f, &op_slsh,	  7,   5, 255, 0xff, 0x01, 0x00, 0x01}, // slsh.wr h f  
	{0x9530, &op_slsh,	  0,   6, 255, 0xff, 0x01, 0x00, 0x01}, // slsh.wr a g  
	{0x9531, &op_slsh,	  1,   6, 255, 0xff, 0x01, 0x00, 0x01}, // slsh.wr b g  
	{0x9532, &op_slsh,	  2,   6, 255, 0xff, 0x01, 0x00, 0x01}, // slsh.wr c g  
	{0x9533, &op_slsh,	  3,   6, 255, 0xff, 0x01, 0x00, 0x01}, // slsh.wr d g  
	{0x9534, &op_slsh,	  4,   6, 255, 0xff, 0x01, 0x00, 0x01}, // slsh.wr e g  
	{0x9535, &op_slsh,	  5,   6, 255, 0xff, 0x01, 0x00, 0x01}, // slsh.wr f g  
	{0x9536, &op_slsh,	  6,   6, 255, 0xff, 0x01, 0x00, 0x01}, // slsh.wr g g  
	{0x9537, &op_slsh,	  7,   6, 255, 0xff, 0x01, 0x00, 0x01}, // slsh.wr h g  
	{0x9538, &op_slsh,	  0,   7, 255, 0xff, 0x01, 0x00, 0x01}, // slsh.wr a h  
	{0x9539, &op_slsh,	  1,   7, 255, 0xff, 0x01, 0x00, 0x01}, // slsh.wr b h  
	{0x953a, &op_slsh,	  2,   7, 255, 0xff, 0x01, 0x00, 0x01}, // slsh.wr c h  
	{0x953b, &op_slsh,	  3,   7, 255, 0xff, 0x01, 0x00, 0x01}, // slsh.wr d h  
	{0x953c, &op_slsh,	  4,   7, 255, 0xff, 0x01, 0x00, 0x01}, // slsh.wr e h  
	{0x953d, &op_slsh,	  5,   7, 255, 0xff, 0x01, 0x00, 0x01}, // slsh.wr f h  
	{0x953e, &op_slsh,	  6,   7, 255, 0xff, 0x01, 0x00, 0x01}, // slsh.wr g h  
	{0x953f, &op_slsh,	  7,   7, 255, 0xff, 0x01, 0x00, 0x01}, // slsh.wr h h  
	{0x9540, &op_slsh,	  0,   0, 255, 0xff, 0x01, 0x00, 0x02}, // slsh.dr a a  
	{0x9541, &op_slsh,	  1,   0, 255, 0xff, 0x01, 0x00, 0x02}, // slsh.dr b a  
	{0x9542, &op_slsh,	  2,   0, 255, 0xff, 0x01, 0x00, 0x02}, // slsh.dr c a  
	{0x9543, &op_slsh,	  3,   0, 255, 0xff, 0x01, 0x00, 0x02}, // slsh.dr d a  
	{0x9544, &op_slsh,	  4,   0, 255, 0xff, 0x01, 0x00, 0x02}, // slsh.dr e a  
	{0x9545, &op_slsh,	  5,   0, 255, 0xff, 0x01, 0x00, 0x02}, // slsh.dr f a  
	{0x9546, &op_slsh,	  6,   0, 255, 0xff, 0x01, 0x00, 0x02}, // slsh.dr g a  
	{0x9547, &op_slsh,	  7,   0, 255, 0xff, 0x01, 0x00, 0x02}, // slsh.dr h a  
	{0x9548, &op_slsh,	  0,   1, 255, 0xff, 0x01, 0x00, 0x02}, // slsh.dr a b  
	{0x9549, &op_slsh,	  1,   1, 255, 0xff, 0x01, 0x00, 0x02}, // slsh.dr b b  
	{0x954a, &op_slsh,	  2,   1, 255, 0xff, 0x01, 0x00, 0x02}, // slsh.dr c b  
	{0x954b, &op_slsh,	  3,   1, 255, 0xff, 0x01, 0x00, 0x02}, // slsh.dr d b  
	{0x954c, &op_slsh,	  4,   1, 255, 0xff, 0x01, 0x00, 0x02}, // slsh.dr e b  
	{0x954d, &op_slsh,	  5,   1, 255, 0xff, 0x01, 0x00, 0x02}, // slsh.dr f b  
	{0x954e, &op_slsh,	  6,   1, 255, 0xff, 0x01, 0x00, 0x02}, // slsh.dr g b  
	{0x954f, &op_slsh,	  7,   1, 255, 0xff, 0x01, 0x00, 0x02}, // slsh.dr h b  
	{0x9550, &op_slsh,	  0,   2, 255, 0xff, 0x01, 0x00, 0x02}, // slsh.dr a c  
	{0x9551, &op_slsh,	  1,   2, 255, 0xff, 0x01, 0x00, 0x02}, // slsh.dr b c  
	{0x9552, &op_slsh,	  2,   2, 255, 0xff, 0x01, 0x00, 0x02}, // slsh.dr c c  
	{0x9553, &op_slsh,	  3,   2, 255, 0xff, 0x01, 0x00, 0x02}, // slsh.dr d c  
	{0x9554, &op_slsh,	  4,   2, 255, 0xff, 0x01, 0x00, 0x02}, // slsh.dr e c  
	{0x9555, &op_slsh,	  5,   2, 255, 0xff, 0x01, 0x00, 0x02}, // slsh.dr f c  
	{0x9556, &op_slsh,	  6,   2, 255, 0xff, 0x01, 0x00, 0x02}, // slsh.dr g c  
	{0x9557, &op_slsh,	  7,   2, 255, 0xff, 0x01, 0x00, 0x02}, // slsh.dr h c  
	{0x9558, &op_slsh,	  0,   3, 255, 0xff, 0x01, 0x00, 0x02}, // slsh.dr a d  
	{0x9559, &op_slsh,	  1,   3, 255, 0xff, 0x01, 0x00, 0x02}, // slsh.dr b d  
	{0x955a, &op_slsh,	  2,   3, 255, 0xff, 0x01, 0x00, 0x02}, // slsh.dr c d  
	{0x955b, &op_slsh,	  3,   3, 255, 0xff, 0x01, 0x00, 0x02}, // slsh.dr d d  
	{0x955c, &op_slsh,	  4,   3, 255, 0xff, 0x01, 0x00, 0x02}, // slsh.dr e d  
	{0x955d, &op_slsh,	  5,   3, 255, 0xff, 0x01, 0x00, 0x02}, // slsh.dr f d  
	{0x955e, &op_slsh,	  6,   3, 255, 0xff, 0x01, 0x00, 0x02}, // slsh.dr g d  
	{0x955f, &op_slsh,	  7,   3, 255, 0xff, 0x01, 0x00, 0x02}, // slsh.dr h d  
	{0x9560, &op_slsh,	  0,   4, 255, 0xff, 0x01, 0x00, 0x02}, // slsh.dr a e  
	{0x9561, &op_slsh,	  1,   4, 255, 0xff, 0x01, 0x00, 0x02}, // slsh.dr b e  
	{0x9562, &op_slsh,	  2,   4, 255, 0xff, 0x01, 0x00, 0x02}, // slsh.dr c e  
	{0x9563, &op_slsh,	  3,   4, 255, 0xff, 0x01, 0x00, 0x02}, // slsh.dr d e  
	{0x9564, &op_slsh,	  4,   4, 255, 0xff, 0x01, 0x00, 0x02}, // slsh.dr e e  
	{0x9565, &op_slsh,	  5,   4, 255, 0xff, 0x01, 0x00, 0x02}, // slsh.dr f e  
	{0x9566, &op_slsh,	  6,   4, 255, 0xff, 0x01, 0x00, 0x02}, // slsh.dr g e  
	{0x9567, &op_slsh,	  7,   4, 255, 0xff, 0x01, 0x00, 0x02}, // slsh.dr h e  
	{0x9568, &op_slsh,	  0,   5, 255, 0xff, 0x01, 0x00, 0x02}, // slsh.dr a f  
	{0x9569, &op_slsh,	  1,   5, 255, 0xff, 0x01, 0x00, 0x02}, // slsh.dr b f  
	{0x956a, &op_slsh,	  2,   5, 255, 0xff, 0x01, 0x00, 0x02}, // slsh.dr c f  
	{0x956b, &op_slsh,	  3,   5, 255, 0xff, 0x01, 0x00, 0x02}, // slsh.dr d f  
	{0x956c, &op_slsh,	  4,   5, 255, 0xff, 0x01, 0x00, 0x02}, // slsh.dr e f  
	{0x956d, &op_slsh,	  5,   5, 255, 0xff, 0x01, 0x00, 0x02}, // slsh.dr f f  
	{0x956e, &op_slsh,	  6,   5, 255, 0xff, 0x01, 0x00, 0x02}, // slsh.dr g f  
	{0x956f, &op_slsh,	  7,   5, 255, 0xff, 0x01, 0x00, 0x02}, // slsh.dr h f  
	{0x9570, &op_slsh,	  0,   6, 255, 0xff, 0x01, 0x00, 0x02}, // slsh.dr a g  
	{0x9571, &op_slsh,	  1,   6, 255, 0xff, 0x01, 0x00, 0x02}, // slsh.dr b g  
	{0x9572, &op_slsh,	  2,   6, 255, 0xff, 0x01, 0x00, 0x02}, // slsh.dr c g  
	{0x9573, &op_slsh,	  3,   6, 255, 0xff, 0x01, 0x00, 0x02}, // slsh.dr d g  
	{0x9574, &op_slsh,	  4,   6, 255, 0xff, 0x01, 0x00, 0x02}, // slsh.dr e g  
	{0x9575, &op_slsh,	  5,   6, 255, 0xff, 0x01, 0x00, 0x02}, // slsh.dr f g  
	{0x9576, &op_slsh,	  6,   6, 255, 0xff, 0x01, 0x00, 0x02}, // slsh.dr g g  
	{0x9577, &op_slsh,	  7,   6, 255, 0xff, 0x01, 0x00, 0x02}, // slsh.dr h g  
	{0x9578, &op_slsh,	  0,   7, 255, 0xff, 0x01, 0x00, 0x02}, // slsh.dr a h  
	{0x9579, &op_slsh,	  1,   7, 255, 0xff, 0x01, 0x00, 0x02}, // slsh.dr b h  
	{0x957a, &op_slsh,	  2,   7, 255, 0xff, 0x01, 0x00, 0x02}, // slsh.dr c h  
	{0x957b, &op_slsh,	  3,   7, 255, 0xff, 0x01, 0x00, 0x02}, // slsh.dr d h  
	{0x957c, &op_slsh,	  4,   7, 255, 0xff, 0x01, 0x00, 0x02}, // slsh.dr e h  
	{0x957d, &op_slsh,	  5,   7, 255, 0xff, 0x01, 0x00, 0x02}, // slsh.dr f h  
	{0x957e, &op_slsh,	  6,   7, 255, 0xff, 0x01, 0x00, 0x02}, // slsh.dr g h  
	{0x957f, &op_slsh,	  7,   7, 255, 0xff, 0x01, 0x00, 0x02}, // slsh.dr h h  
	{0x9580, &op_slsh,	  0,   0, 255, 0xff, 0x01, 0x00, 0x04}, // slsh.r a a  
	{0x9581, &op_slsh,	  1,   0, 255, 0xff, 0x01, 0x00, 0x04}, // slsh.r b a  
	{0x9582, &op_slsh,	  2,   0, 255, 0xff, 0x01, 0x00, 0x04}, // slsh.r c a  
	{0x9583, &op_slsh,	  3,   0, 255, 0xff, 0x01, 0x00, 0x04}, // slsh.r d a  
	{0x9584, &op_slsh,	  4,   0, 255, 0xff, 0x01, 0x00, 0x04}, // slsh.r e a  
	{0x9585, &op_slsh,	  5,   0, 255, 0xff, 0x01, 0x00, 0x04}, // slsh.r f a  
	{0x9586, &op_slsh,	  6,   0, 255, 0xff, 0x01, 0x00, 0x04}, // slsh.r g a  
	{0x9587, &op_slsh,	  7,   0, 255, 0xff, 0x01, 0x00, 0x04}, // slsh.r h a  
	{0x9588, &op_slsh,	  0,   1, 255, 0xff, 0x01, 0x00, 0x04}, // slsh.r a b  
	{0x9589, &op_slsh,	  1,   1, 255, 0xff, 0x01, 0x00, 0x04}, // slsh.r b b  
	{0x958a, &op_slsh,	  2,   1, 255, 0xff, 0x01, 0x00, 0x04}, // slsh.r c b  
	{0x958b, &op_slsh,	  3,   1, 255, 0xff, 0x01, 0x00, 0x04}, // slsh.r d b  
	{0x958c, &op_slsh,	  4,   1, 255, 0xff, 0x01, 0x00, 0x04}, // slsh.r e b  
	{0x958d, &op_slsh,	  5,   1, 255, 0xff, 0x01, 0x00, 0x04}, // slsh.r f b  
	{0x958e, &op_slsh,	  6,   1, 255, 0xff, 0x01, 0x00, 0x04}, // slsh.r g b  
	{0x958f, &op_slsh,	  7,   1, 255, 0xff, 0x01, 0x00, 0x04}, // slsh.r h b  
	{0x9590, &op_slsh,	  0,   2, 255, 0xff, 0x01, 0x00, 0x04}, // slsh.r a c  
	{0x9591, &op_slsh,	  1,   2, 255, 0xff, 0x01, 0x00, 0x04}, // slsh.r b c  
	{0x9592, &op_slsh,	  2,   2, 255, 0xff, 0x01, 0x00, 0x04}, // slsh.r c c  
	{0x9593, &op_slsh,	  3,   2, 255, 0xff, 0x01, 0x00, 0x04}, // slsh.r d c  
	{0x9594, &op_slsh,	  4,   2, 255, 0xff, 0x01, 0x00, 0x04}, // slsh.r e c  
	{0x9595, &op_slsh,	  5,   2, 255, 0xff, 0x01, 0x00, 0x04}, // slsh.r f c  
	{0x9596, &op_slsh,	  6,   2, 255, 0xff, 0x01, 0x00, 0x04}, // slsh.r g c  
	{0x9597, &op_slsh,	  7,   2, 255, 0xff, 0x01, 0x00, 0x04}, // slsh.r h c  
	{0x9598, &op_slsh,	  0,   3, 255, 0xff, 0x01, 0x00, 0x04}, // slsh.r a d  
	{0x9599, &op_slsh,	  1,   3, 255, 0xff, 0x01, 0x00, 0x04}, // slsh.r b d  
	{0x959a, &op_slsh,	  2,   3, 255, 0xff, 0x01, 0x00, 0x04}, // slsh.r c d  
	{0x959b, &op_slsh,	  3,   3, 255, 0xff, 0x01, 0x00, 0x04}, // slsh.r d d  
	{0x959c, &op_slsh,	  4,   3, 255, 0xff, 0x01, 0x00, 0x04}, // slsh.r e d  
	{0x959d, &op_slsh,	  5,   3, 255, 0xff, 0x01, 0x00, 0x04}, // slsh.r f d  
	{0x959e, &op_slsh,	  6,   3, 255, 0xff, 0x01, 0x00, 0x04}, // slsh.r g d  
	{0x959f, &op_slsh,	  7,   3, 255, 0xff, 0x01, 0x00, 0x04}, // slsh.r h d  
	{0x95a0, &op_slsh,	  0,   4, 255, 0xff, 0x01, 0x00, 0x04}, // slsh.r a e  
	{0x95a1, &op_slsh,	  1,   4, 255, 0xff, 0x01, 0x00, 0x04}, // slsh.r b e  
	{0x95a2, &op_slsh,	  2,   4, 255, 0xff, 0x01, 0x00, 0x04}, // slsh.r c e  
	{0x95a3, &op_slsh,	  3,   4, 255, 0xff, 0x01, 0x00, 0x04}, // slsh.r d e  
	{0x95a4, &op_slsh,	  4,   4, 255, 0xff, 0x01, 0x00, 0x04}, // slsh.r e e  
	{0x95a5, &op_slsh,	  5,   4, 255, 0xff, 0x01, 0x00, 0x04}, // slsh.r f e  
	{0x95a6, &op_slsh,	  6,   4, 255, 0xff, 0x01, 0x00, 0x04}, // slsh.r g e  
	{0x95a7, &op_slsh,	  7,   4, 255, 0xff, 0x01, 0x00, 0x04}, // slsh.r h e  
	{0x95a8, &op_slsh,	  0,   5, 255, 0xff, 0x01, 0x00, 0x04}, // slsh.r a f  
	{0x95a9, &op_slsh,	  1,   5, 255, 0xff, 0x01, 0x00, 0x04}, // slsh.r b f  
	{0x95aa, &op_slsh,	  2,   5, 255, 0xff, 0x01, 0x00, 0x04}, // slsh.r c f  
	{0x95ab, &op_slsh,	  3,   5, 255, 0xff, 0x01, 0x00, 0x04}, // slsh.r d f  
	{0x95ac, &op_slsh,	  4,   5, 255, 0xff, 0x01, 0x00, 0x04}, // slsh.r e f  
	{0x95ad, &op_slsh,	  5,   5, 255, 0xff, 0x01, 0x00, 0x04}, // slsh.r f f  
	{0x95ae, &op_slsh,	  6,   5, 255, 0xff, 0x01, 0x00, 0x04}, // slsh.r g f  
	{0x95af, &op_slsh,	  7,   5, 255, 0xff, 0x01, 0x00, 0x04}, // slsh.r h f  
	{0x95b0, &op_slsh,	  0,   6, 255, 0xff, 0x01, 0x00, 0x04}, // slsh.r a g  
	{0x95b1, &op_slsh,	  1,   6, 255, 0xff, 0x01, 0x00, 0x04}, // slsh.r b g  
	{0x95b2, &op_slsh,	  2,   6, 255, 0xff, 0x01, 0x00, 0x04}, // slsh.r c g  
	{0x95b3, &op_slsh,	  3,   6, 255, 0xff, 0x01, 0x00, 0x04}, // slsh.r d g  
	{0x95b4, &op_slsh,	  4,   6, 255, 0xff, 0x01, 0x00, 0x04}, // slsh.r e g  
	{0x95b5, &op_slsh,	  5,   6, 255, 0xff, 0x01, 0x00, 0x04}, // slsh.r f g  
	{0x95b6, &op_slsh,	  6,   6, 255, 0xff, 0x01, 0x00, 0x04}, // slsh.r g g  
	{0x95b7, &op_slsh,	  7,   6, 255, 0xff, 0x01, 0x00, 0x04}, // slsh.r h g  
	{0x95b8, &op_slsh,	  0,   7, 255, 0xff, 0x01, 0x00, 0x04}, // slsh.r a h  
	{0x95b9, &op_slsh,	  1,   7, 255, 0xff, 0x01, 0x00, 0x04}, // slsh.r b h  
	{0x95ba, &op_slsh,	  2,   7, 255, 0xff, 0x01, 0x00, 0x04}, // slsh.r c h  
	{0x95bb, &op_slsh,	  3,   7, 255, 0xff, 0x01, 0x00, 0x04}, // slsh.r d h  
	{0x95bc, &op_slsh,	  4,   7, 255, 0xff, 0x01, 0x00, 0x04}, // slsh.r e h  
	{0x95bd, &op_slsh,	  5,   7, 255, 0xff, 0x01, 0x00, 0x04}, // slsh.r f h  
	{0x95be, &op_slsh,	  6,   7, 255, 0xff, 0x01, 0x00, 0x04}, // slsh.r g h  
	{0x95bf, &op_slsh,	  7,   7, 255, 0xff, 0x01, 0x00, 0x04}, // slsh.r h h  
	{0x94c8, &op_slsh,	  0,   8, 255, 0xff, 0x00, 0x01, 0x01}, // slsh.wi a <literal>  
	{0x94c9, &op_slsh,	  1,   8, 255, 0xff, 0x00, 0x01, 0x01}, // slsh.wi b <literal>  
	{0x94ca, &op_slsh,	  2,   8, 255, 0xff, 0x00, 0x01, 0x01}, // slsh.wi c <literal>  
	{0x94cb, &op_slsh,	  3,   8, 255, 0xff, 0x00, 0x01, 0x01}, // slsh.wi d <literal>  
	{0x94cc, &op_slsh,	  4,   8, 255, 0xff, 0x00, 0x01, 0x01}, // slsh.wi e <literal>  
	{0x94cd, &op_slsh,	  5,   8, 255, 0xff, 0x00, 0x01, 0x01}, // slsh.wi f <literal>  
	{0x94ce, &op_slsh,	  6,   8, 255, 0xff, 0x00, 0x01, 0x01}, // slsh.wi g <literal>  
	{0x94cf, &op_slsh,	  7,   8, 255, 0xff, 0x00, 0x01, 0x01}, // slsh.wi h <literal>  
	{0x94d0, &op_slsh,	  0,   8, 255, 0xff, 0x00, 0x02, 0x02}, // slsh.di a <literal>  
	{0x94d1, &op_slsh,	  1,   8, 255, 0xff, 0x00, 0x02, 0x02}, // slsh.di b <literal>  
	{0x94d2, &op_slsh,	  2,   8, 255, 0xff, 0x00, 0x02, 0x02}, // slsh.di c <literal>  
	{0x94d3, &op_slsh,	  3,   8, 255, 0xff, 0x00, 0x02, 0x02}, // slsh.di d <literal>  
	{0x94d4, &op_slsh,	  4,   8, 255, 0xff, 0x00, 0x02, 0x02}, // slsh.di e <literal>  
	{0x94d5, &op_slsh,	  5,   8, 255, 0xff, 0x00, 0x02, 0x02}, // slsh.di f <literal>  
	{0x94d6, &op_slsh,	  6,   8, 255, 0xff, 0x00, 0x02, 0x02}, // slsh.di g <literal>  
	{0x94d7, &op_slsh,	  7,   8, 255, 0xff, 0x00, 0x02, 0x02}, // slsh.di h <literal>  
	{0x94e0, &op_slsh,	  0,   8, 255, 0xff, 0x00, 0x04, 0x04}, // slsh.i a <literal>  
	{0x94e1, &op_slsh,	  1,   8, 255, 0xff, 0x00, 0x04, 0x04}, // slsh.i b <literal>  
	{0x94e2, &op_slsh,	  2,   8, 255, 0xff, 0x00, 0x04, 0x04}, // slsh.i c <literal>  
	{0x94e3, &op_slsh,	  3,   8, 255, 0xff, 0x00, 0x04, 0x04}, // slsh.i d <literal>  
	{0x94e4, &op_slsh,	  4,   8, 255, 0xff, 0x00, 0x04, 0x04}, // slsh.i e <literal>  
	{0x94e5, &op_slsh,	  5,   8, 255, 0xff, 0x00, 0x04, 0x04}, // slsh.i f <literal>  
	{0x94e6, &op_slsh,	  6,   8, 255, 0xff, 0x00, 0x04, 0x04}, // slsh.i g <literal>  
	{0x94e7, &op_slsh,	  7,   8, 255, 0xff, 0x00, 0x04, 0x04}, // slsh.i h <literal>  
	{0x95c8, &op_slsh,	  0,   8, 255, 0xff, 0x01, 0x04, 0x01}, // slsh.wri a <literal>  
	{0x95c9, &op_slsh,	  1,   8, 255, 0xff, 0x01, 0x04, 0x01}, // slsh.wri b <literal>  
	{0x95ca, &op_slsh,	  2,   8, 255, 0xff, 0x01, 0x04, 0x01}, // slsh.wri c <literal>  
	{0x95cb, &op_slsh,	  3,   8, 255, 0xff, 0x01, 0x04, 0x01}, // slsh.wri d <literal>  
	{0x95cc, &op_slsh,	  4,   8, 255, 0xff, 0x01, 0x04, 0x01}, // slsh.wri e <literal>  
	{0x95cd, &op_slsh,	  5,   8, 255, 0xff, 0x01, 0x04, 0x01}, // slsh.wri f <literal>  
	{0x95ce, &op_slsh,	  6,   8, 255, 0xff, 0x01, 0x04, 0x01}, // slsh.wri g <literal>  
	{0x95cf, &op_slsh,	  7,   8, 255, 0xff, 0x01, 0x04, 0x01}, // slsh.wri h <literal>  
	{0x95d0, &op_slsh,	  0,   8, 255, 0xff, 0x01, 0x04, 0x02}, // slsh.dri a <literal>  
	{0x95d1, &op_slsh,	  1,   8, 255, 0xff, 0x01, 0x04, 0x02}, // slsh.dri b <literal>  
	{0x95d2, &op_slsh,	  2,   8, 255, 0xff, 0x01, 0x04, 0x02}, // slsh.dri c <literal>  
	{0x95d3, &op_slsh,	  3,   8, 255, 0xff, 0x01, 0x04, 0x02}, // slsh.dri d <literal>  
	{0x95d4, &op_slsh,	  4,   8, 255, 0xff, 0x01, 0x04, 0x02}, // slsh.dri e <literal>  
	{0x95d5, &op_slsh,	  5,   8, 255, 0xff, 0x01, 0x04, 0x02}, // slsh.dri f <literal>  
	{0x95d6, &op_slsh,	  6,   8, 255, 0xff, 0x01, 0x04, 0x02}, // slsh.dri g <literal>  
	{0x95d7, &op_slsh,	  7,   8, 255, 0xff, 0x01, 0x04, 0x02}, // slsh.dri h <literal>  
	{0x95e0, &op_slsh,	  0,   8, 255, 0xff, 0x01, 0x04, 0x04}, // slsh.ri a <literal>  
	{0x95e1, &op_slsh,	  1,   8, 255, 0xff, 0x01, 0x04, 0x04}, // slsh.ri b <literal>  
	{0x95e2, &op_slsh,	  2,   8, 255, 0xff, 0x01, 0x04, 0x04}, // slsh.ri c <literal>  
	{0x95e3, &op_slsh,	  3,   8, 255, 0xff, 0x01, 0x04, 0x04}, // slsh.ri d <literal>  
	{0x95e4, &op_slsh,	  4,   8, 255, 0xff, 0x01, 0x04, 0x04}, // slsh.ri e <literal>  
	{0x95e5, &op_slsh,	  5,   8, 255, 0xff, 0x01, 0x04, 0x04}, // slsh.ri f <literal>  
	{0x95e6, &op_slsh,	  6,   8, 255, 0xff, 0x01, 0x04, 0x04}, // slsh.ri g <literal>  
	{0x95e7, &op_slsh,	  7,   8, 255, 0xff, 0x01, 0x04, 0x04}, // slsh.ri h <literal>  
	{0x9600, &op_ssub,	  0,   0, 255, 0xff, 0x00, 0x00, 0x01}, // ssub.w a a  
	{0x9601, &op_ssub,	  1,   0, 255, 0xff, 0x00, 0x00, 0x01}, // ssub.w b a  
	{0x9602, &op_ssub,	  2,   0, 255, 0xff, 0x00, 0x00, 0x01}, // ssub.w c a  
	{0x9603, &op_ssub,	  3,   0, 255, 0xff, 0x00, 0x00, 0x01}, // ssub.w d a  
	{0x9604, &op_ssub,	  4,   0, 255, 0xff, 0x00, 0x00, 0x01}, // ssub.w e a  
	{0x9605, &op_ssub,	  5,   0, 255, 0xff, 0x00, 0x00, 0x01}, // ssub.w f a  
	{0x9606, &op_ssub,	  6,   0, 255, 0xff, 0x00, 0x00, 0x01}, // ssub.w g a  
	{0x9607, &op_ssub,	  7,   0, 255, 0xff, 0x00, 0x00, 0x01}, // ssub.w h a  
	{0x9608, &op_ssub,	  0,   1, 255, 0xff, 0x00, 0x00, 0x01}, // ssub.w a b  
	{0x9609, &op_ssub,	  1,   1, 255, 0xff, 0x00, 0x00, 0x01}, // ssub.w b b  
	{0x960a, &op_ssub,	  2,   1, 255, 0xff, 0x00, 0x00, 0x01}, // ssub.w c b  
	{0x960b, &op_ssub,	  3,   1, 255, 0xff, 0x00, 0x00, 0x01}, // ssub.w d b  
	{0x960c, &op_ssub,	  4,   1, 255, 0xff, 0x00, 0x00, 0x01}, // ssub.w e b  
	{0x960d, &op_ssub,	  5,   1, 255, 0xff, 0x00, 0x00, 0x01}, // ssub.w f b  
	{0x960e, &op_ssub,	  6,   1, 255, 0xff, 0x00, 0x00, 0x01}, // ssub.w g b  
	{0x960f, &op_ssub,	  7,   1, 255, 0xff, 0x00, 0x00, 0x01}, // ssub.w h b  
	{0x9610, &op_ssub,	  0,   2, 255, 0xff, 0x00, 0x00, 0x01}, // ssub.w a c  
	{0x9611, &op_ssub,	  1,   2, 255, 0xff, 0x00, 0x00, 0x01}, // ssub.w b c  
	{0x9612, &op_ssub,	  2,   2, 255, 0xff, 0x00, 0x00, 0x01}, // ssub.w c c  
	{0x9613, &op_ssub,	  3,   2, 255, 0xff, 0x00, 0x00, 0x01}, // ssub.w d c  
	{0x9614, &op_ssub,	  4,   2, 255, 0xff, 0x00, 0x00, 0x01}, // ssub.w e c  
	{0x9615, &op_ssub,	  5,   2, 255, 0xff, 0x00, 0x00, 0x01}, // ssub.w f c  
	{0x9616, &op_ssub,	  6,   2, 255, 0xff, 0x00, 0x00, 0x01}, // ssub.w g c  
	{0x9617, &op_ssub,	  7,   2, 255, 0xff, 0x00, 0x00, 0x01}, // ssub.w h c  
	{0x9618, &op_ssub,	  0,   3, 255, 0xff, 0x00, 0x00, 0x01}, // ssub.w a d  
	{0x9619, &op_ssub,	  1,   3, 255, 0xff, 0x00, 0x00, 0x01}, // ssub.w b d  
	{0x961a, &op_ssub,	  2,   3, 255, 0xff, 0x00, 0x00, 0x01}, // ssub.w c d  
	{0x961b, &op_ssub,	  3,   3, 255, 0xff, 0x00, 0x00, 0x01}, // ssub.w d d  
	{0x961c, &op_ssub,	  4,   3, 255, 0xff, 0x00, 0x00, 0x01}, // ssub.w e d  
	{0x961d, &op_ssub,	  5,   3, 255, 0xff, 0x00, 0x00, 0x01}, // ssub.w f d  
	{0x961e, &op_ssub,	  6,   3, 255, 0xff, 0x00, 0x00, 0x01}, // ssub.w g d  
	{0x961f, &op_ssub,	  7,   3, 255, 0xff, 0x00, 0x00, 0x01}, // ssub.w h d  
	{0x9620, &op_ssub,	  0,   4, 255, 0xff, 0x00, 0x00, 0x01}, // ssub.w a e  
	{0x9621, &op_ssub,	  1,   4, 255, 0xff, 0x00, 0x00, 0x01}, // ssub.w b e  
	{0x9622, &op_ssub,	  2,   4, 255, 0xff, 0x00, 0x00, 0x01}, // ssub.w c e  
	{0x9623, &op_ssub,	  3,   4, 255, 0xff, 0x00, 0x00, 0x01}, // ssub.w d e  
	{0x9624, &op_ssub,	  4,   4, 255, 0xff, 0x00, 0x00, 0x01}, // ssub.w e e  
	{0x9625, &op_ssub,	  5,   4, 255, 0xff, 0x00, 0x00, 0x01}, // ssub.w f e  
	{0x9626, &op_ssub,	  6,   4, 255, 0xff, 0x00, 0x00, 0x01}, // ssub.w g e  
	{0x9627, &op_ssub,	  7,   4, 255, 0xff, 0x00, 0x00, 0x01}, // ssub.w h e  
	{0x9628, &op_ssub,	  0,   5, 255, 0xff, 0x00, 0x00, 0x01}, // ssub.w a f  
	{0x9629, &op_ssub,	  1,   5, 255, 0xff, 0x00, 0x00, 0x01}, // ssub.w b f  
	{0x962a, &op_ssub,	  2,   5, 255, 0xff, 0x00, 0x00, 0x01}, // ssub.w c f  
	{0x962b, &op_ssub,	  3,   5, 255, 0xff, 0x00, 0x00, 0x01}, // ssub.w d f  
	{0x962c, &op_ssub,	  4,   5, 255, 0xff, 0x00, 0x00, 0x01}, // ssub.w e f  
	{0x962d, &op_ssub,	  5,   5, 255, 0xff, 0x00, 0x00, 0x01}, // ssub.w f f  
	{0x962e, &op_ssub,	  6,   5, 255, 0xff, 0x00, 0x00, 0x01}, // ssub.w g f  
	{0x962f, &op_ssub,	  7,   5, 255, 0xff, 0x00, 0x00, 0x01}, // ssub.w h f  
	{0x9630, &op_ssub,	  0,   6, 255, 0xff, 0x00, 0x00, 0x01}, // ssub.w a g  
	{0x9631, &op_ssub,	  1,   6, 255, 0xff, 0x00, 0x00, 0x01}, // ssub.w b g  
	{0x9632, &op_ssub,	  2,   6, 255, 0xff, 0x00, 0x00, 0x01}, // ssub.w c g  
	{0x9633, &op_ssub,	  3,   6, 255, 0xff, 0x00, 0x00, 0x01}, // ssub.w d g  
	{0x9634, &op_ssub,	  4,   6, 255, 0xff, 0x00, 0x00, 0x01}, // ssub.w e g  
	{0x9635, &op_ssub,	  5,   6, 255, 0xff, 0x00, 0x00, 0x01}, // ssub.w f g  
	{0x9636, &op_ssub,	  6,   6, 255, 0xff, 0x00, 0x00, 0x01}, // ssub.w g g  
	{0x9637, &op_ssub,	  7,   6, 255, 0xff, 0x00, 0x00, 0x01}, // ssub.w h g  
	{0x9638, &op_ssub,	  0,   7, 255, 0xff, 0x00, 0x00, 0x01}, // ssub.w a h  
	{0x9639, &op_ssub,	  1,   7, 255, 0xff, 0x00, 0x00, 0x01}, // ssub.w b h  
	{0x963a, &op_ssub,	  2,   7, 255, 0xff, 0x00, 0x00, 0x01}, // ssub.w c h  
	{0x963b, &op_ssub,	  3,   7, 255, 0xff, 0x00, 0x00, 0x01}, // ssub.w d h  
	{0x963c, &op_ssub,	  4,   7, 255, 0xff, 0x00, 0x00, 0x01}, // ssub.w e h  
	{0x963d, &op_ssub,	  5,   7, 255, 0xff, 0x00, 0x00, 0x01}, // ssub.w f h  
	{0x963e, &op_ssub,	  6,   7, 255, 0xff, 0x00, 0x00, 0x01}, // ssub.w g h  
	{0x963f, &op_ssub,	  7,   7, 255, 0xff, 0x00, 0x00, 0x01}, // ssub.w h h  
	{0x9640, &op_ssub,	  0,   0, 255, 0xff, 0x00, 0x00, 0x02}, // ssub.d a a  
	{0x9641, &op_ssub,	  1,   0, 255, 0xff, 0x00, 0x00, 0x02}, // ssub.d b a  
	{0x9642, &op_ssub,	  2,   0, 255, 0xff, 0x00, 0x00, 0x02}, // ssub.d c a  
	{0x9643, &op_ssub,	  3,   0, 255, 0xff, 0x00, 0x00, 0x02}, // ssub.d d a  
	{0x9644, &op_ssub,	  4,   0, 255, 0xff, 0x00, 0x00, 0x02}, // ssub.d e a  
	{0x9645, &op_ssub,	  5,   0, 255, 0xff, 0x00, 0x00, 0x02}, // ssub.d f a  
	{0x9646, &op_ssub,	  6,   0, 255, 0xff, 0x00, 0x00, 0x02}, // ssub.d g a  
	{0x9647, &op_ssub,	  7,   0, 255, 0xff, 0x00, 0x00, 0x02}, // ssub.d h a  
	{0x9648, &op_ssub,	  0,   1, 255, 0xff, 0x00, 0x00, 0x02}, // ssub.d a b  
	{0x9649, &op_ssub,	  1,   1, 255, 0xff, 0x00, 0x00, 0x02}, // ssub.d b b  
	{0x964a, &op_ssub,	  2,   1, 255, 0xff, 0x00, 0x00, 0x02}, // ssub.d c b  
	{0x964b, &op_ssub,	  3,   1, 255, 0xff, 0x00, 0x00, 0x02}, // ssub.d d b  
	{0x964c, &op_ssub,	  4,   1, 255, 0xff, 0x00, 0x00, 0x02}, // ssub.d e b  
	{0x964d, &op_ssub,	  5,   1, 255, 0xff, 0x00, 0x00, 0x02}, // ssub.d f b  
	{0x964e, &op_ssub,	  6,   1, 255, 0xff, 0x00, 0x00, 0x02}, // ssub.d g b  
	{0x964f, &op_ssub,	  7,   1, 255, 0xff, 0x00, 0x00, 0x02}, // ssub.d h b  
	{0x9650, &op_ssub,	  0,   2, 255, 0xff, 0x00, 0x00, 0x02}, // ssub.d a c  
	{0x9651, &op_ssub,	  1,   2, 255, 0xff, 0x00, 0x00, 0x02}, // ssub.d b c  
	{0x9652, &op_ssub,	  2,   2, 255, 0xff, 0x00, 0x00, 0x02}, // ssub.d c c  
	{0x9653, &op_ssub,	  3,   2, 255, 0xff, 0x00, 0x00, 0x02}, // ssub.d d c  
	{0x9654, &op_ssub,	  4,   2, 255, 0xff, 0x00, 0x00, 0x02}, // ssub.d e c  
	{0x9655, &op_ssub,	  5,   2, 255, 0xff, 0x00, 0x00, 0x02}, // ssub.d f c  
	{0x9656, &op_ssub,	  6,   2, 255, 0xff, 0x00, 0x00, 0x02}, // ssub.d g c  
	{0x9657, &op_ssub,	  7,   2, 255, 0xff, 0x00, 0x00, 0x02}, // ssub.d h c  
	{0x9658, &op_ssub,	  0,   3, 255, 0xff, 0x00, 0x00, 0x02}, // ssub.d a d  
	{0x9659, &op_ssub,	  1,   3, 255, 0xff, 0x00, 0x00, 0x02}, // ssub.d b d  
	{0x965a, &op_ssub,	  2,   3, 255, 0xff, 0x00, 0x00, 0x02}, // ssub.d c d  
	{0x965b, &op_ssub,	  3,   3, 255, 0xff, 0x00, 0x00, 0x02}, // ssub.d d d  
	{0x965c, &op_ssub,	  4,   3, 255, 0xff, 0x00, 0x00, 0x02}, // ssub.d e d  
	{0x965d, &op_ssub,	  5,   3, 255, 0xff, 0x00, 0x00, 0x02}, // ssub.d f d  
	{0x965e, &op_ssub,	  6,   3, 255, 0xff, 0x00, 0x00, 0x02}, // ssub.d g d  
	{0x965f, &op_ssub,	  7,   3, 255, 0xff, 0x00, 0x00, 0x02}, // ssub.d h d  
	{0x9660, &op_ssub,	  0,   4, 255, 0xff, 0x00, 0x00, 0x02}, // ssub.d a e  
	{0x9661, &op_ssub,	  1,   4, 255, 0xff, 0x00, 0x00, 0x02}, // ssub.d b e  
	{0x9662, &op_ssub,	  2,   4, 255, 0xff, 0x00, 0x00, 0x02}, // ssub.d c e  
	{0x9663, &op_ssub,	  3,   4, 255, 0xff, 0x00, 0x00, 0x02}, // ssub.d d e  
	{0x9664, &op_ssub,	  4,   4, 255, 0xff, 0x00, 0x00, 0x02}, // ssub.d e e  
	{0x9665, &op_ssub,	  5,   4, 255, 0xff, 0x00, 0x00, 0x02}, // ssub.d f e  
	{0x9666, &op_ssub,	  6,   4, 255, 0xff, 0x00, 0x00, 0x02}, // ssub.d g e  
	{0x9667, &op_ssub,	  7,   4, 255, 0xff, 0x00, 0x00, 0x02}, // ssub.d h e  
	{0x9668, &op_ssub,	  0,   5, 255, 0xff, 0x00, 0x00, 0x02}, // ssub.d a f  
	{0x9669, &op_ssub,	  1,   5, 255, 0xff, 0x00, 0x00, 0x02}, // ssub.d b f  
	{0x966a, &op_ssub,	  2,   5, 255, 0xff, 0x00, 0x00, 0x02}, // ssub.d c f  
	{0x966b, &op_ssub,	  3,   5, 255, 0xff, 0x00, 0x00, 0x02}, // ssub.d d f  
	{0x966c, &op_ssub,	  4,   5, 255, 0xff, 0x00, 0x00, 0x02}, // ssub.d e f  
	{0x966d, &op_ssub,	  5,   5, 255, 0xff, 0x00, 0x00, 0x02}, // ssub.d f f  
	{0x966e, &op_ssub,	  6,   5, 255, 0xff, 0x00, 0x00, 0x02}, // ssub.d g f  
	{0x966f, &op_ssub,	  7,   5, 255, 0xff, 0x00, 0x00, 0x02}, // ssub.d h f  
	{0x9670, &op_ssub,	  0,   6, 255, 0xff, 0x00, 0x00, 0x02}, // ssub.d a g  
	{0x9671, &op_ssub,	  1,   6, 255, 0xff, 0x00, 0x00, 0x02}, // ssub.d b g  
	{0x9672, &op_ssub,	  2,   6, 255, 0xff, 0x00, 0x00, 0x02}, // ssub.d c g  
	{0x9673, &op_ssub,	  3,   6, 255, 0xff, 0x00, 0x00, 0x02}, // ssub.d d g  
	{0x9674, &op_ssub,	  4,   6, 255, 0xff, 0x00, 0x00, 0x02}, // ssub.d e g  
	{0x9675, &op_ssub,	  5,   6, 255, 0xff, 0x00, 0x00, 0x02}, // ssub.d f g  
	{0x9676, &op_ssub,	  6,   6, 255, 0xff, 0x00, 0x00, 0x02}, // ssub.d g g  
	{0x9677, &op_ssub,	  7,   6, 255, 0xff, 0x00, 0x00, 0x02}, // ssub.d h g  
	{0x9678, &op_ssub,	  0,   7, 255, 0xff, 0x00, 0x00, 0x02}, // ssub.d a h  
	{0x9679, &op_ssub,	  1,   7, 255, 0xff, 0x00, 0x00, 0x02}, // ssub.d b h  
	{0x967a, &op_ssub,	  2,   7, 255, 0xff, 0x00, 0x00, 0x02}, // ssub.d c h  
	{0x967b, &op_ssub,	  3,   7, 255, 0xff, 0x00, 0x00, 0x02}, // ssub.d d h  
	{0x967c, &op_ssub,	  4,   7, 255, 0xff, 0x00, 0x00, 0x02}, // ssub.d e h  
	{0x967d, &op_ssub,	  5,   7, 255, 0xff, 0x00, 0x00, 0x02}, // ssub.d f h  
	{0x967e, &op_ssub,	  6,   7, 255, 0xff, 0x00, 0x00, 0x02}, // ssub.d g h  
	{0x967f, &op_ssub,	  7,   7, 255, 0xff, 0x00, 0x00, 0x02}, // ssub.d h h  
	{0x9680, &op_ssub,	  0,   0, 255, 0xff, 0x00, 0x00, 0x04}, // ssub a a  
	{0x9681, &op_ssub,	  1,   0, 255, 0xff, 0x00, 0x00, 0x04}, // ssub b a  
	{0x9682, &op_ssub,	  2,   0, 255, 0xff, 0x00, 0x00, 0x04}, // ssub c a  
	{0x9683, &op_ssub,	  3,   0, 255, 0xff, 0x00, 0x00, 0x04}, // ssub d a  
	{0x9684, &op_ssub,	  4,   0, 255, 0xff, 0x00, 0x00, 0x04}, // ssub e a  
	{0x9685, &op_ssub,	  5,   0, 255, 0xff, 0x00, 0x00, 0x04}, // ssub f a  
	{0x9686, &op_ssub,	  6,   0, 255, 0xff, 0x00, 0x00, 0x04}, // ssub g a  
	{0x9687, &op_ssub,	  7,   0, 255, 0xff, 0x00, 0x00, 0x04}, // ssub h a  
	{0x9688, &op_ssub,	  0,   1, 255, 0xff, 0x00, 0x00, 0x04}, // ssub a b  
	{0x9689, &op_ssub,	  1,   1, 255, 0xff, 0x00, 0x00, 0x04}, // ssub b b  
	{0x968a, &op_ssub,	  2,   1, 255, 0xff, 0x00, 0x00, 0x04}, // ssub c b  
	{0x968b, &op_ssub,	  3,   1, 255, 0xff, 0x00, 0x00, 0x04}, // ssub d b  
	{0x968c, &op_ssub,	  4,   1, 255, 0xff, 0x00, 0x00, 0x04}, // ssub e b  
	{0x968d, &op_ssub,	  5,   1, 255, 0xff, 0x00, 0x00, 0x04}, // ssub f b  
	{0x968e, &op_ssub,	  6,   1, 255, 0xff, 0x00, 0x00, 0x04}, // ssub g b  
	{0x968f, &op_ssub,	  7,   1, 255, 0xff, 0x00, 0x00, 0x04}, // ssub h b  
	{0x9690, &op_ssub,	  0,   2, 255, 0xff, 0x00, 0x00, 0x04}, // ssub a c  
	{0x9691, &op_ssub,	  1,   2, 255, 0xff, 0x00, 0x00, 0x04}, // ssub b c  
	{0x9692, &op_ssub,	  2,   2, 255, 0xff, 0x00, 0x00, 0x04}, // ssub c c  
	{0x9693, &op_ssub,	  3,   2, 255, 0xff, 0x00, 0x00, 0x04}, // ssub d c  
	{0x9694, &op_ssub,	  4,   2, 255, 0xff, 0x00, 0x00, 0x04}, // ssub e c  
	{0x9695, &op_ssub,	  5,   2, 255, 0xff, 0x00, 0x00, 0x04}, // ssub f c  
	{0x9696, &op_ssub,	  6,   2, 255, 0xff, 0x00, 0x00, 0x04}, // ssub g c  
	{0x9697, &op_ssub,	  7,   2, 255, 0xff, 0x00, 0x00, 0x04}, // ssub h c  
	{0x9698, &op_ssub,	  0,   3, 255, 0xff, 0x00, 0x00, 0x04}, // ssub a d  
	{0x9699, &op_ssub,	  1,   3, 255, 0xff, 0x00, 0x00, 0x04}, // ssub b d  
	{0x969a, &op_ssub,	  2,   3, 255, 0xff, 0x00, 0x00, 0x04}, // ssub c d  
	{0x969b, &op_ssub,	  3,   3, 255, 0xff, 0x00, 0x00, 0x04}, // ssub d d  
	{0x969c, &op_ssub,	  4,   3, 255, 0xff, 0x00, 0x00, 0x04}, // ssub e d  
	{0x969d, &op_ssub,	  5,   3, 255, 0xff, 0x00, 0x00, 0x04}, // ssub f d  
	{0x969e, &op_ssub,	  6,   3, 255, 0xff, 0x00, 0x00, 0x04}, // ssub g d  
	{0x969f, &op_ssub,	  7,   3, 255, 0xff, 0x00, 0x00, 0x04}, // ssub h d  
	{0x96a0, &op_ssub,	  0,   4, 255, 0xff, 0x00, 0x00, 0x04}, // ssub a e  
	{0x96a1, &op_ssub,	  1,   4, 255, 0xff, 0x00, 0x00, 0x04}, // ssub b e  
	{0x96a2, &op_ssub,	  2,   4, 255, 0xff, 0x00, 0x00, 0x04}, // ssub c e  
	{0x96a3, &op_ssub,	  3,   4, 255, 0xff, 0x00, 0x00, 0x04}, // ssub d e  
	{0x96a4, &op_ssub,	  4,   4, 255, 0xff, 0x00, 0x00, 0x04}, // ssub e e  
	{0x96a5, &op_ssub,	  5,   4, 255, 0xff, 0x00, 0x00, 0x04}, // ssub f e  
	{0x96a6, &op_ssub,	  6,   4, 255, 0xff, 0x00, 0x00, 0x04}, // ssub g e  
	{0x96a7, &op_ssub,	  7,   4, 255, 0xff, 0x00, 0x00, 0x04}, // ssub h e  
	{0x96a8, &op_ssub,	  0,   5, 255, 0xff, 0x00, 0x00, 0x04}, // ssub a f  
	{0x96a9, &op_ssub,	  1,   5, 255, 0xff, 0x00, 0x00, 0x04}, // ssub b f  
	{0x96aa, &op_ssub,	  2,   5, 255, 0xff, 0x00, 0x00, 0x04}, // ssub c f  
	{0x96ab, &op_ssub,	  3,   5, 255, 0xff, 0x00, 0x00, 0x04}, // ssub d f  
	{0x96ac, &op_ssub,	  4,   5, 255, 0xff, 0x00, 0x00, 0x04}, // ssub e f  
	{0x96ad, &op_ssub,	  5,   5, 255, 0xff, 0x00, 0x00, 0x04}, // ssub f f  
	{0x96ae, &op_ssub,	  6,   5, 255, 0xff, 0x00, 0x00, 0x04}, // ssub g f  
	{0x96af, &op_ssub,	  7,   5, 255, 0xff, 0x00, 0x00, 0x04}, // ssub h f  
	{0x96b0, &op_ssub,	  0,   6, 255, 0xff, 0x00, 0x00, 0x04}, // ssub a g  
	{0x96b1, &op_ssub,	  1,   6, 255, 0xff, 0x00, 0x00, 0x04}, // ssub b g  
	{0x96b2, &op_ssub,	  2,   6, 255, 0xff, 0x00, 0x00, 0x04}, // ssub c g  
	{0x96b3, &op_ssub,	  3,   6, 255, 0xff, 0x00, 0x00, 0x04}, // ssub d g  
	{0x96b4, &op_ssub,	  4,   6, 255, 0xff, 0x00, 0x00, 0x04}, // ssub e g  
	{0x96b5, &op_ssub,	  5,   6, 255, 0xff, 0x00, 0x00, 0x04}, // ssub f g  
	{0x96b6, &op_ssub,	  6,   6, 255, 0xff, 0x00, 0x00, 0x04}, // ssub g g  
	{0x96b7, &op_ssub,	  7,   6, 255, 0xff, 0x00, 0x00, 0x04}, // ssub h g  
	{0x96b8, &op_ssub,	  0,   7, 255, 0xff, 0x00, 0x00, 0x04}, // ssub a h  
	{0x96b9, &op_ssub,	  1,   7, 255, 0xff, 0x00, 0x00, 0x04}, // ssub b h  
	{0x96ba, &op_ssub,	  2,   7, 255, 0xff, 0x00, 0x00, 0x04}, // ssub c h  
	{0x96bb, &op_ssub,	  3,   7, 255, 0xff, 0x00, 0x00, 0x04}, // ssub d h  
	{0x96bc, &op_ssub,	  4,   7, 255, 0xff, 0x00, 0x00, 0x04}, // ssub e h  
	{0x96bd, &op_ssub,	  5,   7, 255, 0xff, 0x00, 0x00, 0x04}, // ssub f h  
	{0x96be, &op_ssub,	  6,   7, 255, 0xff, 0x00, 0x00, 0x04}, // ssub g h  
	{0x96bf, &op_ssub,	  7,   7, 255, 0xff, 0x00, 0x00, 0x04}, // ssub h h  
	{0x9700, &op_ssub,	  0,   0, 255, 0xff, 0x01, 0x00, 0x01}, // ssub.wr a a  
	{0x9701, &op_ssub,	  1,   0, 255, 0xff, 0x01, 0x00, 0x01}, // ssub.wr b a  
	{0x9702, &op_ssub,	  2,   0, 255, 0xff, 0x01, 0x00, 0x01}, // ssub.wr c a  
	{0x9703, &op_ssub,	  3,   0, 255, 0xff, 0x01, 0x00, 0x01}, // ssub.wr d a  
	{0x9704, &op_ssub,	  4,   0, 255, 0xff, 0x01, 0x00, 0x01}, // ssub.wr e a  
	{0x9705, &op_ssub,	  5,   0, 255, 0xff, 0x01, 0x00, 0x01}, // ssub.wr f a  
	{0x9706, &op_ssub,	  6,   0, 255, 0xff, 0x01, 0x00, 0x01}, // ssub.wr g a  
	{0x9707, &op_ssub,	  7,   0, 255, 0xff, 0x01, 0x00, 0x01}, // ssub.wr h a  
	{0x9708, &op_ssub,	  0,   1, 255, 0xff, 0x01, 0x00, 0x01}, // ssub.wr a b  
	{0x9709, &op_ssub,	  1,   1, 255, 0xff, 0x01, 0x00, 0x01}, // ssub.wr b b  
	{0x970a, &op_ssub,	  2,   1, 255, 0xff, 0x01, 0x00, 0x01}, // ssub.wr c b  
	{0x970b, &op_ssub,	  3,   1, 255, 0xff, 0x01, 0x00, 0x01}, // ssub.wr d b  
	{0x970c, &op_ssub,	  4,   1, 255, 0xff, 0x01, 0x00, 0x01}, // ssub.wr e b  
	{0x970d, &op_ssub,	  5,   1, 255, 0xff, 0x01, 0x00, 0x01}, // ssub.wr f b  
	{0x970e, &op_ssub,	  6,   1, 255, 0xff, 0x01, 0x00, 0x01}, // ssub.wr g b  
	{0x970f, &op_ssub,	  7,   1, 255, 0xff, 0x01, 0x00, 0x01}, // ssub.wr h b  
	{0x9710, &op_ssub,	  0,   2, 255, 0xff, 0x01, 0x00, 0x01}, // ssub.wr a c  
	{0x9711, &op_ssub,	  1,   2, 255, 0xff, 0x01, 0x00, 0x01}, // ssub.wr b c  
	{0x9712, &op_ssub,	  2,   2, 255, 0xff, 0x01, 0x00, 0x01}, // ssub.wr c c  
	{0x9713, &op_ssub,	  3,   2, 255, 0xff, 0x01, 0x00, 0x01}, // ssub.wr d c  
	{0x9714, &op_ssub,	  4,   2, 255, 0xff, 0x01, 0x00, 0x01}, // ssub.wr e c  
	{0x9715, &op_ssub,	  5,   2, 255, 0xff, 0x01, 0x00, 0x01}, // ssub.wr f c  
	{0x9716, &op_ssub,	  6,   2, 255, 0xff, 0x01, 0x00, 0x01}, // ssub.wr g c  
	{0x9717, &op_ssub,	  7,   2, 255, 0xff, 0x01, 0x00, 0x01}, // ssub.wr h c  
	{0x9718, &op_ssub,	  0,   3, 255, 0xff, 0x01, 0x00, 0x01}, // ssub.wr a d  
	{0x9719, &op_ssub,	  1,   3, 255, 0xff, 0x01, 0x00, 0x01}, // ssub.wr b d  
	{0x971a, &op_ssub,	  2,   3, 255, 0xff, 0x01, 0x00, 0x01}, // ssub.wr c d  
	{0x971b, &op_ssub,	  3,   3, 255, 0xff, 0x01, 0x00, 0x01}, // ssub.wr d d  
	{0x971c, &op_ssub,	  4,   3, 255, 0xff, 0x01, 0x00, 0x01}, // ssub.wr e d  
	{0x971d, &op_ssub,	  5,   3, 255, 0xff, 0x01, 0x00, 0x01}, // ssub.wr f d  
	{0x971e, &op_ssub,	  6,   3, 255, 0xff, 0x01, 0x00, 0x01}, // ssub.wr g d  
	{0x971f, &op_ssub,	  7,   3, 255, 0xff, 0x01, 0x00, 0x01}, // ssub.wr h d  
	{0x9720, &op_ssub,	  0,   4, 255, 0xff, 0x01, 0x00, 0x01}, // ssub.wr a e  
	{0x9721, &op_ssub,	  1,   4, 255, 0xff, 0x01, 0x00, 0x01}, // ssub.wr b e  
	{0x9722, &op_ssub,	  2,   4, 255, 0xff, 0x01, 0x00, 0x01}, // ssub.wr c e  
	{0x9723, &op_ssub,	  3,   4, 255, 0xff, 0x01, 0x00, 0x01}, // ssub.wr d e  
	{0x9724, &op_ssub,	  4,   4, 255, 0xff, 0x01, 0x00, 0x01}, // ssub.wr e e  
	{0x9725, &op_ssub,	  5,   4, 255, 0xff, 0x01, 0x00, 0x01}, // ssub.wr f e  
	{0x9726, &op_ssub,	  6,   4, 255, 0xff, 0x01, 0x00, 0x01}, // ssub.wr g e  
	{0x9727, &op_ssub,	  7,   4, 255, 0xff, 0x01, 0x00, 0x01}, // ssub.wr h e  
	{0x9728, &op_ssub,	  0,   5, 255, 0xff, 0x01, 0x00, 0x01}, // ssub.wr a f  
	{0x9729, &op_ssub,	  1,   5, 255, 0xff, 0x01, 0x00, 0x01}, // ssub.wr b f  
	{0x972a, &op_ssub,	  2,   5, 255, 0xff, 0x01, 0x00, 0x01}, // ssub.wr c f  
	{0x972b, &op_ssub,	  3,   5, 255, 0xff, 0x01, 0x00, 0x01}, // ssub.wr d f  
	{0x972c, &op_ssub,	  4,   5, 255, 0xff, 0x01, 0x00, 0x01}, // ssub.wr e f  
	{0x972d, &op_ssub,	  5,   5, 255, 0xff, 0x01, 0x00, 0x01}, // ssub.wr f f  
	{0x972e, &op_ssub,	  6,   5, 255, 0xff, 0x01, 0x00, 0x01}, // ssub.wr g f  
	{0x972f, &op_ssub,	  7,   5, 255, 0xff, 0x01, 0x00, 0x01}, // ssub.wr h f  
	{0x9730, &op_ssub,	  0,   6, 255, 0xff, 0x01, 0x00, 0x01}, // ssub.wr a g  
	{0x9731, &op_ssub,	  1,   6, 255, 0xff, 0x01, 0x00, 0x01}, // ssub.wr b g  
	{0x9732, &op_ssub,	  2,   6, 255, 0xff, 0x01, 0x00, 0x01}, // ssub.wr c g  
	{0x9733, &op_ssub,	  3,   6, 255, 0xff, 0x01, 0x00, 0x01}, // ssub.wr d g  
	{0x9734, &op_ssub,	  4,   6, 255, 0xff, 0x01, 0x00, 0x01}, // ssub.wr e g  
	{0x9735, &op_ssub,	  5,   6, 255, 0xff, 0x01, 0x00, 0x01}, // ssub.wr f g  
	{0x9736, &op_ssub,	  6,   6, 255, 0xff, 0x01, 0x00, 0x01}, // ssub.wr g g  
	{0x9737, &op_ssub,	  7,   6, 255, 0xff, 0x01, 0x00, 0x01}, // ssub.wr h g  
	{0x9738, &op_ssub,	  0,   7, 255, 0xff, 0x01, 0x00, 0x01}, // ssub.wr a h  
	{0x9739, &op_ssub,	  1,   7, 255, 0xff, 0x01, 0x00, 0x01}, // ssub.wr b h  
	{0x973a, &op_ssub,	  2,   7, 255, 0xff, 0x01, 0x00, 0x01}, // ssub.wr c h  
	{0x973b, &op_ssub,	  3,   7, 255, 0xff, 0x01, 0x00, 0x01}, // ssub.wr d h  
	{0x973c, &op_ssub,	  4,   7, 255, 0xff, 0x01, 0x00, 0x01}, // ssub.wr e h  
	{0x973d, &op_ssub,	  5,   7, 255, 0xff, 0x01, 0x00, 0x01}, // ssub.wr f h  
	{0x973e, &op_ssub,	  6,   7, 255, 0xff, 0x01, 0x00, 0x01}, // ssub.wr g h  
	{0x973f, &op_ssub,	  7,   7, 255, 0xff, 0x01, 0x00, 0x01}, // ssub.wr h h  
	{0x9740, &op_ssub,	  0,   0, 255, 0xff, 0x01, 0x00, 0x02}, // ssub.dr a a  
	{0x9741, &op_ssub,	  1,   0, 255, 0xff, 0x01, 0x00, 0x02}, // ssub.dr b a  
	{0x9742, &op_ssub,	  2,   0, 255, 0xff, 0x01, 0x00, 0x02}, // ssub.dr c a  
	{0x9743, &op_ssub,	  3,   0, 255, 0xff, 0x01, 0x00, 0x02}, // ssub.dr d a  
	{0x9744, &op_ssub,	  4,   0, 255, 0xff, 0x01, 0x00, 0x02}, // ssub.dr e a  
	{0x9745, &op_ssub,	  5,   0, 255, 0xff, 0x01, 0x00, 0x02}, // ssub.dr f a  
	{0x9746, &op_ssub,	  6,   0, 255, 0xff, 0x01, 0x00, 0x02}, // ssub.dr g a  
	{0x9747, &op_ssub,	  7,   0, 255, 0xff, 0x01, 0x00, 0x02}, // ssub.dr h a  
	{0x9748, &op_ssub,	  0,   1, 255, 0xff, 0x01, 0x00, 0x02}, // ssub.dr a b  
	{0x9749, &op_ssub,	  1,   1, 255, 0xff, 0x01, 0x00, 0x02}, // ssub.dr b b  
	{0x974a, &op_ssub,	  2,   1, 255, 0xff, 0x01, 0x00, 0x02}, // ssub.dr c b  
	{0x974b, &op_ssub,	  3,   1, 255, 0xff, 0x01, 0x00, 0x02}, // ssub.dr d b  
	{0x974c, &op_ssub,	  4,   1, 255, 0xff, 0x01, 0x00, 0x02}, // ssub.dr e b  
	{0x974d, &op_ssub,	  5,   1, 255, 0xff, 0x01, 0x00, 0x02}, // ssub.dr f b  
	{0x974e, &op_ssub,	  6,   1, 255, 0xff, 0x01, 0x00, 0x02}, // ssub.dr g b  
	{0x974f, &op_ssub,	  7,   1, 255, 0xff, 0x01, 0x00, 0x02}, // ssub.dr h b  
	{0x9750, &op_ssub,	  0,   2, 255, 0xff, 0x01, 0x00, 0x02}, // ssub.dr a c  
	{0x9751, &op_ssub,	  1,   2, 255, 0xff, 0x01, 0x00, 0x02}, // ssub.dr b c  
	{0x9752, &op_ssub,	  2,   2, 255, 0xff, 0x01, 0x00, 0x02}, // ssub.dr c c  
	{0x9753, &op_ssub,	  3,   2, 255, 0xff, 0x01, 0x00, 0x02}, // ssub.dr d c  
	{0x9754, &op_ssub,	  4,   2, 255, 0xff, 0x01, 0x00, 0x02}, // ssub.dr e c  
	{0x9755, &op_ssub,	  5,   2, 255, 0xff, 0x01, 0x00, 0x02}, // ssub.dr f c  
	{0x9756, &op_ssub,	  6,   2, 255, 0xff, 0x01, 0x00, 0x02}, // ssub.dr g c  
	{0x9757, &op_ssub,	  7,   2, 255, 0xff, 0x01, 0x00, 0x02}, // ssub.dr h c  
	{0x9758, &op_ssub,	  0,   3, 255, 0xff, 0x01, 0x00, 0x02}, // ssub.dr a d  
	{0x9759, &op_ssub,	  1,   3, 255, 0xff, 0x01, 0x00, 0x02}, // ssub.dr b d  
	{0x975a, &op_ssub,	  2,   3, 255, 0xff, 0x01, 0x00, 0x02}, // ssub.dr c d  
	{0x975b, &op_ssub,	  3,   3, 255, 0xff, 0x01, 0x00, 0x02}, // ssub.dr d d  
	{0x975c, &op_ssub,	  4,   3, 255, 0xff, 0x01, 0x00, 0x02}, // ssub.dr e d  
	{0x975d, &op_ssub,	  5,   3, 255, 0xff, 0x01, 0x00, 0x02}, // ssub.dr f d  
	{0x975e, &op_ssub,	  6,   3, 255, 0xff, 0x01, 0x00, 0x02}, // ssub.dr g d  
	{0x975f, &op_ssub,	  7,   3, 255, 0xff, 0x01, 0x00, 0x02}, // ssub.dr h d  
	{0x9760, &op_ssub,	  0,   4, 255, 0xff, 0x01, 0x00, 0x02}, // ssub.dr a e  
	{0x9761, &op_ssub,	  1,   4, 255, 0xff, 0x01, 0x00, 0x02}, // ssub.dr b e  
	{0x9762, &op_ssub,	  2,   4, 255, 0xff, 0x01, 0x00, 0x02}, // ssub.dr c e  
	{0x9763, &op_ssub,	  3,   4, 255, 0xff, 0x01, 0x00, 0x02}, // ssub.dr d e  
	{0x9764, &op_ssub,	  4,   4, 255, 0xff, 0x01, 0x00, 0x02}, // ssub.dr e e  
	{0x9765, &op_ssub,	  5,   4, 255, 0xff, 0x01, 0x00, 0x02}, // ssub.dr f e  
	{0x9766, &op_ssub,	  6,   4, 255, 0xff, 0x01, 0x00, 0x02}, // ssub.dr g e  
	{0x9767, &op_ssub,	  7,   4, 255, 0xff, 0x01, 0x00, 0x02}, // ssub.dr h e  
	{0x9768, &op_ssub,	  0,   5, 255, 0xff, 0x01, 0x00, 0x02}, // ssub.dr a f  
	{0x9769, &op_ssub,	  1,   5, 255, 0xff, 0x01, 0x00, 0x02}, // ssub.dr b f  
	{0x976a, &op_ssub,	  2,   5, 255, 0xff, 0x01, 0x00, 0x02}, // ssub.dr c f  
	{0x976b, &op_ssub,	  3,   5, 255, 0xff, 0x01, 0x00, 0x02}, // ssub.dr d f  
	{0x976c, &op_ssub,	  4,   5, 255, 0xff, 0x01, 0x00, 0x02}, // ssub.dr e f  
	{0x976d, &op_ssub,	  5,   5, 255, 0xff, 0x01, 0x00, 0x02}, // ssub.dr f f  
	{0x976e, &op_ssub,	  6,   5, 255, 0xff, 0x01, 0x00, 0x02}, // ssub.dr g f  
	{0x976f, &op_ssub,	  7,   5, 255, 0xff, 0x01, 0x00, 0x02}, // ssub.dr h f  
	{0x9770, &op_ssub,	  0,   6, 255, 0xff, 0x01, 0x00, 0x02}, // ssub.dr a g  
	{0x9771, &op_ssub,	  1,   6, 255, 0xff, 0x01, 0x00, 0x02}, // ssub.dr b g  
	{0x9772, &op_ssub,	  2,   6, 255, 0xff, 0x01, 0x00, 0x02}, // ssub.dr c g  
	{0x9773, &op_ssub,	  3,   6, 255, 0xff, 0x01, 0x00, 0x02}, // ssub.dr d g  
	{0x9774, &op_ssub,	  4,   6, 255, 0xff, 0x01, 0x00, 0x02}, // ssub.dr e g  
	{0x9775, &op_ssub,	  5,   6, 255, 0xff, 0x01, 0x00, 0x02}, // ssub.dr f g  
	{0x9776, &op_ssub,	  6,   6, 255, 0xff, 0x01, 0x00, 0x02}, // ssub.dr g g  
	{0x9777, &op_ssub,	  7,   6, 255, 0xff, 0x01, 0x00, 0x02}, // ssub.dr h g  
	{0x9778, &op_ssub,	  0,   7, 255, 0xff, 0x01, 0x00, 0x02}, // ssub.dr a h  
	{0x9779, &op_ssub,	  1,   7, 255, 0xff, 0x01, 0x00, 0x02}, // ssub.dr b h  
	{0x977a, &op_ssub,	  2,   7, 255, 0xff, 0x01, 0x00, 0x02}, // ssub.dr c h  
	{0x977b, &op_ssub,	  3,   7, 255, 0xff, 0x01, 0x00, 0x02}, // ssub.dr d h  
	{0x977c, &op_ssub,	  4,   7, 255, 0xff, 0x01, 0x00, 0x02}, // ssub.dr e h  
	{0x977d, &op_ssub,	  5,   7, 255, 0xff, 0x01, 0x00, 0x02}, // ssub.dr f h  
	{0x977e, &op_ssub,	  6,   7, 255, 0xff, 0x01, 0x00, 0x02}, // ssub.dr g h  
	{0x977f, &op_ssub,	  7,   7, 255, 0xff, 0x01, 0x00, 0x02}, // ssub.dr h h  
	{0x9780, &op_ssub,	  0,   0, 255, 0xff, 0x01, 0x00, 0x04}, // ssub.r a a  
	{0x9781, &op_ssub,	  1,   0, 255, 0xff, 0x01, 0x00, 0x04}, // ssub.r b a  
	{0x9782, &op_ssub,	  2,   0, 255, 0xff, 0x01, 0x00, 0x04}, // ssub.r c a  
	{0x9783, &op_ssub,	  3,   0, 255, 0xff, 0x01, 0x00, 0x04}, // ssub.r d a  
	{0x9784, &op_ssub,	  4,   0, 255, 0xff, 0x01, 0x00, 0x04}, // ssub.r e a  
	{0x9785, &op_ssub,	  5,   0, 255, 0xff, 0x01, 0x00, 0x04}, // ssub.r f a  
	{0x9786, &op_ssub,	  6,   0, 255, 0xff, 0x01, 0x00, 0x04}, // ssub.r g a  
	{0x9787, &op_ssub,	  7,   0, 255, 0xff, 0x01, 0x00, 0x04}, // ssub.r h a  
	{0x9788, &op_ssub,	  0,   1, 255, 0xff, 0x01, 0x00, 0x04}, // ssub.r a b  
	{0x9789, &op_ssub,	  1,   1, 255, 0xff, 0x01, 0x00, 0x04}, // ssub.r b b  
	{0x978a, &op_ssub,	  2,   1, 255, 0xff, 0x01, 0x00, 0x04}, // ssub.r c b  
	{0x978b, &op_ssub,	  3,   1, 255, 0xff, 0x01, 0x00, 0x04}, // ssub.r d b  
	{0x978c, &op_ssub,	  4,   1, 255, 0xff, 0x01, 0x00, 0x04}, // ssub.r e b  
	{0x978d, &op_ssub,	  5,   1, 255, 0xff, 0x01, 0x00, 0x04}, // ssub.r f b  
	{0x978e, &op_ssub,	  6,   1, 255, 0xff, 0x01, 0x00, 0x04}, // ssub.r g b  
	{0x978f, &op_ssub,	  7,   1, 255, 0xff, 0x01, 0x00, 0x04}, // ssub.r h b  
	{0x9790, &op_ssub,	  0,   2, 255, 0xff, 0x01, 0x00, 0x04}, // ssub.r a c  
	{0x9791, &op_ssub,	  1,   2, 255, 0xff, 0x01, 0x00, 0x04}, // ssub.r b c  
	{0x9792, &op_ssub,	  2,   2, 255, 0xff, 0x01, 0x00, 0x04}, // ssub.r c c  
	{0x9793, &op_ssub,	  3,   2, 255, 0xff, 0x01, 0x00, 0x04}, // ssub.r d c  
	{0x9794, &op_ssub,	  4,   2, 255, 0xff, 0x01, 0x00, 0x04}, // ssub.r e c  
	{0x9795, &op_ssub,	  5,   2, 255, 0xff, 0x01, 0x00, 0x04}, // ssub.r f c  
	{0x9796, &op_ssub,	  6,   2, 255, 0xff, 0x01, 0x00, 0x04}, // ssub.r g c  
	{0x9797, &op_ssub,	  7,   2, 255, 0xff, 0x01, 0x00, 0x04}, // ssub.r h c  
	{0x9798, &op_ssub,	  0,   3, 255, 0xff, 0x01, 0x00, 0x04}, // ssub.r a d  
	{0x9799, &op_ssub,	  1,   3, 255, 0xff, 0x01, 0x00, 0x04}, // ssub.r b d  
	{0x979a, &op_ssub,	  2,   3, 255, 0xff, 0x01, 0x00, 0x04}, // ssub.r c d  
	{0x979b, &op_ssub,	  3,   3, 255, 0xff, 0x01, 0x00, 0x04}, // ssub.r d d  
	{0x979c, &op_ssub,	  4,   3, 255, 0xff, 0x01, 0x00, 0x04}, // ssub.r e d  
	{0x979d, &op_ssub,	  5,   3, 255, 0xff, 0x01, 0x00, 0x04}, // ssub.r f d  
	{0x979e, &op_ssub,	  6,   3, 255, 0xff, 0x01, 0x00, 0x04}, // ssub.r g d  
	{0x979f, &op_ssub,	  7,   3, 255, 0xff, 0x01, 0x00, 0x04}, // ssub.r h d  
	{0x97a0, &op_ssub,	  0,   4, 255, 0xff, 0x01, 0x00, 0x04}, // ssub.r a e  
	{0x97a1, &op_ssub,	  1,   4, 255, 0xff, 0x01, 0x00, 0x04}, // ssub.r b e  
	{0x97a2, &op_ssub,	  2,   4, 255, 0xff, 0x01, 0x00, 0x04}, // ssub.r c e  
	{0x97a3, &op_ssub,	  3,   4, 255, 0xff, 0x01, 0x00, 0x04}, // ssub.r d e  
	{0x97a4, &op_ssub,	  4,   4, 255, 0xff, 0x01, 0x00, 0x04}, // ssub.r e e  
	{0x97a5, &op_ssub,	  5,   4, 255, 0xff, 0x01, 0x00, 0x04}, // ssub.r f e  
	{0x97a6, &op_ssub,	  6,   4, 255, 0xff, 0x01, 0x00, 0x04}, // ssub.r g e  
	{0x97a7, &op_ssub,	  7,   4, 255, 0xff, 0x01, 0x00, 0x04}, // ssub.r h e  
	{0x97a8, &op_ssub,	  0,   5, 255, 0xff, 0x01, 0x00, 0x04}, // ssub.r a f  
	{0x97a9, &op_ssub,	  1,   5, 255, 0xff, 0x01, 0x00, 0x04}, // ssub.r b f  
	{0x97aa, &op_ssub,	  2,   5, 255, 0xff, 0x01, 0x00, 0x04}, // ssub.r c f  
	{0x97ab, &op_ssub,	  3,   5, 255, 0xff, 0x01, 0x00, 0x04}, // ssub.r d f  
	{0x97ac, &op_ssub,	  4,   5, 255, 0xff, 0x01, 0x00, 0x04}, // ssub.r e f  
	{0x97ad, &op_ssub,	  5,   5, 255, 0xff, 0x01, 0x00, 0x04}, // ssub.r f f  
	{0x97ae, &op_ssub,	  6,   5, 255, 0xff, 0x01, 0x00, 0x04}, // ssub.r g f  
	{0x97af, &op_ssub,	  7,   5, 255, 0xff, 0x01, 0x00, 0x04}, // ssub.r h f  
	{0x97b0, &op_ssub,	  0,   6, 255, 0xff, 0x01, 0x00, 0x04}, // ssub.r a g  
	{0x97b1, &op_ssub,	  1,   6, 255, 0xff, 0x01, 0x00, 0x04}, // ssub.r b g  
	{0x97b2, &op_ssub,	  2,   6, 255, 0xff, 0x01, 0x00, 0x04}, // ssub.r c g  
	{0x97b3, &op_ssub,	  3,   6, 255, 0xff, 0x01, 0x00, 0x04}, // ssub.r d g  
	{0x97b4, &op_ssub,	  4,   6, 255, 0xff, 0x01, 0x00, 0x04}, // ssub.r e g  
	{0x97b5, &op_ssub,	  5,   6, 255, 0xff, 0x01, 0x00, 0x04}, // ssub.r f g  
	{0x97b6, &op_ssub,	  6,   6, 255, 0xff, 0x01, 0x00, 0x04}, // ssub.r g g  
	{0x97b7, &op_ssub,	  7,   6, 255, 0xff, 0x01, 0x00, 0x04}, // ssub.r h g  
	{0x97b8, &op_ssub,	  0,   7, 255, 0xff, 0x01, 0x00, 0x04}, // ssub.r a h  
	{0x97b9, &op_ssub,	  1,   7, 255, 0xff, 0x01, 0x00, 0x04}, // ssub.r b h  
	{0x97ba, &op_ssub,	  2,   7, 255, 0xff, 0x01, 0x00, 0x04}, // ssub.r c h  
	{0x97bb, &op_ssub,	  3,   7, 255, 0xff, 0x01, 0x00, 0x04}, // ssub.r d h  
	{0x97bc, &op_ssub,	  4,   7, 255, 0xff, 0x01, 0x00, 0x04}, // ssub.r e h  
	{0x97bd, &op_ssub,	  5,   7, 255, 0xff, 0x01, 0x00, 0x04}, // ssub.r f h  
	{0x97be, &op_ssub,	  6,   7, 255, 0xff, 0x01, 0x00, 0x04}, // ssub.r g h  
	{0x97bf, &op_ssub,	  7,   7, 255, 0xff, 0x01, 0x00, 0x04}, // ssub.r h h  
	{0x96c8, &op_ssub,	  0,   8, 255, 0xff, 0x00, 0x01, 0x01}, // ssub.wi a <literal>  
	{0x96c9, &op_ssub,	  1,   8, 255, 0xff, 0x00, 0x01, 0x01}, // ssub.wi b <literal>  
	{0x96ca, &op_ssub,	  2,   8, 255, 0xff, 0x00, 0x01, 0x01}, // ssub.wi c <literal>  
	{0x96cb, &op_ssub,	  3,   8, 255, 0xff, 0x00, 0x01, 0x01}, // ssub.wi d <literal>  
	{0x96cc, &op_ssub,	  4,   8, 255, 0xff, 0x00, 0x01, 0x01}, // ssub.wi e <literal>  
	{0x96cd, &op_ssub,	  5,   8, 255, 0xff, 0x00, 0x01, 0x01}, // ssub.wi f <literal>  
	{0x96ce, &op_ssub,	  6,   8, 255, 0xff, 0x00, 0x01, 0x01}, // ssub.wi g <literal>  
	{0x96cf, &op_ssub,	  7,   8, 255, 0xff, 0x00, 0x01, 0x01}, // ssub.wi h <literal>  
	{0x96d0, &op_ssub,	  0,   8, 255, 0xff, 0x00, 0x02, 0x02}, // ssub.di a <literal>  
	{0x96d1, &op_ssub,	  1,   8, 255, 0xff, 0x00, 0x02, 0x02}, // ssub.di b <literal>  
	{0x96d2, &op_ssub,	  2,   8, 255, 0xff, 0x00, 0x02, 0x02}, // ssub.di c <literal>  
	{0x96d3, &op_ssub,	  3,   8, 255, 0xff, 0x00, 0x02, 0x02}, // ssub.di d <literal>  
	{0x96d4, &op_ssub,	  4,   8, 255, 0xff, 0x00, 0x02, 0x02}, // ssub.di e <literal>  
	{0x96d5, &op_ssub,	  5,   8, 255, 0xff, 0x00, 0x02, 0x02}, // ssub.di f <literal>  
	{0x96d6, &op_ssub,	  6,   8, 255, 0xff, 0x00, 0x02, 0x02}, // ssub.di g <literal>  
	{0x96d7, &op_ssub,	  7,   8, 255, 0xff, 0x00, 0x02, 0x02}, // ssub.di h <literal>  
	{0x96e0, &op_ssub,	  0,   8, 255, 0xff, 0x00, 0x04, 0x04}, // ssub.i a <literal>  
	{0x96e1, &op_ssub,	  1,   8, 255, 0xff, 0x00, 0x04, 0x04}, // ssub.i b <literal>  
	{0x96e2, &op_ssub,	  2,   8, 255, 0xff, 0x00, 0x04, 0x04}, // ssub.i c <literal>  
	{0x96e3, &op_ssub,	  3,   8, 255, 0xff, 0x00, 0x04, 0x04}, // ssub.i d <literal>  
	{0x96e4, &op_ssub,	  4,   8, 255, 0xff, 0x00, 0x04, 0x04}, // ssub.i e <literal>  
	{0x96e5, &op_ssub,	  5,   8, 255, 0xff, 0x00, 0x04, 0x04}, // ssub.i f <literal>  
	{0x96e6, &op_ssub,	  6,   8, 255, 0xff, 0x00, 0x04, 0x04}, // ssub.i g <literal>  
	{0x96e7, &op_ssub,	  7,   8, 255, 0xff, 0x00, 0x04, 0x04}, // ssub.i h <literal>  
	{0x97c8, &op_ssub,	  0,   8, 255, 0xff, 0x01, 0x04, 0x01}, // ssub.wri a <literal>  
	{0x97c9, &op_ssub,	  1,   8, 255, 0xff, 0x01, 0x04, 0x01}, // ssub.wri b <literal>  
	{0x97ca, &op_ssub,	  2,   8, 255, 0xff, 0x01, 0x04, 0x01}, // ssub.wri c <literal>  
	{0x97cb, &op_ssub,	  3,   8, 255, 0xff, 0x01, 0x04, 0x01}, // ssub.wri d <literal>  
	{0x97cc, &op_ssub,	  4,   8, 255, 0xff, 0x01, 0x04, 0x01}, // ssub.wri e <literal>  
	{0x97cd, &op_ssub,	  5,   8, 255, 0xff, 0x01, 0x04, 0x01}, // ssub.wri f <literal>  
	{0x97ce, &op_ssub,	  6,   8, 255, 0xff, 0x01, 0x04, 0x01}, // ssub.wri g <literal>  
	{0x97cf, &op_ssub,	  7,   8, 255, 0xff, 0x01, 0x04, 0x01}, // ssub.wri h <literal>  
	{0x97d0, &op_ssub,	  0,   8, 255, 0xff, 0x01, 0x04, 0x02}, // ssub.dri a <literal>  
	{0x97d1, &op_ssub,	  1,   8, 255, 0xff, 0x01, 0x04, 0x02}, // ssub.dri b <literal>  
	{0x97d2, &op_ssub,	  2,   8, 255, 0xff, 0x01, 0x04, 0x02}, // ssub.dri c <literal>  
	{0x97d3, &op_ssub,	  3,   8, 255, 0xff, 0x01, 0x04, 0x02}, // ssub.dri d <literal>  
	{0x97d4, &op_ssub,	  4,   8, 255, 0xff, 0x01, 0x04, 0x02}, // ssub.dri e <literal>  
	{0x97d5, &op_ssub,	  5,   8, 255, 0xff, 0x01, 0x04, 0x02}, // ssub.dri f <literal>  
	{0x97d6, &op_ssub,	  6,   8, 255, 0xff, 0x01, 0x04, 0x02}, // ssub.dri g <literal>  
	{0x97d7, &op_ssub,	  7,   8, 255, 0xff, 0x01, 0x04, 0x02}, // ssub.dri h <literal>  
	{0x97e0, &op_ssub,	  0,   8, 255, 0xff, 0x01, 0x04, 0x04}, // ssub.ri a <literal>  
	{0x97e1, &op_ssub,	  1,   8, 255, 0xff, 0x01, 0x04, 0x04}, // ssub.ri b <literal>  
	{0x97e2, &op_ssub,	  2,   8, 255, 0xff, 0x01, 0x04, 0x04}, // ssub.ri c <literal>  
	{0x97e3, &op_ssub,	  3,   8, 255, 0xff, 0x01, 0x04, 0x04}, // ssub.ri d <literal>  
	{0x97e4, &op_ssub,	  4,   8, 255, 0xff, 0x01, 0x04, 0x04}, // ssub.ri e <literal>  
	{0x97e5, &op_ssub,	  5,   8, 255, 0xff, 0x01, 0x04, 0x04}, // ssub.ri f <literal>  
	{0x97e6, &op_ssub,	  6,   8, 255, 0xff, 0x01, 0x04, 0x04}, // ssub.ri g <literal>  
	{0x97e7, &op_ssub,	  7,   8, 255, 0xff, 0x01, 0x04, 0x04}, // ssub.ri h <literal>  
	{0x9800, &op_smul,	  0,   0, 255, 0xff, 0x00, 0x00, 0x01}, // smul.w a a  
	{0x9801, &op_smul,	  1,   0, 255, 0xff, 0x00, 0x00, 0x01}, // smul.w b a  
	{0x9802, &op_smul,	  2,   0, 255, 0xff, 0x00, 0x00, 0x01}, // smul.w c a  
	{0x9803, &op_smul,	  3,   0, 255, 0xff, 0x00, 0x00, 0x01}, // smul.w d a  
	{0x9804, &op_smul,	  4,   0, 255, 0xff, 0x00, 0x00, 0x01}, // smul.w e a  
	{0x9805, &op_smul,	  5,   0, 255, 0xff, 0x00, 0x00, 0x01}, // smul.w f a  
	{0x9806, &op_smul,	  6,   0, 255, 0xff, 0x00, 0x00, 0x01}, // smul.w g a  
	{0x9807, &op_smul,	  7,   0, 255, 0xff, 0x00, 0x00, 0x01}, // smul.w h a  
	{0x9808, &op_smul,	  0,   1, 255, 0xff, 0x00, 0x00, 0x01}, // smul.w a b  
	{0x9809, &op_smul,	  1,   1, 255, 0xff, 0x00, 0x00, 0x01}, // smul.w b b  
	{0x980a, &op_smul,	  2,   1, 255, 0xff, 0x00, 0x00, 0x01}, // smul.w c b  
	{0x980b, &op_smul,	  3,   1, 255, 0xff, 0x00, 0x00, 0x01}, // smul.w d b  
	{0x980c, &op_smul,	  4,   1, 255, 0xff, 0x00, 0x00, 0x01}, // smul.w e b  
	{0x980d, &op_smul,	  5,   1, 255, 0xff, 0x00, 0x00, 0x01}, // smul.w f b  
	{0x980e, &op_smul,	  6,   1, 255, 0xff, 0x00, 0x00, 0x01}, // smul.w g b  
	{0x980f, &op_smul,	  7,   1, 255, 0xff, 0x00, 0x00, 0x01}, // smul.w h b  
	{0x9810, &op_smul,	  0,   2, 255, 0xff, 0x00, 0x00, 0x01}, // smul.w a c  
	{0x9811, &op_smul,	  1,   2, 255, 0xff, 0x00, 0x00, 0x01}, // smul.w b c  
	{0x9812, &op_smul,	  2,   2, 255, 0xff, 0x00, 0x00, 0x01}, // smul.w c c  
	{0x9813, &op_smul,	  3,   2, 255, 0xff, 0x00, 0x00, 0x01}, // smul.w d c  
	{0x9814, &op_smul,	  4,   2, 255, 0xff, 0x00, 0x00, 0x01}, // smul.w e c  
	{0x9815, &op_smul,	  5,   2, 255, 0xff, 0x00, 0x00, 0x01}, // smul.w f c  
	{0x9816, &op_smul,	  6,   2, 255, 0xff, 0x00, 0x00, 0x01}, // smul.w g c  
	{0x9817, &op_smul,	  7,   2, 255, 0xff, 0x00, 0x00, 0x01}, // smul.w h c  
	{0x9818, &op_smul,	  0,   3, 255, 0xff, 0x00, 0x00, 0x01}, // smul.w a d  
	{0x9819, &op_smul,	  1,   3, 255, 0xff, 0x00, 0x00, 0x01}, // smul.w b d  
	{0x981a, &op_smul,	  2,   3, 255, 0xff, 0x00, 0x00, 0x01}, // smul.w c d  
	{0x981b, &op_smul,	  3,   3, 255, 0xff, 0x00, 0x00, 0x01}, // smul.w d d  
	{0x981c, &op_smul,	  4,   3, 255, 0xff, 0x00, 0x00, 0x01}, // smul.w e d  
	{0x981d, &op_smul,	  5,   3, 255, 0xff, 0x00, 0x00, 0x01}, // smul.w f d  
	{0x981e, &op_smul,	  6,   3, 255, 0xff, 0x00, 0x00, 0x01}, // smul.w g d  
	{0x981f, &op_smul,	  7,   3, 255, 0xff, 0x00, 0x00, 0x01}, // smul.w h d  
	{0x9820, &op_smul,	  0,   4, 255, 0xff, 0x00, 0x00, 0x01}, // smul.w a e  
	{0x9821, &op_smul,	  1,   4, 255, 0xff, 0x00, 0x00, 0x01}, // smul.w b e  
	{0x9822, &op_smul,	  2,   4, 255, 0xff, 0x00, 0x00, 0x01}, // smul.w c e  
	{0x9823, &op_smul,	  3,   4, 255, 0xff, 0x00, 0x00, 0x01}, // smul.w d e  
	{0x9824, &op_smul,	  4,   4, 255, 0xff, 0x00, 0x00, 0x01}, // smul.w e e  
	{0x9825, &op_smul,	  5,   4, 255, 0xff, 0x00, 0x00, 0x01}, // smul.w f e  
	{0x9826, &op_smul,	  6,   4, 255, 0xff, 0x00, 0x00, 0x01}, // smul.w g e  
	{0x9827, &op_smul,	  7,   4, 255, 0xff, 0x00, 0x00, 0x01}, // smul.w h e  
	{0x9828, &op_smul,	  0,   5, 255, 0xff, 0x00, 0x00, 0x01}, // smul.w a f  
	{0x9829, &op_smul,	  1,   5, 255, 0xff, 0x00, 0x00, 0x01}, // smul.w b f  
	{0x982a, &op_smul,	  2,   5, 255, 0xff, 0x00, 0x00, 0x01}, // smul.w c f  
	{0x982b, &op_smul,	  3,   5, 255, 0xff, 0x00, 0x00, 0x01}, // smul.w d f  
	{0x982c, &op_smul,	  4,   5, 255, 0xff, 0x00, 0x00, 0x01}, // smul.w e f  
	{0x982d, &op_smul,	  5,   5, 255, 0xff, 0x00, 0x00, 0x01}, // smul.w f f  
	{0x982e, &op_smul,	  6,   5, 255, 0xff, 0x00, 0x00, 0x01}, // smul.w g f  
	{0x982f, &op_smul,	  7,   5, 255, 0xff, 0x00, 0x00, 0x01}, // smul.w h f  
	{0x9830, &op_smul,	  0,   6, 255, 0xff, 0x00, 0x00, 0x01}, // smul.w a g  
	{0x9831, &op_smul,	  1,   6, 255, 0xff, 0x00, 0x00, 0x01}, // smul.w b g  
	{0x9832, &op_smul,	  2,   6, 255, 0xff, 0x00, 0x00, 0x01}, // smul.w c g  
	{0x9833, &op_smul,	  3,   6, 255, 0xff, 0x00, 0x00, 0x01}, // smul.w d g  
	{0x9834, &op_smul,	  4,   6, 255, 0xff, 0x00, 0x00, 0x01}, // smul.w e g  
	{0x9835, &op_smul,	  5,   6, 255, 0xff, 0x00, 0x00, 0x01}, // smul.w f g  
	{0x9836, &op_smul,	  6,   6, 255, 0xff, 0x00, 0x00, 0x01}, // smul.w g g  
	{0x9837, &op_smul,	  7,   6, 255, 0xff, 0x00, 0x00, 0x01}, // smul.w h g  
	{0x9838, &op_smul,	  0,   7, 255, 0xff, 0x00, 0x00, 0x01}, // smul.w a h  
	{0x9839, &op_smul,	  1,   7, 255, 0xff, 0x00, 0x00, 0x01}, // smul.w b h  
	{0x983a, &op_smul,	  2,   7, 255, 0xff, 0x00, 0x00, 0x01}, // smul.w c h  
	{0x983b, &op_smul,	  3,   7, 255, 0xff, 0x00, 0x00, 0x01}, // smul.w d h  
	{0x983c, &op_smul,	  4,   7, 255, 0xff, 0x00, 0x00, 0x01}, // smul.w e h  
	{0x983d, &op_smul,	  5,   7, 255, 0xff, 0x00, 0x00, 0x01}, // smul.w f h  
	{0x983e, &op_smul,	  6,   7, 255, 0xff, 0x00, 0x00, 0x01}, // smul.w g h  
	{0x983f, &op_smul,	  7,   7, 255, 0xff, 0x00, 0x00, 0x01}, // smul.w h h  
	{0x9840, &op_smul,	  0,   0, 255, 0xff, 0x00, 0x00, 0x02}, // smul.d a a  
	{0x9841, &op_smul,	  1,   0, 255, 0xff, 0x00, 0x00, 0x02}, // smul.d b a  
	{0x9842, &op_smul,	  2,   0, 255, 0xff, 0x00, 0x00, 0x02}, // smul.d c a  
	{0x9843, &op_smul,	  3,   0, 255, 0xff, 0x00, 0x00, 0x02}, // smul.d d a  
	{0x9844, &op_smul,	  4,   0, 255, 0xff, 0x00, 0x00, 0x02}, // smul.d e a  
	{0x9845, &op_smul,	  5,   0, 255, 0xff, 0x00, 0x00, 0x02}, // smul.d f a  
	{0x9846, &op_smul,	  6,   0, 255, 0xff, 0x00, 0x00, 0x02}, // smul.d g a  
	{0x9847, &op_smul,	  7,   0, 255, 0xff, 0x00, 0x00, 0x02}, // smul.d h a  
	{0x9848, &op_smul,	  0,   1, 255, 0xff, 0x00, 0x00, 0x02}, // smul.d a b  
	{0x9849, &op_smul,	  1,   1, 255, 0xff, 0x00, 0x00, 0x02}, // smul.d b b  
	{0x984a, &op_smul,	  2,   1, 255, 0xff, 0x00, 0x00, 0x02}, // smul.d c b  
	{0x984b, &op_smul,	  3,   1, 255, 0xff, 0x00, 0x00, 0x02}, // smul.d d b  
	{0x984c, &op_smul,	  4,   1, 255, 0xff, 0x00, 0x00, 0x02}, // smul.d e b  
	{0x984d, &op_smul,	  5,   1, 255, 0xff, 0x00, 0x00, 0x02}, // smul.d f b  
	{0x984e, &op_smul,	  6,   1, 255, 0xff, 0x00, 0x00, 0x02}, // smul.d g b  
	{0x984f, &op_smul,	  7,   1, 255, 0xff, 0x00, 0x00, 0x02}, // smul.d h b  
	{0x9850, &op_smul,	  0,   2, 255, 0xff, 0x00, 0x00, 0x02}, // smul.d a c  
	{0x9851, &op_smul,	  1,   2, 255, 0xff, 0x00, 0x00, 0x02}, // smul.d b c  
	{0x9852, &op_smul,	  2,   2, 255, 0xff, 0x00, 0x00, 0x02}, // smul.d c c  
	{0x9853, &op_smul,	  3,   2, 255, 0xff, 0x00, 0x00, 0x02}, // smul.d d c  
	{0x9854, &op_smul,	  4,   2, 255, 0xff, 0x00, 0x00, 0x02}, // smul.d e c  
	{0x9855, &op_smul,	  5,   2, 255, 0xff, 0x00, 0x00, 0x02}, // smul.d f c  
	{0x9856, &op_smul,	  6,   2, 255, 0xff, 0x00, 0x00, 0x02}, // smul.d g c  
	{0x9857, &op_smul,	  7,   2, 255, 0xff, 0x00, 0x00, 0x02}, // smul.d h c  
	{0x9858, &op_smul,	  0,   3, 255, 0xff, 0x00, 0x00, 0x02}, // smul.d a d  
	{0x9859, &op_smul,	  1,   3, 255, 0xff, 0x00, 0x00, 0x02}, // smul.d b d  
	{0x985a, &op_smul,	  2,   3, 255, 0xff, 0x00, 0x00, 0x02}, // smul.d c d  
	{0x985b, &op_smul,	  3,   3, 255, 0xff, 0x00, 0x00, 0x02}, // smul.d d d  
	{0x985c, &op_smul,	  4,   3, 255, 0xff, 0x00, 0x00, 0x02}, // smul.d e d  
	{0x985d, &op_smul,	  5,   3, 255, 0xff, 0x00, 0x00, 0x02}, // smul.d f d  
	{0x985e, &op_smul,	  6,   3, 255, 0xff, 0x00, 0x00, 0x02}, // smul.d g d  
	{0x985f, &op_smul,	  7,   3, 255, 0xff, 0x00, 0x00, 0x02}, // smul.d h d  
	{0x9860, &op_smul,	  0,   4, 255, 0xff, 0x00, 0x00, 0x02}, // smul.d a e  
	{0x9861, &op_smul,	  1,   4, 255, 0xff, 0x00, 0x00, 0x02}, // smul.d b e  
	{0x9862, &op_smul,	  2,   4, 255, 0xff, 0x00, 0x00, 0x02}, // smul.d c e  
	{0x9863, &op_smul,	  3,   4, 255, 0xff, 0x00, 0x00, 0x02}, // smul.d d e  
	{0x9864, &op_smul,	  4,   4, 255, 0xff, 0x00, 0x00, 0x02}, // smul.d e e  
	{0x9865, &op_smul,	  5,   4, 255, 0xff, 0x00, 0x00, 0x02}, // smul.d f e  
	{0x9866, &op_smul,	  6,   4, 255, 0xff, 0x00, 0x00, 0x02}, // smul.d g e  
	{0x9867, &op_smul,	  7,   4, 255, 0xff, 0x00, 0x00, 0x02}, // smul.d h e  
	{0x9868, &op_smul,	  0,   5, 255, 0xff, 0x00, 0x00, 0x02}, // smul.d a f  
	{0x9869, &op_smul,	  1,   5, 255, 0xff, 0x00, 0x00, 0x02}, // smul.d b f  
	{0x986a, &op_smul,	  2,   5, 255, 0xff, 0x00, 0x00, 0x02}, // smul.d c f  
	{0x986b, &op_smul,	  3,   5, 255, 0xff, 0x00, 0x00, 0x02}, // smul.d d f  
	{0x986c, &op_smul,	  4,   5, 255, 0xff, 0x00, 0x00, 0x02}, // smul.d e f  
	{0x986d, &op_smul,	  5,   5, 255, 0xff, 0x00, 0x00, 0x02}, // smul.d f f  
	{0x986e, &op_smul,	  6,   5, 255, 0xff, 0x00, 0x00, 0x02}, // smul.d g f  
	{0x986f, &op_smul,	  7,   5, 255, 0xff, 0x00, 0x00, 0x02}, // smul.d h f  
	{0x9870, &op_smul,	  0,   6, 255, 0xff, 0x00, 0x00, 0x02}, // smul.d a g  
	{0x9871, &op_smul,	  1,   6, 255, 0xff, 0x00, 0x00, 0x02}, // smul.d b g  
	{0x9872, &op_smul,	  2,   6, 255, 0xff, 0x00, 0x00, 0x02}, // smul.d c g  
	{0x9873, &op_smul,	  3,   6, 255, 0xff, 0x00, 0x00, 0x02}, // smul.d d g  
	{0x9874, &op_smul,	  4,   6, 255, 0xff, 0x00, 0x00, 0x02}, // smul.d e g  
	{0x9875, &op_smul,	  5,   6, 255, 0xff, 0x00, 0x00, 0x02}, // smul.d f g  
	{0x9876, &op_smul,	  6,   6, 255, 0xff, 0x00, 0x00, 0x02}, // smul.d g g  
	{0x9877, &op_smul,	  7,   6, 255, 0xff, 0x00, 0x00, 0x02}, // smul.d h g  
	{0x9878, &op_smul,	  0,   7, 255, 0xff, 0x00, 0x00, 0x02}, // smul.d a h  
	{0x9879, &op_smul,	  1,   7, 255, 0xff, 0x00, 0x00, 0x02}, // smul.d b h  
	{0x987a, &op_smul,	  2,   7, 255, 0xff, 0x00, 0x00, 0x02}, // smul.d c h  
	{0x987b, &op_smul,	  3,   7, 255, 0xff, 0x00, 0x00, 0x02}, // smul.d d h  
	{0x987c, &op_smul,	  4,   7, 255, 0xff, 0x00, 0x00, 0x02}, // smul.d e h  
	{0x987d, &op_smul,	  5,   7, 255, 0xff, 0x00, 0x00, 0x02}, // smul.d f h  
	{0x987e, &op_smul,	  6,   7, 255, 0xff, 0x00, 0x00, 0x02}, // smul.d g h  
	{0x987f, &op_smul,	  7,   7, 255, 0xff, 0x00, 0x00, 0x02}, // smul.d h h  
	{0x9880, &op_smul,	  0,   0, 255, 0xff, 0x00, 0x00, 0x04}, // smul a a  
	{0x9881, &op_smul,	  1,   0, 255, 0xff, 0x00, 0x00, 0x04}, // smul b a  
	{0x9882, &op_smul,	  2,   0, 255, 0xff, 0x00, 0x00, 0x04}, // smul c a  
	{0x9883, &op_smul,	  3,   0, 255, 0xff, 0x00, 0x00, 0x04}, // smul d a  
	{0x9884, &op_smul,	  4,   0, 255, 0xff, 0x00, 0x00, 0x04}, // smul e a  
	{0x9885, &op_smul,	  5,   0, 255, 0xff, 0x00, 0x00, 0x04}, // smul f a  
	{0x9886, &op_smul,	  6,   0, 255, 0xff, 0x00, 0x00, 0x04}, // smul g a  
	{0x9887, &op_smul,	  7,   0, 255, 0xff, 0x00, 0x00, 0x04}, // smul h a  
	{0x9888, &op_smul,	  0,   1, 255, 0xff, 0x00, 0x00, 0x04}, // smul a b  
	{0x9889, &op_smul,	  1,   1, 255, 0xff, 0x00, 0x00, 0x04}, // smul b b  
	{0x988a, &op_smul,	  2,   1, 255, 0xff, 0x00, 0x00, 0x04}, // smul c b  
	{0x988b, &op_smul,	  3,   1, 255, 0xff, 0x00, 0x00, 0x04}, // smul d b  
	{0x988c, &op_smul,	  4,   1, 255, 0xff, 0x00, 0x00, 0x04}, // smul e b  
	{0x988d, &op_smul,	  5,   1, 255, 0xff, 0x00, 0x00, 0x04}, // smul f b  
	{0x988e, &op_smul,	  6,   1, 255, 0xff, 0x00, 0x00, 0x04}, // smul g b  
	{0x988f, &op_smul,	  7,   1, 255, 0xff, 0x00, 0x00, 0x04}, // smul h b  
	{0x9890, &op_smul,	  0,   2, 255, 0xff, 0x00, 0x00, 0x04}, // smul a c  
	{0x9891, &op_smul,	  1,   2, 255, 0xff, 0x00, 0x00, 0x04}, // smul b c  
	{0x9892, &op_smul,	  2,   2, 255, 0xff, 0x00, 0x00, 0x04}, // smul c c  
	{0x9893, &op_smul,	  3,   2, 255, 0xff, 0x00, 0x00, 0x04}, // smul d c  
	{0x9894, &op_smul,	  4,   2, 255, 0xff, 0x00, 0x00, 0x04}, // smul e c  
	{0x9895, &op_smul,	  5,   2, 255, 0xff, 0x00, 0x00, 0x04}, // smul f c  
	{0x9896, &op_smul,	  6,   2, 255, 0xff, 0x00, 0x00, 0x04}, // smul g c  
	{0x9897, &op_smul,	  7,   2, 255, 0xff, 0x00, 0x00, 0x04}, // smul h c  
	{0x9898, &op_smul,	  0,   3, 255, 0xff, 0x00, 0x00, 0x04}, // smul a d  
	{0x9899, &op_smul,	  1,   3, 255, 0xff, 0x00, 0x00, 0x04}, // smul b d  
	{0x989a, &op_smul,	  2,   3, 255, 0xff, 0x00, 0x00, 0x04}, // smul c d  
	{0x989b, &op_smul,	  3,   3, 255, 0xff, 0x00, 0x00, 0x04}, // smul d d  
	{0x989c, &op_smul,	  4,   3, 255, 0xff, 0x00, 0x00, 0x04}, // smul e d  
	{0x989d, &op_smul,	  5,   3, 255, 0xff, 0x00, 0x00, 0x04}, // smul f d  
	{0x989e, &op_smul,	  6,   3, 255, 0xff, 0x00, 0x00, 0x04}, // smul g d  
	{0x989f, &op_smul,	  7,   3, 255, 0xff, 0x00, 0x00, 0x04}, // smul h d  
	{0x98a0, &op_smul,	  0,   4, 255, 0xff, 0x00, 0x00, 0x04}, // smul a e  
	{0x98a1, &op_smul,	  1,   4, 255, 0xff, 0x00, 0x00, 0x04}, // smul b e  
	{0x98a2, &op_smul,	  2,   4, 255, 0xff, 0x00, 0x00, 0x04}, // smul c e  
	{0x98a3, &op_smul,	  3,   4, 255, 0xff, 0x00, 0x00, 0x04}, // smul d e  
	{0x98a4, &op_smul,	  4,   4, 255, 0xff, 0x00, 0x00, 0x04}, // smul e e  
	{0x98a5, &op_smul,	  5,   4, 255, 0xff, 0x00, 0x00, 0x04}, // smul f e  
	{0x98a6, &op_smul,	  6,   4, 255, 0xff, 0x00, 0x00, 0x04}, // smul g e  
	{0x98a7, &op_smul,	  7,   4, 255, 0xff, 0x00, 0x00, 0x04}, // smul h e  
	{0x98a8, &op_smul,	  0,   5, 255, 0xff, 0x00, 0x00, 0x04}, // smul a f  
	{0x98a9, &op_smul,	  1,   5, 255, 0xff, 0x00, 0x00, 0x04}, // smul b f  
	{0x98aa, &op_smul,	  2,   5, 255, 0xff, 0x00, 0x00, 0x04}, // smul c f  
	{0x98ab, &op_smul,	  3,   5, 255, 0xff, 0x00, 0x00, 0x04}, // smul d f  
	{0x98ac, &op_smul,	  4,   5, 255, 0xff, 0x00, 0x00, 0x04}, // smul e f  
	{0x98ad, &op_smul,	  5,   5, 255, 0xff, 0x00, 0x00, 0x04}, // smul f f  
	{0x98ae, &op_smul,	  6,   5, 255, 0xff, 0x00, 0x00, 0x04}, // smul g f  
	{0x98af, &op_smul,	  7,   5, 255, 0xff, 0x00, 0x00, 0x04}, // smul h f  
	{0x98b0, &op_smul,	  0,   6, 255, 0xff, 0x00, 0x00, 0x04}, // smul a g  
	{0x98b1, &op_smul,	  1,   6, 255, 0xff, 0x00, 0x00, 0x04}, // smul b g  
	{0x98b2, &op_smul,	  2,   6, 255, 0xff, 0x00, 0x00, 0x04}, // smul c g  
	{0x98b3, &op_smul,	  3,   6, 255, 0xff, 0x00, 0x00, 0x04}, // smul d g  
	{0x98b4, &op_smul,	  4,   6, 255, 0xff, 0x00, 0x00, 0x04}, // smul e g  
	{0x98b5, &op_smul,	  5,   6, 255, 0xff, 0x00, 0x00, 0x04}, // smul f g  
	{0x98b6, &op_smul,	  6,   6, 255, 0xff, 0x00, 0x00, 0x04}, // smul g g  
	{0x98b7, &op_smul,	  7,   6, 255, 0xff, 0x00, 0x00, 0x04}, // smul h g  
	{0x98b8, &op_smul,	  0,   7, 255, 0xff, 0x00, 0x00, 0x04}, // smul a h  
	{0x98b9, &op_smul,	  1,   7, 255, 0xff, 0x00, 0x00, 0x04}, // smul b h  
	{0x98ba, &op_smul,	  2,   7, 255, 0xff, 0x00, 0x00, 0x04}, // smul c h  
	{0x98bb, &op_smul,	  3,   7, 255, 0xff, 0x00, 0x00, 0x04}, // smul d h  
	{0x98bc, &op_smul,	  4,   7, 255, 0xff, 0x00, 0x00, 0x04}, // smul e h  
	{0x98bd, &op_smul,	  5,   7, 255, 0xff, 0x00, 0x00, 0x04}, // smul f h  
	{0x98be, &op_smul,	  6,   7, 255, 0xff, 0x00, 0x00, 0x04}, // smul g h  
	{0x98bf, &op_smul,	  7,   7, 255, 0xff, 0x00, 0x00, 0x04}, // smul h h  
	{0x9900, &op_smul,	  0,   0, 255, 0xff, 0x01, 0x00, 0x01}, // smul.wr a a  
	{0x9901, &op_smul,	  1,   0, 255, 0xff, 0x01, 0x00, 0x01}, // smul.wr b a  
	{0x9902, &op_smul,	  2,   0, 255, 0xff, 0x01, 0x00, 0x01}, // smul.wr c a  
	{0x9903, &op_smul,	  3,   0, 255, 0xff, 0x01, 0x00, 0x01}, // smul.wr d a  
	{0x9904, &op_smul,	  4,   0, 255, 0xff, 0x01, 0x00, 0x01}, // smul.wr e a  
	{0x9905, &op_smul,	  5,   0, 255, 0xff, 0x01, 0x00, 0x01}, // smul.wr f a  
	{0x9906, &op_smul,	  6,   0, 255, 0xff, 0x01, 0x00, 0x01}, // smul.wr g a  
	{0x9907, &op_smul,	  7,   0, 255, 0xff, 0x01, 0x00, 0x01}, // smul.wr h a  
	{0x9908, &op_smul,	  0,   1, 255, 0xff, 0x01, 0x00, 0x01}, // smul.wr a b  
	{0x9909, &op_smul,	  1,   1, 255, 0xff, 0x01, 0x00, 0x01}, // smul.wr b b  
	{0x990a, &op_smul,	  2,   1, 255, 0xff, 0x01, 0x00, 0x01}, // smul.wr c b  
	{0x990b, &op_smul,	  3,   1, 255, 0xff, 0x01, 0x00, 0x01}, // smul.wr d b  
	{0x990c, &op_smul,	  4,   1, 255, 0xff, 0x01, 0x00, 0x01}, // smul.wr e b  
	{0x990d, &op_smul,	  5,   1, 255, 0xff, 0x01, 0x00, 0x01}, // smul.wr f b  
	{0x990e, &op_smul,	  6,   1, 255, 0xff, 0x01, 0x00, 0x01}, // smul.wr g b  
	{0x990f, &op_smul,	  7,   1, 255, 0xff, 0x01, 0x00, 0x01}, // smul.wr h b  
	{0x9910, &op_smul,	  0,   2, 255, 0xff, 0x01, 0x00, 0x01}, // smul.wr a c  
	{0x9911, &op_smul,	  1,   2, 255, 0xff, 0x01, 0x00, 0x01}, // smul.wr b c  
	{0x9912, &op_smul,	  2,   2, 255, 0xff, 0x01, 0x00, 0x01}, // smul.wr c c  
	{0x9913, &op_smul,	  3,   2, 255, 0xff, 0x01, 0x00, 0x01}, // smul.wr d c  
	{0x9914, &op_smul,	  4,   2, 255, 0xff, 0x01, 0x00, 0x01}, // smul.wr e c  
	{0x9915, &op_smul,	  5,   2, 255, 0xff, 0x01, 0x00, 0x01}, // smul.wr f c  
	{0x9916, &op_smul,	  6,   2, 255, 0xff, 0x01, 0x00, 0x01}, // smul.wr g c  
	{0x9917, &op_smul,	  7,   2, 255, 0xff, 0x01, 0x00, 0x01}, // smul.wr h c  
	{0x9918, &op_smul,	  0,   3, 255, 0xff, 0x01, 0x00, 0x01}, // smul.wr a d  
	{0x9919, &op_smul,	  1,   3, 255, 0xff, 0x01, 0x00, 0x01}, // smul.wr b d  
	{0x991a, &op_smul,	  2,   3, 255, 0xff, 0x01, 0x00, 0x01}, // smul.wr c d  
	{0x991b, &op_smul,	  3,   3, 255, 0xff, 0x01, 0x00, 0x01}, // smul.wr d d  
	{0x991c, &op_smul,	  4,   3, 255, 0xff, 0x01, 0x00, 0x01}, // smul.wr e d  
	{0x991d, &op_smul,	  5,   3, 255, 0xff, 0x01, 0x00, 0x01}, // smul.wr f d  
	{0x991e, &op_smul,	  6,   3, 255, 0xff, 0x01, 0x00, 0x01}, // smul.wr g d  
	{0x991f, &op_smul,	  7,   3, 255, 0xff, 0x01, 0x00, 0x01}, // smul.wr h d  
	{0x9920, &op_smul,	  0,   4, 255, 0xff, 0x01, 0x00, 0x01}, // smul.wr a e  
	{0x9921, &op_smul,	  1,   4, 255, 0xff, 0x01, 0x00, 0x01}, // smul.wr b e  
	{0x9922, &op_smul,	  2,   4, 255, 0xff, 0x01, 0x00, 0x01}, // smul.wr c e  
	{0x9923, &op_smul,	  3,   4, 255, 0xff, 0x01, 0x00, 0x01}, // smul.wr d e  
	{0x9924, &op_smul,	  4,   4, 255, 0xff, 0x01, 0x00, 0x01}, // smul.wr e e  
	{0x9925, &op_smul,	  5,   4, 255, 0xff, 0x01, 0x00, 0x01}, // smul.wr f e  
	{0x9926, &op_smul,	  6,   4, 255, 0xff, 0x01, 0x00, 0x01}, // smul.wr g e  
	{0x9927, &op_smul,	  7,   4, 255, 0xff, 0x01, 0x00, 0x01}, // smul.wr h e  
	{0x9928, &op_smul,	  0,   5, 255, 0xff, 0x01, 0x00, 0x01}, // smul.wr a f  
	{0x9929, &op_smul,	  1,   5, 255, 0xff, 0x01, 0x00, 0x01}, // smul.wr b f  
	{0x992a, &op_smul,	  2,   5, 255, 0xff, 0x01, 0x00, 0x01}, // smul.wr c f  
	{0x992b, &op_smul,	  3,   5, 255, 0xff, 0x01, 0x00, 0x01}, // smul.wr d f  
	{0x992c, &op_smul,	  4,   5, 255, 0xff, 0x01, 0x00, 0x01}, // smul.wr e f  
	{0x992d, &op_smul,	  5,   5, 255, 0xff, 0x01, 0x00, 0x01}, // smul.wr f f  
	{0x992e, &op_smul,	  6,   5, 255, 0xff, 0x01, 0x00, 0x01}, // smul.wr g f  
	{0x992f, &op_smul,	  7,   5, 255, 0xff, 0x01, 0x00, 0x01}, // smul.wr h f  
	{0x9930, &op_smul,	  0,   6, 255, 0xff, 0x01, 0x00, 0x01}, // smul.wr a g  
	{0x9931, &op_smul,	  1,   6, 255, 0xff, 0x01, 0x00, 0x01}, // smul.wr b g  
	{0x9932, &op_smul,	  2,   6, 255, 0xff, 0x01, 0x00, 0x01}, // smul.wr c g  
	{0x9933, &op_smul,	  3,   6, 255, 0xff, 0x01, 0x00, 0x01}, // smul.wr d g  
	{0x9934, &op_smul,	  4,   6, 255, 0xff, 0x01, 0x00, 0x01}, // smul.wr e g  
	{0x9935, &op_smul,	  5,   6, 255, 0xff, 0x01, 0x00, 0x01}, // smul.wr f g  
	{0x9936, &op_smul,	  6,   6, 255, 0xff, 0x01, 0x00, 0x01}, // smul.wr g g  
	{0x9937, &op_smul,	  7,   6, 255, 0xff, 0x01, 0x00, 0x01}, // smul.wr h g  
	{0x9938, &op_smul,	  0,   7, 255, 0xff, 0x01, 0x00, 0x01}, // smul.wr a h  
	{0x9939, &op_smul,	  1,   7, 255, 0xff, 0x01, 0x00, 0x01}, // smul.wr b h  
	{0x993a, &op_smul,	  2,   7, 255, 0xff, 0x01, 0x00, 0x01}, // smul.wr c h  
	{0x993b, &op_smul,	  3,   7, 255, 0xff, 0x01, 0x00, 0x01}, // smul.wr d h  
	{0x993c, &op_smul,	  4,   7, 255, 0xff, 0x01, 0x00, 0x01}, // smul.wr e h  
	{0x993d, &op_smul,	  5,   7, 255, 0xff, 0x01, 0x00, 0x01}, // smul.wr f h  
	{0x993e, &op_smul,	  6,   7, 255, 0xff, 0x01, 0x00, 0x01}, // smul.wr g h  
	{0x993f, &op_smul,	  7,   7, 255, 0xff, 0x01, 0x00, 0x01}, // smul.wr h h  
	{0x9940, &op_smul,	  0,   0, 255, 0xff, 0x01, 0x00, 0x02}, // smul.dr a a  
	{0x9941, &op_smul,	  1,   0, 255, 0xff, 0x01, 0x00, 0x02}, // smul.dr b a  
	{0x9942, &op_smul,	  2,   0, 255, 0xff, 0x01, 0x00, 0x02}, // smul.dr c a  
	{0x9943, &op_smul,	  3,   0, 255, 0xff, 0x01, 0x00, 0x02}, // smul.dr d a  
	{0x9944, &op_smul,	  4,   0, 255, 0xff, 0x01, 0x00, 0x02}, // smul.dr e a  
	{0x9945, &op_smul,	  5,   0, 255, 0xff, 0x01, 0x00, 0x02}, // smul.dr f a  
	{0x9946, &op_smul,	  6,   0, 255, 0xff, 0x01, 0x00, 0x02}, // smul.dr g a  
	{0x9947, &op_smul,	  7,   0, 255, 0xff, 0x01, 0x00, 0x02}, // smul.dr h a  
	{0x9948, &op_smul,	  0,   1, 255, 0xff, 0x01, 0x00, 0x02}, // smul.dr a b  
	{0x9949, &op_smul,	  1,   1, 255, 0xff, 0x01, 0x00, 0x02}, // smul.dr b b  
	{0x994a, &op_smul,	  2,   1, 255, 0xff, 0x01, 0x00, 0x02}, // smul.dr c b  
	{0x994b, &op_smul,	  3,   1, 255, 0xff, 0x01, 0x00, 0x02}, // smul.dr d b  
	{0x994c, &op_smul,	  4,   1, 255, 0xff, 0x01, 0x00, 0x02}, // smul.dr e b  
	{0x994d, &op_smul,	  5,   1, 255, 0xff, 0x01, 0x00, 0x02}, // smul.dr f b  
	{0x994e, &op_smul,	  6,   1, 255, 0xff, 0x01, 0x00, 0x02}, // smul.dr g b  
	{0x994f, &op_smul,	  7,   1, 255, 0xff, 0x01, 0x00, 0x02}, // smul.dr h b  
	{0x9950, &op_smul,	  0,   2, 255, 0xff, 0x01, 0x00, 0x02}, // smul.dr a c  
	{0x9951, &op_smul,	  1,   2, 255, 0xff, 0x01, 0x00, 0x02}, // smul.dr b c  
	{0x9952, &op_smul,	  2,   2, 255, 0xff, 0x01, 0x00, 0x02}, // smul.dr c c  
	{0x9953, &op_smul,	  3,   2, 255, 0xff, 0x01, 0x00, 0x02}, // smul.dr d c  
	{0x9954, &op_smul,	  4,   2, 255, 0xff, 0x01, 0x00, 0x02}, // smul.dr e c  
	{0x9955, &op_smul,	  5,   2, 255, 0xff, 0x01, 0x00, 0x02}, // smul.dr f c  
	{0x9956, &op_smul,	  6,   2, 255, 0xff, 0x01, 0x00, 0x02}, // smul.dr g c  
	{0x9957, &op_smul,	  7,   2, 255, 0xff, 0x01, 0x00, 0x02}, // smul.dr h c  
	{0x9958, &op_smul,	  0,   3, 255, 0xff, 0x01, 0x00, 0x02}, // smul.dr a d  
	{0x9959, &op_smul,	  1,   3, 255, 0xff, 0x01, 0x00, 0x02}, // smul.dr b d  
	{0x995a, &op_smul,	  2,   3, 255, 0xff, 0x01, 0x00, 0x02}, // smul.dr c d  
	{0x995b, &op_smul,	  3,   3, 255, 0xff, 0x01, 0x00, 0x02}, // smul.dr d d  
	{0x995c, &op_smul,	  4,   3, 255, 0xff, 0x01, 0x00, 0x02}, // smul.dr e d  
	{0x995d, &op_smul,	  5,   3, 255, 0xff, 0x01, 0x00, 0x02}, // smul.dr f d  
	{0x995e, &op_smul,	  6,   3, 255, 0xff, 0x01, 0x00, 0x02}, // smul.dr g d  
	{0x995f, &op_smul,	  7,   3, 255, 0xff, 0x01, 0x00, 0x02}, // smul.dr h d  
	{0x9960, &op_smul,	  0,   4, 255, 0xff, 0x01, 0x00, 0x02}, // smul.dr a e  
	{0x9961, &op_smul,	  1,   4, 255, 0xff, 0x01, 0x00, 0x02}, // smul.dr b e  
	{0x9962, &op_smul,	  2,   4, 255, 0xff, 0x01, 0x00, 0x02}, // smul.dr c e  
	{0x9963, &op_smul,	  3,   4, 255, 0xff, 0x01, 0x00, 0x02}, // smul.dr d e  
	{0x9964, &op_smul,	  4,   4, 255, 0xff, 0x01, 0x00, 0x02}, // smul.dr e e  
	{0x9965, &op_smul,	  5,   4, 255, 0xff, 0x01, 0x00, 0x02}, // smul.dr f e  
	{0x9966, &op_smul,	  6,   4, 255, 0xff, 0x01, 0x00, 0x02}, // smul.dr g e  
	{0x9967, &op_smul,	  7,   4, 255, 0xff, 0x01, 0x00, 0x02}, // smul.dr h e  
	{0x9968, &op_smul,	  0,   5, 255, 0xff, 0x01, 0x00, 0x02}, // smul.dr a f  
	{0x9969, &op_smul,	  1,   5, 255, 0xff, 0x01, 0x00, 0x02}, // smul.dr b f  
	{0x996a, &op_smul,	  2,   5, 255, 0xff, 0x01, 0x00, 0x02}, // smul.dr c f  
	{0x996b, &op_smul,	  3,   5, 255, 0xff, 0x01, 0x00, 0x02}, // smul.dr d f  
	{0x996c, &op_smul,	  4,   5, 255, 0xff, 0x01, 0x00, 0x02}, // smul.dr e f  
	{0x996d, &op_smul,	  5,   5, 255, 0xff, 0x01, 0x00, 0x02}, // smul.dr f f  
	{0x996e, &op_smul,	  6,   5, 255, 0xff, 0x01, 0x00, 0x02}, // smul.dr g f  
	{0x996f, &op_smul,	  7,   5, 255, 0xff, 0x01, 0x00, 0x02}, // smul.dr h f  
	{0x9970, &op_smul,	  0,   6, 255, 0xff, 0x01, 0x00, 0x02}, // smul.dr a g  
	{0x9971, &op_smul,	  1,   6, 255, 0xff, 0x01, 0x00, 0x02}, // smul.dr b g  
	{0x9972, &op_smul,	  2,   6, 255, 0xff, 0x01, 0x00, 0x02}, // smul.dr c g  
	{0x9973, &op_smul,	  3,   6, 255, 0xff, 0x01, 0x00, 0x02}, // smul.dr d g  
	{0x9974, &op_smul,	  4,   6, 255, 0xff, 0x01, 0x00, 0x02}, // smul.dr e g  
	{0x9975, &op_smul,	  5,   6, 255, 0xff, 0x01, 0x00, 0x02}, // smul.dr f g  
	{0x9976, &op_smul,	  6,   6, 255, 0xff, 0x01, 0x00, 0x02}, // smul.dr g g  
	{0x9977, &op_smul,	  7,   6, 255, 0xff, 0x01, 0x00, 0x02}, // smul.dr h g  
	{0x9978, &op_smul,	  0,   7, 255, 0xff, 0x01, 0x00, 0x02}, // smul.dr a h  
	{0x9979, &op_smul,	  1,   7, 255, 0xff, 0x01, 0x00, 0x02}, // smul.dr b h  
	{0x997a, &op_smul,	  2,   7, 255, 0xff, 0x01, 0x00, 0x02}, // smul.dr c h  
	{0x997b, &op_smul,	  3,   7, 255, 0xff, 0x01, 0x00, 0x02}, // smul.dr d h  
	{0x997c, &op_smul,	  4,   7, 255, 0xff, 0x01, 0x00, 0x02}, // smul.dr e h  
	{0x997d, &op_smul,	  5,   7, 255, 0xff, 0x01, 0x00, 0x02}, // smul.dr f h  
	{0x997e, &op_smul,	  6,   7, 255, 0xff, 0x01, 0x00, 0x02}, // smul.dr g h  
	{0x997f, &op_smul,	  7,   7, 255, 0xff, 0x01, 0x00, 0x02}, // smul.dr h h  
	{0x9980, &op_smul,	  0,   0, 255, 0xff, 0x01, 0x00, 0x04}, // smul.r a a  
	{0x9981, &op_smul,	  1,   0, 255, 0xff, 0x01, 0x00, 0x04}, // smul.r b a  
	{0x9982, &op_smul,	  2,   0, 255, 0xff, 0x01, 0x00, 0x04}, // smul.r c a  
	{0x9983, &op_smul,	  3,   0, 255, 0xff, 0x01, 0x00, 0x04}, // smul.r d a  
	{0x9984, &op_smul,	  4,   0, 255, 0xff, 0x01, 0x00, 0x04}, // smul.r e a  
	{0x9985, &op_smul,	  5,   0, 255, 0xff, 0x01, 0x00, 0x04}, // smul.r f a  
	{0x9986, &op_smul,	  6,   0, 255, 0xff, 0x01, 0x00, 0x04}, // smul.r g a  
	{0x9987, &op_smul,	  7,   0, 255, 0xff, 0x01, 0x00, 0x04}, // smul.r h a  
	{0x9988, &op_smul,	  0,   1, 255, 0xff, 0x01, 0x00, 0x04}, // smul.r a b  
	{0x9989, &op_smul,	  1,   1, 255, 0xff, 0x01, 0x00, 0x04}, // smul.r b b  
	{0x998a, &op_smul,	  2,   1, 255, 0xff, 0x01, 0x00, 0x04}, // smul.r c b  
	{0x998b, &op_smul,	  3,   1, 255, 0xff, 0x01, 0x00, 0x04}, // smul.r d b  
	{0x998c, &op_smul,	  4,   1, 255, 0xff, 0x01, 0x00, 0x04}, // smul.r e b  
	{0x998d, &op_smul,	  5,   1, 255, 0xff, 0x01, 0x00, 0x04}, // smul.r f b  
	{0x998e, &op_smul,	  6,   1, 255, 0xff, 0x01, 0x00, 0x04}, // smul.r g b  
	{0x998f, &op_smul,	  7,   1, 255, 0xff, 0x01, 0x00, 0x04}, // smul.r h b  
	{0x9990, &op_smul,	  0,   2, 255, 0xff, 0x01, 0x00, 0x04}, // smul.r a c  
	{0x9991, &op_smul,	  1,   2, 255, 0xff, 0x01, 0x00, 0x04}, // smul.r b c  
	{0x9992, &op_smul,	  2,   2, 255, 0xff, 0x01, 0x00, 0x04}, // smul.r c c  
	{0x9993, &op_smul,	  3,   2, 255, 0xff, 0x01, 0x00, 0x04}, // smul.r d c  
	{0x9994, &op_smul,	  4,   2, 255, 0xff, 0x01, 0x00, 0x04}, // smul.r e c  
	{0x9995, &op_smul,	  5,   2, 255, 0xff, 0x01, 0x00, 0x04}, // smul.r f c  
	{0x9996, &op_smul,	  6,   2, 255, 0xff, 0x01, 0x00, 0x04}, // smul.r g c  
	{0x9997, &op_smul,	  7,   2, 255, 0xff, 0x01, 0x00, 0x04}, // smul.r h c  
	{0x9998, &op_smul,	  0,   3, 255, 0xff, 0x01, 0x00, 0x04}, // smul.r a d  
	{0x9999, &op_smul,	  1,   3, 255, 0xff, 0x01, 0x00, 0x04}, // smul.r b d  
	{0x999a, &op_smul,	  2,   3, 255, 0xff, 0x01, 0x00, 0x04}, // smul.r c d  
	{0x999b, &op_smul,	  3,   3, 255, 0xff, 0x01, 0x00, 0x04}, // smul.r d d  
	{0x999c, &op_smul,	  4,   3, 255, 0xff, 0x01, 0x00, 0x04}, // smul.r e d  
	{0x999d, &op_smul,	  5,   3, 255, 0xff, 0x01, 0x00, 0x04}, // smul.r f d  
	{0x999e, &op_smul,	  6,   3, 255, 0xff, 0x01, 0x00, 0x04}, // smul.r g d  
	{0x999f, &op_smul,	  7,   3, 255, 0xff, 0x01, 0x00, 0x04}, // smul.r h d  
	{0x99a0, &op_smul,	  0,   4, 255, 0xff, 0x01, 0x00, 0x04}, // smul.r a e  
	{0x99a1, &op_smul,	  1,   4, 255, 0xff, 0x01, 0x00, 0x04}, // smul.r b e  
	{0x99a2, &op_smul,	  2,   4, 255, 0xff, 0x01, 0x00, 0x04}, // smul.r c e  
	{0x99a3, &op_smul,	  3,   4, 255, 0xff, 0x01, 0x00, 0x04}, // smul.r d e  
	{0x99a4, &op_smul,	  4,   4, 255, 0xff, 0x01, 0x00, 0x04}, // smul.r e e  
	{0x99a5, &op_smul,	  5,   4, 255, 0xff, 0x01, 0x00, 0x04}, // smul.r f e  
	{0x99a6, &op_smul,	  6,   4, 255, 0xff, 0x01, 0x00, 0x04}, // smul.r g e  
	{0x99a7, &op_smul,	  7,   4, 255, 0xff, 0x01, 0x00, 0x04}, // smul.r h e  
	{0x99a8, &op_smul,	  0,   5, 255, 0xff, 0x01, 0x00, 0x04}, // smul.r a f  
	{0x99a9, &op_smul,	  1,   5, 255, 0xff, 0x01, 0x00, 0x04}, // smul.r b f  
	{0x99aa, &op_smul,	  2,   5, 255, 0xff, 0x01, 0x00, 0x04}, // smul.r c f  
	{0x99ab, &op_smul,	  3,   5, 255, 0xff, 0x01, 0x00, 0x04}, // smul.r d f  
	{0x99ac, &op_smul,	  4,   5, 255, 0xff, 0x01, 0x00, 0x04}, // smul.r e f  
	{0x99ad, &op_smul,	  5,   5, 255, 0xff, 0x01, 0x00, 0x04}, // smul.r f f  
	{0x99ae, &op_smul,	  6,   5, 255, 0xff, 0x01, 0x00, 0x04}, // smul.r g f  
	{0x99af, &op_smul,	  7,   5, 255, 0xff, 0x01, 0x00, 0x04}, // smul.r h f  
	{0x99b0, &op_smul,	  0,   6, 255, 0xff, 0x01, 0x00, 0x04}, // smul.r a g  
	{0x99b1, &op_smul,	  1,   6, 255, 0xff, 0x01, 0x00, 0x04}, // smul.r b g  
	{0x99b2, &op_smul,	  2,   6, 255, 0xff, 0x01, 0x00, 0x04}, // smul.r c g  
	{0x99b3, &op_smul,	  3,   6, 255, 0xff, 0x01, 0x00, 0x04}, // smul.r d g  
	{0x99b4, &op_smul,	  4,   6, 255, 0xff, 0x01, 0x00, 0x04}, // smul.r e g  
	{0x99b5, &op_smul,	  5,   6, 255, 0xff, 0x01, 0x00, 0x04}, // smul.r f g  
	{0x99b6, &op_smul,	  6,   6, 255, 0xff, 0x01, 0x00, 0x04}, // smul.r g g  
	{0x99b7, &op_smul,	  7,   6, 255, 0xff, 0x01, 0x00, 0x04}, // smul.r h g  
	{0x99b8, &op_smul,	  0,   7, 255, 0xff, 0x01, 0x00, 0x04}, // smul.r a h  
	{0x99b9, &op_smul,	  1,   7, 255, 0xff, 0x01, 0x00, 0x04}, // smul.r b h  
	{0x99ba, &op_smul,	  2,   7, 255, 0xff, 0x01, 0x00, 0x04}, // smul.r c h  
	{0x99bb, &op_smul,	  3,   7, 255, 0xff, 0x01, 0x00, 0x04}, // smul.r d h  
	{0x99bc, &op_smul,	  4,   7, 255, 0xff, 0x01, 0x00, 0x04}, // smul.r e h  
	{0x99bd, &op_smul,	  5,   7, 255, 0xff, 0x01, 0x00, 0x04}, // smul.r f h  
	{0x99be, &op_smul,	  6,   7, 255, 0xff, 0x01, 0x00, 0x04}, // smul.r g h  
	{0x99bf, &op_smul,	  7,   7, 255, 0xff, 0x01, 0x00, 0x04}, // smul.r h h  
	{0x98c8, &op_smul,	  0,   8, 255, 0xff, 0x00, 0x01, 0x01}, // smul.wi a <literal>  
	{0x98c9, &op_smul,	  1,   8, 255, 0xff, 0x00, 0x01, 0x01}, // smul.wi b <literal>  
	{0x98ca, &op_smul,	  2,   8, 255, 0xff, 0x00, 0x01, 0x01}, // smul.wi c <literal>  
	{0x98cb, &op_smul,	  3,   8, 255, 0xff, 0x00, 0x01, 0x01}, // smul.wi d <literal>  
	{0x98cc, &op_smul,	  4,   8, 255, 0xff, 0x00, 0x01, 0x01}, // smul.wi e <literal>  
	{0x98cd, &op_smul,	  5,   8, 255, 0xff, 0x00, 0x01, 0x01}, // smul.wi f <literal>  
	{0x98ce, &op_smul,	  6,   8, 255, 0xff, 0x00, 0x01, 0x01}, // smul.wi g <literal>  
	{0x98cf, &op_smul,	  7,   8, 255, 0xff, 0x00, 0x01, 0x01}, // smul.wi h <literal>  
	{0x98d0, &op_smul,	  0,   8, 255, 0xff, 0x00, 0x02, 0x02}, // smul.di a <literal>  
	{0x98d1, &op_smul,	  1,   8, 255, 0xff, 0x00, 0x02, 0x02}, // smul.di b <literal>  
	{0x98d2, &op_smul,	  2,   8, 255, 0xff, 0x00, 0x02, 0x02}, // smul.di c <literal>  
	{0x98d3, &op_smul,	  3,   8, 255, 0xff, 0x00, 0x02, 0x02}, // smul.di d <literal>  
	{0x98d4, &op_smul,	  4,   8, 255, 0xff, 0x00, 0x02, 0x02}, // smul.di e <literal>  
	{0x98d5, &op_smul,	  5,   8, 255, 0xff, 0x00, 0x02, 0x02}, // smul.di f <literal>  
	{0x98d6, &op_smul,	  6,   8, 255, 0xff, 0x00, 0x02, 0x02}, // smul.di g <literal>  
	{0x98d7, &op_smul,	  7,   8, 255, 0xff, 0x00, 0x02, 0x02}, // smul.di h <literal>  
	{0x98e0, &op_smul,	  0,   8, 255, 0xff, 0x00, 0x04, 0x04}, // smul.i a <literal>  
	{0x98e1, &op_smul,	  1,   8, 255, 0xff, 0x00, 0x04, 0x04}, // smul.i b <literal>  
	{0x98e2, &op_smul,	  2,   8, 255, 0xff, 0x00, 0x04, 0x04}, // smul.i c <literal>  
	{0x98e3, &op_smul,	  3,   8, 255, 0xff, 0x00, 0x04, 0x04}, // smul.i d <literal>  
	{0x98e4, &op_smul,	  4,   8, 255, 0xff, 0x00, 0x04, 0x04}, // smul.i e <literal>  
	{0x98e5, &op_smul,	  5,   8, 255, 0xff, 0x00, 0x04, 0x04}, // smul.i f <literal>  
	{0x98e6, &op_smul,	  6,   8, 255, 0xff, 0x00, 0x04, 0x04}, // smul.i g <literal>  
	{0x98e7, &op_smul,	  7,   8, 255, 0xff, 0x00, 0x04, 0x04}, // smul.i h <literal>  
	{0x99c8, &op_smul,	  0,   8, 255, 0xff, 0x01, 0x04, 0x01}, // smul.wri a <literal>  
	{0x99c9, &op_smul,	  1,   8, 255, 0xff, 0x01, 0x04, 0x01}, // smul.wri b <literal>  
	{0x99ca, &op_smul,	  2,   8, 255, 0xff, 0x01, 0x04, 0x01}, // smul.wri c <literal>  
	{0x99cb, &op_smul,	  3,   8, 255, 0xff, 0x01, 0x04, 0x01}, // smul.wri d <literal>  
	{0x99cc, &op_smul,	  4,   8, 255, 0xff, 0x01, 0x04, 0x01}, // smul.wri e <literal>  
	{0x99cd, &op_smul,	  5,   8, 255, 0xff, 0x01, 0x04, 0x01}, // smul.wri f <literal>  
	{0x99ce, &op_smul,	  6,   8, 255, 0xff, 0x01, 0x04, 0x01}, // smul.wri g <literal>  
	{0x99cf, &op_smul,	  7,   8, 255, 0xff, 0x01, 0x04, 0x01}, // smul.wri h <literal>  
	{0x99d0, &op_smul,	  0,   8, 255, 0xff, 0x01, 0x04, 0x02}, // smul.dri a <literal>  
	{0x99d1, &op_smul,	  1,   8, 255, 0xff, 0x01, 0x04, 0x02}, // smul.dri b <literal>  
	{0x99d2, &op_smul,	  2,   8, 255, 0xff, 0x01, 0x04, 0x02}, // smul.dri c <literal>  
	{0x99d3, &op_smul,	  3,   8, 255, 0xff, 0x01, 0x04, 0x02}, // smul.dri d <literal>  
	{0x99d4, &op_smul,	  4,   8, 255, 0xff, 0x01, 0x04, 0x02}, // smul.dri e <literal>  
	{0x99d5, &op_smul,	  5,   8, 255, 0xff, 0x01, 0x04, 0x02}, // smul.dri f <literal>  
	{0x99d6, &op_smul,	  6,   8, 255, 0xff, 0x01, 0x04, 0x02}, // smul.dri g <literal>  
	{0x99d7, &op_smul,	  7,   8, 255, 0xff, 0x01, 0x04, 0x02}, // smul.dri h <literal>  
	{0x99e0, &op_smul,	  0,   8, 255, 0xff, 0x01, 0x04, 0x04}, // smul.ri a <literal>  
	{0x99e1, &op_smul,	  1,   8, 255, 0xff, 0x01, 0x04, 0x04}, // smul.ri b <literal>  
	{0x99e2, &op_smul,	  2,   8, 255, 0xff, 0x01, 0x04, 0x04}, // smul.ri c <literal>  
	{0x99e3, &op_smul,	  3,   8, 255, 0xff, 0x01, 0x04, 0x04}, // smul.ri d <literal>  
	{0x99e4, &op_smul,	  4,   8, 255, 0xff, 0x01, 0x04, 0x04}, // smul.ri e <literal>  
	{0x99e5, &op_smul,	  5,   8, 255, 0xff, 0x01, 0x04, 0x04}, // smul.ri f <literal>  
	{0x99e6, &op_smul,	  6,   8, 255, 0xff, 0x01, 0x04, 0x04}, // smul.ri g <literal>  
	{0x99e7, &op_smul,	  7,   8, 255, 0xff, 0x01, 0x04, 0x04}, // smul.ri h <literal>  
	{0x9a00, &op_srsh,	  0,   0, 255, 0xff, 0x00, 0x00, 0x01}, // srsh.w a a  
	{0x9a01, &op_srsh,	  1,   0, 255, 0xff, 0x00, 0x00, 0x01}, // srsh.w b a  
	{0x9a02, &op_srsh,	  2,   0, 255, 0xff, 0x00, 0x00, 0x01}, // srsh.w c a  
	{0x9a03, &op_srsh,	  3,   0, 255, 0xff, 0x00, 0x00, 0x01}, // srsh.w d a  
	{0x9a04, &op_srsh,	  4,   0, 255, 0xff, 0x00, 0x00, 0x01}, // srsh.w e a  
	{0x9a05, &op_srsh,	  5,   0, 255, 0xff, 0x00, 0x00, 0x01}, // srsh.w f a  
	{0x9a06, &op_srsh,	  6,   0, 255, 0xff, 0x00, 0x00, 0x01}, // srsh.w g a  
	{0x9a07, &op_srsh,	  7,   0, 255, 0xff, 0x00, 0x00, 0x01}, // srsh.w h a  
	{0x9a08, &op_srsh,	  0,   1, 255, 0xff, 0x00, 0x00, 0x01}, // srsh.w a b  
	{0x9a09, &op_srsh,	  1,   1, 255, 0xff, 0x00, 0x00, 0x01}, // srsh.w b b  
	{0x9a0a, &op_srsh,	  2,   1, 255, 0xff, 0x00, 0x00, 0x01}, // srsh.w c b  
	{0x9a0b, &op_srsh,	  3,   1, 255, 0xff, 0x00, 0x00, 0x01}, // srsh.w d b  
	{0x9a0c, &op_srsh,	  4,   1, 255, 0xff, 0x00, 0x00, 0x01}, // srsh.w e b  
	{0x9a0d, &op_srsh,	  5,   1, 255, 0xff, 0x00, 0x00, 0x01}, // srsh.w f b  
	{0x9a0e, &op_srsh,	  6,   1, 255, 0xff, 0x00, 0x00, 0x01}, // srsh.w g b  
	{0x9a0f, &op_srsh,	  7,   1, 255, 0xff, 0x00, 0x00, 0x01}, // srsh.w h b  
	{0x9a10, &op_srsh,	  0,   2, 255, 0xff, 0x00, 0x00, 0x01}, // srsh.w a c  
	{0x9a11, &op_srsh,	  1,   2, 255, 0xff, 0x00, 0x00, 0x01}, // srsh.w b c  
	{0x9a12, &op_srsh,	  2,   2, 255, 0xff, 0x00, 0x00, 0x01}, // srsh.w c c  
	{0x9a13, &op_srsh,	  3,   2, 255, 0xff, 0x00, 0x00, 0x01}, // srsh.w d c  
	{0x9a14, &op_srsh,	  4,   2, 255, 0xff, 0x00, 0x00, 0x01}, // srsh.w e c  
	{0x9a15, &op_srsh,	  5,   2, 255, 0xff, 0x00, 0x00, 0x01}, // srsh.w f c  
	{0x9a16, &op_srsh,	  6,   2, 255, 0xff, 0x00, 0x00, 0x01}, // srsh.w g c  
	{0x9a17, &op_srsh,	  7,   2, 255, 0xff, 0x00, 0x00, 0x01}, // srsh.w h c  
	{0x9a18, &op_srsh,	  0,   3, 255, 0xff, 0x00, 0x00, 0x01}, // srsh.w a d  
	{0x9a19, &op_srsh,	  1,   3, 255, 0xff, 0x00, 0x00, 0x01}, // srsh.w b d  
	{0x9a1a, &op_srsh,	  2,   3, 255, 0xff, 0x00, 0x00, 0x01}, // srsh.w c d  
	{0x9a1b, &op_srsh,	  3,   3, 255, 0xff, 0x00, 0x00, 0x01}, // srsh.w d d  
	{0x9a1c, &op_srsh,	  4,   3, 255, 0xff, 0x00, 0x00, 0x01}, // srsh.w e d  
	{0x9a1d, &op_srsh,	  5,   3, 255, 0xff, 0x00, 0x00, 0x01}, // srsh.w f d  
	{0x9a1e, &op_srsh,	  6,   3, 255, 0xff, 0x00, 0x00, 0x01}, // srsh.w g d  
	{0x9a1f, &op_srsh,	  7,   3, 255, 0xff, 0x00, 0x00, 0x01}, // srsh.w h d  
	{0x9a20, &op_srsh,	  0,   4, 255, 0xff, 0x00, 0x00, 0x01}, // srsh.w a e  
	{0x9a21, &op_srsh,	  1,   4, 255, 0xff, 0x00, 0x00, 0x01}, // srsh.w b e  
	{0x9a22, &op_srsh,	  2,   4, 255, 0xff, 0x00, 0x00, 0x01}, // srsh.w c e  
	{0x9a23, &op_srsh,	  3,   4, 255, 0xff, 0x00, 0x00, 0x01}, // srsh.w d e  
	{0x9a24, &op_srsh,	  4,   4, 255, 0xff, 0x00, 0x00, 0x01}, // srsh.w e e  
	{0x9a25, &op_srsh,	  5,   4, 255, 0xff, 0x00, 0x00, 0x01}, // srsh.w f e  
	{0x9a26, &op_srsh,	  6,   4, 255, 0xff, 0x00, 0x00, 0x01}, // srsh.w g e  
	{0x9a27, &op_srsh,	  7,   4, 255, 0xff, 0x00, 0x00, 0x01}, // srsh.w h e  
	{0x9a28, &op_srsh,	  0,   5, 255, 0xff, 0x00, 0x00, 0x01}, // srsh.w a f  
	{0x9a29, &op_srsh,	  1,   5, 255, 0xff, 0x00, 0x00, 0x01}, // srsh.w b f  
	{0x9a2a, &op_srsh,	  2,   5, 255, 0xff, 0x00, 0x00, 0x01}, // srsh.w c f  
	{0x9a2b, &op_srsh,	  3,   5, 255, 0xff, 0x00, 0x00, 0x01}, // srsh.w d f  
	{0x9a2c, &op_srsh,	  4,   5, 255, 0xff, 0x00, 0x00, 0x01}, // srsh.w e f  
	{0x9a2d, &op_srsh,	  5,   5, 255, 0xff, 0x00, 0x00, 0x01}, // srsh.w f f  
	{0x9a2e, &op_srsh,	  6,   5, 255, 0xff, 0x00, 0x00, 0x01}, // srsh.w g f  
	{0x9a2f, &op_srsh,	  7,   5, 255, 0xff, 0x00, 0x00, 0x01}, // srsh.w h f  
	{0x9a30, &op_srsh,	  0,   6, 255, 0xff, 0x00, 0x00, 0x01}, // srsh.w a g  
	{0x9a31, &op_srsh,	  1,   6, 255, 0xff, 0x00, 0x00, 0x01}, // srsh.w b g  
	{0x9a32, &op_srsh,	  2,   6, 255, 0xff, 0x00, 0x00, 0x01}, // srsh.w c g  
	{0x9a33, &op_srsh,	  3,   6, 255, 0xff, 0x00, 0x00, 0x01}, // srsh.w d g  
	{0x9a34, &op_srsh,	  4,   6, 255, 0xff, 0x00, 0x00, 0x01}, // srsh.w e g  
	{0x9a35, &op_srsh,	  5,   6, 255, 0xff, 0x00, 0x00, 0x01}, // srsh.w f g  
	{0x9a36, &op_srsh,	  6,   6, 255, 0xff, 0x00, 0x00, 0x01}, // srsh.w g g  
	{0x9a37, &op_srsh,	  7,   6, 255, 0xff, 0x00, 0x00, 0x01}, // srsh.w h g  
	{0x9a38, &op_srsh,	  0,   7, 255, 0xff, 0x00, 0x00, 0x01}, // srsh.w a h  
	{0x9a39, &op_srsh,	  1,   7, 255, 0xff, 0x00, 0x00, 0x01}, // srsh.w b h  
	{0x9a3a, &op_srsh,	  2,   7, 255, 0xff, 0x00, 0x00, 0x01}, // srsh.w c h  
	{0x9a3b, &op_srsh,	  3,   7, 255, 0xff, 0x00, 0x00, 0x01}, // srsh.w d h  
	{0x9a3c, &op_srsh,	  4,   7, 255, 0xff, 0x00, 0x00, 0x01}, // srsh.w e h  
	{0x9a3d, &op_srsh,	  5,   7, 255, 0xff, 0x00, 0x00, 0x01}, // srsh.w f h  
	{0x9a3e, &op_srsh,	  6,   7, 255, 0xff, 0x00, 0x00, 0x01}, // srsh.w g h  
	{0x9a3f, &op_srsh,	  7,   7, 255, 0xff, 0x00, 0x00, 0x01}, // srsh.w h h  
	{0x9a40, &op_srsh,	  0,   0, 255, 0xff, 0x00, 0x00, 0x02}, // srsh.d a a  
	{0x9a41, &op_srsh,	  1,   0, 255, 0xff, 0x00, 0x00, 0x02}, // srsh.d b a  
	{0x9a42, &op_srsh,	  2,   0, 255, 0xff, 0x00, 0x00, 0x02}, // srsh.d c a  
	{0x9a43, &op_srsh,	  3,   0, 255, 0xff, 0x00, 0x00, 0x02}, // srsh.d d a  
	{0x9a44, &op_srsh,	  4,   0, 255, 0xff, 0x00, 0x00, 0x02}, // srsh.d e a  
	{0x9a45, &op_srsh,	  5,   0, 255, 0xff, 0x00, 0x00, 0x02}, // srsh.d f a  
	{0x9a46, &op_srsh,	  6,   0, 255, 0xff, 0x00, 0x00, 0x02}, // srsh.d g a  
	{0x9a47, &op_srsh,	  7,   0, 255, 0xff, 0x00, 0x00, 0x02}, // srsh.d h a  
	{0x9a48, &op_srsh,	  0,   1, 255, 0xff, 0x00, 0x00, 0x02}, // srsh.d a b  
	{0x9a49, &op_srsh,	  1,   1, 255, 0xff, 0x00, 0x00, 0x02}, // srsh.d b b  
	{0x9a4a, &op_srsh,	  2,   1, 255, 0xff, 0x00, 0x00, 0x02}, // srsh.d c b  
	{0x9a4b, &op_srsh,	  3,   1, 255, 0xff, 0x00, 0x00, 0x02}, // srsh.d d b  
	{0x9a4c, &op_srsh,	  4,   1, 255, 0xff, 0x00, 0x00, 0x02}, // srsh.d e b  
	{0x9a4d, &op_srsh,	  5,   1, 255, 0xff, 0x00, 0x00, 0x02}, // srsh.d f b  
	{0x9a4e, &op_srsh,	  6,   1, 255, 0xff, 0x00, 0x00, 0x02}, // srsh.d g b  
	{0x9a4f, &op_srsh,	  7,   1, 255, 0xff, 0x00, 0x00, 0x02}, // srsh.d h b  
	{0x9a50, &op_srsh,	  0,   2, 255, 0xff, 0x00, 0x00, 0x02}, // srsh.d a c  
	{0x9a51, &op_srsh,	  1,   2, 255, 0xff, 0x00, 0x00, 0x02}, // srsh.d b c  
	{0x9a52, &op_srsh,	  2,   2, 255, 0xff, 0x00, 0x00, 0x02}, // srsh.d c c  
	{0x9a53, &op_srsh,	  3,   2, 255, 0xff, 0x00, 0x00, 0x02}, // srsh.d d c  
	{0x9a54, &op_srsh,	  4,   2, 255, 0xff, 0x00, 0x00, 0x02}, // srsh.d e c  
	{0x9a55, &op_srsh,	  5,   2, 255, 0xff, 0x00, 0x00, 0x02}, // srsh.d f c  
	{0x9a56, &op_srsh,	  6,   2, 255, 0xff, 0x00, 0x00, 0x02}, // srsh.d g c  
	{0x9a57, &op_srsh,	  7,   2, 255, 0xff, 0x00, 0x00, 0x02}, // srsh.d h c  
	{0x9a58, &op_srsh,	  0,   3, 255, 0xff, 0x00, 0x00, 0x02}, // srsh.d a d  
	{0x9a59, &op_srsh,	  1,   3, 255, 0xff, 0x00, 0x00, 0x02}, // srsh.d b d  
	{0x9a5a, &op_srsh,	  2,   3, 255, 0xff, 0x00, 0x00, 0x02}, // srsh.d c d  
	{0x9a5b, &op_srsh,	  3,   3, 255, 0xff, 0x00, 0x00, 0x02}, // srsh.d d d  
	{0x9a5c, &op_srsh,	  4,   3, 255, 0xff, 0x00, 0x00, 0x02}, // srsh.d e d  
	{0x9a5d, &op_srsh,	  5,   3, 255, 0xff, 0x00, 0x00, 0x02}, // srsh.d f d  
	{0x9a5e, &op_srsh,	  6,   3, 255, 0xff, 0x00, 0x00, 0x02}, // srsh.d g d  
	{0x9a5f, &op_srsh,	  7,   3, 255, 0xff, 0x00, 0x00, 0x02}, // srsh.d h d  
	{0x9a60, &op_srsh,	  0,   4, 255, 0xff, 0x00, 0x00, 0x02}, // srsh.d a e  
	{0x9a61, &op_srsh,	  1,   4, 255, 0xff, 0x00, 0x00, 0x02}, // srsh.d b e  
	{0x9a62, &op_srsh,	  2,   4, 255, 0xff, 0x00, 0x00, 0x02}, // srsh.d c e  
	{0x9a63, &op_srsh,	  3,   4, 255, 0xff, 0x00, 0x00, 0x02}, // srsh.d d e  
	{0x9a64, &op_srsh,	  4,   4, 255, 0xff, 0x00, 0x00, 0x02}, // srsh.d e e  
	{0x9a65, &op_srsh,	  5,   4, 255, 0xff, 0x00, 0x00, 0x02}, // srsh.d f e  
	{0x9a66, &op_srsh,	  6,   4, 255, 0xff, 0x00, 0x00, 0x02}, // srsh.d g e  
	{0x9a67, &op_srsh,	  7,   4, 255, 0xff, 0x00, 0x00, 0x02}, // srsh.d h e  
	{0x9a68, &op_srsh,	  0,   5, 255, 0xff, 0x00, 0x00, 0x02}, // srsh.d a f  
	{0x9a69, &op_srsh,	  1,   5, 255, 0xff, 0x00, 0x00, 0x02}, // srsh.d b f  
	{0x9a6a, &op_srsh,	  2,   5, 255, 0xff, 0x00, 0x00, 0x02}, // srsh.d c f  
	{0x9a6b, &op_srsh,	  3,   5, 255, 0xff, 0x00, 0x00, 0x02}, // srsh.d d f  
	{0x9a6c, &op_srsh,	  4,   5, 255, 0xff, 0x00, 0x00, 0x02}, // srsh.d e f  
	{0x9a6d, &op_srsh,	  5,   5, 255, 0xff, 0x00, 0x00, 0x02}, // srsh.d f f  
	{0x9a6e, &op_srsh,	  6,   5, 255, 0xff, 0x00, 0x00, 0x02}, // srsh.d g f  
	{0x9a6f, &op_srsh,	  7,   5, 255, 0xff, 0x00, 0x00, 0x02}, // srsh.d h f  
	{0x9a70, &op_srsh,	  0,   6, 255, 0xff, 0x00, 0x00, 0x02}, // srsh.d a g  
	{0x9a71, &op_srsh,	  1,   6, 255, 0xff, 0x00, 0x00, 0x02}, // srsh.d b g  
	{0x9a72, &op_srsh,	  2,   6, 255, 0xff, 0x00, 0x00, 0x02}, // srsh.d c g  
	{0x9a73, &op_srsh,	  3,   6, 255, 0xff, 0x00, 0x00, 0x02}, // srsh.d d g  
	{0x9a74, &op_srsh,	  4,   6, 255, 0xff, 0x00, 0x00, 0x02}, // srsh.d e g  
	{0x9a75, &op_srsh,	  5,   6, 255, 0xff, 0x00, 0x00, 0x02}, // srsh.d f g  
	{0x9a76, &op_srsh,	  6,   6, 255, 0xff, 0x00, 0x00, 0x02}, // srsh.d g g  
	{0x9a77, &op_srsh,	  7,   6, 255, 0xff, 0x00, 0x00, 0x02}, // srsh.d h g  
	{0x9a78, &op_srsh,	  0,   7, 255, 0xff, 0x00, 0x00, 0x02}, // srsh.d a h  
	{0x9a79, &op_srsh,	  1,   7, 255, 0xff, 0x00, 0x00, 0x02}, // srsh.d b h  
	{0x9a7a, &op_srsh,	  2,   7, 255, 0xff, 0x00, 0x00, 0x02}, // srsh.d c h  
	{0x9a7b, &op_srsh,	  3,   7, 255, 0xff, 0x00, 0x00, 0x02}, // srsh.d d h  
	{0x9a7c, &op_srsh,	  4,   7, 255, 0xff, 0x00, 0x00, 0x02}, // srsh.d e h  
	{0x9a7d, &op_srsh,	  5,   7, 255, 0xff, 0x00, 0x00, 0x02}, // srsh.d f h  
	{0x9a7e, &op_srsh,	  6,   7, 255, 0xff, 0x00, 0x00, 0x02}, // srsh.d g h  
	{0x9a7f, &op_srsh,	  7,   7, 255, 0xff, 0x00, 0x00, 0x02}, // srsh.d h h  
	{0x9a80, &op_srsh,	  0,   0, 255, 0xff, 0x00, 0x00, 0x04}, // srsh a a  
	{0x9a81, &op_srsh,	  1,   0, 255, 0xff, 0x00, 0x00, 0x04}, // srsh b a  
	{0x9a82, &op_srsh,	  2,   0, 255, 0xff, 0x00, 0x00, 0x04}, // srsh c a  
	{0x9a83, &op_srsh,	  3,   0, 255, 0xff, 0x00, 0x00, 0x04}, // srsh d a  
	{0x9a84, &op_srsh,	  4,   0, 255, 0xff, 0x00, 0x00, 0x04}, // srsh e a  
	{0x9a85, &op_srsh,	  5,   0, 255, 0xff, 0x00, 0x00, 0x04}, // srsh f a  
	{0x9a86, &op_srsh,	  6,   0, 255, 0xff, 0x00, 0x00, 0x04}, // srsh g a  
	{0x9a87, &op_srsh,	  7,   0, 255, 0xff, 0x00, 0x00, 0x04}, // srsh h a  
	{0x9a88, &op_srsh,	  0,   1, 255, 0xff, 0x00, 0x00, 0x04}, // srsh a b  
	{0x9a89, &op_srsh,	  1,   1, 255, 0xff, 0x00, 0x00, 0x04}, // srsh b b  
	{0x9a8a, &op_srsh,	  2,   1, 255, 0xff, 0x00, 0x00, 0x04}, // srsh c b  
	{0x9a8b, &op_srsh,	  3,   1, 255, 0xff, 0x00, 0x00, 0x04}, // srsh d b  
	{0x9a8c, &op_srsh,	  4,   1, 255, 0xff, 0x00, 0x00, 0x04}, // srsh e b  
	{0x9a8d, &op_srsh,	  5,   1, 255, 0xff, 0x00, 0x00, 0x04}, // srsh f b  
	{0x9a8e, &op_srsh,	  6,   1, 255, 0xff, 0x00, 0x00, 0x04}, // srsh g b  
	{0x9a8f, &op_srsh,	  7,   1, 255, 0xff, 0x00, 0x00, 0x04}, // srsh h b  
	{0x9a90, &op_srsh,	  0,   2, 255, 0xff, 0x00, 0x00, 0x04}, // srsh a c  
	{0x9a91, &op_srsh,	  1,   2, 255, 0xff, 0x00, 0x00, 0x04}, // srsh b c  
	{0x9a92, &op_srsh,	  2,   2, 255, 0xff, 0x00, 0x00, 0x04}, // srsh c c  
	{0x9a93, &op_srsh,	  3,   2, 255, 0xff, 0x00, 0x00, 0x04}, // srsh d c  
	{0x9a94, &op_srsh,	  4,   2, 255, 0xff, 0x00, 0x00, 0x04}, // srsh e c  
	{0x9a95, &op_srsh,	  5,   2, 255, 0xff, 0x00, 0x00, 0x04}, // srsh f c  
	{0x9a96, &op_srsh,	  6,   2, 255, 0xff, 0x00, 0x00, 0x04}, // srsh g c  
	{0x9a97, &op_srsh,	  7,   2, 255, 0xff, 0x00, 0x00, 0x04}, // srsh h c  
	{0x9a98, &op_srsh,	  0,   3, 255, 0xff, 0x00, 0x00, 0x04}, // srsh a d  
	{0x9a99, &op_srsh,	  1,   3, 255, 0xff, 0x00, 0x00, 0x04}, // srsh b d  
	{0x9a9a, &op_srsh,	  2,   3, 255, 0xff, 0x00, 0x00, 0x04}, // srsh c d  
	{0x9a9b, &op_srsh,	  3,   3, 255, 0xff, 0x00, 0x00, 0x04}, // srsh d d  
	{0x9a9c, &op_srsh,	  4,   3, 255, 0xff, 0x00, 0x00, 0x04}, // srsh e d  
	{0x9a9d, &op_srsh,	  5,   3, 255, 0xff, 0x00, 0x00, 0x04}, // srsh f d  
	{0x9a9e, &op_srsh,	  6,   3, 255, 0xff, 0x00, 0x00, 0x04}, // srsh g d  
	{0x9a9f, &op_srsh,	  7,   3, 255, 0xff, 0x00, 0x00, 0x04}, // srsh h d  
	{0x9aa0, &op_srsh,	  0,   4, 255, 0xff, 0x00, 0x00, 0x04}, // srsh a e  
	{0x9aa1, &op_srsh,	  1,   4, 255, 0xff, 0x00, 0x00, 0x04}, // srsh b e  
	{0x9aa2, &op_srsh,	  2,   4, 255, 0xff, 0x00, 0x00, 0x04}, // srsh c e  
	{0x9aa3, &op_srsh,	  3,   4, 255, 0xff, 0x00, 0x00, 0x04}, // srsh d e  
	{0x9aa4, &op_srsh,	  4,   4, 255, 0xff, 0x00, 0x00, 0x04}, // srsh e e  
	{0x9aa5, &op_srsh,	  5,   4, 255, 0xff, 0x00, 0x00, 0x04}, // srsh f e  
	{0x9aa6, &op_srsh,	  6,   4, 255, 0xff, 0x00, 0x00, 0x04}, // srsh g e  
	{0x9aa7, &op_srsh,	  7,   4, 255, 0xff, 0x00, 0x00, 0x04}, // srsh h e  
	{0x9aa8, &op_srsh,	  0,   5, 255, 0xff, 0x00, 0x00, 0x04}, // srsh a f  
	{0x9aa9, &op_srsh,	  1,   5, 255, 0xff, 0x00, 0x00, 0x04}, // srsh b f  
	{0x9aaa, &op_srsh,	  2,   5, 255, 0xff, 0x00, 0x00, 0x04}, // srsh c f  
	{0x9aab, &op_srsh,	  3,   5, 255, 0xff, 0x00, 0x00, 0x04}, // srsh d f  
	{0x9aac, &op_srsh,	  4,   5, 255, 0xff, 0x00, 0x00, 0x04}, // srsh e f  
	{0x9aad, &op_srsh,	  5,   5, 255, 0xff, 0x00, 0x00, 0x04}, // srsh f f  
	{0x9aae, &op_srsh,	  6,   5, 255, 0xff, 0x00, 0x00, 0x04}, // srsh g f  
	{0x9aaf, &op_srsh,	  7,   5, 255, 0xff, 0x00, 0x00, 0x04}, // srsh h f  
	{0x9ab0, &op_srsh,	  0,   6, 255, 0xff, 0x00, 0x00, 0x04}, // srsh a g  
	{0x9ab1, &op_srsh,	  1,   6, 255, 0xff, 0x00, 0x00, 0x04}, // srsh b g  
	{0x9ab2, &op_srsh,	  2,   6, 255, 0xff, 0x00, 0x00, 0x04}, // srsh c g  
	{0x9ab3, &op_srsh,	  3,   6, 255, 0xff, 0x00, 0x00, 0x04}, // srsh d g  
	{0x9ab4, &op_srsh,	  4,   6, 255, 0xff, 0x00, 0x00, 0x04}, // srsh e g  
	{0x9ab5, &op_srsh,	  5,   6, 255, 0xff, 0x00, 0x00, 0x04}, // srsh f g  
	{0x9ab6, &op_srsh,	  6,   6, 255, 0xff, 0x00, 0x00, 0x04}, // srsh g g  
	{0x9ab7, &op_srsh,	  7,   6, 255, 0xff, 0x00, 0x00, 0x04}, // srsh h g  
	{0x9ab8, &op_srsh,	  0,   7, 255, 0xff, 0x00, 0x00, 0x04}, // srsh a h  
	{0x9ab9, &op_srsh,	  1,   7, 255, 0xff, 0x00, 0x00, 0x04}, // srsh b h  
	{0x9aba, &op_srsh,	  2,   7, 255, 0xff, 0x00, 0x00, 0x04}, // srsh c h  
	{0x9abb, &op_srsh,	  3,   7, 255, 0xff, 0x00, 0x00, 0x04}, // srsh d h  
	{0x9abc, &op_srsh,	  4,   7, 255, 0xff, 0x00, 0x00, 0x04}, // srsh e h  
	{0x9abd, &op_srsh,	  5,   7, 255, 0xff, 0x00, 0x00, 0x04}, // srsh f h  
	{0x9abe, &op_srsh,	  6,   7, 255, 0xff, 0x00, 0x00, 0x04}, // srsh g h  
	{0x9abf, &op_srsh,	  7,   7, 255, 0xff, 0x00, 0x00, 0x04}, // srsh h h  
	{0x9b00, &op_srsh,	  0,   0, 255, 0xff, 0x01, 0x00, 0x01}, // srsh.wr a a  
	{0x9b01, &op_srsh,	  1,   0, 255, 0xff, 0x01, 0x00, 0x01}, // srsh.wr b a  
	{0x9b02, &op_srsh,	  2,   0, 255, 0xff, 0x01, 0x00, 0x01}, // srsh.wr c a  
	{0x9b03, &op_srsh,	  3,   0, 255, 0xff, 0x01, 0x00, 0x01}, // srsh.wr d a  
	{0x9b04, &op_srsh,	  4,   0, 255, 0xff, 0x01, 0x00, 0x01}, // srsh.wr e a  
	{0x9b05, &op_srsh,	  5,   0, 255, 0xff, 0x01, 0x00, 0x01}, // srsh.wr f a  
	{0x9b06, &op_srsh,	  6,   0, 255, 0xff, 0x01, 0x00, 0x01}, // srsh.wr g a  
	{0x9b07, &op_srsh,	  7,   0, 255, 0xff, 0x01, 0x00, 0x01}, // srsh.wr h a  
	{0x9b08, &op_srsh,	  0,   1, 255, 0xff, 0x01, 0x00, 0x01}, // srsh.wr a b  
	{0x9b09, &op_srsh,	  1,   1, 255, 0xff, 0x01, 0x00, 0x01}, // srsh.wr b b  
	{0x9b0a, &op_srsh,	  2,   1, 255, 0xff, 0x01, 0x00, 0x01}, // srsh.wr c b  
	{0x9b0b, &op_srsh,	  3,   1, 255, 0xff, 0x01, 0x00, 0x01}, // srsh.wr d b  
	{0x9b0c, &op_srsh,	  4,   1, 255, 0xff, 0x01, 0x00, 0x01}, // srsh.wr e b  
	{0x9b0d, &op_srsh,	  5,   1, 255, 0xff, 0x01, 0x00, 0x01}, // srsh.wr f b  
	{0x9b0e, &op_srsh,	  6,   1, 255, 0xff, 0x01, 0x00, 0x01}, // srsh.wr g b  
	{0x9b0f, &op_srsh,	  7,   1, 255, 0xff, 0x01, 0x00, 0x01}, // srsh.wr h b  
	{0x9b10, &op_srsh,	  0,   2, 255, 0xff, 0x01, 0x00, 0x01}, // srsh.wr a c  
	{0x9b11, &op_srsh,	  1,   2, 255, 0xff, 0x01, 0x00, 0x01}, // srsh.wr b c  
	{0x9b12, &op_srsh,	  2,   2, 255, 0xff, 0x01, 0x00, 0x01}, // srsh.wr c c  
	{0x9b13, &op_srsh,	  3,   2, 255, 0xff, 0x01, 0x00, 0x01}, // srsh.wr d c  
	{0x9b14, &op_srsh,	  4,   2, 255, 0xff, 0x01, 0x00, 0x01}, // srsh.wr e c  
	{0x9b15, &op_srsh,	  5,   2, 255, 0xff, 0x01, 0x00, 0x01}, // srsh.wr f c  
	{0x9b16, &op_srsh,	  6,   2, 255, 0xff, 0x01, 0x00, 0x01}, // srsh.wr g c  
	{0x9b17, &op_srsh,	  7,   2, 255, 0xff, 0x01, 0x00, 0x01}, // srsh.wr h c  
	{0x9b18, &op_srsh,	  0,   3, 255, 0xff, 0x01, 0x00, 0x01}, // srsh.wr a d  
	{0x9b19, &op_srsh,	  1,   3, 255, 0xff, 0x01, 0x00, 0x01}, // srsh.wr b d  
	{0x9b1a, &op_srsh,	  2,   3, 255, 0xff, 0x01, 0x00, 0x01}, // srsh.wr c d  
	{0x9b1b, &op_srsh,	  3,   3, 255, 0xff, 0x01, 0x00, 0x01}, // srsh.wr d d  
	{0x9b1c, &op_srsh,	  4,   3, 255, 0xff, 0x01, 0x00, 0x01}, // srsh.wr e d  
	{0x9b1d, &op_srsh,	  5,   3, 255, 0xff, 0x01, 0x00, 0x01}, // srsh.wr f d  
	{0x9b1e, &op_srsh,	  6,   3, 255, 0xff, 0x01, 0x00, 0x01}, // srsh.wr g d  
	{0x9b1f, &op_srsh,	  7,   3, 255, 0xff, 0x01, 0x00, 0x01}, // srsh.wr h d  
	{0x9b20, &op_srsh,	  0,   4, 255, 0xff, 0x01, 0x00, 0x01}, // srsh.wr a e  
	{0x9b21, &op_srsh,	  1,   4, 255, 0xff, 0x01, 0x00, 0x01}, // srsh.wr b e  
	{0x9b22, &op_srsh,	  2,   4, 255, 0xff, 0x01, 0x00, 0x01}, // srsh.wr c e  
	{0x9b23, &op_srsh,	  3,   4, 255, 0xff, 0x01, 0x00, 0x01}, // srsh.wr d e  
	{0x9b24, &op_srsh,	  4,   4, 255, 0xff, 0x01, 0x00, 0x01}, // srsh.wr e e  
	{0x9b25, &op_srsh,	  5,   4, 255, 0xff, 0x01, 0x00, 0x01}, // srsh.wr f e  
	{0x9b26, &op_srsh,	  6,   4, 255, 0xff, 0x01, 0x00, 0x01}, // srsh.wr g e  
	{0x9b27, &op_srsh,	  7,   4, 255, 0xff, 0x01, 0x00, 0x01}, // srsh.wr h e  
	{0x9b28, &op_srsh,	  0,   5, 255, 0xff, 0x01, 0x00, 0x01}, // srsh.wr a f  
	{0x9b29, &op_srsh,	  1,   5, 255, 0xff, 0x01, 0x00, 0x01}, // srsh.wr b f  
	{0x9b2a, &op_srsh,	  2,   5, 255, 0xff, 0x01, 0x00, 0x01}, // srsh.wr c f  
	{0x9b2b, &op_srsh,	  3,   5, 255, 0xff, 0x01, 0x00, 0x01}, // srsh.wr d f  
	{0x9b2c, &op_srsh,	  4,   5, 255, 0xff, 0x01, 0x00, 0x01}, // srsh.wr e f  
	{0x9b2d, &op_srsh,	  5,   5, 255, 0xff, 0x01, 0x00, 0x01}, // srsh.wr f f  
	{0x9b2e, &op_srsh,	  6,   5, 255, 0xff, 0x01, 0x00, 0x01}, // srsh.wr g f  
	{0x9b2f, &op_srsh,	  7,   5, 255, 0xff, 0x01, 0x00, 0x01}, // srsh.wr h f  
	{0x9b30, &op_srsh,	  0,   6, 255, 0xff, 0x01, 0x00, 0x01}, // srsh.wr a g  
	{0x9b31, &op_srsh,	  1,   6, 255, 0xff, 0x01, 0x00, 0x01}, // srsh.wr b g  
	{0x9b32, &op_srsh,	  2,   6, 255, 0xff, 0x01, 0x00, 0x01}, // srsh.wr c g  
	{0x9b33, &op_srsh,	  3,   6, 255, 0xff, 0x01, 0x00, 0x01}, // srsh.wr d g  
	{0x9b34, &op_srsh,	  4,   6, 255, 0xff, 0x01, 0x00, 0x01}, // srsh.wr e g  
	{0x9b35, &op_srsh,	  5,   6, 255, 0xff, 0x01, 0x00, 0x01}, // srsh.wr f g  
	{0x9b36, &op_srsh,	  6,   6, 255, 0xff, 0x01, 0x00, 0x01}, // srsh.wr g g  
	{0x9b37, &op_srsh,	  7,   6, 255, 0xff, 0x01, 0x00, 0x01}, // srsh.wr h g  
	{0x9b38, &op_srsh,	  0,   7, 255, 0xff, 0x01, 0x00, 0x01}, // srsh.wr a h  
	{0x9b39, &op_srsh,	  1,   7, 255, 0xff, 0x01, 0x00, 0x01}, // srsh.wr b h  
	{0x9b3a, &op_srsh,	  2,   7, 255, 0xff, 0x01, 0x00, 0x01}, // srsh.wr c h  
	{0x9b3b, &op_srsh,	  3,   7, 255, 0xff, 0x01, 0x00, 0x01}, // srsh.wr d h  
	{0x9b3c, &op_srsh,	  4,   7, 255, 0xff, 0x01, 0x00, 0x01}, // srsh.wr e h  
	{0x9b3d, &op_srsh,	  5,   7, 255, 0xff, 0x01, 0x00, 0x01}, // srsh.wr f h  
	{0x9b3e, &op_srsh,	  6,   7, 255, 0xff, 0x01, 0x00, 0x01}, // srsh.wr g h  
	{0x9b3f, &op_srsh,	  7,   7, 255, 0xff, 0x01, 0x00, 0x01}, // srsh.wr h h  
	{0x9b40, &op_srsh,	  0,   0, 255, 0xff, 0x01, 0x00, 0x02}, // srsh.dr a a  
	{0x9b41, &op_srsh,	  1,   0, 255, 0xff, 0x01, 0x00, 0x02}, // srsh.dr b a  
	{0x9b42, &op_srsh,	  2,   0, 255, 0xff, 0x01, 0x00, 0x02}, // srsh.dr c a  
	{0x9b43, &op_srsh,	  3,   0, 255, 0xff, 0x01, 0x00, 0x02}, // srsh.dr d a  
	{0x9b44, &op_srsh,	  4,   0, 255, 0xff, 0x01, 0x00, 0x02}, // srsh.dr e a  
	{0x9b45, &op_srsh,	  5,   0, 255, 0xff, 0x01, 0x00, 0x02}, // srsh.dr f a  
	{0x9b46, &op_srsh,	  6,   0, 255, 0xff, 0x01, 0x00, 0x02}, // srsh.dr g a  
	{0x9b47, &op_srsh,	  7,   0, 255, 0xff, 0x01, 0x00, 0x02}, // srsh.dr h a  
	{0x9b48, &op_srsh,	  0,   1, 255, 0xff, 0x01, 0x00, 0x02}, // srsh.dr a b  
	{0x9b49, &op_srsh,	  1,   1, 255, 0xff, 0x01, 0x00, 0x02}, // srsh.dr b b  
	{0x9b4a, &op_srsh,	  2,   1, 255, 0xff, 0x01, 0x00, 0x02}, // srsh.dr c b  
	{0x9b4b, &op_srsh,	  3,   1, 255, 0xff, 0x01, 0x00, 0x02}, // srsh.dr d b  
	{0x9b4c, &op_srsh,	  4,   1, 255, 0xff, 0x01, 0x00, 0x02}, // srsh.dr e b  
	{0x9b4d, &op_srsh,	  5,   1, 255, 0xff, 0x01, 0x00, 0x02}, // srsh.dr f b  
	{0x9b4e, &op_srsh,	  6,   1, 255, 0xff, 0x01, 0x00, 0x02}, // srsh.dr g b  
	{0x9b4f, &op_srsh,	  7,   1, 255, 0xff, 0x01, 0x00, 0x02}, // srsh.dr h b  
	{0x9b50, &op_srsh,	  0,   2, 255, 0xff, 0x01, 0x00, 0x02}, // srsh.dr a c  
	{0x9b51, &op_srsh,	  1,   2, 255, 0xff, 0x01, 0x00, 0x02}, // srsh.dr b c  
	{0x9b52, &op_srsh,	  2,   2, 255, 0xff, 0x01, 0x00, 0x02}, // srsh.dr c c  
	{0x9b53, &op_srsh,	  3,   2, 255, 0xff, 0x01, 0x00, 0x02}, // srsh.dr d c  
	{0x9b54, &op_srsh,	  4,   2, 255, 0xff, 0x01, 0x00, 0x02}, // srsh.dr e c  
	{0x9b55, &op_srsh,	  5,   2, 255, 0xff, 0x01, 0x00, 0x02}, // srsh.dr f c  
	{0x9b56, &op_srsh,	  6,   2, 255, 0xff, 0x01, 0x00, 0x02}, // srsh.dr g c  
	{0x9b57, &op_srsh,	  7,   2, 255, 0xff, 0x01, 0x00, 0x02}, // srsh.dr h c  
	{0x9b58, &op_srsh,	  0,   3, 255, 0xff, 0x01, 0x00, 0x02}, // srsh.dr a d  
	{0x9b59, &op_srsh,	  1,   3, 255, 0xff, 0x01, 0x00, 0x02}, // srsh.dr b d  
	{0x9b5a, &op_srsh,	  2,   3, 255, 0xff, 0x01, 0x00, 0x02}, // srsh.dr c d  
	{0x9b5b, &op_srsh,	  3,   3, 255, 0xff, 0x01, 0x00, 0x02}, // srsh.dr d d  
	{0x9b5c, &op_srsh,	  4,   3, 255, 0xff, 0x01, 0x00, 0x02}, // srsh.dr e d  
	{0x9b5d, &op_srsh,	  5,   3, 255, 0xff, 0x01, 0x00, 0x02}, // srsh.dr f d  
	{0x9b5e, &op_srsh,	  6,   3, 255, 0xff, 0x01, 0x00, 0x02}, // srsh.dr g d  
	{0x9b5f, &op_srsh,	  7,   3, 255, 0xff, 0x01, 0x00, 0x02}, // srsh.dr h d  
	{0x9b60, &op_srsh,	  0,   4, 255, 0xff, 0x01, 0x00, 0x02}, // srsh.dr a e  
	{0x9b61, &op_srsh,	  1,   4, 255, 0xff, 0x01, 0x00, 0x02}, // srsh.dr b e  
	{0x9b62, &op_srsh,	  2,   4, 255, 0xff, 0x01, 0x00, 0x02}, // srsh.dr c e  
	{0x9b63, &op_srsh,	  3,   4, 255, 0xff, 0x01, 0x00, 0x02}, // srsh.dr d e  
	{0x9b64, &op_srsh,	  4,   4, 255, 0xff, 0x01, 0x00, 0x02}, // srsh.dr e e  
	{0x9b65, &op_srsh,	  5,   4, 255, 0xff, 0x01, 0x00, 0x02}, // srsh.dr f e  
	{0x9b66, &op_srsh,	  6,   4, 255, 0xff, 0x01, 0x00, 0x02}, // srsh.dr g e  
	{0x9b67, &op_srsh,	  7,   4, 255, 0xff, 0x01, 0x00, 0x02}, // srsh.dr h e  
	{0x9b68, &op_srsh,	  0,   5, 255, 0xff, 0x01, 0x00, 0x02}, // srsh.dr a f  
	{0x9b69, &op_srsh,	  1,   5, 255, 0xff, 0x01, 0x00, 0x02}, // srsh.dr b f  
	{0x9b6a, &op_srsh,	  2,   5, 255, 0xff, 0x01, 0x00, 0x02}, // srsh.dr c f  
	{0x9b6b, &op_srsh,	  3,   5, 255, 0xff, 0x01, 0x00, 0x02}, // srsh.dr d f  
	{0x9b6c, &op_srsh,	  4,   5, 255, 0xff, 0x01, 0x00, 0x02}, // srsh.dr e f  
	{0x9b6d, &op_srsh,	  5,   5, 255, 0xff, 0x01, 0x00, 0x02}, // srsh.dr f f  
	{0x9b6e, &op_srsh,	  6,   5, 255, 0xff, 0x01, 0x00, 0x02}, // srsh.dr g f  
	{0x9b6f, &op_srsh,	  7,   5, 255, 0xff, 0x01, 0x00, 0x02}, // srsh.dr h f  
	{0x9b70, &op_srsh,	  0,   6, 255, 0xff, 0x01, 0x00, 0x02}, // srsh.dr a g  
	{0x9b71, &op_srsh,	  1,   6, 255, 0xff, 0x01, 0x00, 0x02}, // srsh.dr b g  
	{0x9b72, &op_srsh,	  2,   6, 255, 0xff, 0x01, 0x00, 0x02}, // srsh.dr c g  
	{0x9b73, &op_srsh,	  3,   6, 255, 0xff, 0x01, 0x00, 0x02}, // srsh.dr d g  
	{0x9b74, &op_srsh,	  4,   6, 255, 0xff, 0x01, 0x00, 0x02}, // srsh.dr e g  
	{0x9b75, &op_srsh,	  5,   6, 255, 0xff, 0x01, 0x00, 0x02}, // srsh.dr f g  
	{0x9b76, &op_srsh,	  6,   6, 255, 0xff, 0x01, 0x00, 0x02}, // srsh.dr g g  
	{0x9b77, &op_srsh,	  7,   6, 255, 0xff, 0x01, 0x00, 0x02}, // srsh.dr h g  
	{0x9b78, &op_srsh,	  0,   7, 255, 0xff, 0x01, 0x00, 0x02}, // srsh.dr a h  
	{0x9b79, &op_srsh,	  1,   7, 255, 0xff, 0x01, 0x00, 0x02}, // srsh.dr b h  
	{0x9b7a, &op_srsh,	  2,   7, 255, 0xff, 0x01, 0x00, 0x02}, // srsh.dr c h  
	{0x9b7b, &op_srsh,	  3,   7, 255, 0xff, 0x01, 0x00, 0x02}, // srsh.dr d h  
	{0x9b7c, &op_srsh,	  4,   7, 255, 0xff, 0x01, 0x00, 0x02}, // srsh.dr e h  
	{0x9b7d, &op_srsh,	  5,   7, 255, 0xff, 0x01, 0x00, 0x02}, // srsh.dr f h  
	{0x9b7e, &op_srsh,	  6,   7, 255, 0xff, 0x01, 0x00, 0x02}, // srsh.dr g h  
	{0x9b7f, &op_srsh,	  7,   7, 255, 0xff, 0x01, 0x00, 0x02}, // srsh.dr h h  
	{0x9b80, &op_srsh,	  0,   0, 255, 0xff, 0x01, 0x00, 0x04}, // srsh.r a a  
	{0x9b81, &op_srsh,	  1,   0, 255, 0xff, 0x01, 0x00, 0x04}, // srsh.r b a  
	{0x9b82, &op_srsh,	  2,   0, 255, 0xff, 0x01, 0x00, 0x04}, // srsh.r c a  
	{0x9b83, &op_srsh,	  3,   0, 255, 0xff, 0x01, 0x00, 0x04}, // srsh.r d a  
	{0x9b84, &op_srsh,	  4,   0, 255, 0xff, 0x01, 0x00, 0x04}, // srsh.r e a  
	{0x9b85, &op_srsh,	  5,   0, 255, 0xff, 0x01, 0x00, 0x04}, // srsh.r f a  
	{0x9b86, &op_srsh,	  6,   0, 255, 0xff, 0x01, 0x00, 0x04}, // srsh.r g a  
	{0x9b87, &op_srsh,	  7,   0, 255, 0xff, 0x01, 0x00, 0x04}, // srsh.r h a  
	{0x9b88, &op_srsh,	  0,   1, 255, 0xff, 0x01, 0x00, 0x04}, // srsh.r a b  
	{0x9b89, &op_srsh,	  1,   1, 255, 0xff, 0x01, 0x00, 0x04}, // srsh.r b b  
	{0x9b8a, &op_srsh,	  2,   1, 255, 0xff, 0x01, 0x00, 0x04}, // srsh.r c b  
	{0x9b8b, &op_srsh,	  3,   1, 255, 0xff, 0x01, 0x00, 0x04}, // srsh.r d b  
	{0x9b8c, &op_srsh,	  4,   1, 255, 0xff, 0x01, 0x00, 0x04}, // srsh.r e b  
	{0x9b8d, &op_srsh,	  5,   1, 255, 0xff, 0x01, 0x00, 0x04}, // srsh.r f b  
	{0x9b8e, &op_srsh,	  6,   1, 255, 0xff, 0x01, 0x00, 0x04}, // srsh.r g b  
	{0x9b8f, &op_srsh,	  7,   1, 255, 0xff, 0x01, 0x00, 0x04}, // srsh.r h b  
	{0x9b90, &op_srsh,	  0,   2, 255, 0xff, 0x01, 0x00, 0x04}, // srsh.r a c  
	{0x9b91, &op_srsh,	  1,   2, 255, 0xff, 0x01, 0x00, 0x04}, // srsh.r b c  
	{0x9b92, &op_srsh,	  2,   2, 255, 0xff, 0x01, 0x00, 0x04}, // srsh.r c c  
	{0x9b93, &op_srsh,	  3,   2, 255, 0xff, 0x01, 0x00, 0x04}, // srsh.r d c  
	{0x9b94, &op_srsh,	  4,   2, 255, 0xff, 0x01, 0x00, 0x04}, // srsh.r e c  
	{0x9b95, &op_srsh,	  5,   2, 255, 0xff, 0x01, 0x00, 0x04}, // srsh.r f c  
	{0x9b96, &op_srsh,	  6,   2, 255, 0xff, 0x01, 0x00, 0x04}, // srsh.r g c  
	{0x9b97, &op_srsh,	  7,   2, 255, 0xff, 0x01, 0x00, 0x04}, // srsh.r h c  
	{0x9b98, &op_srsh,	  0,   3, 255, 0xff, 0x01, 0x00, 0x04}, // srsh.r a d  
	{0x9b99, &op_srsh,	  1,   3, 255, 0xff, 0x01, 0x00, 0x04}, // srsh.r b d  
	{0x9b9a, &op_srsh,	  2,   3, 255, 0xff, 0x01, 0x00, 0x04}, // srsh.r c d  
	{0x9b9b, &op_srsh,	  3,   3, 255, 0xff, 0x01, 0x00, 0x04}, // srsh.r d d  
	{0x9b9c, &op_srsh,	  4,   3, 255, 0xff, 0x01, 0x00, 0x04}, // srsh.r e d  
	{0x9b9d, &op_srsh,	  5,   3, 255, 0xff, 0x01, 0x00, 0x04}, // srsh.r f d  
	{0x9b9e, &op_srsh,	  6,   3, 255, 0xff, 0x01, 0x00, 0x04}, // srsh.r g d  
	{0x9b9f, &op_srsh,	  7,   3, 255, 0xff, 0x01, 0x00, 0x04}, // srsh.r h d  
	{0x9ba0, &op_srsh,	  0,   4, 255, 0xff, 0x01, 0x00, 0x04}, // srsh.r a e  
	{0x9ba1, &op_srsh,	  1,   4, 255, 0xff, 0x01, 0x00, 0x04}, // srsh.r b e  
	{0x9ba2, &op_srsh,	  2,   4, 255, 0xff, 0x01, 0x00, 0x04}, // srsh.r c e  
	{0x9ba3, &op_srsh,	  3,   4, 255, 0xff, 0x01, 0x00, 0x04}, // srsh.r d e  
	{0x9ba4, &op_srsh,	  4,   4, 255, 0xff, 0x01, 0x00, 0x04}, // srsh.r e e  
	{0x9ba5, &op_srsh,	  5,   4, 255, 0xff, 0x01, 0x00, 0x04}, // srsh.r f e  
	{0x9ba6, &op_srsh,	  6,   4, 255, 0xff, 0x01, 0x00, 0x04}, // srsh.r g e  
	{0x9ba7, &op_srsh,	  7,   4, 255, 0xff, 0x01, 0x00, 0x04}, // srsh.r h e  
	{0x9ba8, &op_srsh,	  0,   5, 255, 0xff, 0x01, 0x00, 0x04}, // srsh.r a f  
	{0x9ba9, &op_srsh,	  1,   5, 255, 0xff, 0x01, 0x00, 0x04}, // srsh.r b f  
	{0x9baa, &op_srsh,	  2,   5, 255, 0xff, 0x01, 0x00, 0x04}, // srsh.r c f  
	{0x9bab, &op_srsh,	  3,   5, 255, 0xff, 0x01, 0x00, 0x04}, // srsh.r d f  
	{0x9bac, &op_srsh,	  4,   5, 255, 0xff, 0x01, 0x00, 0x04}, // srsh.r e f  
	{0x9bad, &op_srsh,	  5,   5, 255, 0xff, 0x01, 0x00, 0x04}, // srsh.r f f  
	{0x9bae, &op_srsh,	  6,   5, 255, 0xff, 0x01, 0x00, 0x04}, // srsh.r g f  
	{0x9baf, &op_srsh,	  7,   5, 255, 0xff, 0x01, 0x00, 0x04}, // srsh.r h f  
	{0x9bb0, &op_srsh,	  0,   6, 255, 0xff, 0x01, 0x00, 0x04}, // srsh.r a g  
	{0x9bb1, &op_srsh,	  1,   6, 255, 0xff, 0x01, 0x00, 0x04}, // srsh.r b g  
	{0x9bb2, &op_srsh,	  2,   6, 255, 0xff, 0x01, 0x00, 0x04}, // srsh.r c g  
	{0x9bb3, &op_srsh,	  3,   6, 255, 0xff, 0x01, 0x00, 0x04}, // srsh.r d g  
	{0x9bb4, &op_srsh,	  4,   6, 255, 0xff, 0x01, 0x00, 0x04}, // srsh.r e g  
	{0x9bb5, &op_srsh,	  5,   6, 255, 0xff, 0x01, 0x00, 0x04}, // srsh.r f g  
	{0x9bb6, &op_srsh,	  6,   6, 255, 0xff, 0x01, 0x00, 0x04}, // srsh.r g g  
	{0x9bb7, &op_srsh,	  7,   6, 255, 0xff, 0x01, 0x00, 0x04}, // srsh.r h g  
	{0x9bb8, &op_srsh,	  0,   7, 255, 0xff, 0x01, 0x00, 0x04}, // srsh.r a h  
	{0x9bb9, &op_srsh,	  1,   7, 255, 0xff, 0x01, 0x00, 0x04}, // srsh.r b h  
	{0x9bba, &op_srsh,	  2,   7, 255, 0xff, 0x01, 0x00, 0x04}, // srsh.r c h  
	{0x9bbb, &op_srsh,	  3,   7, 255, 0xff, 0x01, 0x00, 0x04}, // srsh.r d h  
	{0x9bbc, &op_srsh,	  4,   7, 255, 0xff, 0x01, 0x00, 0x04}, // srsh.r e h  
	{0x9bbd, &op_srsh,	  5,   7, 255, 0xff, 0x01, 0x00, 0x04}, // srsh.r f h  
	{0x9bbe, &op_srsh,	  6,   7, 255, 0xff, 0x01, 0x00, 0x04}, // srsh.r g h  
	{0x9bbf, &op_srsh,	  7,   7, 255, 0xff, 0x01, 0x00, 0x04}, // srsh.r h h  
	{0x9ac8, &op_srsh,	  0,   8, 255, 0xff, 0x00, 0x01, 0x01}, // srsh.wi a <literal>  
	{0x9ac9, &op_srsh,	  1,   8, 255, 0xff, 0x00, 0x01, 0x01}, // srsh.wi b <literal>  
	{0x9aca, &op_srsh,	  2,   8, 255, 0xff, 0x00, 0x01, 0x01}, // srsh.wi c <literal>  
	{0x9acb, &op_srsh,	  3,   8, 255, 0xff, 0x00, 0x01, 0x01}, // srsh.wi d <literal>  
	{0x9acc, &op_srsh,	  4,   8, 255, 0xff, 0x00, 0x01, 0x01}, // srsh.wi e <literal>  
	{0x9acd, &op_srsh,	  5,   8, 255, 0xff, 0x00, 0x01, 0x01}, // srsh.wi f <literal>  
	{0x9ace, &op_srsh,	  6,   8, 255, 0xff, 0x00, 0x01, 0x01}, // srsh.wi g <literal>  
	{0x9acf, &op_srsh,	  7,   8, 255, 0xff, 0x00, 0x01, 0x01}, // srsh.wi h <literal>  
	{0x9ad0, &op_srsh,	  0,   8, 255, 0xff, 0x00, 0x02, 0x02}, // srsh.di a <literal>  
	{0x9ad1, &op_srsh,	  1,   8, 255, 0xff, 0x00, 0x02, 0x02}, // srsh.di b <literal>  
	{0x9ad2, &op_srsh,	  2,   8, 255, 0xff, 0x00, 0x02, 0x02}, // srsh.di c <literal>  
	{0x9ad3, &op_srsh,	  3,   8, 255, 0xff, 0x00, 0x02, 0x02}, // srsh.di d <literal>  
	{0x9ad4, &op_srsh,	  4,   8, 255, 0xff, 0x00, 0x02, 0x02}, // srsh.di e <literal>  
	{0x9ad5, &op_srsh,	  5,   8, 255, 0xff, 0x00, 0x02, 0x02}, // srsh.di f <literal>  
	{0x9ad6, &op_srsh,	  6,   8, 255, 0xff, 0x00, 0x02, 0x02}, // srsh.di g <literal>  
	{0x9ad7, &op_srsh,	  7,   8, 255, 0xff, 0x00, 0x02, 0x02}, // srsh.di h <literal>  
	{0x9ae0, &op_srsh,	  0,   8, 255, 0xff, 0x00, 0x04, 0x04}, // srsh.i a <literal>  
	{0x9ae1, &op_srsh,	  1,   8, 255, 0xff, 0x00, 0x04, 0x04}, // srsh.i b <literal>  
	{0x9ae2, &op_srsh,	  2,   8, 255, 0xff, 0x00, 0x04, 0x04}, // srsh.i c <literal>  
	{0x9ae3, &op_srsh,	  3,   8, 255, 0xff, 0x00, 0x04, 0x04}, // srsh.i d <literal>  
	{0x9ae4, &op_srsh,	  4,   8, 255, 0xff, 0x00, 0x04, 0x04}, // srsh.i e <literal>  
	{0x9ae5, &op_srsh,	  5,   8, 255, 0xff, 0x00, 0x04, 0x04}, // srsh.i f <literal>  
	{0x9ae6, &op_srsh,	  6,   8, 255, 0xff, 0x00, 0x04, 0x04}, // srsh.i g <literal>  
	{0x9ae7, &op_srsh,	  7,   8, 255, 0xff, 0x00, 0x04, 0x04}, // srsh.i h <literal>  
	{0x9bc8, &op_srsh,	  0,   8, 255, 0xff, 0x01, 0x04, 0x01}, // srsh.wri a <literal>  
	{0x9bc9, &op_srsh,	  1,   8, 255, 0xff, 0x01, 0x04, 0x01}, // srsh.wri b <literal>  
	{0x9bca, &op_srsh,	  2,   8, 255, 0xff, 0x01, 0x04, 0x01}, // srsh.wri c <literal>  
	{0x9bcb, &op_srsh,	  3,   8, 255, 0xff, 0x01, 0x04, 0x01}, // srsh.wri d <literal>  
	{0x9bcc, &op_srsh,	  4,   8, 255, 0xff, 0x01, 0x04, 0x01}, // srsh.wri e <literal>  
	{0x9bcd, &op_srsh,	  5,   8, 255, 0xff, 0x01, 0x04, 0x01}, // srsh.wri f <literal>  
	{0x9bce, &op_srsh,	  6,   8, 255, 0xff, 0x01, 0x04, 0x01}, // srsh.wri g <literal>  
	{0x9bcf, &op_srsh,	  7,   8, 255, 0xff, 0x01, 0x04, 0x01}, // srsh.wri h <literal>  
	{0x9bd0, &op_srsh,	  0,   8, 255, 0xff, 0x01, 0x04, 0x02}, // srsh.dri a <literal>  
	{0x9bd1, &op_srsh,	  1,   8, 255, 0xff, 0x01, 0x04, 0x02}, // srsh.dri b <literal>  
	{0x9bd2, &op_srsh,	  2,   8, 255, 0xff, 0x01, 0x04, 0x02}, // srsh.dri c <literal>  
	{0x9bd3, &op_srsh,	  3,   8, 255, 0xff, 0x01, 0x04, 0x02}, // srsh.dri d <literal>  
	{0x9bd4, &op_srsh,	  4,   8, 255, 0xff, 0x01, 0x04, 0x02}, // srsh.dri e <literal>  
	{0x9bd5, &op_srsh,	  5,   8, 255, 0xff, 0x01, 0x04, 0x02}, // srsh.dri f <literal>  
	{0x9bd6, &op_srsh,	  6,   8, 255, 0xff, 0x01, 0x04, 0x02}, // srsh.dri g <literal>  
	{0x9bd7, &op_srsh,	  7,   8, 255, 0xff, 0x01, 0x04, 0x02}, // srsh.dri h <literal>  
	{0x9be0, &op_srsh,	  0,   8, 255, 0xff, 0x01, 0x04, 0x04}, // srsh.ri a <literal>  
	{0x9be1, &op_srsh,	  1,   8, 255, 0xff, 0x01, 0x04, 0x04}, // srsh.ri b <literal>  
	{0x9be2, &op_srsh,	  2,   8, 255, 0xff, 0x01, 0x04, 0x04}, // srsh.ri c <literal>  
	{0x9be3, &op_srsh,	  3,   8, 255, 0xff, 0x01, 0x04, 0x04}, // srsh.ri d <literal>  
	{0x9be4, &op_srsh,	  4,   8, 255, 0xff, 0x01, 0x04, 0x04}, // srsh.ri e <literal>  
	{0x9be5, &op_srsh,	  5,   8, 255, 0xff, 0x01, 0x04, 0x04}, // srsh.ri f <literal>  
	{0x9be6, &op_srsh,	  6,   8, 255, 0xff, 0x01, 0x04, 0x04}, // srsh.ri g <literal>  
	{0x9be7, &op_srsh,	  7,   8, 255, 0xff, 0x01, 0x04, 0x04}, // srsh.ri h <literal>  
	{0x9c00, &op_sdiv,	  0,   0, 255, 0xff, 0x00, 0x00, 0x01}, // sdiv.w a a  
	{0x9c01, &op_sdiv,	  1,   0, 255, 0xff, 0x00, 0x00, 0x01}, // sdiv.w b a  
	{0x9c02, &op_sdiv,	  2,   0, 255, 0xff, 0x00, 0x00, 0x01}, // sdiv.w c a  
	{0x9c03, &op_sdiv,	  3,   0, 255, 0xff, 0x00, 0x00, 0x01}, // sdiv.w d a  
	{0x9c04, &op_sdiv,	  4,   0, 255, 0xff, 0x00, 0x00, 0x01}, // sdiv.w e a  
	{0x9c05, &op_sdiv,	  5,   0, 255, 0xff, 0x00, 0x00, 0x01}, // sdiv.w f a  
	{0x9c06, &op_sdiv,	  6,   0, 255, 0xff, 0x00, 0x00, 0x01}, // sdiv.w g a  
	{0x9c07, &op_sdiv,	  7,   0, 255, 0xff, 0x00, 0x00, 0x01}, // sdiv.w h a  
	{0x9c08, &op_sdiv,	  0,   1, 255, 0xff, 0x00, 0x00, 0x01}, // sdiv.w a b  
	{0x9c09, &op_sdiv,	  1,   1, 255, 0xff, 0x00, 0x00, 0x01}, // sdiv.w b b  
	{0x9c0a, &op_sdiv,	  2,   1, 255, 0xff, 0x00, 0x00, 0x01}, // sdiv.w c b  
	{0x9c0b, &op_sdiv,	  3,   1, 255, 0xff, 0x00, 0x00, 0x01}, // sdiv.w d b  
	{0x9c0c, &op_sdiv,	  4,   1, 255, 0xff, 0x00, 0x00, 0x01}, // sdiv.w e b  
	{0x9c0d, &op_sdiv,	  5,   1, 255, 0xff, 0x00, 0x00, 0x01}, // sdiv.w f b  
	{0x9c0e, &op_sdiv,	  6,   1, 255, 0xff, 0x00, 0x00, 0x01}, // sdiv.w g b  
	{0x9c0f, &op_sdiv,	  7,   1, 255, 0xff, 0x00, 0x00, 0x01}, // sdiv.w h b  
	{0x9c10, &op_sdiv,	  0,   2, 255, 0xff, 0x00, 0x00, 0x01}, // sdiv.w a c  
	{0x9c11, &op_sdiv,	  1,   2, 255, 0xff, 0x00, 0x00, 0x01}, // sdiv.w b c  
	{0x9c12, &op_sdiv,	  2,   2, 255, 0xff, 0x00, 0x00, 0x01}, // sdiv.w c c  
	{0x9c13, &op_sdiv,	  3,   2, 255, 0xff, 0x00, 0x00, 0x01}, // sdiv.w d c  
	{0x9c14, &op_sdiv,	  4,   2, 255, 0xff, 0x00, 0x00, 0x01}, // sdiv.w e c  
	{0x9c15, &op_sdiv,	  5,   2, 255, 0xff, 0x00, 0x00, 0x01}, // sdiv.w f c  
	{0x9c16, &op_sdiv,	  6,   2, 255, 0xff, 0x00, 0x00, 0x01}, // sdiv.w g c  
	{0x9c17, &op_sdiv,	  7,   2, 255, 0xff, 0x00, 0x00, 0x01}, // sdiv.w h c  
	{0x9c18, &op_sdiv,	  0,   3, 255, 0xff, 0x00, 0x00, 0x01}, // sdiv.w a d  
	{0x9c19, &op_sdiv,	  1,   3, 255, 0xff, 0x00, 0x00, 0x01}, // sdiv.w b d  
	{0x9c1a, &op_sdiv,	  2,   3, 255, 0xff, 0x00, 0x00, 0x01}, // sdiv.w c d  
	{0x9c1b, &op_sdiv,	  3,   3, 255, 0xff, 0x00, 0x00, 0x01}, // sdiv.w d d  
	{0x9c1c, &op_sdiv,	  4,   3, 255, 0xff, 0x00, 0x00, 0x01}, // sdiv.w e d  
	{0x9c1d, &op_sdiv,	  5,   3, 255, 0xff, 0x00, 0x00, 0x01}, // sdiv.w f d  
	{0x9c1e, &op_sdiv,	  6,   3, 255, 0xff, 0x00, 0x00, 0x01}, // sdiv.w g d  
	{0x9c1f, &op_sdiv,	  7,   3, 255, 0xff, 0x00, 0x00, 0x01}, // sdiv.w h d  
	{0x9c20, &op_sdiv,	  0,   4, 255, 0xff, 0x00, 0x00, 0x01}, // sdiv.w a e  
	{0x9c21, &op_sdiv,	  1,   4, 255, 0xff, 0x00, 0x00, 0x01}, // sdiv.w b e  
	{0x9c22, &op_sdiv,	  2,   4, 255, 0xff, 0x00, 0x00, 0x01}, // sdiv.w c e  
	{0x9c23, &op_sdiv,	  3,   4, 255, 0xff, 0x00, 0x00, 0x01}, // sdiv.w d e  
	{0x9c24, &op_sdiv,	  4,   4, 255, 0xff, 0x00, 0x00, 0x01}, // sdiv.w e e  
	{0x9c25, &op_sdiv,	  5,   4, 255, 0xff, 0x00, 0x00, 0x01}, // sdiv.w f e  
	{0x9c26, &op_sdiv,	  6,   4, 255, 0xff, 0x00, 0x00, 0x01}, // sdiv.w g e  
	{0x9c27, &op_sdiv,	  7,   4, 255, 0xff, 0x00, 0x00, 0x01}, // sdiv.w h e  
	{0x9c28, &op_sdiv,	  0,   5, 255, 0xff, 0x00, 0x00, 0x01}, // sdiv.w a f  
	{0x9c29, &op_sdiv,	  1,   5, 255, 0xff, 0x00, 0x00, 0x01}, // sdiv.w b f  
	{0x9c2a, &op_sdiv,	  2,   5, 255, 0xff, 0x00, 0x00, 0x01}, // sdiv.w c f  
	{0x9c2b, &op_sdiv,	  3,   5, 255, 0xff, 0x00, 0x00, 0x01}, // sdiv.w d f  
	{0x9c2c, &op_sdiv,	  4,   5, 255, 0xff, 0x00, 0x00, 0x01}, // sdiv.w e f  
	{0x9c2d, &op_sdiv,	  5,   5, 255, 0xff, 0x00, 0x00, 0x01}, // sdiv.w f f  
	{0x9c2e, &op_sdiv,	  6,   5, 255, 0xff, 0x00, 0x00, 0x01}, // sdiv.w g f  
	{0x9c2f, &op_sdiv,	  7,   5, 255, 0xff, 0x00, 0x00, 0x01}, // sdiv.w h f  
	{0x9c30, &op_sdiv,	  0,   6, 255, 0xff, 0x00, 0x00, 0x01}, // sdiv.w a g  
	{0x9c31, &op_sdiv,	  1,   6, 255, 0xff, 0x00, 0x00, 0x01}, // sdiv.w b g  
	{0x9c32, &op_sdiv,	  2,   6, 255, 0xff, 0x00, 0x00, 0x01}, // sdiv.w c g  
	{0x9c33, &op_sdiv,	  3,   6, 255, 0xff, 0x00, 0x00, 0x01}, // sdiv.w d g  
	{0x9c34, &op_sdiv,	  4,   6, 255, 0xff, 0x00, 0x00, 0x01}, // sdiv.w e g  
	{0x9c35, &op_sdiv,	  5,   6, 255, 0xff, 0x00, 0x00, 0x01}, // sdiv.w f g  
	{0x9c36, &op_sdiv,	  6,   6, 255, 0xff, 0x00, 0x00, 0x01}, // sdiv.w g g  
	{0x9c37, &op_sdiv,	  7,   6, 255, 0xff, 0x00, 0x00, 0x01}, // sdiv.w h g  
	{0x9c38, &op_sdiv,	  0,   7, 255, 0xff, 0x00, 0x00, 0x01}, // sdiv.w a h  
	{0x9c39, &op_sdiv,	  1,   7, 255, 0xff, 0x00, 0x00, 0x01}, // sdiv.w b h  
	{0x9c3a, &op_sdiv,	  2,   7, 255, 0xff, 0x00, 0x00, 0x01}, // sdiv.w c h  
	{0x9c3b, &op_sdiv,	  3,   7, 255, 0xff, 0x00, 0x00, 0x01}, // sdiv.w d h  
	{0x9c3c, &op_sdiv,	  4,   7, 255, 0xff, 0x00, 0x00, 0x01}, // sdiv.w e h  
	{0x9c3d, &op_sdiv,	  5,   7, 255, 0xff, 0x00, 0x00, 0x01}, // sdiv.w f h  
	{0x9c3e, &op_sdiv,	  6,   7, 255, 0xff, 0x00, 0x00, 0x01}, // sdiv.w g h  
	{0x9c3f, &op_sdiv,	  7,   7, 255, 0xff, 0x00, 0x00, 0x01}, // sdiv.w h h  
	{0x9c40, &op_sdiv,	  0,   0, 255, 0xff, 0x00, 0x00, 0x02}, // sdiv.d a a  
	{0x9c41, &op_sdiv,	  1,   0, 255, 0xff, 0x00, 0x00, 0x02}, // sdiv.d b a  
	{0x9c42, &op_sdiv,	  2,   0, 255, 0xff, 0x00, 0x00, 0x02}, // sdiv.d c a  
	{0x9c43, &op_sdiv,	  3,   0, 255, 0xff, 0x00, 0x00, 0x02}, // sdiv.d d a  
	{0x9c44, &op_sdiv,	  4,   0, 255, 0xff, 0x00, 0x00, 0x02}, // sdiv.d e a  
	{0x9c45, &op_sdiv,	  5,   0, 255, 0xff, 0x00, 0x00, 0x02}, // sdiv.d f a  
	{0x9c46, &op_sdiv,	  6,   0, 255, 0xff, 0x00, 0x00, 0x02}, // sdiv.d g a  
	{0x9c47, &op_sdiv,	  7,   0, 255, 0xff, 0x00, 0x00, 0x02}, // sdiv.d h a  
	{0x9c48, &op_sdiv,	  0,   1, 255, 0xff, 0x00, 0x00, 0x02}, // sdiv.d a b  
	{0x9c49, &op_sdiv,	  1,   1, 255, 0xff, 0x00, 0x00, 0x02}, // sdiv.d b b  
	{0x9c4a, &op_sdiv,	  2,   1, 255, 0xff, 0x00, 0x00, 0x02}, // sdiv.d c b  
	{0x9c4b, &op_sdiv,	  3,   1, 255, 0xff, 0x00, 0x00, 0x02}, // sdiv.d d b  
	{0x9c4c, &op_sdiv,	  4,   1, 255, 0xff, 0x00, 0x00, 0x02}, // sdiv.d e b  
	{0x9c4d, &op_sdiv,	  5,   1, 255, 0xff, 0x00, 0x00, 0x02}, // sdiv.d f b  
	{0x9c4e, &op_sdiv,	  6,   1, 255, 0xff, 0x00, 0x00, 0x02}, // sdiv.d g b  
	{0x9c4f, &op_sdiv,	  7,   1, 255, 0xff, 0x00, 0x00, 0x02}, // sdiv.d h b  
	{0x9c50, &op_sdiv,	  0,   2, 255, 0xff, 0x00, 0x00, 0x02}, // sdiv.d a c  
	{0x9c51, &op_sdiv,	  1,   2, 255, 0xff, 0x00, 0x00, 0x02}, // sdiv.d b c  
	{0x9c52, &op_sdiv,	  2,   2, 255, 0xff, 0x00, 0x00, 0x02}, // sdiv.d c c  
	{0x9c53, &op_sdiv,	  3,   2, 255, 0xff, 0x00, 0x00, 0x02}, // sdiv.d d c  
	{0x9c54, &op_sdiv,	  4,   2, 255, 0xff, 0x00, 0x00, 0x02}, // sdiv.d e c  
	{0x9c55, &op_sdiv,	  5,   2, 255, 0xff, 0x00, 0x00, 0x02}, // sdiv.d f c  
	{0x9c56, &op_sdiv,	  6,   2, 255, 0xff, 0x00, 0x00, 0x02}, // sdiv.d g c  
	{0x9c57, &op_sdiv,	  7,   2, 255, 0xff, 0x00, 0x00, 0x02}, // sdiv.d h c  
	{0x9c58, &op_sdiv,	  0,   3, 255, 0xff, 0x00, 0x00, 0x02}, // sdiv.d a d  
	{0x9c59, &op_sdiv,	  1,   3, 255, 0xff, 0x00, 0x00, 0x02}, // sdiv.d b d  
	{0x9c5a, &op_sdiv,	  2,   3, 255, 0xff, 0x00, 0x00, 0x02}, // sdiv.d c d  
	{0x9c5b, &op_sdiv,	  3,   3, 255, 0xff, 0x00, 0x00, 0x02}, // sdiv.d d d  
	{0x9c5c, &op_sdiv,	  4,   3, 255, 0xff, 0x00, 0x00, 0x02}, // sdiv.d e d  
	{0x9c5d, &op_sdiv,	  5,   3, 255, 0xff, 0x00, 0x00, 0x02}, // sdiv.d f d  
	{0x9c5e, &op_sdiv,	  6,   3, 255, 0xff, 0x00, 0x00, 0x02}, // sdiv.d g d  
	{0x9c5f, &op_sdiv,	  7,   3, 255, 0xff, 0x00, 0x00, 0x02}, // sdiv.d h d  
	{0x9c60, &op_sdiv,	  0,   4, 255, 0xff, 0x00, 0x00, 0x02}, // sdiv.d a e  
	{0x9c61, &op_sdiv,	  1,   4, 255, 0xff, 0x00, 0x00, 0x02}, // sdiv.d b e  
	{0x9c62, &op_sdiv,	  2,   4, 255, 0xff, 0x00, 0x00, 0x02}, // sdiv.d c e  
	{0x9c63, &op_sdiv,	  3,   4, 255, 0xff, 0x00, 0x00, 0x02}, // sdiv.d d e  
	{0x9c64, &op_sdiv,	  4,   4, 255, 0xff, 0x00, 0x00, 0x02}, // sdiv.d e e  
	{0x9c65, &op_sdiv,	  5,   4, 255, 0xff, 0x00, 0x00, 0x02}, // sdiv.d f e  
	{0x9c66, &op_sdiv,	  6,   4, 255, 0xff, 0x00, 0x00, 0x02}, // sdiv.d g e  
	{0x9c67, &op_sdiv,	  7,   4, 255, 0xff, 0x00, 0x00, 0x02}, // sdiv.d h e  
	{0x9c68, &op_sdiv,	  0,   5, 255, 0xff, 0x00, 0x00, 0x02}, // sdiv.d a f  
	{0x9c69, &op_sdiv,	  1,   5, 255, 0xff, 0x00, 0x00, 0x02}, // sdiv.d b f  
	{0x9c6a, &op_sdiv,	  2,   5, 255, 0xff, 0x00, 0x00, 0x02}, // sdiv.d c f  
	{0x9c6b, &op_sdiv,	  3,   5, 255, 0xff, 0x00, 0x00, 0x02}, // sdiv.d d f  
	{0x9c6c, &op_sdiv,	  4,   5, 255, 0xff, 0x00, 0x00, 0x02}, // sdiv.d e f  
	{0x9c6d, &op_sdiv,	  5,   5, 255, 0xff, 0x00, 0x00, 0x02}, // sdiv.d f f  
	{0x9c6e, &op_sdiv,	  6,   5, 255, 0xff, 0x00, 0x00, 0x02}, // sdiv.d g f  
	{0x9c6f, &op_sdiv,	  7,   5, 255, 0xff, 0x00, 0x00, 0x02}, // sdiv.d h f  
	{0x9c70, &op_sdiv,	  0,   6, 255, 0xff, 0x00, 0x00, 0x02}, // sdiv.d a g  
	{0x9c71, &op_sdiv,	  1,   6, 255, 0xff, 0x00, 0x00, 0x02}, // sdiv.d b g  
	{0x9c72, &op_sdiv,	  2,   6, 255, 0xff, 0x00, 0x00, 0x02}, // sdiv.d c g  
	{0x9c73, &op_sdiv,	  3,   6, 255, 0xff, 0x00, 0x00, 0x02}, // sdiv.d d g  
	{0x9c74, &op_sdiv,	  4,   6, 255, 0xff, 0x00, 0x00, 0x02}, // sdiv.d e g  
	{0x9c75, &op_sdiv,	  5,   6, 255, 0xff, 0x00, 0x00, 0x02}, // sdiv.d f g  
	{0x9c76, &op_sdiv,	  6,   6, 255, 0xff, 0x00, 0x00, 0x02}, // sdiv.d g g  
	{0x9c77, &op_sdiv,	  7,   6, 255, 0xff, 0x00, 0x00, 0x02}, // sdiv.d h g  
	{0x9c78, &op_sdiv,	  0,   7, 255, 0xff, 0x00, 0x00, 0x02}, // sdiv.d a h  
	{0x9c79, &op_sdiv,	  1,   7, 255, 0xff, 0x00, 0x00, 0x02}, // sdiv.d b h  
	{0x9c7a, &op_sdiv,	  2,   7, 255, 0xff, 0x00, 0x00, 0x02}, // sdiv.d c h  
	{0x9c7b, &op_sdiv,	  3,   7, 255, 0xff, 0x00, 0x00, 0x02}, // sdiv.d d h  
	{0x9c7c, &op_sdiv,	  4,   7, 255, 0xff, 0x00, 0x00, 0x02}, // sdiv.d e h  
	{0x9c7d, &op_sdiv,	  5,   7, 255, 0xff, 0x00, 0x00, 0x02}, // sdiv.d f h  
	{0x9c7e, &op_sdiv,	  6,   7, 255, 0xff, 0x00, 0x00, 0x02}, // sdiv.d g h  
	{0x9c7f, &op_sdiv,	  7,   7, 255, 0xff, 0x00, 0x00, 0x02}, // sdiv.d h h  
	{0x9c80, &op_sdiv,	  0,   0, 255, 0xff, 0x00, 0x00, 0x04}, // sdiv a a  
	{0x9c81, &op_sdiv,	  1,   0, 255, 0xff, 0x00, 0x00, 0x04}, // sdiv b a  
	{0x9c82, &op_sdiv,	  2,   0, 255, 0xff, 0x00, 0x00, 0x04}, // sdiv c a  
	{0x9c83, &op_sdiv,	  3,   0, 255, 0xff, 0x00, 0x00, 0x04}, // sdiv d a  
	{0x9c84, &op_sdiv,	  4,   0, 255, 0xff, 0x00, 0x00, 0x04}, // sdiv e a  
	{0x9c85, &op_sdiv,	  5,   0, 255, 0xff, 0x00, 0x00, 0x04}, // sdiv f a  
	{0x9c86, &op_sdiv,	  6,   0, 255, 0xff, 0x00, 0x00, 0x04}, // sdiv g a  
	{0x9c87, &op_sdiv,	  7,   0, 255, 0xff, 0x00, 0x00, 0x04}, // sdiv h a  
	{0x9c88, &op_sdiv,	  0,   1, 255, 0xff, 0x00, 0x00, 0x04}, // sdiv a b  
	{0x9c89, &op_sdiv,	  1,   1, 255, 0xff, 0x00, 0x00, 0x04}, // sdiv b b  
	{0x9c8a, &op_sdiv,	  2,   1, 255, 0xff, 0x00, 0x00, 0x04}, // sdiv c b  
	{0x9c8b, &op_sdiv,	  3,   1, 255, 0xff, 0x00, 0x00, 0x04}, // sdiv d b  
	{0x9c8c, &op_sdiv,	  4,   1, 255, 0xff, 0x00, 0x00, 0x04}, // sdiv e b  
	{0x9c8d, &op_sdiv,	  5,   1, 255, 0xff, 0x00, 0x00, 0x04}, // sdiv f b  
	{0x9c8e, &op_sdiv,	  6,   1, 255, 0xff, 0x00, 0x00, 0x04}, // sdiv g b  
	{0x9c8f, &op_sdiv,	  7,   1, 255, 0xff, 0x00, 0x00, 0x04}, // sdiv h b  
	{0x9c90, &op_sdiv,	  0,   2, 255, 0xff, 0x00, 0x00, 0x04}, // sdiv a c  
	{0x9c91, &op_sdiv,	  1,   2, 255, 0xff, 0x00, 0x00, 0x04}, // sdiv b c  
	{0x9c92, &op_sdiv,	  2,   2, 255, 0xff, 0x00, 0x00, 0x04}, // sdiv c c  
	{0x9c93, &op_sdiv,	  3,   2, 255, 0xff, 0x00, 0x00, 0x04}, // sdiv d c  
	{0x9c94, &op_sdiv,	  4,   2, 255, 0xff, 0x00, 0x00, 0x04}, // sdiv e c  
	{0x9c95, &op_sdiv,	  5,   2, 255, 0xff, 0x00, 0x00, 0x04}, // sdiv f c  
	{0x9c96, &op_sdiv,	  6,   2, 255, 0xff, 0x00, 0x00, 0x04}, // sdiv g c  
	{0x9c97, &op_sdiv,	  7,   2, 255, 0xff, 0x00, 0x00, 0x04}, // sdiv h c  
	{0x9c98, &op_sdiv,	  0,   3, 255, 0xff, 0x00, 0x00, 0x04}, // sdiv a d  
	{0x9c99, &op_sdiv,	  1,   3, 255, 0xff, 0x00, 0x00, 0x04}, // sdiv b d  
	{0x9c9a, &op_sdiv,	  2,   3, 255, 0xff, 0x00, 0x00, 0x04}, // sdiv c d  
	{0x9c9b, &op_sdiv,	  3,   3, 255, 0xff, 0x00, 0x00, 0x04}, // sdiv d d  
	{0x9c9c, &op_sdiv,	  4,   3, 255, 0xff, 0x00, 0x00, 0x04}, // sdiv e d  
	{0x9c9d, &op_sdiv,	  5,   3, 255, 0xff, 0x00, 0x00, 0x04}, // sdiv f d  
	{0x9c9e, &op_sdiv,	  6,   3, 255, 0xff, 0x00, 0x00, 0x04}, // sdiv g d  
	{0x9c9f, &op_sdiv,	  7,   3, 255, 0xff, 0x00, 0x00, 0x04}, // sdiv h d  
	{0x9ca0, &op_sdiv,	  0,   4, 255, 0xff, 0x00, 0x00, 0x04}, // sdiv a e  
	{0x9ca1, &op_sdiv,	  1,   4, 255, 0xff, 0x00, 0x00, 0x04}, // sdiv b e  
	{0x9ca2, &op_sdiv,	  2,   4, 255, 0xff, 0x00, 0x00, 0x04}, // sdiv c e  
	{0x9ca3, &op_sdiv,	  3,   4, 255, 0xff, 0x00, 0x00, 0x04}, // sdiv d e  
	{0x9ca4, &op_sdiv,	  4,   4, 255, 0xff, 0x00, 0x00, 0x04}, // sdiv e e  
	{0x9ca5, &op_sdiv,	  5,   4, 255, 0xff, 0x00, 0x00, 0x04}, // sdiv f e  
	{0x9ca6, &op_sdiv,	  6,   4, 255, 0xff, 0x00, 0x00, 0x04}, // sdiv g e  
	{0x9ca7, &op_sdiv,	  7,   4, 255, 0xff, 0x00, 0x00, 0x04}, // sdiv h e  
	{0x9ca8, &op_sdiv,	  0,   5, 255, 0xff, 0x00, 0x00, 0x04}, // sdiv a f  
	{0x9ca9, &op_sdiv,	  1,   5, 255, 0xff, 0x00, 0x00, 0x04}, // sdiv b f  
	{0x9caa, &op_sdiv,	  2,   5, 255, 0xff, 0x00, 0x00, 0x04}, // sdiv c f  
	{0x9cab, &op_sdiv,	  3,   5, 255, 0xff, 0x00, 0x00, 0x04}, // sdiv d f  
	{0x9cac, &op_sdiv,	  4,   5, 255, 0xff, 0x00, 0x00, 0x04}, // sdiv e f  
	{0x9cad, &op_sdiv,	  5,   5, 255, 0xff, 0x00, 0x00, 0x04}, // sdiv f f  
	{0x9cae, &op_sdiv,	  6,   5, 255, 0xff, 0x00, 0x00, 0x04}, // sdiv g f  
	{0x9caf, &op_sdiv,	  7,   5, 255, 0xff, 0x00, 0x00, 0x04}, // sdiv h f  
	{0x9cb0, &op_sdiv,	  0,   6, 255, 0xff, 0x00, 0x00, 0x04}, // sdiv a g  
	{0x9cb1, &op_sdiv,	  1,   6, 255, 0xff, 0x00, 0x00, 0x04}, // sdiv b g  
	{0x9cb2, &op_sdiv,	  2,   6, 255, 0xff, 0x00, 0x00, 0x04}, // sdiv c g  
	{0x9cb3, &op_sdiv,	  3,   6, 255, 0xff, 0x00, 0x00, 0x04}, // sdiv d g  
	{0x9cb4, &op_sdiv,	  4,   6, 255, 0xff, 0x00, 0x00, 0x04}, // sdiv e g  
	{0x9cb5, &op_sdiv,	  5,   6, 255, 0xff, 0x00, 0x00, 0x04}, // sdiv f g  
	{0x9cb6, &op_sdiv,	  6,   6, 255, 0xff, 0x00, 0x00, 0x04}, // sdiv g g  
	{0x9cb7, &op_sdiv,	  7,   6, 255, 0xff, 0x00, 0x00, 0x04}, // sdiv h g  
	{0x9cb8, &op_sdiv,	  0,   7, 255, 0xff, 0x00, 0x00, 0x04}, // sdiv a h  
	{0x9cb9, &op_sdiv,	  1,   7, 255, 0xff, 0x00, 0x00, 0x04}, // sdiv b h  
	{0x9cba, &op_sdiv,	  2,   7, 255, 0xff, 0x00, 0x00, 0x04}, // sdiv c h  
	{0x9cbb, &op_sdiv,	  3,   7, 255, 0xff, 0x00, 0x00, 0x04}, // sdiv d h  
	{0x9cbc, &op_sdiv,	  4,   7, 255, 0xff, 0x00, 0x00, 0x04}, // sdiv e h  
	{0x9cbd, &op_sdiv,	  5,   7, 255, 0xff, 0x00, 0x00, 0x04}, // sdiv f h  
	{0x9cbe, &op_sdiv,	  6,   7, 255, 0xff, 0x00, 0x00, 0x04}, // sdiv g h  
	{0x9cbf, &op_sdiv,	  7,   7, 255, 0xff, 0x00, 0x00, 0x04}, // sdiv h h  
	{0x9d00, &op_sdiv,	  0,   0, 255, 0xff, 0x01, 0x00, 0x01}, // sdiv.wr a a  
	{0x9d01, &op_sdiv,	  1,   0, 255, 0xff, 0x01, 0x00, 0x01}, // sdiv.wr b a  
	{0x9d02, &op_sdiv,	  2,   0, 255, 0xff, 0x01, 0x00, 0x01}, // sdiv.wr c a  
	{0x9d03, &op_sdiv,	  3,   0, 255, 0xff, 0x01, 0x00, 0x01}, // sdiv.wr d a  
	{0x9d04, &op_sdiv,	  4,   0, 255, 0xff, 0x01, 0x00, 0x01}, // sdiv.wr e a  
	{0x9d05, &op_sdiv,	  5,   0, 255, 0xff, 0x01, 0x00, 0x01}, // sdiv.wr f a  
	{0x9d06, &op_sdiv,	  6,   0, 255, 0xff, 0x01, 0x00, 0x01}, // sdiv.wr g a  
	{0x9d07, &op_sdiv,	  7,   0, 255, 0xff, 0x01, 0x00, 0x01}, // sdiv.wr h a  
	{0x9d08, &op_sdiv,	  0,   1, 255, 0xff, 0x01, 0x00, 0x01}, // sdiv.wr a b  
	{0x9d09, &op_sdiv,	  1,   1, 255, 0xff, 0x01, 0x00, 0x01}, // sdiv.wr b b  
	{0x9d0a, &op_sdiv,	  2,   1, 255, 0xff, 0x01, 0x00, 0x01}, // sdiv.wr c b  
	{0x9d0b, &op_sdiv,	  3,   1, 255, 0xff, 0x01, 0x00, 0x01}, // sdiv.wr d b  
	{0x9d0c, &op_sdiv,	  4,   1, 255, 0xff, 0x01, 0x00, 0x01}, // sdiv.wr e b  
	{0x9d0d, &op_sdiv,	  5,   1, 255, 0xff, 0x01, 0x00, 0x01}, // sdiv.wr f b  
	{0x9d0e, &op_sdiv,	  6,   1, 255, 0xff, 0x01, 0x00, 0x01}, // sdiv.wr g b  
	{0x9d0f, &op_sdiv,	  7,   1, 255, 0xff, 0x01, 0x00, 0x01}, // sdiv.wr h b  
	{0x9d10, &op_sdiv,	  0,   2, 255, 0xff, 0x01, 0x00, 0x01}, // sdiv.wr a c  
	{0x9d11, &op_sdiv,	  1,   2, 255, 0xff, 0x01, 0x00, 0x01}, // sdiv.wr b c  
	{0x9d12, &op_sdiv,	  2,   2, 255, 0xff, 0x01, 0x00, 0x01}, // sdiv.wr c c  
	{0x9d13, &op_sdiv,	  3,   2, 255, 0xff, 0x01, 0x00, 0x01}, // sdiv.wr d c  
	{0x9d14, &op_sdiv,	  4,   2, 255, 0xff, 0x01, 0x00, 0x01}, // sdiv.wr e c  
	{0x9d15, &op_sdiv,	  5,   2, 255, 0xff, 0x01, 0x00, 0x01}, // sdiv.wr f c  
	{0x9d16, &op_sdiv,	  6,   2, 255, 0xff, 0x01, 0x00, 0x01}, // sdiv.wr g c  
	{0x9d17, &op_sdiv,	  7,   2, 255, 0xff, 0x01, 0x00, 0x01}, // sdiv.wr h c  
	{0x9d18, &op_sdiv,	  0,   3, 255, 0xff, 0x01, 0x00, 0x01}, // sdiv.wr a d  
	{0x9d19, &op_sdiv,	  1,   3, 255, 0xff, 0x01, 0x00, 0x01}, // sdiv.wr b d  
	{0x9d1a, &op_sdiv,	  2,   3, 255, 0xff, 0x01, 0x00, 0x01}, // sdiv.wr c d  
	{0x9d1b, &op_sdiv,	  3,   3, 255, 0xff, 0x01, 0x00, 0x01}, // sdiv.wr d d  
	{0x9d1c, &op_sdiv,	  4,   3, 255, 0xff, 0x01, 0x00, 0x01}, // sdiv.wr e d  
	{0x9d1d, &op_sdiv,	  5,   3, 255, 0xff, 0x01, 0x00, 0x01}, // sdiv.wr f d  
	{0x9d1e, &op_sdiv,	  6,   3, 255, 0xff, 0x01, 0x00, 0x01}, // sdiv.wr g d  
	{0x9d1f, &op_sdiv,	  7,   3, 255, 0xff, 0x01, 0x00, 0x01}, // sdiv.wr h d  
	{0x9d20, &op_sdiv,	  0,   4, 255, 0xff, 0x01, 0x00, 0x01}, // sdiv.wr a e  
	{0x9d21, &op_sdiv,	  1,   4, 255, 0xff, 0x01, 0x00, 0x01}, // sdiv.wr b e  
	{0x9d22, &op_sdiv,	  2,   4, 255, 0xff, 0x01, 0x00, 0x01}, // sdiv.wr c e  
	{0x9d23, &op_sdiv,	  3,   4, 255, 0xff, 0x01, 0x00, 0x01}, // sdiv.wr d e  
	{0x9d24, &op_sdiv,	  4,   4, 255, 0xff, 0x01, 0x00, 0x01}, // sdiv.wr e e  
	{0x9d25, &op_sdiv,	  5,   4, 255, 0xff, 0x01, 0x00, 0x01}, // sdiv.wr f e  
	{0x9d26, &op_sdiv,	  6,   4, 255, 0xff, 0x01, 0x00, 0x01}, // sdiv.wr g e  
	{0x9d27, &op_sdiv,	  7,   4, 255, 0xff, 0x01, 0x00, 0x01}, // sdiv.wr h e  
	{0x9d28, &op_sdiv,	  0,   5, 255, 0xff, 0x01, 0x00, 0x01}, // sdiv.wr a f  
	{0x9d29, &op_sdiv,	  1,   5, 255, 0xff, 0x01, 0x00, 0x01}, // sdiv.wr b f  
	{0x9d2a, &op_sdiv,	  2,   5, 255, 0xff, 0x01, 0x00, 0x01}, // sdiv.wr c f  
	{0x9d2b, &op_sdiv,	  3,   5, 255, 0xff, 0x01, 0x00, 0x01}, // sdiv.wr d f  
	{0x9d2c, &op_sdiv,	  4,   5, 255, 0xff, 0x01, 0x00, 0x01}, // sdiv.wr e f  
	{0x9d2d, &op_sdiv,	  5,   5, 255, 0xff, 0x01, 0x00, 0x01}, // sdiv.wr f f  
	{0x9d2e, &op_sdiv,	  6,   5, 255, 0xff, 0x01, 0x00, 0x01}, // sdiv.wr g f  
	{0x9d2f, &op_sdiv,	  7,   5, 255, 0xff, 0x01, 0x00, 0x01}, // sdiv.wr h f  
	{0x9d30, &op_sdiv,	  0,   6, 255, 0xff, 0x01, 0x00, 0x01}, // sdiv.wr a g  
	{0x9d31, &op_sdiv,	  1,   6, 255, 0xff, 0x01, 0x00, 0x01}, // sdiv.wr b g  
	{0x9d32, &op_sdiv,	  2,   6, 255, 0xff, 0x01, 0x00, 0x01}, // sdiv.wr c g  
	{0x9d33, &op_sdiv,	  3,   6, 255, 0xff, 0x01, 0x00, 0x01}, // sdiv.wr d g  
	{0x9d34, &op_sdiv,	  4,   6, 255, 0xff, 0x01, 0x00, 0x01}, // sdiv.wr e g  
	{0x9d35, &op_sdiv,	  5,   6, 255, 0xff, 0x01, 0x00, 0x01}, // sdiv.wr f g  
	{0x9d36, &op_sdiv,	  6,   6, 255, 0xff, 0x01, 0x00, 0x01}, // sdiv.wr g g  
	{0x9d37, &op_sdiv,	  7,   6, 255, 0xff, 0x01, 0x00, 0x01}, // sdiv.wr h g  
	{0x9d38, &op_sdiv,	  0,   7, 255, 0xff, 0x01, 0x00, 0x01}, // sdiv.wr a h  
	{0x9d39, &op_sdiv,	  1,   7, 255, 0xff, 0x01, 0x00, 0x01}, // sdiv.wr b h  
	{0x9d3a, &op_sdiv,	  2,   7, 255, 0xff, 0x01, 0x00, 0x01}, // sdiv.wr c h  
	{0x9d3b, &op_sdiv,	  3,   7, 255, 0xff, 0x01, 0x00, 0x01}, // sdiv.wr d h  
	{0x9d3c, &op_sdiv,	  4,   7, 255, 0xff, 0x01, 0x00, 0x01}, // sdiv.wr e h  
	{0x9d3d, &op_sdiv,	  5,   7, 255, 0xff, 0x01, 0x00, 0x01}, // sdiv.wr f h  
	{0x9d3e, &op_sdiv,	  6,   7, 255, 0xff, 0x01, 0x00, 0x01}, // sdiv.wr g h  
	{0x9d3f, &op_sdiv,	  7,   7, 255, 0xff, 0x01, 0x00, 0x01}, // sdiv.wr h h  
	{0x9d40, &op_sdiv,	  0,   0, 255, 0xff, 0x01, 0x00, 0x02}, // sdiv.dr a a  
	{0x9d41, &op_sdiv,	  1,   0, 255, 0xff, 0x01, 0x00, 0x02}, // sdiv.dr b a  
	{0x9d42, &op_sdiv,	  2,   0, 255, 0xff, 0x01, 0x00, 0x02}, // sdiv.dr c a  
	{0x9d43, &op_sdiv,	  3,   0, 255, 0xff, 0x01, 0x00, 0x02}, // sdiv.dr d a  
	{0x9d44, &op_sdiv,	  4,   0, 255, 0xff, 0x01, 0x00, 0x02}, // sdiv.dr e a  
	{0x9d45, &op_sdiv,	  5,   0, 255, 0xff, 0x01, 0x00, 0x02}, // sdiv.dr f a  
	{0x9d46, &op_sdiv,	  6,   0, 255, 0xff, 0x01, 0x00, 0x02}, // sdiv.dr g a  
	{0x9d47, &op_sdiv,	  7,   0, 255, 0xff, 0x01, 0x00, 0x02}, // sdiv.dr h a  
	{0x9d48, &op_sdiv,	  0,   1, 255, 0xff, 0x01, 0x00, 0x02}, // sdiv.dr a b  
	{0x9d49, &op_sdiv,	  1,   1, 255, 0xff, 0x01, 0x00, 0x02}, // sdiv.dr b b  
	{0x9d4a, &op_sdiv,	  2,   1, 255, 0xff, 0x01, 0x00, 0x02}, // sdiv.dr c b  
	{0x9d4b, &op_sdiv,	  3,   1, 255, 0xff, 0x01, 0x00, 0x02}, // sdiv.dr d b  
	{0x9d4c, &op_sdiv,	  4,   1, 255, 0xff, 0x01, 0x00, 0x02}, // sdiv.dr e b  
	{0x9d4d, &op_sdiv,	  5,   1, 255, 0xff, 0x01, 0x00, 0x02}, // sdiv.dr f b  
	{0x9d4e, &op_sdiv,	  6,   1, 255, 0xff, 0x01, 0x00, 0x02}, // sdiv.dr g b  
	{0x9d4f, &op_sdiv,	  7,   1, 255, 0xff, 0x01, 0x00, 0x02}, // sdiv.dr h b  
	{0x9d50, &op_sdiv,	  0,   2, 255, 0xff, 0x01, 0x00, 0x02}, // sdiv.dr a c  
	{0x9d51, &op_sdiv,	  1,   2, 255, 0xff, 0x01, 0x00, 0x02}, // sdiv.dr b c  
	{0x9d52, &op_sdiv,	  2,   2, 255, 0xff, 0x01, 0x00, 0x02}, // sdiv.dr c c  
	{0x9d53, &op_sdiv,	  3,   2, 255, 0xff, 0x01, 0x00, 0x02}, // sdiv.dr d c  
	{0x9d54, &op_sdiv,	  4,   2, 255, 0xff, 0x01, 0x00, 0x02}, // sdiv.dr e c  
	{0x9d55, &op_sdiv,	  5,   2, 255, 0xff, 0x01, 0x00, 0x02}, // sdiv.dr f c  
	{0x9d56, &op_sdiv,	  6,   2, 255, 0xff, 0x01, 0x00, 0x02}, // sdiv.dr g c  
	{0x9d57, &op_sdiv,	  7,   2, 255, 0xff, 0x01, 0x00, 0x02}, // sdiv.dr h c  
	{0x9d58, &op_sdiv,	  0,   3, 255, 0xff, 0x01, 0x00, 0x02}, // sdiv.dr a d  
	{0x9d59, &op_sdiv,	  1,   3, 255, 0xff, 0x01, 0x00, 0x02}, // sdiv.dr b d  
	{0x9d5a, &op_sdiv,	  2,   3, 255, 0xff, 0x01, 0x00, 0x02}, // sdiv.dr c d  
	{0x9d5b, &op_sdiv,	  3,   3, 255, 0xff, 0x01, 0x00, 0x02}, // sdiv.dr d d  
	{0x9d5c, &op_sdiv,	  4,   3, 255, 0xff, 0x01, 0x00, 0x02}, // sdiv.dr e d  
	{0x9d5d, &op_sdiv,	  5,   3, 255, 0xff, 0x01, 0x00, 0x02}, // sdiv.dr f d  
	{0x9d5e, &op_sdiv,	  6,   3, 255, 0xff, 0x01, 0x00, 0x02}, // sdiv.dr g d  
	{0x9d5f, &op_sdiv,	  7,   3, 255, 0xff, 0x01, 0x00, 0x02}, // sdiv.dr h d  
	{0x9d60, &op_sdiv,	  0,   4, 255, 0xff, 0x01, 0x00, 0x02}, // sdiv.dr a e  
	{0x9d61, &op_sdiv,	  1,   4, 255, 0xff, 0x01, 0x00, 0x02}, // sdiv.dr b e  
	{0x9d62, &op_sdiv,	  2,   4, 255, 0xff, 0x01, 0x00, 0x02}, // sdiv.dr c e  
	{0x9d63, &op_sdiv,	  3,   4, 255, 0xff, 0x01, 0x00, 0x02}, // sdiv.dr d e  
	{0x9d64, &op_sdiv,	  4,   4, 255, 0xff, 0x01, 0x00, 0x02}, // sdiv.dr e e  
	{0x9d65, &op_sdiv,	  5,   4, 255, 0xff, 0x01, 0x00, 0x02}, // sdiv.dr f e  
	{0x9d66, &op_sdiv,	  6,   4, 255, 0xff, 0x01, 0x00, 0x02}, // sdiv.dr g e  
	{0x9d67, &op_sdiv,	  7,   4, 255, 0xff, 0x01, 0x00, 0x02}, // sdiv.dr h e  
	{0x9d68, &op_sdiv,	  0,   5, 255, 0xff, 0x01, 0x00, 0x02}, // sdiv.dr a f  
	{0x9d69, &op_sdiv,	  1,   5, 255, 0xff, 0x01, 0x00, 0x02}, // sdiv.dr b f  
	{0x9d6a, &op_sdiv,	  2,   5, 255, 0xff, 0x01, 0x00, 0x02}, // sdiv.dr c f  
	{0x9d6b, &op_sdiv,	  3,   5, 255, 0xff, 0x01, 0x00, 0x02}, // sdiv.dr d f  
	{0x9d6c, &op_sdiv,	  4,   5, 255, 0xff, 0x01, 0x00, 0x02}, // sdiv.dr e f  
	{0x9d6d, &op_sdiv,	  5,   5, 255, 0xff, 0x01, 0x00, 0x02}, // sdiv.dr f f  
	{0x9d6e, &op_sdiv,	  6,   5, 255, 0xff, 0x01, 0x00, 0x02}, // sdiv.dr g f  
	{0x9d6f, &op_sdiv,	  7,   5, 255, 0xff, 0x01, 0x00, 0x02}, // sdiv.dr h f  
	{0x9d70, &op_sdiv,	  0,   6, 255, 0xff, 0x01, 0x00, 0x02}, // sdiv.dr a g  
	{0x9d71, &op_sdiv,	  1,   6, 255, 0xff, 0x01, 0x00, 0x02}, // sdiv.dr b g  
	{0x9d72, &op_sdiv,	  2,   6, 255, 0xff, 0x01, 0x00, 0x02}, // sdiv.dr c g  
	{0x9d73, &op_sdiv,	  3,   6, 255, 0xff, 0x01, 0x00, 0x02}, // sdiv.dr d g  
	{0x9d74, &op_sdiv,	  4,   6, 255, 0xff, 0x01, 0x00, 0x02}, // sdiv.dr e g  
	{0x9d75, &op_sdiv,	  5,   6, 255, 0xff, 0x01, 0x00, 0x02}, // sdiv.dr f g  
	{0x9d76, &op_sdiv,	  6,   6, 255, 0xff, 0x01, 0x00, 0x02}, // sdiv.dr g g  
	{0x9d77, &op_sdiv,	  7,   6, 255, 0xff, 0x01, 0x00, 0x02}, // sdiv.dr h g  
	{0x9d78, &op_sdiv,	  0,   7, 255, 0xff, 0x01, 0x00, 0x02}, // sdiv.dr a h  
	{0x9d79, &op_sdiv,	  1,   7, 255, 0xff, 0x01, 0x00, 0x02}, // sdiv.dr b h  
	{0x9d7a, &op_sdiv,	  2,   7, 255, 0xff, 0x01, 0x00, 0x02}, // sdiv.dr c h  
	{0x9d7b, &op_sdiv,	  3,   7, 255, 0xff, 0x01, 0x00, 0x02}, // sdiv.dr d h  
	{0x9d7c, &op_sdiv,	  4,   7, 255, 0xff, 0x01, 0x00, 0x02}, // sdiv.dr e h  
	{0x9d7d, &op_sdiv,	  5,   7, 255, 0xff, 0x01, 0x00, 0x02}, // sdiv.dr f h  
	{0x9d7e, &op_sdiv,	  6,   7, 255, 0xff, 0x01, 0x00, 0x02}, // sdiv.dr g h  
	{0x9d7f, &op_sdiv,	  7,   7, 255, 0xff, 0x01, 0x00, 0x02}, // sdiv.dr h h  
	{0x9d80, &op_sdiv,	  0,   0, 255, 0xff, 0x01, 0x00, 0x04}, // sdiv.r a a  
	{0x9d81, &op_sdiv,	  1,   0, 255, 0xff, 0x01, 0x00, 0x04}, // sdiv.r b a  
	{0x9d82, &op_sdiv,	  2,   0, 255, 0xff, 0x01, 0x00, 0x04}, // sdiv.r c a  
	{0x9d83, &op_sdiv,	  3,   0, 255, 0xff, 0x01, 0x00, 0x04}, // sdiv.r d a  
	{0x9d84, &op_sdiv,	  4,   0, 255, 0xff, 0x01, 0x00, 0x04}, // sdiv.r e a  
	{0x9d85, &op_sdiv,	  5,   0, 255, 0xff, 0x01, 0x00, 0x04}, // sdiv.r f a  
	{0x9d86, &op_sdiv,	  6,   0, 255, 0xff, 0x01, 0x00, 0x04}, // sdiv.r g a  
	{0x9d87, &op_sdiv,	  7,   0, 255, 0xff, 0x01, 0x00, 0x04}, // sdiv.r h a  
	{0x9d88, &op_sdiv,	  0,   1, 255, 0xff, 0x01, 0x00, 0x04}, // sdiv.r a b  
	{0x9d89, &op_sdiv,	  1,   1, 255, 0xff, 0x01, 0x00, 0x04}, // sdiv.r b b  
	{0x9d8a, &op_sdiv,	  2,   1, 255, 0xff, 0x01, 0x00, 0x04}, // sdiv.r c b  
	{0x9d8b, &op_sdiv,	  3,   1, 255, 0xff, 0x01, 0x00, 0x04}, // sdiv.r d b  
	{0x9d8c, &op_sdiv,	  4,   1, 255, 0xff, 0x01, 0x00, 0x04}, // sdiv.r e b  
	{0x9d8d, &op_sdiv,	  5,   1, 255, 0xff, 0x01, 0x00, 0x04}, // sdiv.r f b  
	{0x9d8e, &op_sdiv,	  6,   1, 255, 0xff, 0x01, 0x00, 0x04}, // sdiv.r g b  
	{0x9d8f, &op_sdiv,	  7,   1, 255, 0xff, 0x01, 0x00, 0x04}, // sdiv.r h b  
	{0x9d90, &op_sdiv,	  0,   2, 255, 0xff, 0x01, 0x00, 0x04}, // sdiv.r a c  
	{0x9d91, &op_sdiv,	  1,   2, 255, 0xff, 0x01, 0x00, 0x04}, // sdiv.r b c  
	{0x9d92, &op_sdiv,	  2,   2, 255, 0xff, 0x01, 0x00, 0x04}, // sdiv.r c c  
	{0x9d93, &op_sdiv,	  3,   2, 255, 0xff, 0x01, 0x00, 0x04}, // sdiv.r d c  
	{0x9d94, &op_sdiv,	  4,   2, 255, 0xff, 0x01, 0x00, 0x04}, // sdiv.r e c  
	{0x9d95, &op_sdiv,	  5,   2, 255, 0xff, 0x01, 0x00, 0x04}, // sdiv.r f c  
	{0x9d96, &op_sdiv,	  6,   2, 255, 0xff, 0x01, 0x00, 0x04}, // sdiv.r g c  
	{0x9d97, &op_sdiv,	  7,   2, 255, 0xff, 0x01, 0x00, 0x04}, // sdiv.r h c  
	{0x9d98, &op_sdiv,	  0,   3, 255, 0xff, 0x01, 0x00, 0x04}, // sdiv.r a d  
	{0x9d99, &op_sdiv,	  1,   3, 255, 0xff, 0x01, 0x00, 0x04}, // sdiv.r b d  
	{0x9d9a, &op_sdiv,	  2,   3, 255, 0xff, 0x01, 0x00, 0x04}, // sdiv.r c d  
	{0x9d9b, &op_sdiv,	  3,   3, 255, 0xff, 0x01, 0x00, 0x04}, // sdiv.r d d  
	{0x9d9c, &op_sdiv,	  4,   3, 255, 0xff, 0x01, 0x00, 0x04}, // sdiv.r e d  
	{0x9d9d, &op_sdiv,	  5,   3, 255, 0xff, 0x01, 0x00, 0x04}, // sdiv.r f d  
	{0x9d9e, &op_sdiv,	  6,   3, 255, 0xff, 0x01, 0x00, 0x04}, // sdiv.r g d  
	{0x9d9f, &op_sdiv,	  7,   3, 255, 0xff, 0x01, 0x00, 0x04}, // sdiv.r h d  
	{0x9da0, &op_sdiv,	  0,   4, 255, 0xff, 0x01, 0x00, 0x04}, // sdiv.r a e  
	{0x9da1, &op_sdiv,	  1,   4, 255, 0xff, 0x01, 0x00, 0x04}, // sdiv.r b e  
	{0x9da2, &op_sdiv,	  2,   4, 255, 0xff, 0x01, 0x00, 0x04}, // sdiv.r c e  
	{0x9da3, &op_sdiv,	  3,   4, 255, 0xff, 0x01, 0x00, 0x04}, // sdiv.r d e  
	{0x9da4, &op_sdiv,	  4,   4, 255, 0xff, 0x01, 0x00, 0x04}, // sdiv.r e e  
	{0x9da5, &op_sdiv,	  5,   4, 255, 0xff, 0x01, 0x00, 0x04}, // sdiv.r f e  
	{0x9da6, &op_sdiv,	  6,   4, 255, 0xff, 0x01, 0x00, 0x04}, // sdiv.r g e  
	{0x9da7, &op_sdiv,	  7,   4, 255, 0xff, 0x01, 0x00, 0x04}, // sdiv.r h e  
	{0x9da8, &op_sdiv,	  0,   5, 255, 0xff, 0x01, 0x00, 0x04}, // sdiv.r a f  
	{0x9da9, &op_sdiv,	  1,   5, 255, 0xff, 0x01, 0x00, 0x04}, // sdiv.r b f  
	{0x9daa, &op_sdiv,	  2,   5, 255, 0xff, 0x01, 0x00, 0x04}, // sdiv.r c f  
	{0x9dab, &op_sdiv,	  3,   5, 255, 0xff, 0x01, 0x00, 0x04}, // sdiv.r d f  
	{0x9dac, &op_sdiv,	  4,   5, 255, 0xff, 0x01, 0x00, 0x04}, // sdiv.r e f  
	{0x9dad, &op_sdiv,	  5,   5, 255, 0xff, 0x01, 0x00, 0x04}, // sdiv.r f f  
	{0x9dae, &op_sdiv,	  6,   5, 255, 0xff, 0x01, 0x00, 0x04}, // sdiv.r g f  
	{0x9daf, &op_sdiv,	  7,   5, 255, 0xff, 0x01, 0x00, 0x04}, // sdiv.r h f  
	{0x9db0, &op_sdiv,	  0,   6, 255, 0xff, 0x01, 0x00, 0x04}, // sdiv.r a g  
	{0x9db1, &op_sdiv,	  1,   6, 255, 0xff, 0x01, 0x00, 0x04}, // sdiv.r b g  
	{0x9db2, &op_sdiv,	  2,   6, 255, 0xff, 0x01, 0x00, 0x04}, // sdiv.r c g  
	{0x9db3, &op_sdiv,	  3,   6, 255, 0xff, 0x01, 0x00, 0x04}, // sdiv.r d g  
	{0x9db4, &op_sdiv,	  4,   6, 255, 0xff, 0x01, 0x00, 0x04}, // sdiv.r e g  
	{0x9db5, &op_sdiv,	  5,   6, 255, 0xff, 0x01, 0x00, 0x04}, // sdiv.r f g  
	{0x9db6, &op_sdiv,	  6,   6, 255, 0xff, 0x01, 0x00, 0x04}, // sdiv.r g g  
	{0x9db7, &op_sdiv,	  7,   6, 255, 0xff, 0x01, 0x00, 0x04}, // sdiv.r h g  
	{0x9db8, &op_sdiv,	  0,   7, 255, 0xff, 0x01, 0x00, 0x04}, // sdiv.r a h  
	{0x9db9, &op_sdiv,	  1,   7, 255, 0xff, 0x01, 0x00, 0x04}, // sdiv.r b h  
	{0x9dba, &op_sdiv,	  2,   7, 255, 0xff, 0x01, 0x00, 0x04}, // sdiv.r c h  
	{0x9dbb, &op_sdiv,	  3,   7, 255, 0xff, 0x01, 0x00, 0x04}, // sdiv.r d h  
	{0x9dbc, &op_sdiv,	  4,   7, 255, 0xff, 0x01, 0x00, 0x04}, // sdiv.r e h  
	{0x9dbd, &op_sdiv,	  5,   7, 255, 0xff, 0x01, 0x00, 0x04}, // sdiv.r f h  
	{0x9dbe, &op_sdiv,	  6,   7, 255, 0xff, 0x01, 0x00, 0x04}, // sdiv.r g h  
	{0x9dbf, &op_sdiv,	  7,   7, 255, 0xff, 0x01, 0x00, 0x04}, // sdiv.r h h  
	{0x9cc8, &op_sdiv,	  0,   8, 255, 0xff, 0x00, 0x01, 0x01}, // sdiv.wi a <literal>  
	{0x9cc9, &op_sdiv,	  1,   8, 255, 0xff, 0x00, 0x01, 0x01}, // sdiv.wi b <literal>  
	{0x9cca, &op_sdiv,	  2,   8, 255, 0xff, 0x00, 0x01, 0x01}, // sdiv.wi c <literal>  
	{0x9ccb, &op_sdiv,	  3,   8, 255, 0xff, 0x00, 0x01, 0x01}, // sdiv.wi d <literal>  
	{0x9ccc, &op_sdiv,	  4,   8, 255, 0xff, 0x00, 0x01, 0x01}, // sdiv.wi e <literal>  
	{0x9ccd, &op_sdiv,	  5,   8, 255, 0xff, 0x00, 0x01, 0x01}, // sdiv.wi f <literal>  
	{0x9cce, &op_sdiv,	  6,   8, 255, 0xff, 0x00, 0x01, 0x01}, // sdiv.wi g <literal>  
	{0x9ccf, &op_sdiv,	  7,   8, 255, 0xff, 0x00, 0x01, 0x01}, // sdiv.wi h <literal>  
	{0x9cd0, &op_sdiv,	  0,   8, 255, 0xff, 0x00, 0x02, 0x02}, // sdiv.di a <literal>  
	{0x9cd1, &op_sdiv,	  1,   8, 255, 0xff, 0x00, 0x02, 0x02}, // sdiv.di b <literal>  
	{0x9cd2, &op_sdiv,	  2,   8, 255, 0xff, 0x00, 0x02, 0x02}, // sdiv.di c <literal>  
	{0x9cd3, &op_sdiv,	  3,   8, 255, 0xff, 0x00, 0x02, 0x02}, // sdiv.di d <literal>  
	{0x9cd4, &op_sdiv,	  4,   8, 255, 0xff, 0x00, 0x02, 0x02}, // sdiv.di e <literal>  
	{0x9cd5, &op_sdiv,	  5,   8, 255, 0xff, 0x00, 0x02, 0x02}, // sdiv.di f <literal>  
	{0x9cd6, &op_sdiv,	  6,   8, 255, 0xff, 0x00, 0x02, 0x02}, // sdiv.di g <literal>  
	{0x9cd7, &op_sdiv,	  7,   8, 255, 0xff, 0x00, 0x02, 0x02}, // sdiv.di h <literal>  
	{0x9ce0, &op_sdiv,	  0,   8, 255, 0xff, 0x00, 0x04, 0x04}, // sdiv.i a <literal>  
	{0x9ce1, &op_sdiv,	  1,   8, 255, 0xff, 0x00, 0x04, 0x04}, // sdiv.i b <literal>  
	{0x9ce2, &op_sdiv,	  2,   8, 255, 0xff, 0x00, 0x04, 0x04}, // sdiv.i c <literal>  
	{0x9ce3, &op_sdiv,	  3,   8, 255, 0xff, 0x00, 0x04, 0x04}, // sdiv.i d <literal>  
	{0x9ce4, &op_sdiv,	  4,   8, 255, 0xff, 0x00, 0x04, 0x04}, // sdiv.i e <literal>  
	{0x9ce5, &op_sdiv,	  5,   8, 255, 0xff, 0x00, 0x04, 0x04}, // sdiv.i f <literal>  
	{0x9ce6, &op_sdiv,	  6,   8, 255, 0xff, 0x00, 0x04, 0x04}, // sdiv.i g <literal>  
	{0x9ce7, &op_sdiv,	  7,   8, 255, 0xff, 0x00, 0x04, 0x04}, // sdiv.i h <literal>  
	{0x9dc8, &op_sdiv,	  0,   8, 255, 0xff, 0x01, 0x04, 0x01}, // sdiv.wri a <literal>  
	{0x9dc9, &op_sdiv,	  1,   8, 255, 0xff, 0x01, 0x04, 0x01}, // sdiv.wri b <literal>  
	{0x9dca, &op_sdiv,	  2,   8, 255, 0xff, 0x01, 0x04, 0x01}, // sdiv.wri c <literal>  
	{0x9dcb, &op_sdiv,	  3,   8, 255, 0xff, 0x01, 0x04, 0x01}, // sdiv.wri d <literal>  
	{0x9dcc, &op_sdiv,	  4,   8, 255, 0xff, 0x01, 0x04, 0x01}, // sdiv.wri e <literal>  
	{0x9dcd, &op_sdiv,	  5,   8, 255, 0xff, 0x01, 0x04, 0x01}, // sdiv.wri f <literal>  
	{0x9dce, &op_sdiv,	  6,   8, 255, 0xff, 0x01, 0x04, 0x01}, // sdiv.wri g <literal>  
	{0x9dcf, &op_sdiv,	  7,   8, 255, 0xff, 0x01, 0x04, 0x01}, // sdiv.wri h <literal>  
	{0x9dd0, &op_sdiv,	  0,   8, 255, 0xff, 0x01, 0x04, 0x02}, // sdiv.dri a <literal>  
	{0x9dd1, &op_sdiv,	  1,   8, 255, 0xff, 0x01, 0x04, 0x02}, // sdiv.dri b <literal>  
	{0x9dd2, &op_sdiv,	  2,   8, 255, 0xff, 0x01, 0x04, 0x02}, // sdiv.dri c <literal>  
	{0x9dd3, &op_sdiv,	  3,   8, 255, 0xff, 0x01, 0x04, 0x02}, // sdiv.dri d <literal>  
	{0x9dd4, &op_sdiv,	  4,   8, 255, 0xff, 0x01, 0x04, 0x02}, // sdiv.dri e <literal>  
	{0x9dd5, &op_sdiv,	  5,   8, 255, 0xff, 0x01, 0x04, 0x02}, // sdiv.dri f <literal>  
	{0x9dd6, &op_sdiv,	  6,   8, 255, 0xff, 0x01, 0x04, 0x02}, // sdiv.dri g <literal>  
	{0x9dd7, &op_sdiv,	  7,   8, 255, 0xff, 0x01, 0x04, 0x02}, // sdiv.dri h <literal>  
	{0x9de0, &op_sdiv,	  0,   8, 255, 0xff, 0x01, 0x04, 0x04}, // sdiv.ri a <literal>  
	{0x9de1, &op_sdiv,	  1,   8, 255, 0xff, 0x01, 0x04, 0x04}, // sdiv.ri b <literal>  
	{0x9de2, &op_sdiv,	  2,   8, 255, 0xff, 0x01, 0x04, 0x04}, // sdiv.ri c <literal>  
	{0x9de3, &op_sdiv,	  3,   8, 255, 0xff, 0x01, 0x04, 0x04}, // sdiv.ri d <literal>  
	{0x9de4, &op_sdiv,	  4,   8, 255, 0xff, 0x01, 0x04, 0x04}, // sdiv.ri e <literal>  
	{0x9de5, &op_sdiv,	  5,   8, 255, 0xff, 0x01, 0x04, 0x04}, // sdiv.ri f <literal>  
	{0x9de6, &op_sdiv,	  6,   8, 255, 0xff, 0x01, 0x04, 0x04}, // sdiv.ri g <literal>  
	{0x9de7, &op_sdiv,	  7,   8, 255, 0xff, 0x01, 0x04, 0x04}, // sdiv.ri h <literal>  
	{0x9e00, &op_scmp,	  0,   0, 255, 0xff, 0x00, 0x00, 0x01}, // scmp.w a a  
	{0x9e01, &op_scmp,	  1,   0, 255, 0xff, 0x00, 0x00, 0x01}, // scmp.w b a  
	{0x9e02, &op_scmp,	  2,   0, 255, 0xff, 0x00, 0x00, 0x01}, // scmp.w c a  
	{0x9e03, &op_scmp,	  3,   0, 255, 0xff, 0x00, 0x00, 0x01}, // scmp.w d a  
	{0x9e04, &op_scmp,	  4,   0, 255, 0xff, 0x00, 0x00, 0x01}, // scmp.w e a  
	{0x9e05, &op_scmp,	  5,   0, 255, 0xff, 0x00, 0x00, 0x01}, // scmp.w f a  
	{0x9e06, &op_scmp,	  6,   0, 255, 0xff, 0x00, 0x00, 0x01}, // scmp.w g a  
	{0x9e07, &op_scmp,	  7,   0, 255, 0xff, 0x00, 0x00, 0x01}, // scmp.w h a  
	{0x9e08, &op_scmp,	  0,   1, 255, 0xff, 0x00, 0x00, 0x01}, // scmp.w a b  
	{0x9e09, &op_scmp,	  1,   1, 255, 0xff, 0x00, 0x00, 0x01}, // scmp.w b b  
	{0x9e0a, &op_scmp,	  2,   1, 255, 0xff, 0x00, 0x00, 0x01}, // scmp.w c b  
	{0x9e0b, &op_scmp,	  3,   1, 255, 0xff, 0x00, 0x00, 0x01}, // scmp.w d b  
	{0x9e0c, &op_scmp,	  4,   1, 255, 0xff, 0x00, 0x00, 0x01}, // scmp.w e b  
	{0x9e0d, &op_scmp,	  5,   1, 255, 0xff, 0x00, 0x00, 0x01}, // scmp.w f b  
	{0x9e0e, &op_scmp,	  6,   1, 255, 0xff, 0x00, 0x00, 0x01}, // scmp.w g b  
	{0x9e0f, &op_scmp,	  7,   1, 255, 0xff, 0x00, 0x00, 0x01}, // scmp.w h b  
	{0x9e10, &op_scmp,	  0,   2, 255, 0xff, 0x00, 0x00, 0x01}, // scmp.w a c  
	{0x9e11, &op_scmp,	  1,   2, 255, 0xff, 0x00, 0x00, 0x01}, // scmp.w b c  
	{0x9e12, &op_scmp,	  2,   2, 255, 0xff, 0x00, 0x00, 0x01}, // scmp.w c c  
	{0x9e13, &op_scmp,	  3,   2, 255, 0xff, 0x00, 0x00, 0x01}, // scmp.w d c  
	{0x9e14, &op_scmp,	  4,   2, 255, 0xff, 0x00, 0x00, 0x01}, // scmp.w e c  
	{0x9e15, &op_scmp,	  5,   2, 255, 0xff, 0x00, 0x00, 0x01}, // scmp.w f c  
	{0x9e16, &op_scmp,	  6,   2, 255, 0xff, 0x00, 0x00, 0x01}, // scmp.w g c  
	{0x9e17, &op_scmp,	  7,   2, 255, 0xff, 0x00, 0x00, 0x01}, // scmp.w h c  
	{0x9e18, &op_scmp,	  0,   3, 255, 0xff, 0x00, 0x00, 0x01}, // scmp.w a d  
	{0x9e19, &op_scmp,	  1,   3, 255, 0xff, 0x00, 0x00, 0x01}, // scmp.w b d  
	{0x9e1a, &op_scmp,	  2,   3, 255, 0xff, 0x00, 0x00, 0x01}, // scmp.w c d  
	{0x9e1b, &op_scmp,	  3,   3, 255, 0xff, 0x00, 0x00, 0x01}, // scmp.w d d  
	{0x9e1c, &op_scmp,	  4,   3, 255, 0xff, 0x00, 0x00, 0x01}, // scmp.w e d  
	{0x9e1d, &op_scmp,	  5,   3, 255, 0xff, 0x00, 0x00, 0x01}, // scmp.w f d  
	{0x9e1e, &op_scmp,	  6,   3, 255, 0xff, 0x00, 0x00, 0x01}, // scmp.w g d  
	{0x9e1f, &op_scmp,	  7,   3, 255, 0xff, 0x00, 0x00, 0x01}, // scmp.w h d  
	{0x9e20, &op_scmp,	  0,   4, 255, 0xff, 0x00, 0x00, 0x01}, // scmp.w a e  
	{0x9e21, &op_scmp,	  1,   4, 255, 0xff, 0x00, 0x00, 0x01}, // scmp.w b e  
	{0x9e22, &op_scmp,	  2,   4, 255, 0xff, 0x00, 0x00, 0x01}, // scmp.w c e  
	{0x9e23, &op_scmp,	  3,   4, 255, 0xff, 0x00, 0x00, 0x01}, // scmp.w d e  
	{0x9e24, &op_scmp,	  4,   4, 255, 0xff, 0x00, 0x00, 0x01}, // scmp.w e e  
	{0x9e25, &op_scmp,	  5,   4, 255, 0xff, 0x00, 0x00, 0x01}, // scmp.w f e  
	{0x9e26, &op_scmp,	  6,   4, 255, 0xff, 0x00, 0x00, 0x01}, // scmp.w g e  
	{0x9e27, &op_scmp,	  7,   4, 255, 0xff, 0x00, 0x00, 0x01}, // scmp.w h e  
	{0x9e28, &op_scmp,	  0,   5, 255, 0xff, 0x00, 0x00, 0x01}, // scmp.w a f  
	{0x9e29, &op_scmp,	  1,   5, 255, 0xff, 0x00, 0x00, 0x01}, // scmp.w b f  
	{0x9e2a, &op_scmp,	  2,   5, 255, 0xff, 0x00, 0x00, 0x01}, // scmp.w c f  
	{0x9e2b, &op_scmp,	  3,   5, 255, 0xff, 0x00, 0x00, 0x01}, // scmp.w d f  
	{0x9e2c, &op_scmp,	  4,   5, 255, 0xff, 0x00, 0x00, 0x01}, // scmp.w e f  
	{0x9e2d, &op_scmp,	  5,   5, 255, 0xff, 0x00, 0x00, 0x01}, // scmp.w f f  
	{0x9e2e, &op_scmp,	  6,   5, 255, 0xff, 0x00, 0x00, 0x01}, // scmp.w g f  
	{0x9e2f, &op_scmp,	  7,   5, 255, 0xff, 0x00, 0x00, 0x01}, // scmp.w h f  
	{0x9e30, &op_scmp,	  0,   6, 255, 0xff, 0x00, 0x00, 0x01}, // scmp.w a g  
	{0x9e31, &op_scmp,	  1,   6, 255, 0xff, 0x00, 0x00, 0x01}, // scmp.w b g  
	{0x9e32, &op_scmp,	  2,   6, 255, 0xff, 0x00, 0x00, 0x01}, // scmp.w c g  
	{0x9e33, &op_scmp,	  3,   6, 255, 0xff, 0x00, 0x00, 0x01}, // scmp.w d g  
	{0x9e34, &op_scmp,	  4,   6, 255, 0xff, 0x00, 0x00, 0x01}, // scmp.w e g  
	{0x9e35, &op_scmp,	  5,   6, 255, 0xff, 0x00, 0x00, 0x01}, // scmp.w f g  
	{0x9e36, &op_scmp,	  6,   6, 255, 0xff, 0x00, 0x00, 0x01}, // scmp.w g g  
	{0x9e37, &op_scmp,	  7,   6, 255, 0xff, 0x00, 0x00, 0x01}, // scmp.w h g  
	{0x9e38, &op_scmp,	  0,   7, 255, 0xff, 0x00, 0x00, 0x01}, // scmp.w a h  
	{0x9e39, &op_scmp,	  1,   7, 255, 0xff, 0x00, 0x00, 0x01}, // scmp.w b h  
	{0x9e3a, &op_scmp,	  2,   7, 255, 0xff, 0x00, 0x00, 0x01}, // scmp.w c h  
	{0x9e3b, &op_scmp,	  3,   7, 255, 0xff, 0x00, 0x00, 0x01}, // scmp.w d h  
	{0x9e3c, &op_scmp,	  4,   7, 255, 0xff, 0x00, 0x00, 0x01}, // scmp.w e h  
	{0x9e3d, &op_scmp,	  5,   7, 255, 0xff, 0x00, 0x00, 0x01}, // scmp.w f h  
	{0x9e3e, &op_scmp,	  6,   7, 255, 0xff, 0x00, 0x00, 0x01}, // scmp.w g h  
	{0x9e3f, &op_scmp,	  7,   7, 255, 0xff, 0x00, 0x00, 0x01}, // scmp.w h h  
	{0x9e40, &op_scmp,	  0,   0, 255, 0xff, 0x00, 0x00, 0x02}, // scmp.d a a  
	{0x9e41, &op_scmp,	  1,   0, 255, 0xff, 0x00, 0x00, 0x02}, // scmp.d b a  
	{0x9e42, &op_scmp,	  2,   0, 255, 0xff, 0x00, 0x00, 0x02}, // scmp.d c a  
	{0x9e43, &op_scmp,	  3,   0, 255, 0xff, 0x00, 0x00, 0x02}, // scmp.d d a  
	{0x9e44, &op_scmp,	  4,   0, 255, 0xff, 0x00, 0x00, 0x02}, // scmp.d e a  
	{0x9e45, &op_scmp,	  5,   0, 255, 0xff, 0x00, 0x00, 0x02}, // scmp.d f a  
	{0x9e46, &op_scmp,	  6,   0, 255, 0xff, 0x00, 0x00, 0x02}, // scmp.d g a  
	{0x9e47, &op_scmp,	  7,   0, 255, 0xff, 0x00, 0x00, 0x02}, // scmp.d h a  
	{0x9e48, &op_scmp,	  0,   1, 255, 0xff, 0x00, 0x00, 0x02}, // scmp.d a b  
	{0x9e49, &op_scmp,	  1,   1, 255, 0xff, 0x00, 0x00, 0x02}, // scmp.d b b  
	{0x9e4a, &op_scmp,	  2,   1, 255, 0xff, 0x00, 0x00, 0x02}, // scmp.d c b  
	{0x9e4b, &op_scmp,	  3,   1, 255, 0xff, 0x00, 0x00, 0x02}, // scmp.d d b  
	{0x9e4c, &op_scmp,	  4,   1, 255, 0xff, 0x00, 0x00, 0x02}, // scmp.d e b  
	{0x9e4d, &op_scmp,	  5,   1, 255, 0xff, 0x00, 0x00, 0x02}, // scmp.d f b  
	{0x9e4e, &op_scmp,	  6,   1, 255, 0xff, 0x00, 0x00, 0x02}, // scmp.d g b  
	{0x9e4f, &op_scmp,	  7,   1, 255, 0xff, 0x00, 0x00, 0x02}, // scmp.d h b  
	{0x9e50, &op_scmp,	  0,   2, 255, 0xff, 0x00, 0x00, 0x02}, // scmp.d a c  
	{0x9e51, &op_scmp,	  1,   2, 255, 0xff, 0x00, 0x00, 0x02}, // scmp.d b c  
	{0x9e52, &op_scmp,	  2,   2, 255, 0xff, 0x00, 0x00, 0x02}, // scmp.d c c  
	{0x9e53, &op_scmp,	  3,   2, 255, 0xff, 0x00, 0x00, 0x02}, // scmp.d d c  
	{0x9e54, &op_scmp,	  4,   2, 255, 0xff, 0x00, 0x00, 0x02}, // scmp.d e c  
	{0x9e55, &op_scmp,	  5,   2, 255, 0xff, 0x00, 0x00, 0x02}, // scmp.d f c  
	{0x9e56, &op_scmp,	  6,   2, 255, 0xff, 0x00, 0x00, 0x02}, // scmp.d g c  
	{0x9e57, &op_scmp,	  7,   2, 255, 0xff, 0x00, 0x00, 0x02}, // scmp.d h c  
	{0x9e58, &op_scmp,	  0,   3, 255, 0xff, 0x00, 0x00, 0x02}, // scmp.d a d  
	{0x9e59, &op_scmp,	  1,   3, 255, 0xff, 0x00, 0x00, 0x02}, // scmp.d b d  
	{0x9e5a, &op_scmp,	  2,   3, 255, 0xff, 0x00, 0x00, 0x02}, // scmp.d c d  
	{0x9e5b, &op_scmp,	  3,   3, 255, 0xff, 0x00, 0x00, 0x02}, // scmp.d d d  
	{0x9e5c, &op_scmp,	  4,   3, 255, 0xff, 0x00, 0x00, 0x02}, // scmp.d e d  
	{0x9e5d, &op_scmp,	  5,   3, 255, 0xff, 0x00, 0x00, 0x02}, // scmp.d f d  
	{0x9e5e, &op_scmp,	  6,   3, 255, 0xff, 0x00, 0x00, 0x02}, // scmp.d g d  
	{0x9e5f, &op_scmp,	  7,   3, 255, 0xff, 0x00, 0x00, 0x02}, // scmp.d h d  
	{0x9e60, &op_scmp,	  0,   4, 255, 0xff, 0x00, 0x00, 0x02}, // scmp.d a e  
	{0x9e61, &op_scmp,	  1,   4, 255, 0xff, 0x00, 0x00, 0x02}, // scmp.d b e  
	{0x9e62, &op_scmp,	  2,   4, 255, 0xff, 0x00, 0x00, 0x02}, // scmp.d c e  
	{0x9e63, &op_scmp,	  3,   4, 255, 0xff, 0x00, 0x00, 0x02}, // scmp.d d e  
	{0x9e64, &op_scmp,	  4,   4, 255, 0xff, 0x00, 0x00, 0x02}, // scmp.d e e  
	{0x9e65, &op_scmp,	  5,   4, 255, 0xff, 0x00, 0x00, 0x02}, // scmp.d f e  
	{0x9e66, &op_scmp,	  6,   4, 255, 0xff, 0x00, 0x00, 0x02}, // scmp.d g e  
	{0x9e67, &op_scmp,	  7,   4, 255, 0xff, 0x00, 0x00, 0x02}, // scmp.d h e  
	{0x9e68, &op_scmp,	  0,   5, 255, 0xff, 0x00, 0x00, 0x02}, // scmp.d a f  
	{0x9e69, &op_scmp,	  1,   5, 255, 0xff, 0x00, 0x00, 0x02}, // scmp.d b f  
	{0x9e6a, &op_scmp,	  2,   5, 255, 0xff, 0x00, 0x00, 0x02}, // scmp.d c f  
	{0x9e6b, &op_scmp,	  3,   5, 255, 0xff, 0x00, 0x00, 0x02}, // scmp.d d f  
	{0x9e6c, &op_scmp,	  4,   5, 255, 0xff, 0x00, 0x00, 0x02}, // scmp.d e f  
	{0x9e6d, &op_scmp,	  5,   5, 255, 0xff, 0x00, 0x00, 0x02}, // scmp.d f f  
	{0x9e6e, &op_scmp,	  6,   5, 255, 0xff, 0x00, 0x00, 0x02}, // scmp.d g f  
	{0x9e6f, &op_scmp,	  7,   5, 255, 0xff, 0x00, 0x00, 0x02}, // scmp.d h f  
	{0x9e70, &op_scmp,	  0,   6, 255, 0xff, 0x00, 0x00, 0x02}, // scmp.d a g  
	{0x9e71, &op_scmp,	  1,   6, 255, 0xff, 0x00, 0x00, 0x02}, // scmp.d b g  
	{0x9e72, &op_scmp,	  2,   6, 255, 0xff, 0x00, 0x00, 0x02}, // scmp.d c g  
	{0x9e73, &op_scmp,	  3,   6, 255, 0xff, 0x00, 0x00, 0x02}, // scmp.d d g  
	{0x9e74, &op_scmp,	  4,   6, 255, 0xff, 0x00, 0x00, 0x02}, // scmp.d e g  
	{0x9e75, &op_scmp,	  5,   6, 255, 0xff, 0x00, 0x00, 0x02}, // scmp.d f g  
	{0x9e76, &op_scmp,	  6,   6, 255, 0xff, 0x00, 0x00, 0x02}, // scmp.d g g  
	{0x9e77, &op_scmp,	  7,   6, 255, 0xff, 0x00, 0x00, 0x02}, // scmp.d h g  
	{0x9e78, &op_scmp,	  0,   7, 255, 0xff, 0x00, 0x00, 0x02}, // scmp.d a h  
	{0x9e79, &op_scmp,	  1,   7, 255, 0xff, 0x00, 0x00, 0x02}, // scmp.d b h  
	{0x9e7a, &op_scmp,	  2,   7, 255, 0xff, 0x00, 0x00, 0x02}, // scmp.d c h  
	{0x9e7b, &op_scmp,	  3,   7, 255, 0xff, 0x00, 0x00, 0x02}, // scmp.d d h  
	{0x9e7c, &op_scmp,	  4,   7, 255, 0xff, 0x00, 0x00, 0x02}, // scmp.d e h  
	{0x9e7d, &op_scmp,	  5,   7, 255, 0xff, 0x00, 0x00, 0x02}, // scmp.d f h  
	{0x9e7e, &op_scmp,	  6,   7, 255, 0xff, 0x00, 0x00, 0x02}, // scmp.d g h  
	{0x9e7f, &op_scmp,	  7,   7, 255, 0xff, 0x00, 0x00, 0x02}, // scmp.d h h  
	{0x9e80, &op_scmp,	  0,   0, 255, 0xff, 0x00, 0x00, 0x04}, // scmp a a  
	{0x9e81, &op_scmp,	  1,   0, 255, 0xff, 0x00, 0x00, 0x04}, // scmp b a  
	{0x9e82, &op_scmp,	  2,   0, 255, 0xff, 0x00, 0x00, 0x04}, // scmp c a  
	{0x9e83, &op_scmp,	  3,   0, 255, 0xff, 0x00, 0x00, 0x04}, // scmp d a  
	{0x9e84, &op_scmp,	  4,   0, 255, 0xff, 0x00, 0x00, 0x04}, // scmp e a  
	{0x9e85, &op_scmp,	  5,   0, 255, 0xff, 0x00, 0x00, 0x04}, // scmp f a  
	{0x9e86, &op_scmp,	  6,   0, 255, 0xff, 0x00, 0x00, 0x04}, // scmp g a  
	{0x9e87, &op_scmp,	  7,   0, 255, 0xff, 0x00, 0x00, 0x04}, // scmp h a  
	{0x9e88, &op_scmp,	  0,   1, 255, 0xff, 0x00, 0x00, 0x04}, // scmp a b  
	{0x9e89, &op_scmp,	  1,   1, 255, 0xff, 0x00, 0x00, 0x04}, // scmp b b  
	{0x9e8a, &op_scmp,	  2,   1, 255, 0xff, 0x00, 0x00, 0x04}, // scmp c b  
	{0x9e8b, &op_scmp,	  3,   1, 255, 0xff, 0x00, 0x00, 0x04}, // scmp d b  
	{0x9e8c, &op_scmp,	  4,   1, 255, 0xff, 0x00, 0x00, 0x04}, // scmp e b  
	{0x9e8d, &op_scmp,	  5,   1, 255, 0xff, 0x00, 0x00, 0x04}, // scmp f b  
	{0x9e8e, &op_scmp,	  6,   1, 255, 0xff, 0x00, 0x00, 0x04}, // scmp g b  
	{0x9e8f, &op_scmp,	  7,   1, 255, 0xff, 0x00, 0x00, 0x04}, // scmp h b  
	{0x9e90, &op_scmp,	  0,   2, 255, 0xff, 0x00, 0x00, 0x04}, // scmp a c  
	{0x9e91, &op_scmp,	  1,   2, 255, 0xff, 0x00, 0x00, 0x04}, // scmp b c  
	{0x9e92, &op_scmp,	  2,   2, 255, 0xff, 0x00, 0x00, 0x04}, // scmp c c  
	{0x9e93, &op_scmp,	  3,   2, 255, 0xff, 0x00, 0x00, 0x04}, // scmp d c  
	{0x9e94, &op_scmp,	  4,   2, 255, 0xff, 0x00, 0x00, 0x04}, // scmp e c  
	{0x9e95, &op_scmp,	  5,   2, 255, 0xff, 0x00, 0x00, 0x04}, // scmp f c  
	{0x9e96, &op_scmp,	  6,   2, 255, 0xff, 0x00, 0x00, 0x04}, // scmp g c  
	{0x9e97, &op_scmp,	  7,   2, 255, 0xff, 0x00, 0x00, 0x04}, // scmp h c  
	{0x9e98, &op_scmp,	  0,   3, 255, 0xff, 0x00, 0x00, 0x04}, // scmp a d  
	{0x9e99, &op_scmp,	  1,   3, 255, 0xff, 0x00, 0x00, 0x04}, // scmp b d  
	{0x9e9a, &op_scmp,	  2,   3, 255, 0xff, 0x00, 0x00, 0x04}, // scmp c d  
	{0x9e9b, &op_scmp,	  3,   3, 255, 0xff, 0x00, 0x00, 0x04}, // scmp d d  
	{0x9e9c, &op_scmp,	  4,   3, 255, 0xff, 0x00, 0x00, 0x04}, // scmp e d  
	{0x9e9d, &op_scmp,	  5,   3, 255, 0xff, 0x00, 0x00, 0x04}, // scmp f d  
	{0x9e9e, &op_scmp,	  6,   3, 255, 0xff, 0x00, 0x00, 0x04}, // scmp g d  
	{0x9e9f, &op_scmp,	  7,   3, 255, 0xff, 0x00, 0x00, 0x04}, // scmp h d  
	{0x9ea0, &op_scmp,	  0,   4, 255, 0xff, 0x00, 0x00, 0x04}, // scmp a e  
	{0x9ea1, &op_scmp,	  1,   4, 255, 0xff, 0x00, 0x00, 0x04}, // scmp b e  
	{0x9ea2, &op_scmp,	  2,   4, 255, 0xff, 0x00, 0x00, 0x04}, // scmp c e  
	{0x9ea3, &op_scmp,	  3,   4, 255, 0xff, 0x00, 0x00, 0x04}, // scmp d e  
	{0x9ea4, &op_scmp,	  4,   4, 255, 0xff, 0x00, 0x00, 0x04}, // scmp e e  
	{0x9ea5, &op_scmp,	  5,   4, 255, 0xff, 0x00, 0x00, 0x04}, // scmp f e  
	{0x9ea6, &op_scmp,	  6,   4, 255, 0xff, 0x00, 0x00, 0x04}, // scmp g e  
	{0x9ea7, &op_scmp,	  7,   4, 255, 0xff, 0x00, 0x00, 0x04}, // scmp h e  
	{0x9ea8, &op_scmp,	  0,   5, 255, 0xff, 0x00, 0x00, 0x04}, // scmp a f  
	{0x9ea9, &op_scmp,	  1,   5, 255, 0xff, 0x00, 0x00, 0x04}, // scmp b f  
	{0x9eaa, &op_scmp,	  2,   5, 255, 0xff, 0x00, 0x00, 0x04}, // scmp c f  
	{0x9eab, &op_scmp,	  3,   5, 255, 0xff, 0x00, 0x00, 0x04}, // scmp d f  
	{0x9eac, &op_scmp,	  4,   5, 255, 0xff, 0x00, 0x00, 0x04}, // scmp e f  
	{0x9ead, &op_scmp,	  5,   5, 255, 0xff, 0x00, 0x00, 0x04}, // scmp f f  
	{0x9eae, &op_scmp,	  6,   5, 255, 0xff, 0x00, 0x00, 0x04}, // scmp g f  
	{0x9eaf, &op_scmp,	  7,   5, 255, 0xff, 0x00, 0x00, 0x04}, // scmp h f  
	{0x9eb0, &op_scmp,	  0,   6, 255, 0xff, 0x00, 0x00, 0x04}, // scmp a g  
	{0x9eb1, &op_scmp,	  1,   6, 255, 0xff, 0x00, 0x00, 0x04}, // scmp b g  
	{0x9eb2, &op_scmp,	  2,   6, 255, 0xff, 0x00, 0x00, 0x04}, // scmp c g  
	{0x9eb3, &op_scmp,	  3,   6, 255, 0xff, 0x00, 0x00, 0x04}, // scmp d g  
	{0x9eb4, &op_scmp,	  4,   6, 255, 0xff, 0x00, 0x00, 0x04}, // scmp e g  
	{0x9eb5, &op_scmp,	  5,   6, 255, 0xff, 0x00, 0x00, 0x04}, // scmp f g  
	{0x9eb6, &op_scmp,	  6,   6, 255, 0xff, 0x00, 0x00, 0x04}, // scmp g g  
	{0x9eb7, &op_scmp,	  7,   6, 255, 0xff, 0x00, 0x00, 0x04}, // scmp h g  
	{0x9eb8, &op_scmp,	  0,   7, 255, 0xff, 0x00, 0x00, 0x04}, // scmp a h  
	{0x9eb9, &op_scmp,	  1,   7, 255, 0xff, 0x00, 0x00, 0x04}, // scmp b h  
	{0x9eba, &op_scmp,	  2,   7, 255, 0xff, 0x00, 0x00, 0x04}, // scmp c h  
	{0x9ebb, &op_scmp,	  3,   7, 255, 0xff, 0x00, 0x00, 0x04}, // scmp d h  
	{0x9ebc, &op_scmp,	  4,   7, 255, 0xff, 0x00, 0x00, 0x04}, // scmp e h  
	{0x9ebd, &op_scmp,	  5,   7, 255, 0xff, 0x00, 0x00, 0x04}, // scmp f h  
	{0x9ebe, &op_scmp,	  6,   7, 255, 0xff, 0x00, 0x00, 0x04}, // scmp g h  
	{0x9ebf, &op_scmp,	  7,   7, 255, 0xff, 0x00, 0x00, 0x04}, // scmp h h  
	{0x9f00, &op_scmp,	  0,   0, 255, 0xff, 0x01, 0x00, 0x01}, // scmp.wr a a  
	{0x9f01, &op_scmp,	  1,   0, 255, 0xff, 0x01, 0x00, 0x01}, // scmp.wr b a  
	{0x9f02, &op_scmp,	  2,   0, 255, 0xff, 0x01, 0x00, 0x01}, // scmp.wr c a  
	{0x9f03, &op_scmp,	  3,   0, 255, 0xff, 0x01, 0x00, 0x01}, // scmp.wr d a  
	{0x9f04, &op_scmp,	  4,   0, 255, 0xff, 0x01, 0x00, 0x01}, // scmp.wr e a  
	{0x9f05, &op_scmp,	  5,   0, 255, 0xff, 0x01, 0x00, 0x01}, // scmp.wr f a  
	{0x9f06, &op_scmp,	  6,   0, 255, 0xff, 0x01, 0x00, 0x01}, // scmp.wr g a  
	{0x9f07, &op_scmp,	  7,   0, 255, 0xff, 0x01, 0x00, 0x01}, // scmp.wr h a  
	{0x9f08, &op_scmp,	  0,   1, 255, 0xff, 0x01, 0x00, 0x01}, // scmp.wr a b  
	{0x9f09, &op_scmp,	  1,   1, 255, 0xff, 0x01, 0x00, 0x01}, // scmp.wr b b  
	{0x9f0a, &op_scmp,	  2,   1, 255, 0xff, 0x01, 0x00, 0x01}, // scmp.wr c b  
	{0x9f0b, &op_scmp,	  3,   1, 255, 0xff, 0x01, 0x00, 0x01}, // scmp.wr d b  
	{0x9f0c, &op_scmp,	  4,   1, 255, 0xff, 0x01, 0x00, 0x01}, // scmp.wr e b  
	{0x9f0d, &op_scmp,	  5,   1, 255, 0xff, 0x01, 0x00, 0x01}, // scmp.wr f b  
	{0x9f0e, &op_scmp,	  6,   1, 255, 0xff, 0x01, 0x00, 0x01}, // scmp.wr g b  
	{0x9f0f, &op_scmp,	  7,   1, 255, 0xff, 0x01, 0x00, 0x01}, // scmp.wr h b  
	{0x9f10, &op_scmp,	  0,   2, 255, 0xff, 0x01, 0x00, 0x01}, // scmp.wr a c  
	{0x9f11, &op_scmp,	  1,   2, 255, 0xff, 0x01, 0x00, 0x01}, // scmp.wr b c  
	{0x9f12, &op_scmp,	  2,   2, 255, 0xff, 0x01, 0x00, 0x01}, // scmp.wr c c  
	{0x9f13, &op_scmp,	  3,   2, 255, 0xff, 0x01, 0x00, 0x01}, // scmp.wr d c  
	{0x9f14, &op_scmp,	  4,   2, 255, 0xff, 0x01, 0x00, 0x01}, // scmp.wr e c  
	{0x9f15, &op_scmp,	  5,   2, 255, 0xff, 0x01, 0x00, 0x01}, // scmp.wr f c  
	{0x9f16, &op_scmp,	  6,   2, 255, 0xff, 0x01, 0x00, 0x01}, // scmp.wr g c  
	{0x9f17, &op_scmp,	  7,   2, 255, 0xff, 0x01, 0x00, 0x01}, // scmp.wr h c  
	{0x9f18, &op_scmp,	  0,   3, 255, 0xff, 0x01, 0x00, 0x01}, // scmp.wr a d  
	{0x9f19, &op_scmp,	  1,   3, 255, 0xff, 0x01, 0x00, 0x01}, // scmp.wr b d  
	{0x9f1a, &op_scmp,	  2,   3, 255, 0xff, 0x01, 0x00, 0x01}, // scmp.wr c d  
	{0x9f1b, &op_scmp,	  3,   3, 255, 0xff, 0x01, 0x00, 0x01}, // scmp.wr d d  
	{0x9f1c, &op_scmp,	  4,   3, 255, 0xff, 0x01, 0x00, 0x01}, // scmp.wr e d  
	{0x9f1d, &op_scmp,	  5,   3, 255, 0xff, 0x01, 0x00, 0x01}, // scmp.wr f d  
	{0x9f1e, &op_scmp,	  6,   3, 255, 0xff, 0x01, 0x00, 0x01}, // scmp.wr g d  
	{0x9f1f, &op_scmp,	  7,   3, 255, 0xff, 0x01, 0x00, 0x01}, // scmp.wr h d  
	{0x9f20, &op_scmp,	  0,   4, 255, 0xff, 0x01, 0x00, 0x01}, // scmp.wr a e  
	{0x9f21, &op_scmp,	  1,   4, 255, 0xff, 0x01, 0x00, 0x01}, // scmp.wr b e  
	{0x9f22, &op_scmp,	  2,   4, 255, 0xff, 0x01, 0x00, 0x01}, // scmp.wr c e  
	{0x9f23, &op_scmp,	  3,   4, 255, 0xff, 0x01, 0x00, 0x01}, // scmp.wr d e  
	{0x9f24, &op_scmp,	  4,   4, 255, 0xff, 0x01, 0x00, 0x01}, // scmp.wr e e  
	{0x9f25, &op_scmp,	  5,   4, 255, 0xff, 0x01, 0x00, 0x01}, // scmp.wr f e  
	{0x9f26, &op_scmp,	  6,   4, 255, 0xff, 0x01, 0x00, 0x01}, // scmp.wr g e  
	{0x9f27, &op_scmp,	  7,   4, 255, 0xff, 0x01, 0x00, 0x01}, // scmp.wr h e  
	{0x9f28, &op_scmp,	  0,   5, 255, 0xff, 0x01, 0x00, 0x01}, // scmp.wr a f  
	{0x9f29, &op_scmp,	  1,   5, 255, 0xff, 0x01, 0x00, 0x01}, // scmp.wr b f  
	{0x9f2a, &op_scmp,	  2,   5, 255, 0xff, 0x01, 0x00, 0x01}, // scmp.wr c f  
	{0x9f2b, &op_scmp,	  3,   5, 255, 0xff, 0x01, 0x00, 0x01}, // scmp.wr d f  
	{0x9f2c, &op_scmp,	  4,   5, 255, 0xff, 0x01, 0x00, 0x01}, // scmp.wr e f  
	{0x9f2d, &op_scmp,	  5,   5, 255, 0xff, 0x01, 0x00, 0x01}, // scmp.wr f f  
	{0x9f2e, &op_scmp,	  6,   5, 255, 0xff, 0x01, 0x00, 0x01}, // scmp.wr g f  
	{0x9f2f, &op_scmp,	  7,   5, 255, 0xff, 0x01, 0x00, 0x01}, // scmp.wr h f  
	{0x9f30, &op_scmp,	  0,   6, 255, 0xff, 0x01, 0x00, 0x01}, // scmp.wr a g  
	{0x9f31, &op_scmp,	  1,   6, 255, 0xff, 0x01, 0x00, 0x01}, // scmp.wr b g  
	{0x9f32, &op_scmp,	  2,   6, 255, 0xff, 0x01, 0x00, 0x01}, // scmp.wr c g  
	{0x9f33, &op_scmp,	  3,   6, 255, 0xff, 0x01, 0x00, 0x01}, // scmp.wr d g  
	{0x9f34, &op_scmp,	  4,   6, 255, 0xff, 0x01, 0x00, 0x01}, // scmp.wr e g  
	{0x9f35, &op_scmp,	  5,   6, 255, 0xff, 0x01, 0x00, 0x01}, // scmp.wr f g  
	{0x9f36, &op_scmp,	  6,   6, 255, 0xff, 0x01, 0x00, 0x01}, // scmp.wr g g  
	{0x9f37, &op_scmp,	  7,   6, 255, 0xff, 0x01, 0x00, 0x01}, // scmp.wr h g  
	{0x9f38, &op_scmp,	  0,   7, 255, 0xff, 0x01, 0x00, 0x01}, // scmp.wr a h  
	{0x9f39, &op_scmp,	  1,   7, 255, 0xff, 0x01, 0x00, 0x01}, // scmp.wr b h  
	{0x9f3a, &op_scmp,	  2,   7, 255, 0xff, 0x01, 0x00, 0x01}, // scmp.wr c h  
	{0x9f3b, &op_scmp,	  3,   7, 255, 0xff, 0x01, 0x00, 0x01}, // scmp.wr d h  
	{0x9f3c, &op_scmp,	  4,   7, 255, 0xff, 0x01, 0x00, 0x01}, // scmp.wr e h  
	{0x9f3d, &op_scmp,	  5,   7, 255, 0xff, 0x01, 0x00, 0x01}, // scmp.wr f h  
	{0x9f3e, &op_scmp,	  6,   7, 255, 0xff, 0x01, 0x00, 0x01}, // scmp.wr g h  
	{0x9f3f, &op_scmp,	  7,   7, 255, 0xff, 0x01, 0x00, 0x01}, // scmp.wr h h  
	{0x9f40, &op_scmp,	  0,   0, 255, 0xff, 0x01, 0x00, 0x02}, // scmp.dr a a  
	{0x9f41, &op_scmp,	  1,   0, 255, 0xff, 0x01, 0x00, 0x02}, // scmp.dr b a  
	{0x9f42, &op_scmp,	  2,   0, 255, 0xff, 0x01, 0x00, 0x02}, // scmp.dr c a  
	{0x9f43, &op_scmp,	  3,   0, 255, 0xff, 0x01, 0x00, 0x02}, // scmp.dr d a  
	{0x9f44, &op_scmp,	  4,   0, 255, 0xff, 0x01, 0x00, 0x02}, // scmp.dr e a  
	{0x9f45, &op_scmp,	  5,   0, 255, 0xff, 0x01, 0x00, 0x02}, // scmp.dr f a  
	{0x9f46, &op_scmp,	  6,   0, 255, 0xff, 0x01, 0x00, 0x02}, // scmp.dr g a  
	{0x9f47, &op_scmp,	  7,   0, 255, 0xff, 0x01, 0x00, 0x02}, // scmp.dr h a  
	{0x9f48, &op_scmp,	  0,   1, 255, 0xff, 0x01, 0x00, 0x02}, // scmp.dr a b  
	{0x9f49, &op_scmp,	  1,   1, 255, 0xff, 0x01, 0x00, 0x02}, // scmp.dr b b  
	{0x9f4a, &op_scmp,	  2,   1, 255, 0xff, 0x01, 0x00, 0x02}, // scmp.dr c b  
	{0x9f4b, &op_scmp,	  3,   1, 255, 0xff, 0x01, 0x00, 0x02}, // scmp.dr d b  
	{0x9f4c, &op_scmp,	  4,   1, 255, 0xff, 0x01, 0x00, 0x02}, // scmp.dr e b  
	{0x9f4d, &op_scmp,	  5,   1, 255, 0xff, 0x01, 0x00, 0x02}, // scmp.dr f b  
	{0x9f4e, &op_scmp,	  6,   1, 255, 0xff, 0x01, 0x00, 0x02}, // scmp.dr g b  
	{0x9f4f, &op_scmp,	  7,   1, 255, 0xff, 0x01, 0x00, 0x02}, // scmp.dr h b  
	{0x9f50, &op_scmp,	  0,   2, 255, 0xff, 0x01, 0x00, 0x02}, // scmp.dr a c  
	{0x9f51, &op_scmp,	  1,   2, 255, 0xff, 0x01, 0x00, 0x02}, // scmp.dr b c  
	{0x9f52, &op_scmp,	  2,   2, 255, 0xff, 0x01, 0x00, 0x02}, // scmp.dr c c  
	{0x9f53, &op_scmp,	  3,   2, 255, 0xff, 0x01, 0x00, 0x02}, // scmp.dr d c  
	{0x9f54, &op_scmp,	  4,   2, 255, 0xff, 0x01, 0x00, 0x02}, // scmp.dr e c  
	{0x9f55, &op_scmp,	  5,   2, 255, 0xff, 0x01, 0x00, 0x02}, // scmp.dr f c  
	{0x9f56, &op_scmp,	  6,   2, 255, 0xff, 0x01, 0x00, 0x02}, // scmp.dr g c  
	{0x9f57, &op_scmp,	  7,   2, 255, 0xff, 0x01, 0x00, 0x02}, // scmp.dr h c  
	{0x9f58, &op_scmp,	  0,   3, 255, 0xff, 0x01, 0x00, 0x02}, // scmp.dr a d  
	{0x9f59, &op_scmp,	  1,   3, 255, 0xff, 0x01, 0x00, 0x02}, // scmp.dr b d  
	{0x9f5a, &op_scmp,	  2,   3, 255, 0xff, 0x01, 0x00, 0x02}, // scmp.dr c d  
	{0x9f5b, &op_scmp,	  3,   3, 255, 0xff, 0x01, 0x00, 0x02}, // scmp.dr d d  
	{0x9f5c, &op_scmp,	  4,   3, 255, 0xff, 0x01, 0x00, 0x02}, // scmp.dr e d  
	{0x9f5d, &op_scmp,	  5,   3, 255, 0xff, 0x01, 0x00, 0x02}, // scmp.dr f d  
	{0x9f5e, &op_scmp,	  6,   3, 255, 0xff, 0x01, 0x00, 0x02}, // scmp.dr g d  
	{0x9f5f, &op_scmp,	  7,   3, 255, 0xff, 0x01, 0x00, 0x02}, // scmp.dr h d  
	{0x9f60, &op_scmp,	  0,   4, 255, 0xff, 0x01, 0x00, 0x02}, // scmp.dr a e  
	{0x9f61, &op_scmp,	  1,   4, 255, 0xff, 0x01, 0x00, 0x02}, // scmp.dr b e  
	{0x9f62, &op_scmp,	  2,   4, 255, 0xff, 0x01, 0x00, 0x02}, // scmp.dr c e  
	{0x9f63, &op_scmp,	  3,   4, 255, 0xff, 0x01, 0x00, 0x02}, // scmp.dr d e  
	{0x9f64, &op_scmp,	  4,   4, 255, 0xff, 0x01, 0x00, 0x02}, // scmp.dr e e  
	{0x9f65, &op_scmp,	  5,   4, 255, 0xff, 0x01, 0x00, 0x02}, // scmp.dr f e  
	{0x9f66, &op_scmp,	  6,   4, 255, 0xff, 0x01, 0x00, 0x02}, // scmp.dr g e  
	{0x9f67, &op_scmp,	  7,   4, 255, 0xff, 0x01, 0x00, 0x02}, // scmp.dr h e  
	{0x9f68, &op_scmp,	  0,   5, 255, 0xff, 0x01, 0x00, 0x02}, // scmp.dr a f  
	{0x9f69, &op_scmp,	  1,   5, 255, 0xff, 0x01, 0x00, 0x02}, // scmp.dr b f  
	{0x9f6a, &op_scmp,	  2,   5, 255, 0xff, 0x01, 0x00, 0x02}, // scmp.dr c f  
	{0x9f6b, &op_scmp,	  3,   5, 255, 0xff, 0x01, 0x00, 0x02}, // scmp.dr d f  
	{0x9f6c, &op_scmp,	  4,   5, 255, 0xff, 0x01, 0x00, 0x02}, // scmp.dr e f  
	{0x9f6d, &op_scmp,	  5,   5, 255, 0xff, 0x01, 0x00, 0x02}, // scmp.dr f f  
	{0x9f6e, &op_scmp,	  6,   5, 255, 0xff, 0x01, 0x00, 0x02}, // scmp.dr g f  
	{0x9f6f, &op_scmp,	  7,   5, 255, 0xff, 0x01, 0x00, 0x02}, // scmp.dr h f  
	{0x9f70, &op_scmp,	  0,   6, 255, 0xff, 0x01, 0x00, 0x02}, // scmp.dr a g  
	{0x9f71, &op_scmp,	  1,   6, 255, 0xff, 0x01, 0x00, 0x02}, // scmp.dr b g  
	{0x9f72, &op_scmp,	  2,   6, 255, 0xff, 0x01, 0x00, 0x02}, // scmp.dr c g  
	{0x9f73, &op_scmp,	  3,   6, 255, 0xff, 0x01, 0x00, 0x02}, // scmp.dr d g  
	{0x9f74, &op_scmp,	  4,   6, 255, 0xff, 0x01, 0x00, 0x02}, // scmp.dr e g  
	{0x9f75, &op_scmp,	  5,   6, 255, 0xff, 0x01, 0x00, 0x02}, // scmp.dr f g  
	{0x9f76, &op_scmp,	  6,   6, 255, 0xff, 0x01, 0x00, 0x02}, // scmp.dr g g  
	{0x9f77, &op_scmp,	  7,   6, 255, 0xff, 0x01, 0x00, 0x02}, // scmp.dr h g  
	{0x9f78, &op_scmp,	  0,   7, 255, 0xff, 0x01, 0x00, 0x02}, // scmp.dr a h  
	{0x9f79, &op_scmp,	  1,   7, 255, 0xff, 0x01, 0x00, 0x02}, // scmp.dr b h  
	{0x9f7a, &op_scmp,	  2,   7, 255, 0xff, 0x01, 0x00, 0x02}, // scmp.dr c h  
	{0x9f7b, &op_scmp,	  3,   7, 255, 0xff, 0x01, 0x00, 0x02}, // scmp.dr d h  
	{0x9f7c, &op_scmp,	  4,   7, 255, 0xff, 0x01, 0x00, 0x02}, // scmp.dr e h  
	{0x9f7d, &op_scmp,	  5,   7, 255, 0xff, 0x01, 0x00, 0x02}, // scmp.dr f h  
	{0x9f7e, &op_scmp,	  6,   7, 255, 0xff, 0x01, 0x00, 0x02}, // scmp.dr g h  
	{0x9f7f, &op_scmp,	  7,   7, 255, 0xff, 0x01, 0x00, 0x02}, // scmp.dr h h  
	{0x9f80, &op_scmp,	  0,   0, 255, 0xff, 0x01, 0x00, 0x04}, // scmp.r a a  
	{0x9f81, &op_scmp,	  1,   0, 255, 0xff, 0x01, 0x00, 0x04}, // scmp.r b a  
	{0x9f82, &op_scmp,	  2,   0, 255, 0xff, 0x01, 0x00, 0x04}, // scmp.r c a  
	{0x9f83, &op_scmp,	  3,   0, 255, 0xff, 0x01, 0x00, 0x04}, // scmp.r d a  
	{0x9f84, &op_scmp,	  4,   0, 255, 0xff, 0x01, 0x00, 0x04}, // scmp.r e a  
	{0x9f85, &op_scmp,	  5,   0, 255, 0xff, 0x01, 0x00, 0x04}, // scmp.r f a  
	{0x9f86, &op_scmp,	  6,   0, 255, 0xff, 0x01, 0x00, 0x04}, // scmp.r g a  
	{0x9f87, &op_scmp,	  7,   0, 255, 0xff, 0x01, 0x00, 0x04}, // scmp.r h a  
	{0x9f88, &op_scmp,	  0,   1, 255, 0xff, 0x01, 0x00, 0x04}, // scmp.r a b  
	{0x9f89, &op_scmp,	  1,   1, 255, 0xff, 0x01, 0x00, 0x04}, // scmp.r b b  
	{0x9f8a, &op_scmp,	  2,   1, 255, 0xff, 0x01, 0x00, 0x04}, // scmp.r c b  
	{0x9f8b, &op_scmp,	  3,   1, 255, 0xff, 0x01, 0x00, 0x04}, // scmp.r d b  
	{0x9f8c, &op_scmp,	  4,   1, 255, 0xff, 0x01, 0x00, 0x04}, // scmp.r e b  
	{0x9f8d, &op_scmp,	  5,   1, 255, 0xff, 0x01, 0x00, 0x04}, // scmp.r f b  
	{0x9f8e, &op_scmp,	  6,   1, 255, 0xff, 0x01, 0x00, 0x04}, // scmp.r g b  
	{0x9f8f, &op_scmp,	  7,   1, 255, 0xff, 0x01, 0x00, 0x04}, // scmp.r h b  
	{0x9f90, &op_scmp,	  0,   2, 255, 0xff, 0x01, 0x00, 0x04}, // scmp.r a c  
	{0x9f91, &op_scmp,	  1,   2, 255, 0xff, 0x01, 0x00, 0x04}, // scmp.r b c  
	{0x9f92, &op_scmp,	  2,   2, 255, 0xff, 0x01, 0x00, 0x04}, // scmp.r c c  
	{0x9f93, &op_scmp,	  3,   2, 255, 0xff, 0x01, 0x00, 0x04}, // scmp.r d c  
	{0x9f94, &op_scmp,	  4,   2, 255, 0xff, 0x01, 0x00, 0x04}, // scmp.r e c  
	{0x9f95, &op_scmp,	  5,   2, 255, 0xff, 0x01, 0x00, 0x04}, // scmp.r f c  
	{0x9f96, &op_scmp,	  6,   2, 255, 0xff, 0x01, 0x00, 0x04}, // scmp.r g c  
	{0x9f97, &op_scmp,	  7,   2, 255, 0xff, 0x01, 0x00, 0x04}, // scmp.r h c  
	{0x9f98, &op_scmp,	  0,   3, 255, 0xff, 0x01, 0x00, 0x04}, // scmp.r a d  
	{0x9f99, &op_scmp,	  1,   3, 255, 0xff, 0x01, 0x00, 0x04}, // scmp.r b d  
	{0x9f9a, &op_scmp,	  2,   3, 255, 0xff, 0x01, 0x00, 0x04}, // scmp.r c d  
	{0x9f9b, &op_scmp,	  3,   3, 255, 0xff, 0x01, 0x00, 0x04}, // scmp.r d d  
	{0x9f9c, &op_scmp,	  4,   3, 255, 0xff, 0x01, 0x00, 0x04}, // scmp.r e d  
	{0x9f9d, &op_scmp,	  5,   3, 255, 0xff, 0x01, 0x00, 0x04}, // scmp.r f d  
	{0x9f9e, &op_scmp,	  6,   3, 255, 0xff, 0x01, 0x00, 0x04}, // scmp.r g d  
	{0x9f9f, &op_scmp,	  7,   3, 255, 0xff, 0x01, 0x00, 0x04}, // scmp.r h d  
	{0x9fa0, &op_scmp,	  0,   4, 255, 0xff, 0x01, 0x00, 0x04}, // scmp.r a e  
	{0x9fa1, &op_scmp,	  1,   4, 255, 0xff, 0x01, 0x00, 0x04}, // scmp.r b e  
	{0x9fa2, &op_scmp,	  2,   4, 255, 0xff, 0x01, 0x00, 0x04}, // scmp.r c e  
	{0x9fa3, &op_scmp,	  3,   4, 255, 0xff, 0x01, 0x00, 0x04}, // scmp.r d e  
	{0x9fa4, &op_scmp,	  4,   4, 255, 0xff, 0x01, 0x00, 0x04}, // scmp.r e e  
	{0x9fa5, &op_scmp,	  5,   4, 255, 0xff, 0x01, 0x00, 0x04}, // scmp.r f e  
	{0x9fa6, &op_scmp,	  6,   4, 255, 0xff, 0x01, 0x00, 0x04}, // scmp.r g e  
	{0x9fa7, &op_scmp,	  7,   4, 255, 0xff, 0x01, 0x00, 0x04}, // scmp.r h e  
	{0x9fa8, &op_scmp,	  0,   5, 255, 0xff, 0x01, 0x00, 0x04}, // scmp.r a f  
	{0x9fa9, &op_scmp,	  1,   5, 255, 0xff, 0x01, 0x00, 0x04}, // scmp.r b f  
	{0x9faa, &op_scmp,	  2,   5, 255, 0xff, 0x01, 0x00, 0x04}, // scmp.r c f  
	{0x9fab, &op_scmp,	  3,   5, 255, 0xff, 0x01, 0x00, 0x04}, // scmp.r d f  
	{0x9fac, &op_scmp,	  4,   5, 255, 0xff, 0x01, 0x00, 0x04}, // scmp.r e f  
	{0x9fad, &op_scmp,	  5,   5, 255, 0xff, 0x01, 0x00, 0x04}, // scmp.r f f  
	{0x9fae, &op_scmp,	  6,   5, 255, 0xff, 0x01, 0x00, 0x04}, // scmp.r g f  
	{0x9faf, &op_scmp,	  7,   5, 255, 0xff, 0x01, 0x00, 0x04}, // scmp.r h f  
	{0x9fb0, &op_scmp,	  0,   6, 255, 0xff, 0x01, 0x00, 0x04}, // scmp.r a g  
	{0x9fb1, &op_scmp,	  1,   6, 255, 0xff, 0x01, 0x00, 0x04}, // scmp.r b g  
	{0x9fb2, &op_scmp,	  2,   6, 255, 0xff, 0x01, 0x00, 0x04}, // scmp.r c g  
	{0x9fb3, &op_scmp,	  3,   6, 255, 0xff, 0x01, 0x00, 0x04}, // scmp.r d g  
	{0x9fb4, &op_scmp,	  4,   6, 255, 0xff, 0x01, 0x00, 0x04}, // scmp.r e g  
	{0x9fb5, &op_scmp,	  5,   6, 255, 0xff, 0x01, 0x00, 0x04}, // scmp.r f g  
	{0x9fb6, &op_scmp,	  6,   6, 255, 0xff, 0x01, 0x00, 0x04}, // scmp.r g g  
	{0x9fb7, &op_scmp,	  7,   6, 255, 0xff, 0x01, 0x00, 0x04}, // scmp.r h g  
	{0x9fb8, &op_scmp,	  0,   7, 255, 0xff, 0x01, 0x00, 0x04}, // scmp.r a h  
	{0x9fb9, &op_scmp,	  1,   7, 255, 0xff, 0x01, 0x00, 0x04}, // scmp.r b h  
	{0x9fba, &op_scmp,	  2,   7, 255, 0xff, 0x01, 0x00, 0x04}, // scmp.r c h  
	{0x9fbb, &op_scmp,	  3,   7, 255, 0xff, 0x01, 0x00, 0x04}, // scmp.r d h  
	{0x9fbc, &op_scmp,	  4,   7, 255, 0xff, 0x01, 0x00, 0x04}, // scmp.r e h  
	{0x9fbd, &op_scmp,	  5,   7, 255, 0xff, 0x01, 0x00, 0x04}, // scmp.r f h  
	{0x9fbe, &op_scmp,	  6,   7, 255, 0xff, 0x01, 0x00, 0x04}, // scmp.r g h  
	{0x9fbf, &op_scmp,	  7,   7, 255, 0xff, 0x01, 0x00, 0x04}, // scmp.r h h  
	{0x9ec8, &op_scmp,	  0,   8, 255, 0xff, 0x00, 0x01, 0x01}, // scmp.wi a <literal>  
	{0x9ec9, &op_scmp,	  1,   8, 255, 0xff, 0x00, 0x01, 0x01}, // scmp.wi b <literal>  
	{0x9eca, &op_scmp,	  2,   8, 255, 0xff, 0x00, 0x01, 0x01}, // scmp.wi c <literal>  
	{0x9ecb, &op_scmp,	  3,   8, 255, 0xff, 0x00, 0x01, 0x01}, // scmp.wi d <literal>  
	{0x9ecc, &op_scmp,	  4,   8, 255, 0xff, 0x00, 0x01, 0x01}, // scmp.wi e <literal>  
	{0x9ecd, &op_scmp,	  5,   8, 255, 0xff, 0x00, 0x01, 0x01}, // scmp.wi f <literal>  
	{0x9ece, &op_scmp,	  6,   8, 255, 0xff, 0x00, 0x01, 0x01}, // scmp.wi g <literal>  
	{0x9ecf, &op_scmp,	  7,   8, 255, 0xff, 0x00, 0x01, 0x01}, // scmp.wi h <literal>  
	{0x9ed0, &op_scmp,	  0,   8, 255, 0xff, 0x00, 0x02, 0x02}, // scmp.di a <literal>  
	{0x9ed1, &op_scmp,	  1,   8, 255, 0xff, 0x00, 0x02, 0x02}, // scmp.di b <literal>  
	{0x9ed2, &op_scmp,	  2,   8, 255, 0xff, 0x00, 0x02, 0x02}, // scmp.di c <literal>  
	{0x9ed3, &op_scmp,	  3,   8, 255, 0xff, 0x00, 0x02, 0x02}, // scmp.di d <literal>  
	{0x9ed4, &op_scmp,	  4,   8, 255, 0xff, 0x00, 0x02, 0x02}, // scmp.di e <literal>  
	{0x9ed5, &op_scmp,	  5,   8, 255, 0xff, 0x00, 0x02, 0x02}, // scmp.di f <literal>  
	{0x9ed6, &op_scmp,	  6,   8, 255, 0xff, 0x00, 0x02, 0x02}, // scmp.di g <literal>  
	{0x9ed7, &op_scmp,	  7,   8, 255, 0xff, 0x00, 0x02, 0x02}, // scmp.di h <literal>  
	{0x9ee0, &op_scmp,	  0,   8, 255, 0xff, 0x00, 0x04, 0x04}, // scmp.i a <literal>  
	{0x9ee1, &op_scmp,	  1,   8, 255, 0xff, 0x00, 0x04, 0x04}, // scmp.i b <literal>  
	{0x9ee2, &op_scmp,	  2,   8, 255, 0xff, 0x00, 0x04, 0x04}, // scmp.i c <literal>  
	{0x9ee3, &op_scmp,	  3,   8, 255, 0xff, 0x00, 0x04, 0x04}, // scmp.i d <literal>  
	{0x9ee4, &op_scmp,	  4,   8, 255, 0xff, 0x00, 0x04, 0x04}, // scmp.i e <literal>  
	{0x9ee5, &op_scmp,	  5,   8, 255, 0xff, 0x00, 0x04, 0x04}, // scmp.i f <literal>  
	{0x9ee6, &op_scmp,	  6,   8, 255, 0xff, 0x00, 0x04, 0x04}, // scmp.i g <literal>  
	{0x9ee7, &op_scmp,	  7,   8, 255, 0xff, 0x00, 0x04, 0x04}, // scmp.i h <literal>  
	{0x9fc8, &op_scmp,	  0,   8, 255, 0xff, 0x01, 0x04, 0x01}, // scmp.wri a <literal>  
	{0x9fc9, &op_scmp,	  1,   8, 255, 0xff, 0x01, 0x04, 0x01}, // scmp.wri b <literal>  
	{0x9fca, &op_scmp,	  2,   8, 255, 0xff, 0x01, 0x04, 0x01}, // scmp.wri c <literal>  
	{0x9fcb, &op_scmp,	  3,   8, 255, 0xff, 0x01, 0x04, 0x01}, // scmp.wri d <literal>  
	{0x9fcc, &op_scmp,	  4,   8, 255, 0xff, 0x01, 0x04, 0x01}, // scmp.wri e <literal>  
	{0x9fcd, &op_scmp,	  5,   8, 255, 0xff, 0x01, 0x04, 0x01}, // scmp.wri f <literal>  
	{0x9fce, &op_scmp,	  6,   8, 255, 0xff, 0x01, 0x04, 0x01}, // scmp.wri g <literal>  
	{0x9fcf, &op_scmp,	  7,   8, 255, 0xff, 0x01, 0x04, 0x01}, // scmp.wri h <literal>  
	{0x9fd0, &op_scmp,	  0,   8, 255, 0xff, 0x01, 0x04, 0x02}, // scmp.dri a <literal>  
	{0x9fd1, &op_scmp,	  1,   8, 255, 0xff, 0x01, 0x04, 0x02}, // scmp.dri b <literal>  
	{0x9fd2, &op_scmp,	  2,   8, 255, 0xff, 0x01, 0x04, 0x02}, // scmp.dri c <literal>  
	{0x9fd3, &op_scmp,	  3,   8, 255, 0xff, 0x01, 0x04, 0x02}, // scmp.dri d <literal>  
	{0x9fd4, &op_scmp,	  4,   8, 255, 0xff, 0x01, 0x04, 0x02}, // scmp.dri e <literal>  
	{0x9fd5, &op_scmp,	  5,   8, 255, 0xff, 0x01, 0x04, 0x02}, // scmp.dri f <literal>  
	{0x9fd6, &op_scmp,	  6,   8, 255, 0xff, 0x01, 0x04, 0x02}, // scmp.dri g <literal>  
	{0x9fd7, &op_scmp,	  7,   8, 255, 0xff, 0x01, 0x04, 0x02}, // scmp.dri h <literal>  
	{0x9fe0, &op_scmp,	  0,   8, 255, 0xff, 0x01, 0x04, 0x04}, // scmp.ri a <literal>  
	{0x9fe1, &op_scmp,	  1,   8, 255, 0xff, 0x01, 0x04, 0x04}, // scmp.ri b <literal>  
	{0x9fe2, &op_scmp,	  2,   8, 255, 0xff, 0x01, 0x04, 0x04}, // scmp.ri c <literal>  
	{0x9fe3, &op_scmp,	  3,   8, 255, 0xff, 0x01, 0x04, 0x04}, // scmp.ri d <literal>  
	{0x9fe4, &op_scmp,	  4,   8, 255, 0xff, 0x01, 0x04, 0x04}, // scmp.ri e <literal>  
	{0x9fe5, &op_scmp,	  5,   8, 255, 0xff, 0x01, 0x04, 0x04}, // scmp.ri f <literal>  
	{0x9fe6, &op_scmp,	  6,   8, 255, 0xff, 0x01, 0x04, 0x04}, // scmp.ri g <literal>  
	{0x9fe7, &op_scmp,	  7,   8, 255, 0xff, 0x01, 0x04, 0x04}, // scmp.ri h <literal>  
	{0xa000, &op_bmod,	  0,   0, 255, 0xff, 0x00, 0x00, 0x01}, // bmod.w a a  
	{0xa001, &op_bmod,	  1,   0, 255, 0xff, 0x00, 0x00, 0x01}, // bmod.w b a  
	{0xa002, &op_bmod,	  2,   0, 255, 0xff, 0x00, 0x00, 0x01}, // bmod.w c a  
	{0xa003, &op_bmod,	  3,   0, 255, 0xff, 0x00, 0x00, 0x01}, // bmod.w d a  
	{0xa004, &op_bmod,	  4,   0, 255, 0xff, 0x00, 0x00, 0x01}, // bmod.w e a  
	{0xa005, &op_bmod,	  5,   0, 255, 0xff, 0x00, 0x00, 0x01}, // bmod.w f a  
	{0xa006, &op_bmod,	  6,   0, 255, 0xff, 0x00, 0x00, 0x01}, // bmod.w g a  
	{0xa007, &op_bmod,	  7,   0, 255, 0xff, 0x00, 0x00, 0x01}, // bmod.w h a  
	{0xa008, &op_bmod,	  0,   1, 255, 0xff, 0x00, 0x00, 0x01}, // bmod.w a b  
	{0xa009, &op_bmod,	  1,   1, 255, 0xff, 0x00, 0x00, 0x01}, // bmod.w b b  
	{0xa00a, &op_bmod,	  2,   1, 255, 0xff, 0x00, 0x00, 0x01}, // bmod.w c b  
	{0xa00b, &op_bmod,	  3,   1, 255, 0xff, 0x00, 0x00, 0x01}, // bmod.w d b  
	{0xa00c, &op_bmod,	  4,   1, 255, 0xff, 0x00, 0x00, 0x01}, // bmod.w e b  
	{0xa00d, &op_bmod,	  5,   1, 255, 0xff, 0x00, 0x00, 0x01}, // bmod.w f b  
	{0xa00e, &op_bmod,	  6,   1, 255, 0xff, 0x00, 0x00, 0x01}, // bmod.w g b  
	{0xa00f, &op_bmod,	  7,   1, 255, 0xff, 0x00, 0x00, 0x01}, // bmod.w h b  
	{0xa010, &op_bmod,	  0,   2, 255, 0xff, 0x00, 0x00, 0x01}, // bmod.w a c  
	{0xa011, &op_bmod,	  1,   2, 255, 0xff, 0x00, 0x00, 0x01}, // bmod.w b c  
	{0xa012, &op_bmod,	  2,   2, 255, 0xff, 0x00, 0x00, 0x01}, // bmod.w c c  
	{0xa013, &op_bmod,	  3,   2, 255, 0xff, 0x00, 0x00, 0x01}, // bmod.w d c  
	{0xa014, &op_bmod,	  4,   2, 255, 0xff, 0x00, 0x00, 0x01}, // bmod.w e c  
	{0xa015, &op_bmod,	  5,   2, 255, 0xff, 0x00, 0x00, 0x01}, // bmod.w f c  
	{0xa016, &op_bmod,	  6,   2, 255, 0xff, 0x00, 0x00, 0x01}, // bmod.w g c  
	{0xa017, &op_bmod,	  7,   2, 255, 0xff, 0x00, 0x00, 0x01}, // bmod.w h c  
	{0xa018, &op_bmod,	  0,   3, 255, 0xff, 0x00, 0x00, 0x01}, // bmod.w a d  
	{0xa019, &op_bmod,	  1,   3, 255, 0xff, 0x00, 0x00, 0x01}, // bmod.w b d  
	{0xa01a, &op_bmod,	  2,   3, 255, 0xff, 0x00, 0x00, 0x01}, // bmod.w c d  
	{0xa01b, &op_bmod,	  3,   3, 255, 0xff, 0x00, 0x00, 0x01}, // bmod.w d d  
	{0xa01c, &op_bmod,	  4,   3, 255, 0xff, 0x00, 0x00, 0x01}, // bmod.w e d  
	{0xa01d, &op_bmod,	  5,   3, 255, 0xff, 0x00, 0x00, 0x01}, // bmod.w f d  
	{0xa01e, &op_bmod,	  6,   3, 255, 0xff, 0x00, 0x00, 0x01}, // bmod.w g d  
	{0xa01f, &op_bmod,	  7,   3, 255, 0xff, 0x00, 0x00, 0x01}, // bmod.w h d  
	{0xa020, &op_bmod,	  0,   4, 255, 0xff, 0x00, 0x00, 0x01}, // bmod.w a e  
	{0xa021, &op_bmod,	  1,   4, 255, 0xff, 0x00, 0x00, 0x01}, // bmod.w b e  
	{0xa022, &op_bmod,	  2,   4, 255, 0xff, 0x00, 0x00, 0x01}, // bmod.w c e  
	{0xa023, &op_bmod,	  3,   4, 255, 0xff, 0x00, 0x00, 0x01}, // bmod.w d e  
	{0xa024, &op_bmod,	  4,   4, 255, 0xff, 0x00, 0x00, 0x01}, // bmod.w e e  
	{0xa025, &op_bmod,	  5,   4, 255, 0xff, 0x00, 0x00, 0x01}, // bmod.w f e  
	{0xa026, &op_bmod,	  6,   4, 255, 0xff, 0x00, 0x00, 0x01}, // bmod.w g e  
	{0xa027, &op_bmod,	  7,   4, 255, 0xff, 0x00, 0x00, 0x01}, // bmod.w h e  
	{0xa028, &op_bmod,	  0,   5, 255, 0xff, 0x00, 0x00, 0x01}, // bmod.w a f  
	{0xa029, &op_bmod,	  1,   5, 255, 0xff, 0x00, 0x00, 0x01}, // bmod.w b f  
	{0xa02a, &op_bmod,	  2,   5, 255, 0xff, 0x00, 0x00, 0x01}, // bmod.w c f  
	{0xa02b, &op_bmod,	  3,   5, 255, 0xff, 0x00, 0x00, 0x01}, // bmod.w d f  
	{0xa02c, &op_bmod,	  4,   5, 255, 0xff, 0x00, 0x00, 0x01}, // bmod.w e f  
	{0xa02d, &op_bmod,	  5,   5, 255, 0xff, 0x00, 0x00, 0x01}, // bmod.w f f  
	{0xa02e, &op_bmod,	  6,   5, 255, 0xff, 0x00, 0x00, 0x01}, // bmod.w g f  
	{0xa02f, &op_bmod,	  7,   5, 255, 0xff, 0x00, 0x00, 0x01}, // bmod.w h f  
	{0xa030, &op_bmod,	  0,   6, 255, 0xff, 0x00, 0x00, 0x01}, // bmod.w a g  
	{0xa031, &op_bmod,	  1,   6, 255, 0xff, 0x00, 0x00, 0x01}, // bmod.w b g  
	{0xa032, &op_bmod,	  2,   6, 255, 0xff, 0x00, 0x00, 0x01}, // bmod.w c g  
	{0xa033, &op_bmod,	  3,   6, 255, 0xff, 0x00, 0x00, 0x01}, // bmod.w d g  
	{0xa034, &op_bmod,	  4,   6, 255, 0xff, 0x00, 0x00, 0x01}, // bmod.w e g  
	{0xa035, &op_bmod,	  5,   6, 255, 0xff, 0x00, 0x00, 0x01}, // bmod.w f g  
	{0xa036, &op_bmod,	  6,   6, 255, 0xff, 0x00, 0x00, 0x01}, // bmod.w g g  
	{0xa037, &op_bmod,	  7,   6, 255, 0xff, 0x00, 0x00, 0x01}, // bmod.w h g  
	{0xa038, &op_bmod,	  0,   7, 255, 0xff, 0x00, 0x00, 0x01}, // bmod.w a h  
	{0xa039, &op_bmod,	  1,   7, 255, 0xff, 0x00, 0x00, 0x01}, // bmod.w b h  
	{0xa03a, &op_bmod,	  2,   7, 255, 0xff, 0x00, 0x00, 0x01}, // bmod.w c h  
	{0xa03b, &op_bmod,	  3,   7, 255, 0xff, 0x00, 0x00, 0x01}, // bmod.w d h  
	{0xa03c, &op_bmod,	  4,   7, 255, 0xff, 0x00, 0x00, 0x01}, // bmod.w e h  
	{0xa03d, &op_bmod,	  5,   7, 255, 0xff, 0x00, 0x00, 0x01}, // bmod.w f h  
	{0xa03e, &op_bmod,	  6,   7, 255, 0xff, 0x00, 0x00, 0x01}, // bmod.w g h  
	{0xa03f, &op_bmod,	  7,   7, 255, 0xff, 0x00, 0x00, 0x01}, // bmod.w h h  
	{0xa040, &op_bmod,	  0,   0, 255, 0xff, 0x00, 0x00, 0x02}, // bmod.d a a  
	{0xa041, &op_bmod,	  1,   0, 255, 0xff, 0x00, 0x00, 0x02}, // bmod.d b a  
	{0xa042, &op_bmod,	  2,   0, 255, 0xff, 0x00, 0x00, 0x02}, // bmod.d c a  
	{0xa043, &op_bmod,	  3,   0, 255, 0xff, 0x00, 0x00, 0x02}, // bmod.d d a  
	{0xa044, &op_bmod,	  4,   0, 255, 0xff, 0x00, 0x00, 0x02}, // bmod.d e a  
	{0xa045, &op_bmod,	  5,   0, 255, 0xff, 0x00, 0x00, 0x02}, // bmod.d f a  
	{0xa046, &op_bmod,	  6,   0, 255, 0xff, 0x00, 0x00, 0x02}, // bmod.d g a  
	{0xa047, &op_bmod,	  7,   0, 255, 0xff, 0x00, 0x00, 0x02}, // bmod.d h a  
	{0xa048, &op_bmod,	  0,   1, 255, 0xff, 0x00, 0x00, 0x02}, // bmod.d a b  
	{0xa049, &op_bmod,	  1,   1, 255, 0xff, 0x00, 0x00, 0x02}, // bmod.d b b  
	{0xa04a, &op_bmod,	  2,   1, 255, 0xff, 0x00, 0x00, 0x02}, // bmod.d c b  
	{0xa04b, &op_bmod,	  3,   1, 255, 0xff, 0x00, 0x00, 0x02}, // bmod.d d b  
	{0xa04c, &op_bmod,	  4,   1, 255, 0xff, 0x00, 0x00, 0x02}, // bmod.d e b  
	{0xa04d, &op_bmod,	  5,   1, 255, 0xff, 0x00, 0x00, 0x02}, // bmod.d f b  
	{0xa04e, &op_bmod,	  6,   1, 255, 0xff, 0x00, 0x00, 0x02}, // bmod.d g b  
	{0xa04f, &op_bmod,	  7,   1, 255, 0xff, 0x00, 0x00, 0x02}, // bmod.d h b  
	{0xa050, &op_bmod,	  0,   2, 255, 0xff, 0x00, 0x00, 0x02}, // bmod.d a c  
	{0xa051, &op_bmod,	  1,   2, 255, 0xff, 0x00, 0x00, 0x02}, // bmod.d b c  
	{0xa052, &op_bmod,	  2,   2, 255, 0xff, 0x00, 0x00, 0x02}, // bmod.d c c  
	{0xa053, &op_bmod,	  3,   2, 255, 0xff, 0x00, 0x00, 0x02}, // bmod.d d c  
	{0xa054, &op_bmod,	  4,   2, 255, 0xff, 0x00, 0x00, 0x02}, // bmod.d e c  
	{0xa055, &op_bmod,	  5,   2, 255, 0xff, 0x00, 0x00, 0x02}, // bmod.d f c  
	{0xa056, &op_bmod,	  6,   2, 255, 0xff, 0x00, 0x00, 0x02}, // bmod.d g c  
	{0xa057, &op_bmod,	  7,   2, 255, 0xff, 0x00, 0x00, 0x02}, // bmod.d h c  
	{0xa058, &op_bmod,	  0,   3, 255, 0xff, 0x00, 0x00, 0x02}, // bmod.d a d  
	{0xa059, &op_bmod,	  1,   3, 255, 0xff, 0x00, 0x00, 0x02}, // bmod.d b d  
	{0xa05a, &op_bmod,	  2,   3, 255, 0xff, 0x00, 0x00, 0x02}, // bmod.d c d  
	{0xa05b, &op_bmod,	  3,   3, 255, 0xff, 0x00, 0x00, 0x02}, // bmod.d d d  
	{0xa05c, &op_bmod,	  4,   3, 255, 0xff, 0x00, 0x00, 0x02}, // bmod.d e d  
	{0xa05d, &op_bmod,	  5,   3, 255, 0xff, 0x00, 0x00, 0x02}, // bmod.d f d  
	{0xa05e, &op_bmod,	  6,   3, 255, 0xff, 0x00, 0x00, 0x02}, // bmod.d g d  
	{0xa05f, &op_bmod,	  7,   3, 255, 0xff, 0x00, 0x00, 0x02}, // bmod.d h d  
	{0xa060, &op_bmod,	  0,   4, 255, 0xff, 0x00, 0x00, 0x02}, // bmod.d a e  
	{0xa061, &op_bmod,	  1,   4, 255, 0xff, 0x00, 0x00, 0x02}, // bmod.d b e  
	{0xa062, &op_bmod,	  2,   4, 255, 0xff, 0x00, 0x00, 0x02}, // bmod.d c e  
	{0xa063, &op_bmod,	  3,   4, 255, 0xff, 0x00, 0x00, 0x02}, // bmod.d d e  
	{0xa064, &op_bmod,	  4,   4, 255, 0xff, 0x00, 0x00, 0x02}, // bmod.d e e  
	{0xa065, &op_bmod,	  5,   4, 255, 0xff, 0x00, 0x00, 0x02}, // bmod.d f e  
	{0xa066, &op_bmod,	  6,   4, 255, 0xff, 0x00, 0x00, 0x02}, // bmod.d g e  
	{0xa067, &op_bmod,	  7,   4, 255, 0xff, 0x00, 0x00, 0x02}, // bmod.d h e  
	{0xa068, &op_bmod,	  0,   5, 255, 0xff, 0x00, 0x00, 0x02}, // bmod.d a f  
	{0xa069, &op_bmod,	  1,   5, 255, 0xff, 0x00, 0x00, 0x02}, // bmod.d b f  
	{0xa06a, &op_bmod,	  2,   5, 255, 0xff, 0x00, 0x00, 0x02}, // bmod.d c f  
	{0xa06b, &op_bmod,	  3,   5, 255, 0xff, 0x00, 0x00, 0x02}, // bmod.d d f  
	{0xa06c, &op_bmod,	  4,   5, 255, 0xff, 0x00, 0x00, 0x02}, // bmod.d e f  
	{0xa06d, &op_bmod,	  5,   5, 255, 0xff, 0x00, 0x00, 0x02}, // bmod.d f f  
	{0xa06e, &op_bmod,	  6,   5, 255, 0xff, 0x00, 0x00, 0x02}, // bmod.d g f  
	{0xa06f, &op_bmod,	  7,   5, 255, 0xff, 0x00, 0x00, 0x02}, // bmod.d h f  
	{0xa070, &op_bmod,	  0,   6, 255, 0xff, 0x00, 0x00, 0x02}, // bmod.d a g  
	{0xa071, &op_bmod,	  1,   6, 255, 0xff, 0x00, 0x00, 0x02}, // bmod.d b g  
	{0xa072, &op_bmod,	  2,   6, 255, 0xff, 0x00, 0x00, 0x02}, // bmod.d c g  
	{0xa073, &op_bmod,	  3,   6, 255, 0xff, 0x00, 0x00, 0x02}, // bmod.d d g  
	{0xa074, &op_bmod,	  4,   6, 255, 0xff, 0x00, 0x00, 0x02}, // bmod.d e g  
	{0xa075, &op_bmod,	  5,   6, 255, 0xff, 0x00, 0x00, 0x02}, // bmod.d f g  
	{0xa076, &op_bmod,	  6,   6, 255, 0xff, 0x00, 0x00, 0x02}, // bmod.d g g  
	{0xa077, &op_bmod,	  7,   6, 255, 0xff, 0x00, 0x00, 0x02}, // bmod.d h g  
	{0xa078, &op_bmod,	  0,   7, 255, 0xff, 0x00, 0x00, 0x02}, // bmod.d a h  
	{0xa079, &op_bmod,	  1,   7, 255, 0xff, 0x00, 0x00, 0x02}, // bmod.d b h  
	{0xa07a, &op_bmod,	  2,   7, 255, 0xff, 0x00, 0x00, 0x02}, // bmod.d c h  
	{0xa07b, &op_bmod,	  3,   7, 255, 0xff, 0x00, 0x00, 0x02}, // bmod.d d h  
	{0xa07c, &op_bmod,	  4,   7, 255, 0xff, 0x00, 0x00, 0x02}, // bmod.d e h  
	{0xa07d, &op_bmod,	  5,   7, 255, 0xff, 0x00, 0x00, 0x02}, // bmod.d f h  
	{0xa07e, &op_bmod,	  6,   7, 255, 0xff, 0x00, 0x00, 0x02}, // bmod.d g h  
	{0xa07f, &op_bmod,	  7,   7, 255, 0xff, 0x00, 0x00, 0x02}, // bmod.d h h  
	{0xa080, &op_bmod,	  0,   0, 255, 0xff, 0x00, 0x00, 0x04}, // bmod a a  
	{0xa081, &op_bmod,	  1,   0, 255, 0xff, 0x00, 0x00, 0x04}, // bmod b a  
	{0xa082, &op_bmod,	  2,   0, 255, 0xff, 0x00, 0x00, 0x04}, // bmod c a  
	{0xa083, &op_bmod,	  3,   0, 255, 0xff, 0x00, 0x00, 0x04}, // bmod d a  
	{0xa084, &op_bmod,	  4,   0, 255, 0xff, 0x00, 0x00, 0x04}, // bmod e a  
	{0xa085, &op_bmod,	  5,   0, 255, 0xff, 0x00, 0x00, 0x04}, // bmod f a  
	{0xa086, &op_bmod,	  6,   0, 255, 0xff, 0x00, 0x00, 0x04}, // bmod g a  
	{0xa087, &op_bmod,	  7,   0, 255, 0xff, 0x00, 0x00, 0x04}, // bmod h a  
	{0xa088, &op_bmod,	  0,   1, 255, 0xff, 0x00, 0x00, 0x04}, // bmod a b  
	{0xa089, &op_bmod,	  1,   1, 255, 0xff, 0x00, 0x00, 0x04}, // bmod b b  
	{0xa08a, &op_bmod,	  2,   1, 255, 0xff, 0x00, 0x00, 0x04}, // bmod c b  
	{0xa08b, &op_bmod,	  3,   1, 255, 0xff, 0x00, 0x00, 0x04}, // bmod d b  
	{0xa08c, &op_bmod,	  4,   1, 255, 0xff, 0x00, 0x00, 0x04}, // bmod e b  
	{0xa08d, &op_bmod,	  5,   1, 255, 0xff, 0x00, 0x00, 0x04}, // bmod f b  
	{0xa08e, &op_bmod,	  6,   1, 255, 0xff, 0x00, 0x00, 0x04}, // bmod g b  
	{0xa08f, &op_bmod,	  7,   1, 255, 0xff, 0x00, 0x00, 0x04}, // bmod h b  
	{0xa090, &op_bmod,	  0,   2, 255, 0xff, 0x00, 0x00, 0x04}, // bmod a c  
	{0xa091, &op_bmod,	  1,   2, 255, 0xff, 0x00, 0x00, 0x04}, // bmod b c  
	{0xa092, &op_bmod,	  2,   2, 255, 0xff, 0x00, 0x00, 0x04}, // bmod c c  
	{0xa093, &op_bmod,	  3,   2, 255, 0xff, 0x00, 0x00, 0x04}, // bmod d c  
	{0xa094, &op_bmod,	  4,   2, 255, 0xff, 0x00, 0x00, 0x04}, // bmod e c  
	{0xa095, &op_bmod,	  5,   2, 255, 0xff, 0x00, 0x00, 0x04}, // bmod f c  
	{0xa096, &op_bmod,	  6,   2, 255, 0xff, 0x00, 0x00, 0x04}, // bmod g c  
	{0xa097, &op_bmod,	  7,   2, 255, 0xff, 0x00, 0x00, 0x04}, // bmod h c  
	{0xa098, &op_bmod,	  0,   3, 255, 0xff, 0x00, 0x00, 0x04}, // bmod a d  
	{0xa099, &op_bmod,	  1,   3, 255, 0xff, 0x00, 0x00, 0x04}, // bmod b d  
	{0xa09a, &op_bmod,	  2,   3, 255, 0xff, 0x00, 0x00, 0x04}, // bmod c d  
	{0xa09b, &op_bmod,	  3,   3, 255, 0xff, 0x00, 0x00, 0x04}, // bmod d d  
	{0xa09c, &op_bmod,	  4,   3, 255, 0xff, 0x00, 0x00, 0x04}, // bmod e d  
	{0xa09d, &op_bmod,	  5,   3, 255, 0xff, 0x00, 0x00, 0x04}, // bmod f d  
	{0xa09e, &op_bmod,	  6,   3, 255, 0xff, 0x00, 0x00, 0x04}, // bmod g d  
	{0xa09f, &op_bmod,	  7,   3, 255, 0xff, 0x00, 0x00, 0x04}, // bmod h d  
	{0xa0a0, &op_bmod,	  0,   4, 255, 0xff, 0x00, 0x00, 0x04}, // bmod a e  
	{0xa0a1, &op_bmod,	  1,   4, 255, 0xff, 0x00, 0x00, 0x04}, // bmod b e  
	{0xa0a2, &op_bmod,	  2,   4, 255, 0xff, 0x00, 0x00, 0x04}, // bmod c e  
	{0xa0a3, &op_bmod,	  3,   4, 255, 0xff, 0x00, 0x00, 0x04}, // bmod d e  
	{0xa0a4, &op_bmod,	  4,   4, 255, 0xff, 0x00, 0x00, 0x04}, // bmod e e  
	{0xa0a5, &op_bmod,	  5,   4, 255, 0xff, 0x00, 0x00, 0x04}, // bmod f e  
	{0xa0a6, &op_bmod,	  6,   4, 255, 0xff, 0x00, 0x00, 0x04}, // bmod g e  
	{0xa0a7, &op_bmod,	  7,   4, 255, 0xff, 0x00, 0x00, 0x04}, // bmod h e  
	{0xa0a8, &op_bmod,	  0,   5, 255, 0xff, 0x00, 0x00, 0x04}, // bmod a f  
	{0xa0a9, &op_bmod,	  1,   5, 255, 0xff, 0x00, 0x00, 0x04}, // bmod b f  
	{0xa0aa, &op_bmod,	  2,   5, 255, 0xff, 0x00, 0x00, 0x04}, // bmod c f  
	{0xa0ab, &op_bmod,	  3,   5, 255, 0xff, 0x00, 0x00, 0x04}, // bmod d f  
	{0xa0ac, &op_bmod,	  4,   5, 255, 0xff, 0x00, 0x00, 0x04}, // bmod e f  
	{0xa0ad, &op_bmod,	  5,   5, 255, 0xff, 0x00, 0x00, 0x04}, // bmod f f  
	{0xa0ae, &op_bmod,	  6,   5, 255, 0xff, 0x00, 0x00, 0x04}, // bmod g f  
	{0xa0af, &op_bmod,	  7,   5, 255, 0xff, 0x00, 0x00, 0x04}, // bmod h f  
	{0xa0b0, &op_bmod,	  0,   6, 255, 0xff, 0x00, 0x00, 0x04}, // bmod a g  
	{0xa0b1, &op_bmod,	  1,   6, 255, 0xff, 0x00, 0x00, 0x04}, // bmod b g  
	{0xa0b2, &op_bmod,	  2,   6, 255, 0xff, 0x00, 0x00, 0x04}, // bmod c g  
	{0xa0b3, &op_bmod,	  3,   6, 255, 0xff, 0x00, 0x00, 0x04}, // bmod d g  
	{0xa0b4, &op_bmod,	  4,   6, 255, 0xff, 0x00, 0x00, 0x04}, // bmod e g  
	{0xa0b5, &op_bmod,	  5,   6, 255, 0xff, 0x00, 0x00, 0x04}, // bmod f g  
	{0xa0b6, &op_bmod,	  6,   6, 255, 0xff, 0x00, 0x00, 0x04}, // bmod g g  
	{0xa0b7, &op_bmod,	  7,   6, 255, 0xff, 0x00, 0x00, 0x04}, // bmod h g  
	{0xa0b8, &op_bmod,	  0,   7, 255, 0xff, 0x00, 0x00, 0x04}, // bmod a h  
	{0xa0b9, &op_bmod,	  1,   7, 255, 0xff, 0x00, 0x00, 0x04}, // bmod b h  
	{0xa0ba, &op_bmod,	  2,   7, 255, 0xff, 0x00, 0x00, 0x04}, // bmod c h  
	{0xa0bb, &op_bmod,	  3,   7, 255, 0xff, 0x00, 0x00, 0x04}, // bmod d h  
	{0xa0bc, &op_bmod,	  4,   7, 255, 0xff, 0x00, 0x00, 0x04}, // bmod e h  
	{0xa0bd, &op_bmod,	  5,   7, 255, 0xff, 0x00, 0x00, 0x04}, // bmod f h  
	{0xa0be, &op_bmod,	  6,   7, 255, 0xff, 0x00, 0x00, 0x04}, // bmod g h  
	{0xa0bf, &op_bmod,	  7,   7, 255, 0xff, 0x00, 0x00, 0x04}, // bmod h h  
	{0xa100, &op_bmod,	  0,   0, 255, 0xff, 0x01, 0x00, 0x01}, // bmod.wr a a  
	{0xa101, &op_bmod,	  1,   0, 255, 0xff, 0x01, 0x00, 0x01}, // bmod.wr b a  
	{0xa102, &op_bmod,	  2,   0, 255, 0xff, 0x01, 0x00, 0x01}, // bmod.wr c a  
	{0xa103, &op_bmod,	  3,   0, 255, 0xff, 0x01, 0x00, 0x01}, // bmod.wr d a  
	{0xa104, &op_bmod,	  4,   0, 255, 0xff, 0x01, 0x00, 0x01}, // bmod.wr e a  
	{0xa105, &op_bmod,	  5,   0, 255, 0xff, 0x01, 0x00, 0x01}, // bmod.wr f a  
	{0xa106, &op_bmod,	  6,   0, 255, 0xff, 0x01, 0x00, 0x01}, // bmod.wr g a  
	{0xa107, &op_bmod,	  7,   0, 255, 0xff, 0x01, 0x00, 0x01}, // bmod.wr h a  
	{0xa108, &op_bmod,	  0,   1, 255, 0xff, 0x01, 0x00, 0x01}, // bmod.wr a b  
	{0xa109, &op_bmod,	  1,   1, 255, 0xff, 0x01, 0x00, 0x01}, // bmod.wr b b  
	{0xa10a, &op_bmod,	  2,   1, 255, 0xff, 0x01, 0x00, 0x01}, // bmod.wr c b  
	{0xa10b, &op_bmod,	  3,   1, 255, 0xff, 0x01, 0x00, 0x01}, // bmod.wr d b  
	{0xa10c, &op_bmod,	  4,   1, 255, 0xff, 0x01, 0x00, 0x01}, // bmod.wr e b  
	{0xa10d, &op_bmod,	  5,   1, 255, 0xff, 0x01, 0x00, 0x01}, // bmod.wr f b  
	{0xa10e, &op_bmod,	  6,   1, 255, 0xff, 0x01, 0x00, 0x01}, // bmod.wr g b  
	{0xa10f, &op_bmod,	  7,   1, 255, 0xff, 0x01, 0x00, 0x01}, // bmod.wr h b  
	{0xa110, &op_bmod,	  0,   2, 255, 0xff, 0x01, 0x00, 0x01}, // bmod.wr a c  
	{0xa111, &op_bmod,	  1,   2, 255, 0xff, 0x01, 0x00, 0x01}, // bmod.wr b c  
	{0xa112, &op_bmod,	  2,   2, 255, 0xff, 0x01, 0x00, 0x01}, // bmod.wr c c  
	{0xa113, &op_bmod,	  3,   2, 255, 0xff, 0x01, 0x00, 0x01}, // bmod.wr d c  
	{0xa114, &op_bmod,	  4,   2, 255, 0xff, 0x01, 0x00, 0x01}, // bmod.wr e c  
	{0xa115, &op_bmod,	  5,   2, 255, 0xff, 0x01, 0x00, 0x01}, // bmod.wr f c  
	{0xa116, &op_bmod,	  6,   2, 255, 0xff, 0x01, 0x00, 0x01}, // bmod.wr g c  
	{0xa117, &op_bmod,	  7,   2, 255, 0xff, 0x01, 0x00, 0x01}, // bmod.wr h c  
	{0xa118, &op_bmod,	  0,   3, 255, 0xff, 0x01, 0x00, 0x01}, // bmod.wr a d  
	{0xa119, &op_bmod,	  1,   3, 255, 0xff, 0x01, 0x00, 0x01}, // bmod.wr b d  
	{0xa11a, &op_bmod,	  2,   3, 255, 0xff, 0x01, 0x00, 0x01}, // bmod.wr c d  
	{0xa11b, &op_bmod,	  3,   3, 255, 0xff, 0x01, 0x00, 0x01}, // bmod.wr d d  
	{0xa11c, &op_bmod,	  4,   3, 255, 0xff, 0x01, 0x00, 0x01}, // bmod.wr e d  
	{0xa11d, &op_bmod,	  5,   3, 255, 0xff, 0x01, 0x00, 0x01}, // bmod.wr f d  
	{0xa11e, &op_bmod,	  6,   3, 255, 0xff, 0x01, 0x00, 0x01}, // bmod.wr g d  
	{0xa11f, &op_bmod,	  7,   3, 255, 0xff, 0x01, 0x00, 0x01}, // bmod.wr h d  
	{0xa120, &op_bmod,	  0,   4, 255, 0xff, 0x01, 0x00, 0x01}, // bmod.wr a e  
	{0xa121, &op_bmod,	  1,   4, 255, 0xff, 0x01, 0x00, 0x01}, // bmod.wr b e  
	{0xa122, &op_bmod,	  2,   4, 255, 0xff, 0x01, 0x00, 0x01}, // bmod.wr c e  
	{0xa123, &op_bmod,	  3,   4, 255, 0xff, 0x01, 0x00, 0x01}, // bmod.wr d e  
	{0xa124, &op_bmod,	  4,   4, 255, 0xff, 0x01, 0x00, 0x01}, // bmod.wr e e  
	{0xa125, &op_bmod,	  5,   4, 255, 0xff, 0x01, 0x00, 0x01}, // bmod.wr f e  
	{0xa126, &op_bmod,	  6,   4, 255, 0xff, 0x01, 0x00, 0x01}, // bmod.wr g e  
	{0xa127, &op_bmod,	  7,   4, 255, 0xff, 0x01, 0x00, 0x01}, // bmod.wr h e  
	{0xa128, &op_bmod,	  0,   5, 255, 0xff, 0x01, 0x00, 0x01}, // bmod.wr a f  
	{0xa129, &op_bmod,	  1,   5, 255, 0xff, 0x01, 0x00, 0x01}, // bmod.wr b f  
	{0xa12a, &op_bmod,	  2,   5, 255, 0xff, 0x01, 0x00, 0x01}, // bmod.wr c f  
	{0xa12b, &op_bmod,	  3,   5, 255, 0xff, 0x01, 0x00, 0x01}, // bmod.wr d f  
	{0xa12c, &op_bmod,	  4,   5, 255, 0xff, 0x01, 0x00, 0x01}, // bmod.wr e f  
	{0xa12d, &op_bmod,	  5,   5, 255, 0xff, 0x01, 0x00, 0x01}, // bmod.wr f f  
	{0xa12e, &op_bmod,	  6,   5, 255, 0xff, 0x01, 0x00, 0x01}, // bmod.wr g f  
	{0xa12f, &op_bmod,	  7,   5, 255, 0xff, 0x01, 0x00, 0x01}, // bmod.wr h f  
	{0xa130, &op_bmod,	  0,   6, 255, 0xff, 0x01, 0x00, 0x01}, // bmod.wr a g  
	{0xa131, &op_bmod,	  1,   6, 255, 0xff, 0x01, 0x00, 0x01}, // bmod.wr b g  
	{0xa132, &op_bmod,	  2,   6, 255, 0xff, 0x01, 0x00, 0x01}, // bmod.wr c g  
	{0xa133, &op_bmod,	  3,   6, 255, 0xff, 0x01, 0x00, 0x01}, // bmod.wr d g  
	{0xa134, &op_bmod,	  4,   6, 255, 0xff, 0x01, 0x00, 0x01}, // bmod.wr e g  
	{0xa135, &op_bmod,	  5,   6, 255, 0xff, 0x01, 0x00, 0x01}, // bmod.wr f g  
	{0xa136, &op_bmod,	  6,   6, 255, 0xff, 0x01, 0x00, 0x01}, // bmod.wr g g  
	{0xa137, &op_bmod,	  7,   6, 255, 0xff, 0x01, 0x00, 0x01}, // bmod.wr h g  
	{0xa138, &op_bmod,	  0,   7, 255, 0xff, 0x01, 0x00, 0x01}, // bmod.wr a h  
	{0xa139, &op_bmod,	  1,   7, 255, 0xff, 0x01, 0x00, 0x01}, // bmod.wr b h  
	{0xa13a, &op_bmod,	  2,   7, 255, 0xff, 0x01, 0x00, 0x01}, // bmod.wr c h  
	{0xa13b, &op_bmod,	  3,   7, 255, 0xff, 0x01, 0x00, 0x01}, // bmod.wr d h  
	{0xa13c, &op_bmod,	  4,   7, 255, 0xff, 0x01, 0x00, 0x01}, // bmod.wr e h  
	{0xa13d, &op_bmod,	  5,   7, 255, 0xff, 0x01, 0x00, 0x01}, // bmod.wr f h  
	{0xa13e, &op_bmod,	  6,   7, 255, 0xff, 0x01, 0x00, 0x01}, // bmod.wr g h  
	{0xa13f, &op_bmod,	  7,   7, 255, 0xff, 0x01, 0x00, 0x01}, // bmod.wr h h  
	{0xa140, &op_bmod,	  0,   0, 255, 0xff, 0x01, 0x00, 0x02}, // bmod.dr a a  
	{0xa141, &op_bmod,	  1,   0, 255, 0xff, 0x01, 0x00, 0x02}, // bmod.dr b a  
	{0xa142, &op_bmod,	  2,   0, 255, 0xff, 0x01, 0x00, 0x02}, // bmod.dr c a  
	{0xa143, &op_bmod,	  3,   0, 255, 0xff, 0x01, 0x00, 0x02}, // bmod.dr d a  
	{0xa144, &op_bmod,	  4,   0, 255, 0xff, 0x01, 0x00, 0x02}, // bmod.dr e a  
	{0xa145, &op_bmod,	  5,   0, 255, 0xff, 0x01, 0x00, 0x02}, // bmod.dr f a  
	{0xa146, &op_bmod,	  6,   0, 255, 0xff, 0x01, 0x00, 0x02}, // bmod.dr g a  
	{0xa147, &op_bmod,	  7,   0, 255, 0xff, 0x01, 0x00, 0x02}, // bmod.dr h a  
	{0xa148, &op_bmod,	  0,   1, 255, 0xff, 0x01, 0x00, 0x02}, // bmod.dr a b  
	{0xa149, &op_bmod,	  1,   1, 255, 0xff, 0x01, 0x00, 0x02}, // bmod.dr b b  
	{0xa14a, &op_bmod,	  2,   1, 255, 0xff, 0x01, 0x00, 0x02}, // bmod.dr c b  
	{0xa14b, &op_bmod,	  3,   1, 255, 0xff, 0x01, 0x00, 0x02}, // bmod.dr d b  
	{0xa14c, &op_bmod,	  4,   1, 255, 0xff, 0x01, 0x00, 0x02}, // bmod.dr e b  
	{0xa14d, &op_bmod,	  5,   1, 255, 0xff, 0x01, 0x00, 0x02}, // bmod.dr f b  
	{0xa14e, &op_bmod,	  6,   1, 255, 0xff, 0x01, 0x00, 0x02}, // bmod.dr g b  
	{0xa14f, &op_bmod,	  7,   1, 255, 0xff, 0x01, 0x00, 0x02}, // bmod.dr h b  
	{0xa150, &op_bmod,	  0,   2, 255, 0xff, 0x01, 0x00, 0x02}, // bmod.dr a c  
	{0xa151, &op_bmod,	  1,   2, 255, 0xff, 0x01, 0x00, 0x02}, // bmod.dr b c  
	{0xa152, &op_bmod,	  2,   2, 255, 0xff, 0x01, 0x00, 0x02}, // bmod.dr c c  
	{0xa153, &op_bmod,	  3,   2, 255, 0xff, 0x01, 0x00, 0x02}, // bmod.dr d c  
	{0xa154, &op_bmod,	  4,   2, 255, 0xff, 0x01, 0x00, 0x02}, // bmod.dr e c  
	{0xa155, &op_bmod,	  5,   2, 255, 0xff, 0x01, 0x00, 0x02}, // bmod.dr f c  
	{0xa156, &op_bmod,	  6,   2, 255, 0xff, 0x01, 0x00, 0x02}, // bmod.dr g c  
	{0xa157, &op_bmod,	  7,   2, 255, 0xff, 0x01, 0x00, 0x02}, // bmod.dr h c  
	{0xa158, &op_bmod,	  0,   3, 255, 0xff, 0x01, 0x00, 0x02}, // bmod.dr a d  
	{0xa159, &op_bmod,	  1,   3, 255, 0xff, 0x01, 0x00, 0x02}, // bmod.dr b d  
	{0xa15a, &op_bmod,	  2,   3, 255, 0xff, 0x01, 0x00, 0x02}, // bmod.dr c d  
	{0xa15b, &op_bmod,	  3,   3, 255, 0xff, 0x01, 0x00, 0x02}, // bmod.dr d d  
	{0xa15c, &op_bmod,	  4,   3, 255, 0xff, 0x01, 0x00, 0x02}, // bmod.dr e d  
	{0xa15d, &op_bmod,	  5,   3, 255, 0xff, 0x01, 0x00, 0x02}, // bmod.dr f d  
	{0xa15e, &op_bmod,	  6,   3, 255, 0xff, 0x01, 0x00, 0x02}, // bmod.dr g d  
	{0xa15f, &op_bmod,	  7,   3, 255, 0xff, 0x01, 0x00, 0x02}, // bmod.dr h d  
	{0xa160, &op_bmod,	  0,   4, 255, 0xff, 0x01, 0x00, 0x02}, // bmod.dr a e  
	{0xa161, &op_bmod,	  1,   4, 255, 0xff, 0x01, 0x00, 0x02}, // bmod.dr b e  
	{0xa162, &op_bmod,	  2,   4, 255, 0xff, 0x01, 0x00, 0x02}, // bmod.dr c e  
	{0xa163, &op_bmod,	  3,   4, 255, 0xff, 0x01, 0x00, 0x02}, // bmod.dr d e  
	{0xa164, &op_bmod,	  4,   4, 255, 0xff, 0x01, 0x00, 0x02}, // bmod.dr e e  
	{0xa165, &op_bmod,	  5,   4, 255, 0xff, 0x01, 0x00, 0x02}, // bmod.dr f e  
	{0xa166, &op_bmod,	  6,   4, 255, 0xff, 0x01, 0x00, 0x02}, // bmod.dr g e  
	{0xa167, &op_bmod,	  7,   4, 255, 0xff, 0x01, 0x00, 0x02}, // bmod.dr h e  
	{0xa168, &op_bmod,	  0,   5, 255, 0xff, 0x01, 0x00, 0x02}, // bmod.dr a f  
	{0xa169, &op_bmod,	  1,   5, 255, 0xff, 0x01, 0x00, 0x02}, // bmod.dr b f  
	{0xa16a, &op_bmod,	  2,   5, 255, 0xff, 0x01, 0x00, 0x02}, // bmod.dr c f  
	{0xa16b, &op_bmod,	  3,   5, 255, 0xff, 0x01, 0x00, 0x02}, // bmod.dr d f  
	{0xa16c, &op_bmod,	  4,   5, 255, 0xff, 0x01, 0x00, 0x02}, // bmod.dr e f  
	{0xa16d, &op_bmod,	  5,   5, 255, 0xff, 0x01, 0x00, 0x02}, // bmod.dr f f  
	{0xa16e, &op_bmod,	  6,   5, 255, 0xff, 0x01, 0x00, 0x02}, // bmod.dr g f  
	{0xa16f, &op_bmod,	  7,   5, 255, 0xff, 0x01, 0x00, 0x02}, // bmod.dr h f  
	{0xa170, &op_bmod,	  0,   6, 255, 0xff, 0x01, 0x00, 0x02}, // bmod.dr a g  
	{0xa171, &op_bmod,	  1,   6, 255, 0xff, 0x01, 0x00, 0x02}, // bmod.dr b g  
	{0xa172, &op_bmod,	  2,   6, 255, 0xff, 0x01, 0x00, 0x02}, // bmod.dr c g  
	{0xa173, &op_bmod,	  3,   6, 255, 0xff, 0x01, 0x00, 0x02}, // bmod.dr d g  
	{0xa174, &op_bmod,	  4,   6, 255, 0xff, 0x01, 0x00, 0x02}, // bmod.dr e g  
	{0xa175, &op_bmod,	  5,   6, 255, 0xff, 0x01, 0x00, 0x02}, // bmod.dr f g  
	{0xa176, &op_bmod,	  6,   6, 255, 0xff, 0x01, 0x00, 0x02}, // bmod.dr g g  
	{0xa177, &op_bmod,	  7,   6, 255, 0xff, 0x01, 0x00, 0x02}, // bmod.dr h g  
	{0xa178, &op_bmod,	  0,   7, 255, 0xff, 0x01, 0x00, 0x02}, // bmod.dr a h  
	{0xa179, &op_bmod,	  1,   7, 255, 0xff, 0x01, 0x00, 0x02}, // bmod.dr b h  
	{0xa17a, &op_bmod,	  2,   7, 255, 0xff, 0x01, 0x00, 0x02}, // bmod.dr c h  
	{0xa17b, &op_bmod,	  3,   7, 255, 0xff, 0x01, 0x00, 0x02}, // bmod.dr d h  
	{0xa17c, &op_bmod,	  4,   7, 255, 0xff, 0x01, 0x00, 0x02}, // bmod.dr e h  
	{0xa17d, &op_bmod,	  5,   7, 255, 0xff, 0x01, 0x00, 0x02}, // bmod.dr f h  
	{0xa17e, &op_bmod,	  6,   7, 255, 0xff, 0x01, 0x00, 0x02}, // bmod.dr g h  
	{0xa17f, &op_bmod,	  7,   7, 255, 0xff, 0x01, 0x00, 0x02}, // bmod.dr h h  
	{0xa180, &op_bmod,	  0,   0, 255, 0xff, 0x01, 0x00, 0x04}, // bmod.r a a  
	{0xa181, &op_bmod,	  1,   0, 255, 0xff, 0x01, 0x00, 0x04}, // bmod.r b a  
	{0xa182, &op_bmod,	  2,   0, 255, 0xff, 0x01, 0x00, 0x04}, // bmod.r c a  
	{0xa183, &op_bmod,	  3,   0, 255, 0xff, 0x01, 0x00, 0x04}, // bmod.r d a  
	{0xa184, &op_bmod,	  4,   0, 255, 0xff, 0x01, 0x00, 0x04}, // bmod.r e a  
	{0xa185, &op_bmod,	  5,   0, 255, 0xff, 0x01, 0x00, 0x04}, // bmod.r f a  
	{0xa186, &op_bmod,	  6,   0, 255, 0xff, 0x01, 0x00, 0x04}, // bmod.r g a  
	{0xa187, &op_bmod,	  7,   0, 255, 0xff, 0x01, 0x00, 0x04}, // bmod.r h a  
	{0xa188, &op_bmod,	  0,   1, 255, 0xff, 0x01, 0x00, 0x04}, // bmod.r a b  
	{0xa189, &op_bmod,	  1,   1, 255, 0xff, 0x01, 0x00, 0x04}, // bmod.r b b  
	{0xa18a, &op_bmod,	  2,   1, 255, 0xff, 0x01, 0x00, 0x04}, // bmod.r c b  
	{0xa18b, &op_bmod,	  3,   1, 255, 0xff, 0x01, 0x00, 0x04}, // bmod.r d b  
	{0xa18c, &op_bmod,	  4,   1, 255, 0xff, 0x01, 0x00, 0x04}, // bmod.r e b  
	{0xa18d, &op_bmod,	  5,   1, 255, 0xff, 0x01, 0x00, 0x04}, // bmod.r f b  
	{0xa18e, &op_bmod,	  6,   1, 255, 0xff, 0x01, 0x00, 0x04}, // bmod.r g b  
	{0xa18f, &op_bmod,	  7,   1, 255, 0xff, 0x01, 0x00, 0x04}, // bmod.r h b  
	{0xa190, &op_bmod,	  0,   2, 255, 0xff, 0x01, 0x00, 0x04}, // bmod.r a c  
	{0xa191, &op_bmod,	  1,   2, 255, 0xff, 0x01, 0x00, 0x04}, // bmod.r b c  
	{0xa192, &op_bmod,	  2,   2, 255, 0xff, 0x01, 0x00, 0x04}, // bmod.r c c  
	{0xa193, &op_bmod,	  3,   2, 255, 0xff, 0x01, 0x00, 0x04}, // bmod.r d c  
	{0xa194, &op_bmod,	  4,   2, 255, 0xff, 0x01, 0x00, 0x04}, // bmod.r e c  
	{0xa195, &op_bmod,	  5,   2, 255, 0xff, 0x01, 0x00, 0x04}, // bmod.r f c  
	{0xa196, &op_bmod,	  6,   2, 255, 0xff, 0x01, 0x00, 0x04}, // bmod.r g c  
	{0xa197, &op_bmod,	  7,   2, 255, 0xff, 0x01, 0x00, 0x04}, // bmod.r h c  
	{0xa198, &op_bmod,	  0,   3, 255, 0xff, 0x01, 0x00, 0x04}, // bmod.r a d  
	{0xa199, &op_bmod,	  1,   3, 255, 0xff, 0x01, 0x00, 0x04}, // bmod.r b d  
	{0xa19a, &op_bmod,	  2,   3, 255, 0xff, 0x01, 0x00, 0x04}, // bmod.r c d  
	{0xa19b, &op_bmod,	  3,   3, 255, 0xff, 0x01, 0x00, 0x04}, // bmod.r d d  
	{0xa19c, &op_bmod,	  4,   3, 255, 0xff, 0x01, 0x00, 0x04}, // bmod.r e d  
	{0xa19d, &op_bmod,	  5,   3, 255, 0xff, 0x01, 0x00, 0x04}, // bmod.r f d  
	{0xa19e, &op_bmod,	  6,   3, 255, 0xff, 0x01, 0x00, 0x04}, // bmod.r g d  
	{0xa19f, &op_bmod,	  7,   3, 255, 0xff, 0x01, 0x00, 0x04}, // bmod.r h d  
	{0xa1a0, &op_bmod,	  0,   4, 255, 0xff, 0x01, 0x00, 0x04}, // bmod.r a e  
	{0xa1a1, &op_bmod,	  1,   4, 255, 0xff, 0x01, 0x00, 0x04}, // bmod.r b e  
	{0xa1a2, &op_bmod,	  2,   4, 255, 0xff, 0x01, 0x00, 0x04}, // bmod.r c e  
	{0xa1a3, &op_bmod,	  3,   4, 255, 0xff, 0x01, 0x00, 0x04}, // bmod.r d e  
	{0xa1a4, &op_bmod,	  4,   4, 255, 0xff, 0x01, 0x00, 0x04}, // bmod.r e e  
	{0xa1a5, &op_bmod,	  5,   4, 255, 0xff, 0x01, 0x00, 0x04}, // bmod.r f e  
	{0xa1a6, &op_bmod,	  6,   4, 255, 0xff, 0x01, 0x00, 0x04}, // bmod.r g e  
	{0xa1a7, &op_bmod,	  7,   4, 255, 0xff, 0x01, 0x00, 0x04}, // bmod.r h e  
	{0xa1a8, &op_bmod,	  0,   5, 255, 0xff, 0x01, 0x00, 0x04}, // bmod.r a f  
	{0xa1a9, &op_bmod,	  1,   5, 255, 0xff, 0x01, 0x00, 0x04}, // bmod.r b f  
	{0xa1aa, &op_bmod,	  2,   5, 255, 0xff, 0x01, 0x00, 0x04}, // bmod.r c f  
	{0xa1ab, &op_bmod,	  3,   5, 255, 0xff, 0x01, 0x00, 0x04}, // bmod.r d f  
	{0xa1ac, &op_bmod,	  4,   5, 255, 0xff, 0x01, 0x00, 0x04}, // bmod.r e f  
	{0xa1ad, &op_bmod,	  5,   5, 255, 0xff, 0x01, 0x00, 0x04}, // bmod.r f f  
	{0xa1ae, &op_bmod,	  6,   5, 255, 0xff, 0x01, 0x00, 0x04}, // bmod.r g f  
	{0xa1af, &op_bmod,	  7,   5, 255, 0xff, 0x01, 0x00, 0x04}, // bmod.r h f  
	{0xa1b0, &op_bmod,	  0,   6, 255, 0xff, 0x01, 0x00, 0x04}, // bmod.r a g  
	{0xa1b1, &op_bmod,	  1,   6, 255, 0xff, 0x01, 0x00, 0x04}, // bmod.r b g  
	{0xa1b2, &op_bmod,	  2,   6, 255, 0xff, 0x01, 0x00, 0x04}, // bmod.r c g  
	{0xa1b3, &op_bmod,	  3,   6, 255, 0xff, 0x01, 0x00, 0x04}, // bmod.r d g  
	{0xa1b4, &op_bmod,	  4,   6, 255, 0xff, 0x01, 0x00, 0x04}, // bmod.r e g  
	{0xa1b5, &op_bmod,	  5,   6, 255, 0xff, 0x01, 0x00, 0x04}, // bmod.r f g  
	{0xa1b6, &op_bmod,	  6,   6, 255, 0xff, 0x01, 0x00, 0x04}, // bmod.r g g  
	{0xa1b7, &op_bmod,	  7,   6, 255, 0xff, 0x01, 0x00, 0x04}, // bmod.r h g  
	{0xa1b8, &op_bmod,	  0,   7, 255, 0xff, 0x01, 0x00, 0x04}, // bmod.r a h  
	{0xa1b9, &op_bmod,	  1,   7, 255, 0xff, 0x01, 0x00, 0x04}, // bmod.r b h  
	{0xa1ba, &op_bmod,	  2,   7, 255, 0xff, 0x01, 0x00, 0x04}, // bmod.r c h  
	{0xa1bb, &op_bmod,	  3,   7, 255, 0xff, 0x01, 0x00, 0x04}, // bmod.r d h  
	{0xa1bc, &op_bmod,	  4,   7, 255, 0xff, 0x01, 0x00, 0x04}, // bmod.r e h  
	{0xa1bd, &op_bmod,	  5,   7, 255, 0xff, 0x01, 0x00, 0x04}, // bmod.r f h  
	{0xa1be, &op_bmod,	  6,   7, 255, 0xff, 0x01, 0x00, 0x04}, // bmod.r g h  
	{0xa1bf, &op_bmod,	  7,   7, 255, 0xff, 0x01, 0x00, 0x04}, // bmod.r h h  
	{0xa0c8, &op_bmod,	  0,   8, 255, 0xff, 0x00, 0x01, 0x01}, // bmod.wi a <literal>  
	{0xa0c9, &op_bmod,	  1,   8, 255, 0xff, 0x00, 0x01, 0x01}, // bmod.wi b <literal>  
	{0xa0ca, &op_bmod,	  2,   8, 255, 0xff, 0x00, 0x01, 0x01}, // bmod.wi c <literal>  
	{0xa0cb, &op_bmod,	  3,   8, 255, 0xff, 0x00, 0x01, 0x01}, // bmod.wi d <literal>  
	{0xa0cc, &op_bmod,	  4,   8, 255, 0xff, 0x00, 0x01, 0x01}, // bmod.wi e <literal>  
	{0xa0cd, &op_bmod,	  5,   8, 255, 0xff, 0x00, 0x01, 0x01}, // bmod.wi f <literal>  
	{0xa0ce, &op_bmod,	  6,   8, 255, 0xff, 0x00, 0x01, 0x01}, // bmod.wi g <literal>  
	{0xa0cf, &op_bmod,	  7,   8, 255, 0xff, 0x00, 0x01, 0x01}, // bmod.wi h <literal>  
	{0xa0d0, &op_bmod,	  0,   8, 255, 0xff, 0x00, 0x02, 0x02}, // bmod.di a <literal>  
	{0xa0d1, &op_bmod,	  1,   8, 255, 0xff, 0x00, 0x02, 0x02}, // bmod.di b <literal>  
	{0xa0d2, &op_bmod,	  2,   8, 255, 0xff, 0x00, 0x02, 0x02}, // bmod.di c <literal>  
	{0xa0d3, &op_bmod,	  3,   8, 255, 0xff, 0x00, 0x02, 0x02}, // bmod.di d <literal>  
	{0xa0d4, &op_bmod,	  4,   8, 255, 0xff, 0x00, 0x02, 0x02}, // bmod.di e <literal>  
	{0xa0d5, &op_bmod,	  5,   8, 255, 0xff, 0x00, 0x02, 0x02}, // bmod.di f <literal>  
	{0xa0d6, &op_bmod,	  6,   8, 255, 0xff, 0x00, 0x02, 0x02}, // bmod.di g <literal>  
	{0xa0d7, &op_bmod,	  7,   8, 255, 0xff, 0x00, 0x02, 0x02}, // bmod.di h <literal>  
	{0xa0e0, &op_bmod,	  0,   8, 255, 0xff, 0x00, 0x04, 0x04}, // bmod.i a <literal>  
	{0xa0e1, &op_bmod,	  1,   8, 255, 0xff, 0x00, 0x04, 0x04}, // bmod.i b <literal>  
	{0xa0e2, &op_bmod,	  2,   8, 255, 0xff, 0x00, 0x04, 0x04}, // bmod.i c <literal>  
	{0xa0e3, &op_bmod,	  3,   8, 255, 0xff, 0x00, 0x04, 0x04}, // bmod.i d <literal>  
	{0xa0e4, &op_bmod,	  4,   8, 255, 0xff, 0x00, 0x04, 0x04}, // bmod.i e <literal>  
	{0xa0e5, &op_bmod,	  5,   8, 255, 0xff, 0x00, 0x04, 0x04}, // bmod.i f <literal>  
	{0xa0e6, &op_bmod,	  6,   8, 255, 0xff, 0x00, 0x04, 0x04}, // bmod.i g <literal>  
	{0xa0e7, &op_bmod,	  7,   8, 255, 0xff, 0x00, 0x04, 0x04}, // bmod.i h <literal>  
	{0xa1c8, &op_bmod,	  0,   8, 255, 0xff, 0x01, 0x04, 0x01}, // bmod.wri a <literal>  
	{0xa1c9, &op_bmod,	  1,   8, 255, 0xff, 0x01, 0x04, 0x01}, // bmod.wri b <literal>  
	{0xa1ca, &op_bmod,	  2,   8, 255, 0xff, 0x01, 0x04, 0x01}, // bmod.wri c <literal>  
	{0xa1cb, &op_bmod,	  3,   8, 255, 0xff, 0x01, 0x04, 0x01}, // bmod.wri d <literal>  
	{0xa1cc, &op_bmod,	  4,   8, 255, 0xff, 0x01, 0x04, 0x01}, // bmod.wri e <literal>  
	{0xa1cd, &op_bmod,	  5,   8, 255, 0xff, 0x01, 0x04, 0x01}, // bmod.wri f <literal>  
	{0xa1ce, &op_bmod,	  6,   8, 255, 0xff, 0x01, 0x04, 0x01}, // bmod.wri g <literal>  
	{0xa1cf, &op_bmod,	  7,   8, 255, 0xff, 0x01, 0x04, 0x01}, // bmod.wri h <literal>  
	{0xa1d0, &op_bmod,	  0,   8, 255, 0xff, 0x01, 0x04, 0x02}, // bmod.dri a <literal>  
	{0xa1d1, &op_bmod,	  1,   8, 255, 0xff, 0x01, 0x04, 0x02}, // bmod.dri b <literal>  
	{0xa1d2, &op_bmod,	  2,   8, 255, 0xff, 0x01, 0x04, 0x02}, // bmod.dri c <literal>  
	{0xa1d3, &op_bmod,	  3,   8, 255, 0xff, 0x01, 0x04, 0x02}, // bmod.dri d <literal>  
	{0xa1d4, &op_bmod,	  4,   8, 255, 0xff, 0x01, 0x04, 0x02}, // bmod.dri e <literal>  
	{0xa1d5, &op_bmod,	  5,   8, 255, 0xff, 0x01, 0x04, 0x02}, // bmod.dri f <literal>  
	{0xa1d6, &op_bmod,	  6,   8, 255, 0xff, 0x01, 0x04, 0x02}, // bmod.dri g <literal>  
	{0xa1d7, &op_bmod,	  7,   8, 255, 0xff, 0x01, 0x04, 0x02}, // bmod.dri h <literal>  
	{0xa1e0, &op_bmod,	  0,   8, 255, 0xff, 0x01, 0x04, 0x04}, // bmod.ri a <literal>  
	{0xa1e1, &op_bmod,	  1,   8, 255, 0xff, 0x01, 0x04, 0x04}, // bmod.ri b <literal>  
	{0xa1e2, &op_bmod,	  2,   8, 255, 0xff, 0x01, 0x04, 0x04}, // bmod.ri c <literal>  
	{0xa1e3, &op_bmod,	  3,   8, 255, 0xff, 0x01, 0x04, 0x04}, // bmod.ri d <literal>  
	{0xa1e4, &op_bmod,	  4,   8, 255, 0xff, 0x01, 0x04, 0x04}, // bmod.ri e <literal>  
	{0xa1e5, &op_bmod,	  5,   8, 255, 0xff, 0x01, 0x04, 0x04}, // bmod.ri f <literal>  
	{0xa1e6, &op_bmod,	  6,   8, 255, 0xff, 0x01, 0x04, 0x04}, // bmod.ri g <literal>  
	{0xa1e7, &op_bmod,	  7,   8, 255, 0xff, 0x01, 0x04, 0x04}, // bmod.ri h <literal>  
	{0xa200, &op_badd,	  0,   0, 255, 0xff, 0x00, 0x00, 0x01}, // badd.w a a  
	{0xa201, &op_badd,	  1,   0, 255, 0xff, 0x00, 0x00, 0x01}, // badd.w b a  
	{0xa202, &op_badd,	  2,   0, 255, 0xff, 0x00, 0x00, 0x01}, // badd.w c a  
	{0xa203, &op_badd,	  3,   0, 255, 0xff, 0x00, 0x00, 0x01}, // badd.w d a  
	{0xa204, &op_badd,	  4,   0, 255, 0xff, 0x00, 0x00, 0x01}, // badd.w e a  
	{0xa205, &op_badd,	  5,   0, 255, 0xff, 0x00, 0x00, 0x01}, // badd.w f a  
	{0xa206, &op_badd,	  6,   0, 255, 0xff, 0x00, 0x00, 0x01}, // badd.w g a  
	{0xa207, &op_badd,	  7,   0, 255, 0xff, 0x00, 0x00, 0x01}, // badd.w h a  
	{0xa208, &op_badd,	  0,   1, 255, 0xff, 0x00, 0x00, 0x01}, // badd.w a b  
	{0xa209, &op_badd,	  1,   1, 255, 0xff, 0x00, 0x00, 0x01}, // badd.w b b  
	{0xa20a, &op_badd,	  2,   1, 255, 0xff, 0x00, 0x00, 0x01}, // badd.w c b  
	{0xa20b, &op_badd,	  3,   1, 255, 0xff, 0x00, 0x00, 0x01}, // badd.w d b  
	{0xa20c, &op_badd,	  4,   1, 255, 0xff, 0x00, 0x00, 0x01}, // badd.w e b  
	{0xa20d, &op_badd,	  5,   1, 255, 0xff, 0x00, 0x00, 0x01}, // badd.w f b  
	{0xa20e, &op_badd,	  6,   1, 255, 0xff, 0x00, 0x00, 0x01}, // badd.w g b  
	{0xa20f, &op_badd,	  7,   1, 255, 0xff, 0x00, 0x00, 0x01}, // badd.w h b  
	{0xa210, &op_badd,	  0,   2, 255, 0xff, 0x00, 0x00, 0x01}, // badd.w a c  
	{0xa211, &op_badd,	  1,   2, 255, 0xff, 0x00, 0x00, 0x01}, // badd.w b c  
	{0xa212, &op_badd,	  2,   2, 255, 0xff, 0x00, 0x00, 0x01}, // badd.w c c  
	{0xa213, &op_badd,	  3,   2, 255, 0xff, 0x00, 0x00, 0x01}, // badd.w d c  
	{0xa214, &op_badd,	  4,   2, 255, 0xff, 0x00, 0x00, 0x01}, // badd.w e c  
	{0xa215, &op_badd,	  5,   2, 255, 0xff, 0x00, 0x00, 0x01}, // badd.w f c  
	{0xa216, &op_badd,	  6,   2, 255, 0xff, 0x00, 0x00, 0x01}, // badd.w g c  
	{0xa217, &op_badd,	  7,   2, 255, 0xff, 0x00, 0x00, 0x01}, // badd.w h c  
	{0xa218, &op_badd,	  0,   3, 255, 0xff, 0x00, 0x00, 0x01}, // badd.w a d  
	{0xa219, &op_badd,	  1,   3, 255, 0xff, 0x00, 0x00, 0x01}, // badd.w b d  
	{0xa21a, &op_badd,	  2,   3, 255, 0xff, 0x00, 0x00, 0x01}, // badd.w c d  
	{0xa21b, &op_badd,	  3,   3, 255, 0xff, 0x00, 0x00, 0x01}, // badd.w d d  
	{0xa21c, &op_badd,	  4,   3, 255, 0xff, 0x00, 0x00, 0x01}, // badd.w e d  
	{0xa21d, &op_badd,	  5,   3, 255, 0xff, 0x00, 0x00, 0x01}, // badd.w f d  
	{0xa21e, &op_badd,	  6,   3, 255, 0xff, 0x00, 0x00, 0x01}, // badd.w g d  
	{0xa21f, &op_badd,	  7,   3, 255, 0xff, 0x00, 0x00, 0x01}, // badd.w h d  
	{0xa220, &op_badd,	  0,   4, 255, 0xff, 0x00, 0x00, 0x01}, // badd.w a e  
	{0xa221, &op_badd,	  1,   4, 255, 0xff, 0x00, 0x00, 0x01}, // badd.w b e  
	{0xa222, &op_badd,	  2,   4, 255, 0xff, 0x00, 0x00, 0x01}, // badd.w c e  
	{0xa223, &op_badd,	  3,   4, 255, 0xff, 0x00, 0x00, 0x01}, // badd.w d e  
	{0xa224, &op_badd,	  4,   4, 255, 0xff, 0x00, 0x00, 0x01}, // badd.w e e  
	{0xa225, &op_badd,	  5,   4, 255, 0xff, 0x00, 0x00, 0x01}, // badd.w f e  
	{0xa226, &op_badd,	  6,   4, 255, 0xff, 0x00, 0x00, 0x01}, // badd.w g e  
	{0xa227, &op_badd,	  7,   4, 255, 0xff, 0x00, 0x00, 0x01}, // badd.w h e  
	{0xa228, &op_badd,	  0,   5, 255, 0xff, 0x00, 0x00, 0x01}, // badd.w a f  
	{0xa229, &op_badd,	  1,   5, 255, 0xff, 0x00, 0x00, 0x01}, // badd.w b f  
	{0xa22a, &op_badd,	  2,   5, 255, 0xff, 0x00, 0x00, 0x01}, // badd.w c f  
	{0xa22b, &op_badd,	  3,   5, 255, 0xff, 0x00, 0x00, 0x01}, // badd.w d f  
	{0xa22c, &op_badd,	  4,   5, 255, 0xff, 0x00, 0x00, 0x01}, // badd.w e f  
	{0xa22d, &op_badd,	  5,   5, 255, 0xff, 0x00, 0x00, 0x01}, // badd.w f f  
	{0xa22e, &op_badd,	  6,   5, 255, 0xff, 0x00, 0x00, 0x01}, // badd.w g f  
	{0xa22f, &op_badd,	  7,   5, 255, 0xff, 0x00, 0x00, 0x01}, // badd.w h f  
	{0xa230, &op_badd,	  0,   6, 255, 0xff, 0x00, 0x00, 0x01}, // badd.w a g  
	{0xa231, &op_badd,	  1,   6, 255, 0xff, 0x00, 0x00, 0x01}, // badd.w b g  
	{0xa232, &op_badd,	  2,   6, 255, 0xff, 0x00, 0x00, 0x01}, // badd.w c g  
	{0xa233, &op_badd,	  3,   6, 255, 0xff, 0x00, 0x00, 0x01}, // badd.w d g  
	{0xa234, &op_badd,	  4,   6, 255, 0xff, 0x00, 0x00, 0x01}, // badd.w e g  
	{0xa235, &op_badd,	  5,   6, 255, 0xff, 0x00, 0x00, 0x01}, // badd.w f g  
	{0xa236, &op_badd,	  6,   6, 255, 0xff, 0x00, 0x00, 0x01}, // badd.w g g  
	{0xa237, &op_badd,	  7,   6, 255, 0xff, 0x00, 0x00, 0x01}, // badd.w h g  
	{0xa238, &op_badd,	  0,   7, 255, 0xff, 0x00, 0x00, 0x01}, // badd.w a h  
	{0xa239, &op_badd,	  1,   7, 255, 0xff, 0x00, 0x00, 0x01}, // badd.w b h  
	{0xa23a, &op_badd,	  2,   7, 255, 0xff, 0x00, 0x00, 0x01}, // badd.w c h  
	{0xa23b, &op_badd,	  3,   7, 255, 0xff, 0x00, 0x00, 0x01}, // badd.w d h  
	{0xa23c, &op_badd,	  4,   7, 255, 0xff, 0x00, 0x00, 0x01}, // badd.w e h  
	{0xa23d, &op_badd,	  5,   7, 255, 0xff, 0x00, 0x00, 0x01}, // badd.w f h  
	{0xa23e, &op_badd,	  6,   7, 255, 0xff, 0x00, 0x00, 0x01}, // badd.w g h  
	{0xa23f, &op_badd,	  7,   7, 255, 0xff, 0x00, 0x00, 0x01}, // badd.w h h  
	{0xa240, &op_badd,	  0,   0, 255, 0xff, 0x00, 0x00, 0x02}, // badd.d a a  
	{0xa241, &op_badd,	  1,   0, 255, 0xff, 0x00, 0x00, 0x02}, // badd.d b a  
	{0xa242, &op_badd,	  2,   0, 255, 0xff, 0x00, 0x00, 0x02}, // badd.d c a  
	{0xa243, &op_badd,	  3,   0, 255, 0xff, 0x00, 0x00, 0x02}, // badd.d d a  
	{0xa244, &op_badd,	  4,   0, 255, 0xff, 0x00, 0x00, 0x02}, // badd.d e a  
	{0xa245, &op_badd,	  5,   0, 255, 0xff, 0x00, 0x00, 0x02}, // badd.d f a  
	{0xa246, &op_badd,	  6,   0, 255, 0xff, 0x00, 0x00, 0x02}, // badd.d g a  
	{0xa247, &op_badd,	  7,   0, 255, 0xff, 0x00, 0x00, 0x02}, // badd.d h a  
	{0xa248, &op_badd,	  0,   1, 255, 0xff, 0x00, 0x00, 0x02}, // badd.d a b  
	{0xa249, &op_badd,	  1,   1, 255, 0xff, 0x00, 0x00, 0x02}, // badd.d b b  
	{0xa24a, &op_badd,	  2,   1, 255, 0xff, 0x00, 0x00, 0x02}, // badd.d c b  
	{0xa24b, &op_badd,	  3,   1, 255, 0xff, 0x00, 0x00, 0x02}, // badd.d d b  
	{0xa24c, &op_badd,	  4,   1, 255, 0xff, 0x00, 0x00, 0x02}, // badd.d e b  
	{0xa24d, &op_badd,	  5,   1, 255, 0xff, 0x00, 0x00, 0x02}, // badd.d f b  
	{0xa24e, &op_badd,	  6,   1, 255, 0xff, 0x00, 0x00, 0x02}, // badd.d g b  
	{0xa24f, &op_badd,	  7,   1, 255, 0xff, 0x00, 0x00, 0x02}, // badd.d h b  
	{0xa250, &op_badd,	  0,   2, 255, 0xff, 0x00, 0x00, 0x02}, // badd.d a c  
	{0xa251, &op_badd,	  1,   2, 255, 0xff, 0x00, 0x00, 0x02}, // badd.d b c  
	{0xa252, &op_badd,	  2,   2, 255, 0xff, 0x00, 0x00, 0x02}, // badd.d c c  
	{0xa253, &op_badd,	  3,   2, 255, 0xff, 0x00, 0x00, 0x02}, // badd.d d c  
	{0xa254, &op_badd,	  4,   2, 255, 0xff, 0x00, 0x00, 0x02}, // badd.d e c  
	{0xa255, &op_badd,	  5,   2, 255, 0xff, 0x00, 0x00, 0x02}, // badd.d f c  
	{0xa256, &op_badd,	  6,   2, 255, 0xff, 0x00, 0x00, 0x02}, // badd.d g c  
	{0xa257, &op_badd,	  7,   2, 255, 0xff, 0x00, 0x00, 0x02}, // badd.d h c  
	{0xa258, &op_badd,	  0,   3, 255, 0xff, 0x00, 0x00, 0x02}, // badd.d a d  
	{0xa259, &op_badd,	  1,   3, 255, 0xff, 0x00, 0x00, 0x02}, // badd.d b d  
	{0xa25a, &op_badd,	  2,   3, 255, 0xff, 0x00, 0x00, 0x02}, // badd.d c d  
	{0xa25b, &op_badd,	  3,   3, 255, 0xff, 0x00, 0x00, 0x02}, // badd.d d d  
	{0xa25c, &op_badd,	  4,   3, 255, 0xff, 0x00, 0x00, 0x02}, // badd.d e d  
	{0xa25d, &op_badd,	  5,   3, 255, 0xff, 0x00, 0x00, 0x02}, // badd.d f d  
	{0xa25e, &op_badd,	  6,   3, 255, 0xff, 0x00, 0x00, 0x02}, // badd.d g d  
	{0xa25f, &op_badd,	  7,   3, 255, 0xff, 0x00, 0x00, 0x02}, // badd.d h d  
	{0xa260, &op_badd,	  0,   4, 255, 0xff, 0x00, 0x00, 0x02}, // badd.d a e  
	{0xa261, &op_badd,	  1,   4, 255, 0xff, 0x00, 0x00, 0x02}, // badd.d b e  
	{0xa262, &op_badd,	  2,   4, 255, 0xff, 0x00, 0x00, 0x02}, // badd.d c e  
	{0xa263, &op_badd,	  3,   4, 255, 0xff, 0x00, 0x00, 0x02}, // badd.d d e  
	{0xa264, &op_badd,	  4,   4, 255, 0xff, 0x00, 0x00, 0x02}, // badd.d e e  
	{0xa265, &op_badd,	  5,   4, 255, 0xff, 0x00, 0x00, 0x02}, // badd.d f e  
	{0xa266, &op_badd,	  6,   4, 255, 0xff, 0x00, 0x00, 0x02}, // badd.d g e  
	{0xa267, &op_badd,	  7,   4, 255, 0xff, 0x00, 0x00, 0x02}, // badd.d h e  
	{0xa268, &op_badd,	  0,   5, 255, 0xff, 0x00, 0x00, 0x02}, // badd.d a f  
	{0xa269, &op_badd,	  1,   5, 255, 0xff, 0x00, 0x00, 0x02}, // badd.d b f  
	{0xa26a, &op_badd,	  2,   5, 255, 0xff, 0x00, 0x00, 0x02}, // badd.d c f  
	{0xa26b, &op_badd,	  3,   5, 255, 0xff, 0x00, 0x00, 0x02}, // badd.d d f  
	{0xa26c, &op_badd,	  4,   5, 255, 0xff, 0x00, 0x00, 0x02}, // badd.d e f  
	{0xa26d, &op_badd,	  5,   5, 255, 0xff, 0x00, 0x00, 0x02}, // badd.d f f  
	{0xa26e, &op_badd,	  6,   5, 255, 0xff, 0x00, 0x00, 0x02}, // badd.d g f  
	{0xa26f, &op_badd,	  7,   5, 255, 0xff, 0x00, 0x00, 0x02}, // badd.d h f  
	{0xa270, &op_badd,	  0,   6, 255, 0xff, 0x00, 0x00, 0x02}, // badd.d a g  
	{0xa271, &op_badd,	  1,   6, 255, 0xff, 0x00, 0x00, 0x02}, // badd.d b g  
	{0xa272, &op_badd,	  2,   6, 255, 0xff, 0x00, 0x00, 0x02}, // badd.d c g  
	{0xa273, &op_badd,	  3,   6, 255, 0xff, 0x00, 0x00, 0x02}, // badd.d d g  
	{0xa274, &op_badd,	  4,   6, 255, 0xff, 0x00, 0x00, 0x02}, // badd.d e g  
	{0xa275, &op_badd,	  5,   6, 255, 0xff, 0x00, 0x00, 0x02}, // badd.d f g  
	{0xa276, &op_badd,	  6,   6, 255, 0xff, 0x00, 0x00, 0x02}, // badd.d g g  
	{0xa277, &op_badd,	  7,   6, 255, 0xff, 0x00, 0x00, 0x02}, // badd.d h g  
	{0xa278, &op_badd,	  0,   7, 255, 0xff, 0x00, 0x00, 0x02}, // badd.d a h  
	{0xa279, &op_badd,	  1,   7, 255, 0xff, 0x00, 0x00, 0x02}, // badd.d b h  
	{0xa27a, &op_badd,	  2,   7, 255, 0xff, 0x00, 0x00, 0x02}, // badd.d c h  
	{0xa27b, &op_badd,	  3,   7, 255, 0xff, 0x00, 0x00, 0x02}, // badd.d d h  
	{0xa27c, &op_badd,	  4,   7, 255, 0xff, 0x00, 0x00, 0x02}, // badd.d e h  
	{0xa27d, &op_badd,	  5,   7, 255, 0xff, 0x00, 0x00, 0x02}, // badd.d f h  
	{0xa27e, &op_badd,	  6,   7, 255, 0xff, 0x00, 0x00, 0x02}, // badd.d g h  
	{0xa27f, &op_badd,	  7,   7, 255, 0xff, 0x00, 0x00, 0x02}, // badd.d h h  
	{0xa280, &op_badd,	  0,   0, 255, 0xff, 0x00, 0x00, 0x04}, // badd a a  
	{0xa281, &op_badd,	  1,   0, 255, 0xff, 0x00, 0x00, 0x04}, // badd b a  
	{0xa282, &op_badd,	  2,   0, 255, 0xff, 0x00, 0x00, 0x04}, // badd c a  
	{0xa283, &op_badd,	  3,   0, 255, 0xff, 0x00, 0x00, 0x04}, // badd d a  
	{0xa284, &op_badd,	  4,   0, 255, 0xff, 0x00, 0x00, 0x04}, // badd e a  
	{0xa285, &op_badd,	  5,   0, 255, 0xff, 0x00, 0x00, 0x04}, // badd f a  
	{0xa286, &op_badd,	  6,   0, 255, 0xff, 0x00, 0x00, 0x04}, // badd g a  
	{0xa287, &op_badd,	  7,   0, 255, 0xff, 0x00, 0x00, 0x04}, // badd h a  
	{0xa288, &op_badd,	  0,   1, 255, 0xff, 0x00, 0x00, 0x04}, // badd a b  
	{0xa289, &op_badd,	  1,   1, 255, 0xff, 0x00, 0x00, 0x04}, // badd b b  
	{0xa28a, &op_badd,	  2,   1, 255, 0xff, 0x00, 0x00, 0x04}, // badd c b  
	{0xa28b, &op_badd,	  3,   1, 255, 0xff, 0x00, 0x00, 0x04}, // badd d b  
	{0xa28c, &op_badd,	  4,   1, 255, 0xff, 0x00, 0x00, 0x04}, // badd e b  
	{0xa28d, &op_badd,	  5,   1, 255, 0xff, 0x00, 0x00, 0x04}, // badd f b  
	{0xa28e, &op_badd,	  6,   1, 255, 0xff, 0x00, 0x00, 0x04}, // badd g b  
	{0xa28f, &op_badd,	  7,   1, 255, 0xff, 0x00, 0x00, 0x04}, // badd h b  
	{0xa290, &op_badd,	  0,   2, 255, 0xff, 0x00, 0x00, 0x04}, // badd a c  
	{0xa291, &op_badd,	  1,   2, 255, 0xff, 0x00, 0x00, 0x04}, // badd b c  
	{0xa292, &op_badd,	  2,   2, 255, 0xff, 0x00, 0x00, 0x04}, // badd c c  
	{0xa293, &op_badd,	  3,   2, 255, 0xff, 0x00, 0x00, 0x04}, // badd d c  
	{0xa294, &op_badd,	  4,   2, 255, 0xff, 0x00, 0x00, 0x04}, // badd e c  
	{0xa295, &op_badd,	  5,   2, 255, 0xff, 0x00, 0x00, 0x04}, // badd f c  
	{0xa296, &op_badd,	  6,   2, 255, 0xff, 0x00, 0x00, 0x04}, // badd g c  
	{0xa297, &op_badd,	  7,   2, 255, 0xff, 0x00, 0x00, 0x04}, // badd h c  
	{0xa298, &op_badd,	  0,   3, 255, 0xff, 0x00, 0x00, 0x04}, // badd a d  
	{0xa299, &op_badd,	  1,   3, 255, 0xff, 0x00, 0x00, 0x04}, // badd b d  
	{0xa29a, &op_badd,	  2,   3, 255, 0xff, 0x00, 0x00, 0x04}, // badd c d  
	{0xa29b, &op_badd,	  3,   3, 255, 0xff, 0x00, 0x00, 0x04}, // badd d d  
	{0xa29c, &op_badd,	  4,   3, 255, 0xff, 0x00, 0x00, 0x04}, // badd e d  
	{0xa29d, &op_badd,	  5,   3, 255, 0xff, 0x00, 0x00, 0x04}, // badd f d  
	{0xa29e, &op_badd,	  6,   3, 255, 0xff, 0x00, 0x00, 0x04}, // badd g d  
	{0xa29f, &op_badd,	  7,   3, 255, 0xff, 0x00, 0x00, 0x04}, // badd h d  
	{0xa2a0, &op_badd,	  0,   4, 255, 0xff, 0x00, 0x00, 0x04}, // badd a e  
	{0xa2a1, &op_badd,	  1,   4, 255, 0xff, 0x00, 0x00, 0x04}, // badd b e  
	{0xa2a2, &op_badd,	  2,   4, 255, 0xff, 0x00, 0x00, 0x04}, // badd c e  
	{0xa2a3, &op_badd,	  3,   4, 255, 0xff, 0x00, 0x00, 0x04}, // badd d e  
	{0xa2a4, &op_badd,	  4,   4, 255, 0xff, 0x00, 0x00, 0x04}, // badd e e  
	{0xa2a5, &op_badd,	  5,   4, 255, 0xff, 0x00, 0x00, 0x04}, // badd f e  
	{0xa2a6, &op_badd,	  6,   4, 255, 0xff, 0x00, 0x00, 0x04}, // badd g e  
	{0xa2a7, &op_badd,	  7,   4, 255, 0xff, 0x00, 0x00, 0x04}, // badd h e  
	{0xa2a8, &op_badd,	  0,   5, 255, 0xff, 0x00, 0x00, 0x04}, // badd a f  
	{0xa2a9, &op_badd,	  1,   5, 255, 0xff, 0x00, 0x00, 0x04}, // badd b f  
	{0xa2aa, &op_badd,	  2,   5, 255, 0xff, 0x00, 0x00, 0x04}, // badd c f  
	{0xa2ab, &op_badd,	  3,   5, 255, 0xff, 0x00, 0x00, 0x04}, // badd d f  
	{0xa2ac, &op_badd,	  4,   5, 255, 0xff, 0x00, 0x00, 0x04}, // badd e f  
	{0xa2ad, &op_badd,	  5,   5, 255, 0xff, 0x00, 0x00, 0x04}, // badd f f  
	{0xa2ae, &op_badd,	  6,   5, 255, 0xff, 0x00, 0x00, 0x04}, // badd g f  
	{0xa2af, &op_badd,	  7,   5, 255, 0xff, 0x00, 0x00, 0x04}, // badd h f  
	{0xa2b0, &op_badd,	  0,   6, 255, 0xff, 0x00, 0x00, 0x04}, // badd a g  
	{0xa2b1, &op_badd,	  1,   6, 255, 0xff, 0x00, 0x00, 0x04}, // badd b g  
	{0xa2b2, &op_badd,	  2,   6, 255, 0xff, 0x00, 0x00, 0x04}, // badd c g  
	{0xa2b3, &op_badd,	  3,   6, 255, 0xff, 0x00, 0x00, 0x04}, // badd d g  
	{0xa2b4, &op_badd,	  4,   6, 255, 0xff, 0x00, 0x00, 0x04}, // badd e g  
	{0xa2b5, &op_badd,	  5,   6, 255, 0xff, 0x00, 0x00, 0x04}, // badd f g  
	{0xa2b6, &op_badd,	  6,   6, 255, 0xff, 0x00, 0x00, 0x04}, // badd g g  
	{0xa2b7, &op_badd,	  7,   6, 255, 0xff, 0x00, 0x00, 0x04}, // badd h g  
	{0xa2b8, &op_badd,	  0,   7, 255, 0xff, 0x00, 0x00, 0x04}, // badd a h  
	{0xa2b9, &op_badd,	  1,   7, 255, 0xff, 0x00, 0x00, 0x04}, // badd b h  
	{0xa2ba, &op_badd,	  2,   7, 255, 0xff, 0x00, 0x00, 0x04}, // badd c h  
	{0xa2bb, &op_badd,	  3,   7, 255, 0xff, 0x00, 0x00, 0x04}, // badd d h  
	{0xa2bc, &op_badd,	  4,   7, 255, 0xff, 0x00, 0x00, 0x04}, // badd e h  
	{0xa2bd, &op_badd,	  5,   7, 255, 0xff, 0x00, 0x00, 0x04}, // badd f h  
	{0xa2be, &op_badd,	  6,   7, 255, 0xff, 0x00, 0x00, 0x04}, // badd g h  
	{0xa2bf, &op_badd,	  7,   7, 255, 0xff, 0x00, 0x00, 0x04}, // badd h h  
	{0xa300, &op_badd,	  0,   0, 255, 0xff, 0x01, 0x00, 0x01}, // badd.wr a a  
	{0xa301, &op_badd,	  1,   0, 255, 0xff, 0x01, 0x00, 0x01}, // badd.wr b a  
	{0xa302, &op_badd,	  2,   0, 255, 0xff, 0x01, 0x00, 0x01}, // badd.wr c a  
	{0xa303, &op_badd,	  3,   0, 255, 0xff, 0x01, 0x00, 0x01}, // badd.wr d a  
	{0xa304, &op_badd,	  4,   0, 255, 0xff, 0x01, 0x00, 0x01}, // badd.wr e a  
	{0xa305, &op_badd,	  5,   0, 255, 0xff, 0x01, 0x00, 0x01}, // badd.wr f a  
	{0xa306, &op_badd,	  6,   0, 255, 0xff, 0x01, 0x00, 0x01}, // badd.wr g a  
	{0xa307, &op_badd,	  7,   0, 255, 0xff, 0x01, 0x00, 0x01}, // badd.wr h a  
	{0xa308, &op_badd,	  0,   1, 255, 0xff, 0x01, 0x00, 0x01}, // badd.wr a b  
	{0xa309, &op_badd,	  1,   1, 255, 0xff, 0x01, 0x00, 0x01}, // badd.wr b b  
	{0xa30a, &op_badd,	  2,   1, 255, 0xff, 0x01, 0x00, 0x01}, // badd.wr c b  
	{0xa30b, &op_badd,	  3,   1, 255, 0xff, 0x01, 0x00, 0x01}, // badd.wr d b  
	{0xa30c, &op_badd,	  4,   1, 255, 0xff, 0x01, 0x00, 0x01}, // badd.wr e b  
	{0xa30d, &op_badd,	  5,   1, 255, 0xff, 0x01, 0x00, 0x01}, // badd.wr f b  
	{0xa30e, &op_badd,	  6,   1, 255, 0xff, 0x01, 0x00, 0x01}, // badd.wr g b  
	{0xa30f, &op_badd,	  7,   1, 255, 0xff, 0x01, 0x00, 0x01}, // badd.wr h b  
	{0xa310, &op_badd,	  0,   2, 255, 0xff, 0x01, 0x00, 0x01}, // badd.wr a c  
	{0xa311, &op_badd,	  1,   2, 255, 0xff, 0x01, 0x00, 0x01}, // badd.wr b c  
	{0xa312, &op_badd,	  2,   2, 255, 0xff, 0x01, 0x00, 0x01}, // badd.wr c c  
	{0xa313, &op_badd,	  3,   2, 255, 0xff, 0x01, 0x00, 0x01}, // badd.wr d c  
	{0xa314, &op_badd,	  4,   2, 255, 0xff, 0x01, 0x00, 0x01}, // badd.wr e c  
	{0xa315, &op_badd,	  5,   2, 255, 0xff, 0x01, 0x00, 0x01}, // badd.wr f c  
	{0xa316, &op_badd,	  6,   2, 255, 0xff, 0x01, 0x00, 0x01}, // badd.wr g c  
	{0xa317, &op_badd,	  7,   2, 255, 0xff, 0x01, 0x00, 0x01}, // badd.wr h c  
	{0xa318, &op_badd,	  0,   3, 255, 0xff, 0x01, 0x00, 0x01}, // badd.wr a d  
	{0xa319, &op_badd,	  1,   3, 255, 0xff, 0x01, 0x00, 0x01}, // badd.wr b d  
	{0xa31a, &op_badd,	  2,   3, 255, 0xff, 0x01, 0x00, 0x01}, // badd.wr c d  
	{0xa31b, &op_badd,	  3,   3, 255, 0xff, 0x01, 0x00, 0x01}, // badd.wr d d  
	{0xa31c, &op_badd,	  4,   3, 255, 0xff, 0x01, 0x00, 0x01}, // badd.wr e d  
	{0xa31d, &op_badd,	  5,   3, 255, 0xff, 0x01, 0x00, 0x01}, // badd.wr f d  
	{0xa31e, &op_badd,	  6,   3, 255, 0xff, 0x01, 0x00, 0x01}, // badd.wr g d  
	{0xa31f, &op_badd,	  7,   3, 255, 0xff, 0x01, 0x00, 0x01}, // badd.wr h d  
	{0xa320, &op_badd,	  0,   4, 255, 0xff, 0x01, 0x00, 0x01}, // badd.wr a e  
	{0xa321, &op_badd,	  1,   4, 255, 0xff, 0x01, 0x00, 0x01}, // badd.wr b e  
	{0xa322, &op_badd,	  2,   4, 255, 0xff, 0x01, 0x00, 0x01}, // badd.wr c e  
	{0xa323, &op_badd,	  3,   4, 255, 0xff, 0x01, 0x00, 0x01}, // badd.wr d e  
	{0xa324, &op_badd,	  4,   4, 255, 0xff, 0x01, 0x00, 0x01}, // badd.wr e e  
	{0xa325, &op_badd,	  5,   4, 255, 0xff, 0x01, 0x00, 0x01}, // badd.wr f e  
	{0xa326, &op_badd,	  6,   4, 255, 0xff, 0x01, 0x00, 0x01}, // badd.wr g e  
	{0xa327, &op_badd,	  7,   4, 255, 0xff, 0x01, 0x00, 0x01}, // badd.wr h e  
	{0xa328, &op_badd,	  0,   5, 255, 0xff, 0x01, 0x00, 0x01}, // badd.wr a f  
	{0xa329, &op_badd,	  1,   5, 255, 0xff, 0x01, 0x00, 0x01}, // badd.wr b f  
	{0xa32a, &op_badd,	  2,   5, 255, 0xff, 0x01, 0x00, 0x01}, // badd.wr c f  
	{0xa32b, &op_badd,	  3,   5, 255, 0xff, 0x01, 0x00, 0x01}, // badd.wr d f  
	{0xa32c, &op_badd,	  4,   5, 255, 0xff, 0x01, 0x00, 0x01}, // badd.wr e f  
	{0xa32d, &op_badd,	  5,   5, 255, 0xff, 0x01, 0x00, 0x01}, // badd.wr f f  
	{0xa32e, &op_badd,	  6,   5, 255, 0xff, 0x01, 0x00, 0x01}, // badd.wr g f  
	{0xa32f, &op_badd,	  7,   5, 255, 0xff, 0x01, 0x00, 0x01}, // badd.wr h f  
	{0xa330, &op_badd,	  0,   6, 255, 0xff, 0x01, 0x00, 0x01}, // badd.wr a g  
	{0xa331, &op_badd,	  1,   6, 255, 0xff, 0x01, 0x00, 0x01}, // badd.wr b g  
	{0xa332, &op_badd,	  2,   6, 255, 0xff, 0x01, 0x00, 0x01}, // badd.wr c g  
	{0xa333, &op_badd,	  3,   6, 255, 0xff, 0x01, 0x00, 0x01}, // badd.wr d g  
	{0xa334, &op_badd,	  4,   6, 255, 0xff, 0x01, 0x00, 0x01}, // badd.wr e g  
	{0xa335, &op_badd,	  5,   6, 255, 0xff, 0x01, 0x00, 0x01}, // badd.wr f g  
	{0xa336, &op_badd,	  6,   6, 255, 0xff, 0x01, 0x00, 0x01}, // badd.wr g g  
	{0xa337, &op_badd,	  7,   6, 255, 0xff, 0x01, 0x00, 0x01}, // badd.wr h g  
	{0xa338, &op_badd,	  0,   7, 255, 0xff, 0x01, 0x00, 0x01}, // badd.wr a h  
	{0xa339, &op_badd,	  1,   7, 255, 0xff, 0x01, 0x00, 0x01}, // badd.wr b h  
	{0xa33a, &op_badd,	  2,   7, 255, 0xff, 0x01, 0x00, 0x01}, // badd.wr c h  
	{0xa33b, &op_badd,	  3,   7, 255, 0xff, 0x01, 0x00, 0x01}, // badd.wr d h  
	{0xa33c, &op_badd,	  4,   7, 255, 0xff, 0x01, 0x00, 0x01}, // badd.wr e h  
	{0xa33d, &op_badd,	  5,   7, 255, 0xff, 0x01, 0x00, 0x01}, // badd.wr f h  
	{0xa33e, &op_badd,	  6,   7, 255, 0xff, 0x01, 0x00, 0x01}, // badd.wr g h  
	{0xa33f, &op_badd,	  7,   7, 255, 0xff, 0x01, 0x00, 0x01}, // badd.wr h h  
	{0xa340, &op_badd,	  0,   0, 255, 0xff, 0x01, 0x00, 0x02}, // badd.dr a a  
	{0xa341, &op_badd,	  1,   0, 255, 0xff, 0x01, 0x00, 0x02}, // badd.dr b a  
	{0xa342, &op_badd,	  2,   0, 255, 0xff, 0x01, 0x00, 0x02}, // badd.dr c a  
	{0xa343, &op_badd,	  3,   0, 255, 0xff, 0x01, 0x00, 0x02}, // badd.dr d a  
	{0xa344, &op_badd,	  4,   0, 255, 0xff, 0x01, 0x00, 0x02}, // badd.dr e a  
	{0xa345, &op_badd,	  5,   0, 255, 0xff, 0x01, 0x00, 0x02}, // badd.dr f a  
	{0xa346, &op_badd,	  6,   0, 255, 0xff, 0x01, 0x00, 0x02}, // badd.dr g a  
	{0xa347, &op_badd,	  7,   0, 255, 0xff, 0x01, 0x00, 0x02}, // badd.dr h a  
	{0xa348, &op_badd,	  0,   1, 255, 0xff, 0x01, 0x00, 0x02}, // badd.dr a b  
	{0xa349, &op_badd,	  1,   1, 255, 0xff, 0x01, 0x00, 0x02}, // badd.dr b b  
	{0xa34a, &op_badd,	  2,   1, 255, 0xff, 0x01, 0x00, 0x02}, // badd.dr c b  
	{0xa34b, &op_badd,	  3,   1, 255, 0xff, 0x01, 0x00, 0x02}, // badd.dr d b  
	{0xa34c, &op_badd,	  4,   1, 255, 0xff, 0x01, 0x00, 0x02}, // badd.dr e b  
	{0xa34d, &op_badd,	  5,   1, 255, 0xff, 0x01, 0x00, 0x02}, // badd.dr f b  
	{0xa34e, &op_badd,	  6,   1, 255, 0xff, 0x01, 0x00, 0x02}, // badd.dr g b  
	{0xa34f, &op_badd,	  7,   1, 255, 0xff, 0x01, 0x00, 0x02}, // badd.dr h b  
	{0xa350, &op_badd,	  0,   2, 255, 0xff, 0x01, 0x00, 0x02}, // badd.dr a c  
	{0xa351, &op_badd,	  1,   2, 255, 0xff, 0x01, 0x00, 0x02}, // badd.dr b c  
	{0xa352, &op_badd,	  2,   2, 255, 0xff, 0x01, 0x00, 0x02}, // badd.dr c c  
	{0xa353, &op_badd,	  3,   2, 255, 0xff, 0x01, 0x00, 0x02}, // badd.dr d c  
	{0xa354, &op_badd,	  4,   2, 255, 0xff, 0x01, 0x00, 0x02}, // badd.dr e c  
	{0xa355, &op_badd,	  5,   2, 255, 0xff, 0x01, 0x00, 0x02}, // badd.dr f c  
	{0xa356, &op_badd,	  6,   2, 255, 0xff, 0x01, 0x00, 0x02}, // badd.dr g c  
	{0xa357, &op_badd,	  7,   2, 255, 0xff, 0x01, 0x00, 0x02}, // badd.dr h c  
	{0xa358, &op_badd,	  0,   3, 255, 0xff, 0x01, 0x00, 0x02}, // badd.dr a d  
	{0xa359, &op_badd,	  1,   3, 255, 0xff, 0x01, 0x00, 0x02}, // badd.dr b d  
	{0xa35a, &op_badd,	  2,   3, 255, 0xff, 0x01, 0x00, 0x02}, // badd.dr c d  
	{0xa35b, &op_badd,	  3,   3, 255, 0xff, 0x01, 0x00, 0x02}, // badd.dr d d  
	{0xa35c, &op_badd,	  4,   3, 255, 0xff, 0x01, 0x00, 0x02}, // badd.dr e d  
	{0xa35d, &op_badd,	  5,   3, 255, 0xff, 0x01, 0x00, 0x02}, // badd.dr f d  
	{0xa35e, &op_badd,	  6,   3, 255, 0xff, 0x01, 0x00, 0x02}, // badd.dr g d  
	{0xa35f, &op_badd,	  7,   3, 255, 0xff, 0x01, 0x00, 0x02}, // badd.dr h d  
	{0xa360, &op_badd,	  0,   4, 255, 0xff, 0x01, 0x00, 0x02}, // badd.dr a e  
	{0xa361, &op_badd,	  1,   4, 255, 0xff, 0x01, 0x00, 0x02}, // badd.dr b e  
	{0xa362, &op_badd,	  2,   4, 255, 0xff, 0x01, 0x00, 0x02}, // badd.dr c e  
	{0xa363, &op_badd,	  3,   4, 255, 0xff, 0x01, 0x00, 0x02}, // badd.dr d e  
	{0xa364, &op_badd,	  4,   4, 255, 0xff, 0x01, 0x00, 0x02}, // badd.dr e e  
	{0xa365, &op_badd,	  5,   4, 255, 0xff, 0x01, 0x00, 0x02}, // badd.dr f e  
	{0xa366, &op_badd,	  6,   4, 255, 0xff, 0x01, 0x00, 0x02}, // badd.dr g e  
	{0xa367, &op_badd,	  7,   4, 255, 0xff, 0x01, 0x00, 0x02}, // badd.dr h e  
	{0xa368, &op_badd,	  0,   5, 255, 0xff, 0x01, 0x00, 0x02}, // badd.dr a f  
	{0xa369, &op_badd,	  1,   5, 255, 0xff, 0x01, 0x00, 0x02}, // badd.dr b f  
	{0xa36a, &op_badd,	  2,   5, 255, 0xff, 0x01, 0x00, 0x02}, // badd.dr c f  
	{0xa36b, &op_badd,	  3,   5, 255, 0xff, 0x01, 0x00, 0x02}, // badd.dr d f  
	{0xa36c, &op_badd,	  4,   5, 255, 0xff, 0x01, 0x00, 0x02}, // badd.dr e f  
	{0xa36d, &op_badd,	  5,   5, 255, 0xff, 0x01, 0x00, 0x02}, // badd.dr f f  
	{0xa36e, &op_badd,	  6,   5, 255, 0xff, 0x01, 0x00, 0x02}, // badd.dr g f  
	{0xa36f, &op_badd,	  7,   5, 255, 0xff, 0x01, 0x00, 0x02}, // badd.dr h f  
	{0xa370, &op_badd,	  0,   6, 255, 0xff, 0x01, 0x00, 0x02}, // badd.dr a g  
	{0xa371, &op_badd,	  1,   6, 255, 0xff, 0x01, 0x00, 0x02}, // badd.dr b g  
	{0xa372, &op_badd,	  2,   6, 255, 0xff, 0x01, 0x00, 0x02}, // badd.dr c g  
	{0xa373, &op_badd,	  3,   6, 255, 0xff, 0x01, 0x00, 0x02}, // badd.dr d g  
	{0xa374, &op_badd,	  4,   6, 255, 0xff, 0x01, 0x00, 0x02}, // badd.dr e g  
	{0xa375, &op_badd,	  5,   6, 255, 0xff, 0x01, 0x00, 0x02}, // badd.dr f g  
	{0xa376, &op_badd,	  6,   6, 255, 0xff, 0x01, 0x00, 0x02}, // badd.dr g g  
	{0xa377, &op_badd,	  7,   6, 255, 0xff, 0x01, 0x00, 0x02}, // badd.dr h g  
	{0xa378, &op_badd,	  0,   7, 255, 0xff, 0x01, 0x00, 0x02}, // badd.dr a h  
	{0xa379, &op_badd,	  1,   7, 255, 0xff, 0x01, 0x00, 0x02}, // badd.dr b h  
	{0xa37a, &op_badd,	  2,   7, 255, 0xff, 0x01, 0x00, 0x02}, // badd.dr c h  
	{0xa37b, &op_badd,	  3,   7, 255, 0xff, 0x01, 0x00, 0x02}, // badd.dr d h  
	{0xa37c, &op_badd,	  4,   7, 255, 0xff, 0x01, 0x00, 0x02}, // badd.dr e h  
	{0xa37d, &op_badd,	  5,   7, 255, 0xff, 0x01, 0x00, 0x02}, // badd.dr f h  
	{0xa37e, &op_badd,	  6,   7, 255, 0xff, 0x01, 0x00, 0x02}, // badd.dr g h  
	{0xa37f, &op_badd,	  7,   7, 255, 0xff, 0x01, 0x00, 0x02}, // badd.dr h h  
	{0xa380, &op_badd,	  0,   0, 255, 0xff, 0x01, 0x00, 0x04}, // badd.r a a  
	{0xa381, &op_badd,	  1,   0, 255, 0xff, 0x01, 0x00, 0x04}, // badd.r b a  
	{0xa382, &op_badd,	  2,   0, 255, 0xff, 0x01, 0x00, 0x04}, // badd.r c a  
	{0xa383, &op_badd,	  3,   0, 255, 0xff, 0x01, 0x00, 0x04}, // badd.r d a  
	{0xa384, &op_badd,	  4,   0, 255, 0xff, 0x01, 0x00, 0x04}, // badd.r e a  
	{0xa385, &op_badd,	  5,   0, 255, 0xff, 0x01, 0x00, 0x04}, // badd.r f a  
	{0xa386, &op_badd,	  6,   0, 255, 0xff, 0x01, 0x00, 0x04}, // badd.r g a  
	{0xa387, &op_badd,	  7,   0, 255, 0xff, 0x01, 0x00, 0x04}, // badd.r h a  
	{0xa388, &op_badd,	  0,   1, 255, 0xff, 0x01, 0x00, 0x04}, // badd.r a b  
	{0xa389, &op_badd,	  1,   1, 255, 0xff, 0x01, 0x00, 0x04}, // badd.r b b  
	{0xa38a, &op_badd,	  2,   1, 255, 0xff, 0x01, 0x00, 0x04}, // badd.r c b  
	{0xa38b, &op_badd,	  3,   1, 255, 0xff, 0x01, 0x00, 0x04}, // badd.r d b  
	{0xa38c, &op_badd,	  4,   1, 255, 0xff, 0x01, 0x00, 0x04}, // badd.r e b  
	{0xa38d, &op_badd,	  5,   1, 255, 0xff, 0x01, 0x00, 0x04}, // badd.r f b  
	{0xa38e, &op_badd,	  6,   1, 255, 0xff, 0x01, 0x00, 0x04}, // badd.r g b  
	{0xa38f, &op_badd,	  7,   1, 255, 0xff, 0x01, 0x00, 0x04}, // badd.r h b  
	{0xa390, &op_badd,	  0,   2, 255, 0xff, 0x01, 0x00, 0x04}, // badd.r a c  
	{0xa391, &op_badd,	  1,   2, 255, 0xff, 0x01, 0x00, 0x04}, // badd.r b c  
	{0xa392, &op_badd,	  2,   2, 255, 0xff, 0x01, 0x00, 0x04}, // badd.r c c  
	{0xa393, &op_badd,	  3,   2, 255, 0xff, 0x01, 0x00, 0x04}, // badd.r d c  
	{0xa394, &op_badd,	  4,   2, 255, 0xff, 0x01, 0x00, 0x04}, // badd.r e c  
	{0xa395, &op_badd,	  5,   2, 255, 0xff, 0x01, 0x00, 0x04}, // badd.r f c  
	{0xa396, &op_badd,	  6,   2, 255, 0xff, 0x01, 0x00, 0x04}, // badd.r g c  
	{0xa397, &op_badd,	  7,   2, 255, 0xff, 0x01, 0x00, 0x04}, // badd.r h c  
	{0xa398, &op_badd,	  0,   3, 255, 0xff, 0x01, 0x00, 0x04}, // badd.r a d  
	{0xa399, &op_badd,	  1,   3, 255, 0xff, 0x01, 0x00, 0x04}, // badd.r b d  
	{0xa39a, &op_badd,	  2,   3, 255, 0xff, 0x01, 0x00, 0x04}, // badd.r c d  
	{0xa39b, &op_badd,	  3,   3, 255, 0xff, 0x01, 0x00, 0x04}, // badd.r d d  
	{0xa39c, &op_badd,	  4,   3, 255, 0xff, 0x01, 0x00, 0x04}, // badd.r e d  
	{0xa39d, &op_badd,	  5,   3, 255, 0xff, 0x01, 0x00, 0x04}, // badd.r f d  
	{0xa39e, &op_badd,	  6,   3, 255, 0xff, 0x01, 0x00, 0x04}, // badd.r g d  
	{0xa39f, &op_badd,	  7,   3, 255, 0xff, 0x01, 0x00, 0x04}, // badd.r h d  
	{0xa3a0, &op_badd,	  0,   4, 255, 0xff, 0x01, 0x00, 0x04}, // badd.r a e  
	{0xa3a1, &op_badd,	  1,   4, 255, 0xff, 0x01, 0x00, 0x04}, // badd.r b e  
	{0xa3a2, &op_badd,	  2,   4, 255, 0xff, 0x01, 0x00, 0x04}, // badd.r c e  
	{0xa3a3, &op_badd,	  3,   4, 255, 0xff, 0x01, 0x00, 0x04}, // badd.r d e  
	{0xa3a4, &op_badd,	  4,   4, 255, 0xff, 0x01, 0x00, 0x04}, // badd.r e e  
	{0xa3a5, &op_badd,	  5,   4, 255, 0xff, 0x01, 0x00, 0x04}, // badd.r f e  
	{0xa3a6, &op_badd,	  6,   4, 255, 0xff, 0x01, 0x00, 0x04}, // badd.r g e  
	{0xa3a7, &op_badd,	  7,   4, 255, 0xff, 0x01, 0x00, 0x04}, // badd.r h e  
	{0xa3a8, &op_badd,	  0,   5, 255, 0xff, 0x01, 0x00, 0x04}, // badd.r a f  
	{0xa3a9, &op_badd,	  1,   5, 255, 0xff, 0x01, 0x00, 0x04}, // badd.r b f  
	{0xa3aa, &op_badd,	  2,   5, 255, 0xff, 0x01, 0x00, 0x04}, // badd.r c f  
	{0xa3ab, &op_badd,	  3,   5, 255, 0xff, 0x01, 0x00, 0x04}, // badd.r d f  
	{0xa3ac, &op_badd,	  4,   5, 255, 0xff, 0x01, 0x00, 0x04}, // badd.r e f  
	{0xa3ad, &op_badd,	  5,   5, 255, 0xff, 0x01, 0x00, 0x04}, // badd.r f f  
	{0xa3ae, &op_badd,	  6,   5, 255, 0xff, 0x01, 0x00, 0x04}, // badd.r g f  
	{0xa3af, &op_badd,	  7,   5, 255, 0xff, 0x01, 0x00, 0x04}, // badd.r h f  
	{0xa3b0, &op_badd,	  0,   6, 255, 0xff, 0x01, 0x00, 0x04}, // badd.r a g  
	{0xa3b1, &op_badd,	  1,   6, 255, 0xff, 0x01, 0x00, 0x04}, // badd.r b g  
	{0xa3b2, &op_badd,	  2,   6, 255, 0xff, 0x01, 0x00, 0x04}, // badd.r c g  
	{0xa3b3, &op_badd,	  3,   6, 255, 0xff, 0x01, 0x00, 0x04}, // badd.r d g  
	{0xa3b4, &op_badd,	  4,   6, 255, 0xff, 0x01, 0x00, 0x04}, // badd.r e g  
	{0xa3b5, &op_badd,	  5,   6, 255, 0xff, 0x01, 0x00, 0x04}, // badd.r f g  
	{0xa3b6, &op_badd,	  6,   6, 255, 0xff, 0x01, 0x00, 0x04}, // badd.r g g  
	{0xa3b7, &op_badd,	  7,   6, 255, 0xff, 0x01, 0x00, 0x04}, // badd.r h g  
	{0xa3b8, &op_badd,	  0,   7, 255, 0xff, 0x01, 0x00, 0x04}, // badd.r a h  
	{0xa3b9, &op_badd,	  1,   7, 255, 0xff, 0x01, 0x00, 0x04}, // badd.r b h  
	{0xa3ba, &op_badd,	  2,   7, 255, 0xff, 0x01, 0x00, 0x04}, // badd.r c h  
	{0xa3bb, &op_badd,	  3,   7, 255, 0xff, 0x01, 0x00, 0x04}, // badd.r d h  
	{0xa3bc, &op_badd,	  4,   7, 255, 0xff, 0x01, 0x00, 0x04}, // badd.r e h  
	{0xa3bd, &op_badd,	  5,   7, 255, 0xff, 0x01, 0x00, 0x04}, // badd.r f h  
	{0xa3be, &op_badd,	  6,   7, 255, 0xff, 0x01, 0x00, 0x04}, // badd.r g h  
	{0xa3bf, &op_badd,	  7,   7, 255, 0xff, 0x01, 0x00, 0x04}, // badd.r h h  
	{0xa2c8, &op_badd,	  0,   8, 255, 0xff, 0x00, 0x01, 0x01}, // badd.wi a <literal>  
	{0xa2c9, &op_badd,	  1,   8, 255, 0xff, 0x00, 0x01, 0x01}, // badd.wi b <literal>  
	{0xa2ca, &op_badd,	  2,   8, 255, 0xff, 0x00, 0x01, 0x01}, // badd.wi c <literal>  
	{0xa2cb, &op_badd,	  3,   8, 255, 0xff, 0x00, 0x01, 0x01}, // badd.wi d <literal>  
	{0xa2cc, &op_badd,	  4,   8, 255, 0xff, 0x00, 0x01, 0x01}, // badd.wi e <literal>  
	{0xa2cd, &op_badd,	  5,   8, 255, 0xff, 0x00, 0x01, 0x01}, // badd.wi f <literal>  
	{0xa2ce, &op_badd,	  6,   8, 255, 0xff, 0x00, 0x01, 0x01}, // badd.wi g <literal>  
	{0xa2cf, &op_badd,	  7,   8, 255, 0xff, 0x00, 0x01, 0x01}, // badd.wi h <literal>  
	{0xa2d0, &op_badd,	  0,   8, 255, 0xff, 0x00, 0x02, 0x02}, // badd.di a <literal>  
	{0xa2d1, &op_badd,	  1,   8, 255, 0xff, 0x00, 0x02, 0x02}, // badd.di b <literal>  
	{0xa2d2, &op_badd,	  2,   8, 255, 0xff, 0x00, 0x02, 0x02}, // badd.di c <literal>  
	{0xa2d3, &op_badd,	  3,   8, 255, 0xff, 0x00, 0x02, 0x02}, // badd.di d <literal>  
	{0xa2d4, &op_badd,	  4,   8, 255, 0xff, 0x00, 0x02, 0x02}, // badd.di e <literal>  
	{0xa2d5, &op_badd,	  5,   8, 255, 0xff, 0x00, 0x02, 0x02}, // badd.di f <literal>  
	{0xa2d6, &op_badd,	  6,   8, 255, 0xff, 0x00, 0x02, 0x02}, // badd.di g <literal>  
	{0xa2d7, &op_badd,	  7,   8, 255, 0xff, 0x00, 0x02, 0x02}, // badd.di h <literal>  
	{0xa2e0, &op_badd,	  0,   8, 255, 0xff, 0x00, 0x04, 0x04}, // badd.i a <literal>  
	{0xa2e1, &op_badd,	  1,   8, 255, 0xff, 0x00, 0x04, 0x04}, // badd.i b <literal>  
	{0xa2e2, &op_badd,	  2,   8, 255, 0xff, 0x00, 0x04, 0x04}, // badd.i c <literal>  
	{0xa2e3, &op_badd,	  3,   8, 255, 0xff, 0x00, 0x04, 0x04}, // badd.i d <literal>  
	{0xa2e4, &op_badd,	  4,   8, 255, 0xff, 0x00, 0x04, 0x04}, // badd.i e <literal>  
	{0xa2e5, &op_badd,	  5,   8, 255, 0xff, 0x00, 0x04, 0x04}, // badd.i f <literal>  
	{0xa2e6, &op_badd,	  6,   8, 255, 0xff, 0x00, 0x04, 0x04}, // badd.i g <literal>  
	{0xa2e7, &op_badd,	  7,   8, 255, 0xff, 0x00, 0x04, 0x04}, // badd.i h <literal>  
	{0xa3c8, &op_badd,	  0,   8, 255, 0xff, 0x01, 0x04, 0x01}, // badd.wri a <literal>  
	{0xa3c9, &op_badd,	  1,   8, 255, 0xff, 0x01, 0x04, 0x01}, // badd.wri b <literal>  
	{0xa3ca, &op_badd,	  2,   8, 255, 0xff, 0x01, 0x04, 0x01}, // badd.wri c <literal>  
	{0xa3cb, &op_badd,	  3,   8, 255, 0xff, 0x01, 0x04, 0x01}, // badd.wri d <literal>  
	{0xa3cc, &op_badd,	  4,   8, 255, 0xff, 0x01, 0x04, 0x01}, // badd.wri e <literal>  
	{0xa3cd, &op_badd,	  5,   8, 255, 0xff, 0x01, 0x04, 0x01}, // badd.wri f <literal>  
	{0xa3ce, &op_badd,	  6,   8, 255, 0xff, 0x01, 0x04, 0x01}, // badd.wri g <literal>  
	{0xa3cf, &op_badd,	  7,   8, 255, 0xff, 0x01, 0x04, 0x01}, // badd.wri h <literal>  
	{0xa3d0, &op_badd,	  0,   8, 255, 0xff, 0x01, 0x04, 0x02}, // badd.dri a <literal>  
	{0xa3d1, &op_badd,	  1,   8, 255, 0xff, 0x01, 0x04, 0x02}, // badd.dri b <literal>  
	{0xa3d2, &op_badd,	  2,   8, 255, 0xff, 0x01, 0x04, 0x02}, // badd.dri c <literal>  
	{0xa3d3, &op_badd,	  3,   8, 255, 0xff, 0x01, 0x04, 0x02}, // badd.dri d <literal>  
	{0xa3d4, &op_badd,	  4,   8, 255, 0xff, 0x01, 0x04, 0x02}, // badd.dri e <literal>  
	{0xa3d5, &op_badd,	  5,   8, 255, 0xff, 0x01, 0x04, 0x02}, // badd.dri f <literal>  
	{0xa3d6, &op_badd,	  6,   8, 255, 0xff, 0x01, 0x04, 0x02}, // badd.dri g <literal>  
	{0xa3d7, &op_badd,	  7,   8, 255, 0xff, 0x01, 0x04, 0x02}, // badd.dri h <literal>  
	{0xa3e0, &op_badd,	  0,   8, 255, 0xff, 0x01, 0x04, 0x04}, // badd.ri a <literal>  
	{0xa3e1, &op_badd,	  1,   8, 255, 0xff, 0x01, 0x04, 0x04}, // badd.ri b <literal>  
	{0xa3e2, &op_badd,	  2,   8, 255, 0xff, 0x01, 0x04, 0x04}, // badd.ri c <literal>  
	{0xa3e3, &op_badd,	  3,   8, 255, 0xff, 0x01, 0x04, 0x04}, // badd.ri d <literal>  
	{0xa3e4, &op_badd,	  4,   8, 255, 0xff, 0x01, 0x04, 0x04}, // badd.ri e <literal>  
	{0xa3e5, &op_badd,	  5,   8, 255, 0xff, 0x01, 0x04, 0x04}, // badd.ri f <literal>  
	{0xa3e6, &op_badd,	  6,   8, 255, 0xff, 0x01, 0x04, 0x04}, // badd.ri g <literal>  
	{0xa3e7, &op_badd,	  7,   8, 255, 0xff, 0x01, 0x04, 0x04}, // badd.ri h <literal>  
	{0xa600, &op_bsub,	  0,   0, 255, 0xff, 0x00, 0x00, 0x01}, // bsub.w a a  
	{0xa601, &op_bsub,	  1,   0, 255, 0xff, 0x00, 0x00, 0x01}, // bsub.w b a  
	{0xa602, &op_bsub,	  2,   0, 255, 0xff, 0x00, 0x00, 0x01}, // bsub.w c a  
	{0xa603, &op_bsub,	  3,   0, 255, 0xff, 0x00, 0x00, 0x01}, // bsub.w d a  
	{0xa604, &op_bsub,	  4,   0, 255, 0xff, 0x00, 0x00, 0x01}, // bsub.w e a  
	{0xa605, &op_bsub,	  5,   0, 255, 0xff, 0x00, 0x00, 0x01}, // bsub.w f a  
	{0xa606, &op_bsub,	  6,   0, 255, 0xff, 0x00, 0x00, 0x01}, // bsub.w g a  
	{0xa607, &op_bsub,	  7,   0, 255, 0xff, 0x00, 0x00, 0x01}, // bsub.w h a  
	{0xa608, &op_bsub,	  0,   1, 255, 0xff, 0x00, 0x00, 0x01}, // bsub.w a b  
	{0xa609, &op_bsub,	  1,   1, 255, 0xff, 0x00, 0x00, 0x01}, // bsub.w b b  
	{0xa60a, &op_bsub,	  2,   1, 255, 0xff, 0x00, 0x00, 0x01}, // bsub.w c b  
	{0xa60b, &op_bsub,	  3,   1, 255, 0xff, 0x00, 0x00, 0x01}, // bsub.w d b  
	{0xa60c, &op_bsub,	  4,   1, 255, 0xff, 0x00, 0x00, 0x01}, // bsub.w e b  
	{0xa60d, &op_bsub,	  5,   1, 255, 0xff, 0x00, 0x00, 0x01}, // bsub.w f b  
	{0xa60e, &op_bsub,	  6,   1, 255, 0xff, 0x00, 0x00, 0x01}, // bsub.w g b  
	{0xa60f, &op_bsub,	  7,   1, 255, 0xff, 0x00, 0x00, 0x01}, // bsub.w h b  
	{0xa610, &op_bsub,	  0,   2, 255, 0xff, 0x00, 0x00, 0x01}, // bsub.w a c  
	{0xa611, &op_bsub,	  1,   2, 255, 0xff, 0x00, 0x00, 0x01}, // bsub.w b c  
	{0xa612, &op_bsub,	  2,   2, 255, 0xff, 0x00, 0x00, 0x01}, // bsub.w c c  
	{0xa613, &op_bsub,	  3,   2, 255, 0xff, 0x00, 0x00, 0x01}, // bsub.w d c  
	{0xa614, &op_bsub,	  4,   2, 255, 0xff, 0x00, 0x00, 0x01}, // bsub.w e c  
	{0xa615, &op_bsub,	  5,   2, 255, 0xff, 0x00, 0x00, 0x01}, // bsub.w f c  
	{0xa616, &op_bsub,	  6,   2, 255, 0xff, 0x00, 0x00, 0x01}, // bsub.w g c  
	{0xa617, &op_bsub,	  7,   2, 255, 0xff, 0x00, 0x00, 0x01}, // bsub.w h c  
	{0xa618, &op_bsub,	  0,   3, 255, 0xff, 0x00, 0x00, 0x01}, // bsub.w a d  
	{0xa619, &op_bsub,	  1,   3, 255, 0xff, 0x00, 0x00, 0x01}, // bsub.w b d  
	{0xa61a, &op_bsub,	  2,   3, 255, 0xff, 0x00, 0x00, 0x01}, // bsub.w c d  
	{0xa61b, &op_bsub,	  3,   3, 255, 0xff, 0x00, 0x00, 0x01}, // bsub.w d d  
	{0xa61c, &op_bsub,	  4,   3, 255, 0xff, 0x00, 0x00, 0x01}, // bsub.w e d  
	{0xa61d, &op_bsub,	  5,   3, 255, 0xff, 0x00, 0x00, 0x01}, // bsub.w f d  
	{0xa61e, &op_bsub,	  6,   3, 255, 0xff, 0x00, 0x00, 0x01}, // bsub.w g d  
	{0xa61f, &op_bsub,	  7,   3, 255, 0xff, 0x00, 0x00, 0x01}, // bsub.w h d  
	{0xa620, &op_bsub,	  0,   4, 255, 0xff, 0x00, 0x00, 0x01}, // bsub.w a e  
	{0xa621, &op_bsub,	  1,   4, 255, 0xff, 0x00, 0x00, 0x01}, // bsub.w b e  
	{0xa622, &op_bsub,	  2,   4, 255, 0xff, 0x00, 0x00, 0x01}, // bsub.w c e  
	{0xa623, &op_bsub,	  3,   4, 255, 0xff, 0x00, 0x00, 0x01}, // bsub.w d e  
	{0xa624, &op_bsub,	  4,   4, 255, 0xff, 0x00, 0x00, 0x01}, // bsub.w e e  
	{0xa625, &op_bsub,	  5,   4, 255, 0xff, 0x00, 0x00, 0x01}, // bsub.w f e  
	{0xa626, &op_bsub,	  6,   4, 255, 0xff, 0x00, 0x00, 0x01}, // bsub.w g e  
	{0xa627, &op_bsub,	  7,   4, 255, 0xff, 0x00, 0x00, 0x01}, // bsub.w h e  
	{0xa628, &op_bsub,	  0,   5, 255, 0xff, 0x00, 0x00, 0x01}, // bsub.w a f  
	{0xa629, &op_bsub,	  1,   5, 255, 0xff, 0x00, 0x00, 0x01}, // bsub.w b f  
	{0xa62a, &op_bsub,	  2,   5, 255, 0xff, 0x00, 0x00, 0x01}, // bsub.w c f  
	{0xa62b, &op_bsub,	  3,   5, 255, 0xff, 0x00, 0x00, 0x01}, // bsub.w d f  
	{0xa62c, &op_bsub,	  4,   5, 255, 0xff, 0x00, 0x00, 0x01}, // bsub.w e f  
	{0xa62d, &op_bsub,	  5,   5, 255, 0xff, 0x00, 0x00, 0x01}, // bsub.w f f  
	{0xa62e, &op_bsub,	  6,   5, 255, 0xff, 0x00, 0x00, 0x01}, // bsub.w g f  
	{0xa62f, &op_bsub,	  7,   5, 255, 0xff, 0x00, 0x00, 0x01}, // bsub.w h f  
	{0xa630, &op_bsub,	  0,   6, 255, 0xff, 0x00, 0x00, 0x01}, // bsub.w a g  
	{0xa631, &op_bsub,	  1,   6, 255, 0xff, 0x00, 0x00, 0x01}, // bsub.w b g  
	{0xa632, &op_bsub,	  2,   6, 255, 0xff, 0x00, 0x00, 0x01}, // bsub.w c g  
	{0xa633, &op_bsub,	  3,   6, 255, 0xff, 0x00, 0x00, 0x01}, // bsub.w d g  
	{0xa634, &op_bsub,	  4,   6, 255, 0xff, 0x00, 0x00, 0x01}, // bsub.w e g  
	{0xa635, &op_bsub,	  5,   6, 255, 0xff, 0x00, 0x00, 0x01}, // bsub.w f g  
	{0xa636, &op_bsub,	  6,   6, 255, 0xff, 0x00, 0x00, 0x01}, // bsub.w g g  
	{0xa637, &op_bsub,	  7,   6, 255, 0xff, 0x00, 0x00, 0x01}, // bsub.w h g  
	{0xa638, &op_bsub,	  0,   7, 255, 0xff, 0x00, 0x00, 0x01}, // bsub.w a h  
	{0xa639, &op_bsub,	  1,   7, 255, 0xff, 0x00, 0x00, 0x01}, // bsub.w b h  
	{0xa63a, &op_bsub,	  2,   7, 255, 0xff, 0x00, 0x00, 0x01}, // bsub.w c h  
	{0xa63b, &op_bsub,	  3,   7, 255, 0xff, 0x00, 0x00, 0x01}, // bsub.w d h  
	{0xa63c, &op_bsub,	  4,   7, 255, 0xff, 0x00, 0x00, 0x01}, // bsub.w e h  
	{0xa63d, &op_bsub,	  5,   7, 255, 0xff, 0x00, 0x00, 0x01}, // bsub.w f h  
	{0xa63e, &op_bsub,	  6,   7, 255, 0xff, 0x00, 0x00, 0x01}, // bsub.w g h  
	{0xa63f, &op_bsub,	  7,   7, 255, 0xff, 0x00, 0x00, 0x01}, // bsub.w h h  
	{0xa640, &op_bsub,	  0,   0, 255, 0xff, 0x00, 0x00, 0x02}, // bsub.d a a  
	{0xa641, &op_bsub,	  1,   0, 255, 0xff, 0x00, 0x00, 0x02}, // bsub.d b a  
	{0xa642, &op_bsub,	  2,   0, 255, 0xff, 0x00, 0x00, 0x02}, // bsub.d c a  
	{0xa643, &op_bsub,	  3,   0, 255, 0xff, 0x00, 0x00, 0x02}, // bsub.d d a  
	{0xa644, &op_bsub,	  4,   0, 255, 0xff, 0x00, 0x00, 0x02}, // bsub.d e a  
	{0xa645, &op_bsub,	  5,   0, 255, 0xff, 0x00, 0x00, 0x02}, // bsub.d f a  
	{0xa646, &op_bsub,	  6,   0, 255, 0xff, 0x00, 0x00, 0x02}, // bsub.d g a  
	{0xa647, &op_bsub,	  7,   0, 255, 0xff, 0x00, 0x00, 0x02}, // bsub.d h a  
	{0xa648, &op_bsub,	  0,   1, 255, 0xff, 0x00, 0x00, 0x02}, // bsub.d a b  
	{0xa649, &op_bsub,	  1,   1, 255, 0xff, 0x00, 0x00, 0x02}, // bsub.d b b  
	{0xa64a, &op_bsub,	  2,   1, 255, 0xff, 0x00, 0x00, 0x02}, // bsub.d c b  
	{0xa64b, &op_bsub,	  3,   1, 255, 0xff, 0x00, 0x00, 0x02}, // bsub.d d b  
	{0xa64c, &op_bsub,	  4,   1, 255, 0xff, 0x00, 0x00, 0x02}, // bsub.d e b  
	{0xa64d, &op_bsub,	  5,   1, 255, 0xff, 0x00, 0x00, 0x02}, // bsub.d f b  
	{0xa64e, &op_bsub,	  6,   1, 255, 0xff, 0x00, 0x00, 0x02}, // bsub.d g b  
	{0xa64f, &op_bsub,	  7,   1, 255, 0xff, 0x00, 0x00, 0x02}, // bsub.d h b  
	{0xa650, &op_bsub,	  0,   2, 255, 0xff, 0x00, 0x00, 0x02}, // bsub.d a c  
	{0xa651, &op_bsub,	  1,   2, 255, 0xff, 0x00, 0x00, 0x02}, // bsub.d b c  
	{0xa652, &op_bsub,	  2,   2, 255, 0xff, 0x00, 0x00, 0x02}, // bsub.d c c  
	{0xa653, &op_bsub,	  3,   2, 255, 0xff, 0x00, 0x00, 0x02}, // bsub.d d c  
	{0xa654, &op_bsub,	  4,   2, 255, 0xff, 0x00, 0x00, 0x02}, // bsub.d e c  
	{0xa655, &op_bsub,	  5,   2, 255, 0xff, 0x00, 0x00, 0x02}, // bsub.d f c  
	{0xa656, &op_bsub,	  6,   2, 255, 0xff, 0x00, 0x00, 0x02}, // bsub.d g c  
	{0xa657, &op_bsub,	  7,   2, 255, 0xff, 0x00, 0x00, 0x02}, // bsub.d h c  
	{0xa658, &op_bsub,	  0,   3, 255, 0xff, 0x00, 0x00, 0x02}, // bsub.d a d  
	{0xa659, &op_bsub,	  1,   3, 255, 0xff, 0x00, 0x00, 0x02}, // bsub.d b d  
	{0xa65a, &op_bsub,	  2,   3, 255, 0xff, 0x00, 0x00, 0x02}, // bsub.d c d  
	{0xa65b, &op_bsub,	  3,   3, 255, 0xff, 0x00, 0x00, 0x02}, // bsub.d d d  
	{0xa65c, &op_bsub,	  4,   3, 255, 0xff, 0x00, 0x00, 0x02}, // bsub.d e d  
	{0xa65d, &op_bsub,	  5,   3, 255, 0xff, 0x00, 0x00, 0x02}, // bsub.d f d  
	{0xa65e, &op_bsub,	  6,   3, 255, 0xff, 0x00, 0x00, 0x02}, // bsub.d g d  
	{0xa65f, &op_bsub,	  7,   3, 255, 0xff, 0x00, 0x00, 0x02}, // bsub.d h d  
	{0xa660, &op_bsub,	  0,   4, 255, 0xff, 0x00, 0x00, 0x02}, // bsub.d a e  
	{0xa661, &op_bsub,	  1,   4, 255, 0xff, 0x00, 0x00, 0x02}, // bsub.d b e  
	{0xa662, &op_bsub,	  2,   4, 255, 0xff, 0x00, 0x00, 0x02}, // bsub.d c e  
	{0xa663, &op_bsub,	  3,   4, 255, 0xff, 0x00, 0x00, 0x02}, // bsub.d d e  
	{0xa664, &op_bsub,	  4,   4, 255, 0xff, 0x00, 0x00, 0x02}, // bsub.d e e  
	{0xa665, &op_bsub,	  5,   4, 255, 0xff, 0x00, 0x00, 0x02}, // bsub.d f e  
	{0xa666, &op_bsub,	  6,   4, 255, 0xff, 0x00, 0x00, 0x02}, // bsub.d g e  
	{0xa667, &op_bsub,	  7,   4, 255, 0xff, 0x00, 0x00, 0x02}, // bsub.d h e  
	{0xa668, &op_bsub,	  0,   5, 255, 0xff, 0x00, 0x00, 0x02}, // bsub.d a f  
	{0xa669, &op_bsub,	  1,   5, 255, 0xff, 0x00, 0x00, 0x02}, // bsub.d b f  
	{0xa66a, &op_bsub,	  2,   5, 255, 0xff, 0x00, 0x00, 0x02}, // bsub.d c f  
	{0xa66b, &op_bsub,	  3,   5, 255, 0xff, 0x00, 0x00, 0x02}, // bsub.d d f  
	{0xa66c, &op_bsub,	  4,   5, 255, 0xff, 0x00, 0x00, 0x02}, // bsub.d e f  
	{0xa66d, &op_bsub,	  5,   5, 255, 0xff, 0x00, 0x00, 0x02}, // bsub.d f f  
	{0xa66e, &op_bsub,	  6,   5, 255, 0xff, 0x00, 0x00, 0x02}, // bsub.d g f  
	{0xa66f, &op_bsub,	  7,   5, 255, 0xff, 0x00, 0x00, 0x02}, // bsub.d h f  
	{0xa670, &op_bsub,	  0,   6, 255, 0xff, 0x00, 0x00, 0x02}, // bsub.d a g  
	{0xa671, &op_bsub,	  1,   6, 255, 0xff, 0x00, 0x00, 0x02}, // bsub.d b g  
	{0xa672, &op_bsub,	  2,   6, 255, 0xff, 0x00, 0x00, 0x02}, // bsub.d c g  
	{0xa673, &op_bsub,	  3,   6, 255, 0xff, 0x00, 0x00, 0x02}, // bsub.d d g  
	{0xa674, &op_bsub,	  4,   6, 255, 0xff, 0x00, 0x00, 0x02}, // bsub.d e g  
	{0xa675, &op_bsub,	  5,   6, 255, 0xff, 0x00, 0x00, 0x02}, // bsub.d f g  
	{0xa676, &op_bsub,	  6,   6, 255, 0xff, 0x00, 0x00, 0x02}, // bsub.d g g  
	{0xa677, &op_bsub,	  7,   6, 255, 0xff, 0x00, 0x00, 0x02}, // bsub.d h g  
	{0xa678, &op_bsub,	  0,   7, 255, 0xff, 0x00, 0x00, 0x02}, // bsub.d a h  
	{0xa679, &op_bsub,	  1,   7, 255, 0xff, 0x00, 0x00, 0x02}, // bsub.d b h  
	{0xa67a, &op_bsub,	  2,   7, 255, 0xff, 0x00, 0x00, 0x02}, // bsub.d c h  
	{0xa67b, &op_bsub,	  3,   7, 255, 0xff, 0x00, 0x00, 0x02}, // bsub.d d h  
	{0xa67c, &op_bsub,	  4,   7, 255, 0xff, 0x00, 0x00, 0x02}, // bsub.d e h  
	{0xa67d, &op_bsub,	  5,   7, 255, 0xff, 0x00, 0x00, 0x02}, // bsub.d f h  
	{0xa67e, &op_bsub,	  6,   7, 255, 0xff, 0x00, 0x00, 0x02}, // bsub.d g h  
	{0xa67f, &op_bsub,	  7,   7, 255, 0xff, 0x00, 0x00, 0x02}, // bsub.d h h  
	{0xa680, &op_bsub,	  0,   0, 255, 0xff, 0x00, 0x00, 0x04}, // bsub a a  
	{0xa681, &op_bsub,	  1,   0, 255, 0xff, 0x00, 0x00, 0x04}, // bsub b a  
	{0xa682, &op_bsub,	  2,   0, 255, 0xff, 0x00, 0x00, 0x04}, // bsub c a  
	{0xa683, &op_bsub,	  3,   0, 255, 0xff, 0x00, 0x00, 0x04}, // bsub d a  
	{0xa684, &op_bsub,	  4,   0, 255, 0xff, 0x00, 0x00, 0x04}, // bsub e a  
	{0xa685, &op_bsub,	  5,   0, 255, 0xff, 0x00, 0x00, 0x04}, // bsub f a  
	{0xa686, &op_bsub,	  6,   0, 255, 0xff, 0x00, 0x00, 0x04}, // bsub g a  
	{0xa687, &op_bsub,	  7,   0, 255, 0xff, 0x00, 0x00, 0x04}, // bsub h a  
	{0xa688, &op_bsub,	  0,   1, 255, 0xff, 0x00, 0x00, 0x04}, // bsub a b  
	{0xa689, &op_bsub,	  1,   1, 255, 0xff, 0x00, 0x00, 0x04}, // bsub b b  
	{0xa68a, &op_bsub,	  2,   1, 255, 0xff, 0x00, 0x00, 0x04}, // bsub c b  
	{0xa68b, &op_bsub,	  3,   1, 255, 0xff, 0x00, 0x00, 0x04}, // bsub d b  
	{0xa68c, &op_bsub,	  4,   1, 255, 0xff, 0x00, 0x00, 0x04}, // bsub e b  
	{0xa68d, &op_bsub,	  5,   1, 255, 0xff, 0x00, 0x00, 0x04}, // bsub f b  
	{0xa68e, &op_bsub,	  6,   1, 255, 0xff, 0x00, 0x00, 0x04}, // bsub g b  
	{0xa68f, &op_bsub,	  7,   1, 255, 0xff, 0x00, 0x00, 0x04}, // bsub h b  
	{0xa690, &op_bsub,	  0,   2, 255, 0xff, 0x00, 0x00, 0x04}, // bsub a c  
	{0xa691, &op_bsub,	  1,   2, 255, 0xff, 0x00, 0x00, 0x04}, // bsub b c  
	{0xa692, &op_bsub,	  2,   2, 255, 0xff, 0x00, 0x00, 0x04}, // bsub c c  
	{0xa693, &op_bsub,	  3,   2, 255, 0xff, 0x00, 0x00, 0x04}, // bsub d c  
	{0xa694, &op_bsub,	  4,   2, 255, 0xff, 0x00, 0x00, 0x04}, // bsub e c  
	{0xa695, &op_bsub,	  5,   2, 255, 0xff, 0x00, 0x00, 0x04}, // bsub f c  
	{0xa696, &op_bsub,	  6,   2, 255, 0xff, 0x00, 0x00, 0x04}, // bsub g c  
	{0xa697, &op_bsub,	  7,   2, 255, 0xff, 0x00, 0x00, 0x04}, // bsub h c  
	{0xa698, &op_bsub,	  0,   3, 255, 0xff, 0x00, 0x00, 0x04}, // bsub a d  
	{0xa699, &op_bsub,	  1,   3, 255, 0xff, 0x00, 0x00, 0x04}, // bsub b d  
	{0xa69a, &op_bsub,	  2,   3, 255, 0xff, 0x00, 0x00, 0x04}, // bsub c d  
	{0xa69b, &op_bsub,	  3,   3, 255, 0xff, 0x00, 0x00, 0x04}, // bsub d d  
	{0xa69c, &op_bsub,	  4,   3, 255, 0xff, 0x00, 0x00, 0x04}, // bsub e d  
	{0xa69d, &op_bsub,	  5,   3, 255, 0xff, 0x00, 0x00, 0x04}, // bsub f d  
	{0xa69e, &op_bsub,	  6,   3, 255, 0xff, 0x00, 0x00, 0x04}, // bsub g d  
	{0xa69f, &op_bsub,	  7,   3, 255, 0xff, 0x00, 0x00, 0x04}, // bsub h d  
	{0xa6a0, &op_bsub,	  0,   4, 255, 0xff, 0x00, 0x00, 0x04}, // bsub a e  
	{0xa6a1, &op_bsub,	  1,   4, 255, 0xff, 0x00, 0x00, 0x04}, // bsub b e  
	{0xa6a2, &op_bsub,	  2,   4, 255, 0xff, 0x00, 0x00, 0x04}, // bsub c e  
	{0xa6a3, &op_bsub,	  3,   4, 255, 0xff, 0x00, 0x00, 0x04}, // bsub d e  
	{0xa6a4, &op_bsub,	  4,   4, 255, 0xff, 0x00, 0x00, 0x04}, // bsub e e  
	{0xa6a5, &op_bsub,	  5,   4, 255, 0xff, 0x00, 0x00, 0x04}, // bsub f e  
	{0xa6a6, &op_bsub,	  6,   4, 255, 0xff, 0x00, 0x00, 0x04}, // bsub g e  
	{0xa6a7, &op_bsub,	  7,   4, 255, 0xff, 0x00, 0x00, 0x04}, // bsub h e  
	{0xa6a8, &op_bsub,	  0,   5, 255, 0xff, 0x00, 0x00, 0x04}, // bsub a f  
	{0xa6a9, &op_bsub,	  1,   5, 255, 0xff, 0x00, 0x00, 0x04}, // bsub b f  
	{0xa6aa, &op_bsub,	  2,   5, 255, 0xff, 0x00, 0x00, 0x04}, // bsub c f  
	{0xa6ab, &op_bsub,	  3,   5, 255, 0xff, 0x00, 0x00, 0x04}, // bsub d f  
	{0xa6ac, &op_bsub,	  4,   5, 255, 0xff, 0x00, 0x00, 0x04}, // bsub e f  
	{0xa6ad, &op_bsub,	  5,   5, 255, 0xff, 0x00, 0x00, 0x04}, // bsub f f  
	{0xa6ae, &op_bsub,	  6,   5, 255, 0xff, 0x00, 0x00, 0x04}, // bsub g f  
	{0xa6af, &op_bsub,	  7,   5, 255, 0xff, 0x00, 0x00, 0x04}, // bsub h f  
	{0xa6b0, &op_bsub,	  0,   6, 255, 0xff, 0x00, 0x00, 0x04}, // bsub a g  
	{0xa6b1, &op_bsub,	  1,   6, 255, 0xff, 0x00, 0x00, 0x04}, // bsub b g  
	{0xa6b2, &op_bsub,	  2,   6, 255, 0xff, 0x00, 0x00, 0x04}, // bsub c g  
	{0xa6b3, &op_bsub,	  3,   6, 255, 0xff, 0x00, 0x00, 0x04}, // bsub d g  
	{0xa6b4, &op_bsub,	  4,   6, 255, 0xff, 0x00, 0x00, 0x04}, // bsub e g  
	{0xa6b5, &op_bsub,	  5,   6, 255, 0xff, 0x00, 0x00, 0x04}, // bsub f g  
	{0xa6b6, &op_bsub,	  6,   6, 255, 0xff, 0x00, 0x00, 0x04}, // bsub g g  
	{0xa6b7, &op_bsub,	  7,   6, 255, 0xff, 0x00, 0x00, 0x04}, // bsub h g  
	{0xa6b8, &op_bsub,	  0,   7, 255, 0xff, 0x00, 0x00, 0x04}, // bsub a h  
	{0xa6b9, &op_bsub,	  1,   7, 255, 0xff, 0x00, 0x00, 0x04}, // bsub b h  
	{0xa6ba, &op_bsub,	  2,   7, 255, 0xff, 0x00, 0x00, 0x04}, // bsub c h  
	{0xa6bb, &op_bsub,	  3,   7, 255, 0xff, 0x00, 0x00, 0x04}, // bsub d h  
	{0xa6bc, &op_bsub,	  4,   7, 255, 0xff, 0x00, 0x00, 0x04}, // bsub e h  
	{0xa6bd, &op_bsub,	  5,   7, 255, 0xff, 0x00, 0x00, 0x04}, // bsub f h  
	{0xa6be, &op_bsub,	  6,   7, 255, 0xff, 0x00, 0x00, 0x04}, // bsub g h  
	{0xa6bf, &op_bsub,	  7,   7, 255, 0xff, 0x00, 0x00, 0x04}, // bsub h h  
	{0xa700, &op_bsub,	  0,   0, 255, 0xff, 0x01, 0x00, 0x01}, // bsub.wr a a  
	{0xa701, &op_bsub,	  1,   0, 255, 0xff, 0x01, 0x00, 0x01}, // bsub.wr b a  
	{0xa702, &op_bsub,	  2,   0, 255, 0xff, 0x01, 0x00, 0x01}, // bsub.wr c a  
	{0xa703, &op_bsub,	  3,   0, 255, 0xff, 0x01, 0x00, 0x01}, // bsub.wr d a  
	{0xa704, &op_bsub,	  4,   0, 255, 0xff, 0x01, 0x00, 0x01}, // bsub.wr e a  
	{0xa705, &op_bsub,	  5,   0, 255, 0xff, 0x01, 0x00, 0x01}, // bsub.wr f a  
	{0xa706, &op_bsub,	  6,   0, 255, 0xff, 0x01, 0x00, 0x01}, // bsub.wr g a  
	{0xa707, &op_bsub,	  7,   0, 255, 0xff, 0x01, 0x00, 0x01}, // bsub.wr h a  
	{0xa708, &op_bsub,	  0,   1, 255, 0xff, 0x01, 0x00, 0x01}, // bsub.wr a b  
	{0xa709, &op_bsub,	  1,   1, 255, 0xff, 0x01, 0x00, 0x01}, // bsub.wr b b  
	{0xa70a, &op_bsub,	  2,   1, 255, 0xff, 0x01, 0x00, 0x01}, // bsub.wr c b  
	{0xa70b, &op_bsub,	  3,   1, 255, 0xff, 0x01, 0x00, 0x01}, // bsub.wr d b  
	{0xa70c, &op_bsub,	  4,   1, 255, 0xff, 0x01, 0x00, 0x01}, // bsub.wr e b  
	{0xa70d, &op_bsub,	  5,   1, 255, 0xff, 0x01, 0x00, 0x01}, // bsub.wr f b  
	{0xa70e, &op_bsub,	  6,   1, 255, 0xff, 0x01, 0x00, 0x01}, // bsub.wr g b  
	{0xa70f, &op_bsub,	  7,   1, 255, 0xff, 0x01, 0x00, 0x01}, // bsub.wr h b  
	{0xa710, &op_bsub,	  0,   2, 255, 0xff, 0x01, 0x00, 0x01}, // bsub.wr a c  
	{0xa711, &op_bsub,	  1,   2, 255, 0xff, 0x01, 0x00, 0x01}, // bsub.wr b c  
	{0xa712, &op_bsub,	  2,   2, 255, 0xff, 0x01, 0x00, 0x01}, // bsub.wr c c  
	{0xa713, &op_bsub,	  3,   2, 255, 0xff, 0x01, 0x00, 0x01}, // bsub.wr d c  
	{0xa714, &op_bsub,	  4,   2, 255, 0xff, 0x01, 0x00, 0x01}, // bsub.wr e c  
	{0xa715, &op_bsub,	  5,   2, 255, 0xff, 0x01, 0x00, 0x01}, // bsub.wr f c  
	{0xa716, &op_bsub,	  6,   2, 255, 0xff, 0x01, 0x00, 0x01}, // bsub.wr g c  
	{0xa717, &op_bsub,	  7,   2, 255, 0xff, 0x01, 0x00, 0x01}, // bsub.wr h c  
	{0xa718, &op_bsub,	  0,   3, 255, 0xff, 0x01, 0x00, 0x01}, // bsub.wr a d  
	{0xa719, &op_bsub,	  1,   3, 255, 0xff, 0x01, 0x00, 0x01}, // bsub.wr b d  
	{0xa71a, &op_bsub,	  2,   3, 255, 0xff, 0x01, 0x00, 0x01}, // bsub.wr c d  
	{0xa71b, &op_bsub,	  3,   3, 255, 0xff, 0x01, 0x00, 0x01}, // bsub.wr d d  
	{0xa71c, &op_bsub,	  4,   3, 255, 0xff, 0x01, 0x00, 0x01}, // bsub.wr e d  
	{0xa71d, &op_bsub,	  5,   3, 255, 0xff, 0x01, 0x00, 0x01}, // bsub.wr f d  
	{0xa71e, &op_bsub,	  6,   3, 255, 0xff, 0x01, 0x00, 0x01}, // bsub.wr g d  
	{0xa71f, &op_bsub,	  7,   3, 255, 0xff, 0x01, 0x00, 0x01}, // bsub.wr h d  
	{0xa720, &op_bsub,	  0,   4, 255, 0xff, 0x01, 0x00, 0x01}, // bsub.wr a e  
	{0xa721, &op_bsub,	  1,   4, 255, 0xff, 0x01, 0x00, 0x01}, // bsub.wr b e  
	{0xa722, &op_bsub,	  2,   4, 255, 0xff, 0x01, 0x00, 0x01}, // bsub.wr c e  
	{0xa723, &op_bsub,	  3,   4, 255, 0xff, 0x01, 0x00, 0x01}, // bsub.wr d e  
	{0xa724, &op_bsub,	  4,   4, 255, 0xff, 0x01, 0x00, 0x01}, // bsub.wr e e  
	{0xa725, &op_bsub,	  5,   4, 255, 0xff, 0x01, 0x00, 0x01}, // bsub.wr f e  
	{0xa726, &op_bsub,	  6,   4, 255, 0xff, 0x01, 0x00, 0x01}, // bsub.wr g e  
	{0xa727, &op_bsub,	  7,   4, 255, 0xff, 0x01, 0x00, 0x01}, // bsub.wr h e  
	{0xa728, &op_bsub,	  0,   5, 255, 0xff, 0x01, 0x00, 0x01}, // bsub.wr a f  
	{0xa729, &op_bsub,	  1,   5, 255, 0xff, 0x01, 0x00, 0x01}, // bsub.wr b f  
	{0xa72a, &op_bsub,	  2,   5, 255, 0xff, 0x01, 0x00, 0x01}, // bsub.wr c f  
	{0xa72b, &op_bsub,	  3,   5, 255, 0xff, 0x01, 0x00, 0x01}, // bsub.wr d f  
	{0xa72c, &op_bsub,	  4,   5, 255, 0xff, 0x01, 0x00, 0x01}, // bsub.wr e f  
	{0xa72d, &op_bsub,	  5,   5, 255, 0xff, 0x01, 0x00, 0x01}, // bsub.wr f f  
	{0xa72e, &op_bsub,	  6,   5, 255, 0xff, 0x01, 0x00, 0x01}, // bsub.wr g f  
	{0xa72f, &op_bsub,	  7,   5, 255, 0xff, 0x01, 0x00, 0x01}, // bsub.wr h f  
	{0xa730, &op_bsub,	  0,   6, 255, 0xff, 0x01, 0x00, 0x01}, // bsub.wr a g  
	{0xa731, &op_bsub,	  1,   6, 255, 0xff, 0x01, 0x00, 0x01}, // bsub.wr b g  
	{0xa732, &op_bsub,	  2,   6, 255, 0xff, 0x01, 0x00, 0x01}, // bsub.wr c g  
	{0xa733, &op_bsub,	  3,   6, 255, 0xff, 0x01, 0x00, 0x01}, // bsub.wr d g  
	{0xa734, &op_bsub,	  4,   6, 255, 0xff, 0x01, 0x00, 0x01}, // bsub.wr e g  
	{0xa735, &op_bsub,	  5,   6, 255, 0xff, 0x01, 0x00, 0x01}, // bsub.wr f g  
	{0xa736, &op_bsub,	  6,   6, 255, 0xff, 0x01, 0x00, 0x01}, // bsub.wr g g  
	{0xa737, &op_bsub,	  7,   6, 255, 0xff, 0x01, 0x00, 0x01}, // bsub.wr h g  
	{0xa738, &op_bsub,	  0,   7, 255, 0xff, 0x01, 0x00, 0x01}, // bsub.wr a h  
	{0xa739, &op_bsub,	  1,   7, 255, 0xff, 0x01, 0x00, 0x01}, // bsub.wr b h  
	{0xa73a, &op_bsub,	  2,   7, 255, 0xff, 0x01, 0x00, 0x01}, // bsub.wr c h  
	{0xa73b, &op_bsub,	  3,   7, 255, 0xff, 0x01, 0x00, 0x01}, // bsub.wr d h  
	{0xa73c, &op_bsub,	  4,   7, 255, 0xff, 0x01, 0x00, 0x01}, // bsub.wr e h  
	{0xa73d, &op_bsub,	  5,   7, 255, 0xff, 0x01, 0x00, 0x01}, // bsub.wr f h  
	{0xa73e, &op_bsub,	  6,   7, 255, 0xff, 0x01, 0x00, 0x01}, // bsub.wr g h  
	{0xa73f, &op_bsub,	  7,   7, 255, 0xff, 0x01, 0x00, 0x01}, // bsub.wr h h  
	{0xa740, &op_bsub,	  0,   0, 255, 0xff, 0x01, 0x00, 0x02}, // bsub.dr a a  
	{0xa741, &op_bsub,	  1,   0, 255, 0xff, 0x01, 0x00, 0x02}, // bsub.dr b a  
	{0xa742, &op_bsub,	  2,   0, 255, 0xff, 0x01, 0x00, 0x02}, // bsub.dr c a  
	{0xa743, &op_bsub,	  3,   0, 255, 0xff, 0x01, 0x00, 0x02}, // bsub.dr d a  
	{0xa744, &op_bsub,	  4,   0, 255, 0xff, 0x01, 0x00, 0x02}, // bsub.dr e a  
	{0xa745, &op_bsub,	  5,   0, 255, 0xff, 0x01, 0x00, 0x02}, // bsub.dr f a  
	{0xa746, &op_bsub,	  6,   0, 255, 0xff, 0x01, 0x00, 0x02}, // bsub.dr g a  
	{0xa747, &op_bsub,	  7,   0, 255, 0xff, 0x01, 0x00, 0x02}, // bsub.dr h a  
	{0xa748, &op_bsub,	  0,   1, 255, 0xff, 0x01, 0x00, 0x02}, // bsub.dr a b  
	{0xa749, &op_bsub,	  1,   1, 255, 0xff, 0x01, 0x00, 0x02}, // bsub.dr b b  
	{0xa74a, &op_bsub,	  2,   1, 255, 0xff, 0x01, 0x00, 0x02}, // bsub.dr c b  
	{0xa74b, &op_bsub,	  3,   1, 255, 0xff, 0x01, 0x00, 0x02}, // bsub.dr d b  
	{0xa74c, &op_bsub,	  4,   1, 255, 0xff, 0x01, 0x00, 0x02}, // bsub.dr e b  
	{0xa74d, &op_bsub,	  5,   1, 255, 0xff, 0x01, 0x00, 0x02}, // bsub.dr f b  
	{0xa74e, &op_bsub,	  6,   1, 255, 0xff, 0x01, 0x00, 0x02}, // bsub.dr g b  
	{0xa74f, &op_bsub,	  7,   1, 255, 0xff, 0x01, 0x00, 0x02}, // bsub.dr h b  
	{0xa750, &op_bsub,	  0,   2, 255, 0xff, 0x01, 0x00, 0x02}, // bsub.dr a c  
	{0xa751, &op_bsub,	  1,   2, 255, 0xff, 0x01, 0x00, 0x02}, // bsub.dr b c  
	{0xa752, &op_bsub,	  2,   2, 255, 0xff, 0x01, 0x00, 0x02}, // bsub.dr c c  
	{0xa753, &op_bsub,	  3,   2, 255, 0xff, 0x01, 0x00, 0x02}, // bsub.dr d c  
	{0xa754, &op_bsub,	  4,   2, 255, 0xff, 0x01, 0x00, 0x02}, // bsub.dr e c  
	{0xa755, &op_bsub,	  5,   2, 255, 0xff, 0x01, 0x00, 0x02}, // bsub.dr f c  
	{0xa756, &op_bsub,	  6,   2, 255, 0xff, 0x01, 0x00, 0x02}, // bsub.dr g c  
	{0xa757, &op_bsub,	  7,   2, 255, 0xff, 0x01, 0x00, 0x02}, // bsub.dr h c  
	{0xa758, &op_bsub,	  0,   3, 255, 0xff, 0x01, 0x00, 0x02}, // bsub.dr a d  
	{0xa759, &op_bsub,	  1,   3, 255, 0xff, 0x01, 0x00, 0x02}, // bsub.dr b d  
	{0xa75a, &op_bsub,	  2,   3, 255, 0xff, 0x01, 0x00, 0x02}, // bsub.dr c d  
	{0xa75b, &op_bsub,	  3,   3, 255, 0xff, 0x01, 0x00, 0x02}, // bsub.dr d d  
	{0xa75c, &op_bsub,	  4,   3, 255, 0xff, 0x01, 0x00, 0x02}, // bsub.dr e d  
	{0xa75d, &op_bsub,	  5,   3, 255, 0xff, 0x01, 0x00, 0x02}, // bsub.dr f d  
	{0xa75e, &op_bsub,	  6,   3, 255, 0xff, 0x01, 0x00, 0x02}, // bsub.dr g d  
	{0xa75f, &op_bsub,	  7,   3, 255, 0xff, 0x01, 0x00, 0x02}, // bsub.dr h d  
	{0xa760, &op_bsub,	  0,   4, 255, 0xff, 0x01, 0x00, 0x02}, // bsub.dr a e  
	{0xa761, &op_bsub,	  1,   4, 255, 0xff, 0x01, 0x00, 0x02}, // bsub.dr b e  
	{0xa762, &op_bsub,	  2,   4, 255, 0xff, 0x01, 0x00, 0x02}, // bsub.dr c e  
	{0xa763, &op_bsub,	  3,   4, 255, 0xff, 0x01, 0x00, 0x02}, // bsub.dr d e  
	{0xa764, &op_bsub,	  4,   4, 255, 0xff, 0x01, 0x00, 0x02}, // bsub.dr e e  
	{0xa765, &op_bsub,	  5,   4, 255, 0xff, 0x01, 0x00, 0x02}, // bsub.dr f e  
	{0xa766, &op_bsub,	  6,   4, 255, 0xff, 0x01, 0x00, 0x02}, // bsub.dr g e  
	{0xa767, &op_bsub,	  7,   4, 255, 0xff, 0x01, 0x00, 0x02}, // bsub.dr h e  
	{0xa768, &op_bsub,	  0,   5, 255, 0xff, 0x01, 0x00, 0x02}, // bsub.dr a f  
	{0xa769, &op_bsub,	  1,   5, 255, 0xff, 0x01, 0x00, 0x02}, // bsub.dr b f  
	{0xa76a, &op_bsub,	  2,   5, 255, 0xff, 0x01, 0x00, 0x02}, // bsub.dr c f  
	{0xa76b, &op_bsub,	  3,   5, 255, 0xff, 0x01, 0x00, 0x02}, // bsub.dr d f  
	{0xa76c, &op_bsub,	  4,   5, 255, 0xff, 0x01, 0x00, 0x02}, // bsub.dr e f  
	{0xa76d, &op_bsub,	  5,   5, 255, 0xff, 0x01, 0x00, 0x02}, // bsub.dr f f  
	{0xa76e, &op_bsub,	  6,   5, 255, 0xff, 0x01, 0x00, 0x02}, // bsub.dr g f  
	{0xa76f, &op_bsub,	  7,   5, 255, 0xff, 0x01, 0x00, 0x02}, // bsub.dr h f  
	{0xa770, &op_bsub,	  0,   6, 255, 0xff, 0x01, 0x00, 0x02}, // bsub.dr a g  
	{0xa771, &op_bsub,	  1,   6, 255, 0xff, 0x01, 0x00, 0x02}, // bsub.dr b g  
	{0xa772, &op_bsub,	  2,   6, 255, 0xff, 0x01, 0x00, 0x02}, // bsub.dr c g  
	{0xa773, &op_bsub,	  3,   6, 255, 0xff, 0x01, 0x00, 0x02}, // bsub.dr d g  
	{0xa774, &op_bsub,	  4,   6, 255, 0xff, 0x01, 0x00, 0x02}, // bsub.dr e g  
	{0xa775, &op_bsub,	  5,   6, 255, 0xff, 0x01, 0x00, 0x02}, // bsub.dr f g  
	{0xa776, &op_bsub,	  6,   6, 255, 0xff, 0x01, 0x00, 0x02}, // bsub.dr g g  
	{0xa777, &op_bsub,	  7,   6, 255, 0xff, 0x01, 0x00, 0x02}, // bsub.dr h g  
	{0xa778, &op_bsub,	  0,   7, 255, 0xff, 0x01, 0x00, 0x02}, // bsub.dr a h  
	{0xa779, &op_bsub,	  1,   7, 255, 0xff, 0x01, 0x00, 0x02}, // bsub.dr b h  
	{0xa77a, &op_bsub,	  2,   7, 255, 0xff, 0x01, 0x00, 0x02}, // bsub.dr c h  
	{0xa77b, &op_bsub,	  3,   7, 255, 0xff, 0x01, 0x00, 0x02}, // bsub.dr d h  
	{0xa77c, &op_bsub,	  4,   7, 255, 0xff, 0x01, 0x00, 0x02}, // bsub.dr e h  
	{0xa77d, &op_bsub,	  5,   7, 255, 0xff, 0x01, 0x00, 0x02}, // bsub.dr f h  
	{0xa77e, &op_bsub,	  6,   7, 255, 0xff, 0x01, 0x00, 0x02}, // bsub.dr g h  
	{0xa77f, &op_bsub,	  7,   7, 255, 0xff, 0x01, 0x00, 0x02}, // bsub.dr h h  
	{0xa780, &op_bsub,	  0,   0, 255, 0xff, 0x01, 0x00, 0x04}, // bsub.r a a  
	{0xa781, &op_bsub,	  1,   0, 255, 0xff, 0x01, 0x00, 0x04}, // bsub.r b a  
	{0xa782, &op_bsub,	  2,   0, 255, 0xff, 0x01, 0x00, 0x04}, // bsub.r c a  
	{0xa783, &op_bsub,	  3,   0, 255, 0xff, 0x01, 0x00, 0x04}, // bsub.r d a  
	{0xa784, &op_bsub,	  4,   0, 255, 0xff, 0x01, 0x00, 0x04}, // bsub.r e a  
	{0xa785, &op_bsub,	  5,   0, 255, 0xff, 0x01, 0x00, 0x04}, // bsub.r f a  
	{0xa786, &op_bsub,	  6,   0, 255, 0xff, 0x01, 0x00, 0x04}, // bsub.r g a  
	{0xa787, &op_bsub,	  7,   0, 255, 0xff, 0x01, 0x00, 0x04}, // bsub.r h a  
	{0xa788, &op_bsub,	  0,   1, 255, 0xff, 0x01, 0x00, 0x04}, // bsub.r a b  
	{0xa789, &op_bsub,	  1,   1, 255, 0xff, 0x01, 0x00, 0x04}, // bsub.r b b  
	{0xa78a, &op_bsub,	  2,   1, 255, 0xff, 0x01, 0x00, 0x04}, // bsub.r c b  
	{0xa78b, &op_bsub,	  3,   1, 255, 0xff, 0x01, 0x00, 0x04}, // bsub.r d b  
	{0xa78c, &op_bsub,	  4,   1, 255, 0xff, 0x01, 0x00, 0x04}, // bsub.r e b  
	{0xa78d, &op_bsub,	  5,   1, 255, 0xff, 0x01, 0x00, 0x04}, // bsub.r f b  
	{0xa78e, &op_bsub,	  6,   1, 255, 0xff, 0x01, 0x00, 0x04}, // bsub.r g b  
	{0xa78f, &op_bsub,	  7,   1, 255, 0xff, 0x01, 0x00, 0x04}, // bsub.r h b  
	{0xa790, &op_bsub,	  0,   2, 255, 0xff, 0x01, 0x00, 0x04}, // bsub.r a c  
	{0xa791, &op_bsub,	  1,   2, 255, 0xff, 0x01, 0x00, 0x04}, // bsub.r b c  
	{0xa792, &op_bsub,	  2,   2, 255, 0xff, 0x01, 0x00, 0x04}, // bsub.r c c  
	{0xa793, &op_bsub,	  3,   2, 255, 0xff, 0x01, 0x00, 0x04}, // bsub.r d c  
	{0xa794, &op_bsub,	  4,   2, 255, 0xff, 0x01, 0x00, 0x04}, // bsub.r e c  
	{0xa795, &op_bsub,	  5,   2, 255, 0xff, 0x01, 0x00, 0x04}, // bsub.r f c  
	{0xa796, &op_bsub,	  6,   2, 255, 0xff, 0x01, 0x00, 0x04}, // bsub.r g c  
	{0xa797, &op_bsub,	  7,   2, 255, 0xff, 0x01, 0x00, 0x04}, // bsub.r h c  
	{0xa798, &op_bsub,	  0,   3, 255, 0xff, 0x01, 0x00, 0x04}, // bsub.r a d  
	{0xa799, &op_bsub,	  1,   3, 255, 0xff, 0x01, 0x00, 0x04}, // bsub.r b d  
	{0xa79a, &op_bsub,	  2,   3, 255, 0xff, 0x01, 0x00, 0x04}, // bsub.r c d  
	{0xa79b, &op_bsub,	  3,   3, 255, 0xff, 0x01, 0x00, 0x04}, // bsub.r d d  
	{0xa79c, &op_bsub,	  4,   3, 255, 0xff, 0x01, 0x00, 0x04}, // bsub.r e d  
	{0xa79d, &op_bsub,	  5,   3, 255, 0xff, 0x01, 0x00, 0x04}, // bsub.r f d  
	{0xa79e, &op_bsub,	  6,   3, 255, 0xff, 0x01, 0x00, 0x04}, // bsub.r g d  
	{0xa79f, &op_bsub,	  7,   3, 255, 0xff, 0x01, 0x00, 0x04}, // bsub.r h d  
	{0xa7a0, &op_bsub,	  0,   4, 255, 0xff, 0x01, 0x00, 0x04}, // bsub.r a e  
	{0xa7a1, &op_bsub,	  1,   4, 255, 0xff, 0x01, 0x00, 0x04}, // bsub.r b e  
	{0xa7a2, &op_bsub,	  2,   4, 255, 0xff, 0x01, 0x00, 0x04}, // bsub.r c e  
	{0xa7a3, &op_bsub,	  3,   4, 255, 0xff, 0x01, 0x00, 0x04}, // bsub.r d e  
	{0xa7a4, &op_bsub,	  4,   4, 255, 0xff, 0x01, 0x00, 0x04}, // bsub.r e e  
	{0xa7a5, &op_bsub,	  5,   4, 255, 0xff, 0x01, 0x00, 0x04}, // bsub.r f e  
	{0xa7a6, &op_bsub,	  6,   4, 255, 0xff, 0x01, 0x00, 0x04}, // bsub.r g e  
	{0xa7a7, &op_bsub,	  7,   4, 255, 0xff, 0x01, 0x00, 0x04}, // bsub.r h e  
	{0xa7a8, &op_bsub,	  0,   5, 255, 0xff, 0x01, 0x00, 0x04}, // bsub.r a f  
	{0xa7a9, &op_bsub,	  1,   5, 255, 0xff, 0x01, 0x00, 0x04}, // bsub.r b f  
	{0xa7aa, &op_bsub,	  2,   5, 255, 0xff, 0x01, 0x00, 0x04}, // bsub.r c f  
	{0xa7ab, &op_bsub,	  3,   5, 255, 0xff, 0x01, 0x00, 0x04}, // bsub.r d f  
	{0xa7ac, &op_bsub,	  4,   5, 255, 0xff, 0x01, 0x00, 0x04}, // bsub.r e f  
	{0xa7ad, &op_bsub,	  5,   5, 255, 0xff, 0x01, 0x00, 0x04}, // bsub.r f f  
	{0xa7ae, &op_bsub,	  6,   5, 255, 0xff, 0x01, 0x00, 0x04}, // bsub.r g f  
	{0xa7af, &op_bsub,	  7,   5, 255, 0xff, 0x01, 0x00, 0x04}, // bsub.r h f  
	{0xa7b0, &op_bsub,	  0,   6, 255, 0xff, 0x01, 0x00, 0x04}, // bsub.r a g  
	{0xa7b1, &op_bsub,	  1,   6, 255, 0xff, 0x01, 0x00, 0x04}, // bsub.r b g  
	{0xa7b2, &op_bsub,	  2,   6, 255, 0xff, 0x01, 0x00, 0x04}, // bsub.r c g  
	{0xa7b3, &op_bsub,	  3,   6, 255, 0xff, 0x01, 0x00, 0x04}, // bsub.r d g  
	{0xa7b4, &op_bsub,	  4,   6, 255, 0xff, 0x01, 0x00, 0x04}, // bsub.r e g  
	{0xa7b5, &op_bsub,	  5,   6, 255, 0xff, 0x01, 0x00, 0x04}, // bsub.r f g  
	{0xa7b6, &op_bsub,	  6,   6, 255, 0xff, 0x01, 0x00, 0x04}, // bsub.r g g  
	{0xa7b7, &op_bsub,	  7,   6, 255, 0xff, 0x01, 0x00, 0x04}, // bsub.r h g  
	{0xa7b8, &op_bsub,	  0,   7, 255, 0xff, 0x01, 0x00, 0x04}, // bsub.r a h  
	{0xa7b9, &op_bsub,	  1,   7, 255, 0xff, 0x01, 0x00, 0x04}, // bsub.r b h  
	{0xa7ba, &op_bsub,	  2,   7, 255, 0xff, 0x01, 0x00, 0x04}, // bsub.r c h  
	{0xa7bb, &op_bsub,	  3,   7, 255, 0xff, 0x01, 0x00, 0x04}, // bsub.r d h  
	{0xa7bc, &op_bsub,	  4,   7, 255, 0xff, 0x01, 0x00, 0x04}, // bsub.r e h  
	{0xa7bd, &op_bsub,	  5,   7, 255, 0xff, 0x01, 0x00, 0x04}, // bsub.r f h  
	{0xa7be, &op_bsub,	  6,   7, 255, 0xff, 0x01, 0x00, 0x04}, // bsub.r g h  
	{0xa7bf, &op_bsub,	  7,   7, 255, 0xff, 0x01, 0x00, 0x04}, // bsub.r h h  
	{0xa6c8, &op_bsub,	  0,   8, 255, 0xff, 0x00, 0x01, 0x01}, // bsub.wi a <literal>  
	{0xa6c9, &op_bsub,	  1,   8, 255, 0xff, 0x00, 0x01, 0x01}, // bsub.wi b <literal>  
	{0xa6ca, &op_bsub,	  2,   8, 255, 0xff, 0x00, 0x01, 0x01}, // bsub.wi c <literal>  
	{0xa6cb, &op_bsub,	  3,   8, 255, 0xff, 0x00, 0x01, 0x01}, // bsub.wi d <literal>  
	{0xa6cc, &op_bsub,	  4,   8, 255, 0xff, 0x00, 0x01, 0x01}, // bsub.wi e <literal>  
	{0xa6cd, &op_bsub,	  5,   8, 255, 0xff, 0x00, 0x01, 0x01}, // bsub.wi f <literal>  
	{0xa6ce, &op_bsub,	  6,   8, 255, 0xff, 0x00, 0x01, 0x01}, // bsub.wi g <literal>  
	{0xa6cf, &op_bsub,	  7,   8, 255, 0xff, 0x00, 0x01, 0x01}, // bsub.wi h <literal>  
	{0xa6d0, &op_bsub,	  0,   8, 255, 0xff, 0x00, 0x02, 0x02}, // bsub.di a <literal>  
	{0xa6d1, &op_bsub,	  1,   8, 255, 0xff, 0x00, 0x02, 0x02}, // bsub.di b <literal>  
	{0xa6d2, &op_bsub,	  2,   8, 255, 0xff, 0x00, 0x02, 0x02}, // bsub.di c <literal>  
	{0xa6d3, &op_bsub,	  3,   8, 255, 0xff, 0x00, 0x02, 0x02}, // bsub.di d <literal>  
	{0xa6d4, &op_bsub,	  4,   8, 255, 0xff, 0x00, 0x02, 0x02}, // bsub.di e <literal>  
	{0xa6d5, &op_bsub,	  5,   8, 255, 0xff, 0x00, 0x02, 0x02}, // bsub.di f <literal>  
	{0xa6d6, &op_bsub,	  6,   8, 255, 0xff, 0x00, 0x02, 0x02}, // bsub.di g <literal>  
	{0xa6d7, &op_bsub,	  7,   8, 255, 0xff, 0x00, 0x02, 0x02}, // bsub.di h <literal>  
	{0xa6e0, &op_bsub,	  0,   8, 255, 0xff, 0x00, 0x04, 0x04}, // bsub.i a <literal>  
	{0xa6e1, &op_bsub,	  1,   8, 255, 0xff, 0x00, 0x04, 0x04}, // bsub.i b <literal>  
	{0xa6e2, &op_bsub,	  2,   8, 255, 0xff, 0x00, 0x04, 0x04}, // bsub.i c <literal>  
	{0xa6e3, &op_bsub,	  3,   8, 255, 0xff, 0x00, 0x04, 0x04}, // bsub.i d <literal>  
	{0xa6e4, &op_bsub,	  4,   8, 255, 0xff, 0x00, 0x04, 0x04}, // bsub.i e <literal>  
	{0xa6e5, &op_bsub,	  5,   8, 255, 0xff, 0x00, 0x04, 0x04}, // bsub.i f <literal>  
	{0xa6e6, &op_bsub,	  6,   8, 255, 0xff, 0x00, 0x04, 0x04}, // bsub.i g <literal>  
	{0xa6e7, &op_bsub,	  7,   8, 255, 0xff, 0x00, 0x04, 0x04}, // bsub.i h <literal>  
	{0xa7c8, &op_bsub,	  0,   8, 255, 0xff, 0x01, 0x04, 0x01}, // bsub.wri a <literal>  
	{0xa7c9, &op_bsub,	  1,   8, 255, 0xff, 0x01, 0x04, 0x01}, // bsub.wri b <literal>  
	{0xa7ca, &op_bsub,	  2,   8, 255, 0xff, 0x01, 0x04, 0x01}, // bsub.wri c <literal>  
	{0xa7cb, &op_bsub,	  3,   8, 255, 0xff, 0x01, 0x04, 0x01}, // bsub.wri d <literal>  
	{0xa7cc, &op_bsub,	  4,   8, 255, 0xff, 0x01, 0x04, 0x01}, // bsub.wri e <literal>  
	{0xa7cd, &op_bsub,	  5,   8, 255, 0xff, 0x01, 0x04, 0x01}, // bsub.wri f <literal>  
	{0xa7ce, &op_bsub,	  6,   8, 255, 0xff, 0x01, 0x04, 0x01}, // bsub.wri g <literal>  
	{0xa7cf, &op_bsub,	  7,   8, 255, 0xff, 0x01, 0x04, 0x01}, // bsub.wri h <literal>  
	{0xa7d0, &op_bsub,	  0,   8, 255, 0xff, 0x01, 0x04, 0x02}, // bsub.dri a <literal>  
	{0xa7d1, &op_bsub,	  1,   8, 255, 0xff, 0x01, 0x04, 0x02}, // bsub.dri b <literal>  
	{0xa7d2, &op_bsub,	  2,   8, 255, 0xff, 0x01, 0x04, 0x02}, // bsub.dri c <literal>  
	{0xa7d3, &op_bsub,	  3,   8, 255, 0xff, 0x01, 0x04, 0x02}, // bsub.dri d <literal>  
	{0xa7d4, &op_bsub,	  4,   8, 255, 0xff, 0x01, 0x04, 0x02}, // bsub.dri e <literal>  
	{0xa7d5, &op_bsub,	  5,   8, 255, 0xff, 0x01, 0x04, 0x02}, // bsub.dri f <literal>  
	{0xa7d6, &op_bsub,	  6,   8, 255, 0xff, 0x01, 0x04, 0x02}, // bsub.dri g <literal>  
	{0xa7d7, &op_bsub,	  7,   8, 255, 0xff, 0x01, 0x04, 0x02}, // bsub.dri h <literal>  
	{0xa7e0, &op_bsub,	  0,   8, 255, 0xff, 0x01, 0x04, 0x04}, // bsub.ri a <literal>  
	{0xa7e1, &op_bsub,	  1,   8, 255, 0xff, 0x01, 0x04, 0x04}, // bsub.ri b <literal>  
	{0xa7e2, &op_bsub,	  2,   8, 255, 0xff, 0x01, 0x04, 0x04}, // bsub.ri c <literal>  
	{0xa7e3, &op_bsub,	  3,   8, 255, 0xff, 0x01, 0x04, 0x04}, // bsub.ri d <literal>  
	{0xa7e4, &op_bsub,	  4,   8, 255, 0xff, 0x01, 0x04, 0x04}, // bsub.ri e <literal>  
	{0xa7e5, &op_bsub,	  5,   8, 255, 0xff, 0x01, 0x04, 0x04}, // bsub.ri f <literal>  
	{0xa7e6, &op_bsub,	  6,   8, 255, 0xff, 0x01, 0x04, 0x04}, // bsub.ri g <literal>  
	{0xa7e7, &op_bsub,	  7,   8, 255, 0xff, 0x01, 0x04, 0x04}, // bsub.ri h <literal>  
	{0xa800, &op_bmul,	  0,   0, 255, 0xff, 0x00, 0x00, 0x01}, // bmul.w a a  
	{0xa801, &op_bmul,	  1,   0, 255, 0xff, 0x00, 0x00, 0x01}, // bmul.w b a  
	{0xa802, &op_bmul,	  2,   0, 255, 0xff, 0x00, 0x00, 0x01}, // bmul.w c a  
	{0xa803, &op_bmul,	  3,   0, 255, 0xff, 0x00, 0x00, 0x01}, // bmul.w d a  
	{0xa804, &op_bmul,	  4,   0, 255, 0xff, 0x00, 0x00, 0x01}, // bmul.w e a  
	{0xa805, &op_bmul,	  5,   0, 255, 0xff, 0x00, 0x00, 0x01}, // bmul.w f a  
	{0xa806, &op_bmul,	  6,   0, 255, 0xff, 0x00, 0x00, 0x01}, // bmul.w g a  
	{0xa807, &op_bmul,	  7,   0, 255, 0xff, 0x00, 0x00, 0x01}, // bmul.w h a  
	{0xa808, &op_bmul,	  0,   1, 255, 0xff, 0x00, 0x00, 0x01}, // bmul.w a b  
	{0xa809, &op_bmul,	  1,   1, 255, 0xff, 0x00, 0x00, 0x01}, // bmul.w b b  
	{0xa80a, &op_bmul,	  2,   1, 255, 0xff, 0x00, 0x00, 0x01}, // bmul.w c b  
	{0xa80b, &op_bmul,	  3,   1, 255, 0xff, 0x00, 0x00, 0x01}, // bmul.w d b  
	{0xa80c, &op_bmul,	  4,   1, 255, 0xff, 0x00, 0x00, 0x01}, // bmul.w e b  
	{0xa80d, &op_bmul,	  5,   1, 255, 0xff, 0x00, 0x00, 0x01}, // bmul.w f b  
	{0xa80e, &op_bmul,	  6,   1, 255, 0xff, 0x00, 0x00, 0x01}, // bmul.w g b  
	{0xa80f, &op_bmul,	  7,   1, 255, 0xff, 0x00, 0x00, 0x01}, // bmul.w h b  
	{0xa810, &op_bmul,	  0,   2, 255, 0xff, 0x00, 0x00, 0x01}, // bmul.w a c  
	{0xa811, &op_bmul,	  1,   2, 255, 0xff, 0x00, 0x00, 0x01}, // bmul.w b c  
	{0xa812, &op_bmul,	  2,   2, 255, 0xff, 0x00, 0x00, 0x01}, // bmul.w c c  
	{0xa813, &op_bmul,	  3,   2, 255, 0xff, 0x00, 0x00, 0x01}, // bmul.w d c  
	{0xa814, &op_bmul,	  4,   2, 255, 0xff, 0x00, 0x00, 0x01}, // bmul.w e c  
	{0xa815, &op_bmul,	  5,   2, 255, 0xff, 0x00, 0x00, 0x01}, // bmul.w f c  
	{0xa816, &op_bmul,	  6,   2, 255, 0xff, 0x00, 0x00, 0x01}, // bmul.w g c  
	{0xa817, &op_bmul,	  7,   2, 255, 0xff, 0x00, 0x00, 0x01}, // bmul.w h c  
	{0xa818, &op_bmul,	  0,   3, 255, 0xff, 0x00, 0x00, 0x01}, // bmul.w a d  
	{0xa819, &op_bmul,	  1,   3, 255, 0xff, 0x00, 0x00, 0x01}, // bmul.w b d  
	{0xa81a, &op_bmul,	  2,   3, 255, 0xff, 0x00, 0x00, 0x01}, // bmul.w c d  
	{0xa81b, &op_bmul,	  3,   3, 255, 0xff, 0x00, 0x00, 0x01}, // bmul.w d d  
	{0xa81c, &op_bmul,	  4,   3, 255, 0xff, 0x00, 0x00, 0x01}, // bmul.w e d  
	{0xa81d, &op_bmul,	  5,   3, 255, 0xff, 0x00, 0x00, 0x01}, // bmul.w f d  
	{0xa81e, &op_bmul,	  6,   3, 255, 0xff, 0x00, 0x00, 0x01}, // bmul.w g d  
	{0xa81f, &op_bmul,	  7,   3, 255, 0xff, 0x00, 0x00, 0x01}, // bmul.w h d  
	{0xa820, &op_bmul,	  0,   4, 255, 0xff, 0x00, 0x00, 0x01}, // bmul.w a e  
	{0xa821, &op_bmul,	  1,   4, 255, 0xff, 0x00, 0x00, 0x01}, // bmul.w b e  
	{0xa822, &op_bmul,	  2,   4, 255, 0xff, 0x00, 0x00, 0x01}, // bmul.w c e  
	{0xa823, &op_bmul,	  3,   4, 255, 0xff, 0x00, 0x00, 0x01}, // bmul.w d e  
	{0xa824, &op_bmul,	  4,   4, 255, 0xff, 0x00, 0x00, 0x01}, // bmul.w e e  
	{0xa825, &op_bmul,	  5,   4, 255, 0xff, 0x00, 0x00, 0x01}, // bmul.w f e  
	{0xa826, &op_bmul,	  6,   4, 255, 0xff, 0x00, 0x00, 0x01}, // bmul.w g e  
	{0xa827, &op_bmul,	  7,   4, 255, 0xff, 0x00, 0x00, 0x01}, // bmul.w h e  
	{0xa828, &op_bmul,	  0,   5, 255, 0xff, 0x00, 0x00, 0x01}, // bmul.w a f  
	{0xa829, &op_bmul,	  1,   5, 255, 0xff, 0x00, 0x00, 0x01}, // bmul.w b f  
	{0xa82a, &op_bmul,	  2,   5, 255, 0xff, 0x00, 0x00, 0x01}, // bmul.w c f  
	{0xa82b, &op_bmul,	  3,   5, 255, 0xff, 0x00, 0x00, 0x01}, // bmul.w d f  
	{0xa82c, &op_bmul,	  4,   5, 255, 0xff, 0x00, 0x00, 0x01}, // bmul.w e f  
	{0xa82d, &op_bmul,	  5,   5, 255, 0xff, 0x00, 0x00, 0x01}, // bmul.w f f  
	{0xa82e, &op_bmul,	  6,   5, 255, 0xff, 0x00, 0x00, 0x01}, // bmul.w g f  
	{0xa82f, &op_bmul,	  7,   5, 255, 0xff, 0x00, 0x00, 0x01}, // bmul.w h f  
	{0xa830, &op_bmul,	  0,   6, 255, 0xff, 0x00, 0x00, 0x01}, // bmul.w a g  
	{0xa831, &op_bmul,	  1,   6, 255, 0xff, 0x00, 0x00, 0x01}, // bmul.w b g  
	{0xa832, &op_bmul,	  2,   6, 255, 0xff, 0x00, 0x00, 0x01}, // bmul.w c g  
	{0xa833, &op_bmul,	  3,   6, 255, 0xff, 0x00, 0x00, 0x01}, // bmul.w d g  
	{0xa834, &op_bmul,	  4,   6, 255, 0xff, 0x00, 0x00, 0x01}, // bmul.w e g  
	{0xa835, &op_bmul,	  5,   6, 255, 0xff, 0x00, 0x00, 0x01}, // bmul.w f g  
	{0xa836, &op_bmul,	  6,   6, 255, 0xff, 0x00, 0x00, 0x01}, // bmul.w g g  
	{0xa837, &op_bmul,	  7,   6, 255, 0xff, 0x00, 0x00, 0x01}, // bmul.w h g  
	{0xa838, &op_bmul,	  0,   7, 255, 0xff, 0x00, 0x00, 0x01}, // bmul.w a h  
	{0xa839, &op_bmul,	  1,   7, 255, 0xff, 0x00, 0x00, 0x01}, // bmul.w b h  
	{0xa83a, &op_bmul,	  2,   7, 255, 0xff, 0x00, 0x00, 0x01}, // bmul.w c h  
	{0xa83b, &op_bmul,	  3,   7, 255, 0xff, 0x00, 0x00, 0x01}, // bmul.w d h  
	{0xa83c, &op_bmul,	  4,   7, 255, 0xff, 0x00, 0x00, 0x01}, // bmul.w e h  
	{0xa83d, &op_bmul,	  5,   7, 255, 0xff, 0x00, 0x00, 0x01}, // bmul.w f h  
	{0xa83e, &op_bmul,	  6,   7, 255, 0xff, 0x00, 0x00, 0x01}, // bmul.w g h  
	{0xa83f, &op_bmul,	  7,   7, 255, 0xff, 0x00, 0x00, 0x01}, // bmul.w h h  
	{0xa840, &op_bmul,	  0,   0, 255, 0xff, 0x00, 0x00, 0x02}, // bmul.d a a  
	{0xa841, &op_bmul,	  1,   0, 255, 0xff, 0x00, 0x00, 0x02}, // bmul.d b a  
	{0xa842, &op_bmul,	  2,   0, 255, 0xff, 0x00, 0x00, 0x02}, // bmul.d c a  
	{0xa843, &op_bmul,	  3,   0, 255, 0xff, 0x00, 0x00, 0x02}, // bmul.d d a  
	{0xa844, &op_bmul,	  4,   0, 255, 0xff, 0x00, 0x00, 0x02}, // bmul.d e a  
	{0xa845, &op_bmul,	  5,   0, 255, 0xff, 0x00, 0x00, 0x02}, // bmul.d f a  
	{0xa846, &op_bmul,	  6,   0, 255, 0xff, 0x00, 0x00, 0x02}, // bmul.d g a  
	{0xa847, &op_bmul,	  7,   0, 255, 0xff, 0x00, 0x00, 0x02}, // bmul.d h a  
	{0xa848, &op_bmul,	  0,   1, 255, 0xff, 0x00, 0x00, 0x02}, // bmul.d a b  
	{0xa849, &op_bmul,	  1,   1, 255, 0xff, 0x00, 0x00, 0x02}, // bmul.d b b  
	{0xa84a, &op_bmul,	  2,   1, 255, 0xff, 0x00, 0x00, 0x02}, // bmul.d c b  
	{0xa84b, &op_bmul,	  3,   1, 255, 0xff, 0x00, 0x00, 0x02}, // bmul.d d b  
	{0xa84c, &op_bmul,	  4,   1, 255, 0xff, 0x00, 0x00, 0x02}, // bmul.d e b  
	{0xa84d, &op_bmul,	  5,   1, 255, 0xff, 0x00, 0x00, 0x02}, // bmul.d f b  
	{0xa84e, &op_bmul,	  6,   1, 255, 0xff, 0x00, 0x00, 0x02}, // bmul.d g b  
	{0xa84f, &op_bmul,	  7,   1, 255, 0xff, 0x00, 0x00, 0x02}, // bmul.d h b  
	{0xa850, &op_bmul,	  0,   2, 255, 0xff, 0x00, 0x00, 0x02}, // bmul.d a c  
	{0xa851, &op_bmul,	  1,   2, 255, 0xff, 0x00, 0x00, 0x02}, // bmul.d b c  
	{0xa852, &op_bmul,	  2,   2, 255, 0xff, 0x00, 0x00, 0x02}, // bmul.d c c  
	{0xa853, &op_bmul,	  3,   2, 255, 0xff, 0x00, 0x00, 0x02}, // bmul.d d c  
	{0xa854, &op_bmul,	  4,   2, 255, 0xff, 0x00, 0x00, 0x02}, // bmul.d e c  
	{0xa855, &op_bmul,	  5,   2, 255, 0xff, 0x00, 0x00, 0x02}, // bmul.d f c  
	{0xa856, &op_bmul,	  6,   2, 255, 0xff, 0x00, 0x00, 0x02}, // bmul.d g c  
	{0xa857, &op_bmul,	  7,   2, 255, 0xff, 0x00, 0x00, 0x02}, // bmul.d h c  
	{0xa858, &op_bmul,	  0,   3, 255, 0xff, 0x00, 0x00, 0x02}, // bmul.d a d  
	{0xa859, &op_bmul,	  1,   3, 255, 0xff, 0x00, 0x00, 0x02}, // bmul.d b d  
	{0xa85a, &op_bmul,	  2,   3, 255, 0xff, 0x00, 0x00, 0x02}, // bmul.d c d  
	{0xa85b, &op_bmul,	  3,   3, 255, 0xff, 0x00, 0x00, 0x02}, // bmul.d d d  
	{0xa85c, &op_bmul,	  4,   3, 255, 0xff, 0x00, 0x00, 0x02}, // bmul.d e d  
	{0xa85d, &op_bmul,	  5,   3, 255, 0xff, 0x00, 0x00, 0x02}, // bmul.d f d  
	{0xa85e, &op_bmul,	  6,   3, 255, 0xff, 0x00, 0x00, 0x02}, // bmul.d g d  
	{0xa85f, &op_bmul,	  7,   3, 255, 0xff, 0x00, 0x00, 0x02}, // bmul.d h d  
	{0xa860, &op_bmul,	  0,   4, 255, 0xff, 0x00, 0x00, 0x02}, // bmul.d a e  
	{0xa861, &op_bmul,	  1,   4, 255, 0xff, 0x00, 0x00, 0x02}, // bmul.d b e  
	{0xa862, &op_bmul,	  2,   4, 255, 0xff, 0x00, 0x00, 0x02}, // bmul.d c e  
	{0xa863, &op_bmul,	  3,   4, 255, 0xff, 0x00, 0x00, 0x02}, // bmul.d d e  
	{0xa864, &op_bmul,	  4,   4, 255, 0xff, 0x00, 0x00, 0x02}, // bmul.d e e  
	{0xa865, &op_bmul,	  5,   4, 255, 0xff, 0x00, 0x00, 0x02}, // bmul.d f e  
	{0xa866, &op_bmul,	  6,   4, 255, 0xff, 0x00, 0x00, 0x02}, // bmul.d g e  
	{0xa867, &op_bmul,	  7,   4, 255, 0xff, 0x00, 0x00, 0x02}, // bmul.d h e  
	{0xa868, &op_bmul,	  0,   5, 255, 0xff, 0x00, 0x00, 0x02}, // bmul.d a f  
	{0xa869, &op_bmul,	  1,   5, 255, 0xff, 0x00, 0x00, 0x02}, // bmul.d b f  
	{0xa86a, &op_bmul,	  2,   5, 255, 0xff, 0x00, 0x00, 0x02}, // bmul.d c f  
	{0xa86b, &op_bmul,	  3,   5, 255, 0xff, 0x00, 0x00, 0x02}, // bmul.d d f  
	{0xa86c, &op_bmul,	  4,   5, 255, 0xff, 0x00, 0x00, 0x02}, // bmul.d e f  
	{0xa86d, &op_bmul,	  5,   5, 255, 0xff, 0x00, 0x00, 0x02}, // bmul.d f f  
	{0xa86e, &op_bmul,	  6,   5, 255, 0xff, 0x00, 0x00, 0x02}, // bmul.d g f  
	{0xa86f, &op_bmul,	  7,   5, 255, 0xff, 0x00, 0x00, 0x02}, // bmul.d h f  
	{0xa870, &op_bmul,	  0,   6, 255, 0xff, 0x00, 0x00, 0x02}, // bmul.d a g  
	{0xa871, &op_bmul,	  1,   6, 255, 0xff, 0x00, 0x00, 0x02}, // bmul.d b g  
	{0xa872, &op_bmul,	  2,   6, 255, 0xff, 0x00, 0x00, 0x02}, // bmul.d c g  
	{0xa873, &op_bmul,	  3,   6, 255, 0xff, 0x00, 0x00, 0x02}, // bmul.d d g  
	{0xa874, &op_bmul,	  4,   6, 255, 0xff, 0x00, 0x00, 0x02}, // bmul.d e g  
	{0xa875, &op_bmul,	  5,   6, 255, 0xff, 0x00, 0x00, 0x02}, // bmul.d f g  
	{0xa876, &op_bmul,	  6,   6, 255, 0xff, 0x00, 0x00, 0x02}, // bmul.d g g  
	{0xa877, &op_bmul,	  7,   6, 255, 0xff, 0x00, 0x00, 0x02}, // bmul.d h g  
	{0xa878, &op_bmul,	  0,   7, 255, 0xff, 0x00, 0x00, 0x02}, // bmul.d a h  
	{0xa879, &op_bmul,	  1,   7, 255, 0xff, 0x00, 0x00, 0x02}, // bmul.d b h  
	{0xa87a, &op_bmul,	  2,   7, 255, 0xff, 0x00, 0x00, 0x02}, // bmul.d c h  
	{0xa87b, &op_bmul,	  3,   7, 255, 0xff, 0x00, 0x00, 0x02}, // bmul.d d h  
	{0xa87c, &op_bmul,	  4,   7, 255, 0xff, 0x00, 0x00, 0x02}, // bmul.d e h  
	{0xa87d, &op_bmul,	  5,   7, 255, 0xff, 0x00, 0x00, 0x02}, // bmul.d f h  
	{0xa87e, &op_bmul,	  6,   7, 255, 0xff, 0x00, 0x00, 0x02}, // bmul.d g h  
	{0xa87f, &op_bmul,	  7,   7, 255, 0xff, 0x00, 0x00, 0x02}, // bmul.d h h  
	{0xa880, &op_bmul,	  0,   0, 255, 0xff, 0x00, 0x00, 0x04}, // bmul a a  
	{0xa881, &op_bmul,	  1,   0, 255, 0xff, 0x00, 0x00, 0x04}, // bmul b a  
	{0xa882, &op_bmul,	  2,   0, 255, 0xff, 0x00, 0x00, 0x04}, // bmul c a  
	{0xa883, &op_bmul,	  3,   0, 255, 0xff, 0x00, 0x00, 0x04}, // bmul d a  
	{0xa884, &op_bmul,	  4,   0, 255, 0xff, 0x00, 0x00, 0x04}, // bmul e a  
	{0xa885, &op_bmul,	  5,   0, 255, 0xff, 0x00, 0x00, 0x04}, // bmul f a  
	{0xa886, &op_bmul,	  6,   0, 255, 0xff, 0x00, 0x00, 0x04}, // bmul g a  
	{0xa887, &op_bmul,	  7,   0, 255, 0xff, 0x00, 0x00, 0x04}, // bmul h a  
	{0xa888, &op_bmul,	  0,   1, 255, 0xff, 0x00, 0x00, 0x04}, // bmul a b  
	{0xa889, &op_bmul,	  1,   1, 255, 0xff, 0x00, 0x00, 0x04}, // bmul b b  
	{0xa88a, &op_bmul,	  2,   1, 255, 0xff, 0x00, 0x00, 0x04}, // bmul c b  
	{0xa88b, &op_bmul,	  3,   1, 255, 0xff, 0x00, 0x00, 0x04}, // bmul d b  
	{0xa88c, &op_bmul,	  4,   1, 255, 0xff, 0x00, 0x00, 0x04}, // bmul e b  
	{0xa88d, &op_bmul,	  5,   1, 255, 0xff, 0x00, 0x00, 0x04}, // bmul f b  
	{0xa88e, &op_bmul,	  6,   1, 255, 0xff, 0x00, 0x00, 0x04}, // bmul g b  
	{0xa88f, &op_bmul,	  7,   1, 255, 0xff, 0x00, 0x00, 0x04}, // bmul h b  
	{0xa890, &op_bmul,	  0,   2, 255, 0xff, 0x00, 0x00, 0x04}, // bmul a c  
	{0xa891, &op_bmul,	  1,   2, 255, 0xff, 0x00, 0x00, 0x04}, // bmul b c  
	{0xa892, &op_bmul,	  2,   2, 255, 0xff, 0x00, 0x00, 0x04}, // bmul c c  
	{0xa893, &op_bmul,	  3,   2, 255, 0xff, 0x00, 0x00, 0x04}, // bmul d c  
	{0xa894, &op_bmul,	  4,   2, 255, 0xff, 0x00, 0x00, 0x04}, // bmul e c  
	{0xa895, &op_bmul,	  5,   2, 255, 0xff, 0x00, 0x00, 0x04}, // bmul f c  
	{0xa896, &op_bmul,	  6,   2, 255, 0xff, 0x00, 0x00, 0x04}, // bmul g c  
	{0xa897, &op_bmul,	  7,   2, 255, 0xff, 0x00, 0x00, 0x04}, // bmul h c  
	{0xa898, &op_bmul,	  0,   3, 255, 0xff, 0x00, 0x00, 0x04}, // bmul a d  
	{0xa899, &op_bmul,	  1,   3, 255, 0xff, 0x00, 0x00, 0x04}, // bmul b d  
	{0xa89a, &op_bmul,	  2,   3, 255, 0xff, 0x00, 0x00, 0x04}, // bmul c d  
	{0xa89b, &op_bmul,	  3,   3, 255, 0xff, 0x00, 0x00, 0x04}, // bmul d d  
	{0xa89c, &op_bmul,	  4,   3, 255, 0xff, 0x00, 0x00, 0x04}, // bmul e d  
	{0xa89d, &op_bmul,	  5,   3, 255, 0xff, 0x00, 0x00, 0x04}, // bmul f d  
	{0xa89e, &op_bmul,	  6,   3, 255, 0xff, 0x00, 0x00, 0x04}, // bmul g d  
	{0xa89f, &op_bmul,	  7,   3, 255, 0xff, 0x00, 0x00, 0x04}, // bmul h d  
	{0xa8a0, &op_bmul,	  0,   4, 255, 0xff, 0x00, 0x00, 0x04}, // bmul a e  
	{0xa8a1, &op_bmul,	  1,   4, 255, 0xff, 0x00, 0x00, 0x04}, // bmul b e  
	{0xa8a2, &op_bmul,	  2,   4, 255, 0xff, 0x00, 0x00, 0x04}, // bmul c e  
	{0xa8a3, &op_bmul,	  3,   4, 255, 0xff, 0x00, 0x00, 0x04}, // bmul d e  
	{0xa8a4, &op_bmul,	  4,   4, 255, 0xff, 0x00, 0x00, 0x04}, // bmul e e  
	{0xa8a5, &op_bmul,	  5,   4, 255, 0xff, 0x00, 0x00, 0x04}, // bmul f e  
	{0xa8a6, &op_bmul,	  6,   4, 255, 0xff, 0x00, 0x00, 0x04}, // bmul g e  
	{0xa8a7, &op_bmul,	  7,   4, 255, 0xff, 0x00, 0x00, 0x04}, // bmul h e  
	{0xa8a8, &op_bmul,	  0,   5, 255, 0xff, 0x00, 0x00, 0x04}, // bmul a f  
	{0xa8a9, &op_bmul,	  1,   5, 255, 0xff, 0x00, 0x00, 0x04}, // bmul b f  
	{0xa8aa, &op_bmul,	  2,   5, 255, 0xff, 0x00, 0x00, 0x04}, // bmul c f  
	{0xa8ab, &op_bmul,	  3,   5, 255, 0xff, 0x00, 0x00, 0x04}, // bmul d f  
	{0xa8ac, &op_bmul,	  4,   5, 255, 0xff, 0x00, 0x00, 0x04}, // bmul e f  
	{0xa8ad, &op_bmul,	  5,   5, 255, 0xff, 0x00, 0x00, 0x04}, // bmul f f  
	{0xa8ae, &op_bmul,	  6,   5, 255, 0xff, 0x00, 0x00, 0x04}, // bmul g f  
	{0xa8af, &op_bmul,	  7,   5, 255, 0xff, 0x00, 0x00, 0x04}, // bmul h f  
	{0xa8b0, &op_bmul,	  0,   6, 255, 0xff, 0x00, 0x00, 0x04}, // bmul a g  
	{0xa8b1, &op_bmul,	  1,   6, 255, 0xff, 0x00, 0x00, 0x04}, // bmul b g  
	{0xa8b2, &op_bmul,	  2,   6, 255, 0xff, 0x00, 0x00, 0x04}, // bmul c g  
	{0xa8b3, &op_bmul,	  3,   6, 255, 0xff, 0x00, 0x00, 0x04}, // bmul d g  
	{0xa8b4, &op_bmul,	  4,   6, 255, 0xff, 0x00, 0x00, 0x04}, // bmul e g  
	{0xa8b5, &op_bmul,	  5,   6, 255, 0xff, 0x00, 0x00, 0x04}, // bmul f g  
	{0xa8b6, &op_bmul,	  6,   6, 255, 0xff, 0x00, 0x00, 0x04}, // bmul g g  
	{0xa8b7, &op_bmul,	  7,   6, 255, 0xff, 0x00, 0x00, 0x04}, // bmul h g  
	{0xa8b8, &op_bmul,	  0,   7, 255, 0xff, 0x00, 0x00, 0x04}, // bmul a h  
	{0xa8b9, &op_bmul,	  1,   7, 255, 0xff, 0x00, 0x00, 0x04}, // bmul b h  
	{0xa8ba, &op_bmul,	  2,   7, 255, 0xff, 0x00, 0x00, 0x04}, // bmul c h  
	{0xa8bb, &op_bmul,	  3,   7, 255, 0xff, 0x00, 0x00, 0x04}, // bmul d h  
	{0xa8bc, &op_bmul,	  4,   7, 255, 0xff, 0x00, 0x00, 0x04}, // bmul e h  
	{0xa8bd, &op_bmul,	  5,   7, 255, 0xff, 0x00, 0x00, 0x04}, // bmul f h  
	{0xa8be, &op_bmul,	  6,   7, 255, 0xff, 0x00, 0x00, 0x04}, // bmul g h  
	{0xa8bf, &op_bmul,	  7,   7, 255, 0xff, 0x00, 0x00, 0x04}, // bmul h h  
	{0xa900, &op_bmul,	  0,   0, 255, 0xff, 0x01, 0x00, 0x01}, // bmul.wr a a  
	{0xa901, &op_bmul,	  1,   0, 255, 0xff, 0x01, 0x00, 0x01}, // bmul.wr b a  
	{0xa902, &op_bmul,	  2,   0, 255, 0xff, 0x01, 0x00, 0x01}, // bmul.wr c a  
	{0xa903, &op_bmul,	  3,   0, 255, 0xff, 0x01, 0x00, 0x01}, // bmul.wr d a  
	{0xa904, &op_bmul,	  4,   0, 255, 0xff, 0x01, 0x00, 0x01}, // bmul.wr e a  
	{0xa905, &op_bmul,	  5,   0, 255, 0xff, 0x01, 0x00, 0x01}, // bmul.wr f a  
	{0xa906, &op_bmul,	  6,   0, 255, 0xff, 0x01, 0x00, 0x01}, // bmul.wr g a  
	{0xa907, &op_bmul,	  7,   0, 255, 0xff, 0x01, 0x00, 0x01}, // bmul.wr h a  
	{0xa908, &op_bmul,	  0,   1, 255, 0xff, 0x01, 0x00, 0x01}, // bmul.wr a b  
	{0xa909, &op_bmul,	  1,   1, 255, 0xff, 0x01, 0x00, 0x01}, // bmul.wr b b  
	{0xa90a, &op_bmul,	  2,   1, 255, 0xff, 0x01, 0x00, 0x01}, // bmul.wr c b  
	{0xa90b, &op_bmul,	  3,   1, 255, 0xff, 0x01, 0x00, 0x01}, // bmul.wr d b  
	{0xa90c, &op_bmul,	  4,   1, 255, 0xff, 0x01, 0x00, 0x01}, // bmul.wr e b  
	{0xa90d, &op_bmul,	  5,   1, 255, 0xff, 0x01, 0x00, 0x01}, // bmul.wr f b  
	{0xa90e, &op_bmul,	  6,   1, 255, 0xff, 0x01, 0x00, 0x01}, // bmul.wr g b  
	{0xa90f, &op_bmul,	  7,   1, 255, 0xff, 0x01, 0x00, 0x01}, // bmul.wr h b  
	{0xa910, &op_bmul,	  0,   2, 255, 0xff, 0x01, 0x00, 0x01}, // bmul.wr a c  
	{0xa911, &op_bmul,	  1,   2, 255, 0xff, 0x01, 0x00, 0x01}, // bmul.wr b c  
	{0xa912, &op_bmul,	  2,   2, 255, 0xff, 0x01, 0x00, 0x01}, // bmul.wr c c  
	{0xa913, &op_bmul,	  3,   2, 255, 0xff, 0x01, 0x00, 0x01}, // bmul.wr d c  
	{0xa914, &op_bmul,	  4,   2, 255, 0xff, 0x01, 0x00, 0x01}, // bmul.wr e c  
	{0xa915, &op_bmul,	  5,   2, 255, 0xff, 0x01, 0x00, 0x01}, // bmul.wr f c  
	{0xa916, &op_bmul,	  6,   2, 255, 0xff, 0x01, 0x00, 0x01}, // bmul.wr g c  
	{0xa917, &op_bmul,	  7,   2, 255, 0xff, 0x01, 0x00, 0x01}, // bmul.wr h c  
	{0xa918, &op_bmul,	  0,   3, 255, 0xff, 0x01, 0x00, 0x01}, // bmul.wr a d  
	{0xa919, &op_bmul,	  1,   3, 255, 0xff, 0x01, 0x00, 0x01}, // bmul.wr b d  
	{0xa91a, &op_bmul,	  2,   3, 255, 0xff, 0x01, 0x00, 0x01}, // bmul.wr c d  
	{0xa91b, &op_bmul,	  3,   3, 255, 0xff, 0x01, 0x00, 0x01}, // bmul.wr d d  
	{0xa91c, &op_bmul,	  4,   3, 255, 0xff, 0x01, 0x00, 0x01}, // bmul.wr e d  
	{0xa91d, &op_bmul,	  5,   3, 255, 0xff, 0x01, 0x00, 0x01}, // bmul.wr f d  
	{0xa91e, &op_bmul,	  6,   3, 255, 0xff, 0x01, 0x00, 0x01}, // bmul.wr g d  
	{0xa91f, &op_bmul,	  7,   3, 255, 0xff, 0x01, 0x00, 0x01}, // bmul.wr h d  
	{0xa920, &op_bmul,	  0,   4, 255, 0xff, 0x01, 0x00, 0x01}, // bmul.wr a e  
	{0xa921, &op_bmul,	  1,   4, 255, 0xff, 0x01, 0x00, 0x01}, // bmul.wr b e  
	{0xa922, &op_bmul,	  2,   4, 255, 0xff, 0x01, 0x00, 0x01}, // bmul.wr c e  
	{0xa923, &op_bmul,	  3,   4, 255, 0xff, 0x01, 0x00, 0x01}, // bmul.wr d e  
	{0xa924, &op_bmul,	  4,   4, 255, 0xff, 0x01, 0x00, 0x01}, // bmul.wr e e  
	{0xa925, &op_bmul,	  5,   4, 255, 0xff, 0x01, 0x00, 0x01}, // bmul.wr f e  
	{0xa926, &op_bmul,	  6,   4, 255, 0xff, 0x01, 0x00, 0x01}, // bmul.wr g e  
	{0xa927, &op_bmul,	  7,   4, 255, 0xff, 0x01, 0x00, 0x01}, // bmul.wr h e  
	{0xa928, &op_bmul,	  0,   5, 255, 0xff, 0x01, 0x00, 0x01}, // bmul.wr a f  
	{0xa929, &op_bmul,	  1,   5, 255, 0xff, 0x01, 0x00, 0x01}, // bmul.wr b f  
	{0xa92a, &op_bmul,	  2,   5, 255, 0xff, 0x01, 0x00, 0x01}, // bmul.wr c f  
	{0xa92b, &op_bmul,	  3,   5, 255, 0xff, 0x01, 0x00, 0x01}, // bmul.wr d f  
	{0xa92c, &op_bmul,	  4,   5, 255, 0xff, 0x01, 0x00, 0x01}, // bmul.wr e f  
	{0xa92d, &op_bmul,	  5,   5, 255, 0xff, 0x01, 0x00, 0x01}, // bmul.wr f f  
	{0xa92e, &op_bmul,	  6,   5, 255, 0xff, 0x01, 0x00, 0x01}, // bmul.wr g f  
	{0xa92f, &op_bmul,	  7,   5, 255, 0xff, 0x01, 0x00, 0x01}, // bmul.wr h f  
	{0xa930, &op_bmul,	  0,   6, 255, 0xff, 0x01, 0x00, 0x01}, // bmul.wr a g  
	{0xa931, &op_bmul,	  1,   6, 255, 0xff, 0x01, 0x00, 0x01}, // bmul.wr b g  
	{0xa932, &op_bmul,	  2,   6, 255, 0xff, 0x01, 0x00, 0x01}, // bmul.wr c g  
	{0xa933, &op_bmul,	  3,   6, 255, 0xff, 0x01, 0x00, 0x01}, // bmul.wr d g  
	{0xa934, &op_bmul,	  4,   6, 255, 0xff, 0x01, 0x00, 0x01}, // bmul.wr e g  
	{0xa935, &op_bmul,	  5,   6, 255, 0xff, 0x01, 0x00, 0x01}, // bmul.wr f g  
	{0xa936, &op_bmul,	  6,   6, 255, 0xff, 0x01, 0x00, 0x01}, // bmul.wr g g  
	{0xa937, &op_bmul,	  7,   6, 255, 0xff, 0x01, 0x00, 0x01}, // bmul.wr h g  
	{0xa938, &op_bmul,	  0,   7, 255, 0xff, 0x01, 0x00, 0x01}, // bmul.wr a h  
	{0xa939, &op_bmul,	  1,   7, 255, 0xff, 0x01, 0x00, 0x01}, // bmul.wr b h  
	{0xa93a, &op_bmul,	  2,   7, 255, 0xff, 0x01, 0x00, 0x01}, // bmul.wr c h  
	{0xa93b, &op_bmul,	  3,   7, 255, 0xff, 0x01, 0x00, 0x01}, // bmul.wr d h  
	{0xa93c, &op_bmul,	  4,   7, 255, 0xff, 0x01, 0x00, 0x01}, // bmul.wr e h  
	{0xa93d, &op_bmul,	  5,   7, 255, 0xff, 0x01, 0x00, 0x01}, // bmul.wr f h  
	{0xa93e, &op_bmul,	  6,   7, 255, 0xff, 0x01, 0x00, 0x01}, // bmul.wr g h  
	{0xa93f, &op_bmul,	  7,   7, 255, 0xff, 0x01, 0x00, 0x01}, // bmul.wr h h  
	{0xa940, &op_bmul,	  0,   0, 255, 0xff, 0x01, 0x00, 0x02}, // bmul.dr a a  
	{0xa941, &op_bmul,	  1,   0, 255, 0xff, 0x01, 0x00, 0x02}, // bmul.dr b a  
	{0xa942, &op_bmul,	  2,   0, 255, 0xff, 0x01, 0x00, 0x02}, // bmul.dr c a  
	{0xa943, &op_bmul,	  3,   0, 255, 0xff, 0x01, 0x00, 0x02}, // bmul.dr d a  
	{0xa944, &op_bmul,	  4,   0, 255, 0xff, 0x01, 0x00, 0x02}, // bmul.dr e a  
	{0xa945, &op_bmul,	  5,   0, 255, 0xff, 0x01, 0x00, 0x02}, // bmul.dr f a  
	{0xa946, &op_bmul,	  6,   0, 255, 0xff, 0x01, 0x00, 0x02}, // bmul.dr g a  
	{0xa947, &op_bmul,	  7,   0, 255, 0xff, 0x01, 0x00, 0x02}, // bmul.dr h a  
	{0xa948, &op_bmul,	  0,   1, 255, 0xff, 0x01, 0x00, 0x02}, // bmul.dr a b  
	{0xa949, &op_bmul,	  1,   1, 255, 0xff, 0x01, 0x00, 0x02}, // bmul.dr b b  
	{0xa94a, &op_bmul,	  2,   1, 255, 0xff, 0x01, 0x00, 0x02}, // bmul.dr c b  
	{0xa94b, &op_bmul,	  3,   1, 255, 0xff, 0x01, 0x00, 0x02}, // bmul.dr d b  
	{0xa94c, &op_bmul,	  4,   1, 255, 0xff, 0x01, 0x00, 0x02}, // bmul.dr e b  
	{0xa94d, &op_bmul,	  5,   1, 255, 0xff, 0x01, 0x00, 0x02}, // bmul.dr f b  
	{0xa94e, &op_bmul,	  6,   1, 255, 0xff, 0x01, 0x00, 0x02}, // bmul.dr g b  
	{0xa94f, &op_bmul,	  7,   1, 255, 0xff, 0x01, 0x00, 0x02}, // bmul.dr h b  
	{0xa950, &op_bmul,	  0,   2, 255, 0xff, 0x01, 0x00, 0x02}, // bmul.dr a c  
	{0xa951, &op_bmul,	  1,   2, 255, 0xff, 0x01, 0x00, 0x02}, // bmul.dr b c  
	{0xa952, &op_bmul,	  2,   2, 255, 0xff, 0x01, 0x00, 0x02}, // bmul.dr c c  
	{0xa953, &op_bmul,	  3,   2, 255, 0xff, 0x01, 0x00, 0x02}, // bmul.dr d c  
	{0xa954, &op_bmul,	  4,   2, 255, 0xff, 0x01, 0x00, 0x02}, // bmul.dr e c  
	{0xa955, &op_bmul,	  5,   2, 255, 0xff, 0x01, 0x00, 0x02}, // bmul.dr f c  
	{0xa956, &op_bmul,	  6,   2, 255, 0xff, 0x01, 0x00, 0x02}, // bmul.dr g c  
	{0xa957, &op_bmul,	  7,   2, 255, 0xff, 0x01, 0x00, 0x02}, // bmul.dr h c  
	{0xa958, &op_bmul,	  0,   3, 255, 0xff, 0x01, 0x00, 0x02}, // bmul.dr a d  
	{0xa959, &op_bmul,	  1,   3, 255, 0xff, 0x01, 0x00, 0x02}, // bmul.dr b d  
	{0xa95a, &op_bmul,	  2,   3, 255, 0xff, 0x01, 0x00, 0x02}, // bmul.dr c d  
	{0xa95b, &op_bmul,	  3,   3, 255, 0xff, 0x01, 0x00, 0x02}, // bmul.dr d d  
	{0xa95c, &op_bmul,	  4,   3, 255, 0xff, 0x01, 0x00, 0x02}, // bmul.dr e d  
	{0xa95d, &op_bmul,	  5,   3, 255, 0xff, 0x01, 0x00, 0x02}, // bmul.dr f d  
	{0xa95e, &op_bmul,	  6,   3, 255, 0xff, 0x01, 0x00, 0x02}, // bmul.dr g d  
	{0xa95f, &op_bmul,	  7,   3, 255, 0xff, 0x01, 0x00, 0x02}, // bmul.dr h d  
	{0xa960, &op_bmul,	  0,   4, 255, 0xff, 0x01, 0x00, 0x02}, // bmul.dr a e  
	{0xa961, &op_bmul,	  1,   4, 255, 0xff, 0x01, 0x00, 0x02}, // bmul.dr b e  
	{0xa962, &op_bmul,	  2,   4, 255, 0xff, 0x01, 0x00, 0x02}, // bmul.dr c e  
	{0xa963, &op_bmul,	  3,   4, 255, 0xff, 0x01, 0x00, 0x02}, // bmul.dr d e  
	{0xa964, &op_bmul,	  4,   4, 255, 0xff, 0x01, 0x00, 0x02}, // bmul.dr e e  
	{0xa965, &op_bmul,	  5,   4, 255, 0xff, 0x01, 0x00, 0x02}, // bmul.dr f e  
	{0xa966, &op_bmul,	  6,   4, 255, 0xff, 0x01, 0x00, 0x02}, // bmul.dr g e  
	{0xa967, &op_bmul,	  7,   4, 255, 0xff, 0x01, 0x00, 0x02}, // bmul.dr h e  
	{0xa968, &op_bmul,	  0,   5, 255, 0xff, 0x01, 0x00, 0x02}, // bmul.dr a f  
	{0xa969, &op_bmul,	  1,   5, 255, 0xff, 0x01, 0x00, 0x02}, // bmul.dr b f  
	{0xa96a, &op_bmul,	  2,   5, 255, 0xff, 0x01, 0x00, 0x02}, // bmul.dr c f  
	{0xa96b, &op_bmul,	  3,   5, 255, 0xff, 0x01, 0x00, 0x02}, // bmul.dr d f  
	{0xa96c, &op_bmul,	  4,   5, 255, 0xff, 0x01, 0x00, 0x02}, // bmul.dr e f  
	{0xa96d, &op_bmul,	  5,   5, 255, 0xff, 0x01, 0x00, 0x02}, // bmul.dr f f  
	{0xa96e, &op_bmul,	  6,   5, 255, 0xff, 0x01, 0x00, 0x02}, // bmul.dr g f  
	{0xa96f, &op_bmul,	  7,   5, 255, 0xff, 0x01, 0x00, 0x02}, // bmul.dr h f  
	{0xa970, &op_bmul,	  0,   6, 255, 0xff, 0x01, 0x00, 0x02}, // bmul.dr a g  
	{0xa971, &op_bmul,	  1,   6, 255, 0xff, 0x01, 0x00, 0x02}, // bmul.dr b g  
	{0xa972, &op_bmul,	  2,   6, 255, 0xff, 0x01, 0x00, 0x02}, // bmul.dr c g  
	{0xa973, &op_bmul,	  3,   6, 255, 0xff, 0x01, 0x00, 0x02}, // bmul.dr d g  
	{0xa974, &op_bmul,	  4,   6, 255, 0xff, 0x01, 0x00, 0x02}, // bmul.dr e g  
	{0xa975, &op_bmul,	  5,   6, 255, 0xff, 0x01, 0x00, 0x02}, // bmul.dr f g  
	{0xa976, &op_bmul,	  6,   6, 255, 0xff, 0x01, 0x00, 0x02}, // bmul.dr g g  
	{0xa977, &op_bmul,	  7,   6, 255, 0xff, 0x01, 0x00, 0x02}, // bmul.dr h g  
	{0xa978, &op_bmul,	  0,   7, 255, 0xff, 0x01, 0x00, 0x02}, // bmul.dr a h  
	{0xa979, &op_bmul,	  1,   7, 255, 0xff, 0x01, 0x00, 0x02}, // bmul.dr b h  
	{0xa97a, &op_bmul,	  2,   7, 255, 0xff, 0x01, 0x00, 0x02}, // bmul.dr c h  
	{0xa97b, &op_bmul,	  3,   7, 255, 0xff, 0x01, 0x00, 0x02}, // bmul.dr d h  
	{0xa97c, &op_bmul,	  4,   7, 255, 0xff, 0x01, 0x00, 0x02}, // bmul.dr e h  
	{0xa97d, &op_bmul,	  5,   7, 255, 0xff, 0x01, 0x00, 0x02}, // bmul.dr f h  
	{0xa97e, &op_bmul,	  6,   7, 255, 0xff, 0x01, 0x00, 0x02}, // bmul.dr g h  
	{0xa97f, &op_bmul,	  7,   7, 255, 0xff, 0x01, 0x00, 0x02}, // bmul.dr h h  
	{0xa980, &op_bmul,	  0,   0, 255, 0xff, 0x01, 0x00, 0x04}, // bmul.r a a  
	{0xa981, &op_bmul,	  1,   0, 255, 0xff, 0x01, 0x00, 0x04}, // bmul.r b a  
	{0xa982, &op_bmul,	  2,   0, 255, 0xff, 0x01, 0x00, 0x04}, // bmul.r c a  
	{0xa983, &op_bmul,	  3,   0, 255, 0xff, 0x01, 0x00, 0x04}, // bmul.r d a  
	{0xa984, &op_bmul,	  4,   0, 255, 0xff, 0x01, 0x00, 0x04}, // bmul.r e a  
	{0xa985, &op_bmul,	  5,   0, 255, 0xff, 0x01, 0x00, 0x04}, // bmul.r f a  
	{0xa986, &op_bmul,	  6,   0, 255, 0xff, 0x01, 0x00, 0x04}, // bmul.r g a  
	{0xa987, &op_bmul,	  7,   0, 255, 0xff, 0x01, 0x00, 0x04}, // bmul.r h a  
	{0xa988, &op_bmul,	  0,   1, 255, 0xff, 0x01, 0x00, 0x04}, // bmul.r a b  
	{0xa989, &op_bmul,	  1,   1, 255, 0xff, 0x01, 0x00, 0x04}, // bmul.r b b  
	{0xa98a, &op_bmul,	  2,   1, 255, 0xff, 0x01, 0x00, 0x04}, // bmul.r c b  
	{0xa98b, &op_bmul,	  3,   1, 255, 0xff, 0x01, 0x00, 0x04}, // bmul.r d b  
	{0xa98c, &op_bmul,	  4,   1, 255, 0xff, 0x01, 0x00, 0x04}, // bmul.r e b  
	{0xa98d, &op_bmul,	  5,   1, 255, 0xff, 0x01, 0x00, 0x04}, // bmul.r f b  
	{0xa98e, &op_bmul,	  6,   1, 255, 0xff, 0x01, 0x00, 0x04}, // bmul.r g b  
	{0xa98f, &op_bmul,	  7,   1, 255, 0xff, 0x01, 0x00, 0x04}, // bmul.r h b  
	{0xa990, &op_bmul,	  0,   2, 255, 0xff, 0x01, 0x00, 0x04}, // bmul.r a c  
	{0xa991, &op_bmul,	  1,   2, 255, 0xff, 0x01, 0x00, 0x04}, // bmul.r b c  
	{0xa992, &op_bmul,	  2,   2, 255, 0xff, 0x01, 0x00, 0x04}, // bmul.r c c  
	{0xa993, &op_bmul,	  3,   2, 255, 0xff, 0x01, 0x00, 0x04}, // bmul.r d c  
	{0xa994, &op_bmul,	  4,   2, 255, 0xff, 0x01, 0x00, 0x04}, // bmul.r e c  
	{0xa995, &op_bmul,	  5,   2, 255, 0xff, 0x01, 0x00, 0x04}, // bmul.r f c  
	{0xa996, &op_bmul,	  6,   2, 255, 0xff, 0x01, 0x00, 0x04}, // bmul.r g c  
	{0xa997, &op_bmul,	  7,   2, 255, 0xff, 0x01, 0x00, 0x04}, // bmul.r h c  
	{0xa998, &op_bmul,	  0,   3, 255, 0xff, 0x01, 0x00, 0x04}, // bmul.r a d  
	{0xa999, &op_bmul,	  1,   3, 255, 0xff, 0x01, 0x00, 0x04}, // bmul.r b d  
	{0xa99a, &op_bmul,	  2,   3, 255, 0xff, 0x01, 0x00, 0x04}, // bmul.r c d  
	{0xa99b, &op_bmul,	  3,   3, 255, 0xff, 0x01, 0x00, 0x04}, // bmul.r d d  
	{0xa99c, &op_bmul,	  4,   3, 255, 0xff, 0x01, 0x00, 0x04}, // bmul.r e d  
	{0xa99d, &op_bmul,	  5,   3, 255, 0xff, 0x01, 0x00, 0x04}, // bmul.r f d  
	{0xa99e, &op_bmul,	  6,   3, 255, 0xff, 0x01, 0x00, 0x04}, // bmul.r g d  
	{0xa99f, &op_bmul,	  7,   3, 255, 0xff, 0x01, 0x00, 0x04}, // bmul.r h d  
	{0xa9a0, &op_bmul,	  0,   4, 255, 0xff, 0x01, 0x00, 0x04}, // bmul.r a e  
	{0xa9a1, &op_bmul,	  1,   4, 255, 0xff, 0x01, 0x00, 0x04}, // bmul.r b e  
	{0xa9a2, &op_bmul,	  2,   4, 255, 0xff, 0x01, 0x00, 0x04}, // bmul.r c e  
	{0xa9a3, &op_bmul,	  3,   4, 255, 0xff, 0x01, 0x00, 0x04}, // bmul.r d e  
	{0xa9a4, &op_bmul,	  4,   4, 255, 0xff, 0x01, 0x00, 0x04}, // bmul.r e e  
	{0xa9a5, &op_bmul,	  5,   4, 255, 0xff, 0x01, 0x00, 0x04}, // bmul.r f e  
	{0xa9a6, &op_bmul,	  6,   4, 255, 0xff, 0x01, 0x00, 0x04}, // bmul.r g e  
	{0xa9a7, &op_bmul,	  7,   4, 255, 0xff, 0x01, 0x00, 0x04}, // bmul.r h e  
	{0xa9a8, &op_bmul,	  0,   5, 255, 0xff, 0x01, 0x00, 0x04}, // bmul.r a f  
	{0xa9a9, &op_bmul,	  1,   5, 255, 0xff, 0x01, 0x00, 0x04}, // bmul.r b f  
	{0xa9aa, &op_bmul,	  2,   5, 255, 0xff, 0x01, 0x00, 0x04}, // bmul.r c f  
	{0xa9ab, &op_bmul,	  3,   5, 255, 0xff, 0x01, 0x00, 0x04}, // bmul.r d f  
	{0xa9ac, &op_bmul,	  4,   5, 255, 0xff, 0x01, 0x00, 0x04}, // bmul.r e f  
	{0xa9ad, &op_bmul,	  5,   5, 255, 0xff, 0x01, 0x00, 0x04}, // bmul.r f f  
	{0xa9ae, &op_bmul,	  6,   5, 255, 0xff, 0x01, 0x00, 0x04}, // bmul.r g f  
	{0xa9af, &op_bmul,	  7,   5, 255, 0xff, 0x01, 0x00, 0x04}, // bmul.r h f  
	{0xa9b0, &op_bmul,	  0,   6, 255, 0xff, 0x01, 0x00, 0x04}, // bmul.r a g  
	{0xa9b1, &op_bmul,	  1,   6, 255, 0xff, 0x01, 0x00, 0x04}, // bmul.r b g  
	{0xa9b2, &op_bmul,	  2,   6, 255, 0xff, 0x01, 0x00, 0x04}, // bmul.r c g  
	{0xa9b3, &op_bmul,	  3,   6, 255, 0xff, 0x01, 0x00, 0x04}, // bmul.r d g  
	{0xa9b4, &op_bmul,	  4,   6, 255, 0xff, 0x01, 0x00, 0x04}, // bmul.r e g  
	{0xa9b5, &op_bmul,	  5,   6, 255, 0xff, 0x01, 0x00, 0x04}, // bmul.r f g  
	{0xa9b6, &op_bmul,	  6,   6, 255, 0xff, 0x01, 0x00, 0x04}, // bmul.r g g  
	{0xa9b7, &op_bmul,	  7,   6, 255, 0xff, 0x01, 0x00, 0x04}, // bmul.r h g  
	{0xa9b8, &op_bmul,	  0,   7, 255, 0xff, 0x01, 0x00, 0x04}, // bmul.r a h  
	{0xa9b9, &op_bmul,	  1,   7, 255, 0xff, 0x01, 0x00, 0x04}, // bmul.r b h  
	{0xa9ba, &op_bmul,	  2,   7, 255, 0xff, 0x01, 0x00, 0x04}, // bmul.r c h  
	{0xa9bb, &op_bmul,	  3,   7, 255, 0xff, 0x01, 0x00, 0x04}, // bmul.r d h  
	{0xa9bc, &op_bmul,	  4,   7, 255, 0xff, 0x01, 0x00, 0x04}, // bmul.r e h  
	{0xa9bd, &op_bmul,	  5,   7, 255, 0xff, 0x01, 0x00, 0x04}, // bmul.r f h  
	{0xa9be, &op_bmul,	  6,   7, 255, 0xff, 0x01, 0x00, 0x04}, // bmul.r g h  
	{0xa9bf, &op_bmul,	  7,   7, 255, 0xff, 0x01, 0x00, 0x04}, // bmul.r h h  
	{0xa8c8, &op_bmul,	  0,   8, 255, 0xff, 0x00, 0x01, 0x01}, // bmul.wi a <literal>  
	{0xa8c9, &op_bmul,	  1,   8, 255, 0xff, 0x00, 0x01, 0x01}, // bmul.wi b <literal>  
	{0xa8ca, &op_bmul,	  2,   8, 255, 0xff, 0x00, 0x01, 0x01}, // bmul.wi c <literal>  
	{0xa8cb, &op_bmul,	  3,   8, 255, 0xff, 0x00, 0x01, 0x01}, // bmul.wi d <literal>  
	{0xa8cc, &op_bmul,	  4,   8, 255, 0xff, 0x00, 0x01, 0x01}, // bmul.wi e <literal>  
	{0xa8cd, &op_bmul,	  5,   8, 255, 0xff, 0x00, 0x01, 0x01}, // bmul.wi f <literal>  
	{0xa8ce, &op_bmul,	  6,   8, 255, 0xff, 0x00, 0x01, 0x01}, // bmul.wi g <literal>  
	{0xa8cf, &op_bmul,	  7,   8, 255, 0xff, 0x00, 0x01, 0x01}, // bmul.wi h <literal>  
	{0xa8d0, &op_bmul,	  0,   8, 255, 0xff, 0x00, 0x02, 0x02}, // bmul.di a <literal>  
	{0xa8d1, &op_bmul,	  1,   8, 255, 0xff, 0x00, 0x02, 0x02}, // bmul.di b <literal>  
	{0xa8d2, &op_bmul,	  2,   8, 255, 0xff, 0x00, 0x02, 0x02}, // bmul.di c <literal>  
	{0xa8d3, &op_bmul,	  3,   8, 255, 0xff, 0x00, 0x02, 0x02}, // bmul.di d <literal>  
	{0xa8d4, &op_bmul,	  4,   8, 255, 0xff, 0x00, 0x02, 0x02}, // bmul.di e <literal>  
	{0xa8d5, &op_bmul,	  5,   8, 255, 0xff, 0x00, 0x02, 0x02}, // bmul.di f <literal>  
	{0xa8d6, &op_bmul,	  6,   8, 255, 0xff, 0x00, 0x02, 0x02}, // bmul.di g <literal>  
	{0xa8d7, &op_bmul,	  7,   8, 255, 0xff, 0x00, 0x02, 0x02}, // bmul.di h <literal>  
	{0xa8e0, &op_bmul,	  0,   8, 255, 0xff, 0x00, 0x04, 0x04}, // bmul.i a <literal>  
	{0xa8e1, &op_bmul,	  1,   8, 255, 0xff, 0x00, 0x04, 0x04}, // bmul.i b <literal>  
	{0xa8e2, &op_bmul,	  2,   8, 255, 0xff, 0x00, 0x04, 0x04}, // bmul.i c <literal>  
	{0xa8e3, &op_bmul,	  3,   8, 255, 0xff, 0x00, 0x04, 0x04}, // bmul.i d <literal>  
	{0xa8e4, &op_bmul,	  4,   8, 255, 0xff, 0x00, 0x04, 0x04}, // bmul.i e <literal>  
	{0xa8e5, &op_bmul,	  5,   8, 255, 0xff, 0x00, 0x04, 0x04}, // bmul.i f <literal>  
	{0xa8e6, &op_bmul,	  6,   8, 255, 0xff, 0x00, 0x04, 0x04}, // bmul.i g <literal>  
	{0xa8e7, &op_bmul,	  7,   8, 255, 0xff, 0x00, 0x04, 0x04}, // bmul.i h <literal>  
	{0xa9c8, &op_bmul,	  0,   8, 255, 0xff, 0x01, 0x04, 0x01}, // bmul.wri a <literal>  
	{0xa9c9, &op_bmul,	  1,   8, 255, 0xff, 0x01, 0x04, 0x01}, // bmul.wri b <literal>  
	{0xa9ca, &op_bmul,	  2,   8, 255, 0xff, 0x01, 0x04, 0x01}, // bmul.wri c <literal>  
	{0xa9cb, &op_bmul,	  3,   8, 255, 0xff, 0x01, 0x04, 0x01}, // bmul.wri d <literal>  
	{0xa9cc, &op_bmul,	  4,   8, 255, 0xff, 0x01, 0x04, 0x01}, // bmul.wri e <literal>  
	{0xa9cd, &op_bmul,	  5,   8, 255, 0xff, 0x01, 0x04, 0x01}, // bmul.wri f <literal>  
	{0xa9ce, &op_bmul,	  6,   8, 255, 0xff, 0x01, 0x04, 0x01}, // bmul.wri g <literal>  
	{0xa9cf, &op_bmul,	  7,   8, 255, 0xff, 0x01, 0x04, 0x01}, // bmul.wri h <literal>  
	{0xa9d0, &op_bmul,	  0,   8, 255, 0xff, 0x01, 0x04, 0x02}, // bmul.dri a <literal>  
	{0xa9d1, &op_bmul,	  1,   8, 255, 0xff, 0x01, 0x04, 0x02}, // bmul.dri b <literal>  
	{0xa9d2, &op_bmul,	  2,   8, 255, 0xff, 0x01, 0x04, 0x02}, // bmul.dri c <literal>  
	{0xa9d3, &op_bmul,	  3,   8, 255, 0xff, 0x01, 0x04, 0x02}, // bmul.dri d <literal>  
	{0xa9d4, &op_bmul,	  4,   8, 255, 0xff, 0x01, 0x04, 0x02}, // bmul.dri e <literal>  
	{0xa9d5, &op_bmul,	  5,   8, 255, 0xff, 0x01, 0x04, 0x02}, // bmul.dri f <literal>  
	{0xa9d6, &op_bmul,	  6,   8, 255, 0xff, 0x01, 0x04, 0x02}, // bmul.dri g <literal>  
	{0xa9d7, &op_bmul,	  7,   8, 255, 0xff, 0x01, 0x04, 0x02}, // bmul.dri h <literal>  
	{0xa9e0, &op_bmul,	  0,   8, 255, 0xff, 0x01, 0x04, 0x04}, // bmul.ri a <literal>  
	{0xa9e1, &op_bmul,	  1,   8, 255, 0xff, 0x01, 0x04, 0x04}, // bmul.ri b <literal>  
	{0xa9e2, &op_bmul,	  2,   8, 255, 0xff, 0x01, 0x04, 0x04}, // bmul.ri c <literal>  
	{0xa9e3, &op_bmul,	  3,   8, 255, 0xff, 0x01, 0x04, 0x04}, // bmul.ri d <literal>  
	{0xa9e4, &op_bmul,	  4,   8, 255, 0xff, 0x01, 0x04, 0x04}, // bmul.ri e <literal>  
	{0xa9e5, &op_bmul,	  5,   8, 255, 0xff, 0x01, 0x04, 0x04}, // bmul.ri f <literal>  
	{0xa9e6, &op_bmul,	  6,   8, 255, 0xff, 0x01, 0x04, 0x04}, // bmul.ri g <literal>  
	{0xa9e7, &op_bmul,	  7,   8, 255, 0xff, 0x01, 0x04, 0x04}, // bmul.ri h <literal>  
	{0xac00, &op_bdiv,	  0,   0, 255, 0xff, 0x00, 0x00, 0x01}, // bdiv.w a a  
	{0xac01, &op_bdiv,	  1,   0, 255, 0xff, 0x00, 0x00, 0x01}, // bdiv.w b a  
	{0xac02, &op_bdiv,	  2,   0, 255, 0xff, 0x00, 0x00, 0x01}, // bdiv.w c a  
	{0xac03, &op_bdiv,	  3,   0, 255, 0xff, 0x00, 0x00, 0x01}, // bdiv.w d a  
	{0xac04, &op_bdiv,	  4,   0, 255, 0xff, 0x00, 0x00, 0x01}, // bdiv.w e a  
	{0xac05, &op_bdiv,	  5,   0, 255, 0xff, 0x00, 0x00, 0x01}, // bdiv.w f a  
	{0xac06, &op_bdiv,	  6,   0, 255, 0xff, 0x00, 0x00, 0x01}, // bdiv.w g a  
	{0xac07, &op_bdiv,	  7,   0, 255, 0xff, 0x00, 0x00, 0x01}, // bdiv.w h a  
	{0xac08, &op_bdiv,	  0,   1, 255, 0xff, 0x00, 0x00, 0x01}, // bdiv.w a b  
	{0xac09, &op_bdiv,	  1,   1, 255, 0xff, 0x00, 0x00, 0x01}, // bdiv.w b b  
	{0xac0a, &op_bdiv,	  2,   1, 255, 0xff, 0x00, 0x00, 0x01}, // bdiv.w c b  
	{0xac0b, &op_bdiv,	  3,   1, 255, 0xff, 0x00, 0x00, 0x01}, // bdiv.w d b  
	{0xac0c, &op_bdiv,	  4,   1, 255, 0xff, 0x00, 0x00, 0x01}, // bdiv.w e b  
	{0xac0d, &op_bdiv,	  5,   1, 255, 0xff, 0x00, 0x00, 0x01}, // bdiv.w f b  
	{0xac0e, &op_bdiv,	  6,   1, 255, 0xff, 0x00, 0x00, 0x01}, // bdiv.w g b  
	{0xac0f, &op_bdiv,	  7,   1, 255, 0xff, 0x00, 0x00, 0x01}, // bdiv.w h b  
	{0xac10, &op_bdiv,	  0,   2, 255, 0xff, 0x00, 0x00, 0x01}, // bdiv.w a c  
	{0xac11, &op_bdiv,	  1,   2, 255, 0xff, 0x00, 0x00, 0x01}, // bdiv.w b c  
	{0xac12, &op_bdiv,	  2,   2, 255, 0xff, 0x00, 0x00, 0x01}, // bdiv.w c c  
	{0xac13, &op_bdiv,	  3,   2, 255, 0xff, 0x00, 0x00, 0x01}, // bdiv.w d c  
	{0xac14, &op_bdiv,	  4,   2, 255, 0xff, 0x00, 0x00, 0x01}, // bdiv.w e c  
	{0xac15, &op_bdiv,	  5,   2, 255, 0xff, 0x00, 0x00, 0x01}, // bdiv.w f c  
	{0xac16, &op_bdiv,	  6,   2, 255, 0xff, 0x00, 0x00, 0x01}, // bdiv.w g c  
	{0xac17, &op_bdiv,	  7,   2, 255, 0xff, 0x00, 0x00, 0x01}, // bdiv.w h c  
	{0xac18, &op_bdiv,	  0,   3, 255, 0xff, 0x00, 0x00, 0x01}, // bdiv.w a d  
	{0xac19, &op_bdiv,	  1,   3, 255, 0xff, 0x00, 0x00, 0x01}, // bdiv.w b d  
	{0xac1a, &op_bdiv,	  2,   3, 255, 0xff, 0x00, 0x00, 0x01}, // bdiv.w c d  
	{0xac1b, &op_bdiv,	  3,   3, 255, 0xff, 0x00, 0x00, 0x01}, // bdiv.w d d  
	{0xac1c, &op_bdiv,	  4,   3, 255, 0xff, 0x00, 0x00, 0x01}, // bdiv.w e d  
	{0xac1d, &op_bdiv,	  5,   3, 255, 0xff, 0x00, 0x00, 0x01}, // bdiv.w f d  
	{0xac1e, &op_bdiv,	  6,   3, 255, 0xff, 0x00, 0x00, 0x01}, // bdiv.w g d  
	{0xac1f, &op_bdiv,	  7,   3, 255, 0xff, 0x00, 0x00, 0x01}, // bdiv.w h d  
	{0xac20, &op_bdiv,	  0,   4, 255, 0xff, 0x00, 0x00, 0x01}, // bdiv.w a e  
	{0xac21, &op_bdiv,	  1,   4, 255, 0xff, 0x00, 0x00, 0x01}, // bdiv.w b e  
	{0xac22, &op_bdiv,	  2,   4, 255, 0xff, 0x00, 0x00, 0x01}, // bdiv.w c e  
	{0xac23, &op_bdiv,	  3,   4, 255, 0xff, 0x00, 0x00, 0x01}, // bdiv.w d e  
	{0xac24, &op_bdiv,	  4,   4, 255, 0xff, 0x00, 0x00, 0x01}, // bdiv.w e e  
	{0xac25, &op_bdiv,	  5,   4, 255, 0xff, 0x00, 0x00, 0x01}, // bdiv.w f e  
	{0xac26, &op_bdiv,	  6,   4, 255, 0xff, 0x00, 0x00, 0x01}, // bdiv.w g e  
	{0xac27, &op_bdiv,	  7,   4, 255, 0xff, 0x00, 0x00, 0x01}, // bdiv.w h e  
	{0xac28, &op_bdiv,	  0,   5, 255, 0xff, 0x00, 0x00, 0x01}, // bdiv.w a f  
	{0xac29, &op_bdiv,	  1,   5, 255, 0xff, 0x00, 0x00, 0x01}, // bdiv.w b f  
	{0xac2a, &op_bdiv,	  2,   5, 255, 0xff, 0x00, 0x00, 0x01}, // bdiv.w c f  
	{0xac2b, &op_bdiv,	  3,   5, 255, 0xff, 0x00, 0x00, 0x01}, // bdiv.w d f  
	{0xac2c, &op_bdiv,	  4,   5, 255, 0xff, 0x00, 0x00, 0x01}, // bdiv.w e f  
	{0xac2d, &op_bdiv,	  5,   5, 255, 0xff, 0x00, 0x00, 0x01}, // bdiv.w f f  
	{0xac2e, &op_bdiv,	  6,   5, 255, 0xff, 0x00, 0x00, 0x01}, // bdiv.w g f  
	{0xac2f, &op_bdiv,	  7,   5, 255, 0xff, 0x00, 0x00, 0x01}, // bdiv.w h f  
	{0xac30, &op_bdiv,	  0,   6, 255, 0xff, 0x00, 0x00, 0x01}, // bdiv.w a g  
	{0xac31, &op_bdiv,	  1,   6, 255, 0xff, 0x00, 0x00, 0x01}, // bdiv.w b g  
	{0xac32, &op_bdiv,	  2,   6, 255, 0xff, 0x00, 0x00, 0x01}, // bdiv.w c g  
	{0xac33, &op_bdiv,	  3,   6, 255, 0xff, 0x00, 0x00, 0x01}, // bdiv.w d g  
	{0xac34, &op_bdiv,	  4,   6, 255, 0xff, 0x00, 0x00, 0x01}, // bdiv.w e g  
	{0xac35, &op_bdiv,	  5,   6, 255, 0xff, 0x00, 0x00, 0x01}, // bdiv.w f g  
	{0xac36, &op_bdiv,	  6,   6, 255, 0xff, 0x00, 0x00, 0x01}, // bdiv.w g g  
	{0xac37, &op_bdiv,	  7,   6, 255, 0xff, 0x00, 0x00, 0x01}, // bdiv.w h g  
	{0xac38, &op_bdiv,	  0,   7, 255, 0xff, 0x00, 0x00, 0x01}, // bdiv.w a h  
	{0xac39, &op_bdiv,	  1,   7, 255, 0xff, 0x00, 0x00, 0x01}, // bdiv.w b h  
	{0xac3a, &op_bdiv,	  2,   7, 255, 0xff, 0x00, 0x00, 0x01}, // bdiv.w c h  
	{0xac3b, &op_bdiv,	  3,   7, 255, 0xff, 0x00, 0x00, 0x01}, // bdiv.w d h  
	{0xac3c, &op_bdiv,	  4,   7, 255, 0xff, 0x00, 0x00, 0x01}, // bdiv.w e h  
	{0xac3d, &op_bdiv,	  5,   7, 255, 0xff, 0x00, 0x00, 0x01}, // bdiv.w f h  
	{0xac3e, &op_bdiv,	  6,   7, 255, 0xff, 0x00, 0x00, 0x01}, // bdiv.w g h  
	{0xac3f, &op_bdiv,	  7,   7, 255, 0xff, 0x00, 0x00, 0x01}, // bdiv.w h h  
	{0xac40, &op_bdiv,	  0,   0, 255, 0xff, 0x00, 0x00, 0x02}, // bdiv.d a a  
	{0xac41, &op_bdiv,	  1,   0, 255, 0xff, 0x00, 0x00, 0x02}, // bdiv.d b a  
	{0xac42, &op_bdiv,	  2,   0, 255, 0xff, 0x00, 0x00, 0x02}, // bdiv.d c a  
	{0xac43, &op_bdiv,	  3,   0, 255, 0xff, 0x00, 0x00, 0x02}, // bdiv.d d a  
	{0xac44, &op_bdiv,	  4,   0, 255, 0xff, 0x00, 0x00, 0x02}, // bdiv.d e a  
	{0xac45, &op_bdiv,	  5,   0, 255, 0xff, 0x00, 0x00, 0x02}, // bdiv.d f a  
	{0xac46, &op_bdiv,	  6,   0, 255, 0xff, 0x00, 0x00, 0x02}, // bdiv.d g a  
	{0xac47, &op_bdiv,	  7,   0, 255, 0xff, 0x00, 0x00, 0x02}, // bdiv.d h a  
	{0xac48, &op_bdiv,	  0,   1, 255, 0xff, 0x00, 0x00, 0x02}, // bdiv.d a b  
	{0xac49, &op_bdiv,	  1,   1, 255, 0xff, 0x00, 0x00, 0x02}, // bdiv.d b b  
	{0xac4a, &op_bdiv,	  2,   1, 255, 0xff, 0x00, 0x00, 0x02}, // bdiv.d c b  
	{0xac4b, &op_bdiv,	  3,   1, 255, 0xff, 0x00, 0x00, 0x02}, // bdiv.d d b  
	{0xac4c, &op_bdiv,	  4,   1, 255, 0xff, 0x00, 0x00, 0x02}, // bdiv.d e b  
	{0xac4d, &op_bdiv,	  5,   1, 255, 0xff, 0x00, 0x00, 0x02}, // bdiv.d f b  
	{0xac4e, &op_bdiv,	  6,   1, 255, 0xff, 0x00, 0x00, 0x02}, // bdiv.d g b  
	{0xac4f, &op_bdiv,	  7,   1, 255, 0xff, 0x00, 0x00, 0x02}, // bdiv.d h b  
	{0xac50, &op_bdiv,	  0,   2, 255, 0xff, 0x00, 0x00, 0x02}, // bdiv.d a c  
	{0xac51, &op_bdiv,	  1,   2, 255, 0xff, 0x00, 0x00, 0x02}, // bdiv.d b c  
	{0xac52, &op_bdiv,	  2,   2, 255, 0xff, 0x00, 0x00, 0x02}, // bdiv.d c c  
	{0xac53, &op_bdiv,	  3,   2, 255, 0xff, 0x00, 0x00, 0x02}, // bdiv.d d c  
	{0xac54, &op_bdiv,	  4,   2, 255, 0xff, 0x00, 0x00, 0x02}, // bdiv.d e c  
	{0xac55, &op_bdiv,	  5,   2, 255, 0xff, 0x00, 0x00, 0x02}, // bdiv.d f c  
	{0xac56, &op_bdiv,	  6,   2, 255, 0xff, 0x00, 0x00, 0x02}, // bdiv.d g c  
	{0xac57, &op_bdiv,	  7,   2, 255, 0xff, 0x00, 0x00, 0x02}, // bdiv.d h c  
	{0xac58, &op_bdiv,	  0,   3, 255, 0xff, 0x00, 0x00, 0x02}, // bdiv.d a d  
	{0xac59, &op_bdiv,	  1,   3, 255, 0xff, 0x00, 0x00, 0x02}, // bdiv.d b d  
	{0xac5a, &op_bdiv,	  2,   3, 255, 0xff, 0x00, 0x00, 0x02}, // bdiv.d c d  
	{0xac5b, &op_bdiv,	  3,   3, 255, 0xff, 0x00, 0x00, 0x02}, // bdiv.d d d  
	{0xac5c, &op_bdiv,	  4,   3, 255, 0xff, 0x00, 0x00, 0x02}, // bdiv.d e d  
	{0xac5d, &op_bdiv,	  5,   3, 255, 0xff, 0x00, 0x00, 0x02}, // bdiv.d f d  
	{0xac5e, &op_bdiv,	  6,   3, 255, 0xff, 0x00, 0x00, 0x02}, // bdiv.d g d  
	{0xac5f, &op_bdiv,	  7,   3, 255, 0xff, 0x00, 0x00, 0x02}, // bdiv.d h d  
	{0xac60, &op_bdiv,	  0,   4, 255, 0xff, 0x00, 0x00, 0x02}, // bdiv.d a e  
	{0xac61, &op_bdiv,	  1,   4, 255, 0xff, 0x00, 0x00, 0x02}, // bdiv.d b e  
	{0xac62, &op_bdiv,	  2,   4, 255, 0xff, 0x00, 0x00, 0x02}, // bdiv.d c e  
	{0xac63, &op_bdiv,	  3,   4, 255, 0xff, 0x00, 0x00, 0x02}, // bdiv.d d e  
	{0xac64, &op_bdiv,	  4,   4, 255, 0xff, 0x00, 0x00, 0x02}, // bdiv.d e e  
	{0xac65, &op_bdiv,	  5,   4, 255, 0xff, 0x00, 0x00, 0x02}, // bdiv.d f e  
	{0xac66, &op_bdiv,	  6,   4, 255, 0xff, 0x00, 0x00, 0x02}, // bdiv.d g e  
	{0xac67, &op_bdiv,	  7,   4, 255, 0xff, 0x00, 0x00, 0x02}, // bdiv.d h e  
	{0xac68, &op_bdiv,	  0,   5, 255, 0xff, 0x00, 0x00, 0x02}, // bdiv.d a f  
	{0xac69, &op_bdiv,	  1,   5, 255, 0xff, 0x00, 0x00, 0x02}, // bdiv.d b f  
	{0xac6a, &op_bdiv,	  2,   5, 255, 0xff, 0x00, 0x00, 0x02}, // bdiv.d c f  
	{0xac6b, &op_bdiv,	  3,   5, 255, 0xff, 0x00, 0x00, 0x02}, // bdiv.d d f  
	{0xac6c, &op_bdiv,	  4,   5, 255, 0xff, 0x00, 0x00, 0x02}, // bdiv.d e f  
	{0xac6d, &op_bdiv,	  5,   5, 255, 0xff, 0x00, 0x00, 0x02}, // bdiv.d f f  
	{0xac6e, &op_bdiv,	  6,   5, 255, 0xff, 0x00, 0x00, 0x02}, // bdiv.d g f  
	{0xac6f, &op_bdiv,	  7,   5, 255, 0xff, 0x00, 0x00, 0x02}, // bdiv.d h f  
	{0xac70, &op_bdiv,	  0,   6, 255, 0xff, 0x00, 0x00, 0x02}, // bdiv.d a g  
	{0xac71, &op_bdiv,	  1,   6, 255, 0xff, 0x00, 0x00, 0x02}, // bdiv.d b g  
	{0xac72, &op_bdiv,	  2,   6, 255, 0xff, 0x00, 0x00, 0x02}, // bdiv.d c g  
	{0xac73, &op_bdiv,	  3,   6, 255, 0xff, 0x00, 0x00, 0x02}, // bdiv.d d g  
	{0xac74, &op_bdiv,	  4,   6, 255, 0xff, 0x00, 0x00, 0x02}, // bdiv.d e g  
	{0xac75, &op_bdiv,	  5,   6, 255, 0xff, 0x00, 0x00, 0x02}, // bdiv.d f g  
	{0xac76, &op_bdiv,	  6,   6, 255, 0xff, 0x00, 0x00, 0x02}, // bdiv.d g g  
	{0xac77, &op_bdiv,	  7,   6, 255, 0xff, 0x00, 0x00, 0x02}, // bdiv.d h g  
	{0xac78, &op_bdiv,	  0,   7, 255, 0xff, 0x00, 0x00, 0x02}, // bdiv.d a h  
	{0xac79, &op_bdiv,	  1,   7, 255, 0xff, 0x00, 0x00, 0x02}, // bdiv.d b h  
	{0xac7a, &op_bdiv,	  2,   7, 255, 0xff, 0x00, 0x00, 0x02}, // bdiv.d c h  
	{0xac7b, &op_bdiv,	  3,   7, 255, 0xff, 0x00, 0x00, 0x02}, // bdiv.d d h  
	{0xac7c, &op_bdiv,	  4,   7, 255, 0xff, 0x00, 0x00, 0x02}, // bdiv.d e h  
	{0xac7d, &op_bdiv,	  5,   7, 255, 0xff, 0x00, 0x00, 0x02}, // bdiv.d f h  
	{0xac7e, &op_bdiv,	  6,   7, 255, 0xff, 0x00, 0x00, 0x02}, // bdiv.d g h  
	{0xac7f, &op_bdiv,	  7,   7, 255, 0xff, 0x00, 0x00, 0x02}, // bdiv.d h h  
	{0xac80, &op_bdiv,	  0,   0, 255, 0xff, 0x00, 0x00, 0x04}, // bdiv a a  
	{0xac81, &op_bdiv,	  1,   0, 255, 0xff, 0x00, 0x00, 0x04}, // bdiv b a  
	{0xac82, &op_bdiv,	  2,   0, 255, 0xff, 0x00, 0x00, 0x04}, // bdiv c a  
	{0xac83, &op_bdiv,	  3,   0, 255, 0xff, 0x00, 0x00, 0x04}, // bdiv d a  
	{0xac84, &op_bdiv,	  4,   0, 255, 0xff, 0x00, 0x00, 0x04}, // bdiv e a  
	{0xac85, &op_bdiv,	  5,   0, 255, 0xff, 0x00, 0x00, 0x04}, // bdiv f a  
	{0xac86, &op_bdiv,	  6,   0, 255, 0xff, 0x00, 0x00, 0x04}, // bdiv g a  
	{0xac87, &op_bdiv,	  7,   0, 255, 0xff, 0x00, 0x00, 0x04}, // bdiv h a  
	{0xac88, &op_bdiv,	  0,   1, 255, 0xff, 0x00, 0x00, 0x04}, // bdiv a b  
	{0xac89, &op_bdiv,	  1,   1, 255, 0xff, 0x00, 0x00, 0x04}, // bdiv b b  
	{0xac8a, &op_bdiv,	  2,   1, 255, 0xff, 0x00, 0x00, 0x04}, // bdiv c b  
	{0xac8b, &op_bdiv,	  3,   1, 255, 0xff, 0x00, 0x00, 0x04}, // bdiv d b  
	{0xac8c, &op_bdiv,	  4,   1, 255, 0xff, 0x00, 0x00, 0x04}, // bdiv e b  
	{0xac8d, &op_bdiv,	  5,   1, 255, 0xff, 0x00, 0x00, 0x04}, // bdiv f b  
	{0xac8e, &op_bdiv,	  6,   1, 255, 0xff, 0x00, 0x00, 0x04}, // bdiv g b  
	{0xac8f, &op_bdiv,	  7,   1, 255, 0xff, 0x00, 0x00, 0x04}, // bdiv h b  
	{0xac90, &op_bdiv,	  0,   2, 255, 0xff, 0x00, 0x00, 0x04}, // bdiv a c  
	{0xac91, &op_bdiv,	  1,   2, 255, 0xff, 0x00, 0x00, 0x04}, // bdiv b c  
	{0xac92, &op_bdiv,	  2,   2, 255, 0xff, 0x00, 0x00, 0x04}, // bdiv c c  
	{0xac93, &op_bdiv,	  3,   2, 255, 0xff, 0x00, 0x00, 0x04}, // bdiv d c  
	{0xac94, &op_bdiv,	  4,   2, 255, 0xff, 0x00, 0x00, 0x04}, // bdiv e c  
	{0xac95, &op_bdiv,	  5,   2, 255, 0xff, 0x00, 0x00, 0x04}, // bdiv f c  
	{0xac96, &op_bdiv,	  6,   2, 255, 0xff, 0x00, 0x00, 0x04}, // bdiv g c  
	{0xac97, &op_bdiv,	  7,   2, 255, 0xff, 0x00, 0x00, 0x04}, // bdiv h c  
	{0xac98, &op_bdiv,	  0,   3, 255, 0xff, 0x00, 0x00, 0x04}, // bdiv a d  
	{0xac99, &op_bdiv,	  1,   3, 255, 0xff, 0x00, 0x00, 0x04}, // bdiv b d  
	{0xac9a, &op_bdiv,	  2,   3, 255, 0xff, 0x00, 0x00, 0x04}, // bdiv c d  
	{0xac9b, &op_bdiv,	  3,   3, 255, 0xff, 0x00, 0x00, 0x04}, // bdiv d d  
	{0xac9c, &op_bdiv,	  4,   3, 255, 0xff, 0x00, 0x00, 0x04}, // bdiv e d  
	{0xac9d, &op_bdiv,	  5,   3, 255, 0xff, 0x00, 0x00, 0x04}, // bdiv f d  
	{0xac9e, &op_bdiv,	  6,   3, 255, 0xff, 0x00, 0x00, 0x04}, // bdiv g d  
	{0xac9f, &op_bdiv,	  7,   3, 255, 0xff, 0x00, 0x00, 0x04}, // bdiv h d  
	{0xaca0, &op_bdiv,	  0,   4, 255, 0xff, 0x00, 0x00, 0x04}, // bdiv a e  
	{0xaca1, &op_bdiv,	  1,   4, 255, 0xff, 0x00, 0x00, 0x04}, // bdiv b e  
	{0xaca2, &op_bdiv,	  2,   4, 255, 0xff, 0x00, 0x00, 0x04}, // bdiv c e  
	{0xaca3, &op_bdiv,	  3,   4, 255, 0xff, 0x00, 0x00, 0x04}, // bdiv d e  
	{0xaca4, &op_bdiv,	  4,   4, 255, 0xff, 0x00, 0x00, 0x04}, // bdiv e e  
	{0xaca5, &op_bdiv,	  5,   4, 255, 0xff, 0x00, 0x00, 0x04}, // bdiv f e  
	{0xaca6, &op_bdiv,	  6,   4, 255, 0xff, 0x00, 0x00, 0x04}, // bdiv g e  
	{0xaca7, &op_bdiv,	  7,   4, 255, 0xff, 0x00, 0x00, 0x04}, // bdiv h e  
	{0xaca8, &op_bdiv,	  0,   5, 255, 0xff, 0x00, 0x00, 0x04}, // bdiv a f  
	{0xaca9, &op_bdiv,	  1,   5, 255, 0xff, 0x00, 0x00, 0x04}, // bdiv b f  
	{0xacaa, &op_bdiv,	  2,   5, 255, 0xff, 0x00, 0x00, 0x04}, // bdiv c f  
	{0xacab, &op_bdiv,	  3,   5, 255, 0xff, 0x00, 0x00, 0x04}, // bdiv d f  
	{0xacac, &op_bdiv,	  4,   5, 255, 0xff, 0x00, 0x00, 0x04}, // bdiv e f  
	{0xacad, &op_bdiv,	  5,   5, 255, 0xff, 0x00, 0x00, 0x04}, // bdiv f f  
	{0xacae, &op_bdiv,	  6,   5, 255, 0xff, 0x00, 0x00, 0x04}, // bdiv g f  
	{0xacaf, &op_bdiv,	  7,   5, 255, 0xff, 0x00, 0x00, 0x04}, // bdiv h f  
	{0xacb0, &op_bdiv,	  0,   6, 255, 0xff, 0x00, 0x00, 0x04}, // bdiv a g  
	{0xacb1, &op_bdiv,	  1,   6, 255, 0xff, 0x00, 0x00, 0x04}, // bdiv b g  
	{0xacb2, &op_bdiv,	  2,   6, 255, 0xff, 0x00, 0x00, 0x04}, // bdiv c g  
	{0xacb3, &op_bdiv,	  3,   6, 255, 0xff, 0x00, 0x00, 0x04}, // bdiv d g  
	{0xacb4, &op_bdiv,	  4,   6, 255, 0xff, 0x00, 0x00, 0x04}, // bdiv e g  
	{0xacb5, &op_bdiv,	  5,   6, 255, 0xff, 0x00, 0x00, 0x04}, // bdiv f g  
	{0xacb6, &op_bdiv,	  6,   6, 255, 0xff, 0x00, 0x00, 0x04}, // bdiv g g  
	{0xacb7, &op_bdiv,	  7,   6, 255, 0xff, 0x00, 0x00, 0x04}, // bdiv h g  
	{0xacb8, &op_bdiv,	  0,   7, 255, 0xff, 0x00, 0x00, 0x04}, // bdiv a h  
	{0xacb9, &op_bdiv,	  1,   7, 255, 0xff, 0x00, 0x00, 0x04}, // bdiv b h  
	{0xacba, &op_bdiv,	  2,   7, 255, 0xff, 0x00, 0x00, 0x04}, // bdiv c h  
	{0xacbb, &op_bdiv,	  3,   7, 255, 0xff, 0x00, 0x00, 0x04}, // bdiv d h  
	{0xacbc, &op_bdiv,	  4,   7, 255, 0xff, 0x00, 0x00, 0x04}, // bdiv e h  
	{0xacbd, &op_bdiv,	  5,   7, 255, 0xff, 0x00, 0x00, 0x04}, // bdiv f h  
	{0xacbe, &op_bdiv,	  6,   7, 255, 0xff, 0x00, 0x00, 0x04}, // bdiv g h  
	{0xacbf, &op_bdiv,	  7,   7, 255, 0xff, 0x00, 0x00, 0x04}, // bdiv h h  
	{0xad00, &op_bdiv,	  0,   0, 255, 0xff, 0x01, 0x00, 0x01}, // bdiv.wr a a  
	{0xad01, &op_bdiv,	  1,   0, 255, 0xff, 0x01, 0x00, 0x01}, // bdiv.wr b a  
	{0xad02, &op_bdiv,	  2,   0, 255, 0xff, 0x01, 0x00, 0x01}, // bdiv.wr c a  
	{0xad03, &op_bdiv,	  3,   0, 255, 0xff, 0x01, 0x00, 0x01}, // bdiv.wr d a  
	{0xad04, &op_bdiv,	  4,   0, 255, 0xff, 0x01, 0x00, 0x01}, // bdiv.wr e a  
	{0xad05, &op_bdiv,	  5,   0, 255, 0xff, 0x01, 0x00, 0x01}, // bdiv.wr f a  
	{0xad06, &op_bdiv,	  6,   0, 255, 0xff, 0x01, 0x00, 0x01}, // bdiv.wr g a  
	{0xad07, &op_bdiv,	  7,   0, 255, 0xff, 0x01, 0x00, 0x01}, // bdiv.wr h a  
	{0xad08, &op_bdiv,	  0,   1, 255, 0xff, 0x01, 0x00, 0x01}, // bdiv.wr a b  
	{0xad09, &op_bdiv,	  1,   1, 255, 0xff, 0x01, 0x00, 0x01}, // bdiv.wr b b  
	{0xad0a, &op_bdiv,	  2,   1, 255, 0xff, 0x01, 0x00, 0x01}, // bdiv.wr c b  
	{0xad0b, &op_bdiv,	  3,   1, 255, 0xff, 0x01, 0x00, 0x01}, // bdiv.wr d b  
	{0xad0c, &op_bdiv,	  4,   1, 255, 0xff, 0x01, 0x00, 0x01}, // bdiv.wr e b  
	{0xad0d, &op_bdiv,	  5,   1, 255, 0xff, 0x01, 0x00, 0x01}, // bdiv.wr f b  
	{0xad0e, &op_bdiv,	  6,   1, 255, 0xff, 0x01, 0x00, 0x01}, // bdiv.wr g b  
	{0xad0f, &op_bdiv,	  7,   1, 255, 0xff, 0x01, 0x00, 0x01}, // bdiv.wr h b  
	{0xad10, &op_bdiv,	  0,   2, 255, 0xff, 0x01, 0x00, 0x01}, // bdiv.wr a c  
	{0xad11, &op_bdiv,	  1,   2, 255, 0xff, 0x01, 0x00, 0x01}, // bdiv.wr b c  
	{0xad12, &op_bdiv,	  2,   2, 255, 0xff, 0x01, 0x00, 0x01}, // bdiv.wr c c  
	{0xad13, &op_bdiv,	  3,   2, 255, 0xff, 0x01, 0x00, 0x01}, // bdiv.wr d c  
	{0xad14, &op_bdiv,	  4,   2, 255, 0xff, 0x01, 0x00, 0x01}, // bdiv.wr e c  
	{0xad15, &op_bdiv,	  5,   2, 255, 0xff, 0x01, 0x00, 0x01}, // bdiv.wr f c  
	{0xad16, &op_bdiv,	  6,   2, 255, 0xff, 0x01, 0x00, 0x01}, // bdiv.wr g c  
	{0xad17, &op_bdiv,	  7,   2, 255, 0xff, 0x01, 0x00, 0x01}, // bdiv.wr h c  
	{0xad18, &op_bdiv,	  0,   3, 255, 0xff, 0x01, 0x00, 0x01}, // bdiv.wr a d  
	{0xad19, &op_bdiv,	  1,   3, 255, 0xff, 0x01, 0x00, 0x01}, // bdiv.wr b d  
	{0xad1a, &op_bdiv,	  2,   3, 255, 0xff, 0x01, 0x00, 0x01}, // bdiv.wr c d  
	{0xad1b, &op_bdiv,	  3,   3, 255, 0xff, 0x01, 0x00, 0x01}, // bdiv.wr d d  
	{0xad1c, &op_bdiv,	  4,   3, 255, 0xff, 0x01, 0x00, 0x01}, // bdiv.wr e d  
	{0xad1d, &op_bdiv,	  5,   3, 255, 0xff, 0x01, 0x00, 0x01}, // bdiv.wr f d  
	{0xad1e, &op_bdiv,	  6,   3, 255, 0xff, 0x01, 0x00, 0x01}, // bdiv.wr g d  
	{0xad1f, &op_bdiv,	  7,   3, 255, 0xff, 0x01, 0x00, 0x01}, // bdiv.wr h d  
	{0xad20, &op_bdiv,	  0,   4, 255, 0xff, 0x01, 0x00, 0x01}, // bdiv.wr a e  
	{0xad21, &op_bdiv,	  1,   4, 255, 0xff, 0x01, 0x00, 0x01}, // bdiv.wr b e  
	{0xad22, &op_bdiv,	  2,   4, 255, 0xff, 0x01, 0x00, 0x01}, // bdiv.wr c e  
	{0xad23, &op_bdiv,	  3,   4, 255, 0xff, 0x01, 0x00, 0x01}, // bdiv.wr d e  
	{0xad24, &op_bdiv,	  4,   4, 255, 0xff, 0x01, 0x00, 0x01}, // bdiv.wr e e  
	{0xad25, &op_bdiv,	  5,   4, 255, 0xff, 0x01, 0x00, 0x01}, // bdiv.wr f e  
	{0xad26, &op_bdiv,	  6,   4, 255, 0xff, 0x01, 0x00, 0x01}, // bdiv.wr g e  
	{0xad27, &op_bdiv,	  7,   4, 255, 0xff, 0x01, 0x00, 0x01}, // bdiv.wr h e  
	{0xad28, &op_bdiv,	  0,   5, 255, 0xff, 0x01, 0x00, 0x01}, // bdiv.wr a f  
	{0xad29, &op_bdiv,	  1,   5, 255, 0xff, 0x01, 0x00, 0x01}, // bdiv.wr b f  
	{0xad2a, &op_bdiv,	  2,   5, 255, 0xff, 0x01, 0x00, 0x01}, // bdiv.wr c f  
	{0xad2b, &op_bdiv,	  3,   5, 255, 0xff, 0x01, 0x00, 0x01}, // bdiv.wr d f  
	{0xad2c, &op_bdiv,	  4,   5, 255, 0xff, 0x01, 0x00, 0x01}, // bdiv.wr e f  
	{0xad2d, &op_bdiv,	  5,   5, 255, 0xff, 0x01, 0x00, 0x01}, // bdiv.wr f f  
	{0xad2e, &op_bdiv,	  6,   5, 255, 0xff, 0x01, 0x00, 0x01}, // bdiv.wr g f  
	{0xad2f, &op_bdiv,	  7,   5, 255, 0xff, 0x01, 0x00, 0x01}, // bdiv.wr h f  
	{0xad30, &op_bdiv,	  0,   6, 255, 0xff, 0x01, 0x00, 0x01}, // bdiv.wr a g  
	{0xad31, &op_bdiv,	  1,   6, 255, 0xff, 0x01, 0x00, 0x01}, // bdiv.wr b g  
	{0xad32, &op_bdiv,	  2,   6, 255, 0xff, 0x01, 0x00, 0x01}, // bdiv.wr c g  
	{0xad33, &op_bdiv,	  3,   6, 255, 0xff, 0x01, 0x00, 0x01}, // bdiv.wr d g  
	{0xad34, &op_bdiv,	  4,   6, 255, 0xff, 0x01, 0x00, 0x01}, // bdiv.wr e g  
	{0xad35, &op_bdiv,	  5,   6, 255, 0xff, 0x01, 0x00, 0x01}, // bdiv.wr f g  
	{0xad36, &op_bdiv,	  6,   6, 255, 0xff, 0x01, 0x00, 0x01}, // bdiv.wr g g  
	{0xad37, &op_bdiv,	  7,   6, 255, 0xff, 0x01, 0x00, 0x01}, // bdiv.wr h g  
	{0xad38, &op_bdiv,	  0,   7, 255, 0xff, 0x01, 0x00, 0x01}, // bdiv.wr a h  
	{0xad39, &op_bdiv,	  1,   7, 255, 0xff, 0x01, 0x00, 0x01}, // bdiv.wr b h  
	{0xad3a, &op_bdiv,	  2,   7, 255, 0xff, 0x01, 0x00, 0x01}, // bdiv.wr c h  
	{0xad3b, &op_bdiv,	  3,   7, 255, 0xff, 0x01, 0x00, 0x01}, // bdiv.wr d h  
	{0xad3c, &op_bdiv,	  4,   7, 255, 0xff, 0x01, 0x00, 0x01}, // bdiv.wr e h  
	{0xad3d, &op_bdiv,	  5,   7, 255, 0xff, 0x01, 0x00, 0x01}, // bdiv.wr f h  
	{0xad3e, &op_bdiv,	  6,   7, 255, 0xff, 0x01, 0x00, 0x01}, // bdiv.wr g h  
	{0xad3f, &op_bdiv,	  7,   7, 255, 0xff, 0x01, 0x00, 0x01}, // bdiv.wr h h  
	{0xad40, &op_bdiv,	  0,   0, 255, 0xff, 0x01, 0x00, 0x02}, // bdiv.dr a a  
	{0xad41, &op_bdiv,	  1,   0, 255, 0xff, 0x01, 0x00, 0x02}, // bdiv.dr b a  
	{0xad42, &op_bdiv,	  2,   0, 255, 0xff, 0x01, 0x00, 0x02}, // bdiv.dr c a  
	{0xad43, &op_bdiv,	  3,   0, 255, 0xff, 0x01, 0x00, 0x02}, // bdiv.dr d a  
	{0xad44, &op_bdiv,	  4,   0, 255, 0xff, 0x01, 0x00, 0x02}, // bdiv.dr e a  
	{0xad45, &op_bdiv,	  5,   0, 255, 0xff, 0x01, 0x00, 0x02}, // bdiv.dr f a  
	{0xad46, &op_bdiv,	  6,   0, 255, 0xff, 0x01, 0x00, 0x02}, // bdiv.dr g a  
	{0xad47, &op_bdiv,	  7,   0, 255, 0xff, 0x01, 0x00, 0x02}, // bdiv.dr h a  
	{0xad48, &op_bdiv,	  0,   1, 255, 0xff, 0x01, 0x00, 0x02}, // bdiv.dr a b  
	{0xad49, &op_bdiv,	  1,   1, 255, 0xff, 0x01, 0x00, 0x02}, // bdiv.dr b b  
	{0xad4a, &op_bdiv,	  2,   1, 255, 0xff, 0x01, 0x00, 0x02}, // bdiv.dr c b  
	{0xad4b, &op_bdiv,	  3,   1, 255, 0xff, 0x01, 0x00, 0x02}, // bdiv.dr d b  
	{0xad4c, &op_bdiv,	  4,   1, 255, 0xff, 0x01, 0x00, 0x02}, // bdiv.dr e b  
	{0xad4d, &op_bdiv,	  5,   1, 255, 0xff, 0x01, 0x00, 0x02}, // bdiv.dr f b  
	{0xad4e, &op_bdiv,	  6,   1, 255, 0xff, 0x01, 0x00, 0x02}, // bdiv.dr g b  
	{0xad4f, &op_bdiv,	  7,   1, 255, 0xff, 0x01, 0x00, 0x02}, // bdiv.dr h b  
	{0xad50, &op_bdiv,	  0,   2, 255, 0xff, 0x01, 0x00, 0x02}, // bdiv.dr a c  
	{0xad51, &op_bdiv,	  1,   2, 255, 0xff, 0x01, 0x00, 0x02}, // bdiv.dr b c  
	{0xad52, &op_bdiv,	  2,   2, 255, 0xff, 0x01, 0x00, 0x02}, // bdiv.dr c c  
	{0xad53, &op_bdiv,	  3,   2, 255, 0xff, 0x01, 0x00, 0x02}, // bdiv.dr d c  
	{0xad54, &op_bdiv,	  4,   2, 255, 0xff, 0x01, 0x00, 0x02}, // bdiv.dr e c  
	{0xad55, &op_bdiv,	  5,   2, 255, 0xff, 0x01, 0x00, 0x02}, // bdiv.dr f c  
	{0xad56, &op_bdiv,	  6,   2, 255, 0xff, 0x01, 0x00, 0x02}, // bdiv.dr g c  
	{0xad57, &op_bdiv,	  7,   2, 255, 0xff, 0x01, 0x00, 0x02}, // bdiv.dr h c  
	{0xad58, &op_bdiv,	  0,   3, 255, 0xff, 0x01, 0x00, 0x02}, // bdiv.dr a d  
	{0xad59, &op_bdiv,	  1,   3, 255, 0xff, 0x01, 0x00, 0x02}, // bdiv.dr b d  
	{0xad5a, &op_bdiv,	  2,   3, 255, 0xff, 0x01, 0x00, 0x02}, // bdiv.dr c d  
	{0xad5b, &op_bdiv,	  3,   3, 255, 0xff, 0x01, 0x00, 0x02}, // bdiv.dr d d  
	{0xad5c, &op_bdiv,	  4,   3, 255, 0xff, 0x01, 0x00, 0x02}, // bdiv.dr e d  
	{0xad5d, &op_bdiv,	  5,   3, 255, 0xff, 0x01, 0x00, 0x02}, // bdiv.dr f d  
	{0xad5e, &op_bdiv,	  6,   3, 255, 0xff, 0x01, 0x00, 0x02}, // bdiv.dr g d  
	{0xad5f, &op_bdiv,	  7,   3, 255, 0xff, 0x01, 0x00, 0x02}, // bdiv.dr h d  
	{0xad60, &op_bdiv,	  0,   4, 255, 0xff, 0x01, 0x00, 0x02}, // bdiv.dr a e  
	{0xad61, &op_bdiv,	  1,   4, 255, 0xff, 0x01, 0x00, 0x02}, // bdiv.dr b e  
	{0xad62, &op_bdiv,	  2,   4, 255, 0xff, 0x01, 0x00, 0x02}, // bdiv.dr c e  
	{0xad63, &op_bdiv,	  3,   4, 255, 0xff, 0x01, 0x00, 0x02}, // bdiv.dr d e  
	{0xad64, &op_bdiv,	  4,   4, 255, 0xff, 0x01, 0x00, 0x02}, // bdiv.dr e e  
	{0xad65, &op_bdiv,	  5,   4, 255, 0xff, 0x01, 0x00, 0x02}, // bdiv.dr f e  
	{0xad66, &op_bdiv,	  6,   4, 255, 0xff, 0x01, 0x00, 0x02}, // bdiv.dr g e  
	{0xad67, &op_bdiv,	  7,   4, 255, 0xff, 0x01, 0x00, 0x02}, // bdiv.dr h e  
	{0xad68, &op_bdiv,	  0,   5, 255, 0xff, 0x01, 0x00, 0x02}, // bdiv.dr a f  
	{0xad69, &op_bdiv,	  1,   5, 255, 0xff, 0x01, 0x00, 0x02}, // bdiv.dr b f  
	{0xad6a, &op_bdiv,	  2,   5, 255, 0xff, 0x01, 0x00, 0x02}, // bdiv.dr c f  
	{0xad6b, &op_bdiv,	  3,   5, 255, 0xff, 0x01, 0x00, 0x02}, // bdiv.dr d f  
	{0xad6c, &op_bdiv,	  4,   5, 255, 0xff, 0x01, 0x00, 0x02}, // bdiv.dr e f  
	{0xad6d, &op_bdiv,	  5,   5, 255, 0xff, 0x01, 0x00, 0x02}, // bdiv.dr f f  
	{0xad6e, &op_bdiv,	  6,   5, 255, 0xff, 0x01, 0x00, 0x02}, // bdiv.dr g f  
	{0xad6f, &op_bdiv,	  7,   5, 255, 0xff, 0x01, 0x00, 0x02}, // bdiv.dr h f  
	{0xad70, &op_bdiv,	  0,   6, 255, 0xff, 0x01, 0x00, 0x02}, // bdiv.dr a g  
	{0xad71, &op_bdiv,	  1,   6, 255, 0xff, 0x01, 0x00, 0x02}, // bdiv.dr b g  
	{0xad72, &op_bdiv,	  2,   6, 255, 0xff, 0x01, 0x00, 0x02}, // bdiv.dr c g  
	{0xad73, &op_bdiv,	  3,   6, 255, 0xff, 0x01, 0x00, 0x02}, // bdiv.dr d g  
	{0xad74, &op_bdiv,	  4,   6, 255, 0xff, 0x01, 0x00, 0x02}, // bdiv.dr e g  
	{0xad75, &op_bdiv,	  5,   6, 255, 0xff, 0x01, 0x00, 0x02}, // bdiv.dr f g  
	{0xad76, &op_bdiv,	  6,   6, 255, 0xff, 0x01, 0x00, 0x02}, // bdiv.dr g g  
	{0xad77, &op_bdiv,	  7,   6, 255, 0xff, 0x01, 0x00, 0x02}, // bdiv.dr h g  
	{0xad78, &op_bdiv,	  0,   7, 255, 0xff, 0x01, 0x00, 0x02}, // bdiv.dr a h  
	{0xad79, &op_bdiv,	  1,   7, 255, 0xff, 0x01, 0x00, 0x02}, // bdiv.dr b h  
	{0xad7a, &op_bdiv,	  2,   7, 255, 0xff, 0x01, 0x00, 0x02}, // bdiv.dr c h  
	{0xad7b, &op_bdiv,	  3,   7, 255, 0xff, 0x01, 0x00, 0x02}, // bdiv.dr d h  
	{0xad7c, &op_bdiv,	  4,   7, 255, 0xff, 0x01, 0x00, 0x02}, // bdiv.dr e h  
	{0xad7d, &op_bdiv,	  5,   7, 255, 0xff, 0x01, 0x00, 0x02}, // bdiv.dr f h  
	{0xad7e, &op_bdiv,	  6,   7, 255, 0xff, 0x01, 0x00, 0x02}, // bdiv.dr g h  
	{0xad7f, &op_bdiv,	  7,   7, 255, 0xff, 0x01, 0x00, 0x02}, // bdiv.dr h h  
	{0xad80, &op_bdiv,	  0,   0, 255, 0xff, 0x01, 0x00, 0x04}, // bdiv.r a a  
	{0xad81, &op_bdiv,	  1,   0, 255, 0xff, 0x01, 0x00, 0x04}, // bdiv.r b a  
	{0xad82, &op_bdiv,	  2,   0, 255, 0xff, 0x01, 0x00, 0x04}, // bdiv.r c a  
	{0xad83, &op_bdiv,	  3,   0, 255, 0xff, 0x01, 0x00, 0x04}, // bdiv.r d a  
	{0xad84, &op_bdiv,	  4,   0, 255, 0xff, 0x01, 0x00, 0x04}, // bdiv.r e a  
	{0xad85, &op_bdiv,	  5,   0, 255, 0xff, 0x01, 0x00, 0x04}, // bdiv.r f a  
	{0xad86, &op_bdiv,	  6,   0, 255, 0xff, 0x01, 0x00, 0x04}, // bdiv.r g a  
	{0xad87, &op_bdiv,	  7,   0, 255, 0xff, 0x01, 0x00, 0x04}, // bdiv.r h a  
	{0xad88, &op_bdiv,	  0,   1, 255, 0xff, 0x01, 0x00, 0x04}, // bdiv.r a b  
	{0xad89, &op_bdiv,	  1,   1, 255, 0xff, 0x01, 0x00, 0x04}, // bdiv.r b b  
	{0xad8a, &op_bdiv,	  2,   1, 255, 0xff, 0x01, 0x00, 0x04}, // bdiv.r c b  
	{0xad8b, &op_bdiv,	  3,   1, 255, 0xff, 0x01, 0x00, 0x04}, // bdiv.r d b  
	{0xad8c, &op_bdiv,	  4,   1, 255, 0xff, 0x01, 0x00, 0x04}, // bdiv.r e b  
	{0xad8d, &op_bdiv,	  5,   1, 255, 0xff, 0x01, 0x00, 0x04}, // bdiv.r f b  
	{0xad8e, &op_bdiv,	  6,   1, 255, 0xff, 0x01, 0x00, 0x04}, // bdiv.r g b  
	{0xad8f, &op_bdiv,	  7,   1, 255, 0xff, 0x01, 0x00, 0x04}, // bdiv.r h b  
	{0xad90, &op_bdiv,	  0,   2, 255, 0xff, 0x01, 0x00, 0x04}, // bdiv.r a c  
	{0xad91, &op_bdiv,	  1,   2, 255, 0xff, 0x01, 0x00, 0x04}, // bdiv.r b c  
	{0xad92, &op_bdiv,	  2,   2, 255, 0xff, 0x01, 0x00, 0x04}, // bdiv.r c c  
	{0xad93, &op_bdiv,	  3,   2, 255, 0xff, 0x01, 0x00, 0x04}, // bdiv.r d c  
	{0xad94, &op_bdiv,	  4,   2, 255, 0xff, 0x01, 0x00, 0x04}, // bdiv.r e c  
	{0xad95, &op_bdiv,	  5,   2, 255, 0xff, 0x01, 0x00, 0x04}, // bdiv.r f c  
	{0xad96, &op_bdiv,	  6,   2, 255, 0xff, 0x01, 0x00, 0x04}, // bdiv.r g c  
	{0xad97, &op_bdiv,	  7,   2, 255, 0xff, 0x01, 0x00, 0x04}, // bdiv.r h c  
	{0xad98, &op_bdiv,	  0,   3, 255, 0xff, 0x01, 0x00, 0x04}, // bdiv.r a d  
	{0xad99, &op_bdiv,	  1,   3, 255, 0xff, 0x01, 0x00, 0x04}, // bdiv.r b d  
	{0xad9a, &op_bdiv,	  2,   3, 255, 0xff, 0x01, 0x00, 0x04}, // bdiv.r c d  
	{0xad9b, &op_bdiv,	  3,   3, 255, 0xff, 0x01, 0x00, 0x04}, // bdiv.r d d  
	{0xad9c, &op_bdiv,	  4,   3, 255, 0xff, 0x01, 0x00, 0x04}, // bdiv.r e d  
	{0xad9d, &op_bdiv,	  5,   3, 255, 0xff, 0x01, 0x00, 0x04}, // bdiv.r f d  
	{0xad9e, &op_bdiv,	  6,   3, 255, 0xff, 0x01, 0x00, 0x04}, // bdiv.r g d  
	{0xad9f, &op_bdiv,	  7,   3, 255, 0xff, 0x01, 0x00, 0x04}, // bdiv.r h d  
	{0xada0, &op_bdiv,	  0,   4, 255, 0xff, 0x01, 0x00, 0x04}, // bdiv.r a e  
	{0xada1, &op_bdiv,	  1,   4, 255, 0xff, 0x01, 0x00, 0x04}, // bdiv.r b e  
	{0xada2, &op_bdiv,	  2,   4, 255, 0xff, 0x01, 0x00, 0x04}, // bdiv.r c e  
	{0xada3, &op_bdiv,	  3,   4, 255, 0xff, 0x01, 0x00, 0x04}, // bdiv.r d e  
	{0xada4, &op_bdiv,	  4,   4, 255, 0xff, 0x01, 0x00, 0x04}, // bdiv.r e e  
	{0xada5, &op_bdiv,	  5,   4, 255, 0xff, 0x01, 0x00, 0x04}, // bdiv.r f e  
	{0xada6, &op_bdiv,	  6,   4, 255, 0xff, 0x01, 0x00, 0x04}, // bdiv.r g e  
	{0xada7, &op_bdiv,	  7,   4, 255, 0xff, 0x01, 0x00, 0x04}, // bdiv.r h e  
	{0xada8, &op_bdiv,	  0,   5, 255, 0xff, 0x01, 0x00, 0x04}, // bdiv.r a f  
	{0xada9, &op_bdiv,	  1,   5, 255, 0xff, 0x01, 0x00, 0x04}, // bdiv.r b f  
	{0xadaa, &op_bdiv,	  2,   5, 255, 0xff, 0x01, 0x00, 0x04}, // bdiv.r c f  
	{0xadab, &op_bdiv,	  3,   5, 255, 0xff, 0x01, 0x00, 0x04}, // bdiv.r d f  
	{0xadac, &op_bdiv,	  4,   5, 255, 0xff, 0x01, 0x00, 0x04}, // bdiv.r e f  
	{0xadad, &op_bdiv,	  5,   5, 255, 0xff, 0x01, 0x00, 0x04}, // bdiv.r f f  
	{0xadae, &op_bdiv,	  6,   5, 255, 0xff, 0x01, 0x00, 0x04}, // bdiv.r g f  
	{0xadaf, &op_bdiv,	  7,   5, 255, 0xff, 0x01, 0x00, 0x04}, // bdiv.r h f  
	{0xadb0, &op_bdiv,	  0,   6, 255, 0xff, 0x01, 0x00, 0x04}, // bdiv.r a g  
	{0xadb1, &op_bdiv,	  1,   6, 255, 0xff, 0x01, 0x00, 0x04}, // bdiv.r b g  
	{0xadb2, &op_bdiv,	  2,   6, 255, 0xff, 0x01, 0x00, 0x04}, // bdiv.r c g  
	{0xadb3, &op_bdiv,	  3,   6, 255, 0xff, 0x01, 0x00, 0x04}, // bdiv.r d g  
	{0xadb4, &op_bdiv,	  4,   6, 255, 0xff, 0x01, 0x00, 0x04}, // bdiv.r e g  
	{0xadb5, &op_bdiv,	  5,   6, 255, 0xff, 0x01, 0x00, 0x04}, // bdiv.r f g  
	{0xadb6, &op_bdiv,	  6,   6, 255, 0xff, 0x01, 0x00, 0x04}, // bdiv.r g g  
	{0xadb7, &op_bdiv,	  7,   6, 255, 0xff, 0x01, 0x00, 0x04}, // bdiv.r h g  
	{0xadb8, &op_bdiv,	  0,   7, 255, 0xff, 0x01, 0x00, 0x04}, // bdiv.r a h  
	{0xadb9, &op_bdiv,	  1,   7, 255, 0xff, 0x01, 0x00, 0x04}, // bdiv.r b h  
	{0xadba, &op_bdiv,	  2,   7, 255, 0xff, 0x01, 0x00, 0x04}, // bdiv.r c h  
	{0xadbb, &op_bdiv,	  3,   7, 255, 0xff, 0x01, 0x00, 0x04}, // bdiv.r d h  
	{0xadbc, &op_bdiv,	  4,   7, 255, 0xff, 0x01, 0x00, 0x04}, // bdiv.r e h  
	{0xadbd, &op_bdiv,	  5,   7, 255, 0xff, 0x01, 0x00, 0x04}, // bdiv.r f h  
	{0xadbe, &op_bdiv,	  6,   7, 255, 0xff, 0x01, 0x00, 0x04}, // bdiv.r g h  
	{0xadbf, &op_bdiv,	  7,   7, 255, 0xff, 0x01, 0x00, 0x04}, // bdiv.r h h  
	{0xacc8, &op_bdiv,	  0,   8, 255, 0xff, 0x00, 0x01, 0x01}, // bdiv.wi a <literal>  
	{0xacc9, &op_bdiv,	  1,   8, 255, 0xff, 0x00, 0x01, 0x01}, // bdiv.wi b <literal>  
	{0xacca, &op_bdiv,	  2,   8, 255, 0xff, 0x00, 0x01, 0x01}, // bdiv.wi c <literal>  
	{0xaccb, &op_bdiv,	  3,   8, 255, 0xff, 0x00, 0x01, 0x01}, // bdiv.wi d <literal>  
	{0xaccc, &op_bdiv,	  4,   8, 255, 0xff, 0x00, 0x01, 0x01}, // bdiv.wi e <literal>  
	{0xaccd, &op_bdiv,	  5,   8, 255, 0xff, 0x00, 0x01, 0x01}, // bdiv.wi f <literal>  
	{0xacce, &op_bdiv,	  6,   8, 255, 0xff, 0x00, 0x01, 0x01}, // bdiv.wi g <literal>  
	{0xaccf, &op_bdiv,	  7,   8, 255, 0xff, 0x00, 0x01, 0x01}, // bdiv.wi h <literal>  
	{0xacd0, &op_bdiv,	  0,   8, 255, 0xff, 0x00, 0x02, 0x02}, // bdiv.di a <literal>  
	{0xacd1, &op_bdiv,	  1,   8, 255, 0xff, 0x00, 0x02, 0x02}, // bdiv.di b <literal>  
	{0xacd2, &op_bdiv,	  2,   8, 255, 0xff, 0x00, 0x02, 0x02}, // bdiv.di c <literal>  
	{0xacd3, &op_bdiv,	  3,   8, 255, 0xff, 0x00, 0x02, 0x02}, // bdiv.di d <literal>  
	{0xacd4, &op_bdiv,	  4,   8, 255, 0xff, 0x00, 0x02, 0x02}, // bdiv.di e <literal>  
	{0xacd5, &op_bdiv,	  5,   8, 255, 0xff, 0x00, 0x02, 0x02}, // bdiv.di f <literal>  
	{0xacd6, &op_bdiv,	  6,   8, 255, 0xff, 0x00, 0x02, 0x02}, // bdiv.di g <literal>  
	{0xacd7, &op_bdiv,	  7,   8, 255, 0xff, 0x00, 0x02, 0x02}, // bdiv.di h <literal>  
	{0xace0, &op_bdiv,	  0,   8, 255, 0xff, 0x00, 0x04, 0x04}, // bdiv.i a <literal>  
	{0xace1, &op_bdiv,	  1,   8, 255, 0xff, 0x00, 0x04, 0x04}, // bdiv.i b <literal>  
	{0xace2, &op_bdiv,	  2,   8, 255, 0xff, 0x00, 0x04, 0x04}, // bdiv.i c <literal>  
	{0xace3, &op_bdiv,	  3,   8, 255, 0xff, 0x00, 0x04, 0x04}, // bdiv.i d <literal>  
	{0xace4, &op_bdiv,	  4,   8, 255, 0xff, 0x00, 0x04, 0x04}, // bdiv.i e <literal>  
	{0xace5, &op_bdiv,	  5,   8, 255, 0xff, 0x00, 0x04, 0x04}, // bdiv.i f <literal>  
	{0xace6, &op_bdiv,	  6,   8, 255, 0xff, 0x00, 0x04, 0x04}, // bdiv.i g <literal>  
	{0xace7, &op_bdiv,	  7,   8, 255, 0xff, 0x00, 0x04, 0x04}, // bdiv.i h <literal>  
	{0xadc8, &op_bdiv,	  0,   8, 255, 0xff, 0x01, 0x04, 0x01}, // bdiv.wri a <literal>  
	{0xadc9, &op_bdiv,	  1,   8, 255, 0xff, 0x01, 0x04, 0x01}, // bdiv.wri b <literal>  
	{0xadca, &op_bdiv,	  2,   8, 255, 0xff, 0x01, 0x04, 0x01}, // bdiv.wri c <literal>  
	{0xadcb, &op_bdiv,	  3,   8, 255, 0xff, 0x01, 0x04, 0x01}, // bdiv.wri d <literal>  
	{0xadcc, &op_bdiv,	  4,   8, 255, 0xff, 0x01, 0x04, 0x01}, // bdiv.wri e <literal>  
	{0xadcd, &op_bdiv,	  5,   8, 255, 0xff, 0x01, 0x04, 0x01}, // bdiv.wri f <literal>  
	{0xadce, &op_bdiv,	  6,   8, 255, 0xff, 0x01, 0x04, 0x01}, // bdiv.wri g <literal>  
	{0xadcf, &op_bdiv,	  7,   8, 255, 0xff, 0x01, 0x04, 0x01}, // bdiv.wri h <literal>  
	{0xadd0, &op_bdiv,	  0,   8, 255, 0xff, 0x01, 0x04, 0x02}, // bdiv.dri a <literal>  
	{0xadd1, &op_bdiv,	  1,   8, 255, 0xff, 0x01, 0x04, 0x02}, // bdiv.dri b <literal>  
	{0xadd2, &op_bdiv,	  2,   8, 255, 0xff, 0x01, 0x04, 0x02}, // bdiv.dri c <literal>  
	{0xadd3, &op_bdiv,	  3,   8, 255, 0xff, 0x01, 0x04, 0x02}, // bdiv.dri d <literal>  
	{0xadd4, &op_bdiv,	  4,   8, 255, 0xff, 0x01, 0x04, 0x02}, // bdiv.dri e <literal>  
	{0xadd5, &op_bdiv,	  5,   8, 255, 0xff, 0x01, 0x04, 0x02}, // bdiv.dri f <literal>  
	{0xadd6, &op_bdiv,	  6,   8, 255, 0xff, 0x01, 0x04, 0x02}, // bdiv.dri g <literal>  
	{0xadd7, &op_bdiv,	  7,   8, 255, 0xff, 0x01, 0x04, 0x02}, // bdiv.dri h <literal>  
	{0xade0, &op_bdiv,	  0,   8, 255, 0xff, 0x01, 0x04, 0x04}, // bdiv.ri a <literal>  
	{0xade1, &op_bdiv,	  1,   8, 255, 0xff, 0x01, 0x04, 0x04}, // bdiv.ri b <literal>  
	{0xade2, &op_bdiv,	  2,   8, 255, 0xff, 0x01, 0x04, 0x04}, // bdiv.ri c <literal>  
	{0xade3, &op_bdiv,	  3,   8, 255, 0xff, 0x01, 0x04, 0x04}, // bdiv.ri d <literal>  
	{0xade4, &op_bdiv,	  4,   8, 255, 0xff, 0x01, 0x04, 0x04}, // bdiv.ri e <literal>  
	{0xade5, &op_bdiv,	  5,   8, 255, 0xff, 0x01, 0x04, 0x04}, // bdiv.ri f <literal>  
	{0xade6, &op_bdiv,	  6,   8, 255, 0xff, 0x01, 0x04, 0x04}, // bdiv.ri g <literal>  
	{0xade7, &op_bdiv,	  7,   8, 255, 0xff, 0x01, 0x04, 0x04}, // bdiv.ri h <literal>  
	{0xb200, &op_fadd,	  0,   0, 255, 0xff, 0x00, 0x00, 0x01}, // fadd.w a a  
	{0xb201, &op_fadd,	  1,   0, 255, 0xff, 0x00, 0x00, 0x01}, // fadd.w b a  
	{0xb202, &op_fadd,	  2,   0, 255, 0xff, 0x00, 0x00, 0x01}, // fadd.w c a  
	{0xb203, &op_fadd,	  3,   0, 255, 0xff, 0x00, 0x00, 0x01}, // fadd.w d a  
	{0xb204, &op_fadd,	  4,   0, 255, 0xff, 0x00, 0x00, 0x01}, // fadd.w e a  
	{0xb205, &op_fadd,	  5,   0, 255, 0xff, 0x00, 0x00, 0x01}, // fadd.w f a  
	{0xb206, &op_fadd,	  6,   0, 255, 0xff, 0x00, 0x00, 0x01}, // fadd.w g a  
	{0xb207, &op_fadd,	  7,   0, 255, 0xff, 0x00, 0x00, 0x01}, // fadd.w h a  
	{0xb208, &op_fadd,	  0,   1, 255, 0xff, 0x00, 0x00, 0x01}, // fadd.w a b  
	{0xb209, &op_fadd,	  1,   1, 255, 0xff, 0x00, 0x00, 0x01}, // fadd.w b b  
	{0xb20a, &op_fadd,	  2,   1, 255, 0xff, 0x00, 0x00, 0x01}, // fadd.w c b  
	{0xb20b, &op_fadd,	  3,   1, 255, 0xff, 0x00, 0x00, 0x01}, // fadd.w d b  
	{0xb20c, &op_fadd,	  4,   1, 255, 0xff, 0x00, 0x00, 0x01}, // fadd.w e b  
	{0xb20d, &op_fadd,	  5,   1, 255, 0xff, 0x00, 0x00, 0x01}, // fadd.w f b  
	{0xb20e, &op_fadd,	  6,   1, 255, 0xff, 0x00, 0x00, 0x01}, // fadd.w g b  
	{0xb20f, &op_fadd,	  7,   1, 255, 0xff, 0x00, 0x00, 0x01}, // fadd.w h b  
	{0xb210, &op_fadd,	  0,   2, 255, 0xff, 0x00, 0x00, 0x01}, // fadd.w a c  
	{0xb211, &op_fadd,	  1,   2, 255, 0xff, 0x00, 0x00, 0x01}, // fadd.w b c  
	{0xb212, &op_fadd,	  2,   2, 255, 0xff, 0x00, 0x00, 0x01}, // fadd.w c c  
	{0xb213, &op_fadd,	  3,   2, 255, 0xff, 0x00, 0x00, 0x01}, // fadd.w d c  
	{0xb214, &op_fadd,	  4,   2, 255, 0xff, 0x00, 0x00, 0x01}, // fadd.w e c  
	{0xb215, &op_fadd,	  5,   2, 255, 0xff, 0x00, 0x00, 0x01}, // fadd.w f c  
	{0xb216, &op_fadd,	  6,   2, 255, 0xff, 0x00, 0x00, 0x01}, // fadd.w g c  
	{0xb217, &op_fadd,	  7,   2, 255, 0xff, 0x00, 0x00, 0x01}, // fadd.w h c  
	{0xb218, &op_fadd,	  0,   3, 255, 0xff, 0x00, 0x00, 0x01}, // fadd.w a d  
	{0xb219, &op_fadd,	  1,   3, 255, 0xff, 0x00, 0x00, 0x01}, // fadd.w b d  
	{0xb21a, &op_fadd,	  2,   3, 255, 0xff, 0x00, 0x00, 0x01}, // fadd.w c d  
	{0xb21b, &op_fadd,	  3,   3, 255, 0xff, 0x00, 0x00, 0x01}, // fadd.w d d  
	{0xb21c, &op_fadd,	  4,   3, 255, 0xff, 0x00, 0x00, 0x01}, // fadd.w e d  
	{0xb21d, &op_fadd,	  5,   3, 255, 0xff, 0x00, 0x00, 0x01}, // fadd.w f d  
	{0xb21e, &op_fadd,	  6,   3, 255, 0xff, 0x00, 0x00, 0x01}, // fadd.w g d  
	{0xb21f, &op_fadd,	  7,   3, 255, 0xff, 0x00, 0x00, 0x01}, // fadd.w h d  
	{0xb220, &op_fadd,	  0,   4, 255, 0xff, 0x00, 0x00, 0x01}, // fadd.w a e  
	{0xb221, &op_fadd,	  1,   4, 255, 0xff, 0x00, 0x00, 0x01}, // fadd.w b e  
	{0xb222, &op_fadd,	  2,   4, 255, 0xff, 0x00, 0x00, 0x01}, // fadd.w c e  
	{0xb223, &op_fadd,	  3,   4, 255, 0xff, 0x00, 0x00, 0x01}, // fadd.w d e  
	{0xb224, &op_fadd,	  4,   4, 255, 0xff, 0x00, 0x00, 0x01}, // fadd.w e e  
	{0xb225, &op_fadd,	  5,   4, 255, 0xff, 0x00, 0x00, 0x01}, // fadd.w f e  
	{0xb226, &op_fadd,	  6,   4, 255, 0xff, 0x00, 0x00, 0x01}, // fadd.w g e  
	{0xb227, &op_fadd,	  7,   4, 255, 0xff, 0x00, 0x00, 0x01}, // fadd.w h e  
	{0xb228, &op_fadd,	  0,   5, 255, 0xff, 0x00, 0x00, 0x01}, // fadd.w a f  
	{0xb229, &op_fadd,	  1,   5, 255, 0xff, 0x00, 0x00, 0x01}, // fadd.w b f  
	{0xb22a, &op_fadd,	  2,   5, 255, 0xff, 0x00, 0x00, 0x01}, // fadd.w c f  
	{0xb22b, &op_fadd,	  3,   5, 255, 0xff, 0x00, 0x00, 0x01}, // fadd.w d f  
	{0xb22c, &op_fadd,	  4,   5, 255, 0xff, 0x00, 0x00, 0x01}, // fadd.w e f  
	{0xb22d, &op_fadd,	  5,   5, 255, 0xff, 0x00, 0x00, 0x01}, // fadd.w f f  
	{0xb22e, &op_fadd,	  6,   5, 255, 0xff, 0x00, 0x00, 0x01}, // fadd.w g f  
	{0xb22f, &op_fadd,	  7,   5, 255, 0xff, 0x00, 0x00, 0x01}, // fadd.w h f  
	{0xb230, &op_fadd,	  0,   6, 255, 0xff, 0x00, 0x00, 0x01}, // fadd.w a g  
	{0xb231, &op_fadd,	  1,   6, 255, 0xff, 0x00, 0x00, 0x01}, // fadd.w b g  
	{0xb232, &op_fadd,	  2,   6, 255, 0xff, 0x00, 0x00, 0x01}, // fadd.w c g  
	{0xb233, &op_fadd,	  3,   6, 255, 0xff, 0x00, 0x00, 0x01}, // fadd.w d g  
	{0xb234, &op_fadd,	  4,   6, 255, 0xff, 0x00, 0x00, 0x01}, // fadd.w e g  
	{0xb235, &op_fadd,	  5,   6, 255, 0xff, 0x00, 0x00, 0x01}, // fadd.w f g  
	{0xb236, &op_fadd,	  6,   6, 255, 0xff, 0x00, 0x00, 0x01}, // fadd.w g g  
	{0xb237, &op_fadd,	  7,   6, 255, 0xff, 0x00, 0x00, 0x01}, // fadd.w h g  
	{0xb238, &op_fadd,	  0,   7, 255, 0xff, 0x00, 0x00, 0x01}, // fadd.w a h  
	{0xb239, &op_fadd,	  1,   7, 255, 0xff, 0x00, 0x00, 0x01}, // fadd.w b h  
	{0xb23a, &op_fadd,	  2,   7, 255, 0xff, 0x00, 0x00, 0x01}, // fadd.w c h  
	{0xb23b, &op_fadd,	  3,   7, 255, 0xff, 0x00, 0x00, 0x01}, // fadd.w d h  
	{0xb23c, &op_fadd,	  4,   7, 255, 0xff, 0x00, 0x00, 0x01}, // fadd.w e h  
	{0xb23d, &op_fadd,	  5,   7, 255, 0xff, 0x00, 0x00, 0x01}, // fadd.w f h  
	{0xb23e, &op_fadd,	  6,   7, 255, 0xff, 0x00, 0x00, 0x01}, // fadd.w g h  
	{0xb23f, &op_fadd,	  7,   7, 255, 0xff, 0x00, 0x00, 0x01}, // fadd.w h h  
	{0xb240, &op_fadd,	  0,   0, 255, 0xff, 0x00, 0x00, 0x02}, // fadd.d a a  
	{0xb241, &op_fadd,	  1,   0, 255, 0xff, 0x00, 0x00, 0x02}, // fadd.d b a  
	{0xb242, &op_fadd,	  2,   0, 255, 0xff, 0x00, 0x00, 0x02}, // fadd.d c a  
	{0xb243, &op_fadd,	  3,   0, 255, 0xff, 0x00, 0x00, 0x02}, // fadd.d d a  
	{0xb244, &op_fadd,	  4,   0, 255, 0xff, 0x00, 0x00, 0x02}, // fadd.d e a  
	{0xb245, &op_fadd,	  5,   0, 255, 0xff, 0x00, 0x00, 0x02}, // fadd.d f a  
	{0xb246, &op_fadd,	  6,   0, 255, 0xff, 0x00, 0x00, 0x02}, // fadd.d g a  
	{0xb247, &op_fadd,	  7,   0, 255, 0xff, 0x00, 0x00, 0x02}, // fadd.d h a  
	{0xb248, &op_fadd,	  0,   1, 255, 0xff, 0x00, 0x00, 0x02}, // fadd.d a b  
	{0xb249, &op_fadd,	  1,   1, 255, 0xff, 0x00, 0x00, 0x02}, // fadd.d b b  
	{0xb24a, &op_fadd,	  2,   1, 255, 0xff, 0x00, 0x00, 0x02}, // fadd.d c b  
	{0xb24b, &op_fadd,	  3,   1, 255, 0xff, 0x00, 0x00, 0x02}, // fadd.d d b  
	{0xb24c, &op_fadd,	  4,   1, 255, 0xff, 0x00, 0x00, 0x02}, // fadd.d e b  
	{0xb24d, &op_fadd,	  5,   1, 255, 0xff, 0x00, 0x00, 0x02}, // fadd.d f b  
	{0xb24e, &op_fadd,	  6,   1, 255, 0xff, 0x00, 0x00, 0x02}, // fadd.d g b  
	{0xb24f, &op_fadd,	  7,   1, 255, 0xff, 0x00, 0x00, 0x02}, // fadd.d h b  
	{0xb250, &op_fadd,	  0,   2, 255, 0xff, 0x00, 0x00, 0x02}, // fadd.d a c  
	{0xb251, &op_fadd,	  1,   2, 255, 0xff, 0x00, 0x00, 0x02}, // fadd.d b c  
	{0xb252, &op_fadd,	  2,   2, 255, 0xff, 0x00, 0x00, 0x02}, // fadd.d c c  
	{0xb253, &op_fadd,	  3,   2, 255, 0xff, 0x00, 0x00, 0x02}, // fadd.d d c  
	{0xb254, &op_fadd,	  4,   2, 255, 0xff, 0x00, 0x00, 0x02}, // fadd.d e c  
	{0xb255, &op_fadd,	  5,   2, 255, 0xff, 0x00, 0x00, 0x02}, // fadd.d f c  
	{0xb256, &op_fadd,	  6,   2, 255, 0xff, 0x00, 0x00, 0x02}, // fadd.d g c  
	{0xb257, &op_fadd,	  7,   2, 255, 0xff, 0x00, 0x00, 0x02}, // fadd.d h c  
	{0xb258, &op_fadd,	  0,   3, 255, 0xff, 0x00, 0x00, 0x02}, // fadd.d a d  
	{0xb259, &op_fadd,	  1,   3, 255, 0xff, 0x00, 0x00, 0x02}, // fadd.d b d  
	{0xb25a, &op_fadd,	  2,   3, 255, 0xff, 0x00, 0x00, 0x02}, // fadd.d c d  
	{0xb25b, &op_fadd,	  3,   3, 255, 0xff, 0x00, 0x00, 0x02}, // fadd.d d d  
	{0xb25c, &op_fadd,	  4,   3, 255, 0xff, 0x00, 0x00, 0x02}, // fadd.d e d  
	{0xb25d, &op_fadd,	  5,   3, 255, 0xff, 0x00, 0x00, 0x02}, // fadd.d f d  
	{0xb25e, &op_fadd,	  6,   3, 255, 0xff, 0x00, 0x00, 0x02}, // fadd.d g d  
	{0xb25f, &op_fadd,	  7,   3, 255, 0xff, 0x00, 0x00, 0x02}, // fadd.d h d  
	{0xb260, &op_fadd,	  0,   4, 255, 0xff, 0x00, 0x00, 0x02}, // fadd.d a e  
	{0xb261, &op_fadd,	  1,   4, 255, 0xff, 0x00, 0x00, 0x02}, // fadd.d b e  
	{0xb262, &op_fadd,	  2,   4, 255, 0xff, 0x00, 0x00, 0x02}, // fadd.d c e  
	{0xb263, &op_fadd,	  3,   4, 255, 0xff, 0x00, 0x00, 0x02}, // fadd.d d e  
	{0xb264, &op_fadd,	  4,   4, 255, 0xff, 0x00, 0x00, 0x02}, // fadd.d e e  
	{0xb265, &op_fadd,	  5,   4, 255, 0xff, 0x00, 0x00, 0x02}, // fadd.d f e  
	{0xb266, &op_fadd,	  6,   4, 255, 0xff, 0x00, 0x00, 0x02}, // fadd.d g e  
	{0xb267, &op_fadd,	  7,   4, 255, 0xff, 0x00, 0x00, 0x02}, // fadd.d h e  
	{0xb268, &op_fadd,	  0,   5, 255, 0xff, 0x00, 0x00, 0x02}, // fadd.d a f  
	{0xb269, &op_fadd,	  1,   5, 255, 0xff, 0x00, 0x00, 0x02}, // fadd.d b f  
	{0xb26a, &op_fadd,	  2,   5, 255, 0xff, 0x00, 0x00, 0x02}, // fadd.d c f  
	{0xb26b, &op_fadd,	  3,   5, 255, 0xff, 0x00, 0x00, 0x02}, // fadd.d d f  
	{0xb26c, &op_fadd,	  4,   5, 255, 0xff, 0x00, 0x00, 0x02}, // fadd.d e f  
	{0xb26d, &op_fadd,	  5,   5, 255, 0xff, 0x00, 0x00, 0x02}, // fadd.d f f  
	{0xb26e, &op_fadd,	  6,   5, 255, 0xff, 0x00, 0x00, 0x02}, // fadd.d g f  
	{0xb26f, &op_fadd,	  7,   5, 255, 0xff, 0x00, 0x00, 0x02}, // fadd.d h f  
	{0xb270, &op_fadd,	  0,   6, 255, 0xff, 0x00, 0x00, 0x02}, // fadd.d a g  
	{0xb271, &op_fadd,	  1,   6, 255, 0xff, 0x00, 0x00, 0x02}, // fadd.d b g  
	{0xb272, &op_fadd,	  2,   6, 255, 0xff, 0x00, 0x00, 0x02}, // fadd.d c g  
	{0xb273, &op_fadd,	  3,   6, 255, 0xff, 0x00, 0x00, 0x02}, // fadd.d d g  
	{0xb274, &op_fadd,	  4,   6, 255, 0xff, 0x00, 0x00, 0x02}, // fadd.d e g  
	{0xb275, &op_fadd,	  5,   6, 255, 0xff, 0x00, 0x00, 0x02}, // fadd.d f g  
	{0xb276, &op_fadd,	  6,   6, 255, 0xff, 0x00, 0x00, 0x02}, // fadd.d g g  
	{0xb277, &op_fadd,	  7,   6, 255, 0xff, 0x00, 0x00, 0x02}, // fadd.d h g  
	{0xb278, &op_fadd,	  0,   7, 255, 0xff, 0x00, 0x00, 0x02}, // fadd.d a h  
	{0xb279, &op_fadd,	  1,   7, 255, 0xff, 0x00, 0x00, 0x02}, // fadd.d b h  
	{0xb27a, &op_fadd,	  2,   7, 255, 0xff, 0x00, 0x00, 0x02}, // fadd.d c h  
	{0xb27b, &op_fadd,	  3,   7, 255, 0xff, 0x00, 0x00, 0x02}, // fadd.d d h  
	{0xb27c, &op_fadd,	  4,   7, 255, 0xff, 0x00, 0x00, 0x02}, // fadd.d e h  
	{0xb27d, &op_fadd,	  5,   7, 255, 0xff, 0x00, 0x00, 0x02}, // fadd.d f h  
	{0xb27e, &op_fadd,	  6,   7, 255, 0xff, 0x00, 0x00, 0x02}, // fadd.d g h  
	{0xb27f, &op_fadd,	  7,   7, 255, 0xff, 0x00, 0x00, 0x02}, // fadd.d h h  
	{0xb280, &op_fadd,	  0,   0, 255, 0xff, 0x00, 0x00, 0x04}, // fadd a a  
	{0xb281, &op_fadd,	  1,   0, 255, 0xff, 0x00, 0x00, 0x04}, // fadd b a  
	{0xb282, &op_fadd,	  2,   0, 255, 0xff, 0x00, 0x00, 0x04}, // fadd c a  
	{0xb283, &op_fadd,	  3,   0, 255, 0xff, 0x00, 0x00, 0x04}, // fadd d a  
	{0xb284, &op_fadd,	  4,   0, 255, 0xff, 0x00, 0x00, 0x04}, // fadd e a  
	{0xb285, &op_fadd,	  5,   0, 255, 0xff, 0x00, 0x00, 0x04}, // fadd f a  
	{0xb286, &op_fadd,	  6,   0, 255, 0xff, 0x00, 0x00, 0x04}, // fadd g a  
	{0xb287, &op_fadd,	  7,   0, 255, 0xff, 0x00, 0x00, 0x04}, // fadd h a  
	{0xb288, &op_fadd,	  0,   1, 255, 0xff, 0x00, 0x00, 0x04}, // fadd a b  
	{0xb289, &op_fadd,	  1,   1, 255, 0xff, 0x00, 0x00, 0x04}, // fadd b b  
	{0xb28a, &op_fadd,	  2,   1, 255, 0xff, 0x00, 0x00, 0x04}, // fadd c b  
	{0xb28b, &op_fadd,	  3,   1, 255, 0xff, 0x00, 0x00, 0x04}, // fadd d b  
	{0xb28c, &op_fadd,	  4,   1, 255, 0xff, 0x00, 0x00, 0x04}, // fadd e b  
	{0xb28d, &op_fadd,	  5,   1, 255, 0xff, 0x00, 0x00, 0x04}, // fadd f b  
	{0xb28e, &op_fadd,	  6,   1, 255, 0xff, 0x00, 0x00, 0x04}, // fadd g b  
	{0xb28f, &op_fadd,	  7,   1, 255, 0xff, 0x00, 0x00, 0x04}, // fadd h b  
	{0xb290, &op_fadd,	  0,   2, 255, 0xff, 0x00, 0x00, 0x04}, // fadd a c  
	{0xb291, &op_fadd,	  1,   2, 255, 0xff, 0x00, 0x00, 0x04}, // fadd b c  
	{0xb292, &op_fadd,	  2,   2, 255, 0xff, 0x00, 0x00, 0x04}, // fadd c c  
	{0xb293, &op_fadd,	  3,   2, 255, 0xff, 0x00, 0x00, 0x04}, // fadd d c  
	{0xb294, &op_fadd,	  4,   2, 255, 0xff, 0x00, 0x00, 0x04}, // fadd e c  
	{0xb295, &op_fadd,	  5,   2, 255, 0xff, 0x00, 0x00, 0x04}, // fadd f c  
	{0xb296, &op_fadd,	  6,   2, 255, 0xff, 0x00, 0x00, 0x04}, // fadd g c  
	{0xb297, &op_fadd,	  7,   2, 255, 0xff, 0x00, 0x00, 0x04}, // fadd h c  
	{0xb298, &op_fadd,	  0,   3, 255, 0xff, 0x00, 0x00, 0x04}, // fadd a d  
	{0xb299, &op_fadd,	  1,   3, 255, 0xff, 0x00, 0x00, 0x04}, // fadd b d  
	{0xb29a, &op_fadd,	  2,   3, 255, 0xff, 0x00, 0x00, 0x04}, // fadd c d  
	{0xb29b, &op_fadd,	  3,   3, 255, 0xff, 0x00, 0x00, 0x04}, // fadd d d  
	{0xb29c, &op_fadd,	  4,   3, 255, 0xff, 0x00, 0x00, 0x04}, // fadd e d  
	{0xb29d, &op_fadd,	  5,   3, 255, 0xff, 0x00, 0x00, 0x04}, // fadd f d  
	{0xb29e, &op_fadd,	  6,   3, 255, 0xff, 0x00, 0x00, 0x04}, // fadd g d  
	{0xb29f, &op_fadd,	  7,   3, 255, 0xff, 0x00, 0x00, 0x04}, // fadd h d  
	{0xb2a0, &op_fadd,	  0,   4, 255, 0xff, 0x00, 0x00, 0x04}, // fadd a e  
	{0xb2a1, &op_fadd,	  1,   4, 255, 0xff, 0x00, 0x00, 0x04}, // fadd b e  
	{0xb2a2, &op_fadd,	  2,   4, 255, 0xff, 0x00, 0x00, 0x04}, // fadd c e  
	{0xb2a3, &op_fadd,	  3,   4, 255, 0xff, 0x00, 0x00, 0x04}, // fadd d e  
	{0xb2a4, &op_fadd,	  4,   4, 255, 0xff, 0x00, 0x00, 0x04}, // fadd e e  
	{0xb2a5, &op_fadd,	  5,   4, 255, 0xff, 0x00, 0x00, 0x04}, // fadd f e  
	{0xb2a6, &op_fadd,	  6,   4, 255, 0xff, 0x00, 0x00, 0x04}, // fadd g e  
	{0xb2a7, &op_fadd,	  7,   4, 255, 0xff, 0x00, 0x00, 0x04}, // fadd h e  
	{0xb2a8, &op_fadd,	  0,   5, 255, 0xff, 0x00, 0x00, 0x04}, // fadd a f  
	{0xb2a9, &op_fadd,	  1,   5, 255, 0xff, 0x00, 0x00, 0x04}, // fadd b f  
	{0xb2aa, &op_fadd,	  2,   5, 255, 0xff, 0x00, 0x00, 0x04}, // fadd c f  
	{0xb2ab, &op_fadd,	  3,   5, 255, 0xff, 0x00, 0x00, 0x04}, // fadd d f  
	{0xb2ac, &op_fadd,	  4,   5, 255, 0xff, 0x00, 0x00, 0x04}, // fadd e f  
	{0xb2ad, &op_fadd,	  5,   5, 255, 0xff, 0x00, 0x00, 0x04}, // fadd f f  
	{0xb2ae, &op_fadd,	  6,   5, 255, 0xff, 0x00, 0x00, 0x04}, // fadd g f  
	{0xb2af, &op_fadd,	  7,   5, 255, 0xff, 0x00, 0x00, 0x04}, // fadd h f  
	{0xb2b0, &op_fadd,	  0,   6, 255, 0xff, 0x00, 0x00, 0x04}, // fadd a g  
	{0xb2b1, &op_fadd,	  1,   6, 255, 0xff, 0x00, 0x00, 0x04}, // fadd b g  
	{0xb2b2, &op_fadd,	  2,   6, 255, 0xff, 0x00, 0x00, 0x04}, // fadd c g  
	{0xb2b3, &op_fadd,	  3,   6, 255, 0xff, 0x00, 0x00, 0x04}, // fadd d g  
	{0xb2b4, &op_fadd,	  4,   6, 255, 0xff, 0x00, 0x00, 0x04}, // fadd e g  
	{0xb2b5, &op_fadd,	  5,   6, 255, 0xff, 0x00, 0x00, 0x04}, // fadd f g  
	{0xb2b6, &op_fadd,	  6,   6, 255, 0xff, 0x00, 0x00, 0x04}, // fadd g g  
	{0xb2b7, &op_fadd,	  7,   6, 255, 0xff, 0x00, 0x00, 0x04}, // fadd h g  
	{0xb2b8, &op_fadd,	  0,   7, 255, 0xff, 0x00, 0x00, 0x04}, // fadd a h  
	{0xb2b9, &op_fadd,	  1,   7, 255, 0xff, 0x00, 0x00, 0x04}, // fadd b h  
	{0xb2ba, &op_fadd,	  2,   7, 255, 0xff, 0x00, 0x00, 0x04}, // fadd c h  
	{0xb2bb, &op_fadd,	  3,   7, 255, 0xff, 0x00, 0x00, 0x04}, // fadd d h  
	{0xb2bc, &op_fadd,	  4,   7, 255, 0xff, 0x00, 0x00, 0x04}, // fadd e h  
	{0xb2bd, &op_fadd,	  5,   7, 255, 0xff, 0x00, 0x00, 0x04}, // fadd f h  
	{0xb2be, &op_fadd,	  6,   7, 255, 0xff, 0x00, 0x00, 0x04}, // fadd g h  
	{0xb2bf, &op_fadd,	  7,   7, 255, 0xff, 0x00, 0x00, 0x04}, // fadd h h  
	{0xb300, &op_fadd,	  0,   0, 255, 0xff, 0x01, 0x00, 0x01}, // fadd.wr a a  
	{0xb301, &op_fadd,	  1,   0, 255, 0xff, 0x01, 0x00, 0x01}, // fadd.wr b a  
	{0xb302, &op_fadd,	  2,   0, 255, 0xff, 0x01, 0x00, 0x01}, // fadd.wr c a  
	{0xb303, &op_fadd,	  3,   0, 255, 0xff, 0x01, 0x00, 0x01}, // fadd.wr d a  
	{0xb304, &op_fadd,	  4,   0, 255, 0xff, 0x01, 0x00, 0x01}, // fadd.wr e a  
	{0xb305, &op_fadd,	  5,   0, 255, 0xff, 0x01, 0x00, 0x01}, // fadd.wr f a  
	{0xb306, &op_fadd,	  6,   0, 255, 0xff, 0x01, 0x00, 0x01}, // fadd.wr g a  
	{0xb307, &op_fadd,	  7,   0, 255, 0xff, 0x01, 0x00, 0x01}, // fadd.wr h a  
	{0xb308, &op_fadd,	  0,   1, 255, 0xff, 0x01, 0x00, 0x01}, // fadd.wr a b  
	{0xb309, &op_fadd,	  1,   1, 255, 0xff, 0x01, 0x00, 0x01}, // fadd.wr b b  
	{0xb30a, &op_fadd,	  2,   1, 255, 0xff, 0x01, 0x00, 0x01}, // fadd.wr c b  
	{0xb30b, &op_fadd,	  3,   1, 255, 0xff, 0x01, 0x00, 0x01}, // fadd.wr d b  
	{0xb30c, &op_fadd,	  4,   1, 255, 0xff, 0x01, 0x00, 0x01}, // fadd.wr e b  
	{0xb30d, &op_fadd,	  5,   1, 255, 0xff, 0x01, 0x00, 0x01}, // fadd.wr f b  
	{0xb30e, &op_fadd,	  6,   1, 255, 0xff, 0x01, 0x00, 0x01}, // fadd.wr g b  
	{0xb30f, &op_fadd,	  7,   1, 255, 0xff, 0x01, 0x00, 0x01}, // fadd.wr h b  
	{0xb310, &op_fadd,	  0,   2, 255, 0xff, 0x01, 0x00, 0x01}, // fadd.wr a c  
	{0xb311, &op_fadd,	  1,   2, 255, 0xff, 0x01, 0x00, 0x01}, // fadd.wr b c  
	{0xb312, &op_fadd,	  2,   2, 255, 0xff, 0x01, 0x00, 0x01}, // fadd.wr c c  
	{0xb313, &op_fadd,	  3,   2, 255, 0xff, 0x01, 0x00, 0x01}, // fadd.wr d c  
	{0xb314, &op_fadd,	  4,   2, 255, 0xff, 0x01, 0x00, 0x01}, // fadd.wr e c  
	{0xb315, &op_fadd,	  5,   2, 255, 0xff, 0x01, 0x00, 0x01}, // fadd.wr f c  
	{0xb316, &op_fadd,	  6,   2, 255, 0xff, 0x01, 0x00, 0x01}, // fadd.wr g c  
	{0xb317, &op_fadd,	  7,   2, 255, 0xff, 0x01, 0x00, 0x01}, // fadd.wr h c  
	{0xb318, &op_fadd,	  0,   3, 255, 0xff, 0x01, 0x00, 0x01}, // fadd.wr a d  
	{0xb319, &op_fadd,	  1,   3, 255, 0xff, 0x01, 0x00, 0x01}, // fadd.wr b d  
	{0xb31a, &op_fadd,	  2,   3, 255, 0xff, 0x01, 0x00, 0x01}, // fadd.wr c d  
	{0xb31b, &op_fadd,	  3,   3, 255, 0xff, 0x01, 0x00, 0x01}, // fadd.wr d d  
	{0xb31c, &op_fadd,	  4,   3, 255, 0xff, 0x01, 0x00, 0x01}, // fadd.wr e d  
	{0xb31d, &op_fadd,	  5,   3, 255, 0xff, 0x01, 0x00, 0x01}, // fadd.wr f d  
	{0xb31e, &op_fadd,	  6,   3, 255, 0xff, 0x01, 0x00, 0x01}, // fadd.wr g d  
	{0xb31f, &op_fadd,	  7,   3, 255, 0xff, 0x01, 0x00, 0x01}, // fadd.wr h d  
	{0xb320, &op_fadd,	  0,   4, 255, 0xff, 0x01, 0x00, 0x01}, // fadd.wr a e  
	{0xb321, &op_fadd,	  1,   4, 255, 0xff, 0x01, 0x00, 0x01}, // fadd.wr b e  
	{0xb322, &op_fadd,	  2,   4, 255, 0xff, 0x01, 0x00, 0x01}, // fadd.wr c e  
	{0xb323, &op_fadd,	  3,   4, 255, 0xff, 0x01, 0x00, 0x01}, // fadd.wr d e  
	{0xb324, &op_fadd,	  4,   4, 255, 0xff, 0x01, 0x00, 0x01}, // fadd.wr e e  
	{0xb325, &op_fadd,	  5,   4, 255, 0xff, 0x01, 0x00, 0x01}, // fadd.wr f e  
	{0xb326, &op_fadd,	  6,   4, 255, 0xff, 0x01, 0x00, 0x01}, // fadd.wr g e  
	{0xb327, &op_fadd,	  7,   4, 255, 0xff, 0x01, 0x00, 0x01}, // fadd.wr h e  
	{0xb328, &op_fadd,	  0,   5, 255, 0xff, 0x01, 0x00, 0x01}, // fadd.wr a f  
	{0xb329, &op_fadd,	  1,   5, 255, 0xff, 0x01, 0x00, 0x01}, // fadd.wr b f  
	{0xb32a, &op_fadd,	  2,   5, 255, 0xff, 0x01, 0x00, 0x01}, // fadd.wr c f  
	{0xb32b, &op_fadd,	  3,   5, 255, 0xff, 0x01, 0x00, 0x01}, // fadd.wr d f  
	{0xb32c, &op_fadd,	  4,   5, 255, 0xff, 0x01, 0x00, 0x01}, // fadd.wr e f  
	{0xb32d, &op_fadd,	  5,   5, 255, 0xff, 0x01, 0x00, 0x01}, // fadd.wr f f  
	{0xb32e, &op_fadd,	  6,   5, 255, 0xff, 0x01, 0x00, 0x01}, // fadd.wr g f  
	{0xb32f, &op_fadd,	  7,   5, 255, 0xff, 0x01, 0x00, 0x01}, // fadd.wr h f  
	{0xb330, &op_fadd,	  0,   6, 255, 0xff, 0x01, 0x00, 0x01}, // fadd.wr a g  
	{0xb331, &op_fadd,	  1,   6, 255, 0xff, 0x01, 0x00, 0x01}, // fadd.wr b g  
	{0xb332, &op_fadd,	  2,   6, 255, 0xff, 0x01, 0x00, 0x01}, // fadd.wr c g  
	{0xb333, &op_fadd,	  3,   6, 255, 0xff, 0x01, 0x00, 0x01}, // fadd.wr d g  
	{0xb334, &op_fadd,	  4,   6, 255, 0xff, 0x01, 0x00, 0x01}, // fadd.wr e g  
	{0xb335, &op_fadd,	  5,   6, 255, 0xff, 0x01, 0x00, 0x01}, // fadd.wr f g  
	{0xb336, &op_fadd,	  6,   6, 255, 0xff, 0x01, 0x00, 0x01}, // fadd.wr g g  
	{0xb337, &op_fadd,	  7,   6, 255, 0xff, 0x01, 0x00, 0x01}, // fadd.wr h g  
	{0xb338, &op_fadd,	  0,   7, 255, 0xff, 0x01, 0x00, 0x01}, // fadd.wr a h  
	{0xb339, &op_fadd,	  1,   7, 255, 0xff, 0x01, 0x00, 0x01}, // fadd.wr b h  
	{0xb33a, &op_fadd,	  2,   7, 255, 0xff, 0x01, 0x00, 0x01}, // fadd.wr c h  
	{0xb33b, &op_fadd,	  3,   7, 255, 0xff, 0x01, 0x00, 0x01}, // fadd.wr d h  
	{0xb33c, &op_fadd,	  4,   7, 255, 0xff, 0x01, 0x00, 0x01}, // fadd.wr e h  
	{0xb33d, &op_fadd,	  5,   7, 255, 0xff, 0x01, 0x00, 0x01}, // fadd.wr f h  
	{0xb33e, &op_fadd,	  6,   7, 255, 0xff, 0x01, 0x00, 0x01}, // fadd.wr g h  
	{0xb33f, &op_fadd,	  7,   7, 255, 0xff, 0x01, 0x00, 0x01}, // fadd.wr h h  
	{0xb340, &op_fadd,	  0,   0, 255, 0xff, 0x01, 0x00, 0x02}, // fadd.dr a a  
	{0xb341, &op_fadd,	  1,   0, 255, 0xff, 0x01, 0x00, 0x02}, // fadd.dr b a  
	{0xb342, &op_fadd,	  2,   0, 255, 0xff, 0x01, 0x00, 0x02}, // fadd.dr c a  
	{0xb343, &op_fadd,	  3,   0, 255, 0xff, 0x01, 0x00, 0x02}, // fadd.dr d a  
	{0xb344, &op_fadd,	  4,   0, 255, 0xff, 0x01, 0x00, 0x02}, // fadd.dr e a  
	{0xb345, &op_fadd,	  5,   0, 255, 0xff, 0x01, 0x00, 0x02}, // fadd.dr f a  
	{0xb346, &op_fadd,	  6,   0, 255, 0xff, 0x01, 0x00, 0x02}, // fadd.dr g a  
	{0xb347, &op_fadd,	  7,   0, 255, 0xff, 0x01, 0x00, 0x02}, // fadd.dr h a  
	{0xb348, &op_fadd,	  0,   1, 255, 0xff, 0x01, 0x00, 0x02}, // fadd.dr a b  
	{0xb349, &op_fadd,	  1,   1, 255, 0xff, 0x01, 0x00, 0x02}, // fadd.dr b b  
	{0xb34a, &op_fadd,	  2,   1, 255, 0xff, 0x01, 0x00, 0x02}, // fadd.dr c b  
	{0xb34b, &op_fadd,	  3,   1, 255, 0xff, 0x01, 0x00, 0x02}, // fadd.dr d b  
	{0xb34c, &op_fadd,	  4,   1, 255, 0xff, 0x01, 0x00, 0x02}, // fadd.dr e b  
	{0xb34d, &op_fadd,	  5,   1, 255, 0xff, 0x01, 0x00, 0x02}, // fadd.dr f b  
	{0xb34e, &op_fadd,	  6,   1, 255, 0xff, 0x01, 0x00, 0x02}, // fadd.dr g b  
	{0xb34f, &op_fadd,	  7,   1, 255, 0xff, 0x01, 0x00, 0x02}, // fadd.dr h b  
	{0xb350, &op_fadd,	  0,   2, 255, 0xff, 0x01, 0x00, 0x02}, // fadd.dr a c  
	{0xb351, &op_fadd,	  1,   2, 255, 0xff, 0x01, 0x00, 0x02}, // fadd.dr b c  
	{0xb352, &op_fadd,	  2,   2, 255, 0xff, 0x01, 0x00, 0x02}, // fadd.dr c c  
	{0xb353, &op_fadd,	  3,   2, 255, 0xff, 0x01, 0x00, 0x02}, // fadd.dr d c  
	{0xb354, &op_fadd,	  4,   2, 255, 0xff, 0x01, 0x00, 0x02}, // fadd.dr e c  
	{0xb355, &op_fadd,	  5,   2, 255, 0xff, 0x01, 0x00, 0x02}, // fadd.dr f c  
	{0xb356, &op_fadd,	  6,   2, 255, 0xff, 0x01, 0x00, 0x02}, // fadd.dr g c  
	{0xb357, &op_fadd,	  7,   2, 255, 0xff, 0x01, 0x00, 0x02}, // fadd.dr h c  
	{0xb358, &op_fadd,	  0,   3, 255, 0xff, 0x01, 0x00, 0x02}, // fadd.dr a d  
	{0xb359, &op_fadd,	  1,   3, 255, 0xff, 0x01, 0x00, 0x02}, // fadd.dr b d  
	{0xb35a, &op_fadd,	  2,   3, 255, 0xff, 0x01, 0x00, 0x02}, // fadd.dr c d  
	{0xb35b, &op_fadd,	  3,   3, 255, 0xff, 0x01, 0x00, 0x02}, // fadd.dr d d  
	{0xb35c, &op_fadd,	  4,   3, 255, 0xff, 0x01, 0x00, 0x02}, // fadd.dr e d  
	{0xb35d, &op_fadd,	  5,   3, 255, 0xff, 0x01, 0x00, 0x02}, // fadd.dr f d  
	{0xb35e, &op_fadd,	  6,   3, 255, 0xff, 0x01, 0x00, 0x02}, // fadd.dr g d  
	{0xb35f, &op_fadd,	  7,   3, 255, 0xff, 0x01, 0x00, 0x02}, // fadd.dr h d  
	{0xb360, &op_fadd,	  0,   4, 255, 0xff, 0x01, 0x00, 0x02}, // fadd.dr a e  
	{0xb361, &op_fadd,	  1,   4, 255, 0xff, 0x01, 0x00, 0x02}, // fadd.dr b e  
	{0xb362, &op_fadd,	  2,   4, 255, 0xff, 0x01, 0x00, 0x02}, // fadd.dr c e  
	{0xb363, &op_fadd,	  3,   4, 255, 0xff, 0x01, 0x00, 0x02}, // fadd.dr d e  
	{0xb364, &op_fadd,	  4,   4, 255, 0xff, 0x01, 0x00, 0x02}, // fadd.dr e e  
	{0xb365, &op_fadd,	  5,   4, 255, 0xff, 0x01, 0x00, 0x02}, // fadd.dr f e  
	{0xb366, &op_fadd,	  6,   4, 255, 0xff, 0x01, 0x00, 0x02}, // fadd.dr g e  
	{0xb367, &op_fadd,	  7,   4, 255, 0xff, 0x01, 0x00, 0x02}, // fadd.dr h e  
	{0xb368, &op_fadd,	  0,   5, 255, 0xff, 0x01, 0x00, 0x02}, // fadd.dr a f  
	{0xb369, &op_fadd,	  1,   5, 255, 0xff, 0x01, 0x00, 0x02}, // fadd.dr b f  
	{0xb36a, &op_fadd,	  2,   5, 255, 0xff, 0x01, 0x00, 0x02}, // fadd.dr c f  
	{0xb36b, &op_fadd,	  3,   5, 255, 0xff, 0x01, 0x00, 0x02}, // fadd.dr d f  
	{0xb36c, &op_fadd,	  4,   5, 255, 0xff, 0x01, 0x00, 0x02}, // fadd.dr e f  
	{0xb36d, &op_fadd,	  5,   5, 255, 0xff, 0x01, 0x00, 0x02}, // fadd.dr f f  
	{0xb36e, &op_fadd,	  6,   5, 255, 0xff, 0x01, 0x00, 0x02}, // fadd.dr g f  
	{0xb36f, &op_fadd,	  7,   5, 255, 0xff, 0x01, 0x00, 0x02}, // fadd.dr h f  
	{0xb370, &op_fadd,	  0,   6, 255, 0xff, 0x01, 0x00, 0x02}, // fadd.dr a g  
	{0xb371, &op_fadd,	  1,   6, 255, 0xff, 0x01, 0x00, 0x02}, // fadd.dr b g  
	{0xb372, &op_fadd,	  2,   6, 255, 0xff, 0x01, 0x00, 0x02}, // fadd.dr c g  
	{0xb373, &op_fadd,	  3,   6, 255, 0xff, 0x01, 0x00, 0x02}, // fadd.dr d g  
	{0xb374, &op_fadd,	  4,   6, 255, 0xff, 0x01, 0x00, 0x02}, // fadd.dr e g  
	{0xb375, &op_fadd,	  5,   6, 255, 0xff, 0x01, 0x00, 0x02}, // fadd.dr f g  
	{0xb376, &op_fadd,	  6,   6, 255, 0xff, 0x01, 0x00, 0x02}, // fadd.dr g g  
	{0xb377, &op_fadd,	  7,   6, 255, 0xff, 0x01, 0x00, 0x02}, // fadd.dr h g  
	{0xb378, &op_fadd,	  0,   7, 255, 0xff, 0x01, 0x00, 0x02}, // fadd.dr a h  
	{0xb379, &op_fadd,	  1,   7, 255, 0xff, 0x01, 0x00, 0x02}, // fadd.dr b h  
	{0xb37a, &op_fadd,	  2,   7, 255, 0xff, 0x01, 0x00, 0x02}, // fadd.dr c h  
	{0xb37b, &op_fadd,	  3,   7, 255, 0xff, 0x01, 0x00, 0x02}, // fadd.dr d h  
	{0xb37c, &op_fadd,	  4,   7, 255, 0xff, 0x01, 0x00, 0x02}, // fadd.dr e h  
	{0xb37d, &op_fadd,	  5,   7, 255, 0xff, 0x01, 0x00, 0x02}, // fadd.dr f h  
	{0xb37e, &op_fadd,	  6,   7, 255, 0xff, 0x01, 0x00, 0x02}, // fadd.dr g h  
	{0xb37f, &op_fadd,	  7,   7, 255, 0xff, 0x01, 0x00, 0x02}, // fadd.dr h h  
	{0xb380, &op_fadd,	  0,   0, 255, 0xff, 0x01, 0x00, 0x04}, // fadd.r a a  
	{0xb381, &op_fadd,	  1,   0, 255, 0xff, 0x01, 0x00, 0x04}, // fadd.r b a  
	{0xb382, &op_fadd,	  2,   0, 255, 0xff, 0x01, 0x00, 0x04}, // fadd.r c a  
	{0xb383, &op_fadd,	  3,   0, 255, 0xff, 0x01, 0x00, 0x04}, // fadd.r d a  
	{0xb384, &op_fadd,	  4,   0, 255, 0xff, 0x01, 0x00, 0x04}, // fadd.r e a  
	{0xb385, &op_fadd,	  5,   0, 255, 0xff, 0x01, 0x00, 0x04}, // fadd.r f a  
	{0xb386, &op_fadd,	  6,   0, 255, 0xff, 0x01, 0x00, 0x04}, // fadd.r g a  
	{0xb387, &op_fadd,	  7,   0, 255, 0xff, 0x01, 0x00, 0x04}, // fadd.r h a  
	{0xb388, &op_fadd,	  0,   1, 255, 0xff, 0x01, 0x00, 0x04}, // fadd.r a b  
	{0xb389, &op_fadd,	  1,   1, 255, 0xff, 0x01, 0x00, 0x04}, // fadd.r b b  
	{0xb38a, &op_fadd,	  2,   1, 255, 0xff, 0x01, 0x00, 0x04}, // fadd.r c b  
	{0xb38b, &op_fadd,	  3,   1, 255, 0xff, 0x01, 0x00, 0x04}, // fadd.r d b  
	{0xb38c, &op_fadd,	  4,   1, 255, 0xff, 0x01, 0x00, 0x04}, // fadd.r e b  
	{0xb38d, &op_fadd,	  5,   1, 255, 0xff, 0x01, 0x00, 0x04}, // fadd.r f b  
	{0xb38e, &op_fadd,	  6,   1, 255, 0xff, 0x01, 0x00, 0x04}, // fadd.r g b  
	{0xb38f, &op_fadd,	  7,   1, 255, 0xff, 0x01, 0x00, 0x04}, // fadd.r h b  
	{0xb390, &op_fadd,	  0,   2, 255, 0xff, 0x01, 0x00, 0x04}, // fadd.r a c  
	{0xb391, &op_fadd,	  1,   2, 255, 0xff, 0x01, 0x00, 0x04}, // fadd.r b c  
	{0xb392, &op_fadd,	  2,   2, 255, 0xff, 0x01, 0x00, 0x04}, // fadd.r c c  
	{0xb393, &op_fadd,	  3,   2, 255, 0xff, 0x01, 0x00, 0x04}, // fadd.r d c  
	{0xb394, &op_fadd,	  4,   2, 255, 0xff, 0x01, 0x00, 0x04}, // fadd.r e c  
	{0xb395, &op_fadd,	  5,   2, 255, 0xff, 0x01, 0x00, 0x04}, // fadd.r f c  
	{0xb396, &op_fadd,	  6,   2, 255, 0xff, 0x01, 0x00, 0x04}, // fadd.r g c  
	{0xb397, &op_fadd,	  7,   2, 255, 0xff, 0x01, 0x00, 0x04}, // fadd.r h c  
	{0xb398, &op_fadd,	  0,   3, 255, 0xff, 0x01, 0x00, 0x04}, // fadd.r a d  
	{0xb399, &op_fadd,	  1,   3, 255, 0xff, 0x01, 0x00, 0x04}, // fadd.r b d  
	{0xb39a, &op_fadd,	  2,   3, 255, 0xff, 0x01, 0x00, 0x04}, // fadd.r c d  
	{0xb39b, &op_fadd,	  3,   3, 255, 0xff, 0x01, 0x00, 0x04}, // fadd.r d d  
	{0xb39c, &op_fadd,	  4,   3, 255, 0xff, 0x01, 0x00, 0x04}, // fadd.r e d  
	{0xb39d, &op_fadd,	  5,   3, 255, 0xff, 0x01, 0x00, 0x04}, // fadd.r f d  
	{0xb39e, &op_fadd,	  6,   3, 255, 0xff, 0x01, 0x00, 0x04}, // fadd.r g d  
	{0xb39f, &op_fadd,	  7,   3, 255, 0xff, 0x01, 0x00, 0x04}, // fadd.r h d  
	{0xb3a0, &op_fadd,	  0,   4, 255, 0xff, 0x01, 0x00, 0x04}, // fadd.r a e  
	{0xb3a1, &op_fadd,	  1,   4, 255, 0xff, 0x01, 0x00, 0x04}, // fadd.r b e  
	{0xb3a2, &op_fadd,	  2,   4, 255, 0xff, 0x01, 0x00, 0x04}, // fadd.r c e  
	{0xb3a3, &op_fadd,	  3,   4, 255, 0xff, 0x01, 0x00, 0x04}, // fadd.r d e  
	{0xb3a4, &op_fadd,	  4,   4, 255, 0xff, 0x01, 0x00, 0x04}, // fadd.r e e  
	{0xb3a5, &op_fadd,	  5,   4, 255, 0xff, 0x01, 0x00, 0x04}, // fadd.r f e  
	{0xb3a6, &op_fadd,	  6,   4, 255, 0xff, 0x01, 0x00, 0x04}, // fadd.r g e  
	{0xb3a7, &op_fadd,	  7,   4, 255, 0xff, 0x01, 0x00, 0x04}, // fadd.r h e  
	{0xb3a8, &op_fadd,	  0,   5, 255, 0xff, 0x01, 0x00, 0x04}, // fadd.r a f  
	{0xb3a9, &op_fadd,	  1,   5, 255, 0xff, 0x01, 0x00, 0x04}, // fadd.r b f  
	{0xb3aa, &op_fadd,	  2,   5, 255, 0xff, 0x01, 0x00, 0x04}, // fadd.r c f  
	{0xb3ab, &op_fadd,	  3,   5, 255, 0xff, 0x01, 0x00, 0x04}, // fadd.r d f  
	{0xb3ac, &op_fadd,	  4,   5, 255, 0xff, 0x01, 0x00, 0x04}, // fadd.r e f  
	{0xb3ad, &op_fadd,	  5,   5, 255, 0xff, 0x01, 0x00, 0x04}, // fadd.r f f  
	{0xb3ae, &op_fadd,	  6,   5, 255, 0xff, 0x01, 0x00, 0x04}, // fadd.r g f  
	{0xb3af, &op_fadd,	  7,   5, 255, 0xff, 0x01, 0x00, 0x04}, // fadd.r h f  
	{0xb3b0, &op_fadd,	  0,   6, 255, 0xff, 0x01, 0x00, 0x04}, // fadd.r a g  
	{0xb3b1, &op_fadd,	  1,   6, 255, 0xff, 0x01, 0x00, 0x04}, // fadd.r b g  
	{0xb3b2, &op_fadd,	  2,   6, 255, 0xff, 0x01, 0x00, 0x04}, // fadd.r c g  
	{0xb3b3, &op_fadd,	  3,   6, 255, 0xff, 0x01, 0x00, 0x04}, // fadd.r d g  
	{0xb3b4, &op_fadd,	  4,   6, 255, 0xff, 0x01, 0x00, 0x04}, // fadd.r e g  
	{0xb3b5, &op_fadd,	  5,   6, 255, 0xff, 0x01, 0x00, 0x04}, // fadd.r f g  
	{0xb3b6, &op_fadd,	  6,   6, 255, 0xff, 0x01, 0x00, 0x04}, // fadd.r g g  
	{0xb3b7, &op_fadd,	  7,   6, 255, 0xff, 0x01, 0x00, 0x04}, // fadd.r h g  
	{0xb3b8, &op_fadd,	  0,   7, 255, 0xff, 0x01, 0x00, 0x04}, // fadd.r a h  
	{0xb3b9, &op_fadd,	  1,   7, 255, 0xff, 0x01, 0x00, 0x04}, // fadd.r b h  
	{0xb3ba, &op_fadd,	  2,   7, 255, 0xff, 0x01, 0x00, 0x04}, // fadd.r c h  
	{0xb3bb, &op_fadd,	  3,   7, 255, 0xff, 0x01, 0x00, 0x04}, // fadd.r d h  
	{0xb3bc, &op_fadd,	  4,   7, 255, 0xff, 0x01, 0x00, 0x04}, // fadd.r e h  
	{0xb3bd, &op_fadd,	  5,   7, 255, 0xff, 0x01, 0x00, 0x04}, // fadd.r f h  
	{0xb3be, &op_fadd,	  6,   7, 255, 0xff, 0x01, 0x00, 0x04}, // fadd.r g h  
	{0xb3bf, &op_fadd,	  7,   7, 255, 0xff, 0x01, 0x00, 0x04}, // fadd.r h h  
	{0xb2c8, &op_fadd,	  0,   8, 255, 0xff, 0x00, 0x01, 0x01}, // fadd.wi a <literal>  
	{0xb2c9, &op_fadd,	  1,   8, 255, 0xff, 0x00, 0x01, 0x01}, // fadd.wi b <literal>  
	{0xb2ca, &op_fadd,	  2,   8, 255, 0xff, 0x00, 0x01, 0x01}, // fadd.wi c <literal>  
	{0xb2cb, &op_fadd,	  3,   8, 255, 0xff, 0x00, 0x01, 0x01}, // fadd.wi d <literal>  
	{0xb2cc, &op_fadd,	  4,   8, 255, 0xff, 0x00, 0x01, 0x01}, // fadd.wi e <literal>  
	{0xb2cd, &op_fadd,	  5,   8, 255, 0xff, 0x00, 0x01, 0x01}, // fadd.wi f <literal>  
	{0xb2ce, &op_fadd,	  6,   8, 255, 0xff, 0x00, 0x01, 0x01}, // fadd.wi g <literal>  
	{0xb2cf, &op_fadd,	  7,   8, 255, 0xff, 0x00, 0x01, 0x01}, // fadd.wi h <literal>  
	{0xb2d0, &op_fadd,	  0,   8, 255, 0xff, 0x00, 0x02, 0x02}, // fadd.di a <literal>  
	{0xb2d1, &op_fadd,	  1,   8, 255, 0xff, 0x00, 0x02, 0x02}, // fadd.di b <literal>  
	{0xb2d2, &op_fadd,	  2,   8, 255, 0xff, 0x00, 0x02, 0x02}, // fadd.di c <literal>  
	{0xb2d3, &op_fadd,	  3,   8, 255, 0xff, 0x00, 0x02, 0x02}, // fadd.di d <literal>  
	{0xb2d4, &op_fadd,	  4,   8, 255, 0xff, 0x00, 0x02, 0x02}, // fadd.di e <literal>  
	{0xb2d5, &op_fadd,	  5,   8, 255, 0xff, 0x00, 0x02, 0x02}, // fadd.di f <literal>  
	{0xb2d6, &op_fadd,	  6,   8, 255, 0xff, 0x00, 0x02, 0x02}, // fadd.di g <literal>  
	{0xb2d7, &op_fadd,	  7,   8, 255, 0xff, 0x00, 0x02, 0x02}, // fadd.di h <literal>  
	{0xb2e0, &op_fadd,	  0,   8, 255, 0xff, 0x00, 0x04, 0x04}, // fadd.i a <literal>  
	{0xb2e1, &op_fadd,	  1,   8, 255, 0xff, 0x00, 0x04, 0x04}, // fadd.i b <literal>  
	{0xb2e2, &op_fadd,	  2,   8, 255, 0xff, 0x00, 0x04, 0x04}, // fadd.i c <literal>  
	{0xb2e3, &op_fadd,	  3,   8, 255, 0xff, 0x00, 0x04, 0x04}, // fadd.i d <literal>  
	{0xb2e4, &op_fadd,	  4,   8, 255, 0xff, 0x00, 0x04, 0x04}, // fadd.i e <literal>  
	{0xb2e5, &op_fadd,	  5,   8, 255, 0xff, 0x00, 0x04, 0x04}, // fadd.i f <literal>  
	{0xb2e6, &op_fadd,	  6,   8, 255, 0xff, 0x00, 0x04, 0x04}, // fadd.i g <literal>  
	{0xb2e7, &op_fadd,	  7,   8, 255, 0xff, 0x00, 0x04, 0x04}, // fadd.i h <literal>  
	{0xb3c8, &op_fadd,	  0,   8, 255, 0xff, 0x01, 0x04, 0x01}, // fadd.wri a <literal>  
	{0xb3c9, &op_fadd,	  1,   8, 255, 0xff, 0x01, 0x04, 0x01}, // fadd.wri b <literal>  
	{0xb3ca, &op_fadd,	  2,   8, 255, 0xff, 0x01, 0x04, 0x01}, // fadd.wri c <literal>  
	{0xb3cb, &op_fadd,	  3,   8, 255, 0xff, 0x01, 0x04, 0x01}, // fadd.wri d <literal>  
	{0xb3cc, &op_fadd,	  4,   8, 255, 0xff, 0x01, 0x04, 0x01}, // fadd.wri e <literal>  
	{0xb3cd, &op_fadd,	  5,   8, 255, 0xff, 0x01, 0x04, 0x01}, // fadd.wri f <literal>  
	{0xb3ce, &op_fadd,	  6,   8, 255, 0xff, 0x01, 0x04, 0x01}, // fadd.wri g <literal>  
	{0xb3cf, &op_fadd,	  7,   8, 255, 0xff, 0x01, 0x04, 0x01}, // fadd.wri h <literal>  
	{0xb3d0, &op_fadd,	  0,   8, 255, 0xff, 0x01, 0x04, 0x02}, // fadd.dri a <literal>  
	{0xb3d1, &op_fadd,	  1,   8, 255, 0xff, 0x01, 0x04, 0x02}, // fadd.dri b <literal>  
	{0xb3d2, &op_fadd,	  2,   8, 255, 0xff, 0x01, 0x04, 0x02}, // fadd.dri c <literal>  
	{0xb3d3, &op_fadd,	  3,   8, 255, 0xff, 0x01, 0x04, 0x02}, // fadd.dri d <literal>  
	{0xb3d4, &op_fadd,	  4,   8, 255, 0xff, 0x01, 0x04, 0x02}, // fadd.dri e <literal>  
	{0xb3d5, &op_fadd,	  5,   8, 255, 0xff, 0x01, 0x04, 0x02}, // fadd.dri f <literal>  
	{0xb3d6, &op_fadd,	  6,   8, 255, 0xff, 0x01, 0x04, 0x02}, // fadd.dri g <literal>  
	{0xb3d7, &op_fadd,	  7,   8, 255, 0xff, 0x01, 0x04, 0x02}, // fadd.dri h <literal>  
	{0xb3e0, &op_fadd,	  0,   8, 255, 0xff, 0x01, 0x04, 0x04}, // fadd.ri a <literal>  
	{0xb3e1, &op_fadd,	  1,   8, 255, 0xff, 0x01, 0x04, 0x04}, // fadd.ri b <literal>  
	{0xb3e2, &op_fadd,	  2,   8, 255, 0xff, 0x01, 0x04, 0x04}, // fadd.ri c <literal>  
	{0xb3e3, &op_fadd,	  3,   8, 255, 0xff, 0x01, 0x04, 0x04}, // fadd.ri d <literal>  
	{0xb3e4, &op_fadd,	  4,   8, 255, 0xff, 0x01, 0x04, 0x04}, // fadd.ri e <literal>  
	{0xb3e5, &op_fadd,	  5,   8, 255, 0xff, 0x01, 0x04, 0x04}, // fadd.ri f <literal>  
	{0xb3e6, &op_fadd,	  6,   8, 255, 0xff, 0x01, 0x04, 0x04}, // fadd.ri g <literal>  
	{0xb3e7, &op_fadd,	  7,   8, 255, 0xff, 0x01, 0x04, 0x04}, // fadd.ri h <literal>  
	{0xb400, &op_fpow,	  0,   0, 255, 0xff, 0x00, 0x00, 0x01}, // fpow.w a a  
	{0xb401, &op_fpow,	  1,   0, 255, 0xff, 0x00, 0x00, 0x01}, // fpow.w b a  
	{0xb402, &op_fpow,	  2,   0, 255, 0xff, 0x00, 0x00, 0x01}, // fpow.w c a  
	{0xb403, &op_fpow,	  3,   0, 255, 0xff, 0x00, 0x00, 0x01}, // fpow.w d a  
	{0xb404, &op_fpow,	  4,   0, 255, 0xff, 0x00, 0x00, 0x01}, // fpow.w e a  
	{0xb405, &op_fpow,	  5,   0, 255, 0xff, 0x00, 0x00, 0x01}, // fpow.w f a  
	{0xb406, &op_fpow,	  6,   0, 255, 0xff, 0x00, 0x00, 0x01}, // fpow.w g a  
	{0xb407, &op_fpow,	  7,   0, 255, 0xff, 0x00, 0x00, 0x01}, // fpow.w h a  
	{0xb408, &op_fpow,	  0,   1, 255, 0xff, 0x00, 0x00, 0x01}, // fpow.w a b  
	{0xb409, &op_fpow,	  1,   1, 255, 0xff, 0x00, 0x00, 0x01}, // fpow.w b b  
	{0xb40a, &op_fpow,	  2,   1, 255, 0xff, 0x00, 0x00, 0x01}, // fpow.w c b  
	{0xb40b, &op_fpow,	  3,   1, 255, 0xff, 0x00, 0x00, 0x01}, // fpow.w d b  
	{0xb40c, &op_fpow,	  4,   1, 255, 0xff, 0x00, 0x00, 0x01}, // fpow.w e b  
	{0xb40d, &op_fpow,	  5,   1, 255, 0xff, 0x00, 0x00, 0x01}, // fpow.w f b  
	{0xb40e, &op_fpow,	  6,   1, 255, 0xff, 0x00, 0x00, 0x01}, // fpow.w g b  
	{0xb40f, &op_fpow,	  7,   1, 255, 0xff, 0x00, 0x00, 0x01}, // fpow.w h b  
	{0xb410, &op_fpow,	  0,   2, 255, 0xff, 0x00, 0x00, 0x01}, // fpow.w a c  
	{0xb411, &op_fpow,	  1,   2, 255, 0xff, 0x00, 0x00, 0x01}, // fpow.w b c  
	{0xb412, &op_fpow,	  2,   2, 255, 0xff, 0x00, 0x00, 0x01}, // fpow.w c c  
	{0xb413, &op_fpow,	  3,   2, 255, 0xff, 0x00, 0x00, 0x01}, // fpow.w d c  
	{0xb414, &op_fpow,	  4,   2, 255, 0xff, 0x00, 0x00, 0x01}, // fpow.w e c  
	{0xb415, &op_fpow,	  5,   2, 255, 0xff, 0x00, 0x00, 0x01}, // fpow.w f c  
	{0xb416, &op_fpow,	  6,   2, 255, 0xff, 0x00, 0x00, 0x01}, // fpow.w g c  
	{0xb417, &op_fpow,	  7,   2, 255, 0xff, 0x00, 0x00, 0x01}, // fpow.w h c  
	{0xb418, &op_fpow,	  0,   3, 255, 0xff, 0x00, 0x00, 0x01}, // fpow.w a d  
	{0xb419, &op_fpow,	  1,   3, 255, 0xff, 0x00, 0x00, 0x01}, // fpow.w b d  
	{0xb41a, &op_fpow,	  2,   3, 255, 0xff, 0x00, 0x00, 0x01}, // fpow.w c d  
	{0xb41b, &op_fpow,	  3,   3, 255, 0xff, 0x00, 0x00, 0x01}, // fpow.w d d  
	{0xb41c, &op_fpow,	  4,   3, 255, 0xff, 0x00, 0x00, 0x01}, // fpow.w e d  
	{0xb41d, &op_fpow,	  5,   3, 255, 0xff, 0x00, 0x00, 0x01}, // fpow.w f d  
	{0xb41e, &op_fpow,	  6,   3, 255, 0xff, 0x00, 0x00, 0x01}, // fpow.w g d  
	{0xb41f, &op_fpow,	  7,   3, 255, 0xff, 0x00, 0x00, 0x01}, // fpow.w h d  
	{0xb420, &op_fpow,	  0,   4, 255, 0xff, 0x00, 0x00, 0x01}, // fpow.w a e  
	{0xb421, &op_fpow,	  1,   4, 255, 0xff, 0x00, 0x00, 0x01}, // fpow.w b e  
	{0xb422, &op_fpow,	  2,   4, 255, 0xff, 0x00, 0x00, 0x01}, // fpow.w c e  
	{0xb423, &op_fpow,	  3,   4, 255, 0xff, 0x00, 0x00, 0x01}, // fpow.w d e  
	{0xb424, &op_fpow,	  4,   4, 255, 0xff, 0x00, 0x00, 0x01}, // fpow.w e e  
	{0xb425, &op_fpow,	  5,   4, 255, 0xff, 0x00, 0x00, 0x01}, // fpow.w f e  
	{0xb426, &op_fpow,	  6,   4, 255, 0xff, 0x00, 0x00, 0x01}, // fpow.w g e  
	{0xb427, &op_fpow,	  7,   4, 255, 0xff, 0x00, 0x00, 0x01}, // fpow.w h e  
	{0xb428, &op_fpow,	  0,   5, 255, 0xff, 0x00, 0x00, 0x01}, // fpow.w a f  
	{0xb429, &op_fpow,	  1,   5, 255, 0xff, 0x00, 0x00, 0x01}, // fpow.w b f  
	{0xb42a, &op_fpow,	  2,   5, 255, 0xff, 0x00, 0x00, 0x01}, // fpow.w c f  
	{0xb42b, &op_fpow,	  3,   5, 255, 0xff, 0x00, 0x00, 0x01}, // fpow.w d f  
	{0xb42c, &op_fpow,	  4,   5, 255, 0xff, 0x00, 0x00, 0x01}, // fpow.w e f  
	{0xb42d, &op_fpow,	  5,   5, 255, 0xff, 0x00, 0x00, 0x01}, // fpow.w f f  
	{0xb42e, &op_fpow,	  6,   5, 255, 0xff, 0x00, 0x00, 0x01}, // fpow.w g f  
	{0xb42f, &op_fpow,	  7,   5, 255, 0xff, 0x00, 0x00, 0x01}, // fpow.w h f  
	{0xb430, &op_fpow,	  0,   6, 255, 0xff, 0x00, 0x00, 0x01}, // fpow.w a g  
	{0xb431, &op_fpow,	  1,   6, 255, 0xff, 0x00, 0x00, 0x01}, // fpow.w b g  
	{0xb432, &op_fpow,	  2,   6, 255, 0xff, 0x00, 0x00, 0x01}, // fpow.w c g  
	{0xb433, &op_fpow,	  3,   6, 255, 0xff, 0x00, 0x00, 0x01}, // fpow.w d g  
	{0xb434, &op_fpow,	  4,   6, 255, 0xff, 0x00, 0x00, 0x01}, // fpow.w e g  
	{0xb435, &op_fpow,	  5,   6, 255, 0xff, 0x00, 0x00, 0x01}, // fpow.w f g  
	{0xb436, &op_fpow,	  6,   6, 255, 0xff, 0x00, 0x00, 0x01}, // fpow.w g g  
	{0xb437, &op_fpow,	  7,   6, 255, 0xff, 0x00, 0x00, 0x01}, // fpow.w h g  
	{0xb438, &op_fpow,	  0,   7, 255, 0xff, 0x00, 0x00, 0x01}, // fpow.w a h  
	{0xb439, &op_fpow,	  1,   7, 255, 0xff, 0x00, 0x00, 0x01}, // fpow.w b h  
	{0xb43a, &op_fpow,	  2,   7, 255, 0xff, 0x00, 0x00, 0x01}, // fpow.w c h  
	{0xb43b, &op_fpow,	  3,   7, 255, 0xff, 0x00, 0x00, 0x01}, // fpow.w d h  
	{0xb43c, &op_fpow,	  4,   7, 255, 0xff, 0x00, 0x00, 0x01}, // fpow.w e h  
	{0xb43d, &op_fpow,	  5,   7, 255, 0xff, 0x00, 0x00, 0x01}, // fpow.w f h  
	{0xb43e, &op_fpow,	  6,   7, 255, 0xff, 0x00, 0x00, 0x01}, // fpow.w g h  
	{0xb43f, &op_fpow,	  7,   7, 255, 0xff, 0x00, 0x00, 0x01}, // fpow.w h h  
	{0xb440, &op_fpow,	  0,   0, 255, 0xff, 0x00, 0x00, 0x02}, // fpow.d a a  
	{0xb441, &op_fpow,	  1,   0, 255, 0xff, 0x00, 0x00, 0x02}, // fpow.d b a  
	{0xb442, &op_fpow,	  2,   0, 255, 0xff, 0x00, 0x00, 0x02}, // fpow.d c a  
	{0xb443, &op_fpow,	  3,   0, 255, 0xff, 0x00, 0x00, 0x02}, // fpow.d d a  
	{0xb444, &op_fpow,	  4,   0, 255, 0xff, 0x00, 0x00, 0x02}, // fpow.d e a  
	{0xb445, &op_fpow,	  5,   0, 255, 0xff, 0x00, 0x00, 0x02}, // fpow.d f a  
	{0xb446, &op_fpow,	  6,   0, 255, 0xff, 0x00, 0x00, 0x02}, // fpow.d g a  
	{0xb447, &op_fpow,	  7,   0, 255, 0xff, 0x00, 0x00, 0x02}, // fpow.d h a  
	{0xb448, &op_fpow,	  0,   1, 255, 0xff, 0x00, 0x00, 0x02}, // fpow.d a b  
	{0xb449, &op_fpow,	  1,   1, 255, 0xff, 0x00, 0x00, 0x02}, // fpow.d b b  
	{0xb44a, &op_fpow,	  2,   1, 255, 0xff, 0x00, 0x00, 0x02}, // fpow.d c b  
	{0xb44b, &op_fpow,	  3,   1, 255, 0xff, 0x00, 0x00, 0x02}, // fpow.d d b  
	{0xb44c, &op_fpow,	  4,   1, 255, 0xff, 0x00, 0x00, 0x02}, // fpow.d e b  
	{0xb44d, &op_fpow,	  5,   1, 255, 0xff, 0x00, 0x00, 0x02}, // fpow.d f b  
	{0xb44e, &op_fpow,	  6,   1, 255, 0xff, 0x00, 0x00, 0x02}, // fpow.d g b  
	{0xb44f, &op_fpow,	  7,   1, 255, 0xff, 0x00, 0x00, 0x02}, // fpow.d h b  
	{0xb450, &op_fpow,	  0,   2, 255, 0xff, 0x00, 0x00, 0x02}, // fpow.d a c  
	{0xb451, &op_fpow,	  1,   2, 255, 0xff, 0x00, 0x00, 0x02}, // fpow.d b c  
	{0xb452, &op_fpow,	  2,   2, 255, 0xff, 0x00, 0x00, 0x02}, // fpow.d c c  
	{0xb453, &op_fpow,	  3,   2, 255, 0xff, 0x00, 0x00, 0x02}, // fpow.d d c  
	{0xb454, &op_fpow,	  4,   2, 255, 0xff, 0x00, 0x00, 0x02}, // fpow.d e c  
	{0xb455, &op_fpow,	  5,   2, 255, 0xff, 0x00, 0x00, 0x02}, // fpow.d f c  
	{0xb456, &op_fpow,	  6,   2, 255, 0xff, 0x00, 0x00, 0x02}, // fpow.d g c  
	{0xb457, &op_fpow,	  7,   2, 255, 0xff, 0x00, 0x00, 0x02}, // fpow.d h c  
	{0xb458, &op_fpow,	  0,   3, 255, 0xff, 0x00, 0x00, 0x02}, // fpow.d a d  
	{0xb459, &op_fpow,	  1,   3, 255, 0xff, 0x00, 0x00, 0x02}, // fpow.d b d  
	{0xb45a, &op_fpow,	  2,   3, 255, 0xff, 0x00, 0x00, 0x02}, // fpow.d c d  
	{0xb45b, &op_fpow,	  3,   3, 255, 0xff, 0x00, 0x00, 0x02}, // fpow.d d d  
	{0xb45c, &op_fpow,	  4,   3, 255, 0xff, 0x00, 0x00, 0x02}, // fpow.d e d  
	{0xb45d, &op_fpow,	  5,   3, 255, 0xff, 0x00, 0x00, 0x02}, // fpow.d f d  
	{0xb45e, &op_fpow,	  6,   3, 255, 0xff, 0x00, 0x00, 0x02}, // fpow.d g d  
	{0xb45f, &op_fpow,	  7,   3, 255, 0xff, 0x00, 0x00, 0x02}, // fpow.d h d  
	{0xb460, &op_fpow,	  0,   4, 255, 0xff, 0x00, 0x00, 0x02}, // fpow.d a e  
	{0xb461, &op_fpow,	  1,   4, 255, 0xff, 0x00, 0x00, 0x02}, // fpow.d b e  
	{0xb462, &op_fpow,	  2,   4, 255, 0xff, 0x00, 0x00, 0x02}, // fpow.d c e  
	{0xb463, &op_fpow,	  3,   4, 255, 0xff, 0x00, 0x00, 0x02}, // fpow.d d e  
	{0xb464, &op_fpow,	  4,   4, 255, 0xff, 0x00, 0x00, 0x02}, // fpow.d e e  
	{0xb465, &op_fpow,	  5,   4, 255, 0xff, 0x00, 0x00, 0x02}, // fpow.d f e  
	{0xb466, &op_fpow,	  6,   4, 255, 0xff, 0x00, 0x00, 0x02}, // fpow.d g e  
	{0xb467, &op_fpow,	  7,   4, 255, 0xff, 0x00, 0x00, 0x02}, // fpow.d h e  
	{0xb468, &op_fpow,	  0,   5, 255, 0xff, 0x00, 0x00, 0x02}, // fpow.d a f  
	{0xb469, &op_fpow,	  1,   5, 255, 0xff, 0x00, 0x00, 0x02}, // fpow.d b f  
	{0xb46a, &op_fpow,	  2,   5, 255, 0xff, 0x00, 0x00, 0x02}, // fpow.d c f  
	{0xb46b, &op_fpow,	  3,   5, 255, 0xff, 0x00, 0x00, 0x02}, // fpow.d d f  
	{0xb46c, &op_fpow,	  4,   5, 255, 0xff, 0x00, 0x00, 0x02}, // fpow.d e f  
	{0xb46d, &op_fpow,	  5,   5, 255, 0xff, 0x00, 0x00, 0x02}, // fpow.d f f  
	{0xb46e, &op_fpow,	  6,   5, 255, 0xff, 0x00, 0x00, 0x02}, // fpow.d g f  
	{0xb46f, &op_fpow,	  7,   5, 255, 0xff, 0x00, 0x00, 0x02}, // fpow.d h f  
	{0xb470, &op_fpow,	  0,   6, 255, 0xff, 0x00, 0x00, 0x02}, // fpow.d a g  
	{0xb471, &op_fpow,	  1,   6, 255, 0xff, 0x00, 0x00, 0x02}, // fpow.d b g  
	{0xb472, &op_fpow,	  2,   6, 255, 0xff, 0x00, 0x00, 0x02}, // fpow.d c g  
	{0xb473, &op_fpow,	  3,   6, 255, 0xff, 0x00, 0x00, 0x02}, // fpow.d d g  
	{0xb474, &op_fpow,	  4,   6, 255, 0xff, 0x00, 0x00, 0x02}, // fpow.d e g  
	{0xb475, &op_fpow,	  5,   6, 255, 0xff, 0x00, 0x00, 0x02}, // fpow.d f g  
	{0xb476, &op_fpow,	  6,   6, 255, 0xff, 0x00, 0x00, 0x02}, // fpow.d g g  
	{0xb477, &op_fpow,	  7,   6, 255, 0xff, 0x00, 0x00, 0x02}, // fpow.d h g  
	{0xb478, &op_fpow,	  0,   7, 255, 0xff, 0x00, 0x00, 0x02}, // fpow.d a h  
	{0xb479, &op_fpow,	  1,   7, 255, 0xff, 0x00, 0x00, 0x02}, // fpow.d b h  
	{0xb47a, &op_fpow,	  2,   7, 255, 0xff, 0x00, 0x00, 0x02}, // fpow.d c h  
	{0xb47b, &op_fpow,	  3,   7, 255, 0xff, 0x00, 0x00, 0x02}, // fpow.d d h  
	{0xb47c, &op_fpow,	  4,   7, 255, 0xff, 0x00, 0x00, 0x02}, // fpow.d e h  
	{0xb47d, &op_fpow,	  5,   7, 255, 0xff, 0x00, 0x00, 0x02}, // fpow.d f h  
	{0xb47e, &op_fpow,	  6,   7, 255, 0xff, 0x00, 0x00, 0x02}, // fpow.d g h  
	{0xb47f, &op_fpow,	  7,   7, 255, 0xff, 0x00, 0x00, 0x02}, // fpow.d h h  
	{0xb480, &op_fpow,	  0,   0, 255, 0xff, 0x00, 0x00, 0x04}, // fpow a a  
	{0xb481, &op_fpow,	  1,   0, 255, 0xff, 0x00, 0x00, 0x04}, // fpow b a  
	{0xb482, &op_fpow,	  2,   0, 255, 0xff, 0x00, 0x00, 0x04}, // fpow c a  
	{0xb483, &op_fpow,	  3,   0, 255, 0xff, 0x00, 0x00, 0x04}, // fpow d a  
	{0xb484, &op_fpow,	  4,   0, 255, 0xff, 0x00, 0x00, 0x04}, // fpow e a  
	{0xb485, &op_fpow,	  5,   0, 255, 0xff, 0x00, 0x00, 0x04}, // fpow f a  
	{0xb486, &op_fpow,	  6,   0, 255, 0xff, 0x00, 0x00, 0x04}, // fpow g a  
	{0xb487, &op_fpow,	  7,   0, 255, 0xff, 0x00, 0x00, 0x04}, // fpow h a  
	{0xb488, &op_fpow,	  0,   1, 255, 0xff, 0x00, 0x00, 0x04}, // fpow a b  
	{0xb489, &op_fpow,	  1,   1, 255, 0xff, 0x00, 0x00, 0x04}, // fpow b b  
	{0xb48a, &op_fpow,	  2,   1, 255, 0xff, 0x00, 0x00, 0x04}, // fpow c b  
	{0xb48b, &op_fpow,	  3,   1, 255, 0xff, 0x00, 0x00, 0x04}, // fpow d b  
	{0xb48c, &op_fpow,	  4,   1, 255, 0xff, 0x00, 0x00, 0x04}, // fpow e b  
	{0xb48d, &op_fpow,	  5,   1, 255, 0xff, 0x00, 0x00, 0x04}, // fpow f b  
	{0xb48e, &op_fpow,	  6,   1, 255, 0xff, 0x00, 0x00, 0x04}, // fpow g b  
	{0xb48f, &op_fpow,	  7,   1, 255, 0xff, 0x00, 0x00, 0x04}, // fpow h b  
	{0xb490, &op_fpow,	  0,   2, 255, 0xff, 0x00, 0x00, 0x04}, // fpow a c  
	{0xb491, &op_fpow,	  1,   2, 255, 0xff, 0x00, 0x00, 0x04}, // fpow b c  
	{0xb492, &op_fpow,	  2,   2, 255, 0xff, 0x00, 0x00, 0x04}, // fpow c c  
	{0xb493, &op_fpow,	  3,   2, 255, 0xff, 0x00, 0x00, 0x04}, // fpow d c  
	{0xb494, &op_fpow,	  4,   2, 255, 0xff, 0x00, 0x00, 0x04}, // fpow e c  
	{0xb495, &op_fpow,	  5,   2, 255, 0xff, 0x00, 0x00, 0x04}, // fpow f c  
	{0xb496, &op_fpow,	  6,   2, 255, 0xff, 0x00, 0x00, 0x04}, // fpow g c  
	{0xb497, &op_fpow,	  7,   2, 255, 0xff, 0x00, 0x00, 0x04}, // fpow h c  
	{0xb498, &op_fpow,	  0,   3, 255, 0xff, 0x00, 0x00, 0x04}, // fpow a d  
	{0xb499, &op_fpow,	  1,   3, 255, 0xff, 0x00, 0x00, 0x04}, // fpow b d  
	{0xb49a, &op_fpow,	  2,   3, 255, 0xff, 0x00, 0x00, 0x04}, // fpow c d  
	{0xb49b, &op_fpow,	  3,   3, 255, 0xff, 0x00, 0x00, 0x04}, // fpow d d  
	{0xb49c, &op_fpow,	  4,   3, 255, 0xff, 0x00, 0x00, 0x04}, // fpow e d  
	{0xb49d, &op_fpow,	  5,   3, 255, 0xff, 0x00, 0x00, 0x04}, // fpow f d  
	{0xb49e, &op_fpow,	  6,   3, 255, 0xff, 0x00, 0x00, 0x04}, // fpow g d  
	{0xb49f, &op_fpow,	  7,   3, 255, 0xff, 0x00, 0x00, 0x04}, // fpow h d  
	{0xb4a0, &op_fpow,	  0,   4, 255, 0xff, 0x00, 0x00, 0x04}, // fpow a e  
	{0xb4a1, &op_fpow,	  1,   4, 255, 0xff, 0x00, 0x00, 0x04}, // fpow b e  
	{0xb4a2, &op_fpow,	  2,   4, 255, 0xff, 0x00, 0x00, 0x04}, // fpow c e  
	{0xb4a3, &op_fpow,	  3,   4, 255, 0xff, 0x00, 0x00, 0x04}, // fpow d e  
	{0xb4a4, &op_fpow,	  4,   4, 255, 0xff, 0x00, 0x00, 0x04}, // fpow e e  
	{0xb4a5, &op_fpow,	  5,   4, 255, 0xff, 0x00, 0x00, 0x04}, // fpow f e  
	{0xb4a6, &op_fpow,	  6,   4, 255, 0xff, 0x00, 0x00, 0x04}, // fpow g e  
	{0xb4a7, &op_fpow,	  7,   4, 255, 0xff, 0x00, 0x00, 0x04}, // fpow h e  
	{0xb4a8, &op_fpow,	  0,   5, 255, 0xff, 0x00, 0x00, 0x04}, // fpow a f  
	{0xb4a9, &op_fpow,	  1,   5, 255, 0xff, 0x00, 0x00, 0x04}, // fpow b f  
	{0xb4aa, &op_fpow,	  2,   5, 255, 0xff, 0x00, 0x00, 0x04}, // fpow c f  
	{0xb4ab, &op_fpow,	  3,   5, 255, 0xff, 0x00, 0x00, 0x04}, // fpow d f  
	{0xb4ac, &op_fpow,	  4,   5, 255, 0xff, 0x00, 0x00, 0x04}, // fpow e f  
	{0xb4ad, &op_fpow,	  5,   5, 255, 0xff, 0x00, 0x00, 0x04}, // fpow f f  
	{0xb4ae, &op_fpow,	  6,   5, 255, 0xff, 0x00, 0x00, 0x04}, // fpow g f  
	{0xb4af, &op_fpow,	  7,   5, 255, 0xff, 0x00, 0x00, 0x04}, // fpow h f  
	{0xb4b0, &op_fpow,	  0,   6, 255, 0xff, 0x00, 0x00, 0x04}, // fpow a g  
	{0xb4b1, &op_fpow,	  1,   6, 255, 0xff, 0x00, 0x00, 0x04}, // fpow b g  
	{0xb4b2, &op_fpow,	  2,   6, 255, 0xff, 0x00, 0x00, 0x04}, // fpow c g  
	{0xb4b3, &op_fpow,	  3,   6, 255, 0xff, 0x00, 0x00, 0x04}, // fpow d g  
	{0xb4b4, &op_fpow,	  4,   6, 255, 0xff, 0x00, 0x00, 0x04}, // fpow e g  
	{0xb4b5, &op_fpow,	  5,   6, 255, 0xff, 0x00, 0x00, 0x04}, // fpow f g  
	{0xb4b6, &op_fpow,	  6,   6, 255, 0xff, 0x00, 0x00, 0x04}, // fpow g g  
	{0xb4b7, &op_fpow,	  7,   6, 255, 0xff, 0x00, 0x00, 0x04}, // fpow h g  
	{0xb4b8, &op_fpow,	  0,   7, 255, 0xff, 0x00, 0x00, 0x04}, // fpow a h  
	{0xb4b9, &op_fpow,	  1,   7, 255, 0xff, 0x00, 0x00, 0x04}, // fpow b h  
	{0xb4ba, &op_fpow,	  2,   7, 255, 0xff, 0x00, 0x00, 0x04}, // fpow c h  
	{0xb4bb, &op_fpow,	  3,   7, 255, 0xff, 0x00, 0x00, 0x04}, // fpow d h  
	{0xb4bc, &op_fpow,	  4,   7, 255, 0xff, 0x00, 0x00, 0x04}, // fpow e h  
	{0xb4bd, &op_fpow,	  5,   7, 255, 0xff, 0x00, 0x00, 0x04}, // fpow f h  
	{0xb4be, &op_fpow,	  6,   7, 255, 0xff, 0x00, 0x00, 0x04}, // fpow g h  
	{0xb4bf, &op_fpow,	  7,   7, 255, 0xff, 0x00, 0x00, 0x04}, // fpow h h  
	{0xb500, &op_fpow,	  0,   0, 255, 0xff, 0x01, 0x00, 0x01}, // fpow.wr a a  
	{0xb501, &op_fpow,	  1,   0, 255, 0xff, 0x01, 0x00, 0x01}, // fpow.wr b a  
	{0xb502, &op_fpow,	  2,   0, 255, 0xff, 0x01, 0x00, 0x01}, // fpow.wr c a  
	{0xb503, &op_fpow,	  3,   0, 255, 0xff, 0x01, 0x00, 0x01}, // fpow.wr d a  
	{0xb504, &op_fpow,	  4,   0, 255, 0xff, 0x01, 0x00, 0x01}, // fpow.wr e a  
	{0xb505, &op_fpow,	  5,   0, 255, 0xff, 0x01, 0x00, 0x01}, // fpow.wr f a  
	{0xb506, &op_fpow,	  6,   0, 255, 0xff, 0x01, 0x00, 0x01}, // fpow.wr g a  
	{0xb507, &op_fpow,	  7,   0, 255, 0xff, 0x01, 0x00, 0x01}, // fpow.wr h a  
	{0xb508, &op_fpow,	  0,   1, 255, 0xff, 0x01, 0x00, 0x01}, // fpow.wr a b  
	{0xb509, &op_fpow,	  1,   1, 255, 0xff, 0x01, 0x00, 0x01}, // fpow.wr b b  
	{0xb50a, &op_fpow,	  2,   1, 255, 0xff, 0x01, 0x00, 0x01}, // fpow.wr c b  
	{0xb50b, &op_fpow,	  3,   1, 255, 0xff, 0x01, 0x00, 0x01}, // fpow.wr d b  
	{0xb50c, &op_fpow,	  4,   1, 255, 0xff, 0x01, 0x00, 0x01}, // fpow.wr e b  
	{0xb50d, &op_fpow,	  5,   1, 255, 0xff, 0x01, 0x00, 0x01}, // fpow.wr f b  
	{0xb50e, &op_fpow,	  6,   1, 255, 0xff, 0x01, 0x00, 0x01}, // fpow.wr g b  
	{0xb50f, &op_fpow,	  7,   1, 255, 0xff, 0x01, 0x00, 0x01}, // fpow.wr h b  
	{0xb510, &op_fpow,	  0,   2, 255, 0xff, 0x01, 0x00, 0x01}, // fpow.wr a c  
	{0xb511, &op_fpow,	  1,   2, 255, 0xff, 0x01, 0x00, 0x01}, // fpow.wr b c  
	{0xb512, &op_fpow,	  2,   2, 255, 0xff, 0x01, 0x00, 0x01}, // fpow.wr c c  
	{0xb513, &op_fpow,	  3,   2, 255, 0xff, 0x01, 0x00, 0x01}, // fpow.wr d c  
	{0xb514, &op_fpow,	  4,   2, 255, 0xff, 0x01, 0x00, 0x01}, // fpow.wr e c  
	{0xb515, &op_fpow,	  5,   2, 255, 0xff, 0x01, 0x00, 0x01}, // fpow.wr f c  
	{0xb516, &op_fpow,	  6,   2, 255, 0xff, 0x01, 0x00, 0x01}, // fpow.wr g c  
	{0xb517, &op_fpow,	  7,   2, 255, 0xff, 0x01, 0x00, 0x01}, // fpow.wr h c  
	{0xb518, &op_fpow,	  0,   3, 255, 0xff, 0x01, 0x00, 0x01}, // fpow.wr a d  
	{0xb519, &op_fpow,	  1,   3, 255, 0xff, 0x01, 0x00, 0x01}, // fpow.wr b d  
	{0xb51a, &op_fpow,	  2,   3, 255, 0xff, 0x01, 0x00, 0x01}, // fpow.wr c d  
	{0xb51b, &op_fpow,	  3,   3, 255, 0xff, 0x01, 0x00, 0x01}, // fpow.wr d d  
	{0xb51c, &op_fpow,	  4,   3, 255, 0xff, 0x01, 0x00, 0x01}, // fpow.wr e d  
	{0xb51d, &op_fpow,	  5,   3, 255, 0xff, 0x01, 0x00, 0x01}, // fpow.wr f d  
	{0xb51e, &op_fpow,	  6,   3, 255, 0xff, 0x01, 0x00, 0x01}, // fpow.wr g d  
	{0xb51f, &op_fpow,	  7,   3, 255, 0xff, 0x01, 0x00, 0x01}, // fpow.wr h d  
	{0xb520, &op_fpow,	  0,   4, 255, 0xff, 0x01, 0x00, 0x01}, // fpow.wr a e  
	{0xb521, &op_fpow,	  1,   4, 255, 0xff, 0x01, 0x00, 0x01}, // fpow.wr b e  
	{0xb522, &op_fpow,	  2,   4, 255, 0xff, 0x01, 0x00, 0x01}, // fpow.wr c e  
	{0xb523, &op_fpow,	  3,   4, 255, 0xff, 0x01, 0x00, 0x01}, // fpow.wr d e  
	{0xb524, &op_fpow,	  4,   4, 255, 0xff, 0x01, 0x00, 0x01}, // fpow.wr e e  
	{0xb525, &op_fpow,	  5,   4, 255, 0xff, 0x01, 0x00, 0x01}, // fpow.wr f e  
	{0xb526, &op_fpow,	  6,   4, 255, 0xff, 0x01, 0x00, 0x01}, // fpow.wr g e  
	{0xb527, &op_fpow,	  7,   4, 255, 0xff, 0x01, 0x00, 0x01}, // fpow.wr h e  
	{0xb528, &op_fpow,	  0,   5, 255, 0xff, 0x01, 0x00, 0x01}, // fpow.wr a f  
	{0xb529, &op_fpow,	  1,   5, 255, 0xff, 0x01, 0x00, 0x01}, // fpow.wr b f  
	{0xb52a, &op_fpow,	  2,   5, 255, 0xff, 0x01, 0x00, 0x01}, // fpow.wr c f  
	{0xb52b, &op_fpow,	  3,   5, 255, 0xff, 0x01, 0x00, 0x01}, // fpow.wr d f  
	{0xb52c, &op_fpow,	  4,   5, 255, 0xff, 0x01, 0x00, 0x01}, // fpow.wr e f  
	{0xb52d, &op_fpow,	  5,   5, 255, 0xff, 0x01, 0x00, 0x01}, // fpow.wr f f  
	{0xb52e, &op_fpow,	  6,   5, 255, 0xff, 0x01, 0x00, 0x01}, // fpow.wr g f  
	{0xb52f, &op_fpow,	  7,   5, 255, 0xff, 0x01, 0x00, 0x01}, // fpow.wr h f  
	{0xb530, &op_fpow,	  0,   6, 255, 0xff, 0x01, 0x00, 0x01}, // fpow.wr a g  
	{0xb531, &op_fpow,	  1,   6, 255, 0xff, 0x01, 0x00, 0x01}, // fpow.wr b g  
	{0xb532, &op_fpow,	  2,   6, 255, 0xff, 0x01, 0x00, 0x01}, // fpow.wr c g  
	{0xb533, &op_fpow,	  3,   6, 255, 0xff, 0x01, 0x00, 0x01}, // fpow.wr d g  
	{0xb534, &op_fpow,	  4,   6, 255, 0xff, 0x01, 0x00, 0x01}, // fpow.wr e g  
	{0xb535, &op_fpow,	  5,   6, 255, 0xff, 0x01, 0x00, 0x01}, // fpow.wr f g  
	{0xb536, &op_fpow,	  6,   6, 255, 0xff, 0x01, 0x00, 0x01}, // fpow.wr g g  
	{0xb537, &op_fpow,	  7,   6, 255, 0xff, 0x01, 0x00, 0x01}, // fpow.wr h g  
	{0xb538, &op_fpow,	  0,   7, 255, 0xff, 0x01, 0x00, 0x01}, // fpow.wr a h  
	{0xb539, &op_fpow,	  1,   7, 255, 0xff, 0x01, 0x00, 0x01}, // fpow.wr b h  
	{0xb53a, &op_fpow,	  2,   7, 255, 0xff, 0x01, 0x00, 0x01}, // fpow.wr c h  
	{0xb53b, &op_fpow,	  3,   7, 255, 0xff, 0x01, 0x00, 0x01}, // fpow.wr d h  
	{0xb53c, &op_fpow,	  4,   7, 255, 0xff, 0x01, 0x00, 0x01}, // fpow.wr e h  
	{0xb53d, &op_fpow,	  5,   7, 255, 0xff, 0x01, 0x00, 0x01}, // fpow.wr f h  
	{0xb53e, &op_fpow,	  6,   7, 255, 0xff, 0x01, 0x00, 0x01}, // fpow.wr g h  
	{0xb53f, &op_fpow,	  7,   7, 255, 0xff, 0x01, 0x00, 0x01}, // fpow.wr h h  
	{0xb540, &op_fpow,	  0,   0, 255, 0xff, 0x01, 0x00, 0x02}, // fpow.dr a a  
	{0xb541, &op_fpow,	  1,   0, 255, 0xff, 0x01, 0x00, 0x02}, // fpow.dr b a  
	{0xb542, &op_fpow,	  2,   0, 255, 0xff, 0x01, 0x00, 0x02}, // fpow.dr c a  
	{0xb543, &op_fpow,	  3,   0, 255, 0xff, 0x01, 0x00, 0x02}, // fpow.dr d a  
	{0xb544, &op_fpow,	  4,   0, 255, 0xff, 0x01, 0x00, 0x02}, // fpow.dr e a  
	{0xb545, &op_fpow,	  5,   0, 255, 0xff, 0x01, 0x00, 0x02}, // fpow.dr f a  
	{0xb546, &op_fpow,	  6,   0, 255, 0xff, 0x01, 0x00, 0x02}, // fpow.dr g a  
	{0xb547, &op_fpow,	  7,   0, 255, 0xff, 0x01, 0x00, 0x02}, // fpow.dr h a  
	{0xb548, &op_fpow,	  0,   1, 255, 0xff, 0x01, 0x00, 0x02}, // fpow.dr a b  
	{0xb549, &op_fpow,	  1,   1, 255, 0xff, 0x01, 0x00, 0x02}, // fpow.dr b b  
	{0xb54a, &op_fpow,	  2,   1, 255, 0xff, 0x01, 0x00, 0x02}, // fpow.dr c b  
	{0xb54b, &op_fpow,	  3,   1, 255, 0xff, 0x01, 0x00, 0x02}, // fpow.dr d b  
	{0xb54c, &op_fpow,	  4,   1, 255, 0xff, 0x01, 0x00, 0x02}, // fpow.dr e b  
	{0xb54d, &op_fpow,	  5,   1, 255, 0xff, 0x01, 0x00, 0x02}, // fpow.dr f b  
	{0xb54e, &op_fpow,	  6,   1, 255, 0xff, 0x01, 0x00, 0x02}, // fpow.dr g b  
	{0xb54f, &op_fpow,	  7,   1, 255, 0xff, 0x01, 0x00, 0x02}, // fpow.dr h b  
	{0xb550, &op_fpow,	  0,   2, 255, 0xff, 0x01, 0x00, 0x02}, // fpow.dr a c  
	{0xb551, &op_fpow,	  1,   2, 255, 0xff, 0x01, 0x00, 0x02}, // fpow.dr b c  
	{0xb552, &op_fpow,	  2,   2, 255, 0xff, 0x01, 0x00, 0x02}, // fpow.dr c c  
	{0xb553, &op_fpow,	  3,   2, 255, 0xff, 0x01, 0x00, 0x02}, // fpow.dr d c  
	{0xb554, &op_fpow,	  4,   2, 255, 0xff, 0x01, 0x00, 0x02}, // fpow.dr e c  
	{0xb555, &op_fpow,	  5,   2, 255, 0xff, 0x01, 0x00, 0x02}, // fpow.dr f c  
	{0xb556, &op_fpow,	  6,   2, 255, 0xff, 0x01, 0x00, 0x02}, // fpow.dr g c  
	{0xb557, &op_fpow,	  7,   2, 255, 0xff, 0x01, 0x00, 0x02}, // fpow.dr h c  
	{0xb558, &op_fpow,	  0,   3, 255, 0xff, 0x01, 0x00, 0x02}, // fpow.dr a d  
	{0xb559, &op_fpow,	  1,   3, 255, 0xff, 0x01, 0x00, 0x02}, // fpow.dr b d  
	{0xb55a, &op_fpow,	  2,   3, 255, 0xff, 0x01, 0x00, 0x02}, // fpow.dr c d  
	{0xb55b, &op_fpow,	  3,   3, 255, 0xff, 0x01, 0x00, 0x02}, // fpow.dr d d  
	{0xb55c, &op_fpow,	  4,   3, 255, 0xff, 0x01, 0x00, 0x02}, // fpow.dr e d  
	{0xb55d, &op_fpow,	  5,   3, 255, 0xff, 0x01, 0x00, 0x02}, // fpow.dr f d  
	{0xb55e, &op_fpow,	  6,   3, 255, 0xff, 0x01, 0x00, 0x02}, // fpow.dr g d  
	{0xb55f, &op_fpow,	  7,   3, 255, 0xff, 0x01, 0x00, 0x02}, // fpow.dr h d  
	{0xb560, &op_fpow,	  0,   4, 255, 0xff, 0x01, 0x00, 0x02}, // fpow.dr a e  
	{0xb561, &op_fpow,	  1,   4, 255, 0xff, 0x01, 0x00, 0x02}, // fpow.dr b e  
	{0xb562, &op_fpow,	  2,   4, 255, 0xff, 0x01, 0x00, 0x02}, // fpow.dr c e  
	{0xb563, &op_fpow,	  3,   4, 255, 0xff, 0x01, 0x00, 0x02}, // fpow.dr d e  
	{0xb564, &op_fpow,	  4,   4, 255, 0xff, 0x01, 0x00, 0x02}, // fpow.dr e e  
	{0xb565, &op_fpow,	  5,   4, 255, 0xff, 0x01, 0x00, 0x02}, // fpow.dr f e  
	{0xb566, &op_fpow,	  6,   4, 255, 0xff, 0x01, 0x00, 0x02}, // fpow.dr g e  
	{0xb567, &op_fpow,	  7,   4, 255, 0xff, 0x01, 0x00, 0x02}, // fpow.dr h e  
	{0xb568, &op_fpow,	  0,   5, 255, 0xff, 0x01, 0x00, 0x02}, // fpow.dr a f  
	{0xb569, &op_fpow,	  1,   5, 255, 0xff, 0x01, 0x00, 0x02}, // fpow.dr b f  
	{0xb56a, &op_fpow,	  2,   5, 255, 0xff, 0x01, 0x00, 0x02}, // fpow.dr c f  
	{0xb56b, &op_fpow,	  3,   5, 255, 0xff, 0x01, 0x00, 0x02}, // fpow.dr d f  
	{0xb56c, &op_fpow,	  4,   5, 255, 0xff, 0x01, 0x00, 0x02}, // fpow.dr e f  
	{0xb56d, &op_fpow,	  5,   5, 255, 0xff, 0x01, 0x00, 0x02}, // fpow.dr f f  
	{0xb56e, &op_fpow,	  6,   5, 255, 0xff, 0x01, 0x00, 0x02}, // fpow.dr g f  
	{0xb56f, &op_fpow,	  7,   5, 255, 0xff, 0x01, 0x00, 0x02}, // fpow.dr h f  
	{0xb570, &op_fpow,	  0,   6, 255, 0xff, 0x01, 0x00, 0x02}, // fpow.dr a g  
	{0xb571, &op_fpow,	  1,   6, 255, 0xff, 0x01, 0x00, 0x02}, // fpow.dr b g  
	{0xb572, &op_fpow,	  2,   6, 255, 0xff, 0x01, 0x00, 0x02}, // fpow.dr c g  
	{0xb573, &op_fpow,	  3,   6, 255, 0xff, 0x01, 0x00, 0x02}, // fpow.dr d g  
	{0xb574, &op_fpow,	  4,   6, 255, 0xff, 0x01, 0x00, 0x02}, // fpow.dr e g  
	{0xb575, &op_fpow,	  5,   6, 255, 0xff, 0x01, 0x00, 0x02}, // fpow.dr f g  
	{0xb576, &op_fpow,	  6,   6, 255, 0xff, 0x01, 0x00, 0x02}, // fpow.dr g g  
	{0xb577, &op_fpow,	  7,   6, 255, 0xff, 0x01, 0x00, 0x02}, // fpow.dr h g  
	{0xb578, &op_fpow,	  0,   7, 255, 0xff, 0x01, 0x00, 0x02}, // fpow.dr a h  
	{0xb579, &op_fpow,	  1,   7, 255, 0xff, 0x01, 0x00, 0x02}, // fpow.dr b h  
	{0xb57a, &op_fpow,	  2,   7, 255, 0xff, 0x01, 0x00, 0x02}, // fpow.dr c h  
	{0xb57b, &op_fpow,	  3,   7, 255, 0xff, 0x01, 0x00, 0x02}, // fpow.dr d h  
	{0xb57c, &op_fpow,	  4,   7, 255, 0xff, 0x01, 0x00, 0x02}, // fpow.dr e h  
	{0xb57d, &op_fpow,	  5,   7, 255, 0xff, 0x01, 0x00, 0x02}, // fpow.dr f h  
	{0xb57e, &op_fpow,	  6,   7, 255, 0xff, 0x01, 0x00, 0x02}, // fpow.dr g h  
	{0xb57f, &op_fpow,	  7,   7, 255, 0xff, 0x01, 0x00, 0x02}, // fpow.dr h h  
	{0xb580, &op_fpow,	  0,   0, 255, 0xff, 0x01, 0x00, 0x04}, // fpow.r a a  
	{0xb581, &op_fpow,	  1,   0, 255, 0xff, 0x01, 0x00, 0x04}, // fpow.r b a  
	{0xb582, &op_fpow,	  2,   0, 255, 0xff, 0x01, 0x00, 0x04}, // fpow.r c a  
	{0xb583, &op_fpow,	  3,   0, 255, 0xff, 0x01, 0x00, 0x04}, // fpow.r d a  
	{0xb584, &op_fpow,	  4,   0, 255, 0xff, 0x01, 0x00, 0x04}, // fpow.r e a  
	{0xb585, &op_fpow,	  5,   0, 255, 0xff, 0x01, 0x00, 0x04}, // fpow.r f a  
	{0xb586, &op_fpow,	  6,   0, 255, 0xff, 0x01, 0x00, 0x04}, // fpow.r g a  
	{0xb587, &op_fpow,	  7,   0, 255, 0xff, 0x01, 0x00, 0x04}, // fpow.r h a  
	{0xb588, &op_fpow,	  0,   1, 255, 0xff, 0x01, 0x00, 0x04}, // fpow.r a b  
	{0xb589, &op_fpow,	  1,   1, 255, 0xff, 0x01, 0x00, 0x04}, // fpow.r b b  
	{0xb58a, &op_fpow,	  2,   1, 255, 0xff, 0x01, 0x00, 0x04}, // fpow.r c b  
	{0xb58b, &op_fpow,	  3,   1, 255, 0xff, 0x01, 0x00, 0x04}, // fpow.r d b  
	{0xb58c, &op_fpow,	  4,   1, 255, 0xff, 0x01, 0x00, 0x04}, // fpow.r e b  
	{0xb58d, &op_fpow,	  5,   1, 255, 0xff, 0x01, 0x00, 0x04}, // fpow.r f b  
	{0xb58e, &op_fpow,	  6,   1, 255, 0xff, 0x01, 0x00, 0x04}, // fpow.r g b  
	{0xb58f, &op_fpow,	  7,   1, 255, 0xff, 0x01, 0x00, 0x04}, // fpow.r h b  
	{0xb590, &op_fpow,	  0,   2, 255, 0xff, 0x01, 0x00, 0x04}, // fpow.r a c  
	{0xb591, &op_fpow,	  1,   2, 255, 0xff, 0x01, 0x00, 0x04}, // fpow.r b c  
	{0xb592, &op_fpow,	  2,   2, 255, 0xff, 0x01, 0x00, 0x04}, // fpow.r c c  
	{0xb593, &op_fpow,	  3,   2, 255, 0xff, 0x01, 0x00, 0x04}, // fpow.r d c  
	{0xb594, &op_fpow,	  4,   2, 255, 0xff, 0x01, 0x00, 0x04}, // fpow.r e c  
	{0xb595, &op_fpow,	  5,   2, 255, 0xff, 0x01, 0x00, 0x04}, // fpow.r f c  
	{0xb596, &op_fpow,	  6,   2, 255, 0xff, 0x01, 0x00, 0x04}, // fpow.r g c  
	{0xb597, &op_fpow,	  7,   2, 255, 0xff, 0x01, 0x00, 0x04}, // fpow.r h c  
	{0xb598, &op_fpow,	  0,   3, 255, 0xff, 0x01, 0x00, 0x04}, // fpow.r a d  
	{0xb599, &op_fpow,	  1,   3, 255, 0xff, 0x01, 0x00, 0x04}, // fpow.r b d  
	{0xb59a, &op_fpow,	  2,   3, 255, 0xff, 0x01, 0x00, 0x04}, // fpow.r c d  
	{0xb59b, &op_fpow,	  3,   3, 255, 0xff, 0x01, 0x00, 0x04}, // fpow.r d d  
	{0xb59c, &op_fpow,	  4,   3, 255, 0xff, 0x01, 0x00, 0x04}, // fpow.r e d  
	{0xb59d, &op_fpow,	  5,   3, 255, 0xff, 0x01, 0x00, 0x04}, // fpow.r f d  
	{0xb59e, &op_fpow,	  6,   3, 255, 0xff, 0x01, 0x00, 0x04}, // fpow.r g d  
	{0xb59f, &op_fpow,	  7,   3, 255, 0xff, 0x01, 0x00, 0x04}, // fpow.r h d  
	{0xb5a0, &op_fpow,	  0,   4, 255, 0xff, 0x01, 0x00, 0x04}, // fpow.r a e  
	{0xb5a1, &op_fpow,	  1,   4, 255, 0xff, 0x01, 0x00, 0x04}, // fpow.r b e  
	{0xb5a2, &op_fpow,	  2,   4, 255, 0xff, 0x01, 0x00, 0x04}, // fpow.r c e  
	{0xb5a3, &op_fpow,	  3,   4, 255, 0xff, 0x01, 0x00, 0x04}, // fpow.r d e  
	{0xb5a4, &op_fpow,	  4,   4, 255, 0xff, 0x01, 0x00, 0x04}, // fpow.r e e  
	{0xb5a5, &op_fpow,	  5,   4, 255, 0xff, 0x01, 0x00, 0x04}, // fpow.r f e  
	{0xb5a6, &op_fpow,	  6,   4, 255, 0xff, 0x01, 0x00, 0x04}, // fpow.r g e  
	{0xb5a7, &op_fpow,	  7,   4, 255, 0xff, 0x01, 0x00, 0x04}, // fpow.r h e  
	{0xb5a8, &op_fpow,	  0,   5, 255, 0xff, 0x01, 0x00, 0x04}, // fpow.r a f  
	{0xb5a9, &op_fpow,	  1,   5, 255, 0xff, 0x01, 0x00, 0x04}, // fpow.r b f  
	{0xb5aa, &op_fpow,	  2,   5, 255, 0xff, 0x01, 0x00, 0x04}, // fpow.r c f  
	{0xb5ab, &op_fpow,	  3,   5, 255, 0xff, 0x01, 0x00, 0x04}, // fpow.r d f  
	{0xb5ac, &op_fpow,	  4,   5, 255, 0xff, 0x01, 0x00, 0x04}, // fpow.r e f  
	{0xb5ad, &op_fpow,	  5,   5, 255, 0xff, 0x01, 0x00, 0x04}, // fpow.r f f  
	{0xb5ae, &op_fpow,	  6,   5, 255, 0xff, 0x01, 0x00, 0x04}, // fpow.r g f  
	{0xb5af, &op_fpow,	  7,   5, 255, 0xff, 0x01, 0x00, 0x04}, // fpow.r h f  
	{0xb5b0, &op_fpow,	  0,   6, 255, 0xff, 0x01, 0x00, 0x04}, // fpow.r a g  
	{0xb5b1, &op_fpow,	  1,   6, 255, 0xff, 0x01, 0x00, 0x04}, // fpow.r b g  
	{0xb5b2, &op_fpow,	  2,   6, 255, 0xff, 0x01, 0x00, 0x04}, // fpow.r c g  
	{0xb5b3, &op_fpow,	  3,   6, 255, 0xff, 0x01, 0x00, 0x04}, // fpow.r d g  
	{0xb5b4, &op_fpow,	  4,   6, 255, 0xff, 0x01, 0x00, 0x04}, // fpow.r e g  
	{0xb5b5, &op_fpow,	  5,   6, 255, 0xff, 0x01, 0x00, 0x04}, // fpow.r f g  
	{0xb5b6, &op_fpow,	  6,   6, 255, 0xff, 0x01, 0x00, 0x04}, // fpow.r g g  
	{0xb5b7, &op_fpow,	  7,   6, 255, 0xff, 0x01, 0x00, 0x04}, // fpow.r h g  
	{0xb5b8, &op_fpow,	  0,   7, 255, 0xff, 0x01, 0x00, 0x04}, // fpow.r a h  
	{0xb5b9, &op_fpow,	  1,   7, 255, 0xff, 0x01, 0x00, 0x04}, // fpow.r b h  
	{0xb5ba, &op_fpow,	  2,   7, 255, 0xff, 0x01, 0x00, 0x04}, // fpow.r c h  
	{0xb5bb, &op_fpow,	  3,   7, 255, 0xff, 0x01, 0x00, 0x04}, // fpow.r d h  
	{0xb5bc, &op_fpow,	  4,   7, 255, 0xff, 0x01, 0x00, 0x04}, // fpow.r e h  
	{0xb5bd, &op_fpow,	  5,   7, 255, 0xff, 0x01, 0x00, 0x04}, // fpow.r f h  
	{0xb5be, &op_fpow,	  6,   7, 255, 0xff, 0x01, 0x00, 0x04}, // fpow.r g h  
	{0xb5bf, &op_fpow,	  7,   7, 255, 0xff, 0x01, 0x00, 0x04}, // fpow.r h h  
	{0xb4c8, &op_fpow,	  0,   8, 255, 0xff, 0x00, 0x01, 0x01}, // fpow.wi a <literal>  
	{0xb4c9, &op_fpow,	  1,   8, 255, 0xff, 0x00, 0x01, 0x01}, // fpow.wi b <literal>  
	{0xb4ca, &op_fpow,	  2,   8, 255, 0xff, 0x00, 0x01, 0x01}, // fpow.wi c <literal>  
	{0xb4cb, &op_fpow,	  3,   8, 255, 0xff, 0x00, 0x01, 0x01}, // fpow.wi d <literal>  
	{0xb4cc, &op_fpow,	  4,   8, 255, 0xff, 0x00, 0x01, 0x01}, // fpow.wi e <literal>  
	{0xb4cd, &op_fpow,	  5,   8, 255, 0xff, 0x00, 0x01, 0x01}, // fpow.wi f <literal>  
	{0xb4ce, &op_fpow,	  6,   8, 255, 0xff, 0x00, 0x01, 0x01}, // fpow.wi g <literal>  
	{0xb4cf, &op_fpow,	  7,   8, 255, 0xff, 0x00, 0x01, 0x01}, // fpow.wi h <literal>  
	{0xb4d0, &op_fpow,	  0,   8, 255, 0xff, 0x00, 0x02, 0x02}, // fpow.di a <literal>  
	{0xb4d1, &op_fpow,	  1,   8, 255, 0xff, 0x00, 0x02, 0x02}, // fpow.di b <literal>  
	{0xb4d2, &op_fpow,	  2,   8, 255, 0xff, 0x00, 0x02, 0x02}, // fpow.di c <literal>  
	{0xb4d3, &op_fpow,	  3,   8, 255, 0xff, 0x00, 0x02, 0x02}, // fpow.di d <literal>  
	{0xb4d4, &op_fpow,	  4,   8, 255, 0xff, 0x00, 0x02, 0x02}, // fpow.di e <literal>  
	{0xb4d5, &op_fpow,	  5,   8, 255, 0xff, 0x00, 0x02, 0x02}, // fpow.di f <literal>  
	{0xb4d6, &op_fpow,	  6,   8, 255, 0xff, 0x00, 0x02, 0x02}, // fpow.di g <literal>  
	{0xb4d7, &op_fpow,	  7,   8, 255, 0xff, 0x00, 0x02, 0x02}, // fpow.di h <literal>  
	{0xb4e0, &op_fpow,	  0,   8, 255, 0xff, 0x00, 0x04, 0x04}, // fpow.i a <literal>  
	{0xb4e1, &op_fpow,	  1,   8, 255, 0xff, 0x00, 0x04, 0x04}, // fpow.i b <literal>  
	{0xb4e2, &op_fpow,	  2,   8, 255, 0xff, 0x00, 0x04, 0x04}, // fpow.i c <literal>  
	{0xb4e3, &op_fpow,	  3,   8, 255, 0xff, 0x00, 0x04, 0x04}, // fpow.i d <literal>  
	{0xb4e4, &op_fpow,	  4,   8, 255, 0xff, 0x00, 0x04, 0x04}, // fpow.i e <literal>  
	{0xb4e5, &op_fpow,	  5,   8, 255, 0xff, 0x00, 0x04, 0x04}, // fpow.i f <literal>  
	{0xb4e6, &op_fpow,	  6,   8, 255, 0xff, 0x00, 0x04, 0x04}, // fpow.i g <literal>  
	{0xb4e7, &op_fpow,	  7,   8, 255, 0xff, 0x00, 0x04, 0x04}, // fpow.i h <literal>  
	{0xb5c8, &op_fpow,	  0,   8, 255, 0xff, 0x01, 0x04, 0x01}, // fpow.wri a <literal>  
	{0xb5c9, &op_fpow,	  1,   8, 255, 0xff, 0x01, 0x04, 0x01}, // fpow.wri b <literal>  
	{0xb5ca, &op_fpow,	  2,   8, 255, 0xff, 0x01, 0x04, 0x01}, // fpow.wri c <literal>  
	{0xb5cb, &op_fpow,	  3,   8, 255, 0xff, 0x01, 0x04, 0x01}, // fpow.wri d <literal>  
	{0xb5cc, &op_fpow,	  4,   8, 255, 0xff, 0x01, 0x04, 0x01}, // fpow.wri e <literal>  
	{0xb5cd, &op_fpow,	  5,   8, 255, 0xff, 0x01, 0x04, 0x01}, // fpow.wri f <literal>  
	{0xb5ce, &op_fpow,	  6,   8, 255, 0xff, 0x01, 0x04, 0x01}, // fpow.wri g <literal>  
	{0xb5cf, &op_fpow,	  7,   8, 255, 0xff, 0x01, 0x04, 0x01}, // fpow.wri h <literal>  
	{0xb5d0, &op_fpow,	  0,   8, 255, 0xff, 0x01, 0x04, 0x02}, // fpow.dri a <literal>  
	{0xb5d1, &op_fpow,	  1,   8, 255, 0xff, 0x01, 0x04, 0x02}, // fpow.dri b <literal>  
	{0xb5d2, &op_fpow,	  2,   8, 255, 0xff, 0x01, 0x04, 0x02}, // fpow.dri c <literal>  
	{0xb5d3, &op_fpow,	  3,   8, 255, 0xff, 0x01, 0x04, 0x02}, // fpow.dri d <literal>  
	{0xb5d4, &op_fpow,	  4,   8, 255, 0xff, 0x01, 0x04, 0x02}, // fpow.dri e <literal>  
	{0xb5d5, &op_fpow,	  5,   8, 255, 0xff, 0x01, 0x04, 0x02}, // fpow.dri f <literal>  
	{0xb5d6, &op_fpow,	  6,   8, 255, 0xff, 0x01, 0x04, 0x02}, // fpow.dri g <literal>  
	{0xb5d7, &op_fpow,	  7,   8, 255, 0xff, 0x01, 0x04, 0x02}, // fpow.dri h <literal>  
	{0xb5e0, &op_fpow,	  0,   8, 255, 0xff, 0x01, 0x04, 0x04}, // fpow.ri a <literal>  
	{0xb5e1, &op_fpow,	  1,   8, 255, 0xff, 0x01, 0x04, 0x04}, // fpow.ri b <literal>  
	{0xb5e2, &op_fpow,	  2,   8, 255, 0xff, 0x01, 0x04, 0x04}, // fpow.ri c <literal>  
	{0xb5e3, &op_fpow,	  3,   8, 255, 0xff, 0x01, 0x04, 0x04}, // fpow.ri d <literal>  
	{0xb5e4, &op_fpow,	  4,   8, 255, 0xff, 0x01, 0x04, 0x04}, // fpow.ri e <literal>  
	{0xb5e5, &op_fpow,	  5,   8, 255, 0xff, 0x01, 0x04, 0x04}, // fpow.ri f <literal>  
	{0xb5e6, &op_fpow,	  6,   8, 255, 0xff, 0x01, 0x04, 0x04}, // fpow.ri g <literal>  
	{0xb5e7, &op_fpow,	  7,   8, 255, 0xff, 0x01, 0x04, 0x04}, // fpow.ri h <literal>  
	{0xb600, &op_fsub,	  0,   0, 255, 0xff, 0x00, 0x00, 0x01}, // fsub.w a a  
	{0xb601, &op_fsub,	  1,   0, 255, 0xff, 0x00, 0x00, 0x01}, // fsub.w b a  
	{0xb602, &op_fsub,	  2,   0, 255, 0xff, 0x00, 0x00, 0x01}, // fsub.w c a  
	{0xb603, &op_fsub,	  3,   0, 255, 0xff, 0x00, 0x00, 0x01}, // fsub.w d a  
	{0xb604, &op_fsub,	  4,   0, 255, 0xff, 0x00, 0x00, 0x01}, // fsub.w e a  
	{0xb605, &op_fsub,	  5,   0, 255, 0xff, 0x00, 0x00, 0x01}, // fsub.w f a  
	{0xb606, &op_fsub,	  6,   0, 255, 0xff, 0x00, 0x00, 0x01}, // fsub.w g a  
	{0xb607, &op_fsub,	  7,   0, 255, 0xff, 0x00, 0x00, 0x01}, // fsub.w h a  
	{0xb608, &op_fsub,	  0,   1, 255, 0xff, 0x00, 0x00, 0x01}, // fsub.w a b  
	{0xb609, &op_fsub,	  1,   1, 255, 0xff, 0x00, 0x00, 0x01}, // fsub.w b b  
	{0xb60a, &op_fsub,	  2,   1, 255, 0xff, 0x00, 0x00, 0x01}, // fsub.w c b  
	{0xb60b, &op_fsub,	  3,   1, 255, 0xff, 0x00, 0x00, 0x01}, // fsub.w d b  
	{0xb60c, &op_fsub,	  4,   1, 255, 0xff, 0x00, 0x00, 0x01}, // fsub.w e b  
	{0xb60d, &op_fsub,	  5,   1, 255, 0xff, 0x00, 0x00, 0x01}, // fsub.w f b  
	{0xb60e, &op_fsub,	  6,   1, 255, 0xff, 0x00, 0x00, 0x01}, // fsub.w g b  
	{0xb60f, &op_fsub,	  7,   1, 255, 0xff, 0x00, 0x00, 0x01}, // fsub.w h b  
	{0xb610, &op_fsub,	  0,   2, 255, 0xff, 0x00, 0x00, 0x01}, // fsub.w a c  
	{0xb611, &op_fsub,	  1,   2, 255, 0xff, 0x00, 0x00, 0x01}, // fsub.w b c  
	{0xb612, &op_fsub,	  2,   2, 255, 0xff, 0x00, 0x00, 0x01}, // fsub.w c c  
	{0xb613, &op_fsub,	  3,   2, 255, 0xff, 0x00, 0x00, 0x01}, // fsub.w d c  
	{0xb614, &op_fsub,	  4,   2, 255, 0xff, 0x00, 0x00, 0x01}, // fsub.w e c  
	{0xb615, &op_fsub,	  5,   2, 255, 0xff, 0x00, 0x00, 0x01}, // fsub.w f c  
	{0xb616, &op_fsub,	  6,   2, 255, 0xff, 0x00, 0x00, 0x01}, // fsub.w g c  
	{0xb617, &op_fsub,	  7,   2, 255, 0xff, 0x00, 0x00, 0x01}, // fsub.w h c  
	{0xb618, &op_fsub,	  0,   3, 255, 0xff, 0x00, 0x00, 0x01}, // fsub.w a d  
	{0xb619, &op_fsub,	  1,   3, 255, 0xff, 0x00, 0x00, 0x01}, // fsub.w b d  
	{0xb61a, &op_fsub,	  2,   3, 255, 0xff, 0x00, 0x00, 0x01}, // fsub.w c d  
	{0xb61b, &op_fsub,	  3,   3, 255, 0xff, 0x00, 0x00, 0x01}, // fsub.w d d  
	{0xb61c, &op_fsub,	  4,   3, 255, 0xff, 0x00, 0x00, 0x01}, // fsub.w e d  
	{0xb61d, &op_fsub,	  5,   3, 255, 0xff, 0x00, 0x00, 0x01}, // fsub.w f d  
	{0xb61e, &op_fsub,	  6,   3, 255, 0xff, 0x00, 0x00, 0x01}, // fsub.w g d  
	{0xb61f, &op_fsub,	  7,   3, 255, 0xff, 0x00, 0x00, 0x01}, // fsub.w h d  
	{0xb620, &op_fsub,	  0,   4, 255, 0xff, 0x00, 0x00, 0x01}, // fsub.w a e  
	{0xb621, &op_fsub,	  1,   4, 255, 0xff, 0x00, 0x00, 0x01}, // fsub.w b e  
	{0xb622, &op_fsub,	  2,   4, 255, 0xff, 0x00, 0x00, 0x01}, // fsub.w c e  
	{0xb623, &op_fsub,	  3,   4, 255, 0xff, 0x00, 0x00, 0x01}, // fsub.w d e  
	{0xb624, &op_fsub,	  4,   4, 255, 0xff, 0x00, 0x00, 0x01}, // fsub.w e e  
	{0xb625, &op_fsub,	  5,   4, 255, 0xff, 0x00, 0x00, 0x01}, // fsub.w f e  
	{0xb626, &op_fsub,	  6,   4, 255, 0xff, 0x00, 0x00, 0x01}, // fsub.w g e  
	{0xb627, &op_fsub,	  7,   4, 255, 0xff, 0x00, 0x00, 0x01}, // fsub.w h e  
	{0xb628, &op_fsub,	  0,   5, 255, 0xff, 0x00, 0x00, 0x01}, // fsub.w a f  
	{0xb629, &op_fsub,	  1,   5, 255, 0xff, 0x00, 0x00, 0x01}, // fsub.w b f  
	{0xb62a, &op_fsub,	  2,   5, 255, 0xff, 0x00, 0x00, 0x01}, // fsub.w c f  
	{0xb62b, &op_fsub,	  3,   5, 255, 0xff, 0x00, 0x00, 0x01}, // fsub.w d f  
	{0xb62c, &op_fsub,	  4,   5, 255, 0xff, 0x00, 0x00, 0x01}, // fsub.w e f  
	{0xb62d, &op_fsub,	  5,   5, 255, 0xff, 0x00, 0x00, 0x01}, // fsub.w f f  
	{0xb62e, &op_fsub,	  6,   5, 255, 0xff, 0x00, 0x00, 0x01}, // fsub.w g f  
	{0xb62f, &op_fsub,	  7,   5, 255, 0xff, 0x00, 0x00, 0x01}, // fsub.w h f  
	{0xb630, &op_fsub,	  0,   6, 255, 0xff, 0x00, 0x00, 0x01}, // fsub.w a g  
	{0xb631, &op_fsub,	  1,   6, 255, 0xff, 0x00, 0x00, 0x01}, // fsub.w b g  
	{0xb632, &op_fsub,	  2,   6, 255, 0xff, 0x00, 0x00, 0x01}, // fsub.w c g  
	{0xb633, &op_fsub,	  3,   6, 255, 0xff, 0x00, 0x00, 0x01}, // fsub.w d g  
	{0xb634, &op_fsub,	  4,   6, 255, 0xff, 0x00, 0x00, 0x01}, // fsub.w e g  
	{0xb635, &op_fsub,	  5,   6, 255, 0xff, 0x00, 0x00, 0x01}, // fsub.w f g  
	{0xb636, &op_fsub,	  6,   6, 255, 0xff, 0x00, 0x00, 0x01}, // fsub.w g g  
	{0xb637, &op_fsub,	  7,   6, 255, 0xff, 0x00, 0x00, 0x01}, // fsub.w h g  
	{0xb638, &op_fsub,	  0,   7, 255, 0xff, 0x00, 0x00, 0x01}, // fsub.w a h  
	{0xb639, &op_fsub,	  1,   7, 255, 0xff, 0x00, 0x00, 0x01}, // fsub.w b h  
	{0xb63a, &op_fsub,	  2,   7, 255, 0xff, 0x00, 0x00, 0x01}, // fsub.w c h  
	{0xb63b, &op_fsub,	  3,   7, 255, 0xff, 0x00, 0x00, 0x01}, // fsub.w d h  
	{0xb63c, &op_fsub,	  4,   7, 255, 0xff, 0x00, 0x00, 0x01}, // fsub.w e h  
	{0xb63d, &op_fsub,	  5,   7, 255, 0xff, 0x00, 0x00, 0x01}, // fsub.w f h  
	{0xb63e, &op_fsub,	  6,   7, 255, 0xff, 0x00, 0x00, 0x01}, // fsub.w g h  
	{0xb63f, &op_fsub,	  7,   7, 255, 0xff, 0x00, 0x00, 0x01}, // fsub.w h h  
	{0xb640, &op_fsub,	  0,   0, 255, 0xff, 0x00, 0x00, 0x02}, // fsub.d a a  
	{0xb641, &op_fsub,	  1,   0, 255, 0xff, 0x00, 0x00, 0x02}, // fsub.d b a  
	{0xb642, &op_fsub,	  2,   0, 255, 0xff, 0x00, 0x00, 0x02}, // fsub.d c a  
	{0xb643, &op_fsub,	  3,   0, 255, 0xff, 0x00, 0x00, 0x02}, // fsub.d d a  
	{0xb644, &op_fsub,	  4,   0, 255, 0xff, 0x00, 0x00, 0x02}, // fsub.d e a  
	{0xb645, &op_fsub,	  5,   0, 255, 0xff, 0x00, 0x00, 0x02}, // fsub.d f a  
	{0xb646, &op_fsub,	  6,   0, 255, 0xff, 0x00, 0x00, 0x02}, // fsub.d g a  
	{0xb647, &op_fsub,	  7,   0, 255, 0xff, 0x00, 0x00, 0x02}, // fsub.d h a  
	{0xb648, &op_fsub,	  0,   1, 255, 0xff, 0x00, 0x00, 0x02}, // fsub.d a b  
	{0xb649, &op_fsub,	  1,   1, 255, 0xff, 0x00, 0x00, 0x02}, // fsub.d b b  
	{0xb64a, &op_fsub,	  2,   1, 255, 0xff, 0x00, 0x00, 0x02}, // fsub.d c b  
	{0xb64b, &op_fsub,	  3,   1, 255, 0xff, 0x00, 0x00, 0x02}, // fsub.d d b  
	{0xb64c, &op_fsub,	  4,   1, 255, 0xff, 0x00, 0x00, 0x02}, // fsub.d e b  
	{0xb64d, &op_fsub,	  5,   1, 255, 0xff, 0x00, 0x00, 0x02}, // fsub.d f b  
	{0xb64e, &op_fsub,	  6,   1, 255, 0xff, 0x00, 0x00, 0x02}, // fsub.d g b  
	{0xb64f, &op_fsub,	  7,   1, 255, 0xff, 0x00, 0x00, 0x02}, // fsub.d h b  
	{0xb650, &op_fsub,	  0,   2, 255, 0xff, 0x00, 0x00, 0x02}, // fsub.d a c  
	{0xb651, &op_fsub,	  1,   2, 255, 0xff, 0x00, 0x00, 0x02}, // fsub.d b c  
	{0xb652, &op_fsub,	  2,   2, 255, 0xff, 0x00, 0x00, 0x02}, // fsub.d c c  
	{0xb653, &op_fsub,	  3,   2, 255, 0xff, 0x00, 0x00, 0x02}, // fsub.d d c  
	{0xb654, &op_fsub,	  4,   2, 255, 0xff, 0x00, 0x00, 0x02}, // fsub.d e c  
	{0xb655, &op_fsub,	  5,   2, 255, 0xff, 0x00, 0x00, 0x02}, // fsub.d f c  
	{0xb656, &op_fsub,	  6,   2, 255, 0xff, 0x00, 0x00, 0x02}, // fsub.d g c  
	{0xb657, &op_fsub,	  7,   2, 255, 0xff, 0x00, 0x00, 0x02}, // fsub.d h c  
	{0xb658, &op_fsub,	  0,   3, 255, 0xff, 0x00, 0x00, 0x02}, // fsub.d a d  
	{0xb659, &op_fsub,	  1,   3, 255, 0xff, 0x00, 0x00, 0x02}, // fsub.d b d  
	{0xb65a, &op_fsub,	  2,   3, 255, 0xff, 0x00, 0x00, 0x02}, // fsub.d c d  
	{0xb65b, &op_fsub,	  3,   3, 255, 0xff, 0x00, 0x00, 0x02}, // fsub.d d d  
	{0xb65c, &op_fsub,	  4,   3, 255, 0xff, 0x00, 0x00, 0x02}, // fsub.d e d  
	{0xb65d, &op_fsub,	  5,   3, 255, 0xff, 0x00, 0x00, 0x02}, // fsub.d f d  
	{0xb65e, &op_fsub,	  6,   3, 255, 0xff, 0x00, 0x00, 0x02}, // fsub.d g d  
	{0xb65f, &op_fsub,	  7,   3, 255, 0xff, 0x00, 0x00, 0x02}, // fsub.d h d  
	{0xb660, &op_fsub,	  0,   4, 255, 0xff, 0x00, 0x00, 0x02}, // fsub.d a e  
	{0xb661, &op_fsub,	  1,   4, 255, 0xff, 0x00, 0x00, 0x02}, // fsub.d b e  
	{0xb662, &op_fsub,	  2,   4, 255, 0xff, 0x00, 0x00, 0x02}, // fsub.d c e  
	{0xb663, &op_fsub,	  3,   4, 255, 0xff, 0x00, 0x00, 0x02}, // fsub.d d e  
	{0xb664, &op_fsub,	  4,   4, 255, 0xff, 0x00, 0x00, 0x02}, // fsub.d e e  
	{0xb665, &op_fsub,	  5,   4, 255, 0xff, 0x00, 0x00, 0x02}, // fsub.d f e  
	{0xb666, &op_fsub,	  6,   4, 255, 0xff, 0x00, 0x00, 0x02}, // fsub.d g e  
	{0xb667, &op_fsub,	  7,   4, 255, 0xff, 0x00, 0x00, 0x02}, // fsub.d h e  
	{0xb668, &op_fsub,	  0,   5, 255, 0xff, 0x00, 0x00, 0x02}, // fsub.d a f  
	{0xb669, &op_fsub,	  1,   5, 255, 0xff, 0x00, 0x00, 0x02}, // fsub.d b f  
	{0xb66a, &op_fsub,	  2,   5, 255, 0xff, 0x00, 0x00, 0x02}, // fsub.d c f  
	{0xb66b, &op_fsub,	  3,   5, 255, 0xff, 0x00, 0x00, 0x02}, // fsub.d d f  
	{0xb66c, &op_fsub,	  4,   5, 255, 0xff, 0x00, 0x00, 0x02}, // fsub.d e f  
	{0xb66d, &op_fsub,	  5,   5, 255, 0xff, 0x00, 0x00, 0x02}, // fsub.d f f  
	{0xb66e, &op_fsub,	  6,   5, 255, 0xff, 0x00, 0x00, 0x02}, // fsub.d g f  
	{0xb66f, &op_fsub,	  7,   5, 255, 0xff, 0x00, 0x00, 0x02}, // fsub.d h f  
	{0xb670, &op_fsub,	  0,   6, 255, 0xff, 0x00, 0x00, 0x02}, // fsub.d a g  
	{0xb671, &op_fsub,	  1,   6, 255, 0xff, 0x00, 0x00, 0x02}, // fsub.d b g  
	{0xb672, &op_fsub,	  2,   6, 255, 0xff, 0x00, 0x00, 0x02}, // fsub.d c g  
	{0xb673, &op_fsub,	  3,   6, 255, 0xff, 0x00, 0x00, 0x02}, // fsub.d d g  
	{0xb674, &op_fsub,	  4,   6, 255, 0xff, 0x00, 0x00, 0x02}, // fsub.d e g  
	{0xb675, &op_fsub,	  5,   6, 255, 0xff, 0x00, 0x00, 0x02}, // fsub.d f g  
	{0xb676, &op_fsub,	  6,   6, 255, 0xff, 0x00, 0x00, 0x02}, // fsub.d g g  
	{0xb677, &op_fsub,	  7,   6, 255, 0xff, 0x00, 0x00, 0x02}, // fsub.d h g  
	{0xb678, &op_fsub,	  0,   7, 255, 0xff, 0x00, 0x00, 0x02}, // fsub.d a h  
	{0xb679, &op_fsub,	  1,   7, 255, 0xff, 0x00, 0x00, 0x02}, // fsub.d b h  
	{0xb67a, &op_fsub,	  2,   7, 255, 0xff, 0x00, 0x00, 0x02}, // fsub.d c h  
	{0xb67b, &op_fsub,	  3,   7, 255, 0xff, 0x00, 0x00, 0x02}, // fsub.d d h  
	{0xb67c, &op_fsub,	  4,   7, 255, 0xff, 0x00, 0x00, 0x02}, // fsub.d e h  
	{0xb67d, &op_fsub,	  5,   7, 255, 0xff, 0x00, 0x00, 0x02}, // fsub.d f h  
	{0xb67e, &op_fsub,	  6,   7, 255, 0xff, 0x00, 0x00, 0x02}, // fsub.d g h  
	{0xb67f, &op_fsub,	  7,   7, 255, 0xff, 0x00, 0x00, 0x02}, // fsub.d h h  
	{0xb680, &op_fsub,	  0,   0, 255, 0xff, 0x00, 0x00, 0x04}, // fsub a a  
	{0xb681, &op_fsub,	  1,   0, 255, 0xff, 0x00, 0x00, 0x04}, // fsub b a  
	{0xb682, &op_fsub,	  2,   0, 255, 0xff, 0x00, 0x00, 0x04}, // fsub c a  
	{0xb683, &op_fsub,	  3,   0, 255, 0xff, 0x00, 0x00, 0x04}, // fsub d a  
	{0xb684, &op_fsub,	  4,   0, 255, 0xff, 0x00, 0x00, 0x04}, // fsub e a  
	{0xb685, &op_fsub,	  5,   0, 255, 0xff, 0x00, 0x00, 0x04}, // fsub f a  
	{0xb686, &op_fsub,	  6,   0, 255, 0xff, 0x00, 0x00, 0x04}, // fsub g a  
	{0xb687, &op_fsub,	  7,   0, 255, 0xff, 0x00, 0x00, 0x04}, // fsub h a  
	{0xb688, &op_fsub,	  0,   1, 255, 0xff, 0x00, 0x00, 0x04}, // fsub a b  
	{0xb689, &op_fsub,	  1,   1, 255, 0xff, 0x00, 0x00, 0x04}, // fsub b b  
	{0xb68a, &op_fsub,	  2,   1, 255, 0xff, 0x00, 0x00, 0x04}, // fsub c b  
	{0xb68b, &op_fsub,	  3,   1, 255, 0xff, 0x00, 0x00, 0x04}, // fsub d b  
	{0xb68c, &op_fsub,	  4,   1, 255, 0xff, 0x00, 0x00, 0x04}, // fsub e b  
	{0xb68d, &op_fsub,	  5,   1, 255, 0xff, 0x00, 0x00, 0x04}, // fsub f b  
	{0xb68e, &op_fsub,	  6,   1, 255, 0xff, 0x00, 0x00, 0x04}, // fsub g b  
	{0xb68f, &op_fsub,	  7,   1, 255, 0xff, 0x00, 0x00, 0x04}, // fsub h b  
	{0xb690, &op_fsub,	  0,   2, 255, 0xff, 0x00, 0x00, 0x04}, // fsub a c  
	{0xb691, &op_fsub,	  1,   2, 255, 0xff, 0x00, 0x00, 0x04}, // fsub b c  
	{0xb692, &op_fsub,	  2,   2, 255, 0xff, 0x00, 0x00, 0x04}, // fsub c c  
	{0xb693, &op_fsub,	  3,   2, 255, 0xff, 0x00, 0x00, 0x04}, // fsub d c  
	{0xb694, &op_fsub,	  4,   2, 255, 0xff, 0x00, 0x00, 0x04}, // fsub e c  
	{0xb695, &op_fsub,	  5,   2, 255, 0xff, 0x00, 0x00, 0x04}, // fsub f c  
	{0xb696, &op_fsub,	  6,   2, 255, 0xff, 0x00, 0x00, 0x04}, // fsub g c  
	{0xb697, &op_fsub,	  7,   2, 255, 0xff, 0x00, 0x00, 0x04}, // fsub h c  
	{0xb698, &op_fsub,	  0,   3, 255, 0xff, 0x00, 0x00, 0x04}, // fsub a d  
	{0xb699, &op_fsub,	  1,   3, 255, 0xff, 0x00, 0x00, 0x04}, // fsub b d  
	{0xb69a, &op_fsub,	  2,   3, 255, 0xff, 0x00, 0x00, 0x04}, // fsub c d  
	{0xb69b, &op_fsub,	  3,   3, 255, 0xff, 0x00, 0x00, 0x04}, // fsub d d  
	{0xb69c, &op_fsub,	  4,   3, 255, 0xff, 0x00, 0x00, 0x04}, // fsub e d  
	{0xb69d, &op_fsub,	  5,   3, 255, 0xff, 0x00, 0x00, 0x04}, // fsub f d  
	{0xb69e, &op_fsub,	  6,   3, 255, 0xff, 0x00, 0x00, 0x04}, // fsub g d  
	{0xb69f, &op_fsub,	  7,   3, 255, 0xff, 0x00, 0x00, 0x04}, // fsub h d  
	{0xb6a0, &op_fsub,	  0,   4, 255, 0xff, 0x00, 0x00, 0x04}, // fsub a e  
	{0xb6a1, &op_fsub,	  1,   4, 255, 0xff, 0x00, 0x00, 0x04}, // fsub b e  
	{0xb6a2, &op_fsub,	  2,   4, 255, 0xff, 0x00, 0x00, 0x04}, // fsub c e  
	{0xb6a3, &op_fsub,	  3,   4, 255, 0xff, 0x00, 0x00, 0x04}, // fsub d e  
	{0xb6a4, &op_fsub,	  4,   4, 255, 0xff, 0x00, 0x00, 0x04}, // fsub e e  
	{0xb6a5, &op_fsub,	  5,   4, 255, 0xff, 0x00, 0x00, 0x04}, // fsub f e  
	{0xb6a6, &op_fsub,	  6,   4, 255, 0xff, 0x00, 0x00, 0x04}, // fsub g e  
	{0xb6a7, &op_fsub,	  7,   4, 255, 0xff, 0x00, 0x00, 0x04}, // fsub h e  
	{0xb6a8, &op_fsub,	  0,   5, 255, 0xff, 0x00, 0x00, 0x04}, // fsub a f  
	{0xb6a9, &op_fsub,	  1,   5, 255, 0xff, 0x00, 0x00, 0x04}, // fsub b f  
	{0xb6aa, &op_fsub,	  2,   5, 255, 0xff, 0x00, 0x00, 0x04}, // fsub c f  
	{0xb6ab, &op_fsub,	  3,   5, 255, 0xff, 0x00, 0x00, 0x04}, // fsub d f  
	{0xb6ac, &op_fsub,	  4,   5, 255, 0xff, 0x00, 0x00, 0x04}, // fsub e f  
	{0xb6ad, &op_fsub,	  5,   5, 255, 0xff, 0x00, 0x00, 0x04}, // fsub f f  
	{0xb6ae, &op_fsub,	  6,   5, 255, 0xff, 0x00, 0x00, 0x04}, // fsub g f  
	{0xb6af, &op_fsub,	  7,   5, 255, 0xff, 0x00, 0x00, 0x04}, // fsub h f  
	{0xb6b0, &op_fsub,	  0,   6, 255, 0xff, 0x00, 0x00, 0x04}, // fsub a g  
	{0xb6b1, &op_fsub,	  1,   6, 255, 0xff, 0x00, 0x00, 0x04}, // fsub b g  
	{0xb6b2, &op_fsub,	  2,   6, 255, 0xff, 0x00, 0x00, 0x04}, // fsub c g  
	{0xb6b3, &op_fsub,	  3,   6, 255, 0xff, 0x00, 0x00, 0x04}, // fsub d g  
	{0xb6b4, &op_fsub,	  4,   6, 255, 0xff, 0x00, 0x00, 0x04}, // fsub e g  
	{0xb6b5, &op_fsub,	  5,   6, 255, 0xff, 0x00, 0x00, 0x04}, // fsub f g  
	{0xb6b6, &op_fsub,	  6,   6, 255, 0xff, 0x00, 0x00, 0x04}, // fsub g g  
	{0xb6b7, &op_fsub,	  7,   6, 255, 0xff, 0x00, 0x00, 0x04}, // fsub h g  
	{0xb6b8, &op_fsub,	  0,   7, 255, 0xff, 0x00, 0x00, 0x04}, // fsub a h  
	{0xb6b9, &op_fsub,	  1,   7, 255, 0xff, 0x00, 0x00, 0x04}, // fsub b h  
	{0xb6ba, &op_fsub,	  2,   7, 255, 0xff, 0x00, 0x00, 0x04}, // fsub c h  
	{0xb6bb, &op_fsub,	  3,   7, 255, 0xff, 0x00, 0x00, 0x04}, // fsub d h  
	{0xb6bc, &op_fsub,	  4,   7, 255, 0xff, 0x00, 0x00, 0x04}, // fsub e h  
	{0xb6bd, &op_fsub,	  5,   7, 255, 0xff, 0x00, 0x00, 0x04}, // fsub f h  
	{0xb6be, &op_fsub,	  6,   7, 255, 0xff, 0x00, 0x00, 0x04}, // fsub g h  
	{0xb6bf, &op_fsub,	  7,   7, 255, 0xff, 0x00, 0x00, 0x04}, // fsub h h  
	{0xb700, &op_fsub,	  0,   0, 255, 0xff, 0x01, 0x00, 0x01}, // fsub.wr a a  
	{0xb701, &op_fsub,	  1,   0, 255, 0xff, 0x01, 0x00, 0x01}, // fsub.wr b a  
	{0xb702, &op_fsub,	  2,   0, 255, 0xff, 0x01, 0x00, 0x01}, // fsub.wr c a  
	{0xb703, &op_fsub,	  3,   0, 255, 0xff, 0x01, 0x00, 0x01}, // fsub.wr d a  
	{0xb704, &op_fsub,	  4,   0, 255, 0xff, 0x01, 0x00, 0x01}, // fsub.wr e a  
	{0xb705, &op_fsub,	  5,   0, 255, 0xff, 0x01, 0x00, 0x01}, // fsub.wr f a  
	{0xb706, &op_fsub,	  6,   0, 255, 0xff, 0x01, 0x00, 0x01}, // fsub.wr g a  
	{0xb707, &op_fsub,	  7,   0, 255, 0xff, 0x01, 0x00, 0x01}, // fsub.wr h a  
	{0xb708, &op_fsub,	  0,   1, 255, 0xff, 0x01, 0x00, 0x01}, // fsub.wr a b  
	{0xb709, &op_fsub,	  1,   1, 255, 0xff, 0x01, 0x00, 0x01}, // fsub.wr b b  
	{0xb70a, &op_fsub,	  2,   1, 255, 0xff, 0x01, 0x00, 0x01}, // fsub.wr c b  
	{0xb70b, &op_fsub,	  3,   1, 255, 0xff, 0x01, 0x00, 0x01}, // fsub.wr d b  
	{0xb70c, &op_fsub,	  4,   1, 255, 0xff, 0x01, 0x00, 0x01}, // fsub.wr e b  
	{0xb70d, &op_fsub,	  5,   1, 255, 0xff, 0x01, 0x00, 0x01}, // fsub.wr f b  
	{0xb70e, &op_fsub,	  6,   1, 255, 0xff, 0x01, 0x00, 0x01}, // fsub.wr g b  
	{0xb70f, &op_fsub,	  7,   1, 255, 0xff, 0x01, 0x00, 0x01}, // fsub.wr h b  
	{0xb710, &op_fsub,	  0,   2, 255, 0xff, 0x01, 0x00, 0x01}, // fsub.wr a c  
	{0xb711, &op_fsub,	  1,   2, 255, 0xff, 0x01, 0x00, 0x01}, // fsub.wr b c  
	{0xb712, &op_fsub,	  2,   2, 255, 0xff, 0x01, 0x00, 0x01}, // fsub.wr c c  
	{0xb713, &op_fsub,	  3,   2, 255, 0xff, 0x01, 0x00, 0x01}, // fsub.wr d c  
	{0xb714, &op_fsub,	  4,   2, 255, 0xff, 0x01, 0x00, 0x01}, // fsub.wr e c  
	{0xb715, &op_fsub,	  5,   2, 255, 0xff, 0x01, 0x00, 0x01}, // fsub.wr f c  
	{0xb716, &op_fsub,	  6,   2, 255, 0xff, 0x01, 0x00, 0x01}, // fsub.wr g c  
	{0xb717, &op_fsub,	  7,   2, 255, 0xff, 0x01, 0x00, 0x01}, // fsub.wr h c  
	{0xb718, &op_fsub,	  0,   3, 255, 0xff, 0x01, 0x00, 0x01}, // fsub.wr a d  
	{0xb719, &op_fsub,	  1,   3, 255, 0xff, 0x01, 0x00, 0x01}, // fsub.wr b d  
	{0xb71a, &op_fsub,	  2,   3, 255, 0xff, 0x01, 0x00, 0x01}, // fsub.wr c d  
	{0xb71b, &op_fsub,	  3,   3, 255, 0xff, 0x01, 0x00, 0x01}, // fsub.wr d d  
	{0xb71c, &op_fsub,	  4,   3, 255, 0xff, 0x01, 0x00, 0x01}, // fsub.wr e d  
	{0xb71d, &op_fsub,	  5,   3, 255, 0xff, 0x01, 0x00, 0x01}, // fsub.wr f d  
	{0xb71e, &op_fsub,	  6,   3, 255, 0xff, 0x01, 0x00, 0x01}, // fsub.wr g d  
	{0xb71f, &op_fsub,	  7,   3, 255, 0xff, 0x01, 0x00, 0x01}, // fsub.wr h d  
	{0xb720, &op_fsub,	  0,   4, 255, 0xff, 0x01, 0x00, 0x01}, // fsub.wr a e  
	{0xb721, &op_fsub,	  1,   4, 255, 0xff, 0x01, 0x00, 0x01}, // fsub.wr b e  
	{0xb722, &op_fsub,	  2,   4, 255, 0xff, 0x01, 0x00, 0x01}, // fsub.wr c e  
	{0xb723, &op_fsub,	  3,   4, 255, 0xff, 0x01, 0x00, 0x01}, // fsub.wr d e  
	{0xb724, &op_fsub,	  4,   4, 255, 0xff, 0x01, 0x00, 0x01}, // fsub.wr e e  
	{0xb725, &op_fsub,	  5,   4, 255, 0xff, 0x01, 0x00, 0x01}, // fsub.wr f e  
	{0xb726, &op_fsub,	  6,   4, 255, 0xff, 0x01, 0x00, 0x01}, // fsub.wr g e  
	{0xb727, &op_fsub,	  7,   4, 255, 0xff, 0x01, 0x00, 0x01}, // fsub.wr h e  
	{0xb728, &op_fsub,	  0,   5, 255, 0xff, 0x01, 0x00, 0x01}, // fsub.wr a f  
	{0xb729, &op_fsub,	  1,   5, 255, 0xff, 0x01, 0x00, 0x01}, // fsub.wr b f  
	{0xb72a, &op_fsub,	  2,   5, 255, 0xff, 0x01, 0x00, 0x01}, // fsub.wr c f  
	{0xb72b, &op_fsub,	  3,   5, 255, 0xff, 0x01, 0x00, 0x01}, // fsub.wr d f  
	{0xb72c, &op_fsub,	  4,   5, 255, 0xff, 0x01, 0x00, 0x01}, // fsub.wr e f  
	{0xb72d, &op_fsub,	  5,   5, 255, 0xff, 0x01, 0x00, 0x01}, // fsub.wr f f  
	{0xb72e, &op_fsub,	  6,   5, 255, 0xff, 0x01, 0x00, 0x01}, // fsub.wr g f  
	{0xb72f, &op_fsub,	  7,   5, 255, 0xff, 0x01, 0x00, 0x01}, // fsub.wr h f  
	{0xb730, &op_fsub,	  0,   6, 255, 0xff, 0x01, 0x00, 0x01}, // fsub.wr a g  
	{0xb731, &op_fsub,	  1,   6, 255, 0xff, 0x01, 0x00, 0x01}, // fsub.wr b g  
	{0xb732, &op_fsub,	  2,   6, 255, 0xff, 0x01, 0x00, 0x01}, // fsub.wr c g  
	{0xb733, &op_fsub,	  3,   6, 255, 0xff, 0x01, 0x00, 0x01}, // fsub.wr d g  
	{0xb734, &op_fsub,	  4,   6, 255, 0xff, 0x01, 0x00, 0x01}, // fsub.wr e g  
	{0xb735, &op_fsub,	  5,   6, 255, 0xff, 0x01, 0x00, 0x01}, // fsub.wr f g  
	{0xb736, &op_fsub,	  6,   6, 255, 0xff, 0x01, 0x00, 0x01}, // fsub.wr g g  
	{0xb737, &op_fsub,	  7,   6, 255, 0xff, 0x01, 0x00, 0x01}, // fsub.wr h g  
	{0xb738, &op_fsub,	  0,   7, 255, 0xff, 0x01, 0x00, 0x01}, // fsub.wr a h  
	{0xb739, &op_fsub,	  1,   7, 255, 0xff, 0x01, 0x00, 0x01}, // fsub.wr b h  
	{0xb73a, &op_fsub,	  2,   7, 255, 0xff, 0x01, 0x00, 0x01}, // fsub.wr c h  
	{0xb73b, &op_fsub,	  3,   7, 255, 0xff, 0x01, 0x00, 0x01}, // fsub.wr d h  
	{0xb73c, &op_fsub,	  4,   7, 255, 0xff, 0x01, 0x00, 0x01}, // fsub.wr e h  
	{0xb73d, &op_fsub,	  5,   7, 255, 0xff, 0x01, 0x00, 0x01}, // fsub.wr f h  
	{0xb73e, &op_fsub,	  6,   7, 255, 0xff, 0x01, 0x00, 0x01}, // fsub.wr g h  
	{0xb73f, &op_fsub,	  7,   7, 255, 0xff, 0x01, 0x00, 0x01}, // fsub.wr h h  
	{0xb740, &op_fsub,	  0,   0, 255, 0xff, 0x01, 0x00, 0x02}, // fsub.dr a a  
	{0xb741, &op_fsub,	  1,   0, 255, 0xff, 0x01, 0x00, 0x02}, // fsub.dr b a  
	{0xb742, &op_fsub,	  2,   0, 255, 0xff, 0x01, 0x00, 0x02}, // fsub.dr c a  
	{0xb743, &op_fsub,	  3,   0, 255, 0xff, 0x01, 0x00, 0x02}, // fsub.dr d a  
	{0xb744, &op_fsub,	  4,   0, 255, 0xff, 0x01, 0x00, 0x02}, // fsub.dr e a  
	{0xb745, &op_fsub,	  5,   0, 255, 0xff, 0x01, 0x00, 0x02}, // fsub.dr f a  
	{0xb746, &op_fsub,	  6,   0, 255, 0xff, 0x01, 0x00, 0x02}, // fsub.dr g a  
	{0xb747, &op_fsub,	  7,   0, 255, 0xff, 0x01, 0x00, 0x02}, // fsub.dr h a  
	{0xb748, &op_fsub,	  0,   1, 255, 0xff, 0x01, 0x00, 0x02}, // fsub.dr a b  
	{0xb749, &op_fsub,	  1,   1, 255, 0xff, 0x01, 0x00, 0x02}, // fsub.dr b b  
	{0xb74a, &op_fsub,	  2,   1, 255, 0xff, 0x01, 0x00, 0x02}, // fsub.dr c b  
	{0xb74b, &op_fsub,	  3,   1, 255, 0xff, 0x01, 0x00, 0x02}, // fsub.dr d b  
	{0xb74c, &op_fsub,	  4,   1, 255, 0xff, 0x01, 0x00, 0x02}, // fsub.dr e b  
	{0xb74d, &op_fsub,	  5,   1, 255, 0xff, 0x01, 0x00, 0x02}, // fsub.dr f b  
	{0xb74e, &op_fsub,	  6,   1, 255, 0xff, 0x01, 0x00, 0x02}, // fsub.dr g b  
	{0xb74f, &op_fsub,	  7,   1, 255, 0xff, 0x01, 0x00, 0x02}, // fsub.dr h b  
	{0xb750, &op_fsub,	  0,   2, 255, 0xff, 0x01, 0x00, 0x02}, // fsub.dr a c  
	{0xb751, &op_fsub,	  1,   2, 255, 0xff, 0x01, 0x00, 0x02}, // fsub.dr b c  
	{0xb752, &op_fsub,	  2,   2, 255, 0xff, 0x01, 0x00, 0x02}, // fsub.dr c c  
	{0xb753, &op_fsub,	  3,   2, 255, 0xff, 0x01, 0x00, 0x02}, // fsub.dr d c  
	{0xb754, &op_fsub,	  4,   2, 255, 0xff, 0x01, 0x00, 0x02}, // fsub.dr e c  
	{0xb755, &op_fsub,	  5,   2, 255, 0xff, 0x01, 0x00, 0x02}, // fsub.dr f c  
	{0xb756, &op_fsub,	  6,   2, 255, 0xff, 0x01, 0x00, 0x02}, // fsub.dr g c  
	{0xb757, &op_fsub,	  7,   2, 255, 0xff, 0x01, 0x00, 0x02}, // fsub.dr h c  
	{0xb758, &op_fsub,	  0,   3, 255, 0xff, 0x01, 0x00, 0x02}, // fsub.dr a d  
	{0xb759, &op_fsub,	  1,   3, 255, 0xff, 0x01, 0x00, 0x02}, // fsub.dr b d  
	{0xb75a, &op_fsub,	  2,   3, 255, 0xff, 0x01, 0x00, 0x02}, // fsub.dr c d  
	{0xb75b, &op_fsub,	  3,   3, 255, 0xff, 0x01, 0x00, 0x02}, // fsub.dr d d  
	{0xb75c, &op_fsub,	  4,   3, 255, 0xff, 0x01, 0x00, 0x02}, // fsub.dr e d  
	{0xb75d, &op_fsub,	  5,   3, 255, 0xff, 0x01, 0x00, 0x02}, // fsub.dr f d  
	{0xb75e, &op_fsub,	  6,   3, 255, 0xff, 0x01, 0x00, 0x02}, // fsub.dr g d  
	{0xb75f, &op_fsub,	  7,   3, 255, 0xff, 0x01, 0x00, 0x02}, // fsub.dr h d  
	{0xb760, &op_fsub,	  0,   4, 255, 0xff, 0x01, 0x00, 0x02}, // fsub.dr a e  
	{0xb761, &op_fsub,	  1,   4, 255, 0xff, 0x01, 0x00, 0x02}, // fsub.dr b e  
	{0xb762, &op_fsub,	  2,   4, 255, 0xff, 0x01, 0x00, 0x02}, // fsub.dr c e  
	{0xb763, &op_fsub,	  3,   4, 255, 0xff, 0x01, 0x00, 0x02}, // fsub.dr d e  
	{0xb764, &op_fsub,	  4,   4, 255, 0xff, 0x01, 0x00, 0x02}, // fsub.dr e e  
	{0xb765, &op_fsub,	  5,   4, 255, 0xff, 0x01, 0x00, 0x02}, // fsub.dr f e  
	{0xb766, &op_fsub,	  6,   4, 255, 0xff, 0x01, 0x00, 0x02}, // fsub.dr g e  
	{0xb767, &op_fsub,	  7,   4, 255, 0xff, 0x01, 0x00, 0x02}, // fsub.dr h e  
	{0xb768, &op_fsub,	  0,   5, 255, 0xff, 0x01, 0x00, 0x02}, // fsub.dr a f  
	{0xb769, &op_fsub,	  1,   5, 255, 0xff, 0x01, 0x00, 0x02}, // fsub.dr b f  
	{0xb76a, &op_fsub,	  2,   5, 255, 0xff, 0x01, 0x00, 0x02}, // fsub.dr c f  
	{0xb76b, &op_fsub,	  3,   5, 255, 0xff, 0x01, 0x00, 0x02}, // fsub.dr d f  
	{0xb76c, &op_fsub,	  4,   5, 255, 0xff, 0x01, 0x00, 0x02}, // fsub.dr e f  
	{0xb76d, &op_fsub,	  5,   5, 255, 0xff, 0x01, 0x00, 0x02}, // fsub.dr f f  
	{0xb76e, &op_fsub,	  6,   5, 255, 0xff, 0x01, 0x00, 0x02}, // fsub.dr g f  
	{0xb76f, &op_fsub,	  7,   5, 255, 0xff, 0x01, 0x00, 0x02}, // fsub.dr h f  
	{0xb770, &op_fsub,	  0,   6, 255, 0xff, 0x01, 0x00, 0x02}, // fsub.dr a g  
	{0xb771, &op_fsub,	  1,   6, 255, 0xff, 0x01, 0x00, 0x02}, // fsub.dr b g  
	{0xb772, &op_fsub,	  2,   6, 255, 0xff, 0x01, 0x00, 0x02}, // fsub.dr c g  
	{0xb773, &op_fsub,	  3,   6, 255, 0xff, 0x01, 0x00, 0x02}, // fsub.dr d g  
	{0xb774, &op_fsub,	  4,   6, 255, 0xff, 0x01, 0x00, 0x02}, // fsub.dr e g  
	{0xb775, &op_fsub,	  5,   6, 255, 0xff, 0x01, 0x00, 0x02}, // fsub.dr f g  
	{0xb776, &op_fsub,	  6,   6, 255, 0xff, 0x01, 0x00, 0x02}, // fsub.dr g g  
	{0xb777, &op_fsub,	  7,   6, 255, 0xff, 0x01, 0x00, 0x02}, // fsub.dr h g  
	{0xb778, &op_fsub,	  0,   7, 255, 0xff, 0x01, 0x00, 0x02}, // fsub.dr a h  
	{0xb779, &op_fsub,	  1,   7, 255, 0xff, 0x01, 0x00, 0x02}, // fsub.dr b h  
	{0xb77a, &op_fsub,	  2,   7, 255, 0xff, 0x01, 0x00, 0x02}, // fsub.dr c h  
	{0xb77b, &op_fsub,	  3,   7, 255, 0xff, 0x01, 0x00, 0x02}, // fsub.dr d h  
	{0xb77c, &op_fsub,	  4,   7, 255, 0xff, 0x01, 0x00, 0x02}, // fsub.dr e h  
	{0xb77d, &op_fsub,	  5,   7, 255, 0xff, 0x01, 0x00, 0x02}, // fsub.dr f h  
	{0xb77e, &op_fsub,	  6,   7, 255, 0xff, 0x01, 0x00, 0x02}, // fsub.dr g h  
	{0xb77f, &op_fsub,	  7,   7, 255, 0xff, 0x01, 0x00, 0x02}, // fsub.dr h h  
	{0xb780, &op_fsub,	  0,   0, 255, 0xff, 0x01, 0x00, 0x04}, // fsub.r a a  
	{0xb781, &op_fsub,	  1,   0, 255, 0xff, 0x01, 0x00, 0x04}, // fsub.r b a  
	{0xb782, &op_fsub,	  2,   0, 255, 0xff, 0x01, 0x00, 0x04}, // fsub.r c a  
	{0xb783, &op_fsub,	  3,   0, 255, 0xff, 0x01, 0x00, 0x04}, // fsub.r d a  
	{0xb784, &op_fsub,	  4,   0, 255, 0xff, 0x01, 0x00, 0x04}, // fsub.r e a  
	{0xb785, &op_fsub,	  5,   0, 255, 0xff, 0x01, 0x00, 0x04}, // fsub.r f a  
	{0xb786, &op_fsub,	  6,   0, 255, 0xff, 0x01, 0x00, 0x04}, // fsub.r g a  
	{0xb787, &op_fsub,	  7,   0, 255, 0xff, 0x01, 0x00, 0x04}, // fsub.r h a  
	{0xb788, &op_fsub,	  0,   1, 255, 0xff, 0x01, 0x00, 0x04}, // fsub.r a b  
	{0xb789, &op_fsub,	  1,   1, 255, 0xff, 0x01, 0x00, 0x04}, // fsub.r b b  
	{0xb78a, &op_fsub,	  2,   1, 255, 0xff, 0x01, 0x00, 0x04}, // fsub.r c b  
	{0xb78b, &op_fsub,	  3,   1, 255, 0xff, 0x01, 0x00, 0x04}, // fsub.r d b  
	{0xb78c, &op_fsub,	  4,   1, 255, 0xff, 0x01, 0x00, 0x04}, // fsub.r e b  
	{0xb78d, &op_fsub,	  5,   1, 255, 0xff, 0x01, 0x00, 0x04}, // fsub.r f b  
	{0xb78e, &op_fsub,	  6,   1, 255, 0xff, 0x01, 0x00, 0x04}, // fsub.r g b  
	{0xb78f, &op_fsub,	  7,   1, 255, 0xff, 0x01, 0x00, 0x04}, // fsub.r h b  
	{0xb790, &op_fsub,	  0,   2, 255, 0xff, 0x01, 0x00, 0x04}, // fsub.r a c  
	{0xb791, &op_fsub,	  1,   2, 255, 0xff, 0x01, 0x00, 0x04}, // fsub.r b c  
	{0xb792, &op_fsub,	  2,   2, 255, 0xff, 0x01, 0x00, 0x04}, // fsub.r c c  
	{0xb793, &op_fsub,	  3,   2, 255, 0xff, 0x01, 0x00, 0x04}, // fsub.r d c  
	{0xb794, &op_fsub,	  4,   2, 255, 0xff, 0x01, 0x00, 0x04}, // fsub.r e c  
	{0xb795, &op_fsub,	  5,   2, 255, 0xff, 0x01, 0x00, 0x04}, // fsub.r f c  
	{0xb796, &op_fsub,	  6,   2, 255, 0xff, 0x01, 0x00, 0x04}, // fsub.r g c  
	{0xb797, &op_fsub,	  7,   2, 255, 0xff, 0x01, 0x00, 0x04}, // fsub.r h c  
	{0xb798, &op_fsub,	  0,   3, 255, 0xff, 0x01, 0x00, 0x04}, // fsub.r a d  
	{0xb799, &op_fsub,	  1,   3, 255, 0xff, 0x01, 0x00, 0x04}, // fsub.r b d  
	{0xb79a, &op_fsub,	  2,   3, 255, 0xff, 0x01, 0x00, 0x04}, // fsub.r c d  
	{0xb79b, &op_fsub,	  3,   3, 255, 0xff, 0x01, 0x00, 0x04}, // fsub.r d d  
	{0xb79c, &op_fsub,	  4,   3, 255, 0xff, 0x01, 0x00, 0x04}, // fsub.r e d  
	{0xb79d, &op_fsub,	  5,   3, 255, 0xff, 0x01, 0x00, 0x04}, // fsub.r f d  
	{0xb79e, &op_fsub,	  6,   3, 255, 0xff, 0x01, 0x00, 0x04}, // fsub.r g d  
	{0xb79f, &op_fsub,	  7,   3, 255, 0xff, 0x01, 0x00, 0x04}, // fsub.r h d  
	{0xb7a0, &op_fsub,	  0,   4, 255, 0xff, 0x01, 0x00, 0x04}, // fsub.r a e  
	{0xb7a1, &op_fsub,	  1,   4, 255, 0xff, 0x01, 0x00, 0x04}, // fsub.r b e  
	{0xb7a2, &op_fsub,	  2,   4, 255, 0xff, 0x01, 0x00, 0x04}, // fsub.r c e  
	{0xb7a3, &op_fsub,	  3,   4, 255, 0xff, 0x01, 0x00, 0x04}, // fsub.r d e  
	{0xb7a4, &op_fsub,	  4,   4, 255, 0xff, 0x01, 0x00, 0x04}, // fsub.r e e  
	{0xb7a5, &op_fsub,	  5,   4, 255, 0xff, 0x01, 0x00, 0x04}, // fsub.r f e  
	{0xb7a6, &op_fsub,	  6,   4, 255, 0xff, 0x01, 0x00, 0x04}, // fsub.r g e  
	{0xb7a7, &op_fsub,	  7,   4, 255, 0xff, 0x01, 0x00, 0x04}, // fsub.r h e  
	{0xb7a8, &op_fsub,	  0,   5, 255, 0xff, 0x01, 0x00, 0x04}, // fsub.r a f  
	{0xb7a9, &op_fsub,	  1,   5, 255, 0xff, 0x01, 0x00, 0x04}, // fsub.r b f  
	{0xb7aa, &op_fsub,	  2,   5, 255, 0xff, 0x01, 0x00, 0x04}, // fsub.r c f  
	{0xb7ab, &op_fsub,	  3,   5, 255, 0xff, 0x01, 0x00, 0x04}, // fsub.r d f  
	{0xb7ac, &op_fsub,	  4,   5, 255, 0xff, 0x01, 0x00, 0x04}, // fsub.r e f  
	{0xb7ad, &op_fsub,	  5,   5, 255, 0xff, 0x01, 0x00, 0x04}, // fsub.r f f  
	{0xb7ae, &op_fsub,	  6,   5, 255, 0xff, 0x01, 0x00, 0x04}, // fsub.r g f  
	{0xb7af, &op_fsub,	  7,   5, 255, 0xff, 0x01, 0x00, 0x04}, // fsub.r h f  
	{0xb7b0, &op_fsub,	  0,   6, 255, 0xff, 0x01, 0x00, 0x04}, // fsub.r a g  
	{0xb7b1, &op_fsub,	  1,   6, 255, 0xff, 0x01, 0x00, 0x04}, // fsub.r b g  
	{0xb7b2, &op_fsub,	  2,   6, 255, 0xff, 0x01, 0x00, 0x04}, // fsub.r c g  
	{0xb7b3, &op_fsub,	  3,   6, 255, 0xff, 0x01, 0x00, 0x04}, // fsub.r d g  
	{0xb7b4, &op_fsub,	  4,   6, 255, 0xff, 0x01, 0x00, 0x04}, // fsub.r e g  
	{0xb7b5, &op_fsub,	  5,   6, 255, 0xff, 0x01, 0x00, 0x04}, // fsub.r f g  
	{0xb7b6, &op_fsub,	  6,   6, 255, 0xff, 0x01, 0x00, 0x04}, // fsub.r g g  
	{0xb7b7, &op_fsub,	  7,   6, 255, 0xff, 0x01, 0x00, 0x04}, // fsub.r h g  
	{0xb7b8, &op_fsub,	  0,   7, 255, 0xff, 0x01, 0x00, 0x04}, // fsub.r a h  
	{0xb7b9, &op_fsub,	  1,   7, 255, 0xff, 0x01, 0x00, 0x04}, // fsub.r b h  
	{0xb7ba, &op_fsub,	  2,   7, 255, 0xff, 0x01, 0x00, 0x04}, // fsub.r c h  
	{0xb7bb, &op_fsub,	  3,   7, 255, 0xff, 0x01, 0x00, 0x04}, // fsub.r d h  
	{0xb7bc, &op_fsub,	  4,   7, 255, 0xff, 0x01, 0x00, 0x04}, // fsub.r e h  
	{0xb7bd, &op_fsub,	  5,   7, 255, 0xff, 0x01, 0x00, 0x04}, // fsub.r f h  
	{0xb7be, &op_fsub,	  6,   7, 255, 0xff, 0x01, 0x00, 0x04}, // fsub.r g h  
	{0xb7bf, &op_fsub,	  7,   7, 255, 0xff, 0x01, 0x00, 0x04}, // fsub.r h h  
	{0xb6c8, &op_fsub,	  0,   8, 255, 0xff, 0x00, 0x01, 0x01}, // fsub.wi a <literal>  
	{0xb6c9, &op_fsub,	  1,   8, 255, 0xff, 0x00, 0x01, 0x01}, // fsub.wi b <literal>  
	{0xb6ca, &op_fsub,	  2,   8, 255, 0xff, 0x00, 0x01, 0x01}, // fsub.wi c <literal>  
	{0xb6cb, &op_fsub,	  3,   8, 255, 0xff, 0x00, 0x01, 0x01}, // fsub.wi d <literal>  
	{0xb6cc, &op_fsub,	  4,   8, 255, 0xff, 0x00, 0x01, 0x01}, // fsub.wi e <literal>  
	{0xb6cd, &op_fsub,	  5,   8, 255, 0xff, 0x00, 0x01, 0x01}, // fsub.wi f <literal>  
	{0xb6ce, &op_fsub,	  6,   8, 255, 0xff, 0x00, 0x01, 0x01}, // fsub.wi g <literal>  
	{0xb6cf, &op_fsub,	  7,   8, 255, 0xff, 0x00, 0x01, 0x01}, // fsub.wi h <literal>  
	{0xb6d0, &op_fsub,	  0,   8, 255, 0xff, 0x00, 0x02, 0x02}, // fsub.di a <literal>  
	{0xb6d1, &op_fsub,	  1,   8, 255, 0xff, 0x00, 0x02, 0x02}, // fsub.di b <literal>  
	{0xb6d2, &op_fsub,	  2,   8, 255, 0xff, 0x00, 0x02, 0x02}, // fsub.di c <literal>  
	{0xb6d3, &op_fsub,	  3,   8, 255, 0xff, 0x00, 0x02, 0x02}, // fsub.di d <literal>  
	{0xb6d4, &op_fsub,	  4,   8, 255, 0xff, 0x00, 0x02, 0x02}, // fsub.di e <literal>  
	{0xb6d5, &op_fsub,	  5,   8, 255, 0xff, 0x00, 0x02, 0x02}, // fsub.di f <literal>  
	{0xb6d6, &op_fsub,	  6,   8, 255, 0xff, 0x00, 0x02, 0x02}, // fsub.di g <literal>  
	{0xb6d7, &op_fsub,	  7,   8, 255, 0xff, 0x00, 0x02, 0x02}, // fsub.di h <literal>  
	{0xb6e0, &op_fsub,	  0,   8, 255, 0xff, 0x00, 0x04, 0x04}, // fsub.i a <literal>  
	{0xb6e1, &op_fsub,	  1,   8, 255, 0xff, 0x00, 0x04, 0x04}, // fsub.i b <literal>  
	{0xb6e2, &op_fsub,	  2,   8, 255, 0xff, 0x00, 0x04, 0x04}, // fsub.i c <literal>  
	{0xb6e3, &op_fsub,	  3,   8, 255, 0xff, 0x00, 0x04, 0x04}, // fsub.i d <literal>  
	{0xb6e4, &op_fsub,	  4,   8, 255, 0xff, 0x00, 0x04, 0x04}, // fsub.i e <literal>  
	{0xb6e5, &op_fsub,	  5,   8, 255, 0xff, 0x00, 0x04, 0x04}, // fsub.i f <literal>  
	{0xb6e6, &op_fsub,	  6,   8, 255, 0xff, 0x00, 0x04, 0x04}, // fsub.i g <literal>  
	{0xb6e7, &op_fsub,	  7,   8, 255, 0xff, 0x00, 0x04, 0x04}, // fsub.i h <literal>  
	{0xb7c8, &op_fsub,	  0,   8, 255, 0xff, 0x01, 0x04, 0x01}, // fsub.wri a <literal>  
	{0xb7c9, &op_fsub,	  1,   8, 255, 0xff, 0x01, 0x04, 0x01}, // fsub.wri b <literal>  
	{0xb7ca, &op_fsub,	  2,   8, 255, 0xff, 0x01, 0x04, 0x01}, // fsub.wri c <literal>  
	{0xb7cb, &op_fsub,	  3,   8, 255, 0xff, 0x01, 0x04, 0x01}, // fsub.wri d <literal>  
	{0xb7cc, &op_fsub,	  4,   8, 255, 0xff, 0x01, 0x04, 0x01}, // fsub.wri e <literal>  
	{0xb7cd, &op_fsub,	  5,   8, 255, 0xff, 0x01, 0x04, 0x01}, // fsub.wri f <literal>  
	{0xb7ce, &op_fsub,	  6,   8, 255, 0xff, 0x01, 0x04, 0x01}, // fsub.wri g <literal>  
	{0xb7cf, &op_fsub,	  7,   8, 255, 0xff, 0x01, 0x04, 0x01}, // fsub.wri h <literal>  
	{0xb7d0, &op_fsub,	  0,   8, 255, 0xff, 0x01, 0x04, 0x02}, // fsub.dri a <literal>  
	{0xb7d1, &op_fsub,	  1,   8, 255, 0xff, 0x01, 0x04, 0x02}, // fsub.dri b <literal>  
	{0xb7d2, &op_fsub,	  2,   8, 255, 0xff, 0x01, 0x04, 0x02}, // fsub.dri c <literal>  
	{0xb7d3, &op_fsub,	  3,   8, 255, 0xff, 0x01, 0x04, 0x02}, // fsub.dri d <literal>  
	{0xb7d4, &op_fsub,	  4,   8, 255, 0xff, 0x01, 0x04, 0x02}, // fsub.dri e <literal>  
	{0xb7d5, &op_fsub,	  5,   8, 255, 0xff, 0x01, 0x04, 0x02}, // fsub.dri f <literal>  
	{0xb7d6, &op_fsub,	  6,   8, 255, 0xff, 0x01, 0x04, 0x02}, // fsub.dri g <literal>  
	{0xb7d7, &op_fsub,	  7,   8, 255, 0xff, 0x01, 0x04, 0x02}, // fsub.dri h <literal>  
	{0xb7e0, &op_fsub,	  0,   8, 255, 0xff, 0x01, 0x04, 0x04}, // fsub.ri a <literal>  
	{0xb7e1, &op_fsub,	  1,   8, 255, 0xff, 0x01, 0x04, 0x04}, // fsub.ri b <literal>  
	{0xb7e2, &op_fsub,	  2,   8, 255, 0xff, 0x01, 0x04, 0x04}, // fsub.ri c <literal>  
	{0xb7e3, &op_fsub,	  3,   8, 255, 0xff, 0x01, 0x04, 0x04}, // fsub.ri d <literal>  
	{0xb7e4, &op_fsub,	  4,   8, 255, 0xff, 0x01, 0x04, 0x04}, // fsub.ri e <literal>  
	{0xb7e5, &op_fsub,	  5,   8, 255, 0xff, 0x01, 0x04, 0x04}, // fsub.ri f <literal>  
	{0xb7e6, &op_fsub,	  6,   8, 255, 0xff, 0x01, 0x04, 0x04}, // fsub.ri g <literal>  
	{0xb7e7, &op_fsub,	  7,   8, 255, 0xff, 0x01, 0x04, 0x04}, // fsub.ri h <literal>  
	{0xb800, &op_fmul,	  0,   0, 255, 0xff, 0x00, 0x00, 0x01}, // fmul.w a a  
	{0xb801, &op_fmul,	  1,   0, 255, 0xff, 0x00, 0x00, 0x01}, // fmul.w b a  
	{0xb802, &op_fmul,	  2,   0, 255, 0xff, 0x00, 0x00, 0x01}, // fmul.w c a  
	{0xb803, &op_fmul,	  3,   0, 255, 0xff, 0x00, 0x00, 0x01}, // fmul.w d a  
	{0xb804, &op_fmul,	  4,   0, 255, 0xff, 0x00, 0x00, 0x01}, // fmul.w e a  
	{0xb805, &op_fmul,	  5,   0, 255, 0xff, 0x00, 0x00, 0x01}, // fmul.w f a  
	{0xb806, &op_fmul,	  6,   0, 255, 0xff, 0x00, 0x00, 0x01}, // fmul.w g a  
	{0xb807, &op_fmul,	  7,   0, 255, 0xff, 0x00, 0x00, 0x01}, // fmul.w h a  
	{0xb808, &op_fmul,	  0,   1, 255, 0xff, 0x00, 0x00, 0x01}, // fmul.w a b  
	{0xb809, &op_fmul,	  1,   1, 255, 0xff, 0x00, 0x00, 0x01}, // fmul.w b b  
	{0xb80a, &op_fmul,	  2,   1, 255, 0xff, 0x00, 0x00, 0x01}, // fmul.w c b  
	{0xb80b, &op_fmul,	  3,   1, 255, 0xff, 0x00, 0x00, 0x01}, // fmul.w d b  
	{0xb80c, &op_fmul,	  4,   1, 255, 0xff, 0x00, 0x00, 0x01}, // fmul.w e b  
	{0xb80d, &op_fmul,	  5,   1, 255, 0xff, 0x00, 0x00, 0x01}, // fmul.w f b  
	{0xb80e, &op_fmul,	  6,   1, 255, 0xff, 0x00, 0x00, 0x01}, // fmul.w g b  
	{0xb80f, &op_fmul,	  7,   1, 255, 0xff, 0x00, 0x00, 0x01}, // fmul.w h b  
	{0xb810, &op_fmul,	  0,   2, 255, 0xff, 0x00, 0x00, 0x01}, // fmul.w a c  
	{0xb811, &op_fmul,	  1,   2, 255, 0xff, 0x00, 0x00, 0x01}, // fmul.w b c  
	{0xb812, &op_fmul,	  2,   2, 255, 0xff, 0x00, 0x00, 0x01}, // fmul.w c c  
	{0xb813, &op_fmul,	  3,   2, 255, 0xff, 0x00, 0x00, 0x01}, // fmul.w d c  
	{0xb814, &op_fmul,	  4,   2, 255, 0xff, 0x00, 0x00, 0x01}, // fmul.w e c  
	{0xb815, &op_fmul,	  5,   2, 255, 0xff, 0x00, 0x00, 0x01}, // fmul.w f c  
	{0xb816, &op_fmul,	  6,   2, 255, 0xff, 0x00, 0x00, 0x01}, // fmul.w g c  
	{0xb817, &op_fmul,	  7,   2, 255, 0xff, 0x00, 0x00, 0x01}, // fmul.w h c  
	{0xb818, &op_fmul,	  0,   3, 255, 0xff, 0x00, 0x00, 0x01}, // fmul.w a d  
	{0xb819, &op_fmul,	  1,   3, 255, 0xff, 0x00, 0x00, 0x01}, // fmul.w b d  
	{0xb81a, &op_fmul,	  2,   3, 255, 0xff, 0x00, 0x00, 0x01}, // fmul.w c d  
	{0xb81b, &op_fmul,	  3,   3, 255, 0xff, 0x00, 0x00, 0x01}, // fmul.w d d  
	{0xb81c, &op_fmul,	  4,   3, 255, 0xff, 0x00, 0x00, 0x01}, // fmul.w e d  
	{0xb81d, &op_fmul,	  5,   3, 255, 0xff, 0x00, 0x00, 0x01}, // fmul.w f d  
	{0xb81e, &op_fmul,	  6,   3, 255, 0xff, 0x00, 0x00, 0x01}, // fmul.w g d  
	{0xb81f, &op_fmul,	  7,   3, 255, 0xff, 0x00, 0x00, 0x01}, // fmul.w h d  
	{0xb820, &op_fmul,	  0,   4, 255, 0xff, 0x00, 0x00, 0x01}, // fmul.w a e  
	{0xb821, &op_fmul,	  1,   4, 255, 0xff, 0x00, 0x00, 0x01}, // fmul.w b e  
	{0xb822, &op_fmul,	  2,   4, 255, 0xff, 0x00, 0x00, 0x01}, // fmul.w c e  
	{0xb823, &op_fmul,	  3,   4, 255, 0xff, 0x00, 0x00, 0x01}, // fmul.w d e  
	{0xb824, &op_fmul,	  4,   4, 255, 0xff, 0x00, 0x00, 0x01}, // fmul.w e e  
	{0xb825, &op_fmul,	  5,   4, 255, 0xff, 0x00, 0x00, 0x01}, // fmul.w f e  
	{0xb826, &op_fmul,	  6,   4, 255, 0xff, 0x00, 0x00, 0x01}, // fmul.w g e  
	{0xb827, &op_fmul,	  7,   4, 255, 0xff, 0x00, 0x00, 0x01}, // fmul.w h e  
	{0xb828, &op_fmul,	  0,   5, 255, 0xff, 0x00, 0x00, 0x01}, // fmul.w a f  
	{0xb829, &op_fmul,	  1,   5, 255, 0xff, 0x00, 0x00, 0x01}, // fmul.w b f  
	{0xb82a, &op_fmul,	  2,   5, 255, 0xff, 0x00, 0x00, 0x01}, // fmul.w c f  
	{0xb82b, &op_fmul,	  3,   5, 255, 0xff, 0x00, 0x00, 0x01}, // fmul.w d f  
	{0xb82c, &op_fmul,	  4,   5, 255, 0xff, 0x00, 0x00, 0x01}, // fmul.w e f  
	{0xb82d, &op_fmul,	  5,   5, 255, 0xff, 0x00, 0x00, 0x01}, // fmul.w f f  
	{0xb82e, &op_fmul,	  6,   5, 255, 0xff, 0x00, 0x00, 0x01}, // fmul.w g f  
	{0xb82f, &op_fmul,	  7,   5, 255, 0xff, 0x00, 0x00, 0x01}, // fmul.w h f  
	{0xb830, &op_fmul,	  0,   6, 255, 0xff, 0x00, 0x00, 0x01}, // fmul.w a g  
	{0xb831, &op_fmul,	  1,   6, 255, 0xff, 0x00, 0x00, 0x01}, // fmul.w b g  
	{0xb832, &op_fmul,	  2,   6, 255, 0xff, 0x00, 0x00, 0x01}, // fmul.w c g  
	{0xb833, &op_fmul,	  3,   6, 255, 0xff, 0x00, 0x00, 0x01}, // fmul.w d g  
	{0xb834, &op_fmul,	  4,   6, 255, 0xff, 0x00, 0x00, 0x01}, // fmul.w e g  
	{0xb835, &op_fmul,	  5,   6, 255, 0xff, 0x00, 0x00, 0x01}, // fmul.w f g  
	{0xb836, &op_fmul,	  6,   6, 255, 0xff, 0x00, 0x00, 0x01}, // fmul.w g g  
	{0xb837, &op_fmul,	  7,   6, 255, 0xff, 0x00, 0x00, 0x01}, // fmul.w h g  
	{0xb838, &op_fmul,	  0,   7, 255, 0xff, 0x00, 0x00, 0x01}, // fmul.w a h  
	{0xb839, &op_fmul,	  1,   7, 255, 0xff, 0x00, 0x00, 0x01}, // fmul.w b h  
	{0xb83a, &op_fmul,	  2,   7, 255, 0xff, 0x00, 0x00, 0x01}, // fmul.w c h  
	{0xb83b, &op_fmul,	  3,   7, 255, 0xff, 0x00, 0x00, 0x01}, // fmul.w d h  
	{0xb83c, &op_fmul,	  4,   7, 255, 0xff, 0x00, 0x00, 0x01}, // fmul.w e h  
	{0xb83d, &op_fmul,	  5,   7, 255, 0xff, 0x00, 0x00, 0x01}, // fmul.w f h  
	{0xb83e, &op_fmul,	  6,   7, 255, 0xff, 0x00, 0x00, 0x01}, // fmul.w g h  
	{0xb83f, &op_fmul,	  7,   7, 255, 0xff, 0x00, 0x00, 0x01}, // fmul.w h h  
	{0xb840, &op_fmul,	  0,   0, 255, 0xff, 0x00, 0x00, 0x02}, // fmul.d a a  
	{0xb841, &op_fmul,	  1,   0, 255, 0xff, 0x00, 0x00, 0x02}, // fmul.d b a  
	{0xb842, &op_fmul,	  2,   0, 255, 0xff, 0x00, 0x00, 0x02}, // fmul.d c a  
	{0xb843, &op_fmul,	  3,   0, 255, 0xff, 0x00, 0x00, 0x02}, // fmul.d d a  
	{0xb844, &op_fmul,	  4,   0, 255, 0xff, 0x00, 0x00, 0x02}, // fmul.d e a  
	{0xb845, &op_fmul,	  5,   0, 255, 0xff, 0x00, 0x00, 0x02}, // fmul.d f a  
	{0xb846, &op_fmul,	  6,   0, 255, 0xff, 0x00, 0x00, 0x02}, // fmul.d g a  
	{0xb847, &op_fmul,	  7,   0, 255, 0xff, 0x00, 0x00, 0x02}, // fmul.d h a  
	{0xb848, &op_fmul,	  0,   1, 255, 0xff, 0x00, 0x00, 0x02}, // fmul.d a b  
	{0xb849, &op_fmul,	  1,   1, 255, 0xff, 0x00, 0x00, 0x02}, // fmul.d b b  
	{0xb84a, &op_fmul,	  2,   1, 255, 0xff, 0x00, 0x00, 0x02}, // fmul.d c b  
	{0xb84b, &op_fmul,	  3,   1, 255, 0xff, 0x00, 0x00, 0x02}, // fmul.d d b  
	{0xb84c, &op_fmul,	  4,   1, 255, 0xff, 0x00, 0x00, 0x02}, // fmul.d e b  
	{0xb84d, &op_fmul,	  5,   1, 255, 0xff, 0x00, 0x00, 0x02}, // fmul.d f b  
	{0xb84e, &op_fmul,	  6,   1, 255, 0xff, 0x00, 0x00, 0x02}, // fmul.d g b  
	{0xb84f, &op_fmul,	  7,   1, 255, 0xff, 0x00, 0x00, 0x02}, // fmul.d h b  
	{0xb850, &op_fmul,	  0,   2, 255, 0xff, 0x00, 0x00, 0x02}, // fmul.d a c  
	{0xb851, &op_fmul,	  1,   2, 255, 0xff, 0x00, 0x00, 0x02}, // fmul.d b c  
	{0xb852, &op_fmul,	  2,   2, 255, 0xff, 0x00, 0x00, 0x02}, // fmul.d c c  
	{0xb853, &op_fmul,	  3,   2, 255, 0xff, 0x00, 0x00, 0x02}, // fmul.d d c  
	{0xb854, &op_fmul,	  4,   2, 255, 0xff, 0x00, 0x00, 0x02}, // fmul.d e c  
	{0xb855, &op_fmul,	  5,   2, 255, 0xff, 0x00, 0x00, 0x02}, // fmul.d f c  
	{0xb856, &op_fmul,	  6,   2, 255, 0xff, 0x00, 0x00, 0x02}, // fmul.d g c  
	{0xb857, &op_fmul,	  7,   2, 255, 0xff, 0x00, 0x00, 0x02}, // fmul.d h c  
	{0xb858, &op_fmul,	  0,   3, 255, 0xff, 0x00, 0x00, 0x02}, // fmul.d a d  
	{0xb859, &op_fmul,	  1,   3, 255, 0xff, 0x00, 0x00, 0x02}, // fmul.d b d  
	{0xb85a, &op_fmul,	  2,   3, 255, 0xff, 0x00, 0x00, 0x02}, // fmul.d c d  
	{0xb85b, &op_fmul,	  3,   3, 255, 0xff, 0x00, 0x00, 0x02}, // fmul.d d d  
	{0xb85c, &op_fmul,	  4,   3, 255, 0xff, 0x00, 0x00, 0x02}, // fmul.d e d  
	{0xb85d, &op_fmul,	  5,   3, 255, 0xff, 0x00, 0x00, 0x02}, // fmul.d f d  
	{0xb85e, &op_fmul,	  6,   3, 255, 0xff, 0x00, 0x00, 0x02}, // fmul.d g d  
	{0xb85f, &op_fmul,	  7,   3, 255, 0xff, 0x00, 0x00, 0x02}, // fmul.d h d  
	{0xb860, &op_fmul,	  0,   4, 255, 0xff, 0x00, 0x00, 0x02}, // fmul.d a e  
	{0xb861, &op_fmul,	  1,   4, 255, 0xff, 0x00, 0x00, 0x02}, // fmul.d b e  
	{0xb862, &op_fmul,	  2,   4, 255, 0xff, 0x00, 0x00, 0x02}, // fmul.d c e  
	{0xb863, &op_fmul,	  3,   4, 255, 0xff, 0x00, 0x00, 0x02}, // fmul.d d e  
	{0xb864, &op_fmul,	  4,   4, 255, 0xff, 0x00, 0x00, 0x02}, // fmul.d e e  
	{0xb865, &op_fmul,	  5,   4, 255, 0xff, 0x00, 0x00, 0x02}, // fmul.d f e  
	{0xb866, &op_fmul,	  6,   4, 255, 0xff, 0x00, 0x00, 0x02}, // fmul.d g e  
	{0xb867, &op_fmul,	  7,   4, 255, 0xff, 0x00, 0x00, 0x02}, // fmul.d h e  
	{0xb868, &op_fmul,	  0,   5, 255, 0xff, 0x00, 0x00, 0x02}, // fmul.d a f  
	{0xb869, &op_fmul,	  1,   5, 255, 0xff, 0x00, 0x00, 0x02}, // fmul.d b f  
	{0xb86a, &op_fmul,	  2,   5, 255, 0xff, 0x00, 0x00, 0x02}, // fmul.d c f  
	{0xb86b, &op_fmul,	  3,   5, 255, 0xff, 0x00, 0x00, 0x02}, // fmul.d d f  
	{0xb86c, &op_fmul,	  4,   5, 255, 0xff, 0x00, 0x00, 0x02}, // fmul.d e f  
	{0xb86d, &op_fmul,	  5,   5, 255, 0xff, 0x00, 0x00, 0x02}, // fmul.d f f  
	{0xb86e, &op_fmul,	  6,   5, 255, 0xff, 0x00, 0x00, 0x02}, // fmul.d g f  
	{0xb86f, &op_fmul,	  7,   5, 255, 0xff, 0x00, 0x00, 0x02}, // fmul.d h f  
	{0xb870, &op_fmul,	  0,   6, 255, 0xff, 0x00, 0x00, 0x02}, // fmul.d a g  
	{0xb871, &op_fmul,	  1,   6, 255, 0xff, 0x00, 0x00, 0x02}, // fmul.d b g  
	{0xb872, &op_fmul,	  2,   6, 255, 0xff, 0x00, 0x00, 0x02}, // fmul.d c g  
	{0xb873, &op_fmul,	  3,   6, 255, 0xff, 0x00, 0x00, 0x02}, // fmul.d d g  
	{0xb874, &op_fmul,	  4,   6, 255, 0xff, 0x00, 0x00, 0x02}, // fmul.d e g  
	{0xb875, &op_fmul,	  5,   6, 255, 0xff, 0x00, 0x00, 0x02}, // fmul.d f g  
	{0xb876, &op_fmul,	  6,   6, 255, 0xff, 0x00, 0x00, 0x02}, // fmul.d g g  
	{0xb877, &op_fmul,	  7,   6, 255, 0xff, 0x00, 0x00, 0x02}, // fmul.d h g  
	{0xb878, &op_fmul,	  0,   7, 255, 0xff, 0x00, 0x00, 0x02}, // fmul.d a h  
	{0xb879, &op_fmul,	  1,   7, 255, 0xff, 0x00, 0x00, 0x02}, // fmul.d b h  
	{0xb87a, &op_fmul,	  2,   7, 255, 0xff, 0x00, 0x00, 0x02}, // fmul.d c h  
	{0xb87b, &op_fmul,	  3,   7, 255, 0xff, 0x00, 0x00, 0x02}, // fmul.d d h  
	{0xb87c, &op_fmul,	  4,   7, 255, 0xff, 0x00, 0x00, 0x02}, // fmul.d e h  
	{0xb87d, &op_fmul,	  5,   7, 255, 0xff, 0x00, 0x00, 0x02}, // fmul.d f h  
	{0xb87e, &op_fmul,	  6,   7, 255, 0xff, 0x00, 0x00, 0x02}, // fmul.d g h  
	{0xb87f, &op_fmul,	  7,   7, 255, 0xff, 0x00, 0x00, 0x02}, // fmul.d h h  
	{0xb880, &op_fmul,	  0,   0, 255, 0xff, 0x00, 0x00, 0x04}, // fmul a a  
	{0xb881, &op_fmul,	  1,   0, 255, 0xff, 0x00, 0x00, 0x04}, // fmul b a  
	{0xb882, &op_fmul,	  2,   0, 255, 0xff, 0x00, 0x00, 0x04}, // fmul c a  
	{0xb883, &op_fmul,	  3,   0, 255, 0xff, 0x00, 0x00, 0x04}, // fmul d a  
	{0xb884, &op_fmul,	  4,   0, 255, 0xff, 0x00, 0x00, 0x04}, // fmul e a  
	{0xb885, &op_fmul,	  5,   0, 255, 0xff, 0x00, 0x00, 0x04}, // fmul f a  
	{0xb886, &op_fmul,	  6,   0, 255, 0xff, 0x00, 0x00, 0x04}, // fmul g a  
	{0xb887, &op_fmul,	  7,   0, 255, 0xff, 0x00, 0x00, 0x04}, // fmul h a  
	{0xb888, &op_fmul,	  0,   1, 255, 0xff, 0x00, 0x00, 0x04}, // fmul a b  
	{0xb889, &op_fmul,	  1,   1, 255, 0xff, 0x00, 0x00, 0x04}, // fmul b b  
	{0xb88a, &op_fmul,	  2,   1, 255, 0xff, 0x00, 0x00, 0x04}, // fmul c b  
	{0xb88b, &op_fmul,	  3,   1, 255, 0xff, 0x00, 0x00, 0x04}, // fmul d b  
	{0xb88c, &op_fmul,	  4,   1, 255, 0xff, 0x00, 0x00, 0x04}, // fmul e b  
	{0xb88d, &op_fmul,	  5,   1, 255, 0xff, 0x00, 0x00, 0x04}, // fmul f b  
	{0xb88e, &op_fmul,	  6,   1, 255, 0xff, 0x00, 0x00, 0x04}, // fmul g b  
	{0xb88f, &op_fmul,	  7,   1, 255, 0xff, 0x00, 0x00, 0x04}, // fmul h b  
	{0xb890, &op_fmul,	  0,   2, 255, 0xff, 0x00, 0x00, 0x04}, // fmul a c  
	{0xb891, &op_fmul,	  1,   2, 255, 0xff, 0x00, 0x00, 0x04}, // fmul b c  
	{0xb892, &op_fmul,	  2,   2, 255, 0xff, 0x00, 0x00, 0x04}, // fmul c c  
	{0xb893, &op_fmul,	  3,   2, 255, 0xff, 0x00, 0x00, 0x04}, // fmul d c  
	{0xb894, &op_fmul,	  4,   2, 255, 0xff, 0x00, 0x00, 0x04}, // fmul e c  
	{0xb895, &op_fmul,	  5,   2, 255, 0xff, 0x00, 0x00, 0x04}, // fmul f c  
	{0xb896, &op_fmul,	  6,   2, 255, 0xff, 0x00, 0x00, 0x04}, // fmul g c  
	{0xb897, &op_fmul,	  7,   2, 255, 0xff, 0x00, 0x00, 0x04}, // fmul h c  
	{0xb898, &op_fmul,	  0,   3, 255, 0xff, 0x00, 0x00, 0x04}, // fmul a d  
	{0xb899, &op_fmul,	  1,   3, 255, 0xff, 0x00, 0x00, 0x04}, // fmul b d  
	{0xb89a, &op_fmul,	  2,   3, 255, 0xff, 0x00, 0x00, 0x04}, // fmul c d  
	{0xb89b, &op_fmul,	  3,   3, 255, 0xff, 0x00, 0x00, 0x04}, // fmul d d  
	{0xb89c, &op_fmul,	  4,   3, 255, 0xff, 0x00, 0x00, 0x04}, // fmul e d  
	{0xb89d, &op_fmul,	  5,   3, 255, 0xff, 0x00, 0x00, 0x04}, // fmul f d  
	{0xb89e, &op_fmul,	  6,   3, 255, 0xff, 0x00, 0x00, 0x04}, // fmul g d  
	{0xb89f, &op_fmul,	  7,   3, 255, 0xff, 0x00, 0x00, 0x04}, // fmul h d  
	{0xb8a0, &op_fmul,	  0,   4, 255, 0xff, 0x00, 0x00, 0x04}, // fmul a e  
	{0xb8a1, &op_fmul,	  1,   4, 255, 0xff, 0x00, 0x00, 0x04}, // fmul b e  
	{0xb8a2, &op_fmul,	  2,   4, 255, 0xff, 0x00, 0x00, 0x04}, // fmul c e  
	{0xb8a3, &op_fmul,	  3,   4, 255, 0xff, 0x00, 0x00, 0x04}, // fmul d e  
	{0xb8a4, &op_fmul,	  4,   4, 255, 0xff, 0x00, 0x00, 0x04}, // fmul e e  
	{0xb8a5, &op_fmul,	  5,   4, 255, 0xff, 0x00, 0x00, 0x04}, // fmul f e  
	{0xb8a6, &op_fmul,	  6,   4, 255, 0xff, 0x00, 0x00, 0x04}, // fmul g e  
	{0xb8a7, &op_fmul,	  7,   4, 255, 0xff, 0x00, 0x00, 0x04}, // fmul h e  
	{0xb8a8, &op_fmul,	  0,   5, 255, 0xff, 0x00, 0x00, 0x04}, // fmul a f  
	{0xb8a9, &op_fmul,	  1,   5, 255, 0xff, 0x00, 0x00, 0x04}, // fmul b f  
	{0xb8aa, &op_fmul,	  2,   5, 255, 0xff, 0x00, 0x00, 0x04}, // fmul c f  
	{0xb8ab, &op_fmul,	  3,   5, 255, 0xff, 0x00, 0x00, 0x04}, // fmul d f  
	{0xb8ac, &op_fmul,	  4,   5, 255, 0xff, 0x00, 0x00, 0x04}, // fmul e f  
	{0xb8ad, &op_fmul,	  5,   5, 255, 0xff, 0x00, 0x00, 0x04}, // fmul f f  
	{0xb8ae, &op_fmul,	  6,   5, 255, 0xff, 0x00, 0x00, 0x04}, // fmul g f  
	{0xb8af, &op_fmul,	  7,   5, 255, 0xff, 0x00, 0x00, 0x04}, // fmul h f  
	{0xb8b0, &op_fmul,	  0,   6, 255, 0xff, 0x00, 0x00, 0x04}, // fmul a g  
	{0xb8b1, &op_fmul,	  1,   6, 255, 0xff, 0x00, 0x00, 0x04}, // fmul b g  
	{0xb8b2, &op_fmul,	  2,   6, 255, 0xff, 0x00, 0x00, 0x04}, // fmul c g  
	{0xb8b3, &op_fmul,	  3,   6, 255, 0xff, 0x00, 0x00, 0x04}, // fmul d g  
	{0xb8b4, &op_fmul,	  4,   6, 255, 0xff, 0x00, 0x00, 0x04}, // fmul e g  
	{0xb8b5, &op_fmul,	  5,   6, 255, 0xff, 0x00, 0x00, 0x04}, // fmul f g  
	{0xb8b6, &op_fmul,	  6,   6, 255, 0xff, 0x00, 0x00, 0x04}, // fmul g g  
	{0xb8b7, &op_fmul,	  7,   6, 255, 0xff, 0x00, 0x00, 0x04}, // fmul h g  
	{0xb8b8, &op_fmul,	  0,   7, 255, 0xff, 0x00, 0x00, 0x04}, // fmul a h  
	{0xb8b9, &op_fmul,	  1,   7, 255, 0xff, 0x00, 0x00, 0x04}, // fmul b h  
	{0xb8ba, &op_fmul,	  2,   7, 255, 0xff, 0x00, 0x00, 0x04}, // fmul c h  
	{0xb8bb, &op_fmul,	  3,   7, 255, 0xff, 0x00, 0x00, 0x04}, // fmul d h  
	{0xb8bc, &op_fmul,	  4,   7, 255, 0xff, 0x00, 0x00, 0x04}, // fmul e h  
	{0xb8bd, &op_fmul,	  5,   7, 255, 0xff, 0x00, 0x00, 0x04}, // fmul f h  
	{0xb8be, &op_fmul,	  6,   7, 255, 0xff, 0x00, 0x00, 0x04}, // fmul g h  
	{0xb8bf, &op_fmul,	  7,   7, 255, 0xff, 0x00, 0x00, 0x04}, // fmul h h  
	{0xb900, &op_fmul,	  0,   0, 255, 0xff, 0x01, 0x00, 0x01}, // fmul.wr a a  
	{0xb901, &op_fmul,	  1,   0, 255, 0xff, 0x01, 0x00, 0x01}, // fmul.wr b a  
	{0xb902, &op_fmul,	  2,   0, 255, 0xff, 0x01, 0x00, 0x01}, // fmul.wr c a  
	{0xb903, &op_fmul,	  3,   0, 255, 0xff, 0x01, 0x00, 0x01}, // fmul.wr d a  
	{0xb904, &op_fmul,	  4,   0, 255, 0xff, 0x01, 0x00, 0x01}, // fmul.wr e a  
	{0xb905, &op_fmul,	  5,   0, 255, 0xff, 0x01, 0x00, 0x01}, // fmul.wr f a  
	{0xb906, &op_fmul,	  6,   0, 255, 0xff, 0x01, 0x00, 0x01}, // fmul.wr g a  
	{0xb907, &op_fmul,	  7,   0, 255, 0xff, 0x01, 0x00, 0x01}, // fmul.wr h a  
	{0xb908, &op_fmul,	  0,   1, 255, 0xff, 0x01, 0x00, 0x01}, // fmul.wr a b  
	{0xb909, &op_fmul,	  1,   1, 255, 0xff, 0x01, 0x00, 0x01}, // fmul.wr b b  
	{0xb90a, &op_fmul,	  2,   1, 255, 0xff, 0x01, 0x00, 0x01}, // fmul.wr c b  
	{0xb90b, &op_fmul,	  3,   1, 255, 0xff, 0x01, 0x00, 0x01}, // fmul.wr d b  
	{0xb90c, &op_fmul,	  4,   1, 255, 0xff, 0x01, 0x00, 0x01}, // fmul.wr e b  
	{0xb90d, &op_fmul,	  5,   1, 255, 0xff, 0x01, 0x00, 0x01}, // fmul.wr f b  
	{0xb90e, &op_fmul,	  6,   1, 255, 0xff, 0x01, 0x00, 0x01}, // fmul.wr g b  
	{0xb90f, &op_fmul,	  7,   1, 255, 0xff, 0x01, 0x00, 0x01}, // fmul.wr h b  
	{0xb910, &op_fmul,	  0,   2, 255, 0xff, 0x01, 0x00, 0x01}, // fmul.wr a c  
	{0xb911, &op_fmul,	  1,   2, 255, 0xff, 0x01, 0x00, 0x01}, // fmul.wr b c  
	{0xb912, &op_fmul,	  2,   2, 255, 0xff, 0x01, 0x00, 0x01}, // fmul.wr c c  
	{0xb913, &op_fmul,	  3,   2, 255, 0xff, 0x01, 0x00, 0x01}, // fmul.wr d c  
	{0xb914, &op_fmul,	  4,   2, 255, 0xff, 0x01, 0x00, 0x01}, // fmul.wr e c  
	{0xb915, &op_fmul,	  5,   2, 255, 0xff, 0x01, 0x00, 0x01}, // fmul.wr f c  
	{0xb916, &op_fmul,	  6,   2, 255, 0xff, 0x01, 0x00, 0x01}, // fmul.wr g c  
	{0xb917, &op_fmul,	  7,   2, 255, 0xff, 0x01, 0x00, 0x01}, // fmul.wr h c  
	{0xb918, &op_fmul,	  0,   3, 255, 0xff, 0x01, 0x00, 0x01}, // fmul.wr a d  
	{0xb919, &op_fmul,	  1,   3, 255, 0xff, 0x01, 0x00, 0x01}, // fmul.wr b d  
	{0xb91a, &op_fmul,	  2,   3, 255, 0xff, 0x01, 0x00, 0x01}, // fmul.wr c d  
	{0xb91b, &op_fmul,	  3,   3, 255, 0xff, 0x01, 0x00, 0x01}, // fmul.wr d d  
	{0xb91c, &op_fmul,	  4,   3, 255, 0xff, 0x01, 0x00, 0x01}, // fmul.wr e d  
	{0xb91d, &op_fmul,	  5,   3, 255, 0xff, 0x01, 0x00, 0x01}, // fmul.wr f d  
	{0xb91e, &op_fmul,	  6,   3, 255, 0xff, 0x01, 0x00, 0x01}, // fmul.wr g d  
	{0xb91f, &op_fmul,	  7,   3, 255, 0xff, 0x01, 0x00, 0x01}, // fmul.wr h d  
	{0xb920, &op_fmul,	  0,   4, 255, 0xff, 0x01, 0x00, 0x01}, // fmul.wr a e  
	{0xb921, &op_fmul,	  1,   4, 255, 0xff, 0x01, 0x00, 0x01}, // fmul.wr b e  
	{0xb922, &op_fmul,	  2,   4, 255, 0xff, 0x01, 0x00, 0x01}, // fmul.wr c e  
	{0xb923, &op_fmul,	  3,   4, 255, 0xff, 0x01, 0x00, 0x01}, // fmul.wr d e  
	{0xb924, &op_fmul,	  4,   4, 255, 0xff, 0x01, 0x00, 0x01}, // fmul.wr e e  
	{0xb925, &op_fmul,	  5,   4, 255, 0xff, 0x01, 0x00, 0x01}, // fmul.wr f e  
	{0xb926, &op_fmul,	  6,   4, 255, 0xff, 0x01, 0x00, 0x01}, // fmul.wr g e  
	{0xb927, &op_fmul,	  7,   4, 255, 0xff, 0x01, 0x00, 0x01}, // fmul.wr h e  
	{0xb928, &op_fmul,	  0,   5, 255, 0xff, 0x01, 0x00, 0x01}, // fmul.wr a f  
	{0xb929, &op_fmul,	  1,   5, 255, 0xff, 0x01, 0x00, 0x01}, // fmul.wr b f  
	{0xb92a, &op_fmul,	  2,   5, 255, 0xff, 0x01, 0x00, 0x01}, // fmul.wr c f  
	{0xb92b, &op_fmul,	  3,   5, 255, 0xff, 0x01, 0x00, 0x01}, // fmul.wr d f  
	{0xb92c, &op_fmul,	  4,   5, 255, 0xff, 0x01, 0x00, 0x01}, // fmul.wr e f  
	{0xb92d, &op_fmul,	  5,   5, 255, 0xff, 0x01, 0x00, 0x01}, // fmul.wr f f  
	{0xb92e, &op_fmul,	  6,   5, 255, 0xff, 0x01, 0x00, 0x01}, // fmul.wr g f  
	{0xb92f, &op_fmul,	  7,   5, 255, 0xff, 0x01, 0x00, 0x01}, // fmul.wr h f  
	{0xb930, &op_fmul,	  0,   6, 255, 0xff, 0x01, 0x00, 0x01}, // fmul.wr a g  
	{0xb931, &op_fmul,	  1,   6, 255, 0xff, 0x01, 0x00, 0x01}, // fmul.wr b g  
	{0xb932, &op_fmul,	  2,   6, 255, 0xff, 0x01, 0x00, 0x01}, // fmul.wr c g  
	{0xb933, &op_fmul,	  3,   6, 255, 0xff, 0x01, 0x00, 0x01}, // fmul.wr d g  
	{0xb934, &op_fmul,	  4,   6, 255, 0xff, 0x01, 0x00, 0x01}, // fmul.wr e g  
	{0xb935, &op_fmul,	  5,   6, 255, 0xff, 0x01, 0x00, 0x01}, // fmul.wr f g  
	{0xb936, &op_fmul,	  6,   6, 255, 0xff, 0x01, 0x00, 0x01}, // fmul.wr g g  
	{0xb937, &op_fmul,	  7,   6, 255, 0xff, 0x01, 0x00, 0x01}, // fmul.wr h g  
	{0xb938, &op_fmul,	  0,   7, 255, 0xff, 0x01, 0x00, 0x01}, // fmul.wr a h  
	{0xb939, &op_fmul,	  1,   7, 255, 0xff, 0x01, 0x00, 0x01}, // fmul.wr b h  
	{0xb93a, &op_fmul,	  2,   7, 255, 0xff, 0x01, 0x00, 0x01}, // fmul.wr c h  
	{0xb93b, &op_fmul,	  3,   7, 255, 0xff, 0x01, 0x00, 0x01}, // fmul.wr d h  
	{0xb93c, &op_fmul,	  4,   7, 255, 0xff, 0x01, 0x00, 0x01}, // fmul.wr e h  
	{0xb93d, &op_fmul,	  5,   7, 255, 0xff, 0x01, 0x00, 0x01}, // fmul.wr f h  
	{0xb93e, &op_fmul,	  6,   7, 255, 0xff, 0x01, 0x00, 0x01}, // fmul.wr g h  
	{0xb93f, &op_fmul,	  7,   7, 255, 0xff, 0x01, 0x00, 0x01}, // fmul.wr h h  
	{0xb940, &op_fmul,	  0,   0, 255, 0xff, 0x01, 0x00, 0x02}, // fmul.dr a a  
	{0xb941, &op_fmul,	  1,   0, 255, 0xff, 0x01, 0x00, 0x02}, // fmul.dr b a  
	{0xb942, &op_fmul,	  2,   0, 255, 0xff, 0x01, 0x00, 0x02}, // fmul.dr c a  
	{0xb943, &op_fmul,	  3,   0, 255, 0xff, 0x01, 0x00, 0x02}, // fmul.dr d a  
	{0xb944, &op_fmul,	  4,   0, 255, 0xff, 0x01, 0x00, 0x02}, // fmul.dr e a  
	{0xb945, &op_fmul,	  5,   0, 255, 0xff, 0x01, 0x00, 0x02}, // fmul.dr f a  
	{0xb946, &op_fmul,	  6,   0, 255, 0xff, 0x01, 0x00, 0x02}, // fmul.dr g a  
	{0xb947, &op_fmul,	  7,   0, 255, 0xff, 0x01, 0x00, 0x02}, // fmul.dr h a  
	{0xb948, &op_fmul,	  0,   1, 255, 0xff, 0x01, 0x00, 0x02}, // fmul.dr a b  
	{0xb949, &op_fmul,	  1,   1, 255, 0xff, 0x01, 0x00, 0x02}, // fmul.dr b b  
	{0xb94a, &op_fmul,	  2,   1, 255, 0xff, 0x01, 0x00, 0x02}, // fmul.dr c b  
	{0xb94b, &op_fmul,	  3,   1, 255, 0xff, 0x01, 0x00, 0x02}, // fmul.dr d b  
	{0xb94c, &op_fmul,	  4,   1, 255, 0xff, 0x01, 0x00, 0x02}, // fmul.dr e b  
	{0xb94d, &op_fmul,	  5,   1, 255, 0xff, 0x01, 0x00, 0x02}, // fmul.dr f b  
	{0xb94e, &op_fmul,	  6,   1, 255, 0xff, 0x01, 0x00, 0x02}, // fmul.dr g b  
	{0xb94f, &op_fmul,	  7,   1, 255, 0xff, 0x01, 0x00, 0x02}, // fmul.dr h b  
	{0xb950, &op_fmul,	  0,   2, 255, 0xff, 0x01, 0x00, 0x02}, // fmul.dr a c  
	{0xb951, &op_fmul,	  1,   2, 255, 0xff, 0x01, 0x00, 0x02}, // fmul.dr b c  
	{0xb952, &op_fmul,	  2,   2, 255, 0xff, 0x01, 0x00, 0x02}, // fmul.dr c c  
	{0xb953, &op_fmul,	  3,   2, 255, 0xff, 0x01, 0x00, 0x02}, // fmul.dr d c  
	{0xb954, &op_fmul,	  4,   2, 255, 0xff, 0x01, 0x00, 0x02}, // fmul.dr e c  
	{0xb955, &op_fmul,	  5,   2, 255, 0xff, 0x01, 0x00, 0x02}, // fmul.dr f c  
	{0xb956, &op_fmul,	  6,   2, 255, 0xff, 0x01, 0x00, 0x02}, // fmul.dr g c  
	{0xb957, &op_fmul,	  7,   2, 255, 0xff, 0x01, 0x00, 0x02}, // fmul.dr h c  
	{0xb958, &op_fmul,	  0,   3, 255, 0xff, 0x01, 0x00, 0x02}, // fmul.dr a d  
	{0xb959, &op_fmul,	  1,   3, 255, 0xff, 0x01, 0x00, 0x02}, // fmul.dr b d  
	{0xb95a, &op_fmul,	  2,   3, 255, 0xff, 0x01, 0x00, 0x02}, // fmul.dr c d  
	{0xb95b, &op_fmul,	  3,   3, 255, 0xff, 0x01, 0x00, 0x02}, // fmul.dr d d  
	{0xb95c, &op_fmul,	  4,   3, 255, 0xff, 0x01, 0x00, 0x02}, // fmul.dr e d  
	{0xb95d, &op_fmul,	  5,   3, 255, 0xff, 0x01, 0x00, 0x02}, // fmul.dr f d  
	{0xb95e, &op_fmul,	  6,   3, 255, 0xff, 0x01, 0x00, 0x02}, // fmul.dr g d  
	{0xb95f, &op_fmul,	  7,   3, 255, 0xff, 0x01, 0x00, 0x02}, // fmul.dr h d  
	{0xb960, &op_fmul,	  0,   4, 255, 0xff, 0x01, 0x00, 0x02}, // fmul.dr a e  
	{0xb961, &op_fmul,	  1,   4, 255, 0xff, 0x01, 0x00, 0x02}, // fmul.dr b e  
	{0xb962, &op_fmul,	  2,   4, 255, 0xff, 0x01, 0x00, 0x02}, // fmul.dr c e  
	{0xb963, &op_fmul,	  3,   4, 255, 0xff, 0x01, 0x00, 0x02}, // fmul.dr d e  
	{0xb964, &op_fmul,	  4,   4, 255, 0xff, 0x01, 0x00, 0x02}, // fmul.dr e e  
	{0xb965, &op_fmul,	  5,   4, 255, 0xff, 0x01, 0x00, 0x02}, // fmul.dr f e  
	{0xb966, &op_fmul,	  6,   4, 255, 0xff, 0x01, 0x00, 0x02}, // fmul.dr g e  
	{0xb967, &op_fmul,	  7,   4, 255, 0xff, 0x01, 0x00, 0x02}, // fmul.dr h e  
	{0xb968, &op_fmul,	  0,   5, 255, 0xff, 0x01, 0x00, 0x02}, // fmul.dr a f  
	{0xb969, &op_fmul,	  1,   5, 255, 0xff, 0x01, 0x00, 0x02}, // fmul.dr b f  
	{0xb96a, &op_fmul,	  2,   5, 255, 0xff, 0x01, 0x00, 0x02}, // fmul.dr c f  
	{0xb96b, &op_fmul,	  3,   5, 255, 0xff, 0x01, 0x00, 0x02}, // fmul.dr d f  
	{0xb96c, &op_fmul,	  4,   5, 255, 0xff, 0x01, 0x00, 0x02}, // fmul.dr e f  
	{0xb96d, &op_fmul,	  5,   5, 255, 0xff, 0x01, 0x00, 0x02}, // fmul.dr f f  
	{0xb96e, &op_fmul,	  6,   5, 255, 0xff, 0x01, 0x00, 0x02}, // fmul.dr g f  
	{0xb96f, &op_fmul,	  7,   5, 255, 0xff, 0x01, 0x00, 0x02}, // fmul.dr h f  
	{0xb970, &op_fmul,	  0,   6, 255, 0xff, 0x01, 0x00, 0x02}, // fmul.dr a g  
	{0xb971, &op_fmul,	  1,   6, 255, 0xff, 0x01, 0x00, 0x02}, // fmul.dr b g  
	{0xb972, &op_fmul,	  2,   6, 255, 0xff, 0x01, 0x00, 0x02}, // fmul.dr c g  
	{0xb973, &op_fmul,	  3,   6, 255, 0xff, 0x01, 0x00, 0x02}, // fmul.dr d g  
	{0xb974, &op_fmul,	  4,   6, 255, 0xff, 0x01, 0x00, 0x02}, // fmul.dr e g  
	{0xb975, &op_fmul,	  5,   6, 255, 0xff, 0x01, 0x00, 0x02}, // fmul.dr f g  
	{0xb976, &op_fmul,	  6,   6, 255, 0xff, 0x01, 0x00, 0x02}, // fmul.dr g g  
	{0xb977, &op_fmul,	  7,   6, 255, 0xff, 0x01, 0x00, 0x02}, // fmul.dr h g  
	{0xb978, &op_fmul,	  0,   7, 255, 0xff, 0x01, 0x00, 0x02}, // fmul.dr a h  
	{0xb979, &op_fmul,	  1,   7, 255, 0xff, 0x01, 0x00, 0x02}, // fmul.dr b h  
	{0xb97a, &op_fmul,	  2,   7, 255, 0xff, 0x01, 0x00, 0x02}, // fmul.dr c h  
	{0xb97b, &op_fmul,	  3,   7, 255, 0xff, 0x01, 0x00, 0x02}, // fmul.dr d h  
	{0xb97c, &op_fmul,	  4,   7, 255, 0xff, 0x01, 0x00, 0x02}, // fmul.dr e h  
	{0xb97d, &op_fmul,	  5,   7, 255, 0xff, 0x01, 0x00, 0x02}, // fmul.dr f h  
	{0xb97e, &op_fmul,	  6,   7, 255, 0xff, 0x01, 0x00, 0x02}, // fmul.dr g h  
	{0xb97f, &op_fmul,	  7,   7, 255, 0xff, 0x01, 0x00, 0x02}, // fmul.dr h h  
	{0xb980, &op_fmul,	  0,   0, 255, 0xff, 0x01, 0x00, 0x04}, // fmul.r a a  
	{0xb981, &op_fmul,	  1,   0, 255, 0xff, 0x01, 0x00, 0x04}, // fmul.r b a  
	{0xb982, &op_fmul,	  2,   0, 255, 0xff, 0x01, 0x00, 0x04}, // fmul.r c a  
	{0xb983, &op_fmul,	  3,   0, 255, 0xff, 0x01, 0x00, 0x04}, // fmul.r d a  
	{0xb984, &op_fmul,	  4,   0, 255, 0xff, 0x01, 0x00, 0x04}, // fmul.r e a  
	{0xb985, &op_fmul,	  5,   0, 255, 0xff, 0x01, 0x00, 0x04}, // fmul.r f a  
	{0xb986, &op_fmul,	  6,   0, 255, 0xff, 0x01, 0x00, 0x04}, // fmul.r g a  
	{0xb987, &op_fmul,	  7,   0, 255, 0xff, 0x01, 0x00, 0x04}, // fmul.r h a  
	{0xb988, &op_fmul,	  0,   1, 255, 0xff, 0x01, 0x00, 0x04}, // fmul.r a b  
	{0xb989, &op_fmul,	  1,   1, 255, 0xff, 0x01, 0x00, 0x04}, // fmul.r b b  
	{0xb98a, &op_fmul,	  2,   1, 255, 0xff, 0x01, 0x00, 0x04}, // fmul.r c b  
	{0xb98b, &op_fmul,	  3,   1, 255, 0xff, 0x01, 0x00, 0x04}, // fmul.r d b  
	{0xb98c, &op_fmul,	  4,   1, 255, 0xff, 0x01, 0x00, 0x04}, // fmul.r e b  
	{0xb98d, &op_fmul,	  5,   1, 255, 0xff, 0x01, 0x00, 0x04}, // fmul.r f b  
	{0xb98e, &op_fmul,	  6,   1, 255, 0xff, 0x01, 0x00, 0x04}, // fmul.r g b  
	{0xb98f, &op_fmul,	  7,   1, 255, 0xff, 0x01, 0x00, 0x04}, // fmul.r h b  
	{0xb990, &op_fmul,	  0,   2, 255, 0xff, 0x01, 0x00, 0x04}, // fmul.r a c  
	{0xb991, &op_fmul,	  1,   2, 255, 0xff, 0x01, 0x00, 0x04}, // fmul.r b c  
	{0xb992, &op_fmul,	  2,   2, 255, 0xff, 0x01, 0x00, 0x04}, // fmul.r c c  
	{0xb993, &op_fmul,	  3,   2, 255, 0xff, 0x01, 0x00, 0x04}, // fmul.r d c  
	{0xb994, &op_fmul,	  4,   2, 255, 0xff, 0x01, 0x00, 0x04}, // fmul.r e c  
	{0xb995, &op_fmul,	  5,   2, 255, 0xff, 0x01, 0x00, 0x04}, // fmul.r f c  
	{0xb996, &op_fmul,	  6,   2, 255, 0xff, 0x01, 0x00, 0x04}, // fmul.r g c  
	{0xb997, &op_fmul,	  7,   2, 255, 0xff, 0x01, 0x00, 0x04}, // fmul.r h c  
	{0xb998, &op_fmul,	  0,   3, 255, 0xff, 0x01, 0x00, 0x04}, // fmul.r a d  
	{0xb999, &op_fmul,	  1,   3, 255, 0xff, 0x01, 0x00, 0x04}, // fmul.r b d  
	{0xb99a, &op_fmul,	  2,   3, 255, 0xff, 0x01, 0x00, 0x04}, // fmul.r c d  
	{0xb99b, &op_fmul,	  3,   3, 255, 0xff, 0x01, 0x00, 0x04}, // fmul.r d d  
	{0xb99c, &op_fmul,	  4,   3, 255, 0xff, 0x01, 0x00, 0x04}, // fmul.r e d  
	{0xb99d, &op_fmul,	  5,   3, 255, 0xff, 0x01, 0x00, 0x04}, // fmul.r f d  
	{0xb99e, &op_fmul,	  6,   3, 255, 0xff, 0x01, 0x00, 0x04}, // fmul.r g d  
	{0xb99f, &op_fmul,	  7,   3, 255, 0xff, 0x01, 0x00, 0x04}, // fmul.r h d  
	{0xb9a0, &op_fmul,	  0,   4, 255, 0xff, 0x01, 0x00, 0x04}, // fmul.r a e  
	{0xb9a1, &op_fmul,	  1,   4, 255, 0xff, 0x01, 0x00, 0x04}, // fmul.r b e  
	{0xb9a2, &op_fmul,	  2,   4, 255, 0xff, 0x01, 0x00, 0x04}, // fmul.r c e  
	{0xb9a3, &op_fmul,	  3,   4, 255, 0xff, 0x01, 0x00, 0x04}, // fmul.r d e  
	{0xb9a4, &op_fmul,	  4,   4, 255, 0xff, 0x01, 0x00, 0x04}, // fmul.r e e  
	{0xb9a5, &op_fmul,	  5,   4, 255, 0xff, 0x01, 0x00, 0x04}, // fmul.r f e  
	{0xb9a6, &op_fmul,	  6,   4, 255, 0xff, 0x01, 0x00, 0x04}, // fmul.r g e  
	{0xb9a7, &op_fmul,	  7,   4, 255, 0xff, 0x01, 0x00, 0x04}, // fmul.r h e  
	{0xb9a8, &op_fmul,	  0,   5, 255, 0xff, 0x01, 0x00, 0x04}, // fmul.r a f  
	{0xb9a9, &op_fmul,	  1,   5, 255, 0xff, 0x01, 0x00, 0x04}, // fmul.r b f  
	{0xb9aa, &op_fmul,	  2,   5, 255, 0xff, 0x01, 0x00, 0x04}, // fmul.r c f  
	{0xb9ab, &op_fmul,	  3,   5, 255, 0xff, 0x01, 0x00, 0x04}, // fmul.r d f  
	{0xb9ac, &op_fmul,	  4,   5, 255, 0xff, 0x01, 0x00, 0x04}, // fmul.r e f  
	{0xb9ad, &op_fmul,	  5,   5, 255, 0xff, 0x01, 0x00, 0x04}, // fmul.r f f  
	{0xb9ae, &op_fmul,	  6,   5, 255, 0xff, 0x01, 0x00, 0x04}, // fmul.r g f  
	{0xb9af, &op_fmul,	  7,   5, 255, 0xff, 0x01, 0x00, 0x04}, // fmul.r h f  
	{0xb9b0, &op_fmul,	  0,   6, 255, 0xff, 0x01, 0x00, 0x04}, // fmul.r a g  
	{0xb9b1, &op_fmul,	  1,   6, 255, 0xff, 0x01, 0x00, 0x04}, // fmul.r b g  
	{0xb9b2, &op_fmul,	  2,   6, 255, 0xff, 0x01, 0x00, 0x04}, // fmul.r c g  
	{0xb9b3, &op_fmul,	  3,   6, 255, 0xff, 0x01, 0x00, 0x04}, // fmul.r d g  
	{0xb9b4, &op_fmul,	  4,   6, 255, 0xff, 0x01, 0x00, 0x04}, // fmul.r e g  
	{0xb9b5, &op_fmul,	  5,   6, 255, 0xff, 0x01, 0x00, 0x04}, // fmul.r f g  
	{0xb9b6, &op_fmul,	  6,   6, 255, 0xff, 0x01, 0x00, 0x04}, // fmul.r g g  
	{0xb9b7, &op_fmul,	  7,   6, 255, 0xff, 0x01, 0x00, 0x04}, // fmul.r h g  
	{0xb9b8, &op_fmul,	  0,   7, 255, 0xff, 0x01, 0x00, 0x04}, // fmul.r a h  
	{0xb9b9, &op_fmul,	  1,   7, 255, 0xff, 0x01, 0x00, 0x04}, // fmul.r b h  
	{0xb9ba, &op_fmul,	  2,   7, 255, 0xff, 0x01, 0x00, 0x04}, // fmul.r c h  
	{0xb9bb, &op_fmul,	  3,   7, 255, 0xff, 0x01, 0x00, 0x04}, // fmul.r d h  
	{0xb9bc, &op_fmul,	  4,   7, 255, 0xff, 0x01, 0x00, 0x04}, // fmul.r e h  
	{0xb9bd, &op_fmul,	  5,   7, 255, 0xff, 0x01, 0x00, 0x04}, // fmul.r f h  
	{0xb9be, &op_fmul,	  6,   7, 255, 0xff, 0x01, 0x00, 0x04}, // fmul.r g h  
	{0xb9bf, &op_fmul,	  7,   7, 255, 0xff, 0x01, 0x00, 0x04}, // fmul.r h h  
	{0xb8c8, &op_fmul,	  0,   8, 255, 0xff, 0x00, 0x01, 0x01}, // fmul.wi a <literal>  
	{0xb8c9, &op_fmul,	  1,   8, 255, 0xff, 0x00, 0x01, 0x01}, // fmul.wi b <literal>  
	{0xb8ca, &op_fmul,	  2,   8, 255, 0xff, 0x00, 0x01, 0x01}, // fmul.wi c <literal>  
	{0xb8cb, &op_fmul,	  3,   8, 255, 0xff, 0x00, 0x01, 0x01}, // fmul.wi d <literal>  
	{0xb8cc, &op_fmul,	  4,   8, 255, 0xff, 0x00, 0x01, 0x01}, // fmul.wi e <literal>  
	{0xb8cd, &op_fmul,	  5,   8, 255, 0xff, 0x00, 0x01, 0x01}, // fmul.wi f <literal>  
	{0xb8ce, &op_fmul,	  6,   8, 255, 0xff, 0x00, 0x01, 0x01}, // fmul.wi g <literal>  
	{0xb8cf, &op_fmul,	  7,   8, 255, 0xff, 0x00, 0x01, 0x01}, // fmul.wi h <literal>  
	{0xb8d0, &op_fmul,	  0,   8, 255, 0xff, 0x00, 0x02, 0x02}, // fmul.di a <literal>  
	{0xb8d1, &op_fmul,	  1,   8, 255, 0xff, 0x00, 0x02, 0x02}, // fmul.di b <literal>  
	{0xb8d2, &op_fmul,	  2,   8, 255, 0xff, 0x00, 0x02, 0x02}, // fmul.di c <literal>  
	{0xb8d3, &op_fmul,	  3,   8, 255, 0xff, 0x00, 0x02, 0x02}, // fmul.di d <literal>  
	{0xb8d4, &op_fmul,	  4,   8, 255, 0xff, 0x00, 0x02, 0x02}, // fmul.di e <literal>  
	{0xb8d5, &op_fmul,	  5,   8, 255, 0xff, 0x00, 0x02, 0x02}, // fmul.di f <literal>  
	{0xb8d6, &op_fmul,	  6,   8, 255, 0xff, 0x00, 0x02, 0x02}, // fmul.di g <literal>  
	{0xb8d7, &op_fmul,	  7,   8, 255, 0xff, 0x00, 0x02, 0x02}, // fmul.di h <literal>  
	{0xb8e0, &op_fmul,	  0,   8, 255, 0xff, 0x00, 0x04, 0x04}, // fmul.i a <literal>  
	{0xb8e1, &op_fmul,	  1,   8, 255, 0xff, 0x00, 0x04, 0x04}, // fmul.i b <literal>  
	{0xb8e2, &op_fmul,	  2,   8, 255, 0xff, 0x00, 0x04, 0x04}, // fmul.i c <literal>  
	{0xb8e3, &op_fmul,	  3,   8, 255, 0xff, 0x00, 0x04, 0x04}, // fmul.i d <literal>  
	{0xb8e4, &op_fmul,	  4,   8, 255, 0xff, 0x00, 0x04, 0x04}, // fmul.i e <literal>  
	{0xb8e5, &op_fmul,	  5,   8, 255, 0xff, 0x00, 0x04, 0x04}, // fmul.i f <literal>  
	{0xb8e6, &op_fmul,	  6,   8, 255, 0xff, 0x00, 0x04, 0x04}, // fmul.i g <literal>  
	{0xb8e7, &op_fmul,	  7,   8, 255, 0xff, 0x00, 0x04, 0x04}, // fmul.i h <literal>  
	{0xb9c8, &op_fmul,	  0,   8, 255, 0xff, 0x01, 0x04, 0x01}, // fmul.wri a <literal>  
	{0xb9c9, &op_fmul,	  1,   8, 255, 0xff, 0x01, 0x04, 0x01}, // fmul.wri b <literal>  
	{0xb9ca, &op_fmul,	  2,   8, 255, 0xff, 0x01, 0x04, 0x01}, // fmul.wri c <literal>  
	{0xb9cb, &op_fmul,	  3,   8, 255, 0xff, 0x01, 0x04, 0x01}, // fmul.wri d <literal>  
	{0xb9cc, &op_fmul,	  4,   8, 255, 0xff, 0x01, 0x04, 0x01}, // fmul.wri e <literal>  
	{0xb9cd, &op_fmul,	  5,   8, 255, 0xff, 0x01, 0x04, 0x01}, // fmul.wri f <literal>  
	{0xb9ce, &op_fmul,	  6,   8, 255, 0xff, 0x01, 0x04, 0x01}, // fmul.wri g <literal>  
	{0xb9cf, &op_fmul,	  7,   8, 255, 0xff, 0x01, 0x04, 0x01}, // fmul.wri h <literal>  
	{0xb9d0, &op_fmul,	  0,   8, 255, 0xff, 0x01, 0x04, 0x02}, // fmul.dri a <literal>  
	{0xb9d1, &op_fmul,	  1,   8, 255, 0xff, 0x01, 0x04, 0x02}, // fmul.dri b <literal>  
	{0xb9d2, &op_fmul,	  2,   8, 255, 0xff, 0x01, 0x04, 0x02}, // fmul.dri c <literal>  
	{0xb9d3, &op_fmul,	  3,   8, 255, 0xff, 0x01, 0x04, 0x02}, // fmul.dri d <literal>  
	{0xb9d4, &op_fmul,	  4,   8, 255, 0xff, 0x01, 0x04, 0x02}, // fmul.dri e <literal>  
	{0xb9d5, &op_fmul,	  5,   8, 255, 0xff, 0x01, 0x04, 0x02}, // fmul.dri f <literal>  
	{0xb9d6, &op_fmul,	  6,   8, 255, 0xff, 0x01, 0x04, 0x02}, // fmul.dri g <literal>  
	{0xb9d7, &op_fmul,	  7,   8, 255, 0xff, 0x01, 0x04, 0x02}, // fmul.dri h <literal>  
	{0xb9e0, &op_fmul,	  0,   8, 255, 0xff, 0x01, 0x04, 0x04}, // fmul.ri a <literal>  
	{0xb9e1, &op_fmul,	  1,   8, 255, 0xff, 0x01, 0x04, 0x04}, // fmul.ri b <literal>  
	{0xb9e2, &op_fmul,	  2,   8, 255, 0xff, 0x01, 0x04, 0x04}, // fmul.ri c <literal>  
	{0xb9e3, &op_fmul,	  3,   8, 255, 0xff, 0x01, 0x04, 0x04}, // fmul.ri d <literal>  
	{0xb9e4, &op_fmul,	  4,   8, 255, 0xff, 0x01, 0x04, 0x04}, // fmul.ri e <literal>  
	{0xb9e5, &op_fmul,	  5,   8, 255, 0xff, 0x01, 0x04, 0x04}, // fmul.ri f <literal>  
	{0xb9e6, &op_fmul,	  6,   8, 255, 0xff, 0x01, 0x04, 0x04}, // fmul.ri g <literal>  
	{0xb9e7, &op_fmul,	  7,   8, 255, 0xff, 0x01, 0x04, 0x04}, // fmul.ri h <literal>  
	{0xba00, &op_flog,	  0,   0, 255, 0xff, 0x00, 0x00, 0x01}, // flog.w a a  
	{0xba01, &op_flog,	  1,   0, 255, 0xff, 0x00, 0x00, 0x01}, // flog.w b a  
	{0xba02, &op_flog,	  2,   0, 255, 0xff, 0x00, 0x00, 0x01}, // flog.w c a  
	{0xba03, &op_flog,	  3,   0, 255, 0xff, 0x00, 0x00, 0x01}, // flog.w d a  
	{0xba04, &op_flog,	  4,   0, 255, 0xff, 0x00, 0x00, 0x01}, // flog.w e a  
	{0xba05, &op_flog,	  5,   0, 255, 0xff, 0x00, 0x00, 0x01}, // flog.w f a  
	{0xba06, &op_flog,	  6,   0, 255, 0xff, 0x00, 0x00, 0x01}, // flog.w g a  
	{0xba07, &op_flog,	  7,   0, 255, 0xff, 0x00, 0x00, 0x01}, // flog.w h a  
	{0xba08, &op_flog,	  0,   1, 255, 0xff, 0x00, 0x00, 0x01}, // flog.w a b  
	{0xba09, &op_flog,	  1,   1, 255, 0xff, 0x00, 0x00, 0x01}, // flog.w b b  
	{0xba0a, &op_flog,	  2,   1, 255, 0xff, 0x00, 0x00, 0x01}, // flog.w c b  
	{0xba0b, &op_flog,	  3,   1, 255, 0xff, 0x00, 0x00, 0x01}, // flog.w d b  
	{0xba0c, &op_flog,	  4,   1, 255, 0xff, 0x00, 0x00, 0x01}, // flog.w e b  
	{0xba0d, &op_flog,	  5,   1, 255, 0xff, 0x00, 0x00, 0x01}, // flog.w f b  
	{0xba0e, &op_flog,	  6,   1, 255, 0xff, 0x00, 0x00, 0x01}, // flog.w g b  
	{0xba0f, &op_flog,	  7,   1, 255, 0xff, 0x00, 0x00, 0x01}, // flog.w h b  
	{0xba10, &op_flog,	  0,   2, 255, 0xff, 0x00, 0x00, 0x01}, // flog.w a c  
	{0xba11, &op_flog,	  1,   2, 255, 0xff, 0x00, 0x00, 0x01}, // flog.w b c  
	{0xba12, &op_flog,	  2,   2, 255, 0xff, 0x00, 0x00, 0x01}, // flog.w c c  
	{0xba13, &op_flog,	  3,   2, 255, 0xff, 0x00, 0x00, 0x01}, // flog.w d c  
	{0xba14, &op_flog,	  4,   2, 255, 0xff, 0x00, 0x00, 0x01}, // flog.w e c  
	{0xba15, &op_flog,	  5,   2, 255, 0xff, 0x00, 0x00, 0x01}, // flog.w f c  
	{0xba16, &op_flog,	  6,   2, 255, 0xff, 0x00, 0x00, 0x01}, // flog.w g c  
	{0xba17, &op_flog,	  7,   2, 255, 0xff, 0x00, 0x00, 0x01}, // flog.w h c  
	{0xba18, &op_flog,	  0,   3, 255, 0xff, 0x00, 0x00, 0x01}, // flog.w a d  
	{0xba19, &op_flog,	  1,   3, 255, 0xff, 0x00, 0x00, 0x01}, // flog.w b d  
	{0xba1a, &op_flog,	  2,   3, 255, 0xff, 0x00, 0x00, 0x01}, // flog.w c d  
	{0xba1b, &op_flog,	  3,   3, 255, 0xff, 0x00, 0x00, 0x01}, // flog.w d d  
	{0xba1c, &op_flog,	  4,   3, 255, 0xff, 0x00, 0x00, 0x01}, // flog.w e d  
	{0xba1d, &op_flog,	  5,   3, 255, 0xff, 0x00, 0x00, 0x01}, // flog.w f d  
	{0xba1e, &op_flog,	  6,   3, 255, 0xff, 0x00, 0x00, 0x01}, // flog.w g d  
	{0xba1f, &op_flog,	  7,   3, 255, 0xff, 0x00, 0x00, 0x01}, // flog.w h d  
	{0xba20, &op_flog,	  0,   4, 255, 0xff, 0x00, 0x00, 0x01}, // flog.w a e  
	{0xba21, &op_flog,	  1,   4, 255, 0xff, 0x00, 0x00, 0x01}, // flog.w b e  
	{0xba22, &op_flog,	  2,   4, 255, 0xff, 0x00, 0x00, 0x01}, // flog.w c e  
	{0xba23, &op_flog,	  3,   4, 255, 0xff, 0x00, 0x00, 0x01}, // flog.w d e  
	{0xba24, &op_flog,	  4,   4, 255, 0xff, 0x00, 0x00, 0x01}, // flog.w e e  
	{0xba25, &op_flog,	  5,   4, 255, 0xff, 0x00, 0x00, 0x01}, // flog.w f e  
	{0xba26, &op_flog,	  6,   4, 255, 0xff, 0x00, 0x00, 0x01}, // flog.w g e  
	{0xba27, &op_flog,	  7,   4, 255, 0xff, 0x00, 0x00, 0x01}, // flog.w h e  
	{0xba28, &op_flog,	  0,   5, 255, 0xff, 0x00, 0x00, 0x01}, // flog.w a f  
	{0xba29, &op_flog,	  1,   5, 255, 0xff, 0x00, 0x00, 0x01}, // flog.w b f  
	{0xba2a, &op_flog,	  2,   5, 255, 0xff, 0x00, 0x00, 0x01}, // flog.w c f  
	{0xba2b, &op_flog,	  3,   5, 255, 0xff, 0x00, 0x00, 0x01}, // flog.w d f  
	{0xba2c, &op_flog,	  4,   5, 255, 0xff, 0x00, 0x00, 0x01}, // flog.w e f  
	{0xba2d, &op_flog,	  5,   5, 255, 0xff, 0x00, 0x00, 0x01}, // flog.w f f  
	{0xba2e, &op_flog,	  6,   5, 255, 0xff, 0x00, 0x00, 0x01}, // flog.w g f  
	{0xba2f, &op_flog,	  7,   5, 255, 0xff, 0x00, 0x00, 0x01}, // flog.w h f  
	{0xba30, &op_flog,	  0,   6, 255, 0xff, 0x00, 0x00, 0x01}, // flog.w a g  
	{0xba31, &op_flog,	  1,   6, 255, 0xff, 0x00, 0x00, 0x01}, // flog.w b g  
	{0xba32, &op_flog,	  2,   6, 255, 0xff, 0x00, 0x00, 0x01}, // flog.w c g  
	{0xba33, &op_flog,	  3,   6, 255, 0xff, 0x00, 0x00, 0x01}, // flog.w d g  
	{0xba34, &op_flog,	  4,   6, 255, 0xff, 0x00, 0x00, 0x01}, // flog.w e g  
	{0xba35, &op_flog,	  5,   6, 255, 0xff, 0x00, 0x00, 0x01}, // flog.w f g  
	{0xba36, &op_flog,	  6,   6, 255, 0xff, 0x00, 0x00, 0x01}, // flog.w g g  
	{0xba37, &op_flog,	  7,   6, 255, 0xff, 0x00, 0x00, 0x01}, // flog.w h g  
	{0xba38, &op_flog,	  0,   7, 255, 0xff, 0x00, 0x00, 0x01}, // flog.w a h  
	{0xba39, &op_flog,	  1,   7, 255, 0xff, 0x00, 0x00, 0x01}, // flog.w b h  
	{0xba3a, &op_flog,	  2,   7, 255, 0xff, 0x00, 0x00, 0x01}, // flog.w c h  
	{0xba3b, &op_flog,	  3,   7, 255, 0xff, 0x00, 0x00, 0x01}, // flog.w d h  
	{0xba3c, &op_flog,	  4,   7, 255, 0xff, 0x00, 0x00, 0x01}, // flog.w e h  
	{0xba3d, &op_flog,	  5,   7, 255, 0xff, 0x00, 0x00, 0x01}, // flog.w f h  
	{0xba3e, &op_flog,	  6,   7, 255, 0xff, 0x00, 0x00, 0x01}, // flog.w g h  
	{0xba3f, &op_flog,	  7,   7, 255, 0xff, 0x00, 0x00, 0x01}, // flog.w h h  
	{0xba40, &op_flog,	  0,   0, 255, 0xff, 0x00, 0x00, 0x02}, // flog.d a a  
	{0xba41, &op_flog,	  1,   0, 255, 0xff, 0x00, 0x00, 0x02}, // flog.d b a  
	{0xba42, &op_flog,	  2,   0, 255, 0xff, 0x00, 0x00, 0x02}, // flog.d c a  
	{0xba43, &op_flog,	  3,   0, 255, 0xff, 0x00, 0x00, 0x02}, // flog.d d a  
	{0xba44, &op_flog,	  4,   0, 255, 0xff, 0x00, 0x00, 0x02}, // flog.d e a  
	{0xba45, &op_flog,	  5,   0, 255, 0xff, 0x00, 0x00, 0x02}, // flog.d f a  
	{0xba46, &op_flog,	  6,   0, 255, 0xff, 0x00, 0x00, 0x02}, // flog.d g a  
	{0xba47, &op_flog,	  7,   0, 255, 0xff, 0x00, 0x00, 0x02}, // flog.d h a  
	{0xba48, &op_flog,	  0,   1, 255, 0xff, 0x00, 0x00, 0x02}, // flog.d a b  
	{0xba49, &op_flog,	  1,   1, 255, 0xff, 0x00, 0x00, 0x02}, // flog.d b b  
	{0xba4a, &op_flog,	  2,   1, 255, 0xff, 0x00, 0x00, 0x02}, // flog.d c b  
	{0xba4b, &op_flog,	  3,   1, 255, 0xff, 0x00, 0x00, 0x02}, // flog.d d b  
	{0xba4c, &op_flog,	  4,   1, 255, 0xff, 0x00, 0x00, 0x02}, // flog.d e b  
	{0xba4d, &op_flog,	  5,   1, 255, 0xff, 0x00, 0x00, 0x02}, // flog.d f b  
	{0xba4e, &op_flog,	  6,   1, 255, 0xff, 0x00, 0x00, 0x02}, // flog.d g b  
	{0xba4f, &op_flog,	  7,   1, 255, 0xff, 0x00, 0x00, 0x02}, // flog.d h b  
	{0xba50, &op_flog,	  0,   2, 255, 0xff, 0x00, 0x00, 0x02}, // flog.d a c  
	{0xba51, &op_flog,	  1,   2, 255, 0xff, 0x00, 0x00, 0x02}, // flog.d b c  
	{0xba52, &op_flog,	  2,   2, 255, 0xff, 0x00, 0x00, 0x02}, // flog.d c c  
	{0xba53, &op_flog,	  3,   2, 255, 0xff, 0x00, 0x00, 0x02}, // flog.d d c  
	{0xba54, &op_flog,	  4,   2, 255, 0xff, 0x00, 0x00, 0x02}, // flog.d e c  
	{0xba55, &op_flog,	  5,   2, 255, 0xff, 0x00, 0x00, 0x02}, // flog.d f c  
	{0xba56, &op_flog,	  6,   2, 255, 0xff, 0x00, 0x00, 0x02}, // flog.d g c  
	{0xba57, &op_flog,	  7,   2, 255, 0xff, 0x00, 0x00, 0x02}, // flog.d h c  
	{0xba58, &op_flog,	  0,   3, 255, 0xff, 0x00, 0x00, 0x02}, // flog.d a d  
	{0xba59, &op_flog,	  1,   3, 255, 0xff, 0x00, 0x00, 0x02}, // flog.d b d  
	{0xba5a, &op_flog,	  2,   3, 255, 0xff, 0x00, 0x00, 0x02}, // flog.d c d  
	{0xba5b, &op_flog,	  3,   3, 255, 0xff, 0x00, 0x00, 0x02}, // flog.d d d  
	{0xba5c, &op_flog,	  4,   3, 255, 0xff, 0x00, 0x00, 0x02}, // flog.d e d  
	{0xba5d, &op_flog,	  5,   3, 255, 0xff, 0x00, 0x00, 0x02}, // flog.d f d  
	{0xba5e, &op_flog,	  6,   3, 255, 0xff, 0x00, 0x00, 0x02}, // flog.d g d  
	{0xba5f, &op_flog,	  7,   3, 255, 0xff, 0x00, 0x00, 0x02}, // flog.d h d  
	{0xba60, &op_flog,	  0,   4, 255, 0xff, 0x00, 0x00, 0x02}, // flog.d a e  
	{0xba61, &op_flog,	  1,   4, 255, 0xff, 0x00, 0x00, 0x02}, // flog.d b e  
	{0xba62, &op_flog,	  2,   4, 255, 0xff, 0x00, 0x00, 0x02}, // flog.d c e  
	{0xba63, &op_flog,	  3,   4, 255, 0xff, 0x00, 0x00, 0x02}, // flog.d d e  
	{0xba64, &op_flog,	  4,   4, 255, 0xff, 0x00, 0x00, 0x02}, // flog.d e e  
	{0xba65, &op_flog,	  5,   4, 255, 0xff, 0x00, 0x00, 0x02}, // flog.d f e  
	{0xba66, &op_flog,	  6,   4, 255, 0xff, 0x00, 0x00, 0x02}, // flog.d g e  
	{0xba67, &op_flog,	  7,   4, 255, 0xff, 0x00, 0x00, 0x02}, // flog.d h e  
	{0xba68, &op_flog,	  0,   5, 255, 0xff, 0x00, 0x00, 0x02}, // flog.d a f  
	{0xba69, &op_flog,	  1,   5, 255, 0xff, 0x00, 0x00, 0x02}, // flog.d b f  
	{0xba6a, &op_flog,	  2,   5, 255, 0xff, 0x00, 0x00, 0x02}, // flog.d c f  
	{0xba6b, &op_flog,	  3,   5, 255, 0xff, 0x00, 0x00, 0x02}, // flog.d d f  
	{0xba6c, &op_flog,	  4,   5, 255, 0xff, 0x00, 0x00, 0x02}, // flog.d e f  
	{0xba6d, &op_flog,	  5,   5, 255, 0xff, 0x00, 0x00, 0x02}, // flog.d f f  
	{0xba6e, &op_flog,	  6,   5, 255, 0xff, 0x00, 0x00, 0x02}, // flog.d g f  
	{0xba6f, &op_flog,	  7,   5, 255, 0xff, 0x00, 0x00, 0x02}, // flog.d h f  
	{0xba70, &op_flog,	  0,   6, 255, 0xff, 0x00, 0x00, 0x02}, // flog.d a g  
	{0xba71, &op_flog,	  1,   6, 255, 0xff, 0x00, 0x00, 0x02}, // flog.d b g  
	{0xba72, &op_flog,	  2,   6, 255, 0xff, 0x00, 0x00, 0x02}, // flog.d c g  
	{0xba73, &op_flog,	  3,   6, 255, 0xff, 0x00, 0x00, 0x02}, // flog.d d g  
	{0xba74, &op_flog,	  4,   6, 255, 0xff, 0x00, 0x00, 0x02}, // flog.d e g  
	{0xba75, &op_flog,	  5,   6, 255, 0xff, 0x00, 0x00, 0x02}, // flog.d f g  
	{0xba76, &op_flog,	  6,   6, 255, 0xff, 0x00, 0x00, 0x02}, // flog.d g g  
	{0xba77, &op_flog,	  7,   6, 255, 0xff, 0x00, 0x00, 0x02}, // flog.d h g  
	{0xba78, &op_flog,	  0,   7, 255, 0xff, 0x00, 0x00, 0x02}, // flog.d a h  
	{0xba79, &op_flog,	  1,   7, 255, 0xff, 0x00, 0x00, 0x02}, // flog.d b h  
	{0xba7a, &op_flog,	  2,   7, 255, 0xff, 0x00, 0x00, 0x02}, // flog.d c h  
	{0xba7b, &op_flog,	  3,   7, 255, 0xff, 0x00, 0x00, 0x02}, // flog.d d h  
	{0xba7c, &op_flog,	  4,   7, 255, 0xff, 0x00, 0x00, 0x02}, // flog.d e h  
	{0xba7d, &op_flog,	  5,   7, 255, 0xff, 0x00, 0x00, 0x02}, // flog.d f h  
	{0xba7e, &op_flog,	  6,   7, 255, 0xff, 0x00, 0x00, 0x02}, // flog.d g h  
	{0xba7f, &op_flog,	  7,   7, 255, 0xff, 0x00, 0x00, 0x02}, // flog.d h h  
	{0xba80, &op_flog,	  0,   0, 255, 0xff, 0x00, 0x00, 0x04}, // flog a a  
	{0xba81, &op_flog,	  1,   0, 255, 0xff, 0x00, 0x00, 0x04}, // flog b a  
	{0xba82, &op_flog,	  2,   0, 255, 0xff, 0x00, 0x00, 0x04}, // flog c a  
	{0xba83, &op_flog,	  3,   0, 255, 0xff, 0x00, 0x00, 0x04}, // flog d a  
	{0xba84, &op_flog,	  4,   0, 255, 0xff, 0x00, 0x00, 0x04}, // flog e a  
	{0xba85, &op_flog,	  5,   0, 255, 0xff, 0x00, 0x00, 0x04}, // flog f a  
	{0xba86, &op_flog,	  6,   0, 255, 0xff, 0x00, 0x00, 0x04}, // flog g a  
	{0xba87, &op_flog,	  7,   0, 255, 0xff, 0x00, 0x00, 0x04}, // flog h a  
	{0xba88, &op_flog,	  0,   1, 255, 0xff, 0x00, 0x00, 0x04}, // flog a b  
	{0xba89, &op_flog,	  1,   1, 255, 0xff, 0x00, 0x00, 0x04}, // flog b b  
	{0xba8a, &op_flog,	  2,   1, 255, 0xff, 0x00, 0x00, 0x04}, // flog c b  
	{0xba8b, &op_flog,	  3,   1, 255, 0xff, 0x00, 0x00, 0x04}, // flog d b  
	{0xba8c, &op_flog,	  4,   1, 255, 0xff, 0x00, 0x00, 0x04}, // flog e b  
	{0xba8d, &op_flog,	  5,   1, 255, 0xff, 0x00, 0x00, 0x04}, // flog f b  
	{0xba8e, &op_flog,	  6,   1, 255, 0xff, 0x00, 0x00, 0x04}, // flog g b  
	{0xba8f, &op_flog,	  7,   1, 255, 0xff, 0x00, 0x00, 0x04}, // flog h b  
	{0xba90, &op_flog,	  0,   2, 255, 0xff, 0x00, 0x00, 0x04}, // flog a c  
	{0xba91, &op_flog,	  1,   2, 255, 0xff, 0x00, 0x00, 0x04}, // flog b c  
	{0xba92, &op_flog,	  2,   2, 255, 0xff, 0x00, 0x00, 0x04}, // flog c c  
	{0xba93, &op_flog,	  3,   2, 255, 0xff, 0x00, 0x00, 0x04}, // flog d c  
	{0xba94, &op_flog,	  4,   2, 255, 0xff, 0x00, 0x00, 0x04}, // flog e c  
	{0xba95, &op_flog,	  5,   2, 255, 0xff, 0x00, 0x00, 0x04}, // flog f c  
	{0xba96, &op_flog,	  6,   2, 255, 0xff, 0x00, 0x00, 0x04}, // flog g c  
	{0xba97, &op_flog,	  7,   2, 255, 0xff, 0x00, 0x00, 0x04}, // flog h c  
	{0xba98, &op_flog,	  0,   3, 255, 0xff, 0x00, 0x00, 0x04}, // flog a d  
	{0xba99, &op_flog,	  1,   3, 255, 0xff, 0x00, 0x00, 0x04}, // flog b d  
	{0xba9a, &op_flog,	  2,   3, 255, 0xff, 0x00, 0x00, 0x04}, // flog c d  
	{0xba9b, &op_flog,	  3,   3, 255, 0xff, 0x00, 0x00, 0x04}, // flog d d  
	{0xba9c, &op_flog,	  4,   3, 255, 0xff, 0x00, 0x00, 0x04}, // flog e d  
	{0xba9d, &op_flog,	  5,   3, 255, 0xff, 0x00, 0x00, 0x04}, // flog f d  
	{0xba9e, &op_flog,	  6,   3, 255, 0xff, 0x00, 0x00, 0x04}, // flog g d  
	{0xba9f, &op_flog,	  7,   3, 255, 0xff, 0x00, 0x00, 0x04}, // flog h d  
	{0xbaa0, &op_flog,	  0,   4, 255, 0xff, 0x00, 0x00, 0x04}, // flog a e  
	{0xbaa1, &op_flog,	  1,   4, 255, 0xff, 0x00, 0x00, 0x04}, // flog b e  
	{0xbaa2, &op_flog,	  2,   4, 255, 0xff, 0x00, 0x00, 0x04}, // flog c e  
	{0xbaa3, &op_flog,	  3,   4, 255, 0xff, 0x00, 0x00, 0x04}, // flog d e  
	{0xbaa4, &op_flog,	  4,   4, 255, 0xff, 0x00, 0x00, 0x04}, // flog e e  
	{0xbaa5, &op_flog,	  5,   4, 255, 0xff, 0x00, 0x00, 0x04}, // flog f e  
	{0xbaa6, &op_flog,	  6,   4, 255, 0xff, 0x00, 0x00, 0x04}, // flog g e  
	{0xbaa7, &op_flog,	  7,   4, 255, 0xff, 0x00, 0x00, 0x04}, // flog h e  
	{0xbaa8, &op_flog,	  0,   5, 255, 0xff, 0x00, 0x00, 0x04}, // flog a f  
	{0xbaa9, &op_flog,	  1,   5, 255, 0xff, 0x00, 0x00, 0x04}, // flog b f  
	{0xbaaa, &op_flog,	  2,   5, 255, 0xff, 0x00, 0x00, 0x04}, // flog c f  
	{0xbaab, &op_flog,	  3,   5, 255, 0xff, 0x00, 0x00, 0x04}, // flog d f  
	{0xbaac, &op_flog,	  4,   5, 255, 0xff, 0x00, 0x00, 0x04}, // flog e f  
	{0xbaad, &op_flog,	  5,   5, 255, 0xff, 0x00, 0x00, 0x04}, // flog f f  
	{0xbaae, &op_flog,	  6,   5, 255, 0xff, 0x00, 0x00, 0x04}, // flog g f  
	{0xbaaf, &op_flog,	  7,   5, 255, 0xff, 0x00, 0x00, 0x04}, // flog h f  
	{0xbab0, &op_flog,	  0,   6, 255, 0xff, 0x00, 0x00, 0x04}, // flog a g  
	{0xbab1, &op_flog,	  1,   6, 255, 0xff, 0x00, 0x00, 0x04}, // flog b g  
	{0xbab2, &op_flog,	  2,   6, 255, 0xff, 0x00, 0x00, 0x04}, // flog c g  
	{0xbab3, &op_flog,	  3,   6, 255, 0xff, 0x00, 0x00, 0x04}, // flog d g  
	{0xbab4, &op_flog,	  4,   6, 255, 0xff, 0x00, 0x00, 0x04}, // flog e g  
	{0xbab5, &op_flog,	  5,   6, 255, 0xff, 0x00, 0x00, 0x04}, // flog f g  
	{0xbab6, &op_flog,	  6,   6, 255, 0xff, 0x00, 0x00, 0x04}, // flog g g  
	{0xbab7, &op_flog,	  7,   6, 255, 0xff, 0x00, 0x00, 0x04}, // flog h g  
	{0xbab8, &op_flog,	  0,   7, 255, 0xff, 0x00, 0x00, 0x04}, // flog a h  
	{0xbab9, &op_flog,	  1,   7, 255, 0xff, 0x00, 0x00, 0x04}, // flog b h  
	{0xbaba, &op_flog,	  2,   7, 255, 0xff, 0x00, 0x00, 0x04}, // flog c h  
	{0xbabb, &op_flog,	  3,   7, 255, 0xff, 0x00, 0x00, 0x04}, // flog d h  
	{0xbabc, &op_flog,	  4,   7, 255, 0xff, 0x00, 0x00, 0x04}, // flog e h  
	{0xbabd, &op_flog,	  5,   7, 255, 0xff, 0x00, 0x00, 0x04}, // flog f h  
	{0xbabe, &op_flog,	  6,   7, 255, 0xff, 0x00, 0x00, 0x04}, // flog g h  
	{0xbabf, &op_flog,	  7,   7, 255, 0xff, 0x00, 0x00, 0x04}, // flog h h  
	{0xbb00, &op_flog,	  0,   0, 255, 0xff, 0x01, 0x00, 0x01}, // flog.wr a a  
	{0xbb01, &op_flog,	  1,   0, 255, 0xff, 0x01, 0x00, 0x01}, // flog.wr b a  
	{0xbb02, &op_flog,	  2,   0, 255, 0xff, 0x01, 0x00, 0x01}, // flog.wr c a  
	{0xbb03, &op_flog,	  3,   0, 255, 0xff, 0x01, 0x00, 0x01}, // flog.wr d a  
	{0xbb04, &op_flog,	  4,   0, 255, 0xff, 0x01, 0x00, 0x01}, // flog.wr e a  
	{0xbb05, &op_flog,	  5,   0, 255, 0xff, 0x01, 0x00, 0x01}, // flog.wr f a  
	{0xbb06, &op_flog,	  6,   0, 255, 0xff, 0x01, 0x00, 0x01}, // flog.wr g a  
	{0xbb07, &op_flog,	  7,   0, 255, 0xff, 0x01, 0x00, 0x01}, // flog.wr h a  
	{0xbb08, &op_flog,	  0,   1, 255, 0xff, 0x01, 0x00, 0x01}, // flog.wr a b  
	{0xbb09, &op_flog,	  1,   1, 255, 0xff, 0x01, 0x00, 0x01}, // flog.wr b b  
	{0xbb0a, &op_flog,	  2,   1, 255, 0xff, 0x01, 0x00, 0x01}, // flog.wr c b  
	{0xbb0b, &op_flog,	  3,   1, 255, 0xff, 0x01, 0x00, 0x01}, // flog.wr d b  
	{0xbb0c, &op_flog,	  4,   1, 255, 0xff, 0x01, 0x00, 0x01}, // flog.wr e b  
	{0xbb0d, &op_flog,	  5,   1, 255, 0xff, 0x01, 0x00, 0x01}, // flog.wr f b  
	{0xbb0e, &op_flog,	  6,   1, 255, 0xff, 0x01, 0x00, 0x01}, // flog.wr g b  
	{0xbb0f, &op_flog,	  7,   1, 255, 0xff, 0x01, 0x00, 0x01}, // flog.wr h b  
	{0xbb10, &op_flog,	  0,   2, 255, 0xff, 0x01, 0x00, 0x01}, // flog.wr a c  
	{0xbb11, &op_flog,	  1,   2, 255, 0xff, 0x01, 0x00, 0x01}, // flog.wr b c  
	{0xbb12, &op_flog,	  2,   2, 255, 0xff, 0x01, 0x00, 0x01}, // flog.wr c c  
	{0xbb13, &op_flog,	  3,   2, 255, 0xff, 0x01, 0x00, 0x01}, // flog.wr d c  
	{0xbb14, &op_flog,	  4,   2, 255, 0xff, 0x01, 0x00, 0x01}, // flog.wr e c  
	{0xbb15, &op_flog,	  5,   2, 255, 0xff, 0x01, 0x00, 0x01}, // flog.wr f c  
	{0xbb16, &op_flog,	  6,   2, 255, 0xff, 0x01, 0x00, 0x01}, // flog.wr g c  
	{0xbb17, &op_flog,	  7,   2, 255, 0xff, 0x01, 0x00, 0x01}, // flog.wr h c  
	{0xbb18, &op_flog,	  0,   3, 255, 0xff, 0x01, 0x00, 0x01}, // flog.wr a d  
	{0xbb19, &op_flog,	  1,   3, 255, 0xff, 0x01, 0x00, 0x01}, // flog.wr b d  
	{0xbb1a, &op_flog,	  2,   3, 255, 0xff, 0x01, 0x00, 0x01}, // flog.wr c d  
	{0xbb1b, &op_flog,	  3,   3, 255, 0xff, 0x01, 0x00, 0x01}, // flog.wr d d  
	{0xbb1c, &op_flog,	  4,   3, 255, 0xff, 0x01, 0x00, 0x01}, // flog.wr e d  
	{0xbb1d, &op_flog,	  5,   3, 255, 0xff, 0x01, 0x00, 0x01}, // flog.wr f d  
	{0xbb1e, &op_flog,	  6,   3, 255, 0xff, 0x01, 0x00, 0x01}, // flog.wr g d  
	{0xbb1f, &op_flog,	  7,   3, 255, 0xff, 0x01, 0x00, 0x01}, // flog.wr h d  
	{0xbb20, &op_flog,	  0,   4, 255, 0xff, 0x01, 0x00, 0x01}, // flog.wr a e  
	{0xbb21, &op_flog,	  1,   4, 255, 0xff, 0x01, 0x00, 0x01}, // flog.wr b e  
	{0xbb22, &op_flog,	  2,   4, 255, 0xff, 0x01, 0x00, 0x01}, // flog.wr c e  
	{0xbb23, &op_flog,	  3,   4, 255, 0xff, 0x01, 0x00, 0x01}, // flog.wr d e  
	{0xbb24, &op_flog,	  4,   4, 255, 0xff, 0x01, 0x00, 0x01}, // flog.wr e e  
	{0xbb25, &op_flog,	  5,   4, 255, 0xff, 0x01, 0x00, 0x01}, // flog.wr f e  
	{0xbb26, &op_flog,	  6,   4, 255, 0xff, 0x01, 0x00, 0x01}, // flog.wr g e  
	{0xbb27, &op_flog,	  7,   4, 255, 0xff, 0x01, 0x00, 0x01}, // flog.wr h e  
	{0xbb28, &op_flog,	  0,   5, 255, 0xff, 0x01, 0x00, 0x01}, // flog.wr a f  
	{0xbb29, &op_flog,	  1,   5, 255, 0xff, 0x01, 0x00, 0x01}, // flog.wr b f  
	{0xbb2a, &op_flog,	  2,   5, 255, 0xff, 0x01, 0x00, 0x01}, // flog.wr c f  
	{0xbb2b, &op_flog,	  3,   5, 255, 0xff, 0x01, 0x00, 0x01}, // flog.wr d f  
	{0xbb2c, &op_flog,	  4,   5, 255, 0xff, 0x01, 0x00, 0x01}, // flog.wr e f  
	{0xbb2d, &op_flog,	  5,   5, 255, 0xff, 0x01, 0x00, 0x01}, // flog.wr f f  
	{0xbb2e, &op_flog,	  6,   5, 255, 0xff, 0x01, 0x00, 0x01}, // flog.wr g f  
	{0xbb2f, &op_flog,	  7,   5, 255, 0xff, 0x01, 0x00, 0x01}, // flog.wr h f  
	{0xbb30, &op_flog,	  0,   6, 255, 0xff, 0x01, 0x00, 0x01}, // flog.wr a g  
	{0xbb31, &op_flog,	  1,   6, 255, 0xff, 0x01, 0x00, 0x01}, // flog.wr b g  
	{0xbb32, &op_flog,	  2,   6, 255, 0xff, 0x01, 0x00, 0x01}, // flog.wr c g  
	{0xbb33, &op_flog,	  3,   6, 255, 0xff, 0x01, 0x00, 0x01}, // flog.wr d g  
	{0xbb34, &op_flog,	  4,   6, 255, 0xff, 0x01, 0x00, 0x01}, // flog.wr e g  
	{0xbb35, &op_flog,	  5,   6, 255, 0xff, 0x01, 0x00, 0x01}, // flog.wr f g  
	{0xbb36, &op_flog,	  6,   6, 255, 0xff, 0x01, 0x00, 0x01}, // flog.wr g g  
	{0xbb37, &op_flog,	  7,   6, 255, 0xff, 0x01, 0x00, 0x01}, // flog.wr h g  
	{0xbb38, &op_flog,	  0,   7, 255, 0xff, 0x01, 0x00, 0x01}, // flog.wr a h  
	{0xbb39, &op_flog,	  1,   7, 255, 0xff, 0x01, 0x00, 0x01}, // flog.wr b h  
	{0xbb3a, &op_flog,	  2,   7, 255, 0xff, 0x01, 0x00, 0x01}, // flog.wr c h  
	{0xbb3b, &op_flog,	  3,   7, 255, 0xff, 0x01, 0x00, 0x01}, // flog.wr d h  
	{0xbb3c, &op_flog,	  4,   7, 255, 0xff, 0x01, 0x00, 0x01}, // flog.wr e h  
	{0xbb3d, &op_flog,	  5,   7, 255, 0xff, 0x01, 0x00, 0x01}, // flog.wr f h  
	{0xbb3e, &op_flog,	  6,   7, 255, 0xff, 0x01, 0x00, 0x01}, // flog.wr g h  
	{0xbb3f, &op_flog,	  7,   7, 255, 0xff, 0x01, 0x00, 0x01}, // flog.wr h h  
	{0xbb40, &op_flog,	  0,   0, 255, 0xff, 0x01, 0x00, 0x02}, // flog.dr a a  
	{0xbb41, &op_flog,	  1,   0, 255, 0xff, 0x01, 0x00, 0x02}, // flog.dr b a  
	{0xbb42, &op_flog,	  2,   0, 255, 0xff, 0x01, 0x00, 0x02}, // flog.dr c a  
	{0xbb43, &op_flog,	  3,   0, 255, 0xff, 0x01, 0x00, 0x02}, // flog.dr d a  
	{0xbb44, &op_flog,	  4,   0, 255, 0xff, 0x01, 0x00, 0x02}, // flog.dr e a  
	{0xbb45, &op_flog,	  5,   0, 255, 0xff, 0x01, 0x00, 0x02}, // flog.dr f a  
	{0xbb46, &op_flog,	  6,   0, 255, 0xff, 0x01, 0x00, 0x02}, // flog.dr g a  
	{0xbb47, &op_flog,	  7,   0, 255, 0xff, 0x01, 0x00, 0x02}, // flog.dr h a  
	{0xbb48, &op_flog,	  0,   1, 255, 0xff, 0x01, 0x00, 0x02}, // flog.dr a b  
	{0xbb49, &op_flog,	  1,   1, 255, 0xff, 0x01, 0x00, 0x02}, // flog.dr b b  
	{0xbb4a, &op_flog,	  2,   1, 255, 0xff, 0x01, 0x00, 0x02}, // flog.dr c b  
	{0xbb4b, &op_flog,	  3,   1, 255, 0xff, 0x01, 0x00, 0x02}, // flog.dr d b  
	{0xbb4c, &op_flog,	  4,   1, 255, 0xff, 0x01, 0x00, 0x02}, // flog.dr e b  
	{0xbb4d, &op_flog,	  5,   1, 255, 0xff, 0x01, 0x00, 0x02}, // flog.dr f b  
	{0xbb4e, &op_flog,	  6,   1, 255, 0xff, 0x01, 0x00, 0x02}, // flog.dr g b  
	{0xbb4f, &op_flog,	  7,   1, 255, 0xff, 0x01, 0x00, 0x02}, // flog.dr h b  
	{0xbb50, &op_flog,	  0,   2, 255, 0xff, 0x01, 0x00, 0x02}, // flog.dr a c  
	{0xbb51, &op_flog,	  1,   2, 255, 0xff, 0x01, 0x00, 0x02}, // flog.dr b c  
	{0xbb52, &op_flog,	  2,   2, 255, 0xff, 0x01, 0x00, 0x02}, // flog.dr c c  
	{0xbb53, &op_flog,	  3,   2, 255, 0xff, 0x01, 0x00, 0x02}, // flog.dr d c  
	{0xbb54, &op_flog,	  4,   2, 255, 0xff, 0x01, 0x00, 0x02}, // flog.dr e c  
	{0xbb55, &op_flog,	  5,   2, 255, 0xff, 0x01, 0x00, 0x02}, // flog.dr f c  
	{0xbb56, &op_flog,	  6,   2, 255, 0xff, 0x01, 0x00, 0x02}, // flog.dr g c  
	{0xbb57, &op_flog,	  7,   2, 255, 0xff, 0x01, 0x00, 0x02}, // flog.dr h c  
	{0xbb58, &op_flog,	  0,   3, 255, 0xff, 0x01, 0x00, 0x02}, // flog.dr a d  
	{0xbb59, &op_flog,	  1,   3, 255, 0xff, 0x01, 0x00, 0x02}, // flog.dr b d  
	{0xbb5a, &op_flog,	  2,   3, 255, 0xff, 0x01, 0x00, 0x02}, // flog.dr c d  
	{0xbb5b, &op_flog,	  3,   3, 255, 0xff, 0x01, 0x00, 0x02}, // flog.dr d d  
	{0xbb5c, &op_flog,	  4,   3, 255, 0xff, 0x01, 0x00, 0x02}, // flog.dr e d  
	{0xbb5d, &op_flog,	  5,   3, 255, 0xff, 0x01, 0x00, 0x02}, // flog.dr f d  
	{0xbb5e, &op_flog,	  6,   3, 255, 0xff, 0x01, 0x00, 0x02}, // flog.dr g d  
	{0xbb5f, &op_flog,	  7,   3, 255, 0xff, 0x01, 0x00, 0x02}, // flog.dr h d  
	{0xbb60, &op_flog,	  0,   4, 255, 0xff, 0x01, 0x00, 0x02}, // flog.dr a e  
	{0xbb61, &op_flog,	  1,   4, 255, 0xff, 0x01, 0x00, 0x02}, // flog.dr b e  
	{0xbb62, &op_flog,	  2,   4, 255, 0xff, 0x01, 0x00, 0x02}, // flog.dr c e  
	{0xbb63, &op_flog,	  3,   4, 255, 0xff, 0x01, 0x00, 0x02}, // flog.dr d e  
	{0xbb64, &op_flog,	  4,   4, 255, 0xff, 0x01, 0x00, 0x02}, // flog.dr e e  
	{0xbb65, &op_flog,	  5,   4, 255, 0xff, 0x01, 0x00, 0x02}, // flog.dr f e  
	{0xbb66, &op_flog,	  6,   4, 255, 0xff, 0x01, 0x00, 0x02}, // flog.dr g e  
	{0xbb67, &op_flog,	  7,   4, 255, 0xff, 0x01, 0x00, 0x02}, // flog.dr h e  
	{0xbb68, &op_flog,	  0,   5, 255, 0xff, 0x01, 0x00, 0x02}, // flog.dr a f  
	{0xbb69, &op_flog,	  1,   5, 255, 0xff, 0x01, 0x00, 0x02}, // flog.dr b f  
	{0xbb6a, &op_flog,	  2,   5, 255, 0xff, 0x01, 0x00, 0x02}, // flog.dr c f  
	{0xbb6b, &op_flog,	  3,   5, 255, 0xff, 0x01, 0x00, 0x02}, // flog.dr d f  
	{0xbb6c, &op_flog,	  4,   5, 255, 0xff, 0x01, 0x00, 0x02}, // flog.dr e f  
	{0xbb6d, &op_flog,	  5,   5, 255, 0xff, 0x01, 0x00, 0x02}, // flog.dr f f  
	{0xbb6e, &op_flog,	  6,   5, 255, 0xff, 0x01, 0x00, 0x02}, // flog.dr g f  
	{0xbb6f, &op_flog,	  7,   5, 255, 0xff, 0x01, 0x00, 0x02}, // flog.dr h f  
	{0xbb70, &op_flog,	  0,   6, 255, 0xff, 0x01, 0x00, 0x02}, // flog.dr a g  
	{0xbb71, &op_flog,	  1,   6, 255, 0xff, 0x01, 0x00, 0x02}, // flog.dr b g  
	{0xbb72, &op_flog,	  2,   6, 255, 0xff, 0x01, 0x00, 0x02}, // flog.dr c g  
	{0xbb73, &op_flog,	  3,   6, 255, 0xff, 0x01, 0x00, 0x02}, // flog.dr d g  
	{0xbb74, &op_flog,	  4,   6, 255, 0xff, 0x01, 0x00, 0x02}, // flog.dr e g  
	{0xbb75, &op_flog,	  5,   6, 255, 0xff, 0x01, 0x00, 0x02}, // flog.dr f g  
	{0xbb76, &op_flog,	  6,   6, 255, 0xff, 0x01, 0x00, 0x02}, // flog.dr g g  
	{0xbb77, &op_flog,	  7,   6, 255, 0xff, 0x01, 0x00, 0x02}, // flog.dr h g  
	{0xbb78, &op_flog,	  0,   7, 255, 0xff, 0x01, 0x00, 0x02}, // flog.dr a h  
	{0xbb79, &op_flog,	  1,   7, 255, 0xff, 0x01, 0x00, 0x02}, // flog.dr b h  
	{0xbb7a, &op_flog,	  2,   7, 255, 0xff, 0x01, 0x00, 0x02}, // flog.dr c h  
	{0xbb7b, &op_flog,	  3,   7, 255, 0xff, 0x01, 0x00, 0x02}, // flog.dr d h  
	{0xbb7c, &op_flog,	  4,   7, 255, 0xff, 0x01, 0x00, 0x02}, // flog.dr e h  
	{0xbb7d, &op_flog,	  5,   7, 255, 0xff, 0x01, 0x00, 0x02}, // flog.dr f h  
	{0xbb7e, &op_flog,	  6,   7, 255, 0xff, 0x01, 0x00, 0x02}, // flog.dr g h  
	{0xbb7f, &op_flog,	  7,   7, 255, 0xff, 0x01, 0x00, 0x02}, // flog.dr h h  
	{0xbb80, &op_flog,	  0,   0, 255, 0xff, 0x01, 0x00, 0x04}, // flog.r a a  
	{0xbb81, &op_flog,	  1,   0, 255, 0xff, 0x01, 0x00, 0x04}, // flog.r b a  
	{0xbb82, &op_flog,	  2,   0, 255, 0xff, 0x01, 0x00, 0x04}, // flog.r c a  
	{0xbb83, &op_flog,	  3,   0, 255, 0xff, 0x01, 0x00, 0x04}, // flog.r d a  
	{0xbb84, &op_flog,	  4,   0, 255, 0xff, 0x01, 0x00, 0x04}, // flog.r e a  
	{0xbb85, &op_flog,	  5,   0, 255, 0xff, 0x01, 0x00, 0x04}, // flog.r f a  
	{0xbb86, &op_flog,	  6,   0, 255, 0xff, 0x01, 0x00, 0x04}, // flog.r g a  
	{0xbb87, &op_flog,	  7,   0, 255, 0xff, 0x01, 0x00, 0x04}, // flog.r h a  
	{0xbb88, &op_flog,	  0,   1, 255, 0xff, 0x01, 0x00, 0x04}, // flog.r a b  
	{0xbb89, &op_flog,	  1,   1, 255, 0xff, 0x01, 0x00, 0x04}, // flog.r b b  
	{0xbb8a, &op_flog,	  2,   1, 255, 0xff, 0x01, 0x00, 0x04}, // flog.r c b  
	{0xbb8b, &op_flog,	  3,   1, 255, 0xff, 0x01, 0x00, 0x04}, // flog.r d b  
	{0xbb8c, &op_flog,	  4,   1, 255, 0xff, 0x01, 0x00, 0x04}, // flog.r e b  
	{0xbb8d, &op_flog,	  5,   1, 255, 0xff, 0x01, 0x00, 0x04}, // flog.r f b  
	{0xbb8e, &op_flog,	  6,   1, 255, 0xff, 0x01, 0x00, 0x04}, // flog.r g b  
	{0xbb8f, &op_flog,	  7,   1, 255, 0xff, 0x01, 0x00, 0x04}, // flog.r h b  
	{0xbb90, &op_flog,	  0,   2, 255, 0xff, 0x01, 0x00, 0x04}, // flog.r a c  
	{0xbb91, &op_flog,	  1,   2, 255, 0xff, 0x01, 0x00, 0x04}, // flog.r b c  
	{0xbb92, &op_flog,	  2,   2, 255, 0xff, 0x01, 0x00, 0x04}, // flog.r c c  
	{0xbb93, &op_flog,	  3,   2, 255, 0xff, 0x01, 0x00, 0x04}, // flog.r d c  
	{0xbb94, &op_flog,	  4,   2, 255, 0xff, 0x01, 0x00, 0x04}, // flog.r e c  
	{0xbb95, &op_flog,	  5,   2, 255, 0xff, 0x01, 0x00, 0x04}, // flog.r f c  
	{0xbb96, &op_flog,	  6,   2, 255, 0xff, 0x01, 0x00, 0x04}, // flog.r g c  
	{0xbb97, &op_flog,	  7,   2, 255, 0xff, 0x01, 0x00, 0x04}, // flog.r h c  
	{0xbb98, &op_flog,	  0,   3, 255, 0xff, 0x01, 0x00, 0x04}, // flog.r a d  
	{0xbb99, &op_flog,	  1,   3, 255, 0xff, 0x01, 0x00, 0x04}, // flog.r b d  
	{0xbb9a, &op_flog,	  2,   3, 255, 0xff, 0x01, 0x00, 0x04}, // flog.r c d  
	{0xbb9b, &op_flog,	  3,   3, 255, 0xff, 0x01, 0x00, 0x04}, // flog.r d d  
	{0xbb9c, &op_flog,	  4,   3, 255, 0xff, 0x01, 0x00, 0x04}, // flog.r e d  
	{0xbb9d, &op_flog,	  5,   3, 255, 0xff, 0x01, 0x00, 0x04}, // flog.r f d  
	{0xbb9e, &op_flog,	  6,   3, 255, 0xff, 0x01, 0x00, 0x04}, // flog.r g d  
	{0xbb9f, &op_flog,	  7,   3, 255, 0xff, 0x01, 0x00, 0x04}, // flog.r h d  
	{0xbba0, &op_flog,	  0,   4, 255, 0xff, 0x01, 0x00, 0x04}, // flog.r a e  
	{0xbba1, &op_flog,	  1,   4, 255, 0xff, 0x01, 0x00, 0x04}, // flog.r b e  
	{0xbba2, &op_flog,	  2,   4, 255, 0xff, 0x01, 0x00, 0x04}, // flog.r c e  
	{0xbba3, &op_flog,	  3,   4, 255, 0xff, 0x01, 0x00, 0x04}, // flog.r d e  
	{0xbba4, &op_flog,	  4,   4, 255, 0xff, 0x01, 0x00, 0x04}, // flog.r e e  
	{0xbba5, &op_flog,	  5,   4, 255, 0xff, 0x01, 0x00, 0x04}, // flog.r f e  
	{0xbba6, &op_flog,	  6,   4, 255, 0xff, 0x01, 0x00, 0x04}, // flog.r g e  
	{0xbba7, &op_flog,	  7,   4, 255, 0xff, 0x01, 0x00, 0x04}, // flog.r h e  
	{0xbba8, &op_flog,	  0,   5, 255, 0xff, 0x01, 0x00, 0x04}, // flog.r a f  
	{0xbba9, &op_flog,	  1,   5, 255, 0xff, 0x01, 0x00, 0x04}, // flog.r b f  
	{0xbbaa, &op_flog,	  2,   5, 255, 0xff, 0x01, 0x00, 0x04}, // flog.r c f  
	{0xbbab, &op_flog,	  3,   5, 255, 0xff, 0x01, 0x00, 0x04}, // flog.r d f  
	{0xbbac, &op_flog,	  4,   5, 255, 0xff, 0x01, 0x00, 0x04}, // flog.r e f  
	{0xbbad, &op_flog,	  5,   5, 255, 0xff, 0x01, 0x00, 0x04}, // flog.r f f  
	{0xbbae, &op_flog,	  6,   5, 255, 0xff, 0x01, 0x00, 0x04}, // flog.r g f  
	{0xbbaf, &op_flog,	  7,   5, 255, 0xff, 0x01, 0x00, 0x04}, // flog.r h f  
	{0xbbb0, &op_flog,	  0,   6, 255, 0xff, 0x01, 0x00, 0x04}, // flog.r a g  
	{0xbbb1, &op_flog,	  1,   6, 255, 0xff, 0x01, 0x00, 0x04}, // flog.r b g  
	{0xbbb2, &op_flog,	  2,   6, 255, 0xff, 0x01, 0x00, 0x04}, // flog.r c g  
	{0xbbb3, &op_flog,	  3,   6, 255, 0xff, 0x01, 0x00, 0x04}, // flog.r d g  
	{0xbbb4, &op_flog,	  4,   6, 255, 0xff, 0x01, 0x00, 0x04}, // flog.r e g  
	{0xbbb5, &op_flog,	  5,   6, 255, 0xff, 0x01, 0x00, 0x04}, // flog.r f g  
	{0xbbb6, &op_flog,	  6,   6, 255, 0xff, 0x01, 0x00, 0x04}, // flog.r g g  
	{0xbbb7, &op_flog,	  7,   6, 255, 0xff, 0x01, 0x00, 0x04}, // flog.r h g  
	{0xbbb8, &op_flog,	  0,   7, 255, 0xff, 0x01, 0x00, 0x04}, // flog.r a h  
	{0xbbb9, &op_flog,	  1,   7, 255, 0xff, 0x01, 0x00, 0x04}, // flog.r b h  
	{0xbbba, &op_flog,	  2,   7, 255, 0xff, 0x01, 0x00, 0x04}, // flog.r c h  
	{0xbbbb, &op_flog,	  3,   7, 255, 0xff, 0x01, 0x00, 0x04}, // flog.r d h  
	{0xbbbc, &op_flog,	  4,   7, 255, 0xff, 0x01, 0x00, 0x04}, // flog.r e h  
	{0xbbbd, &op_flog,	  5,   7, 255, 0xff, 0x01, 0x00, 0x04}, // flog.r f h  
	{0xbbbe, &op_flog,	  6,   7, 255, 0xff, 0x01, 0x00, 0x04}, // flog.r g h  
	{0xbbbf, &op_flog,	  7,   7, 255, 0xff, 0x01, 0x00, 0x04}, // flog.r h h  
	{0xbac8, &op_flog,	  0,   8, 255, 0xff, 0x00, 0x01, 0x01}, // flog.wi a <literal>  
	{0xbac9, &op_flog,	  1,   8, 255, 0xff, 0x00, 0x01, 0x01}, // flog.wi b <literal>  
	{0xbaca, &op_flog,	  2,   8, 255, 0xff, 0x00, 0x01, 0x01}, // flog.wi c <literal>  
	{0xbacb, &op_flog,	  3,   8, 255, 0xff, 0x00, 0x01, 0x01}, // flog.wi d <literal>  
	{0xbacc, &op_flog,	  4,   8, 255, 0xff, 0x00, 0x01, 0x01}, // flog.wi e <literal>  
	{0xbacd, &op_flog,	  5,   8, 255, 0xff, 0x00, 0x01, 0x01}, // flog.wi f <literal>  
	{0xbace, &op_flog,	  6,   8, 255, 0xff, 0x00, 0x01, 0x01}, // flog.wi g <literal>  
	{0xbacf, &op_flog,	  7,   8, 255, 0xff, 0x00, 0x01, 0x01}, // flog.wi h <literal>  
	{0xbad0, &op_flog,	  0,   8, 255, 0xff, 0x00, 0x02, 0x02}, // flog.di a <literal>  
	{0xbad1, &op_flog,	  1,   8, 255, 0xff, 0x00, 0x02, 0x02}, // flog.di b <literal>  
	{0xbad2, &op_flog,	  2,   8, 255, 0xff, 0x00, 0x02, 0x02}, // flog.di c <literal>  
	{0xbad3, &op_flog,	  3,   8, 255, 0xff, 0x00, 0x02, 0x02}, // flog.di d <literal>  
	{0xbad4, &op_flog,	  4,   8, 255, 0xff, 0x00, 0x02, 0x02}, // flog.di e <literal>  
	{0xbad5, &op_flog,	  5,   8, 255, 0xff, 0x00, 0x02, 0x02}, // flog.di f <literal>  
	{0xbad6, &op_flog,	  6,   8, 255, 0xff, 0x00, 0x02, 0x02}, // flog.di g <literal>  
	{0xbad7, &op_flog,	  7,   8, 255, 0xff, 0x00, 0x02, 0x02}, // flog.di h <literal>  
	{0xbae0, &op_flog,	  0,   8, 255, 0xff, 0x00, 0x04, 0x04}, // flog.i a <literal>  
	{0xbae1, &op_flog,	  1,   8, 255, 0xff, 0x00, 0x04, 0x04}, // flog.i b <literal>  
	{0xbae2, &op_flog,	  2,   8, 255, 0xff, 0x00, 0x04, 0x04}, // flog.i c <literal>  
	{0xbae3, &op_flog,	  3,   8, 255, 0xff, 0x00, 0x04, 0x04}, // flog.i d <literal>  
	{0xbae4, &op_flog,	  4,   8, 255, 0xff, 0x00, 0x04, 0x04}, // flog.i e <literal>  
	{0xbae5, &op_flog,	  5,   8, 255, 0xff, 0x00, 0x04, 0x04}, // flog.i f <literal>  
	{0xbae6, &op_flog,	  6,   8, 255, 0xff, 0x00, 0x04, 0x04}, // flog.i g <literal>  
	{0xbae7, &op_flog,	  7,   8, 255, 0xff, 0x00, 0x04, 0x04}, // flog.i h <literal>  
	{0xbbc8, &op_flog,	  0,   8, 255, 0xff, 0x01, 0x04, 0x01}, // flog.wri a <literal>  
	{0xbbc9, &op_flog,	  1,   8, 255, 0xff, 0x01, 0x04, 0x01}, // flog.wri b <literal>  
	{0xbbca, &op_flog,	  2,   8, 255, 0xff, 0x01, 0x04, 0x01}, // flog.wri c <literal>  
	{0xbbcb, &op_flog,	  3,   8, 255, 0xff, 0x01, 0x04, 0x01}, // flog.wri d <literal>  
	{0xbbcc, &op_flog,	  4,   8, 255, 0xff, 0x01, 0x04, 0x01}, // flog.wri e <literal>  
	{0xbbcd, &op_flog,	  5,   8, 255, 0xff, 0x01, 0x04, 0x01}, // flog.wri f <literal>  
	{0xbbce, &op_flog,	  6,   8, 255, 0xff, 0x01, 0x04, 0x01}, // flog.wri g <literal>  
	{0xbbcf, &op_flog,	  7,   8, 255, 0xff, 0x01, 0x04, 0x01}, // flog.wri h <literal>  
	{0xbbd0, &op_flog,	  0,   8, 255, 0xff, 0x01, 0x04, 0x02}, // flog.dri a <literal>  
	{0xbbd1, &op_flog,	  1,   8, 255, 0xff, 0x01, 0x04, 0x02}, // flog.dri b <literal>  
	{0xbbd2, &op_flog,	  2,   8, 255, 0xff, 0x01, 0x04, 0x02}, // flog.dri c <literal>  
	{0xbbd3, &op_flog,	  3,   8, 255, 0xff, 0x01, 0x04, 0x02}, // flog.dri d <literal>  
	{0xbbd4, &op_flog,	  4,   8, 255, 0xff, 0x01, 0x04, 0x02}, // flog.dri e <literal>  
	{0xbbd5, &op_flog,	  5,   8, 255, 0xff, 0x01, 0x04, 0x02}, // flog.dri f <literal>  
	{0xbbd6, &op_flog,	  6,   8, 255, 0xff, 0x01, 0x04, 0x02}, // flog.dri g <literal>  
	{0xbbd7, &op_flog,	  7,   8, 255, 0xff, 0x01, 0x04, 0x02}, // flog.dri h <literal>  
	{0xbbe0, &op_flog,	  0,   8, 255, 0xff, 0x01, 0x04, 0x04}, // flog.ri a <literal>  
	{0xbbe1, &op_flog,	  1,   8, 255, 0xff, 0x01, 0x04, 0x04}, // flog.ri b <literal>  
	{0xbbe2, &op_flog,	  2,   8, 255, 0xff, 0x01, 0x04, 0x04}, // flog.ri c <literal>  
	{0xbbe3, &op_flog,	  3,   8, 255, 0xff, 0x01, 0x04, 0x04}, // flog.ri d <literal>  
	{0xbbe4, &op_flog,	  4,   8, 255, 0xff, 0x01, 0x04, 0x04}, // flog.ri e <literal>  
	{0xbbe5, &op_flog,	  5,   8, 255, 0xff, 0x01, 0x04, 0x04}, // flog.ri f <literal>  
	{0xbbe6, &op_flog,	  6,   8, 255, 0xff, 0x01, 0x04, 0x04}, // flog.ri g <literal>  
	{0xbbe7, &op_flog,	  7,   8, 255, 0xff, 0x01, 0x04, 0x04}, // flog.ri h <literal>  
	{0xbc00, &op_fdiv,	  0,   0, 255, 0xff, 0x00, 0x00, 0x01}, // fdiv.w a a  
	{0xbc01, &op_fdiv,	  1,   0, 255, 0xff, 0x00, 0x00, 0x01}, // fdiv.w b a  
	{0xbc02, &op_fdiv,	  2,   0, 255, 0xff, 0x00, 0x00, 0x01}, // fdiv.w c a  
	{0xbc03, &op_fdiv,	  3,   0, 255, 0xff, 0x00, 0x00, 0x01}, // fdiv.w d a  
	{0xbc04, &op_fdiv,	  4,   0, 255, 0xff, 0x00, 0x00, 0x01}, // fdiv.w e a  
	{0xbc05, &op_fdiv,	  5,   0, 255, 0xff, 0x00, 0x00, 0x01}, // fdiv.w f a  
	{0xbc06, &op_fdiv,	  6,   0, 255, 0xff, 0x00, 0x00, 0x01}, // fdiv.w g a  
	{0xbc07, &op_fdiv,	  7,   0, 255, 0xff, 0x00, 0x00, 0x01}, // fdiv.w h a  
	{0xbc08, &op_fdiv,	  0,   1, 255, 0xff, 0x00, 0x00, 0x01}, // fdiv.w a b  
	{0xbc09, &op_fdiv,	  1,   1, 255, 0xff, 0x00, 0x00, 0x01}, // fdiv.w b b  
	{0xbc0a, &op_fdiv,	  2,   1, 255, 0xff, 0x00, 0x00, 0x01}, // fdiv.w c b  
	{0xbc0b, &op_fdiv,	  3,   1, 255, 0xff, 0x00, 0x00, 0x01}, // fdiv.w d b  
	{0xbc0c, &op_fdiv,	  4,   1, 255, 0xff, 0x00, 0x00, 0x01}, // fdiv.w e b  
	{0xbc0d, &op_fdiv,	  5,   1, 255, 0xff, 0x00, 0x00, 0x01}, // fdiv.w f b  
	{0xbc0e, &op_fdiv,	  6,   1, 255, 0xff, 0x00, 0x00, 0x01}, // fdiv.w g b  
	{0xbc0f, &op_fdiv,	  7,   1, 255, 0xff, 0x00, 0x00, 0x01}, // fdiv.w h b  
	{0xbc10, &op_fdiv,	  0,   2, 255, 0xff, 0x00, 0x00, 0x01}, // fdiv.w a c  
	{0xbc11, &op_fdiv,	  1,   2, 255, 0xff, 0x00, 0x00, 0x01}, // fdiv.w b c  
	{0xbc12, &op_fdiv,	  2,   2, 255, 0xff, 0x00, 0x00, 0x01}, // fdiv.w c c  
	{0xbc13, &op_fdiv,	  3,   2, 255, 0xff, 0x00, 0x00, 0x01}, // fdiv.w d c  
	{0xbc14, &op_fdiv,	  4,   2, 255, 0xff, 0x00, 0x00, 0x01}, // fdiv.w e c  
	{0xbc15, &op_fdiv,	  5,   2, 255, 0xff, 0x00, 0x00, 0x01}, // fdiv.w f c  
	{0xbc16, &op_fdiv,	  6,   2, 255, 0xff, 0x00, 0x00, 0x01}, // fdiv.w g c  
	{0xbc17, &op_fdiv,	  7,   2, 255, 0xff, 0x00, 0x00, 0x01}, // fdiv.w h c  
	{0xbc18, &op_fdiv,	  0,   3, 255, 0xff, 0x00, 0x00, 0x01}, // fdiv.w a d  
	{0xbc19, &op_fdiv,	  1,   3, 255, 0xff, 0x00, 0x00, 0x01}, // fdiv.w b d  
	{0xbc1a, &op_fdiv,	  2,   3, 255, 0xff, 0x00, 0x00, 0x01}, // fdiv.w c d  
	{0xbc1b, &op_fdiv,	  3,   3, 255, 0xff, 0x00, 0x00, 0x01}, // fdiv.w d d  
	{0xbc1c, &op_fdiv,	  4,   3, 255, 0xff, 0x00, 0x00, 0x01}, // fdiv.w e d  
	{0xbc1d, &op_fdiv,	  5,   3, 255, 0xff, 0x00, 0x00, 0x01}, // fdiv.w f d  
	{0xbc1e, &op_fdiv,	  6,   3, 255, 0xff, 0x00, 0x00, 0x01}, // fdiv.w g d  
	{0xbc1f, &op_fdiv,	  7,   3, 255, 0xff, 0x00, 0x00, 0x01}, // fdiv.w h d  
	{0xbc20, &op_fdiv,	  0,   4, 255, 0xff, 0x00, 0x00, 0x01}, // fdiv.w a e  
	{0xbc21, &op_fdiv,	  1,   4, 255, 0xff, 0x00, 0x00, 0x01}, // fdiv.w b e  
	{0xbc22, &op_fdiv,	  2,   4, 255, 0xff, 0x00, 0x00, 0x01}, // fdiv.w c e  
	{0xbc23, &op_fdiv,	  3,   4, 255, 0xff, 0x00, 0x00, 0x01}, // fdiv.w d e  
	{0xbc24, &op_fdiv,	  4,   4, 255, 0xff, 0x00, 0x00, 0x01}, // fdiv.w e e  
	{0xbc25, &op_fdiv,	  5,   4, 255, 0xff, 0x00, 0x00, 0x01}, // fdiv.w f e  
	{0xbc26, &op_fdiv,	  6,   4, 255, 0xff, 0x00, 0x00, 0x01}, // fdiv.w g e  
	{0xbc27, &op_fdiv,	  7,   4, 255, 0xff, 0x00, 0x00, 0x01}, // fdiv.w h e  
	{0xbc28, &op_fdiv,	  0,   5, 255, 0xff, 0x00, 0x00, 0x01}, // fdiv.w a f  
	{0xbc29, &op_fdiv,	  1,   5, 255, 0xff, 0x00, 0x00, 0x01}, // fdiv.w b f  
	{0xbc2a, &op_fdiv,	  2,   5, 255, 0xff, 0x00, 0x00, 0x01}, // fdiv.w c f  
	{0xbc2b, &op_fdiv,	  3,   5, 255, 0xff, 0x00, 0x00, 0x01}, // fdiv.w d f  
	{0xbc2c, &op_fdiv,	  4,   5, 255, 0xff, 0x00, 0x00, 0x01}, // fdiv.w e f  
	{0xbc2d, &op_fdiv,	  5,   5, 255, 0xff, 0x00, 0x00, 0x01}, // fdiv.w f f  
	{0xbc2e, &op_fdiv,	  6,   5, 255, 0xff, 0x00, 0x00, 0x01}, // fdiv.w g f  
	{0xbc2f, &op_fdiv,	  7,   5, 255, 0xff, 0x00, 0x00, 0x01}, // fdiv.w h f  
	{0xbc30, &op_fdiv,	  0,   6, 255, 0xff, 0x00, 0x00, 0x01}, // fdiv.w a g  
	{0xbc31, &op_fdiv,	  1,   6, 255, 0xff, 0x00, 0x00, 0x01}, // fdiv.w b g  
	{0xbc32, &op_fdiv,	  2,   6, 255, 0xff, 0x00, 0x00, 0x01}, // fdiv.w c g  
	{0xbc33, &op_fdiv,	  3,   6, 255, 0xff, 0x00, 0x00, 0x01}, // fdiv.w d g  
	{0xbc34, &op_fdiv,	  4,   6, 255, 0xff, 0x00, 0x00, 0x01}, // fdiv.w e g  
	{0xbc35, &op_fdiv,	  5,   6, 255, 0xff, 0x00, 0x00, 0x01}, // fdiv.w f g  
	{0xbc36, &op_fdiv,	  6,   6, 255, 0xff, 0x00, 0x00, 0x01}, // fdiv.w g g  
	{0xbc37, &op_fdiv,	  7,   6, 255, 0xff, 0x00, 0x00, 0x01}, // fdiv.w h g  
	{0xbc38, &op_fdiv,	  0,   7, 255, 0xff, 0x00, 0x00, 0x01}, // fdiv.w a h  
	{0xbc39, &op_fdiv,	  1,   7, 255, 0xff, 0x00, 0x00, 0x01}, // fdiv.w b h  
	{0xbc3a, &op_fdiv,	  2,   7, 255, 0xff, 0x00, 0x00, 0x01}, // fdiv.w c h  
	{0xbc3b, &op_fdiv,	  3,   7, 255, 0xff, 0x00, 0x00, 0x01}, // fdiv.w d h  
	{0xbc3c, &op_fdiv,	  4,   7, 255, 0xff, 0x00, 0x00, 0x01}, // fdiv.w e h  
	{0xbc3d, &op_fdiv,	  5,   7, 255, 0xff, 0x00, 0x00, 0x01}, // fdiv.w f h  
	{0xbc3e, &op_fdiv,	  6,   7, 255, 0xff, 0x00, 0x00, 0x01}, // fdiv.w g h  
	{0xbc3f, &op_fdiv,	  7,   7, 255, 0xff, 0x00, 0x00, 0x01}, // fdiv.w h h  
	{0xbc40, &op_fdiv,	  0,   0, 255, 0xff, 0x00, 0x00, 0x02}, // fdiv.d a a  
	{0xbc41, &op_fdiv,	  1,   0, 255, 0xff, 0x00, 0x00, 0x02}, // fdiv.d b a  
	{0xbc42, &op_fdiv,	  2,   0, 255, 0xff, 0x00, 0x00, 0x02}, // fdiv.d c a  
	{0xbc43, &op_fdiv,	  3,   0, 255, 0xff, 0x00, 0x00, 0x02}, // fdiv.d d a  
	{0xbc44, &op_fdiv,	  4,   0, 255, 0xff, 0x00, 0x00, 0x02}, // fdiv.d e a  
	{0xbc45, &op_fdiv,	  5,   0, 255, 0xff, 0x00, 0x00, 0x02}, // fdiv.d f a  
	{0xbc46, &op_fdiv,	  6,   0, 255, 0xff, 0x00, 0x00, 0x02}, // fdiv.d g a  
	{0xbc47, &op_fdiv,	  7,   0, 255, 0xff, 0x00, 0x00, 0x02}, // fdiv.d h a  
	{0xbc48, &op_fdiv,	  0,   1, 255, 0xff, 0x00, 0x00, 0x02}, // fdiv.d a b  
	{0xbc49, &op_fdiv,	  1,   1, 255, 0xff, 0x00, 0x00, 0x02}, // fdiv.d b b  
	{0xbc4a, &op_fdiv,	  2,   1, 255, 0xff, 0x00, 0x00, 0x02}, // fdiv.d c b  
	{0xbc4b, &op_fdiv,	  3,   1, 255, 0xff, 0x00, 0x00, 0x02}, // fdiv.d d b  
	{0xbc4c, &op_fdiv,	  4,   1, 255, 0xff, 0x00, 0x00, 0x02}, // fdiv.d e b  
	{0xbc4d, &op_fdiv,	  5,   1, 255, 0xff, 0x00, 0x00, 0x02}, // fdiv.d f b  
	{0xbc4e, &op_fdiv,	  6,   1, 255, 0xff, 0x00, 0x00, 0x02}, // fdiv.d g b  
	{0xbc4f, &op_fdiv,	  7,   1, 255, 0xff, 0x00, 0x00, 0x02}, // fdiv.d h b  
	{0xbc50, &op_fdiv,	  0,   2, 255, 0xff, 0x00, 0x00, 0x02}, // fdiv.d a c  
	{0xbc51, &op_fdiv,	  1,   2, 255, 0xff, 0x00, 0x00, 0x02}, // fdiv.d b c  
	{0xbc52, &op_fdiv,	  2,   2, 255, 0xff, 0x00, 0x00, 0x02}, // fdiv.d c c  
	{0xbc53, &op_fdiv,	  3,   2, 255, 0xff, 0x00, 0x00, 0x02}, // fdiv.d d c  
	{0xbc54, &op_fdiv,	  4,   2, 255, 0xff, 0x00, 0x00, 0x02}, // fdiv.d e c  
	{0xbc55, &op_fdiv,	  5,   2, 255, 0xff, 0x00, 0x00, 0x02}, // fdiv.d f c  
	{0xbc56, &op_fdiv,	  6,   2, 255, 0xff, 0x00, 0x00, 0x02}, // fdiv.d g c  
	{0xbc57, &op_fdiv,	  7,   2, 255, 0xff, 0x00, 0x00, 0x02}, // fdiv.d h c  
	{0xbc58, &op_fdiv,	  0,   3, 255, 0xff, 0x00, 0x00, 0x02}, // fdiv.d a d  
	{0xbc59, &op_fdiv,	  1,   3, 255, 0xff, 0x00, 0x00, 0x02}, // fdiv.d b d  
	{0xbc5a, &op_fdiv,	  2,   3, 255, 0xff, 0x00, 0x00, 0x02}, // fdiv.d c d  
	{0xbc5b, &op_fdiv,	  3,   3, 255, 0xff, 0x00, 0x00, 0x02}, // fdiv.d d d  
	{0xbc5c, &op_fdiv,	  4,   3, 255, 0xff, 0x00, 0x00, 0x02}, // fdiv.d e d  
	{0xbc5d, &op_fdiv,	  5,   3, 255, 0xff, 0x00, 0x00, 0x02}, // fdiv.d f d  
	{0xbc5e, &op_fdiv,	  6,   3, 255, 0xff, 0x00, 0x00, 0x02}, // fdiv.d g d  
	{0xbc5f, &op_fdiv,	  7,   3, 255, 0xff, 0x00, 0x00, 0x02}, // fdiv.d h d  
	{0xbc60, &op_fdiv,	  0,   4, 255, 0xff, 0x00, 0x00, 0x02}, // fdiv.d a e  
	{0xbc61, &op_fdiv,	  1,   4, 255, 0xff, 0x00, 0x00, 0x02}, // fdiv.d b e  
	{0xbc62, &op_fdiv,	  2,   4, 255, 0xff, 0x00, 0x00, 0x02}, // fdiv.d c e  
	{0xbc63, &op_fdiv,	  3,   4, 255, 0xff, 0x00, 0x00, 0x02}, // fdiv.d d e  
	{0xbc64, &op_fdiv,	  4,   4, 255, 0xff, 0x00, 0x00, 0x02}, // fdiv.d e e  
	{0xbc65, &op_fdiv,	  5,   4, 255, 0xff, 0x00, 0x00, 0x02}, // fdiv.d f e  
	{0xbc66, &op_fdiv,	  6,   4, 255, 0xff, 0x00, 0x00, 0x02}, // fdiv.d g e  
	{0xbc67, &op_fdiv,	  7,   4, 255, 0xff, 0x00, 0x00, 0x02}, // fdiv.d h e  
	{0xbc68, &op_fdiv,	  0,   5, 255, 0xff, 0x00, 0x00, 0x02}, // fdiv.d a f  
	{0xbc69, &op_fdiv,	  1,   5, 255, 0xff, 0x00, 0x00, 0x02}, // fdiv.d b f  
	{0xbc6a, &op_fdiv,	  2,   5, 255, 0xff, 0x00, 0x00, 0x02}, // fdiv.d c f  
	{0xbc6b, &op_fdiv,	  3,   5, 255, 0xff, 0x00, 0x00, 0x02}, // fdiv.d d f  
	{0xbc6c, &op_fdiv,	  4,   5, 255, 0xff, 0x00, 0x00, 0x02}, // fdiv.d e f  
	{0xbc6d, &op_fdiv,	  5,   5, 255, 0xff, 0x00, 0x00, 0x02}, // fdiv.d f f  
	{0xbc6e, &op_fdiv,	  6,   5, 255, 0xff, 0x00, 0x00, 0x02}, // fdiv.d g f  
	{0xbc6f, &op_fdiv,	  7,   5, 255, 0xff, 0x00, 0x00, 0x02}, // fdiv.d h f  
	{0xbc70, &op_fdiv,	  0,   6, 255, 0xff, 0x00, 0x00, 0x02}, // fdiv.d a g  
	{0xbc71, &op_fdiv,	  1,   6, 255, 0xff, 0x00, 0x00, 0x02}, // fdiv.d b g  
	{0xbc72, &op_fdiv,	  2,   6, 255, 0xff, 0x00, 0x00, 0x02}, // fdiv.d c g  
	{0xbc73, &op_fdiv,	  3,   6, 255, 0xff, 0x00, 0x00, 0x02}, // fdiv.d d g  
	{0xbc74, &op_fdiv,	  4,   6, 255, 0xff, 0x00, 0x00, 0x02}, // fdiv.d e g  
	{0xbc75, &op_fdiv,	  5,   6, 255, 0xff, 0x00, 0x00, 0x02}, // fdiv.d f g  
	{0xbc76, &op_fdiv,	  6,   6, 255, 0xff, 0x00, 0x00, 0x02}, // fdiv.d g g  
	{0xbc77, &op_fdiv,	  7,   6, 255, 0xff, 0x00, 0x00, 0x02}, // fdiv.d h g  
	{0xbc78, &op_fdiv,	  0,   7, 255, 0xff, 0x00, 0x00, 0x02}, // fdiv.d a h  
	{0xbc79, &op_fdiv,	  1,   7, 255, 0xff, 0x00, 0x00, 0x02}, // fdiv.d b h  
	{0xbc7a, &op_fdiv,	  2,   7, 255, 0xff, 0x00, 0x00, 0x02}, // fdiv.d c h  
	{0xbc7b, &op_fdiv,	  3,   7, 255, 0xff, 0x00, 0x00, 0x02}, // fdiv.d d h  
	{0xbc7c, &op_fdiv,	  4,   7, 255, 0xff, 0x00, 0x00, 0x02}, // fdiv.d e h  
	{0xbc7d, &op_fdiv,	  5,   7, 255, 0xff, 0x00, 0x00, 0x02}, // fdiv.d f h  
	{0xbc7e, &op_fdiv,	  6,   7, 255, 0xff, 0x00, 0x00, 0x02}, // fdiv.d g h  
	{0xbc7f, &op_fdiv,	  7,   7, 255, 0xff, 0x00, 0x00, 0x02}, // fdiv.d h h  
	{0xbc80, &op_fdiv,	  0,   0, 255, 0xff, 0x00, 0x00, 0x04}, // fdiv a a  
	{0xbc81, &op_fdiv,	  1,   0, 255, 0xff, 0x00, 0x00, 0x04}, // fdiv b a  
	{0xbc82, &op_fdiv,	  2,   0, 255, 0xff, 0x00, 0x00, 0x04}, // fdiv c a  
	{0xbc83, &op_fdiv,	  3,   0, 255, 0xff, 0x00, 0x00, 0x04}, // fdiv d a  
	{0xbc84, &op_fdiv,	  4,   0, 255, 0xff, 0x00, 0x00, 0x04}, // fdiv e a  
	{0xbc85, &op_fdiv,	  5,   0, 255, 0xff, 0x00, 0x00, 0x04}, // fdiv f a  
	{0xbc86, &op_fdiv,	  6,   0, 255, 0xff, 0x00, 0x00, 0x04}, // fdiv g a  
	{0xbc87, &op_fdiv,	  7,   0, 255, 0xff, 0x00, 0x00, 0x04}, // fdiv h a  
	{0xbc88, &op_fdiv,	  0,   1, 255, 0xff, 0x00, 0x00, 0x04}, // fdiv a b  
	{0xbc89, &op_fdiv,	  1,   1, 255, 0xff, 0x00, 0x00, 0x04}, // fdiv b b  
	{0xbc8a, &op_fdiv,	  2,   1, 255, 0xff, 0x00, 0x00, 0x04}, // fdiv c b  
	{0xbc8b, &op_fdiv,	  3,   1, 255, 0xff, 0x00, 0x00, 0x04}, // fdiv d b  
	{0xbc8c, &op_fdiv,	  4,   1, 255, 0xff, 0x00, 0x00, 0x04}, // fdiv e b  
	{0xbc8d, &op_fdiv,	  5,   1, 255, 0xff, 0x00, 0x00, 0x04}, // fdiv f b  
	{0xbc8e, &op_fdiv,	  6,   1, 255, 0xff, 0x00, 0x00, 0x04}, // fdiv g b  
	{0xbc8f, &op_fdiv,	  7,   1, 255, 0xff, 0x00, 0x00, 0x04}, // fdiv h b  
	{0xbc90, &op_fdiv,	  0,   2, 255, 0xff, 0x00, 0x00, 0x04}, // fdiv a c  
	{0xbc91, &op_fdiv,	  1,   2, 255, 0xff, 0x00, 0x00, 0x04}, // fdiv b c  
	{0xbc92, &op_fdiv,	  2,   2, 255, 0xff, 0x00, 0x00, 0x04}, // fdiv c c  
	{0xbc93, &op_fdiv,	  3,   2, 255, 0xff, 0x00, 0x00, 0x04}, // fdiv d c  
	{0xbc94, &op_fdiv,	  4,   2, 255, 0xff, 0x00, 0x00, 0x04}, // fdiv e c  
	{0xbc95, &op_fdiv,	  5,   2, 255, 0xff, 0x00, 0x00, 0x04}, // fdiv f c  
	{0xbc96, &op_fdiv,	  6,   2, 255, 0xff, 0x00, 0x00, 0x04}, // fdiv g c  
	{0xbc97, &op_fdiv,	  7,   2, 255, 0xff, 0x00, 0x00, 0x04}, // fdiv h c  
	{0xbc98, &op_fdiv,	  0,   3, 255, 0xff, 0x00, 0x00, 0x04}, // fdiv a d  
	{0xbc99, &op_fdiv,	  1,   3, 255, 0xff, 0x00, 0x00, 0x04}, // fdiv b d  
	{0xbc9a, &op_fdiv,	  2,   3, 255, 0xff, 0x00, 0x00, 0x04}, // fdiv c d  
	{0xbc9b, &op_fdiv,	  3,   3, 255, 0xff, 0x00, 0x00, 0x04}, // fdiv d d  
	{0xbc9c, &op_fdiv,	  4,   3, 255, 0xff, 0x00, 0x00, 0x04}, // fdiv e d  
	{0xbc9d, &op_fdiv,	  5,   3, 255, 0xff, 0x00, 0x00, 0x04}, // fdiv f d  
	{0xbc9e, &op_fdiv,	  6,   3, 255, 0xff, 0x00, 0x00, 0x04}, // fdiv g d  
	{0xbc9f, &op_fdiv,	  7,   3, 255, 0xff, 0x00, 0x00, 0x04}, // fdiv h d  
	{0xbca0, &op_fdiv,	  0,   4, 255, 0xff, 0x00, 0x00, 0x04}, // fdiv a e  
	{0xbca1, &op_fdiv,	  1,   4, 255, 0xff, 0x00, 0x00, 0x04}, // fdiv b e  
	{0xbca2, &op_fdiv,	  2,   4, 255, 0xff, 0x00, 0x00, 0x04}, // fdiv c e  
	{0xbca3, &op_fdiv,	  3,   4, 255, 0xff, 0x00, 0x00, 0x04}, // fdiv d e  
	{0xbca4, &op_fdiv,	  4,   4, 255, 0xff, 0x00, 0x00, 0x04}, // fdiv e e  
	{0xbca5, &op_fdiv,	  5,   4, 255, 0xff, 0x00, 0x00, 0x04}, // fdiv f e  
	{0xbca6, &op_fdiv,	  6,   4, 255, 0xff, 0x00, 0x00, 0x04}, // fdiv g e  
	{0xbca7, &op_fdiv,	  7,   4, 255, 0xff, 0x00, 0x00, 0x04}, // fdiv h e  
	{0xbca8, &op_fdiv,	  0,   5, 255, 0xff, 0x00, 0x00, 0x04}, // fdiv a f  
	{0xbca9, &op_fdiv,	  1,   5, 255, 0xff, 0x00, 0x00, 0x04}, // fdiv b f  
	{0xbcaa, &op_fdiv,	  2,   5, 255, 0xff, 0x00, 0x00, 0x04}, // fdiv c f  
	{0xbcab, &op_fdiv,	  3,   5, 255, 0xff, 0x00, 0x00, 0x04}, // fdiv d f  
	{0xbcac, &op_fdiv,	  4,   5, 255, 0xff, 0x00, 0x00, 0x04}, // fdiv e f  
	{0xbcad, &op_fdiv,	  5,   5, 255, 0xff, 0x00, 0x00, 0x04}, // fdiv f f  
	{0xbcae, &op_fdiv,	  6,   5, 255, 0xff, 0x00, 0x00, 0x04}, // fdiv g f  
	{0xbcaf, &op_fdiv,	  7,   5, 255, 0xff, 0x00, 0x00, 0x04}, // fdiv h f  
	{0xbcb0, &op_fdiv,	  0,   6, 255, 0xff, 0x00, 0x00, 0x04}, // fdiv a g  
	{0xbcb1, &op_fdiv,	  1,   6, 255, 0xff, 0x00, 0x00, 0x04}, // fdiv b g  
	{0xbcb2, &op_fdiv,	  2,   6, 255, 0xff, 0x00, 0x00, 0x04}, // fdiv c g  
	{0xbcb3, &op_fdiv,	  3,   6, 255, 0xff, 0x00, 0x00, 0x04}, // fdiv d g  
	{0xbcb4, &op_fdiv,	  4,   6, 255, 0xff, 0x00, 0x00, 0x04}, // fdiv e g  
	{0xbcb5, &op_fdiv,	  5,   6, 255, 0xff, 0x00, 0x00, 0x04}, // fdiv f g  
	{0xbcb6, &op_fdiv,	  6,   6, 255, 0xff, 0x00, 0x00, 0x04}, // fdiv g g  
	{0xbcb7, &op_fdiv,	  7,   6, 255, 0xff, 0x00, 0x00, 0x04}, // fdiv h g  
	{0xbcb8, &op_fdiv,	  0,   7, 255, 0xff, 0x00, 0x00, 0x04}, // fdiv a h  
	{0xbcb9, &op_fdiv,	  1,   7, 255, 0xff, 0x00, 0x00, 0x04}, // fdiv b h  
	{0xbcba, &op_fdiv,	  2,   7, 255, 0xff, 0x00, 0x00, 0x04}, // fdiv c h  
	{0xbcbb, &op_fdiv,	  3,   7, 255, 0xff, 0x00, 0x00, 0x04}, // fdiv d h  
	{0xbcbc, &op_fdiv,	  4,   7, 255, 0xff, 0x00, 0x00, 0x04}, // fdiv e h  
	{0xbcbd, &op_fdiv,	  5,   7, 255, 0xff, 0x00, 0x00, 0x04}, // fdiv f h  
	{0xbcbe, &op_fdiv,	  6,   7, 255, 0xff, 0x00, 0x00, 0x04}, // fdiv g h  
	{0xbcbf, &op_fdiv,	  7,   7, 255, 0xff, 0x00, 0x00, 0x04}, // fdiv h h  
	{0xbd00, &op_fdiv,	  0,   0, 255, 0xff, 0x01, 0x00, 0x01}, // fdiv.wr a a  
	{0xbd01, &op_fdiv,	  1,   0, 255, 0xff, 0x01, 0x00, 0x01}, // fdiv.wr b a  
	{0xbd02, &op_fdiv,	  2,   0, 255, 0xff, 0x01, 0x00, 0x01}, // fdiv.wr c a  
	{0xbd03, &op_fdiv,	  3,   0, 255, 0xff, 0x01, 0x00, 0x01}, // fdiv.wr d a  
	{0xbd04, &op_fdiv,	  4,   0, 255, 0xff, 0x01, 0x00, 0x01}, // fdiv.wr e a  
	{0xbd05, &op_fdiv,	  5,   0, 255, 0xff, 0x01, 0x00, 0x01}, // fdiv.wr f a  
	{0xbd06, &op_fdiv,	  6,   0, 255, 0xff, 0x01, 0x00, 0x01}, // fdiv.wr g a  
	{0xbd07, &op_fdiv,	  7,   0, 255, 0xff, 0x01, 0x00, 0x01}, // fdiv.wr h a  
	{0xbd08, &op_fdiv,	  0,   1, 255, 0xff, 0x01, 0x00, 0x01}, // fdiv.wr a b  
	{0xbd09, &op_fdiv,	  1,   1, 255, 0xff, 0x01, 0x00, 0x01}, // fdiv.wr b b  
	{0xbd0a, &op_fdiv,	  2,   1, 255, 0xff, 0x01, 0x00, 0x01}, // fdiv.wr c b  
	{0xbd0b, &op_fdiv,	  3,   1, 255, 0xff, 0x01, 0x00, 0x01}, // fdiv.wr d b  
	{0xbd0c, &op_fdiv,	  4,   1, 255, 0xff, 0x01, 0x00, 0x01}, // fdiv.wr e b  
	{0xbd0d, &op_fdiv,	  5,   1, 255, 0xff, 0x01, 0x00, 0x01}, // fdiv.wr f b  
	{0xbd0e, &op_fdiv,	  6,   1, 255, 0xff, 0x01, 0x00, 0x01}, // fdiv.wr g b  
	{0xbd0f, &op_fdiv,	  7,   1, 255, 0xff, 0x01, 0x00, 0x01}, // fdiv.wr h b  
	{0xbd10, &op_fdiv,	  0,   2, 255, 0xff, 0x01, 0x00, 0x01}, // fdiv.wr a c  
	{0xbd11, &op_fdiv,	  1,   2, 255, 0xff, 0x01, 0x00, 0x01}, // fdiv.wr b c  
	{0xbd12, &op_fdiv,	  2,   2, 255, 0xff, 0x01, 0x00, 0x01}, // fdiv.wr c c  
	{0xbd13, &op_fdiv,	  3,   2, 255, 0xff, 0x01, 0x00, 0x01}, // fdiv.wr d c  
	{0xbd14, &op_fdiv,	  4,   2, 255, 0xff, 0x01, 0x00, 0x01}, // fdiv.wr e c  
	{0xbd15, &op_fdiv,	  5,   2, 255, 0xff, 0x01, 0x00, 0x01}, // fdiv.wr f c  
	{0xbd16, &op_fdiv,	  6,   2, 255, 0xff, 0x01, 0x00, 0x01}, // fdiv.wr g c  
	{0xbd17, &op_fdiv,	  7,   2, 255, 0xff, 0x01, 0x00, 0x01}, // fdiv.wr h c  
	{0xbd18, &op_fdiv,	  0,   3, 255, 0xff, 0x01, 0x00, 0x01}, // fdiv.wr a d  
	{0xbd19, &op_fdiv,	  1,   3, 255, 0xff, 0x01, 0x00, 0x01}, // fdiv.wr b d  
	{0xbd1a, &op_fdiv,	  2,   3, 255, 0xff, 0x01, 0x00, 0x01}, // fdiv.wr c d  
	{0xbd1b, &op_fdiv,	  3,   3, 255, 0xff, 0x01, 0x00, 0x01}, // fdiv.wr d d  
	{0xbd1c, &op_fdiv,	  4,   3, 255, 0xff, 0x01, 0x00, 0x01}, // fdiv.wr e d  
	{0xbd1d, &op_fdiv,	  5,   3, 255, 0xff, 0x01, 0x00, 0x01}, // fdiv.wr f d  
	{0xbd1e, &op_fdiv,	  6,   3, 255, 0xff, 0x01, 0x00, 0x01}, // fdiv.wr g d  
	{0xbd1f, &op_fdiv,	  7,   3, 255, 0xff, 0x01, 0x00, 0x01}, // fdiv.wr h d  
	{0xbd20, &op_fdiv,	  0,   4, 255, 0xff, 0x01, 0x00, 0x01}, // fdiv.wr a e  
	{0xbd21, &op_fdiv,	  1,   4, 255, 0xff, 0x01, 0x00, 0x01}, // fdiv.wr b e  
	{0xbd22, &op_fdiv,	  2,   4, 255, 0xff, 0x01, 0x00, 0x01}, // fdiv.wr c e  
	{0xbd23, &op_fdiv,	  3,   4, 255, 0xff, 0x01, 0x00, 0x01}, // fdiv.wr d e  
	{0xbd24, &op_fdiv,	  4,   4, 255, 0xff, 0x01, 0x00, 0x01}, // fdiv.wr e e  
	{0xbd25, &op_fdiv,	  5,   4, 255, 0xff, 0x01, 0x00, 0x01}, // fdiv.wr f e  
	{0xbd26, &op_fdiv,	  6,   4, 255, 0xff, 0x01, 0x00, 0x01}, // fdiv.wr g e  
	{0xbd27, &op_fdiv,	  7,   4, 255, 0xff, 0x01, 0x00, 0x01}, // fdiv.wr h e  
	{0xbd28, &op_fdiv,	  0,   5, 255, 0xff, 0x01, 0x00, 0x01}, // fdiv.wr a f  
	{0xbd29, &op_fdiv,	  1,   5, 255, 0xff, 0x01, 0x00, 0x01}, // fdiv.wr b f  
	{0xbd2a, &op_fdiv,	  2,   5, 255, 0xff, 0x01, 0x00, 0x01}, // fdiv.wr c f  
	{0xbd2b, &op_fdiv,	  3,   5, 255, 0xff, 0x01, 0x00, 0x01}, // fdiv.wr d f  
	{0xbd2c, &op_fdiv,	  4,   5, 255, 0xff, 0x01, 0x00, 0x01}, // fdiv.wr e f  
	{0xbd2d, &op_fdiv,	  5,   5, 255, 0xff, 0x01, 0x00, 0x01}, // fdiv.wr f f  
	{0xbd2e, &op_fdiv,	  6,   5, 255, 0xff, 0x01, 0x00, 0x01}, // fdiv.wr g f  
	{0xbd2f, &op_fdiv,	  7,   5, 255, 0xff, 0x01, 0x00, 0x01}, // fdiv.wr h f  
	{0xbd30, &op_fdiv,	  0,   6, 255, 0xff, 0x01, 0x00, 0x01}, // fdiv.wr a g  
	{0xbd31, &op_fdiv,	  1,   6, 255, 0xff, 0x01, 0x00, 0x01}, // fdiv.wr b g  
	{0xbd32, &op_fdiv,	  2,   6, 255, 0xff, 0x01, 0x00, 0x01}, // fdiv.wr c g  
	{0xbd33, &op_fdiv,	  3,   6, 255, 0xff, 0x01, 0x00, 0x01}, // fdiv.wr d g  
	{0xbd34, &op_fdiv,	  4,   6, 255, 0xff, 0x01, 0x00, 0x01}, // fdiv.wr e g  
	{0xbd35, &op_fdiv,	  5,   6, 255, 0xff, 0x01, 0x00, 0x01}, // fdiv.wr f g  
	{0xbd36, &op_fdiv,	  6,   6, 255, 0xff, 0x01, 0x00, 0x01}, // fdiv.wr g g  
	{0xbd37, &op_fdiv,	  7,   6, 255, 0xff, 0x01, 0x00, 0x01}, // fdiv.wr h g  
	{0xbd38, &op_fdiv,	  0,   7, 255, 0xff, 0x01, 0x00, 0x01}, // fdiv.wr a h  
	{0xbd39, &op_fdiv,	  1,   7, 255, 0xff, 0x01, 0x00, 0x01}, // fdiv.wr b h  
	{0xbd3a, &op_fdiv,	  2,   7, 255, 0xff, 0x01, 0x00, 0x01}, // fdiv.wr c h  
	{0xbd3b, &op_fdiv,	  3,   7, 255, 0xff, 0x01, 0x00, 0x01}, // fdiv.wr d h  
	{0xbd3c, &op_fdiv,	  4,   7, 255, 0xff, 0x01, 0x00, 0x01}, // fdiv.wr e h  
	{0xbd3d, &op_fdiv,	  5,   7, 255, 0xff, 0x01, 0x00, 0x01}, // fdiv.wr f h  
	{0xbd3e, &op_fdiv,	  6,   7, 255, 0xff, 0x01, 0x00, 0x01}, // fdiv.wr g h  
	{0xbd3f, &op_fdiv,	  7,   7, 255, 0xff, 0x01, 0x00, 0x01}, // fdiv.wr h h  
	{0xbd40, &op_fdiv,	  0,   0, 255, 0xff, 0x01, 0x00, 0x02}, // fdiv.dr a a  
	{0xbd41, &op_fdiv,	  1,   0, 255, 0xff, 0x01, 0x00, 0x02}, // fdiv.dr b a  
	{0xbd42, &op_fdiv,	  2,   0, 255, 0xff, 0x01, 0x00, 0x02}, // fdiv.dr c a  
	{0xbd43, &op_fdiv,	  3,   0, 255, 0xff, 0x01, 0x00, 0x02}, // fdiv.dr d a  
	{0xbd44, &op_fdiv,	  4,   0, 255, 0xff, 0x01, 0x00, 0x02}, // fdiv.dr e a  
	{0xbd45, &op_fdiv,	  5,   0, 255, 0xff, 0x01, 0x00, 0x02}, // fdiv.dr f a  
	{0xbd46, &op_fdiv,	  6,   0, 255, 0xff, 0x01, 0x00, 0x02}, // fdiv.dr g a  
	{0xbd47, &op_fdiv,	  7,   0, 255, 0xff, 0x01, 0x00, 0x02}, // fdiv.dr h a  
	{0xbd48, &op_fdiv,	  0,   1, 255, 0xff, 0x01, 0x00, 0x02}, // fdiv.dr a b  
	{0xbd49, &op_fdiv,	  1,   1, 255, 0xff, 0x01, 0x00, 0x02}, // fdiv.dr b b  
	{0xbd4a, &op_fdiv,	  2,   1, 255, 0xff, 0x01, 0x00, 0x02}, // fdiv.dr c b  
	{0xbd4b, &op_fdiv,	  3,   1, 255, 0xff, 0x01, 0x00, 0x02}, // fdiv.dr d b  
	{0xbd4c, &op_fdiv,	  4,   1, 255, 0xff, 0x01, 0x00, 0x02}, // fdiv.dr e b  
	{0xbd4d, &op_fdiv,	  5,   1, 255, 0xff, 0x01, 0x00, 0x02}, // fdiv.dr f b  
	{0xbd4e, &op_fdiv,	  6,   1, 255, 0xff, 0x01, 0x00, 0x02}, // fdiv.dr g b  
	{0xbd4f, &op_fdiv,	  7,   1, 255, 0xff, 0x01, 0x00, 0x02}, // fdiv.dr h b  
	{0xbd50, &op_fdiv,	  0,   2, 255, 0xff, 0x01, 0x00, 0x02}, // fdiv.dr a c  
	{0xbd51, &op_fdiv,	  1,   2, 255, 0xff, 0x01, 0x00, 0x02}, // fdiv.dr b c  
	{0xbd52, &op_fdiv,	  2,   2, 255, 0xff, 0x01, 0x00, 0x02}, // fdiv.dr c c  
	{0xbd53, &op_fdiv,	  3,   2, 255, 0xff, 0x01, 0x00, 0x02}, // fdiv.dr d c  
	{0xbd54, &op_fdiv,	  4,   2, 255, 0xff, 0x01, 0x00, 0x02}, // fdiv.dr e c  
	{0xbd55, &op_fdiv,	  5,   2, 255, 0xff, 0x01, 0x00, 0x02}, // fdiv.dr f c  
	{0xbd56, &op_fdiv,	  6,   2, 255, 0xff, 0x01, 0x00, 0x02}, // fdiv.dr g c  
	{0xbd57, &op_fdiv,	  7,   2, 255, 0xff, 0x01, 0x00, 0x02}, // fdiv.dr h c  
	{0xbd58, &op_fdiv,	  0,   3, 255, 0xff, 0x01, 0x00, 0x02}, // fdiv.dr a d  
	{0xbd59, &op_fdiv,	  1,   3, 255, 0xff, 0x01, 0x00, 0x02}, // fdiv.dr b d  
	{0xbd5a, &op_fdiv,	  2,   3, 255, 0xff, 0x01, 0x00, 0x02}, // fdiv.dr c d  
	{0xbd5b, &op_fdiv,	  3,   3, 255, 0xff, 0x01, 0x00, 0x02}, // fdiv.dr d d  
	{0xbd5c, &op_fdiv,	  4,   3, 255, 0xff, 0x01, 0x00, 0x02}, // fdiv.dr e d  
	{0xbd5d, &op_fdiv,	  5,   3, 255, 0xff, 0x01, 0x00, 0x02}, // fdiv.dr f d  
	{0xbd5e, &op_fdiv,	  6,   3, 255, 0xff, 0x01, 0x00, 0x02}, // fdiv.dr g d  
	{0xbd5f, &op_fdiv,	  7,   3, 255, 0xff, 0x01, 0x00, 0x02}, // fdiv.dr h d  
	{0xbd60, &op_fdiv,	  0,   4, 255, 0xff, 0x01, 0x00, 0x02}, // fdiv.dr a e  
	{0xbd61, &op_fdiv,	  1,   4, 255, 0xff, 0x01, 0x00, 0x02}, // fdiv.dr b e  
	{0xbd62, &op_fdiv,	  2,   4, 255, 0xff, 0x01, 0x00, 0x02}, // fdiv.dr c e  
	{0xbd63, &op_fdiv,	  3,   4, 255, 0xff, 0x01, 0x00, 0x02}, // fdiv.dr d e  
	{0xbd64, &op_fdiv,	  4,   4, 255, 0xff, 0x01, 0x00, 0x02}, // fdiv.dr e e  
	{0xbd65, &op_fdiv,	  5,   4, 255, 0xff, 0x01, 0x00, 0x02}, // fdiv.dr f e  
	{0xbd66, &op_fdiv,	  6,   4, 255, 0xff, 0x01, 0x00, 0x02}, // fdiv.dr g e  
	{0xbd67, &op_fdiv,	  7,   4, 255, 0xff, 0x01, 0x00, 0x02}, // fdiv.dr h e  
	{0xbd68, &op_fdiv,	  0,   5, 255, 0xff, 0x01, 0x00, 0x02}, // fdiv.dr a f  
	{0xbd69, &op_fdiv,	  1,   5, 255, 0xff, 0x01, 0x00, 0x02}, // fdiv.dr b f  
	{0xbd6a, &op_fdiv,	  2,   5, 255, 0xff, 0x01, 0x00, 0x02}, // fdiv.dr c f  
	{0xbd6b, &op_fdiv,	  3,   5, 255, 0xff, 0x01, 0x00, 0x02}, // fdiv.dr d f  
	{0xbd6c, &op_fdiv,	  4,   5, 255, 0xff, 0x01, 0x00, 0x02}, // fdiv.dr e f  
	{0xbd6d, &op_fdiv,	  5,   5, 255, 0xff, 0x01, 0x00, 0x02}, // fdiv.dr f f  
	{0xbd6e, &op_fdiv,	  6,   5, 255, 0xff, 0x01, 0x00, 0x02}, // fdiv.dr g f  
	{0xbd6f, &op_fdiv,	  7,   5, 255, 0xff, 0x01, 0x00, 0x02}, // fdiv.dr h f  
	{0xbd70, &op_fdiv,	  0,   6, 255, 0xff, 0x01, 0x00, 0x02}, // fdiv.dr a g  
	{0xbd71, &op_fdiv,	  1,   6, 255, 0xff, 0x01, 0x00, 0x02}, // fdiv.dr b g  
	{0xbd72, &op_fdiv,	  2,   6, 255, 0xff, 0x01, 0x00, 0x02}, // fdiv.dr c g  
	{0xbd73, &op_fdiv,	  3,   6, 255, 0xff, 0x01, 0x00, 0x02}, // fdiv.dr d g  
	{0xbd74, &op_fdiv,	  4,   6, 255, 0xff, 0x01, 0x00, 0x02}, // fdiv.dr e g  
	{0xbd75, &op_fdiv,	  5,   6, 255, 0xff, 0x01, 0x00, 0x02}, // fdiv.dr f g  
	{0xbd76, &op_fdiv,	  6,   6, 255, 0xff, 0x01, 0x00, 0x02}, // fdiv.dr g g  
	{0xbd77, &op_fdiv,	  7,   6, 255, 0xff, 0x01, 0x00, 0x02}, // fdiv.dr h g  
	{0xbd78, &op_fdiv,	  0,   7, 255, 0xff, 0x01, 0x00, 0x02}, // fdiv.dr a h  
	{0xbd79, &op_fdiv,	  1,   7, 255, 0xff, 0x01, 0x00, 0x02}, // fdiv.dr b h  
	{0xbd7a, &op_fdiv,	  2,   7, 255, 0xff, 0x01, 0x00, 0x02}, // fdiv.dr c h  
	{0xbd7b, &op_fdiv,	  3,   7, 255, 0xff, 0x01, 0x00, 0x02}, // fdiv.dr d h  
	{0xbd7c, &op_fdiv,	  4,   7, 255, 0xff, 0x01, 0x00, 0x02}, // fdiv.dr e h  
	{0xbd7d, &op_fdiv,	  5,   7, 255, 0xff, 0x01, 0x00, 0x02}, // fdiv.dr f h  
	{0xbd7e, &op_fdiv,	  6,   7, 255, 0xff, 0x01, 0x00, 0x02}, // fdiv.dr g h  
	{0xbd7f, &op_fdiv,	  7,   7, 255, 0xff, 0x01, 0x00, 0x02}, // fdiv.dr h h  
	{0xbd80, &op_fdiv,	  0,   0, 255, 0xff, 0x01, 0x00, 0x04}, // fdiv.r a a  
	{0xbd81, &op_fdiv,	  1,   0, 255, 0xff, 0x01, 0x00, 0x04}, // fdiv.r b a  
	{0xbd82, &op_fdiv,	  2,   0, 255, 0xff, 0x01, 0x00, 0x04}, // fdiv.r c a  
	{0xbd83, &op_fdiv,	  3,   0, 255, 0xff, 0x01, 0x00, 0x04}, // fdiv.r d a  
	{0xbd84, &op_fdiv,	  4,   0, 255, 0xff, 0x01, 0x00, 0x04}, // fdiv.r e a  
	{0xbd85, &op_fdiv,	  5,   0, 255, 0xff, 0x01, 0x00, 0x04}, // fdiv.r f a  
	{0xbd86, &op_fdiv,	  6,   0, 255, 0xff, 0x01, 0x00, 0x04}, // fdiv.r g a  
	{0xbd87, &op_fdiv,	  7,   0, 255, 0xff, 0x01, 0x00, 0x04}, // fdiv.r h a  
	{0xbd88, &op_fdiv,	  0,   1, 255, 0xff, 0x01, 0x00, 0x04}, // fdiv.r a b  
	{0xbd89, &op_fdiv,	  1,   1, 255, 0xff, 0x01, 0x00, 0x04}, // fdiv.r b b  
	{0xbd8a, &op_fdiv,	  2,   1, 255, 0xff, 0x01, 0x00, 0x04}, // fdiv.r c b  
	{0xbd8b, &op_fdiv,	  3,   1, 255, 0xff, 0x01, 0x00, 0x04}, // fdiv.r d b  
	{0xbd8c, &op_fdiv,	  4,   1, 255, 0xff, 0x01, 0x00, 0x04}, // fdiv.r e b  
	{0xbd8d, &op_fdiv,	  5,   1, 255, 0xff, 0x01, 0x00, 0x04}, // fdiv.r f b  
	{0xbd8e, &op_fdiv,	  6,   1, 255, 0xff, 0x01, 0x00, 0x04}, // fdiv.r g b  
	{0xbd8f, &op_fdiv,	  7,   1, 255, 0xff, 0x01, 0x00, 0x04}, // fdiv.r h b  
	{0xbd90, &op_fdiv,	  0,   2, 255, 0xff, 0x01, 0x00, 0x04}, // fdiv.r a c  
	{0xbd91, &op_fdiv,	  1,   2, 255, 0xff, 0x01, 0x00, 0x04}, // fdiv.r b c  
	{0xbd92, &op_fdiv,	  2,   2, 255, 0xff, 0x01, 0x00, 0x04}, // fdiv.r c c  
	{0xbd93, &op_fdiv,	  3,   2, 255, 0xff, 0x01, 0x00, 0x04}, // fdiv.r d c  
	{0xbd94, &op_fdiv,	  4,   2, 255, 0xff, 0x01, 0x00, 0x04}, // fdiv.r e c  
	{0xbd95, &op_fdiv,	  5,   2, 255, 0xff, 0x01, 0x00, 0x04}, // fdiv.r f c  
	{0xbd96, &op_fdiv,	  6,   2, 255, 0xff, 0x01, 0x00, 0x04}, // fdiv.r g c  
	{0xbd97, &op_fdiv,	  7,   2, 255, 0xff, 0x01, 0x00, 0x04}, // fdiv.r h c  
	{0xbd98, &op_fdiv,	  0,   3, 255, 0xff, 0x01, 0x00, 0x04}, // fdiv.r a d  
	{0xbd99, &op_fdiv,	  1,   3, 255, 0xff, 0x01, 0x00, 0x04}, // fdiv.r b d  
	{0xbd9a, &op_fdiv,	  2,   3, 255, 0xff, 0x01, 0x00, 0x04}, // fdiv.r c d  
	{0xbd9b, &op_fdiv,	  3,   3, 255, 0xff, 0x01, 0x00, 0x04}, // fdiv.r d d  
	{0xbd9c, &op_fdiv,	  4,   3, 255, 0xff, 0x01, 0x00, 0x04}, // fdiv.r e d  
	{0xbd9d, &op_fdiv,	  5,   3, 255, 0xff, 0x01, 0x00, 0x04}, // fdiv.r f d  
	{0xbd9e, &op_fdiv,	  6,   3, 255, 0xff, 0x01, 0x00, 0x04}, // fdiv.r g d  
	{0xbd9f, &op_fdiv,	  7,   3, 255, 0xff, 0x01, 0x00, 0x04}, // fdiv.r h d  
	{0xbda0, &op_fdiv,	  0,   4, 255, 0xff, 0x01, 0x00, 0x04}, // fdiv.r a e  
	{0xbda1, &op_fdiv,	  1,   4, 255, 0xff, 0x01, 0x00, 0x04}, // fdiv.r b e  
	{0xbda2, &op_fdiv,	  2,   4, 255, 0xff, 0x01, 0x00, 0x04}, // fdiv.r c e  
	{0xbda3, &op_fdiv,	  3,   4, 255, 0xff, 0x01, 0x00, 0x04}, // fdiv.r d e  
	{0xbda4, &op_fdiv,	  4,   4, 255, 0xff, 0x01, 0x00, 0x04}, // fdiv.r e e  
	{0xbda5, &op_fdiv,	  5,   4, 255, 0xff, 0x01, 0x00, 0x04}, // fdiv.r f e  
	{0xbda6, &op_fdiv,	  6,   4, 255, 0xff, 0x01, 0x00, 0x04}, // fdiv.r g e  
	{0xbda7, &op_fdiv,	  7,   4, 255, 0xff, 0x01, 0x00, 0x04}, // fdiv.r h e  
	{0xbda8, &op_fdiv,	  0,   5, 255, 0xff, 0x01, 0x00, 0x04}, // fdiv.r a f  
	{0xbda9, &op_fdiv,	  1,   5, 255, 0xff, 0x01, 0x00, 0x04}, // fdiv.r b f  
	{0xbdaa, &op_fdiv,	  2,   5, 255, 0xff, 0x01, 0x00, 0x04}, // fdiv.r c f  
	{0xbdab, &op_fdiv,	  3,   5, 255, 0xff, 0x01, 0x00, 0x04}, // fdiv.r d f  
	{0xbdac, &op_fdiv,	  4,   5, 255, 0xff, 0x01, 0x00, 0x04}, // fdiv.r e f  
	{0xbdad, &op_fdiv,	  5,   5, 255, 0xff, 0x01, 0x00, 0x04}, // fdiv.r f f  
	{0xbdae, &op_fdiv,	  6,   5, 255, 0xff, 0x01, 0x00, 0x04}, // fdiv.r g f  
	{0xbdaf, &op_fdiv,	  7,   5, 255, 0xff, 0x01, 0x00, 0x04}, // fdiv.r h f  
	{0xbdb0, &op_fdiv,	  0,   6, 255, 0xff, 0x01, 0x00, 0x04}, // fdiv.r a g  
	{0xbdb1, &op_fdiv,	  1,   6, 255, 0xff, 0x01, 0x00, 0x04}, // fdiv.r b g  
	{0xbdb2, &op_fdiv,	  2,   6, 255, 0xff, 0x01, 0x00, 0x04}, // fdiv.r c g  
	{0xbdb3, &op_fdiv,	  3,   6, 255, 0xff, 0x01, 0x00, 0x04}, // fdiv.r d g  
	{0xbdb4, &op_fdiv,	  4,   6, 255, 0xff, 0x01, 0x00, 0x04}, // fdiv.r e g  
	{0xbdb5, &op_fdiv,	  5,   6, 255, 0xff, 0x01, 0x00, 0x04}, // fdiv.r f g  
	{0xbdb6, &op_fdiv,	  6,   6, 255, 0xff, 0x01, 0x00, 0x04}, // fdiv.r g g  
	{0xbdb7, &op_fdiv,	  7,   6, 255, 0xff, 0x01, 0x00, 0x04}, // fdiv.r h g  
	{0xbdb8, &op_fdiv,	  0,   7, 255, 0xff, 0x01, 0x00, 0x04}, // fdiv.r a h  
	{0xbdb9, &op_fdiv,	  1,   7, 255, 0xff, 0x01, 0x00, 0x04}, // fdiv.r b h  
	{0xbdba, &op_fdiv,	  2,   7, 255, 0xff, 0x01, 0x00, 0x04}, // fdiv.r c h  
	{0xbdbb, &op_fdiv,	  3,   7, 255, 0xff, 0x01, 0x00, 0x04}, // fdiv.r d h  
	{0xbdbc, &op_fdiv,	  4,   7, 255, 0xff, 0x01, 0x00, 0x04}, // fdiv.r e h  
	{0xbdbd, &op_fdiv,	  5,   7, 255, 0xff, 0x01, 0x00, 0x04}, // fdiv.r f h  
	{0xbdbe, &op_fdiv,	  6,   7, 255, 0xff, 0x01, 0x00, 0x04}, // fdiv.r g h  
	{0xbdbf, &op_fdiv,	  7,   7, 255, 0xff, 0x01, 0x00, 0x04}, // fdiv.r h h  
	{0xbcc8, &op_fdiv,	  0,   8, 255, 0xff, 0x00, 0x01, 0x01}, // fdiv.wi a <literal>  
	{0xbcc9, &op_fdiv,	  1,   8, 255, 0xff, 0x00, 0x01, 0x01}, // fdiv.wi b <literal>  
	{0xbcca, &op_fdiv,	  2,   8, 255, 0xff, 0x00, 0x01, 0x01}, // fdiv.wi c <literal>  
	{0xbccb, &op_fdiv,	  3,   8, 255, 0xff, 0x00, 0x01, 0x01}, // fdiv.wi d <literal>  
	{0xbccc, &op_fdiv,	  4,   8, 255, 0xff, 0x00, 0x01, 0x01}, // fdiv.wi e <literal>  
	{0xbccd, &op_fdiv,	  5,   8, 255, 0xff, 0x00, 0x01, 0x01}, // fdiv.wi f <literal>  
	{0xbcce, &op_fdiv,	  6,   8, 255, 0xff, 0x00, 0x01, 0x01}, // fdiv.wi g <literal>  
	{0xbccf, &op_fdiv,	  7,   8, 255, 0xff, 0x00, 0x01, 0x01}, // fdiv.wi h <literal>  
	{0xbcd0, &op_fdiv,	  0,   8, 255, 0xff, 0x00, 0x02, 0x02}, // fdiv.di a <literal>  
	{0xbcd1, &op_fdiv,	  1,   8, 255, 0xff, 0x00, 0x02, 0x02}, // fdiv.di b <literal>  
	{0xbcd2, &op_fdiv,	  2,   8, 255, 0xff, 0x00, 0x02, 0x02}, // fdiv.di c <literal>  
	{0xbcd3, &op_fdiv,	  3,   8, 255, 0xff, 0x00, 0x02, 0x02}, // fdiv.di d <literal>  
	{0xbcd4, &op_fdiv,	  4,   8, 255, 0xff, 0x00, 0x02, 0x02}, // fdiv.di e <literal>  
	{0xbcd5, &op_fdiv,	  5,   8, 255, 0xff, 0x00, 0x02, 0x02}, // fdiv.di f <literal>  
	{0xbcd6, &op_fdiv,	  6,   8, 255, 0xff, 0x00, 0x02, 0x02}, // fdiv.di g <literal>  
	{0xbcd7, &op_fdiv,	  7,   8, 255, 0xff, 0x00, 0x02, 0x02}, // fdiv.di h <literal>  
	{0xbce0, &op_fdiv,	  0,   8, 255, 0xff, 0x00, 0x04, 0x04}, // fdiv.i a <literal>  
	{0xbce1, &op_fdiv,	  1,   8, 255, 0xff, 0x00, 0x04, 0x04}, // fdiv.i b <literal>  
	{0xbce2, &op_fdiv,	  2,   8, 255, 0xff, 0x00, 0x04, 0x04}, // fdiv.i c <literal>  
	{0xbce3, &op_fdiv,	  3,   8, 255, 0xff, 0x00, 0x04, 0x04}, // fdiv.i d <literal>  
	{0xbce4, &op_fdiv,	  4,   8, 255, 0xff, 0x00, 0x04, 0x04}, // fdiv.i e <literal>  
	{0xbce5, &op_fdiv,	  5,   8, 255, 0xff, 0x00, 0x04, 0x04}, // fdiv.i f <literal>  
	{0xbce6, &op_fdiv,	  6,   8, 255, 0xff, 0x00, 0x04, 0x04}, // fdiv.i g <literal>  
	{0xbce7, &op_fdiv,	  7,   8, 255, 0xff, 0x00, 0x04, 0x04}, // fdiv.i h <literal>  
	{0xbdc8, &op_fdiv,	  0,   8, 255, 0xff, 0x01, 0x04, 0x01}, // fdiv.wri a <literal>  
	{0xbdc9, &op_fdiv,	  1,   8, 255, 0xff, 0x01, 0x04, 0x01}, // fdiv.wri b <literal>  
	{0xbdca, &op_fdiv,	  2,   8, 255, 0xff, 0x01, 0x04, 0x01}, // fdiv.wri c <literal>  
	{0xbdcb, &op_fdiv,	  3,   8, 255, 0xff, 0x01, 0x04, 0x01}, // fdiv.wri d <literal>  
	{0xbdcc, &op_fdiv,	  4,   8, 255, 0xff, 0x01, 0x04, 0x01}, // fdiv.wri e <literal>  
	{0xbdcd, &op_fdiv,	  5,   8, 255, 0xff, 0x01, 0x04, 0x01}, // fdiv.wri f <literal>  
	{0xbdce, &op_fdiv,	  6,   8, 255, 0xff, 0x01, 0x04, 0x01}, // fdiv.wri g <literal>  
	{0xbdcf, &op_fdiv,	  7,   8, 255, 0xff, 0x01, 0x04, 0x01}, // fdiv.wri h <literal>  
	{0xbdd0, &op_fdiv,	  0,   8, 255, 0xff, 0x01, 0x04, 0x02}, // fdiv.dri a <literal>  
	{0xbdd1, &op_fdiv,	  1,   8, 255, 0xff, 0x01, 0x04, 0x02}, // fdiv.dri b <literal>  
	{0xbdd2, &op_fdiv,	  2,   8, 255, 0xff, 0x01, 0x04, 0x02}, // fdiv.dri c <literal>  
	{0xbdd3, &op_fdiv,	  3,   8, 255, 0xff, 0x01, 0x04, 0x02}, // fdiv.dri d <literal>  
	{0xbdd4, &op_fdiv,	  4,   8, 255, 0xff, 0x01, 0x04, 0x02}, // fdiv.dri e <literal>  
	{0xbdd5, &op_fdiv,	  5,   8, 255, 0xff, 0x01, 0x04, 0x02}, // fdiv.dri f <literal>  
	{0xbdd6, &op_fdiv,	  6,   8, 255, 0xff, 0x01, 0x04, 0x02}, // fdiv.dri g <literal>  
	{0xbdd7, &op_fdiv,	  7,   8, 255, 0xff, 0x01, 0x04, 0x02}, // fdiv.dri h <literal>  
	{0xbde0, &op_fdiv,	  0,   8, 255, 0xff, 0x01, 0x04, 0x04}, // fdiv.ri a <literal>  
	{0xbde1, &op_fdiv,	  1,   8, 255, 0xff, 0x01, 0x04, 0x04}, // fdiv.ri b <literal>  
	{0xbde2, &op_fdiv,	  2,   8, 255, 0xff, 0x01, 0x04, 0x04}, // fdiv.ri c <literal>  
	{0xbde3, &op_fdiv,	  3,   8, 255, 0xff, 0x01, 0x04, 0x04}, // fdiv.ri d <literal>  
	{0xbde4, &op_fdiv,	  4,   8, 255, 0xff, 0x01, 0x04, 0x04}, // fdiv.ri e <literal>  
	{0xbde5, &op_fdiv,	  5,   8, 255, 0xff, 0x01, 0x04, 0x04}, // fdiv.ri f <literal>  
	{0xbde6, &op_fdiv,	  6,   8, 255, 0xff, 0x01, 0x04, 0x04}, // fdiv.ri g <literal>  
	{0xbde7, &op_fdiv,	  7,   8, 255, 0xff, 0x01, 0x04, 0x04}, // fdiv.ri h <literal>  
	{0xbe00, &op_fcmp,	  0,   0, 255, 0xff, 0x00, 0x00, 0x01}, // fcmp.w a a  
	{0xbe01, &op_fcmp,	  1,   0, 255, 0xff, 0x00, 0x00, 0x01}, // fcmp.w b a  
	{0xbe02, &op_fcmp,	  2,   0, 255, 0xff, 0x00, 0x00, 0x01}, // fcmp.w c a  
	{0xbe03, &op_fcmp,	  3,   0, 255, 0xff, 0x00, 0x00, 0x01}, // fcmp.w d a  
	{0xbe04, &op_fcmp,	  4,   0, 255, 0xff, 0x00, 0x00, 0x01}, // fcmp.w e a  
	{0xbe05, &op_fcmp,	  5,   0, 255, 0xff, 0x00, 0x00, 0x01}, // fcmp.w f a  
	{0xbe06, &op_fcmp,	  6,   0, 255, 0xff, 0x00, 0x00, 0x01}, // fcmp.w g a  
	{0xbe07, &op_fcmp,	  7,   0, 255, 0xff, 0x00, 0x00, 0x01}, // fcmp.w h a  
	{0xbe08, &op_fcmp,	  0,   1, 255, 0xff, 0x00, 0x00, 0x01}, // fcmp.w a b  
	{0xbe09, &op_fcmp,	  1,   1, 255, 0xff, 0x00, 0x00, 0x01}, // fcmp.w b b  
	{0xbe0a, &op_fcmp,	  2,   1, 255, 0xff, 0x00, 0x00, 0x01}, // fcmp.w c b  
	{0xbe0b, &op_fcmp,	  3,   1, 255, 0xff, 0x00, 0x00, 0x01}, // fcmp.w d b  
	{0xbe0c, &op_fcmp,	  4,   1, 255, 0xff, 0x00, 0x00, 0x01}, // fcmp.w e b  
	{0xbe0d, &op_fcmp,	  5,   1, 255, 0xff, 0x00, 0x00, 0x01}, // fcmp.w f b  
	{0xbe0e, &op_fcmp,	  6,   1, 255, 0xff, 0x00, 0x00, 0x01}, // fcmp.w g b  
	{0xbe0f, &op_fcmp,	  7,   1, 255, 0xff, 0x00, 0x00, 0x01}, // fcmp.w h b  
	{0xbe10, &op_fcmp,	  0,   2, 255, 0xff, 0x00, 0x00, 0x01}, // fcmp.w a c  
	{0xbe11, &op_fcmp,	  1,   2, 255, 0xff, 0x00, 0x00, 0x01}, // fcmp.w b c  
	{0xbe12, &op_fcmp,	  2,   2, 255, 0xff, 0x00, 0x00, 0x01}, // fcmp.w c c  
	{0xbe13, &op_fcmp,	  3,   2, 255, 0xff, 0x00, 0x00, 0x01}, // fcmp.w d c  
	{0xbe14, &op_fcmp,	  4,   2, 255, 0xff, 0x00, 0x00, 0x01}, // fcmp.w e c  
	{0xbe15, &op_fcmp,	  5,   2, 255, 0xff, 0x00, 0x00, 0x01}, // fcmp.w f c  
	{0xbe16, &op_fcmp,	  6,   2, 255, 0xff, 0x00, 0x00, 0x01}, // fcmp.w g c  
	{0xbe17, &op_fcmp,	  7,   2, 255, 0xff, 0x00, 0x00, 0x01}, // fcmp.w h c  
	{0xbe18, &op_fcmp,	  0,   3, 255, 0xff, 0x00, 0x00, 0x01}, // fcmp.w a d  
	{0xbe19, &op_fcmp,	  1,   3, 255, 0xff, 0x00, 0x00, 0x01}, // fcmp.w b d  
	{0xbe1a, &op_fcmp,	  2,   3, 255, 0xff, 0x00, 0x00, 0x01}, // fcmp.w c d  
	{0xbe1b, &op_fcmp,	  3,   3, 255, 0xff, 0x00, 0x00, 0x01}, // fcmp.w d d  
	{0xbe1c, &op_fcmp,	  4,   3, 255, 0xff, 0x00, 0x00, 0x01}, // fcmp.w e d  
	{0xbe1d, &op_fcmp,	  5,   3, 255, 0xff, 0x00, 0x00, 0x01}, // fcmp.w f d  
	{0xbe1e, &op_fcmp,	  6,   3, 255, 0xff, 0x00, 0x00, 0x01}, // fcmp.w g d  
	{0xbe1f, &op_fcmp,	  7,   3, 255, 0xff, 0x00, 0x00, 0x01}, // fcmp.w h d  
	{0xbe20, &op_fcmp,	  0,   4, 255, 0xff, 0x00, 0x00, 0x01}, // fcmp.w a e  
	{0xbe21, &op_fcmp,	  1,   4, 255, 0xff, 0x00, 0x00, 0x01}, // fcmp.w b e  
	{0xbe22, &op_fcmp,	  2,   4, 255, 0xff, 0x00, 0x00, 0x01}, // fcmp.w c e  
	{0xbe23, &op_fcmp,	  3,   4, 255, 0xff, 0x00, 0x00, 0x01}, // fcmp.w d e  
	{0xbe24, &op_fcmp,	  4,   4, 255, 0xff, 0x00, 0x00, 0x01}, // fcmp.w e e  
	{0xbe25, &op_fcmp,	  5,   4, 255, 0xff, 0x00, 0x00, 0x01}, // fcmp.w f e  
	{0xbe26, &op_fcmp,	  6,   4, 255, 0xff, 0x00, 0x00, 0x01}, // fcmp.w g e  
	{0xbe27, &op_fcmp,	  7,   4, 255, 0xff, 0x00, 0x00, 0x01}, // fcmp.w h e  
	{0xbe28, &op_fcmp,	  0,   5, 255, 0xff, 0x00, 0x00, 0x01}, // fcmp.w a f  
	{0xbe29, &op_fcmp,	  1,   5, 255, 0xff, 0x00, 0x00, 0x01}, // fcmp.w b f  
	{0xbe2a, &op_fcmp,	  2,   5, 255, 0xff, 0x00, 0x00, 0x01}, // fcmp.w c f  
	{0xbe2b, &op_fcmp,	  3,   5, 255, 0xff, 0x00, 0x00, 0x01}, // fcmp.w d f  
	{0xbe2c, &op_fcmp,	  4,   5, 255, 0xff, 0x00, 0x00, 0x01}, // fcmp.w e f  
	{0xbe2d, &op_fcmp,	  5,   5, 255, 0xff, 0x00, 0x00, 0x01}, // fcmp.w f f  
	{0xbe2e, &op_fcmp,	  6,   5, 255, 0xff, 0x00, 0x00, 0x01}, // fcmp.w g f  
	{0xbe2f, &op_fcmp,	  7,   5, 255, 0xff, 0x00, 0x00, 0x01}, // fcmp.w h f  
	{0xbe30, &op_fcmp,	  0,   6, 255, 0xff, 0x00, 0x00, 0x01}, // fcmp.w a g  
	{0xbe31, &op_fcmp,	  1,   6, 255, 0xff, 0x00, 0x00, 0x01}, // fcmp.w b g  
	{0xbe32, &op_fcmp,	  2,   6, 255, 0xff, 0x00, 0x00, 0x01}, // fcmp.w c g  
	{0xbe33, &op_fcmp,	  3,   6, 255, 0xff, 0x00, 0x00, 0x01}, // fcmp.w d g  
	{0xbe34, &op_fcmp,	  4,   6, 255, 0xff, 0x00, 0x00, 0x01}, // fcmp.w e g  
	{0xbe35, &op_fcmp,	  5,   6, 255, 0xff, 0x00, 0x00, 0x01}, // fcmp.w f g  
	{0xbe36, &op_fcmp,	  6,   6, 255, 0xff, 0x00, 0x00, 0x01}, // fcmp.w g g  
	{0xbe37, &op_fcmp,	  7,   6, 255, 0xff, 0x00, 0x00, 0x01}, // fcmp.w h g  
	{0xbe38, &op_fcmp,	  0,   7, 255, 0xff, 0x00, 0x00, 0x01}, // fcmp.w a h  
	{0xbe39, &op_fcmp,	  1,   7, 255, 0xff, 0x00, 0x00, 0x01}, // fcmp.w b h  
	{0xbe3a, &op_fcmp,	  2,   7, 255, 0xff, 0x00, 0x00, 0x01}, // fcmp.w c h  
	{0xbe3b, &op_fcmp,	  3,   7, 255, 0xff, 0x00, 0x00, 0x01}, // fcmp.w d h  
	{0xbe3c, &op_fcmp,	  4,   7, 255, 0xff, 0x00, 0x00, 0x01}, // fcmp.w e h  
	{0xbe3d, &op_fcmp,	  5,   7, 255, 0xff, 0x00, 0x00, 0x01}, // fcmp.w f h  
	{0xbe3e, &op_fcmp,	  6,   7, 255, 0xff, 0x00, 0x00, 0x01}, // fcmp.w g h  
	{0xbe3f, &op_fcmp,	  7,   7, 255, 0xff, 0x00, 0x00, 0x01}, // fcmp.w h h  
	{0xbe40, &op_fcmp,	  0,   0, 255, 0xff, 0x00, 0x00, 0x02}, // fcmp.d a a  
	{0xbe41, &op_fcmp,	  1,   0, 255, 0xff, 0x00, 0x00, 0x02}, // fcmp.d b a  
	{0xbe42, &op_fcmp,	  2,   0, 255, 0xff, 0x00, 0x00, 0x02}, // fcmp.d c a  
	{0xbe43, &op_fcmp,	  3,   0, 255, 0xff, 0x00, 0x00, 0x02}, // fcmp.d d a  
	{0xbe44, &op_fcmp,	  4,   0, 255, 0xff, 0x00, 0x00, 0x02}, // fcmp.d e a  
	{0xbe45, &op_fcmp,	  5,   0, 255, 0xff, 0x00, 0x00, 0x02}, // fcmp.d f a  
	{0xbe46, &op_fcmp,	  6,   0, 255, 0xff, 0x00, 0x00, 0x02}, // fcmp.d g a  
	{0xbe47, &op_fcmp,	  7,   0, 255, 0xff, 0x00, 0x00, 0x02}, // fcmp.d h a  
	{0xbe48, &op_fcmp,	  0,   1, 255, 0xff, 0x00, 0x00, 0x02}, // fcmp.d a b  
	{0xbe49, &op_fcmp,	  1,   1, 255, 0xff, 0x00, 0x00, 0x02}, // fcmp.d b b  
	{0xbe4a, &op_fcmp,	  2,   1, 255, 0xff, 0x00, 0x00, 0x02}, // fcmp.d c b  
	{0xbe4b, &op_fcmp,	  3,   1, 255, 0xff, 0x00, 0x00, 0x02}, // fcmp.d d b  
	{0xbe4c, &op_fcmp,	  4,   1, 255, 0xff, 0x00, 0x00, 0x02}, // fcmp.d e b  
	{0xbe4d, &op_fcmp,	  5,   1, 255, 0xff, 0x00, 0x00, 0x02}, // fcmp.d f b  
	{0xbe4e, &op_fcmp,	  6,   1, 255, 0xff, 0x00, 0x00, 0x02}, // fcmp.d g b  
	{0xbe4f, &op_fcmp,	  7,   1, 255, 0xff, 0x00, 0x00, 0x02}, // fcmp.d h b  
	{0xbe50, &op_fcmp,	  0,   2, 255, 0xff, 0x00, 0x00, 0x02}, // fcmp.d a c  
	{0xbe51, &op_fcmp,	  1,   2, 255, 0xff, 0x00, 0x00, 0x02}, // fcmp.d b c  
	{0xbe52, &op_fcmp,	  2,   2, 255, 0xff, 0x00, 0x00, 0x02}, // fcmp.d c c  
	{0xbe53, &op_fcmp,	  3,   2, 255, 0xff, 0x00, 0x00, 0x02}, // fcmp.d d c  
	{0xbe54, &op_fcmp,	  4,   2, 255, 0xff, 0x00, 0x00, 0x02}, // fcmp.d e c  
	{0xbe55, &op_fcmp,	  5,   2, 255, 0xff, 0x00, 0x00, 0x02}, // fcmp.d f c  
	{0xbe56, &op_fcmp,	  6,   2, 255, 0xff, 0x00, 0x00, 0x02}, // fcmp.d g c  
	{0xbe57, &op_fcmp,	  7,   2, 255, 0xff, 0x00, 0x00, 0x02}, // fcmp.d h c  
	{0xbe58, &op_fcmp,	  0,   3, 255, 0xff, 0x00, 0x00, 0x02}, // fcmp.d a d  
	{0xbe59, &op_fcmp,	  1,   3, 255, 0xff, 0x00, 0x00, 0x02}, // fcmp.d b d  
	{0xbe5a, &op_fcmp,	  2,   3, 255, 0xff, 0x00, 0x00, 0x02}, // fcmp.d c d  
	{0xbe5b, &op_fcmp,	  3,   3, 255, 0xff, 0x00, 0x00, 0x02}, // fcmp.d d d  
	{0xbe5c, &op_fcmp,	  4,   3, 255, 0xff, 0x00, 0x00, 0x02}, // fcmp.d e d  
	{0xbe5d, &op_fcmp,	  5,   3, 255, 0xff, 0x00, 0x00, 0x02}, // fcmp.d f d  
	{0xbe5e, &op_fcmp,	  6,   3, 255, 0xff, 0x00, 0x00, 0x02}, // fcmp.d g d  
	{0xbe5f, &op_fcmp,	  7,   3, 255, 0xff, 0x00, 0x00, 0x02}, // fcmp.d h d  
	{0xbe60, &op_fcmp,	  0,   4, 255, 0xff, 0x00, 0x00, 0x02}, // fcmp.d a e  
	{0xbe61, &op_fcmp,	  1,   4, 255, 0xff, 0x00, 0x00, 0x02}, // fcmp.d b e  
	{0xbe62, &op_fcmp,	  2,   4, 255, 0xff, 0x00, 0x00, 0x02}, // fcmp.d c e  
	{0xbe63, &op_fcmp,	  3,   4, 255, 0xff, 0x00, 0x00, 0x02}, // fcmp.d d e  
	{0xbe64, &op_fcmp,	  4,   4, 255, 0xff, 0x00, 0x00, 0x02}, // fcmp.d e e  
	{0xbe65, &op_fcmp,	  5,   4, 255, 0xff, 0x00, 0x00, 0x02}, // fcmp.d f e  
	{0xbe66, &op_fcmp,	  6,   4, 255, 0xff, 0x00, 0x00, 0x02}, // fcmp.d g e  
	{0xbe67, &op_fcmp,	  7,   4, 255, 0xff, 0x00, 0x00, 0x02}, // fcmp.d h e  
	{0xbe68, &op_fcmp,	  0,   5, 255, 0xff, 0x00, 0x00, 0x02}, // fcmp.d a f  
	{0xbe69, &op_fcmp,	  1,   5, 255, 0xff, 0x00, 0x00, 0x02}, // fcmp.d b f  
	{0xbe6a, &op_fcmp,	  2,   5, 255, 0xff, 0x00, 0x00, 0x02}, // fcmp.d c f  
	{0xbe6b, &op_fcmp,	  3,   5, 255, 0xff, 0x00, 0x00, 0x02}, // fcmp.d d f  
	{0xbe6c, &op_fcmp,	  4,   5, 255, 0xff, 0x00, 0x00, 0x02}, // fcmp.d e f  
	{0xbe6d, &op_fcmp,	  5,   5, 255, 0xff, 0x00, 0x00, 0x02}, // fcmp.d f f  
	{0xbe6e, &op_fcmp,	  6,   5, 255, 0xff, 0x00, 0x00, 0x02}, // fcmp.d g f  
	{0xbe6f, &op_fcmp,	  7,   5, 255, 0xff, 0x00, 0x00, 0x02}, // fcmp.d h f  
	{0xbe70, &op_fcmp,	  0,   6, 255, 0xff, 0x00, 0x00, 0x02}, // fcmp.d a g  
	{0xbe71, &op_fcmp,	  1,   6, 255, 0xff, 0x00, 0x00, 0x02}, // fcmp.d b g  
	{0xbe72, &op_fcmp,	  2,   6, 255, 0xff, 0x00, 0x00, 0x02}, // fcmp.d c g  
	{0xbe73, &op_fcmp,	  3,   6, 255, 0xff, 0x00, 0x00, 0x02}, // fcmp.d d g  
	{0xbe74, &op_fcmp,	  4,   6, 255, 0xff, 0x00, 0x00, 0x02}, // fcmp.d e g  
	{0xbe75, &op_fcmp,	  5,   6, 255, 0xff, 0x00, 0x00, 0x02}, // fcmp.d f g  
	{0xbe76, &op_fcmp,	  6,   6, 255, 0xff, 0x00, 0x00, 0x02}, // fcmp.d g g  
	{0xbe77, &op_fcmp,	  7,   6, 255, 0xff, 0x00, 0x00, 0x02}, // fcmp.d h g  
	{0xbe78, &op_fcmp,	  0,   7, 255, 0xff, 0x00, 0x00, 0x02}, // fcmp.d a h  
	{0xbe79, &op_fcmp,	  1,   7, 255, 0xff, 0x00, 0x00, 0x02}, // fcmp.d b h  
	{0xbe7a, &op_fcmp,	  2,   7, 255, 0xff, 0x00, 0x00, 0x02}, // fcmp.d c h  
	{0xbe7b, &op_fcmp,	  3,   7, 255, 0xff, 0x00, 0x00, 0x02}, // fcmp.d d h  
	{0xbe7c, &op_fcmp,	  4,   7, 255, 0xff, 0x00, 0x00, 0x02}, // fcmp.d e h  
	{0xbe7d, &op_fcmp,	  5,   7, 255, 0xff, 0x00, 0x00, 0x02}, // fcmp.d f h  
	{0xbe7e, &op_fcmp,	  6,   7, 255, 0xff, 0x00, 0x00, 0x02}, // fcmp.d g h  
	{0xbe7f, &op_fcmp,	  7,   7, 255, 0xff, 0x00, 0x00, 0x02}, // fcmp.d h h  
	{0xbe80, &op_fcmp,	  0,   0, 255, 0xff, 0x00, 0x00, 0x04}, // fcmp a a  
	{0xbe81, &op_fcmp,	  1,   0, 255, 0xff, 0x00, 0x00, 0x04}, // fcmp b a  
	{0xbe82, &op_fcmp,	  2,   0, 255, 0xff, 0x00, 0x00, 0x04}, // fcmp c a  
	{0xbe83, &op_fcmp,	  3,   0, 255, 0xff, 0x00, 0x00, 0x04}, // fcmp d a  
	{0xbe84, &op_fcmp,	  4,   0, 255, 0xff, 0x00, 0x00, 0x04}, // fcmp e a  
	{0xbe85, &op_fcmp,	  5,   0, 255, 0xff, 0x00, 0x00, 0x04}, // fcmp f a  
	{0xbe86, &op_fcmp,	  6,   0, 255, 0xff, 0x00, 0x00, 0x04}, // fcmp g a  
	{0xbe87, &op_fcmp,	  7,   0, 255, 0xff, 0x00, 0x00, 0x04}, // fcmp h a  
	{0xbe88, &op_fcmp,	  0,   1, 255, 0xff, 0x00, 0x00, 0x04}, // fcmp a b  
	{0xbe89, &op_fcmp,	  1,   1, 255, 0xff, 0x00, 0x00, 0x04}, // fcmp b b  
	{0xbe8a, &op_fcmp,	  2,   1, 255, 0xff, 0x00, 0x00, 0x04}, // fcmp c b  
	{0xbe8b, &op_fcmp,	  3,   1, 255, 0xff, 0x00, 0x00, 0x04}, // fcmp d b  
	{0xbe8c, &op_fcmp,	  4,   1, 255, 0xff, 0x00, 0x00, 0x04}, // fcmp e b  
	{0xbe8d, &op_fcmp,	  5,   1, 255, 0xff, 0x00, 0x00, 0x04}, // fcmp f b  
	{0xbe8e, &op_fcmp,	  6,   1, 255, 0xff, 0x00, 0x00, 0x04}, // fcmp g b  
	{0xbe8f, &op_fcmp,	  7,   1, 255, 0xff, 0x00, 0x00, 0x04}, // fcmp h b  
	{0xbe90, &op_fcmp,	  0,   2, 255, 0xff, 0x00, 0x00, 0x04}, // fcmp a c  
	{0xbe91, &op_fcmp,	  1,   2, 255, 0xff, 0x00, 0x00, 0x04}, // fcmp b c  
	{0xbe92, &op_fcmp,	  2,   2, 255, 0xff, 0x00, 0x00, 0x04}, // fcmp c c  
	{0xbe93, &op_fcmp,	  3,   2, 255, 0xff, 0x00, 0x00, 0x04}, // fcmp d c  
	{0xbe94, &op_fcmp,	  4,   2, 255, 0xff, 0x00, 0x00, 0x04}, // fcmp e c  
	{0xbe95, &op_fcmp,	  5,   2, 255, 0xff, 0x00, 0x00, 0x04}, // fcmp f c  
	{0xbe96, &op_fcmp,	  6,   2, 255, 0xff, 0x00, 0x00, 0x04}, // fcmp g c  
	{0xbe97, &op_fcmp,	  7,   2, 255, 0xff, 0x00, 0x00, 0x04}, // fcmp h c  
	{0xbe98, &op_fcmp,	  0,   3, 255, 0xff, 0x00, 0x00, 0x04}, // fcmp a d  
	{0xbe99, &op_fcmp,	  1,   3, 255, 0xff, 0x00, 0x00, 0x04}, // fcmp b d  
	{0xbe9a, &op_fcmp,	  2,   3, 255, 0xff, 0x00, 0x00, 0x04}, // fcmp c d  
	{0xbe9b, &op_fcmp,	  3,   3, 255, 0xff, 0x00, 0x00, 0x04}, // fcmp d d  
	{0xbe9c, &op_fcmp,	  4,   3, 255, 0xff, 0x00, 0x00, 0x04}, // fcmp e d  
	{0xbe9d, &op_fcmp,	  5,   3, 255, 0xff, 0x00, 0x00, 0x04}, // fcmp f d  
	{0xbe9e, &op_fcmp,	  6,   3, 255, 0xff, 0x00, 0x00, 0x04}, // fcmp g d  
	{0xbe9f, &op_fcmp,	  7,   3, 255, 0xff, 0x00, 0x00, 0x04}, // fcmp h d  
	{0xbea0, &op_fcmp,	  0,   4, 255, 0xff, 0x00, 0x00, 0x04}, // fcmp a e  
	{0xbea1, &op_fcmp,	  1,   4, 255, 0xff, 0x00, 0x00, 0x04}, // fcmp b e  
	{0xbea2, &op_fcmp,	  2,   4, 255, 0xff, 0x00, 0x00, 0x04}, // fcmp c e  
	{0xbea3, &op_fcmp,	  3,   4, 255, 0xff, 0x00, 0x00, 0x04}, // fcmp d e  
	{0xbea4, &op_fcmp,	  4,   4, 255, 0xff, 0x00, 0x00, 0x04}, // fcmp e e  
	{0xbea5, &op_fcmp,	  5,   4, 255, 0xff, 0x00, 0x00, 0x04}, // fcmp f e  
	{0xbea6, &op_fcmp,	  6,   4, 255, 0xff, 0x00, 0x00, 0x04}, // fcmp g e  
	{0xbea7, &op_fcmp,	  7,   4, 255, 0xff, 0x00, 0x00, 0x04}, // fcmp h e  
	{0xbea8, &op_fcmp,	  0,   5, 255, 0xff, 0x00, 0x00, 0x04}, // fcmp a f  
	{0xbea9, &op_fcmp,	  1,   5, 255, 0xff, 0x00, 0x00, 0x04}, // fcmp b f  
	{0xbeaa, &op_fcmp,	  2,   5, 255, 0xff, 0x00, 0x00, 0x04}, // fcmp c f  
	{0xbeab, &op_fcmp,	  3,   5, 255, 0xff, 0x00, 0x00, 0x04}, // fcmp d f  
	{0xbeac, &op_fcmp,	  4,   5, 255, 0xff, 0x00, 0x00, 0x04}, // fcmp e f  
	{0xbead, &op_fcmp,	  5,   5, 255, 0xff, 0x00, 0x00, 0x04}, // fcmp f f  
	{0xbeae, &op_fcmp,	  6,   5, 255, 0xff, 0x00, 0x00, 0x04}, // fcmp g f  
	{0xbeaf, &op_fcmp,	  7,   5, 255, 0xff, 0x00, 0x00, 0x04}, // fcmp h f  
	{0xbeb0, &op_fcmp,	  0,   6, 255, 0xff, 0x00, 0x00, 0x04}, // fcmp a g  
	{0xbeb1, &op_fcmp,	  1,   6, 255, 0xff, 0x00, 0x00, 0x04}, // fcmp b g  
	{0xbeb2, &op_fcmp,	  2,   6, 255, 0xff, 0x00, 0x00, 0x04}, // fcmp c g  
	{0xbeb3, &op_fcmp,	  3,   6, 255, 0xff, 0x00, 0x00, 0x04}, // fcmp d g  
	{0xbeb4, &op_fcmp,	  4,   6, 255, 0xff, 0x00, 0x00, 0x04}, // fcmp e g  
	{0xbeb5, &op_fcmp,	  5,   6, 255, 0xff, 0x00, 0x00, 0x04}, // fcmp f g  
	{0xbeb6, &op_fcmp,	  6,   6, 255, 0xff, 0x00, 0x00, 0x04}, // fcmp g g  
	{0xbeb7, &op_fcmp,	  7,   6, 255, 0xff, 0x00, 0x00, 0x04}, // fcmp h g  
	{0xbeb8, &op_fcmp,	  0,   7, 255, 0xff, 0x00, 0x00, 0x04}, // fcmp a h  
	{0xbeb9, &op_fcmp,	  1,   7, 255, 0xff, 0x00, 0x00, 0x04}, // fcmp b h  
	{0xbeba, &op_fcmp,	  2,   7, 255, 0xff, 0x00, 0x00, 0x04}, // fcmp c h  
	{0xbebb, &op_fcmp,	  3,   7, 255, 0xff, 0x00, 0x00, 0x04}, // fcmp d h  
	{0xbebc, &op_fcmp,	  4,   7, 255, 0xff, 0x00, 0x00, 0x04}, // fcmp e h  
	{0xbebd, &op_fcmp,	  5,   7, 255, 0xff, 0x00, 0x00, 0x04}, // fcmp f h  
	{0xbebe, &op_fcmp,	  6,   7, 255, 0xff, 0x00, 0x00, 0x04}, // fcmp g h  
	{0xbebf, &op_fcmp,	  7,   7, 255, 0xff, 0x00, 0x00, 0x04}, // fcmp h h  
	{0xbf00, &op_fcmp,	  0,   0, 255, 0xff, 0x01, 0x00, 0x01}, // fcmp.wr a a  
	{0xbf01, &op_fcmp,	  1,   0, 255, 0xff, 0x01, 0x00, 0x01}, // fcmp.wr b a  
	{0xbf02, &op_fcmp,	  2,   0, 255, 0xff, 0x01, 0x00, 0x01}, // fcmp.wr c a  
	{0xbf03, &op_fcmp,	  3,   0, 255, 0xff, 0x01, 0x00, 0x01}, // fcmp.wr d a  
	{0xbf04, &op_fcmp,	  4,   0, 255, 0xff, 0x01, 0x00, 0x01}, // fcmp.wr e a  
	{0xbf05, &op_fcmp,	  5,   0, 255, 0xff, 0x01, 0x00, 0x01}, // fcmp.wr f a  
	{0xbf06, &op_fcmp,	  6,   0, 255, 0xff, 0x01, 0x00, 0x01}, // fcmp.wr g a  
	{0xbf07, &op_fcmp,	  7,   0, 255, 0xff, 0x01, 0x00, 0x01}, // fcmp.wr h a  
	{0xbf08, &op_fcmp,	  0,   1, 255, 0xff, 0x01, 0x00, 0x01}, // fcmp.wr a b  
	{0xbf09, &op_fcmp,	  1,   1, 255, 0xff, 0x01, 0x00, 0x01}, // fcmp.wr b b  
	{0xbf0a, &op_fcmp,	  2,   1, 255, 0xff, 0x01, 0x00, 0x01}, // fcmp.wr c b  
	{0xbf0b, &op_fcmp,	  3,   1, 255, 0xff, 0x01, 0x00, 0x01}, // fcmp.wr d b  
	{0xbf0c, &op_fcmp,	  4,   1, 255, 0xff, 0x01, 0x00, 0x01}, // fcmp.wr e b  
	{0xbf0d, &op_fcmp,	  5,   1, 255, 0xff, 0x01, 0x00, 0x01}, // fcmp.wr f b  
	{0xbf0e, &op_fcmp,	  6,   1, 255, 0xff, 0x01, 0x00, 0x01}, // fcmp.wr g b  
	{0xbf0f, &op_fcmp,	  7,   1, 255, 0xff, 0x01, 0x00, 0x01}, // fcmp.wr h b  
	{0xbf10, &op_fcmp,	  0,   2, 255, 0xff, 0x01, 0x00, 0x01}, // fcmp.wr a c  
	{0xbf11, &op_fcmp,	  1,   2, 255, 0xff, 0x01, 0x00, 0x01}, // fcmp.wr b c  
	{0xbf12, &op_fcmp,	  2,   2, 255, 0xff, 0x01, 0x00, 0x01}, // fcmp.wr c c  
	{0xbf13, &op_fcmp,	  3,   2, 255, 0xff, 0x01, 0x00, 0x01}, // fcmp.wr d c  
	{0xbf14, &op_fcmp,	  4,   2, 255, 0xff, 0x01, 0x00, 0x01}, // fcmp.wr e c  
	{0xbf15, &op_fcmp,	  5,   2, 255, 0xff, 0x01, 0x00, 0x01}, // fcmp.wr f c  
	{0xbf16, &op_fcmp,	  6,   2, 255, 0xff, 0x01, 0x00, 0x01}, // fcmp.wr g c  
	{0xbf17, &op_fcmp,	  7,   2, 255, 0xff, 0x01, 0x00, 0x01}, // fcmp.wr h c  
	{0xbf18, &op_fcmp,	  0,   3, 255, 0xff, 0x01, 0x00, 0x01}, // fcmp.wr a d  
	{0xbf19, &op_fcmp,	  1,   3, 255, 0xff, 0x01, 0x00, 0x01}, // fcmp.wr b d  
	{0xbf1a, &op_fcmp,	  2,   3, 255, 0xff, 0x01, 0x00, 0x01}, // fcmp.wr c d  
	{0xbf1b, &op_fcmp,	  3,   3, 255, 0xff, 0x01, 0x00, 0x01}, // fcmp.wr d d  
	{0xbf1c, &op_fcmp,	  4,   3, 255, 0xff, 0x01, 0x00, 0x01}, // fcmp.wr e d  
	{0xbf1d, &op_fcmp,	  5,   3, 255, 0xff, 0x01, 0x00, 0x01}, // fcmp.wr f d  
	{0xbf1e, &op_fcmp,	  6,   3, 255, 0xff, 0x01, 0x00, 0x01}, // fcmp.wr g d  
	{0xbf1f, &op_fcmp,	  7,   3, 255, 0xff, 0x01, 0x00, 0x01}, // fcmp.wr h d  
	{0xbf20, &op_fcmp,	  0,   4, 255, 0xff, 0x01, 0x00, 0x01}, // fcmp.wr a e  
	{0xbf21, &op_fcmp,	  1,   4, 255, 0xff, 0x01, 0x00, 0x01}, // fcmp.wr b e  
	{0xbf22, &op_fcmp,	  2,   4, 255, 0xff, 0x01, 0x00, 0x01}, // fcmp.wr c e  
	{0xbf23, &op_fcmp,	  3,   4, 255, 0xff, 0x01, 0x00, 0x01}, // fcmp.wr d e  
	{0xbf24, &op_fcmp,	  4,   4, 255, 0xff, 0x01, 0x00, 0x01}, // fcmp.wr e e  
	{0xbf25, &op_fcmp,	  5,   4, 255, 0xff, 0x01, 0x00, 0x01}, // fcmp.wr f e  
	{0xbf26, &op_fcmp,	  6,   4, 255, 0xff, 0x01, 0x00, 0x01}, // fcmp.wr g e  
	{0xbf27, &op_fcmp,	  7,   4, 255, 0xff, 0x01, 0x00, 0x01}, // fcmp.wr h e  
	{0xbf28, &op_fcmp,	  0,   5, 255, 0xff, 0x01, 0x00, 0x01}, // fcmp.wr a f  
	{0xbf29, &op_fcmp,	  1,   5, 255, 0xff, 0x01, 0x00, 0x01}, // fcmp.wr b f  
	{0xbf2a, &op_fcmp,	  2,   5, 255, 0xff, 0x01, 0x00, 0x01}, // fcmp.wr c f  
	{0xbf2b, &op_fcmp,	  3,   5, 255, 0xff, 0x01, 0x00, 0x01}, // fcmp.wr d f  
	{0xbf2c, &op_fcmp,	  4,   5, 255, 0xff, 0x01, 0x00, 0x01}, // fcmp.wr e f  
	{0xbf2d, &op_fcmp,	  5,   5, 255, 0xff, 0x01, 0x00, 0x01}, // fcmp.wr f f  
	{0xbf2e, &op_fcmp,	  6,   5, 255, 0xff, 0x01, 0x00, 0x01}, // fcmp.wr g f  
	{0xbf2f, &op_fcmp,	  7,   5, 255, 0xff, 0x01, 0x00, 0x01}, // fcmp.wr h f  
	{0xbf30, &op_fcmp,	  0,   6, 255, 0xff, 0x01, 0x00, 0x01}, // fcmp.wr a g  
	{0xbf31, &op_fcmp,	  1,   6, 255, 0xff, 0x01, 0x00, 0x01}, // fcmp.wr b g  
	{0xbf32, &op_fcmp,	  2,   6, 255, 0xff, 0x01, 0x00, 0x01}, // fcmp.wr c g  
	{0xbf33, &op_fcmp,	  3,   6, 255, 0xff, 0x01, 0x00, 0x01}, // fcmp.wr d g  
	{0xbf34, &op_fcmp,	  4,   6, 255, 0xff, 0x01, 0x00, 0x01}, // fcmp.wr e g  
	{0xbf35, &op_fcmp,	  5,   6, 255, 0xff, 0x01, 0x00, 0x01}, // fcmp.wr f g  
	{0xbf36, &op_fcmp,	  6,   6, 255, 0xff, 0x01, 0x00, 0x01}, // fcmp.wr g g  
	{0xbf37, &op_fcmp,	  7,   6, 255, 0xff, 0x01, 0x00, 0x01}, // fcmp.wr h g  
	{0xbf38, &op_fcmp,	  0,   7, 255, 0xff, 0x01, 0x00, 0x01}, // fcmp.wr a h  
	{0xbf39, &op_fcmp,	  1,   7, 255, 0xff, 0x01, 0x00, 0x01}, // fcmp.wr b h  
	{0xbf3a, &op_fcmp,	  2,   7, 255, 0xff, 0x01, 0x00, 0x01}, // fcmp.wr c h  
	{0xbf3b, &op_fcmp,	  3,   7, 255, 0xff, 0x01, 0x00, 0x01}, // fcmp.wr d h  
	{0xbf3c, &op_fcmp,	  4,   7, 255, 0xff, 0x01, 0x00, 0x01}, // fcmp.wr e h  
	{0xbf3d, &op_fcmp,	  5,   7, 255, 0xff, 0x01, 0x00, 0x01}, // fcmp.wr f h  
	{0xbf3e, &op_fcmp,	  6,   7, 255, 0xff, 0x01, 0x00, 0x01}, // fcmp.wr g h  
	{0xbf3f, &op_fcmp,	  7,   7, 255, 0xff, 0x01, 0x00, 0x01}, // fcmp.wr h h  
	{0xbf40, &op_fcmp,	  0,   0, 255, 0xff, 0x01, 0x00, 0x02}, // fcmp.dr a a  
	{0xbf41, &op_fcmp,	  1,   0, 255, 0xff, 0x01, 0x00, 0x02}, // fcmp.dr b a  
	{0xbf42, &op_fcmp,	  2,   0, 255, 0xff, 0x01, 0x00, 0x02}, // fcmp.dr c a  
	{0xbf43, &op_fcmp,	  3,   0, 255, 0xff, 0x01, 0x00, 0x02}, // fcmp.dr d a  
	{0xbf44, &op_fcmp,	  4,   0, 255, 0xff, 0x01, 0x00, 0x02}, // fcmp.dr e a  
	{0xbf45, &op_fcmp,	  5,   0, 255, 0xff, 0x01, 0x00, 0x02}, // fcmp.dr f a  
	{0xbf46, &op_fcmp,	  6,   0, 255, 0xff, 0x01, 0x00, 0x02}, // fcmp.dr g a  
	{0xbf47, &op_fcmp,	  7,   0, 255, 0xff, 0x01, 0x00, 0x02}, // fcmp.dr h a  
	{0xbf48, &op_fcmp,	  0,   1, 255, 0xff, 0x01, 0x00, 0x02}, // fcmp.dr a b  
	{0xbf49, &op_fcmp,	  1,   1, 255, 0xff, 0x01, 0x00, 0x02}, // fcmp.dr b b  
	{0xbf4a, &op_fcmp,	  2,   1, 255, 0xff, 0x01, 0x00, 0x02}, // fcmp.dr c b  
	{0xbf4b, &op_fcmp,	  3,   1, 255, 0xff, 0x01, 0x00, 0x02}, // fcmp.dr d b  
	{0xbf4c, &op_fcmp,	  4,   1, 255, 0xff, 0x01, 0x00, 0x02}, // fcmp.dr e b  
	{0xbf4d, &op_fcmp,	  5,   1, 255, 0xff, 0x01, 0x00, 0x02}, // fcmp.dr f b  
	{0xbf4e, &op_fcmp,	  6,   1, 255, 0xff, 0x01, 0x00, 0x02}, // fcmp.dr g b  
	{0xbf4f, &op_fcmp,	  7,   1, 255, 0xff, 0x01, 0x00, 0x02}, // fcmp.dr h b  
	{0xbf50, &op_fcmp,	  0,   2, 255, 0xff, 0x01, 0x00, 0x02}, // fcmp.dr a c  
	{0xbf51, &op_fcmp,	  1,   2, 255, 0xff, 0x01, 0x00, 0x02}, // fcmp.dr b c  
	{0xbf52, &op_fcmp,	  2,   2, 255, 0xff, 0x01, 0x00, 0x02}, // fcmp.dr c c  
	{0xbf53, &op_fcmp,	  3,   2, 255, 0xff, 0x01, 0x00, 0x02}, // fcmp.dr d c  
	{0xbf54, &op_fcmp,	  4,   2, 255, 0xff, 0x01, 0x00, 0x02}, // fcmp.dr e c  
	{0xbf55, &op_fcmp,	  5,   2, 255, 0xff, 0x01, 0x00, 0x02}, // fcmp.dr f c  
	{0xbf56, &op_fcmp,	  6,   2, 255, 0xff, 0x01, 0x00, 0x02}, // fcmp.dr g c  
	{0xbf57, &op_fcmp,	  7,   2, 255, 0xff, 0x01, 0x00, 0x02}, // fcmp.dr h c  
	{0xbf58, &op_fcmp,	  0,   3, 255, 0xff, 0x01, 0x00, 0x02}, // fcmp.dr a d  
	{0xbf59, &op_fcmp,	  1,   3, 255, 0xff, 0x01, 0x00, 0x02}, // fcmp.dr b d  
	{0xbf5a, &op_fcmp,	  2,   3, 255, 0xff, 0x01, 0x00, 0x02}, // fcmp.dr c d  
	{0xbf5b, &op_fcmp,	  3,   3, 255, 0xff, 0x01, 0x00, 0x02}, // fcmp.dr d d  
	{0xbf5c, &op_fcmp,	  4,   3, 255, 0xff, 0x01, 0x00, 0x02}, // fcmp.dr e d  
	{0xbf5d, &op_fcmp,	  5,   3, 255, 0xff, 0x01, 0x00, 0x02}, // fcmp.dr f d  
	{0xbf5e, &op_fcmp,	  6,   3, 255, 0xff, 0x01, 0x00, 0x02}, // fcmp.dr g d  
	{0xbf5f, &op_fcmp,	  7,   3, 255, 0xff, 0x01, 0x00, 0x02}, // fcmp.dr h d  
	{0xbf60, &op_fcmp,	  0,   4, 255, 0xff, 0x01, 0x00, 0x02}, // fcmp.dr a e  
	{0xbf61, &op_fcmp,	  1,   4, 255, 0xff, 0x01, 0x00, 0x02}, // fcmp.dr b e  
	{0xbf62, &op_fcmp,	  2,   4, 255, 0xff, 0x01, 0x00, 0x02}, // fcmp.dr c e  
	{0xbf63, &op_fcmp,	  3,   4, 255, 0xff, 0x01, 0x00, 0x02}, // fcmp.dr d e  
	{0xbf64, &op_fcmp,	  4,   4, 255, 0xff, 0x01, 0x00, 0x02}, // fcmp.dr e e  
	{0xbf65, &op_fcmp,	  5,   4, 255, 0xff, 0x01, 0x00, 0x02}, // fcmp.dr f e  
	{0xbf66, &op_fcmp,	  6,   4, 255, 0xff, 0x01, 0x00, 0x02}, // fcmp.dr g e  
	{0xbf67, &op_fcmp,	  7,   4, 255, 0xff, 0x01, 0x00, 0x02}, // fcmp.dr h e  
	{0xbf68, &op_fcmp,	  0,   5, 255, 0xff, 0x01, 0x00, 0x02}, // fcmp.dr a f  
	{0xbf69, &op_fcmp,	  1,   5, 255, 0xff, 0x01, 0x00, 0x02}, // fcmp.dr b f  
	{0xbf6a, &op_fcmp,	  2,   5, 255, 0xff, 0x01, 0x00, 0x02}, // fcmp.dr c f  
	{0xbf6b, &op_fcmp,	  3,   5, 255, 0xff, 0x01, 0x00, 0x02}, // fcmp.dr d f  
	{0xbf6c, &op_fcmp,	  4,   5, 255, 0xff, 0x01, 0x00, 0x02}, // fcmp.dr e f  
	{0xbf6d, &op_fcmp,	  5,   5, 255, 0xff, 0x01, 0x00, 0x02}, // fcmp.dr f f  
	{0xbf6e, &op_fcmp,	  6,   5, 255, 0xff, 0x01, 0x00, 0x02}, // fcmp.dr g f  
	{0xbf6f, &op_fcmp,	  7,   5, 255, 0xff, 0x01, 0x00, 0x02}, // fcmp.dr h f  
	{0xbf70, &op_fcmp,	  0,   6, 255, 0xff, 0x01, 0x00, 0x02}, // fcmp.dr a g  
	{0xbf71, &op_fcmp,	  1,   6, 255, 0xff, 0x01, 0x00, 0x02}, // fcmp.dr b g  
	{0xbf72, &op_fcmp,	  2,   6, 255, 0xff, 0x01, 0x00, 0x02}, // fcmp.dr c g  
	{0xbf73, &op_fcmp,	  3,   6, 255, 0xff, 0x01, 0x00, 0x02}, // fcmp.dr d g  
	{0xbf74, &op_fcmp,	  4,   6, 255, 0xff, 0x01, 0x00, 0x02}, // fcmp.dr e g  
	{0xbf75, &op_fcmp,	  5,   6, 255, 0xff, 0x01, 0x00, 0x02}, // fcmp.dr f g  
	{0xbf76, &op_fcmp,	  6,   6, 255, 0xff, 0x01, 0x00, 0x02}, // fcmp.dr g g  
	{0xbf77, &op_fcmp,	  7,   6, 255, 0xff, 0x01, 0x00, 0x02}, // fcmp.dr h g  
	{0xbf78, &op_fcmp,	  0,   7, 255, 0xff, 0x01, 0x00, 0x02}, // fcmp.dr a h  
	{0xbf79, &op_fcmp,	  1,   7, 255, 0xff, 0x01, 0x00, 0x02}, // fcmp.dr b h  
	{0xbf7a, &op_fcmp,	  2,   7, 255, 0xff, 0x01, 0x00, 0x02}, // fcmp.dr c h  
	{0xbf7b, &op_fcmp,	  3,   7, 255, 0xff, 0x01, 0x00, 0x02}, // fcmp.dr d h  
	{0xbf7c, &op_fcmp,	  4,   7, 255, 0xff, 0x01, 0x00, 0x02}, // fcmp.dr e h  
	{0xbf7d, &op_fcmp,	  5,   7, 255, 0xff, 0x01, 0x00, 0x02}, // fcmp.dr f h  
	{0xbf7e, &op_fcmp,	  6,   7, 255, 0xff, 0x01, 0x00, 0x02}, // fcmp.dr g h  
	{0xbf7f, &op_fcmp,	  7,   7, 255, 0xff, 0x01, 0x00, 0x02}, // fcmp.dr h h  
	{0xbf80, &op_fcmp,	  0,   0, 255, 0xff, 0x01, 0x00, 0x04}, // fcmp.r a a  
	{0xbf81, &op_fcmp,	  1,   0, 255, 0xff, 0x01, 0x00, 0x04}, // fcmp.r b a  
	{0xbf82, &op_fcmp,	  2,   0, 255, 0xff, 0x01, 0x00, 0x04}, // fcmp.r c a  
	{0xbf83, &op_fcmp,	  3,   0, 255, 0xff, 0x01, 0x00, 0x04}, // fcmp.r d a  
	{0xbf84, &op_fcmp,	  4,   0, 255, 0xff, 0x01, 0x00, 0x04}, // fcmp.r e a  
	{0xbf85, &op_fcmp,	  5,   0, 255, 0xff, 0x01, 0x00, 0x04}, // fcmp.r f a  
	{0xbf86, &op_fcmp,	  6,   0, 255, 0xff, 0x01, 0x00, 0x04}, // fcmp.r g a  
	{0xbf87, &op_fcmp,	  7,   0, 255, 0xff, 0x01, 0x00, 0x04}, // fcmp.r h a  
	{0xbf88, &op_fcmp,	  0,   1, 255, 0xff, 0x01, 0x00, 0x04}, // fcmp.r a b  
	{0xbf89, &op_fcmp,	  1,   1, 255, 0xff, 0x01, 0x00, 0x04}, // fcmp.r b b  
	{0xbf8a, &op_fcmp,	  2,   1, 255, 0xff, 0x01, 0x00, 0x04}, // fcmp.r c b  
	{0xbf8b, &op_fcmp,	  3,   1, 255, 0xff, 0x01, 0x00, 0x04}, // fcmp.r d b  
	{0xbf8c, &op_fcmp,	  4,   1, 255, 0xff, 0x01, 0x00, 0x04}, // fcmp.r e b  
	{0xbf8d, &op_fcmp,	  5,   1, 255, 0xff, 0x01, 0x00, 0x04}, // fcmp.r f b  
	{0xbf8e, &op_fcmp,	  6,   1, 255, 0xff, 0x01, 0x00, 0x04}, // fcmp.r g b  
	{0xbf8f, &op_fcmp,	  7,   1, 255, 0xff, 0x01, 0x00, 0x04}, // fcmp.r h b  
	{0xbf90, &op_fcmp,	  0,   2, 255, 0xff, 0x01, 0x00, 0x04}, // fcmp.r a c  
	{0xbf91, &op_fcmp,	  1,   2, 255, 0xff, 0x01, 0x00, 0x04}, // fcmp.r b c  
	{0xbf92, &op_fcmp,	  2,   2, 255, 0xff, 0x01, 0x00, 0x04}, // fcmp.r c c  
	{0xbf93, &op_fcmp,	  3,   2, 255, 0xff, 0x01, 0x00, 0x04}, // fcmp.r d c  
	{0xbf94, &op_fcmp,	  4,   2, 255, 0xff, 0x01, 0x00, 0x04}, // fcmp.r e c  
	{0xbf95, &op_fcmp,	  5,   2, 255, 0xff, 0x01, 0x00, 0x04}, // fcmp.r f c  
	{0xbf96, &op_fcmp,	  6,   2, 255, 0xff, 0x01, 0x00, 0x04}, // fcmp.r g c  
	{0xbf97, &op_fcmp,	  7,   2, 255, 0xff, 0x01, 0x00, 0x04}, // fcmp.r h c  
	{0xbf98, &op_fcmp,	  0,   3, 255, 0xff, 0x01, 0x00, 0x04}, // fcmp.r a d  
	{0xbf99, &op_fcmp,	  1,   3, 255, 0xff, 0x01, 0x00, 0x04}, // fcmp.r b d  
	{0xbf9a, &op_fcmp,	  2,   3, 255, 0xff, 0x01, 0x00, 0x04}, // fcmp.r c d  
	{0xbf9b, &op_fcmp,	  3,   3, 255, 0xff, 0x01, 0x00, 0x04}, // fcmp.r d d  
	{0xbf9c, &op_fcmp,	  4,   3, 255, 0xff, 0x01, 0x00, 0x04}, // fcmp.r e d  
	{0xbf9d, &op_fcmp,	  5,   3, 255, 0xff, 0x01, 0x00, 0x04}, // fcmp.r f d  
	{0xbf9e, &op_fcmp,	  6,   3, 255, 0xff, 0x01, 0x00, 0x04}, // fcmp.r g d  
	{0xbf9f, &op_fcmp,	  7,   3, 255, 0xff, 0x01, 0x00, 0x04}, // fcmp.r h d  
	{0xbfa0, &op_fcmp,	  0,   4, 255, 0xff, 0x01, 0x00, 0x04}, // fcmp.r a e  
	{0xbfa1, &op_fcmp,	  1,   4, 255, 0xff, 0x01, 0x00, 0x04}, // fcmp.r b e  
	{0xbfa2, &op_fcmp,	  2,   4, 255, 0xff, 0x01, 0x00, 0x04}, // fcmp.r c e  
	{0xbfa3, &op_fcmp,	  3,   4, 255, 0xff, 0x01, 0x00, 0x04}, // fcmp.r d e  
	{0xbfa4, &op_fcmp,	  4,   4, 255, 0xff, 0x01, 0x00, 0x04}, // fcmp.r e e  
	{0xbfa5, &op_fcmp,	  5,   4, 255, 0xff, 0x01, 0x00, 0x04}, // fcmp.r f e  
	{0xbfa6, &op_fcmp,	  6,   4, 255, 0xff, 0x01, 0x00, 0x04}, // fcmp.r g e  
	{0xbfa7, &op_fcmp,	  7,   4, 255, 0xff, 0x01, 0x00, 0x04}, // fcmp.r h e  
	{0xbfa8, &op_fcmp,	  0,   5, 255, 0xff, 0x01, 0x00, 0x04}, // fcmp.r a f  
	{0xbfa9, &op_fcmp,	  1,   5, 255, 0xff, 0x01, 0x00, 0x04}, // fcmp.r b f  
	{0xbfaa, &op_fcmp,	  2,   5, 255, 0xff, 0x01, 0x00, 0x04}, // fcmp.r c f  
	{0xbfab, &op_fcmp,	  3,   5, 255, 0xff, 0x01, 0x00, 0x04}, // fcmp.r d f  
	{0xbfac, &op_fcmp,	  4,   5, 255, 0xff, 0x01, 0x00, 0x04}, // fcmp.r e f  
	{0xbfad, &op_fcmp,	  5,   5, 255, 0xff, 0x01, 0x00, 0x04}, // fcmp.r f f  
	{0xbfae, &op_fcmp,	  6,   5, 255, 0xff, 0x01, 0x00, 0x04}, // fcmp.r g f  
	{0xbfaf, &op_fcmp,	  7,   5, 255, 0xff, 0x01, 0x00, 0x04}, // fcmp.r h f  
	{0xbfb0, &op_fcmp,	  0,   6, 255, 0xff, 0x01, 0x00, 0x04}, // fcmp.r a g  
	{0xbfb1, &op_fcmp,	  1,   6, 255, 0xff, 0x01, 0x00, 0x04}, // fcmp.r b g  
	{0xbfb2, &op_fcmp,	  2,   6, 255, 0xff, 0x01, 0x00, 0x04}, // fcmp.r c g  
	{0xbfb3, &op_fcmp,	  3,   6, 255, 0xff, 0x01, 0x00, 0x04}, // fcmp.r d g  
	{0xbfb4, &op_fcmp,	  4,   6, 255, 0xff, 0x01, 0x00, 0x04}, // fcmp.r e g  
	{0xbfb5, &op_fcmp,	  5,   6, 255, 0xff, 0x01, 0x00, 0x04}, // fcmp.r f g  
	{0xbfb6, &op_fcmp,	  6,   6, 255, 0xff, 0x01, 0x00, 0x04}, // fcmp.r g g  
	{0xbfb7, &op_fcmp,	  7,   6, 255, 0xff, 0x01, 0x00, 0x04}, // fcmp.r h g  
	{0xbfb8, &op_fcmp,	  0,   7, 255, 0xff, 0x01, 0x00, 0x04}, // fcmp.r a h  
	{0xbfb9, &op_fcmp,	  1,   7, 255, 0xff, 0x01, 0x00, 0x04}, // fcmp.r b h  
	{0xbfba, &op_fcmp,	  2,   7, 255, 0xff, 0x01, 0x00, 0x04}, // fcmp.r c h  
	{0xbfbb, &op_fcmp,	  3,   7, 255, 0xff, 0x01, 0x00, 0x04}, // fcmp.r d h  
	{0xbfbc, &op_fcmp,	  4,   7, 255, 0xff, 0x01, 0x00, 0x04}, // fcmp.r e h  
	{0xbfbd, &op_fcmp,	  5,   7, 255, 0xff, 0x01, 0x00, 0x04}, // fcmp.r f h  
	{0xbfbe, &op_fcmp,	  6,   7, 255, 0xff, 0x01, 0x00, 0x04}, // fcmp.r g h  
	{0xbfbf, &op_fcmp,	  7,   7, 255, 0xff, 0x01, 0x00, 0x04}, // fcmp.r h h  
	{0xbec8, &op_fcmp,	  0,   8, 255, 0xff, 0x00, 0x01, 0x01}, // fcmp.wi a <literal>  
	{0xbec9, &op_fcmp,	  1,   8, 255, 0xff, 0x00, 0x01, 0x01}, // fcmp.wi b <literal>  
	{0xbeca, &op_fcmp,	  2,   8, 255, 0xff, 0x00, 0x01, 0x01}, // fcmp.wi c <literal>  
	{0xbecb, &op_fcmp,	  3,   8, 255, 0xff, 0x00, 0x01, 0x01}, // fcmp.wi d <literal>  
	{0xbecc, &op_fcmp,	  4,   8, 255, 0xff, 0x00, 0x01, 0x01}, // fcmp.wi e <literal>  
	{0xbecd, &op_fcmp,	  5,   8, 255, 0xff, 0x00, 0x01, 0x01}, // fcmp.wi f <literal>  
	{0xbece, &op_fcmp,	  6,   8, 255, 0xff, 0x00, 0x01, 0x01}, // fcmp.wi g <literal>  
	{0xbecf, &op_fcmp,	  7,   8, 255, 0xff, 0x00, 0x01, 0x01}, // fcmp.wi h <literal>  
	{0xbed0, &op_fcmp,	  0,   8, 255, 0xff, 0x00, 0x02, 0x02}, // fcmp.di a <literal>  
	{0xbed1, &op_fcmp,	  1,   8, 255, 0xff, 0x00, 0x02, 0x02}, // fcmp.di b <literal>  
	{0xbed2, &op_fcmp,	  2,   8, 255, 0xff, 0x00, 0x02, 0x02}, // fcmp.di c <literal>  
	{0xbed3, &op_fcmp,	  3,   8, 255, 0xff, 0x00, 0x02, 0x02}, // fcmp.di d <literal>  
	{0xbed4, &op_fcmp,	  4,   8, 255, 0xff, 0x00, 0x02, 0x02}, // fcmp.di e <literal>  
	{0xbed5, &op_fcmp,	  5,   8, 255, 0xff, 0x00, 0x02, 0x02}, // fcmp.di f <literal>  
	{0xbed6, &op_fcmp,	  6,   8, 255, 0xff, 0x00, 0x02, 0x02}, // fcmp.di g <literal>  
	{0xbed7, &op_fcmp,	  7,   8, 255, 0xff, 0x00, 0x02, 0x02}, // fcmp.di h <literal>  
	{0xbee0, &op_fcmp,	  0,   8, 255, 0xff, 0x00, 0x04, 0x04}, // fcmp.i a <literal>  
	{0xbee1, &op_fcmp,	  1,   8, 255, 0xff, 0x00, 0x04, 0x04}, // fcmp.i b <literal>  
	{0xbee2, &op_fcmp,	  2,   8, 255, 0xff, 0x00, 0x04, 0x04}, // fcmp.i c <literal>  
	{0xbee3, &op_fcmp,	  3,   8, 255, 0xff, 0x00, 0x04, 0x04}, // fcmp.i d <literal>  
	{0xbee4, &op_fcmp,	  4,   8, 255, 0xff, 0x00, 0x04, 0x04}, // fcmp.i e <literal>  
	{0xbee5, &op_fcmp,	  5,   8, 255, 0xff, 0x00, 0x04, 0x04}, // fcmp.i f <literal>  
	{0xbee6, &op_fcmp,	  6,   8, 255, 0xff, 0x00, 0x04, 0x04}, // fcmp.i g <literal>  
	{0xbee7, &op_fcmp,	  7,   8, 255, 0xff, 0x00, 0x04, 0x04}, // fcmp.i h <literal>  
	{0xbfc8, &op_fcmp,	  0,   8, 255, 0xff, 0x01, 0x04, 0x01}, // fcmp.wri a <literal>  
	{0xbfc9, &op_fcmp,	  1,   8, 255, 0xff, 0x01, 0x04, 0x01}, // fcmp.wri b <literal>  
	{0xbfca, &op_fcmp,	  2,   8, 255, 0xff, 0x01, 0x04, 0x01}, // fcmp.wri c <literal>  
	{0xbfcb, &op_fcmp,	  3,   8, 255, 0xff, 0x01, 0x04, 0x01}, // fcmp.wri d <literal>  
	{0xbfcc, &op_fcmp,	  4,   8, 255, 0xff, 0x01, 0x04, 0x01}, // fcmp.wri e <literal>  
	{0xbfcd, &op_fcmp,	  5,   8, 255, 0xff, 0x01, 0x04, 0x01}, // fcmp.wri f <literal>  
	{0xbfce, &op_fcmp,	  6,   8, 255, 0xff, 0x01, 0x04, 0x01}, // fcmp.wri g <literal>  
	{0xbfcf, &op_fcmp,	  7,   8, 255, 0xff, 0x01, 0x04, 0x01}, // fcmp.wri h <literal>  
	{0xbfd0, &op_fcmp,	  0,   8, 255, 0xff, 0x01, 0x04, 0x02}, // fcmp.dri a <literal>  
	{0xbfd1, &op_fcmp,	  1,   8, 255, 0xff, 0x01, 0x04, 0x02}, // fcmp.dri b <literal>  
	{0xbfd2, &op_fcmp,	  2,   8, 255, 0xff, 0x01, 0x04, 0x02}, // fcmp.dri c <literal>  
	{0xbfd3, &op_fcmp,	  3,   8, 255, 0xff, 0x01, 0x04, 0x02}, // fcmp.dri d <literal>  
	{0xbfd4, &op_fcmp,	  4,   8, 255, 0xff, 0x01, 0x04, 0x02}, // fcmp.dri e <literal>  
	{0xbfd5, &op_fcmp,	  5,   8, 255, 0xff, 0x01, 0x04, 0x02}, // fcmp.dri f <literal>  
	{0xbfd6, &op_fcmp,	  6,   8, 255, 0xff, 0x01, 0x04, 0x02}, // fcmp.dri g <literal>  
	{0xbfd7, &op_fcmp,	  7,   8, 255, 0xff, 0x01, 0x04, 0x02}, // fcmp.dri h <literal>  
	{0xbfe0, &op_fcmp,	  0,   8, 255, 0xff, 0x01, 0x04, 0x04}, // fcmp.ri a <literal>  
	{0xbfe1, &op_fcmp,	  1,   8, 255, 0xff, 0x01, 0x04, 0x04}, // fcmp.ri b <literal>  
	{0xbfe2, &op_fcmp,	  2,   8, 255, 0xff, 0x01, 0x04, 0x04}, // fcmp.ri c <literal>  
	{0xbfe3, &op_fcmp,	  3,   8, 255, 0xff, 0x01, 0x04, 0x04}, // fcmp.ri d <literal>  
	{0xbfe4, &op_fcmp,	  4,   8, 255, 0xff, 0x01, 0x04, 0x04}, // fcmp.ri e <literal>  
	{0xbfe5, &op_fcmp,	  5,   8, 255, 0xff, 0x01, 0x04, 0x04}, // fcmp.ri f <literal>  
	{0xbfe6, &op_fcmp,	  6,   8, 255, 0xff, 0x01, 0x04, 0x04}, // fcmp.ri g <literal>  
	{0xbfe7, &op_fcmp,	  7,   8, 255, 0xff, 0x01, 0x04, 0x04}, // fcmp.ri h <literal>  
	{0xc200, &op_not,	  0,   0, 255, 0xff, 0x00, 0x00, 0x01}, // not.w a a  
	{0xc201, &op_not,	  1,   0, 255, 0xff, 0x00, 0x00, 0x01}, // not.w b a  
	{0xc202, &op_not,	  2,   0, 255, 0xff, 0x00, 0x00, 0x01}, // not.w c a  
	{0xc203, &op_not,	  3,   0, 255, 0xff, 0x00, 0x00, 0x01}, // not.w d a  
	{0xc204, &op_not,	  4,   0, 255, 0xff, 0x00, 0x00, 0x01}, // not.w e a  
	{0xc205, &op_not,	  5,   0, 255, 0xff, 0x00, 0x00, 0x01}, // not.w f a  
	{0xc206, &op_not,	  6,   0, 255, 0xff, 0x00, 0x00, 0x01}, // not.w g a  
	{0xc207, &op_not,	  7,   0, 255, 0xff, 0x00, 0x00, 0x01}, // not.w h a  
	{0xc208, &op_not,	  0,   1, 255, 0xff, 0x00, 0x00, 0x01}, // not.w a b  
	{0xc209, &op_not,	  1,   1, 255, 0xff, 0x00, 0x00, 0x01}, // not.w b b  
	{0xc20a, &op_not,	  2,   1, 255, 0xff, 0x00, 0x00, 0x01}, // not.w c b  
	{0xc20b, &op_not,	  3,   1, 255, 0xff, 0x00, 0x00, 0x01}, // not.w d b  
	{0xc20c, &op_not,	  4,   1, 255, 0xff, 0x00, 0x00, 0x01}, // not.w e b  
	{0xc20d, &op_not,	  5,   1, 255, 0xff, 0x00, 0x00, 0x01}, // not.w f b  
	{0xc20e, &op_not,	  6,   1, 255, 0xff, 0x00, 0x00, 0x01}, // not.w g b  
	{0xc20f, &op_not,	  7,   1, 255, 0xff, 0x00, 0x00, 0x01}, // not.w h b  
	{0xc210, &op_not,	  0,   2, 255, 0xff, 0x00, 0x00, 0x01}, // not.w a c  
	{0xc211, &op_not,	  1,   2, 255, 0xff, 0x00, 0x00, 0x01}, // not.w b c  
	{0xc212, &op_not,	  2,   2, 255, 0xff, 0x00, 0x00, 0x01}, // not.w c c  
	{0xc213, &op_not,	  3,   2, 255, 0xff, 0x00, 0x00, 0x01}, // not.w d c  
	{0xc214, &op_not,	  4,   2, 255, 0xff, 0x00, 0x00, 0x01}, // not.w e c  
	{0xc215, &op_not,	  5,   2, 255, 0xff, 0x00, 0x00, 0x01}, // not.w f c  
	{0xc216, &op_not,	  6,   2, 255, 0xff, 0x00, 0x00, 0x01}, // not.w g c  
	{0xc217, &op_not,	  7,   2, 255, 0xff, 0x00, 0x00, 0x01}, // not.w h c  
	{0xc218, &op_not,	  0,   3, 255, 0xff, 0x00, 0x00, 0x01}, // not.w a d  
	{0xc219, &op_not,	  1,   3, 255, 0xff, 0x00, 0x00, 0x01}, // not.w b d  
	{0xc21a, &op_not,	  2,   3, 255, 0xff, 0x00, 0x00, 0x01}, // not.w c d  
	{0xc21b, &op_not,	  3,   3, 255, 0xff, 0x00, 0x00, 0x01}, // not.w d d  
	{0xc21c, &op_not,	  4,   3, 255, 0xff, 0x00, 0x00, 0x01}, // not.w e d  
	{0xc21d, &op_not,	  5,   3, 255, 0xff, 0x00, 0x00, 0x01}, // not.w f d  
	{0xc21e, &op_not,	  6,   3, 255, 0xff, 0x00, 0x00, 0x01}, // not.w g d  
	{0xc21f, &op_not,	  7,   3, 255, 0xff, 0x00, 0x00, 0x01}, // not.w h d  
	{0xc220, &op_not,	  0,   4, 255, 0xff, 0x00, 0x00, 0x01}, // not.w a e  
	{0xc221, &op_not,	  1,   4, 255, 0xff, 0x00, 0x00, 0x01}, // not.w b e  
	{0xc222, &op_not,	  2,   4, 255, 0xff, 0x00, 0x00, 0x01}, // not.w c e  
	{0xc223, &op_not,	  3,   4, 255, 0xff, 0x00, 0x00, 0x01}, // not.w d e  
	{0xc224, &op_not,	  4,   4, 255, 0xff, 0x00, 0x00, 0x01}, // not.w e e  
	{0xc225, &op_not,	  5,   4, 255, 0xff, 0x00, 0x00, 0x01}, // not.w f e  
	{0xc226, &op_not,	  6,   4, 255, 0xff, 0x00, 0x00, 0x01}, // not.w g e  
	{0xc227, &op_not,	  7,   4, 255, 0xff, 0x00, 0x00, 0x01}, // not.w h e  
	{0xc228, &op_not,	  0,   5, 255, 0xff, 0x00, 0x00, 0x01}, // not.w a f  
	{0xc229, &op_not,	  1,   5, 255, 0xff, 0x00, 0x00, 0x01}, // not.w b f  
	{0xc22a, &op_not,	  2,   5, 255, 0xff, 0x00, 0x00, 0x01}, // not.w c f  
	{0xc22b, &op_not,	  3,   5, 255, 0xff, 0x00, 0x00, 0x01}, // not.w d f  
	{0xc22c, &op_not,	  4,   5, 255, 0xff, 0x00, 0x00, 0x01}, // not.w e f  
	{0xc22d, &op_not,	  5,   5, 255, 0xff, 0x00, 0x00, 0x01}, // not.w f f  
	{0xc22e, &op_not,	  6,   5, 255, 0xff, 0x00, 0x00, 0x01}, // not.w g f  
	{0xc22f, &op_not,	  7,   5, 255, 0xff, 0x00, 0x00, 0x01}, // not.w h f  
	{0xc230, &op_not,	  0,   6, 255, 0xff, 0x00, 0x00, 0x01}, // not.w a g  
	{0xc231, &op_not,	  1,   6, 255, 0xff, 0x00, 0x00, 0x01}, // not.w b g  
	{0xc232, &op_not,	  2,   6, 255, 0xff, 0x00, 0x00, 0x01}, // not.w c g  
	{0xc233, &op_not,	  3,   6, 255, 0xff, 0x00, 0x00, 0x01}, // not.w d g  
	{0xc234, &op_not,	  4,   6, 255, 0xff, 0x00, 0x00, 0x01}, // not.w e g  
	{0xc235, &op_not,	  5,   6, 255, 0xff, 0x00, 0x00, 0x01}, // not.w f g  
	{0xc236, &op_not,	  6,   6, 255, 0xff, 0x00, 0x00, 0x01}, // not.w g g  
	{0xc237, &op_not,	  7,   6, 255, 0xff, 0x00, 0x00, 0x01}, // not.w h g  
	{0xc238, &op_not,	  0,   7, 255, 0xff, 0x00, 0x00, 0x01}, // not.w a h  
	{0xc239, &op_not,	  1,   7, 255, 0xff, 0x00, 0x00, 0x01}, // not.w b h  
	{0xc23a, &op_not,	  2,   7, 255, 0xff, 0x00, 0x00, 0x01}, // not.w c h  
	{0xc23b, &op_not,	  3,   7, 255, 0xff, 0x00, 0x00, 0x01}, // not.w d h  
	{0xc23c, &op_not,	  4,   7, 255, 0xff, 0x00, 0x00, 0x01}, // not.w e h  
	{0xc23d, &op_not,	  5,   7, 255, 0xff, 0x00, 0x00, 0x01}, // not.w f h  
	{0xc23e, &op_not,	  6,   7, 255, 0xff, 0x00, 0x00, 0x01}, // not.w g h  
	{0xc23f, &op_not,	  7,   7, 255, 0xff, 0x00, 0x00, 0x01}, // not.w h h  
	{0xc240, &op_not,	  0,   0, 255, 0xff, 0x00, 0x00, 0x02}, // not.d a a  
	{0xc241, &op_not,	  1,   0, 255, 0xff, 0x00, 0x00, 0x02}, // not.d b a  
	{0xc242, &op_not,	  2,   0, 255, 0xff, 0x00, 0x00, 0x02}, // not.d c a  
	{0xc243, &op_not,	  3,   0, 255, 0xff, 0x00, 0x00, 0x02}, // not.d d a  
	{0xc244, &op_not,	  4,   0, 255, 0xff, 0x00, 0x00, 0x02}, // not.d e a  
	{0xc245, &op_not,	  5,   0, 255, 0xff, 0x00, 0x00, 0x02}, // not.d f a  
	{0xc246, &op_not,	  6,   0, 255, 0xff, 0x00, 0x00, 0x02}, // not.d g a  
	{0xc247, &op_not,	  7,   0, 255, 0xff, 0x00, 0x00, 0x02}, // not.d h a  
	{0xc248, &op_not,	  0,   1, 255, 0xff, 0x00, 0x00, 0x02}, // not.d a b  
	{0xc249, &op_not,	  1,   1, 255, 0xff, 0x00, 0x00, 0x02}, // not.d b b  
	{0xc24a, &op_not,	  2,   1, 255, 0xff, 0x00, 0x00, 0x02}, // not.d c b  
	{0xc24b, &op_not,	  3,   1, 255, 0xff, 0x00, 0x00, 0x02}, // not.d d b  
	{0xc24c, &op_not,	  4,   1, 255, 0xff, 0x00, 0x00, 0x02}, // not.d e b  
	{0xc24d, &op_not,	  5,   1, 255, 0xff, 0x00, 0x00, 0x02}, // not.d f b  
	{0xc24e, &op_not,	  6,   1, 255, 0xff, 0x00, 0x00, 0x02}, // not.d g b  
	{0xc24f, &op_not,	  7,   1, 255, 0xff, 0x00, 0x00, 0x02}, // not.d h b  
	{0xc250, &op_not,	  0,   2, 255, 0xff, 0x00, 0x00, 0x02}, // not.d a c  
	{0xc251, &op_not,	  1,   2, 255, 0xff, 0x00, 0x00, 0x02}, // not.d b c  
	{0xc252, &op_not,	  2,   2, 255, 0xff, 0x00, 0x00, 0x02}, // not.d c c  
	{0xc253, &op_not,	  3,   2, 255, 0xff, 0x00, 0x00, 0x02}, // not.d d c  
	{0xc254, &op_not,	  4,   2, 255, 0xff, 0x00, 0x00, 0x02}, // not.d e c  
	{0xc255, &op_not,	  5,   2, 255, 0xff, 0x00, 0x00, 0x02}, // not.d f c  
	{0xc256, &op_not,	  6,   2, 255, 0xff, 0x00, 0x00, 0x02}, // not.d g c  
	{0xc257, &op_not,	  7,   2, 255, 0xff, 0x00, 0x00, 0x02}, // not.d h c  
	{0xc258, &op_not,	  0,   3, 255, 0xff, 0x00, 0x00, 0x02}, // not.d a d  
	{0xc259, &op_not,	  1,   3, 255, 0xff, 0x00, 0x00, 0x02}, // not.d b d  
	{0xc25a, &op_not,	  2,   3, 255, 0xff, 0x00, 0x00, 0x02}, // not.d c d  
	{0xc25b, &op_not,	  3,   3, 255, 0xff, 0x00, 0x00, 0x02}, // not.d d d  
	{0xc25c, &op_not,	  4,   3, 255, 0xff, 0x00, 0x00, 0x02}, // not.d e d  
	{0xc25d, &op_not,	  5,   3, 255, 0xff, 0x00, 0x00, 0x02}, // not.d f d  
	{0xc25e, &op_not,	  6,   3, 255, 0xff, 0x00, 0x00, 0x02}, // not.d g d  
	{0xc25f, &op_not,	  7,   3, 255, 0xff, 0x00, 0x00, 0x02}, // not.d h d  
	{0xc260, &op_not,	  0,   4, 255, 0xff, 0x00, 0x00, 0x02}, // not.d a e  
	{0xc261, &op_not,	  1,   4, 255, 0xff, 0x00, 0x00, 0x02}, // not.d b e  
	{0xc262, &op_not,	  2,   4, 255, 0xff, 0x00, 0x00, 0x02}, // not.d c e  
	{0xc263, &op_not,	  3,   4, 255, 0xff, 0x00, 0x00, 0x02}, // not.d d e  
	{0xc264, &op_not,	  4,   4, 255, 0xff, 0x00, 0x00, 0x02}, // not.d e e  
	{0xc265, &op_not,	  5,   4, 255, 0xff, 0x00, 0x00, 0x02}, // not.d f e  
	{0xc266, &op_not,	  6,   4, 255, 0xff, 0x00, 0x00, 0x02}, // not.d g e  
	{0xc267, &op_not,	  7,   4, 255, 0xff, 0x00, 0x00, 0x02}, // not.d h e  
	{0xc268, &op_not,	  0,   5, 255, 0xff, 0x00, 0x00, 0x02}, // not.d a f  
	{0xc269, &op_not,	  1,   5, 255, 0xff, 0x00, 0x00, 0x02}, // not.d b f  
	{0xc26a, &op_not,	  2,   5, 255, 0xff, 0x00, 0x00, 0x02}, // not.d c f  
	{0xc26b, &op_not,	  3,   5, 255, 0xff, 0x00, 0x00, 0x02}, // not.d d f  
	{0xc26c, &op_not,	  4,   5, 255, 0xff, 0x00, 0x00, 0x02}, // not.d e f  
	{0xc26d, &op_not,	  5,   5, 255, 0xff, 0x00, 0x00, 0x02}, // not.d f f  
	{0xc26e, &op_not,	  6,   5, 255, 0xff, 0x00, 0x00, 0x02}, // not.d g f  
	{0xc26f, &op_not,	  7,   5, 255, 0xff, 0x00, 0x00, 0x02}, // not.d h f  
	{0xc270, &op_not,	  0,   6, 255, 0xff, 0x00, 0x00, 0x02}, // not.d a g  
	{0xc271, &op_not,	  1,   6, 255, 0xff, 0x00, 0x00, 0x02}, // not.d b g  
	{0xc272, &op_not,	  2,   6, 255, 0xff, 0x00, 0x00, 0x02}, // not.d c g  
	{0xc273, &op_not,	  3,   6, 255, 0xff, 0x00, 0x00, 0x02}, // not.d d g  
	{0xc274, &op_not,	  4,   6, 255, 0xff, 0x00, 0x00, 0x02}, // not.d e g  
	{0xc275, &op_not,	  5,   6, 255, 0xff, 0x00, 0x00, 0x02}, // not.d f g  
	{0xc276, &op_not,	  6,   6, 255, 0xff, 0x00, 0x00, 0x02}, // not.d g g  
	{0xc277, &op_not,	  7,   6, 255, 0xff, 0x00, 0x00, 0x02}, // not.d h g  
	{0xc278, &op_not,	  0,   7, 255, 0xff, 0x00, 0x00, 0x02}, // not.d a h  
	{0xc279, &op_not,	  1,   7, 255, 0xff, 0x00, 0x00, 0x02}, // not.d b h  
	{0xc27a, &op_not,	  2,   7, 255, 0xff, 0x00, 0x00, 0x02}, // not.d c h  
	{0xc27b, &op_not,	  3,   7, 255, 0xff, 0x00, 0x00, 0x02}, // not.d d h  
	{0xc27c, &op_not,	  4,   7, 255, 0xff, 0x00, 0x00, 0x02}, // not.d e h  
	{0xc27d, &op_not,	  5,   7, 255, 0xff, 0x00, 0x00, 0x02}, // not.d f h  
	{0xc27e, &op_not,	  6,   7, 255, 0xff, 0x00, 0x00, 0x02}, // not.d g h  
	{0xc27f, &op_not,	  7,   7, 255, 0xff, 0x00, 0x00, 0x02}, // not.d h h  
	{0xc280, &op_not,	  0,   0, 255, 0xff, 0x00, 0x00, 0x04}, // not a a  
	{0xc281, &op_not,	  1,   0, 255, 0xff, 0x00, 0x00, 0x04}, // not b a  
	{0xc282, &op_not,	  2,   0, 255, 0xff, 0x00, 0x00, 0x04}, // not c a  
	{0xc283, &op_not,	  3,   0, 255, 0xff, 0x00, 0x00, 0x04}, // not d a  
	{0xc284, &op_not,	  4,   0, 255, 0xff, 0x00, 0x00, 0x04}, // not e a  
	{0xc285, &op_not,	  5,   0, 255, 0xff, 0x00, 0x00, 0x04}, // not f a  
	{0xc286, &op_not,	  6,   0, 255, 0xff, 0x00, 0x00, 0x04}, // not g a  
	{0xc287, &op_not,	  7,   0, 255, 0xff, 0x00, 0x00, 0x04}, // not h a  
	{0xc288, &op_not,	  0,   1, 255, 0xff, 0x00, 0x00, 0x04}, // not a b  
	{0xc289, &op_not,	  1,   1, 255, 0xff, 0x00, 0x00, 0x04}, // not b b  
	{0xc28a, &op_not,	  2,   1, 255, 0xff, 0x00, 0x00, 0x04}, // not c b  
	{0xc28b, &op_not,	  3,   1, 255, 0xff, 0x00, 0x00, 0x04}, // not d b  
	{0xc28c, &op_not,	  4,   1, 255, 0xff, 0x00, 0x00, 0x04}, // not e b  
	{0xc28d, &op_not,	  5,   1, 255, 0xff, 0x00, 0x00, 0x04}, // not f b  
	{0xc28e, &op_not,	  6,   1, 255, 0xff, 0x00, 0x00, 0x04}, // not g b  
	{0xc28f, &op_not,	  7,   1, 255, 0xff, 0x00, 0x00, 0x04}, // not h b  
	{0xc290, &op_not,	  0,   2, 255, 0xff, 0x00, 0x00, 0x04}, // not a c  
	{0xc291, &op_not,	  1,   2, 255, 0xff, 0x00, 0x00, 0x04}, // not b c  
	{0xc292, &op_not,	  2,   2, 255, 0xff, 0x00, 0x00, 0x04}, // not c c  
	{0xc293, &op_not,	  3,   2, 255, 0xff, 0x00, 0x00, 0x04}, // not d c  
	{0xc294, &op_not,	  4,   2, 255, 0xff, 0x00, 0x00, 0x04}, // not e c  
	{0xc295, &op_not,	  5,   2, 255, 0xff, 0x00, 0x00, 0x04}, // not f c  
	{0xc296, &op_not,	  6,   2, 255, 0xff, 0x00, 0x00, 0x04}, // not g c  
	{0xc297, &op_not,	  7,   2, 255, 0xff, 0x00, 0x00, 0x04}, // not h c  
	{0xc298, &op_not,	  0,   3, 255, 0xff, 0x00, 0x00, 0x04}, // not a d  
	{0xc299, &op_not,	  1,   3, 255, 0xff, 0x00, 0x00, 0x04}, // not b d  
	{0xc29a, &op_not,	  2,   3, 255, 0xff, 0x00, 0x00, 0x04}, // not c d  
	{0xc29b, &op_not,	  3,   3, 255, 0xff, 0x00, 0x00, 0x04}, // not d d  
	{0xc29c, &op_not,	  4,   3, 255, 0xff, 0x00, 0x00, 0x04}, // not e d  
	{0xc29d, &op_not,	  5,   3, 255, 0xff, 0x00, 0x00, 0x04}, // not f d  
	{0xc29e, &op_not,	  6,   3, 255, 0xff, 0x00, 0x00, 0x04}, // not g d  
	{0xc29f, &op_not,	  7,   3, 255, 0xff, 0x00, 0x00, 0x04}, // not h d  
	{0xc2a0, &op_not,	  0,   4, 255, 0xff, 0x00, 0x00, 0x04}, // not a e  
	{0xc2a1, &op_not,	  1,   4, 255, 0xff, 0x00, 0x00, 0x04}, // not b e  
	{0xc2a2, &op_not,	  2,   4, 255, 0xff, 0x00, 0x00, 0x04}, // not c e  
	{0xc2a3, &op_not,	  3,   4, 255, 0xff, 0x00, 0x00, 0x04}, // not d e  
	{0xc2a4, &op_not,	  4,   4, 255, 0xff, 0x00, 0x00, 0x04}, // not e e  
	{0xc2a5, &op_not,	  5,   4, 255, 0xff, 0x00, 0x00, 0x04}, // not f e  
	{0xc2a6, &op_not,	  6,   4, 255, 0xff, 0x00, 0x00, 0x04}, // not g e  
	{0xc2a7, &op_not,	  7,   4, 255, 0xff, 0x00, 0x00, 0x04}, // not h e  
	{0xc2a8, &op_not,	  0,   5, 255, 0xff, 0x00, 0x00, 0x04}, // not a f  
	{0xc2a9, &op_not,	  1,   5, 255, 0xff, 0x00, 0x00, 0x04}, // not b f  
	{0xc2aa, &op_not,	  2,   5, 255, 0xff, 0x00, 0x00, 0x04}, // not c f  
	{0xc2ab, &op_not,	  3,   5, 255, 0xff, 0x00, 0x00, 0x04}, // not d f  
	{0xc2ac, &op_not,	  4,   5, 255, 0xff, 0x00, 0x00, 0x04}, // not e f  
	{0xc2ad, &op_not,	  5,   5, 255, 0xff, 0x00, 0x00, 0x04}, // not f f  
	{0xc2ae, &op_not,	  6,   5, 255, 0xff, 0x00, 0x00, 0x04}, // not g f  
	{0xc2af, &op_not,	  7,   5, 255, 0xff, 0x00, 0x00, 0x04}, // not h f  
	{0xc2b0, &op_not,	  0,   6, 255, 0xff, 0x00, 0x00, 0x04}, // not a g  
	{0xc2b1, &op_not,	  1,   6, 255, 0xff, 0x00, 0x00, 0x04}, // not b g  
	{0xc2b2, &op_not,	  2,   6, 255, 0xff, 0x00, 0x00, 0x04}, // not c g  
	{0xc2b3, &op_not,	  3,   6, 255, 0xff, 0x00, 0x00, 0x04}, // not d g  
	{0xc2b4, &op_not,	  4,   6, 255, 0xff, 0x00, 0x00, 0x04}, // not e g  
	{0xc2b5, &op_not,	  5,   6, 255, 0xff, 0x00, 0x00, 0x04}, // not f g  
	{0xc2b6, &op_not,	  6,   6, 255, 0xff, 0x00, 0x00, 0x04}, // not g g  
	{0xc2b7, &op_not,	  7,   6, 255, 0xff, 0x00, 0x00, 0x04}, // not h g  
	{0xc2b8, &op_not,	  0,   7, 255, 0xff, 0x00, 0x00, 0x04}, // not a h  
	{0xc2b9, &op_not,	  1,   7, 255, 0xff, 0x00, 0x00, 0x04}, // not b h  
	{0xc2ba, &op_not,	  2,   7, 255, 0xff, 0x00, 0x00, 0x04}, // not c h  
	{0xc2bb, &op_not,	  3,   7, 255, 0xff, 0x00, 0x00, 0x04}, // not d h  
	{0xc2bc, &op_not,	  4,   7, 255, 0xff, 0x00, 0x00, 0x04}, // not e h  
	{0xc2bd, &op_not,	  5,   7, 255, 0xff, 0x00, 0x00, 0x04}, // not f h  
	{0xc2be, &op_not,	  6,   7, 255, 0xff, 0x00, 0x00, 0x04}, // not g h  
	{0xc2bf, &op_not,	  7,   7, 255, 0xff, 0x00, 0x00, 0x04}, // not h h  
	{0xc300, &op_not,	  0,   0, 255, 0xff, 0x01, 0x00, 0x01}, // not.wr a a  
	{0xc301, &op_not,	  1,   0, 255, 0xff, 0x01, 0x00, 0x01}, // not.wr b a  
	{0xc302, &op_not,	  2,   0, 255, 0xff, 0x01, 0x00, 0x01}, // not.wr c a  
	{0xc303, &op_not,	  3,   0, 255, 0xff, 0x01, 0x00, 0x01}, // not.wr d a  
	{0xc304, &op_not,	  4,   0, 255, 0xff, 0x01, 0x00, 0x01}, // not.wr e a  
	{0xc305, &op_not,	  5,   0, 255, 0xff, 0x01, 0x00, 0x01}, // not.wr f a  
	{0xc306, &op_not,	  6,   0, 255, 0xff, 0x01, 0x00, 0x01}, // not.wr g a  
	{0xc307, &op_not,	  7,   0, 255, 0xff, 0x01, 0x00, 0x01}, // not.wr h a  
	{0xc308, &op_not,	  0,   1, 255, 0xff, 0x01, 0x00, 0x01}, // not.wr a b  
	{0xc309, &op_not,	  1,   1, 255, 0xff, 0x01, 0x00, 0x01}, // not.wr b b  
	{0xc30a, &op_not,	  2,   1, 255, 0xff, 0x01, 0x00, 0x01}, // not.wr c b  
	{0xc30b, &op_not,	  3,   1, 255, 0xff, 0x01, 0x00, 0x01}, // not.wr d b  
	{0xc30c, &op_not,	  4,   1, 255, 0xff, 0x01, 0x00, 0x01}, // not.wr e b  
	{0xc30d, &op_not,	  5,   1, 255, 0xff, 0x01, 0x00, 0x01}, // not.wr f b  
	{0xc30e, &op_not,	  6,   1, 255, 0xff, 0x01, 0x00, 0x01}, // not.wr g b  
	{0xc30f, &op_not,	  7,   1, 255, 0xff, 0x01, 0x00, 0x01}, // not.wr h b  
	{0xc310, &op_not,	  0,   2, 255, 0xff, 0x01, 0x00, 0x01}, // not.wr a c  
	{0xc311, &op_not,	  1,   2, 255, 0xff, 0x01, 0x00, 0x01}, // not.wr b c  
	{0xc312, &op_not,	  2,   2, 255, 0xff, 0x01, 0x00, 0x01}, // not.wr c c  
	{0xc313, &op_not,	  3,   2, 255, 0xff, 0x01, 0x00, 0x01}, // not.wr d c  
	{0xc314, &op_not,	  4,   2, 255, 0xff, 0x01, 0x00, 0x01}, // not.wr e c  
	{0xc315, &op_not,	  5,   2, 255, 0xff, 0x01, 0x00, 0x01}, // not.wr f c  
	{0xc316, &op_not,	  6,   2, 255, 0xff, 0x01, 0x00, 0x01}, // not.wr g c  
	{0xc317, &op_not,	  7,   2, 255, 0xff, 0x01, 0x00, 0x01}, // not.wr h c  
	{0xc318, &op_not,	  0,   3, 255, 0xff, 0x01, 0x00, 0x01}, // not.wr a d  
	{0xc319, &op_not,	  1,   3, 255, 0xff, 0x01, 0x00, 0x01}, // not.wr b d  
	{0xc31a, &op_not,	  2,   3, 255, 0xff, 0x01, 0x00, 0x01}, // not.wr c d  
	{0xc31b, &op_not,	  3,   3, 255, 0xff, 0x01, 0x00, 0x01}, // not.wr d d  
	{0xc31c, &op_not,	  4,   3, 255, 0xff, 0x01, 0x00, 0x01}, // not.wr e d  
	{0xc31d, &op_not,	  5,   3, 255, 0xff, 0x01, 0x00, 0x01}, // not.wr f d  
	{0xc31e, &op_not,	  6,   3, 255, 0xff, 0x01, 0x00, 0x01}, // not.wr g d  
	{0xc31f, &op_not,	  7,   3, 255, 0xff, 0x01, 0x00, 0x01}, // not.wr h d  
	{0xc320, &op_not,	  0,   4, 255, 0xff, 0x01, 0x00, 0x01}, // not.wr a e  
	{0xc321, &op_not,	  1,   4, 255, 0xff, 0x01, 0x00, 0x01}, // not.wr b e  
	{0xc322, &op_not,	  2,   4, 255, 0xff, 0x01, 0x00, 0x01}, // not.wr c e  
	{0xc323, &op_not,	  3,   4, 255, 0xff, 0x01, 0x00, 0x01}, // not.wr d e  
	{0xc324, &op_not,	  4,   4, 255, 0xff, 0x01, 0x00, 0x01}, // not.wr e e  
	{0xc325, &op_not,	  5,   4, 255, 0xff, 0x01, 0x00, 0x01}, // not.wr f e  
	{0xc326, &op_not,	  6,   4, 255, 0xff, 0x01, 0x00, 0x01}, // not.wr g e  
	{0xc327, &op_not,	  7,   4, 255, 0xff, 0x01, 0x00, 0x01}, // not.wr h e  
	{0xc328, &op_not,	  0,   5, 255, 0xff, 0x01, 0x00, 0x01}, // not.wr a f  
	{0xc329, &op_not,	  1,   5, 255, 0xff, 0x01, 0x00, 0x01}, // not.wr b f  
	{0xc32a, &op_not,	  2,   5, 255, 0xff, 0x01, 0x00, 0x01}, // not.wr c f  
	{0xc32b, &op_not,	  3,   5, 255, 0xff, 0x01, 0x00, 0x01}, // not.wr d f  
	{0xc32c, &op_not,	  4,   5, 255, 0xff, 0x01, 0x00, 0x01}, // not.wr e f  
	{0xc32d, &op_not,	  5,   5, 255, 0xff, 0x01, 0x00, 0x01}, // not.wr f f  
	{0xc32e, &op_not,	  6,   5, 255, 0xff, 0x01, 0x00, 0x01}, // not.wr g f  
	{0xc32f, &op_not,	  7,   5, 255, 0xff, 0x01, 0x00, 0x01}, // not.wr h f  
	{0xc330, &op_not,	  0,   6, 255, 0xff, 0x01, 0x00, 0x01}, // not.wr a g  
	{0xc331, &op_not,	  1,   6, 255, 0xff, 0x01, 0x00, 0x01}, // not.wr b g  
	{0xc332, &op_not,	  2,   6, 255, 0xff, 0x01, 0x00, 0x01}, // not.wr c g  
	{0xc333, &op_not,	  3,   6, 255, 0xff, 0x01, 0x00, 0x01}, // not.wr d g  
	{0xc334, &op_not,	  4,   6, 255, 0xff, 0x01, 0x00, 0x01}, // not.wr e g  
	{0xc335, &op_not,	  5,   6, 255, 0xff, 0x01, 0x00, 0x01}, // not.wr f g  
	{0xc336, &op_not,	  6,   6, 255, 0xff, 0x01, 0x00, 0x01}, // not.wr g g  
	{0xc337, &op_not,	  7,   6, 255, 0xff, 0x01, 0x00, 0x01}, // not.wr h g  
	{0xc338, &op_not,	  0,   7, 255, 0xff, 0x01, 0x00, 0x01}, // not.wr a h  
	{0xc339, &op_not,	  1,   7, 255, 0xff, 0x01, 0x00, 0x01}, // not.wr b h  
	{0xc33a, &op_not,	  2,   7, 255, 0xff, 0x01, 0x00, 0x01}, // not.wr c h  
	{0xc33b, &op_not,	  3,   7, 255, 0xff, 0x01, 0x00, 0x01}, // not.wr d h  
	{0xc33c, &op_not,	  4,   7, 255, 0xff, 0x01, 0x00, 0x01}, // not.wr e h  
	{0xc33d, &op_not,	  5,   7, 255, 0xff, 0x01, 0x00, 0x01}, // not.wr f h  
	{0xc33e, &op_not,	  6,   7, 255, 0xff, 0x01, 0x00, 0x01}, // not.wr g h  
	{0xc33f, &op_not,	  7,   7, 255, 0xff, 0x01, 0x00, 0x01}, // not.wr h h  
	{0xc340, &op_not,	  0,   0, 255, 0xff, 0x01, 0x00, 0x02}, // not.dr a a  
	{0xc341, &op_not,	  1,   0, 255, 0xff, 0x01, 0x00, 0x02}, // not.dr b a  
	{0xc342, &op_not,	  2,   0, 255, 0xff, 0x01, 0x00, 0x02}, // not.dr c a  
	{0xc343, &op_not,	  3,   0, 255, 0xff, 0x01, 0x00, 0x02}, // not.dr d a  
	{0xc344, &op_not,	  4,   0, 255, 0xff, 0x01, 0x00, 0x02}, // not.dr e a  
	{0xc345, &op_not,	  5,   0, 255, 0xff, 0x01, 0x00, 0x02}, // not.dr f a  
	{0xc346, &op_not,	  6,   0, 255, 0xff, 0x01, 0x00, 0x02}, // not.dr g a  
	{0xc347, &op_not,	  7,   0, 255, 0xff, 0x01, 0x00, 0x02}, // not.dr h a  
	{0xc348, &op_not,	  0,   1, 255, 0xff, 0x01, 0x00, 0x02}, // not.dr a b  
	{0xc349, &op_not,	  1,   1, 255, 0xff, 0x01, 0x00, 0x02}, // not.dr b b  
	{0xc34a, &op_not,	  2,   1, 255, 0xff, 0x01, 0x00, 0x02}, // not.dr c b  
	{0xc34b, &op_not,	  3,   1, 255, 0xff, 0x01, 0x00, 0x02}, // not.dr d b  
	{0xc34c, &op_not,	  4,   1, 255, 0xff, 0x01, 0x00, 0x02}, // not.dr e b  
	{0xc34d, &op_not,	  5,   1, 255, 0xff, 0x01, 0x00, 0x02}, // not.dr f b  
	{0xc34e, &op_not,	  6,   1, 255, 0xff, 0x01, 0x00, 0x02}, // not.dr g b  
	{0xc34f, &op_not,	  7,   1, 255, 0xff, 0x01, 0x00, 0x02}, // not.dr h b  
	{0xc350, &op_not,	  0,   2, 255, 0xff, 0x01, 0x00, 0x02}, // not.dr a c  
	{0xc351, &op_not,	  1,   2, 255, 0xff, 0x01, 0x00, 0x02}, // not.dr b c  
	{0xc352, &op_not,	  2,   2, 255, 0xff, 0x01, 0x00, 0x02}, // not.dr c c  
	{0xc353, &op_not,	  3,   2, 255, 0xff, 0x01, 0x00, 0x02}, // not.dr d c  
	{0xc354, &op_not,	  4,   2, 255, 0xff, 0x01, 0x00, 0x02}, // not.dr e c  
	{0xc355, &op_not,	  5,   2, 255, 0xff, 0x01, 0x00, 0x02}, // not.dr f c  
	{0xc356, &op_not,	  6,   2, 255, 0xff, 0x01, 0x00, 0x02}, // not.dr g c  
	{0xc357, &op_not,	  7,   2, 255, 0xff, 0x01, 0x00, 0x02}, // not.dr h c  
	{0xc358, &op_not,	  0,   3, 255, 0xff, 0x01, 0x00, 0x02}, // not.dr a d  
	{0xc359, &op_not,	  1,   3, 255, 0xff, 0x01, 0x00, 0x02}, // not.dr b d  
	{0xc35a, &op_not,	  2,   3, 255, 0xff, 0x01, 0x00, 0x02}, // not.dr c d  
	{0xc35b, &op_not,	  3,   3, 255, 0xff, 0x01, 0x00, 0x02}, // not.dr d d  
	{0xc35c, &op_not,	  4,   3, 255, 0xff, 0x01, 0x00, 0x02}, // not.dr e d  
	{0xc35d, &op_not,	  5,   3, 255, 0xff, 0x01, 0x00, 0x02}, // not.dr f d  
	{0xc35e, &op_not,	  6,   3, 255, 0xff, 0x01, 0x00, 0x02}, // not.dr g d  
	{0xc35f, &op_not,	  7,   3, 255, 0xff, 0x01, 0x00, 0x02}, // not.dr h d  
	{0xc360, &op_not,	  0,   4, 255, 0xff, 0x01, 0x00, 0x02}, // not.dr a e  
	{0xc361, &op_not,	  1,   4, 255, 0xff, 0x01, 0x00, 0x02}, // not.dr b e  
	{0xc362, &op_not,	  2,   4, 255, 0xff, 0x01, 0x00, 0x02}, // not.dr c e  
	{0xc363, &op_not,	  3,   4, 255, 0xff, 0x01, 0x00, 0x02}, // not.dr d e  
	{0xc364, &op_not,	  4,   4, 255, 0xff, 0x01, 0x00, 0x02}, // not.dr e e  
	{0xc365, &op_not,	  5,   4, 255, 0xff, 0x01, 0x00, 0x02}, // not.dr f e  
	{0xc366, &op_not,	  6,   4, 255, 0xff, 0x01, 0x00, 0x02}, // not.dr g e  
	{0xc367, &op_not,	  7,   4, 255, 0xff, 0x01, 0x00, 0x02}, // not.dr h e  
	{0xc368, &op_not,	  0,   5, 255, 0xff, 0x01, 0x00, 0x02}, // not.dr a f  
	{0xc369, &op_not,	  1,   5, 255, 0xff, 0x01, 0x00, 0x02}, // not.dr b f  
	{0xc36a, &op_not,	  2,   5, 255, 0xff, 0x01, 0x00, 0x02}, // not.dr c f  
	{0xc36b, &op_not,	  3,   5, 255, 0xff, 0x01, 0x00, 0x02}, // not.dr d f  
	{0xc36c, &op_not,	  4,   5, 255, 0xff, 0x01, 0x00, 0x02}, // not.dr e f  
	{0xc36d, &op_not,	  5,   5, 255, 0xff, 0x01, 0x00, 0x02}, // not.dr f f  
	{0xc36e, &op_not,	  6,   5, 255, 0xff, 0x01, 0x00, 0x02}, // not.dr g f  
	{0xc36f, &op_not,	  7,   5, 255, 0xff, 0x01, 0x00, 0x02}, // not.dr h f  
	{0xc370, &op_not,	  0,   6, 255, 0xff, 0x01, 0x00, 0x02}, // not.dr a g  
	{0xc371, &op_not,	  1,   6, 255, 0xff, 0x01, 0x00, 0x02}, // not.dr b g  
	{0xc372, &op_not,	  2,   6, 255, 0xff, 0x01, 0x00, 0x02}, // not.dr c g  
	{0xc373, &op_not,	  3,   6, 255, 0xff, 0x01, 0x00, 0x02}, // not.dr d g  
	{0xc374, &op_not,	  4,   6, 255, 0xff, 0x01, 0x00, 0x02}, // not.dr e g  
	{0xc375, &op_not,	  5,   6, 255, 0xff, 0x01, 0x00, 0x02}, // not.dr f g  
	{0xc376, &op_not,	  6,   6, 255, 0xff, 0x01, 0x00, 0x02}, // not.dr g g  
	{0xc377, &op_not,	  7,   6, 255, 0xff, 0x01, 0x00, 0x02}, // not.dr h g  
	{0xc378, &op_not,	  0,   7, 255, 0xff, 0x01, 0x00, 0x02}, // not.dr a h  
	{0xc379, &op_not,	  1,   7, 255, 0xff, 0x01, 0x00, 0x02}, // not.dr b h  
	{0xc37a, &op_not,	  2,   7, 255, 0xff, 0x01, 0x00, 0x02}, // not.dr c h  
	{0xc37b, &op_not,	  3,   7, 255, 0xff, 0x01, 0x00, 0x02}, // not.dr d h  
	{0xc37c, &op_not,	  4,   7, 255, 0xff, 0x01, 0x00, 0x02}, // not.dr e h  
	{0xc37d, &op_not,	  5,   7, 255, 0xff, 0x01, 0x00, 0x02}, // not.dr f h  
	{0xc37e, &op_not,	  6,   7, 255, 0xff, 0x01, 0x00, 0x02}, // not.dr g h  
	{0xc37f, &op_not,	  7,   7, 255, 0xff, 0x01, 0x00, 0x02}, // not.dr h h  
	{0xc380, &op_not,	  0,   0, 255, 0xff, 0x01, 0x00, 0x04}, // not.r a a  
	{0xc381, &op_not,	  1,   0, 255, 0xff, 0x01, 0x00, 0x04}, // not.r b a  
	{0xc382, &op_not,	  2,   0, 255, 0xff, 0x01, 0x00, 0x04}, // not.r c a  
	{0xc383, &op_not,	  3,   0, 255, 0xff, 0x01, 0x00, 0x04}, // not.r d a  
	{0xc384, &op_not,	  4,   0, 255, 0xff, 0x01, 0x00, 0x04}, // not.r e a  
	{0xc385, &op_not,	  5,   0, 255, 0xff, 0x01, 0x00, 0x04}, // not.r f a  
	{0xc386, &op_not,	  6,   0, 255, 0xff, 0x01, 0x00, 0x04}, // not.r g a  
	{0xc387, &op_not,	  7,   0, 255, 0xff, 0x01, 0x00, 0x04}, // not.r h a  
	{0xc388, &op_not,	  0,   1, 255, 0xff, 0x01, 0x00, 0x04}, // not.r a b  
	{0xc389, &op_not,	  1,   1, 255, 0xff, 0x01, 0x00, 0x04}, // not.r b b  
	{0xc38a, &op_not,	  2,   1, 255, 0xff, 0x01, 0x00, 0x04}, // not.r c b  
	{0xc38b, &op_not,	  3,   1, 255, 0xff, 0x01, 0x00, 0x04}, // not.r d b  
	{0xc38c, &op_not,	  4,   1, 255, 0xff, 0x01, 0x00, 0x04}, // not.r e b  
	{0xc38d, &op_not,	  5,   1, 255, 0xff, 0x01, 0x00, 0x04}, // not.r f b  
	{0xc38e, &op_not,	  6,   1, 255, 0xff, 0x01, 0x00, 0x04}, // not.r g b  
	{0xc38f, &op_not,	  7,   1, 255, 0xff, 0x01, 0x00, 0x04}, // not.r h b  
	{0xc390, &op_not,	  0,   2, 255, 0xff, 0x01, 0x00, 0x04}, // not.r a c  
	{0xc391, &op_not,	  1,   2, 255, 0xff, 0x01, 0x00, 0x04}, // not.r b c  
	{0xc392, &op_not,	  2,   2, 255, 0xff, 0x01, 0x00, 0x04}, // not.r c c  
	{0xc393, &op_not,	  3,   2, 255, 0xff, 0x01, 0x00, 0x04}, // not.r d c  
	{0xc394, &op_not,	  4,   2, 255, 0xff, 0x01, 0x00, 0x04}, // not.r e c  
	{0xc395, &op_not,	  5,   2, 255, 0xff, 0x01, 0x00, 0x04}, // not.r f c  
	{0xc396, &op_not,	  6,   2, 255, 0xff, 0x01, 0x00, 0x04}, // not.r g c  
	{0xc397, &op_not,	  7,   2, 255, 0xff, 0x01, 0x00, 0x04}, // not.r h c  
	{0xc398, &op_not,	  0,   3, 255, 0xff, 0x01, 0x00, 0x04}, // not.r a d  
	{0xc399, &op_not,	  1,   3, 255, 0xff, 0x01, 0x00, 0x04}, // not.r b d  
	{0xc39a, &op_not,	  2,   3, 255, 0xff, 0x01, 0x00, 0x04}, // not.r c d  
	{0xc39b, &op_not,	  3,   3, 255, 0xff, 0x01, 0x00, 0x04}, // not.r d d  
	{0xc39c, &op_not,	  4,   3, 255, 0xff, 0x01, 0x00, 0x04}, // not.r e d  
	{0xc39d, &op_not,	  5,   3, 255, 0xff, 0x01, 0x00, 0x04}, // not.r f d  
	{0xc39e, &op_not,	  6,   3, 255, 0xff, 0x01, 0x00, 0x04}, // not.r g d  
	{0xc39f, &op_not,	  7,   3, 255, 0xff, 0x01, 0x00, 0x04}, // not.r h d  
	{0xc3a0, &op_not,	  0,   4, 255, 0xff, 0x01, 0x00, 0x04}, // not.r a e  
	{0xc3a1, &op_not,	  1,   4, 255, 0xff, 0x01, 0x00, 0x04}, // not.r b e  
	{0xc3a2, &op_not,	  2,   4, 255, 0xff, 0x01, 0x00, 0x04}, // not.r c e  
	{0xc3a3, &op_not,	  3,   4, 255, 0xff, 0x01, 0x00, 0x04}, // not.r d e  
	{0xc3a4, &op_not,	  4,   4, 255, 0xff, 0x01, 0x00, 0x04}, // not.r e e  
	{0xc3a5, &op_not,	  5,   4, 255, 0xff, 0x01, 0x00, 0x04}, // not.r f e  
	{0xc3a6, &op_not,	  6,   4, 255, 0xff, 0x01, 0x00, 0x04}, // not.r g e  
	{0xc3a7, &op_not,	  7,   4, 255, 0xff, 0x01, 0x00, 0x04}, // not.r h e  
	{0xc3a8, &op_not,	  0,   5, 255, 0xff, 0x01, 0x00, 0x04}, // not.r a f  
	{0xc3a9, &op_not,	  1,   5, 255, 0xff, 0x01, 0x00, 0x04}, // not.r b f  
	{0xc3aa, &op_not,	  2,   5, 255, 0xff, 0x01, 0x00, 0x04}, // not.r c f  
	{0xc3ab, &op_not,	  3,   5, 255, 0xff, 0x01, 0x00, 0x04}, // not.r d f  
	{0xc3ac, &op_not,	  4,   5, 255, 0xff, 0x01, 0x00, 0x04}, // not.r e f  
	{0xc3ad, &op_not,	  5,   5, 255, 0xff, 0x01, 0x00, 0x04}, // not.r f f  
	{0xc3ae, &op_not,	  6,   5, 255, 0xff, 0x01, 0x00, 0x04}, // not.r g f  
	{0xc3af, &op_not,	  7,   5, 255, 0xff, 0x01, 0x00, 0x04}, // not.r h f  
	{0xc3b0, &op_not,	  0,   6, 255, 0xff, 0x01, 0x00, 0x04}, // not.r a g  
	{0xc3b1, &op_not,	  1,   6, 255, 0xff, 0x01, 0x00, 0x04}, // not.r b g  
	{0xc3b2, &op_not,	  2,   6, 255, 0xff, 0x01, 0x00, 0x04}, // not.r c g  
	{0xc3b3, &op_not,	  3,   6, 255, 0xff, 0x01, 0x00, 0x04}, // not.r d g  
	{0xc3b4, &op_not,	  4,   6, 255, 0xff, 0x01, 0x00, 0x04}, // not.r e g  
	{0xc3b5, &op_not,	  5,   6, 255, 0xff, 0x01, 0x00, 0x04}, // not.r f g  
	{0xc3b6, &op_not,	  6,   6, 255, 0xff, 0x01, 0x00, 0x04}, // not.r g g  
	{0xc3b7, &op_not,	  7,   6, 255, 0xff, 0x01, 0x00, 0x04}, // not.r h g  
	{0xc3b8, &op_not,	  0,   7, 255, 0xff, 0x01, 0x00, 0x04}, // not.r a h  
	{0xc3b9, &op_not,	  1,   7, 255, 0xff, 0x01, 0x00, 0x04}, // not.r b h  
	{0xc3ba, &op_not,	  2,   7, 255, 0xff, 0x01, 0x00, 0x04}, // not.r c h  
	{0xc3bb, &op_not,	  3,   7, 255, 0xff, 0x01, 0x00, 0x04}, // not.r d h  
	{0xc3bc, &op_not,	  4,   7, 255, 0xff, 0x01, 0x00, 0x04}, // not.r e h  
	{0xc3bd, &op_not,	  5,   7, 255, 0xff, 0x01, 0x00, 0x04}, // not.r f h  
	{0xc3be, &op_not,	  6,   7, 255, 0xff, 0x01, 0x00, 0x04}, // not.r g h  
	{0xc3bf, &op_not,	  7,   7, 255, 0xff, 0x01, 0x00, 0x04}, // not.r h h  
	{0xc2c8, &op_not,	  0,   8, 255, 0xff, 0x00, 0x01, 0x01}, // not.wi a <literal>  
	{0xc2c9, &op_not,	  1,   8, 255, 0xff, 0x00, 0x01, 0x01}, // not.wi b <literal>  
	{0xc2ca, &op_not,	  2,   8, 255, 0xff, 0x00, 0x01, 0x01}, // not.wi c <literal>  
	{0xc2cb, &op_not,	  3,   8, 255, 0xff, 0x00, 0x01, 0x01}, // not.wi d <literal>  
	{0xc2cc, &op_not,	  4,   8, 255, 0xff, 0x00, 0x01, 0x01}, // not.wi e <literal>  
	{0xc2cd, &op_not,	  5,   8, 255, 0xff, 0x00, 0x01, 0x01}, // not.wi f <literal>  
	{0xc2ce, &op_not,	  6,   8, 255, 0xff, 0x00, 0x01, 0x01}, // not.wi g <literal>  
	{0xc2cf, &op_not,	  7,   8, 255, 0xff, 0x00, 0x01, 0x01}, // not.wi h <literal>  
	{0xc2d0, &op_not,	  0,   8, 255, 0xff, 0x00, 0x02, 0x02}, // not.di a <literal>  
	{0xc2d1, &op_not,	  1,   8, 255, 0xff, 0x00, 0x02, 0x02}, // not.di b <literal>  
	{0xc2d2, &op_not,	  2,   8, 255, 0xff, 0x00, 0x02, 0x02}, // not.di c <literal>  
	{0xc2d3, &op_not,	  3,   8, 255, 0xff, 0x00, 0x02, 0x02}, // not.di d <literal>  
	{0xc2d4, &op_not,	  4,   8, 255, 0xff, 0x00, 0x02, 0x02}, // not.di e <literal>  
	{0xc2d5, &op_not,	  5,   8, 255, 0xff, 0x00, 0x02, 0x02}, // not.di f <literal>  
	{0xc2d6, &op_not,	  6,   8, 255, 0xff, 0x00, 0x02, 0x02}, // not.di g <literal>  
	{0xc2d7, &op_not,	  7,   8, 255, 0xff, 0x00, 0x02, 0x02}, // not.di h <literal>  
	{0xc2e0, &op_not,	  0,   8, 255, 0xff, 0x00, 0x04, 0x04}, // not.i a <literal>  
	{0xc2e1, &op_not,	  1,   8, 255, 0xff, 0x00, 0x04, 0x04}, // not.i b <literal>  
	{0xc2e2, &op_not,	  2,   8, 255, 0xff, 0x00, 0x04, 0x04}, // not.i c <literal>  
	{0xc2e3, &op_not,	  3,   8, 255, 0xff, 0x00, 0x04, 0x04}, // not.i d <literal>  
	{0xc2e4, &op_not,	  4,   8, 255, 0xff, 0x00, 0x04, 0x04}, // not.i e <literal>  
	{0xc2e5, &op_not,	  5,   8, 255, 0xff, 0x00, 0x04, 0x04}, // not.i f <literal>  
	{0xc2e6, &op_not,	  6,   8, 255, 0xff, 0x00, 0x04, 0x04}, // not.i g <literal>  
	{0xc2e7, &op_not,	  7,   8, 255, 0xff, 0x00, 0x04, 0x04}, // not.i h <literal>  
	{0xc3c8, &op_not,	  0,   8, 255, 0xff, 0x01, 0x04, 0x01}, // not.wri a <literal>  
	{0xc3c9, &op_not,	  1,   8, 255, 0xff, 0x01, 0x04, 0x01}, // not.wri b <literal>  
	{0xc3ca, &op_not,	  2,   8, 255, 0xff, 0x01, 0x04, 0x01}, // not.wri c <literal>  
	{0xc3cb, &op_not,	  3,   8, 255, 0xff, 0x01, 0x04, 0x01}, // not.wri d <literal>  
	{0xc3cc, &op_not,	  4,   8, 255, 0xff, 0x01, 0x04, 0x01}, // not.wri e <literal>  
	{0xc3cd, &op_not,	  5,   8, 255, 0xff, 0x01, 0x04, 0x01}, // not.wri f <literal>  
	{0xc3ce, &op_not,	  6,   8, 255, 0xff, 0x01, 0x04, 0x01}, // not.wri g <literal>  
	{0xc3cf, &op_not,	  7,   8, 255, 0xff, 0x01, 0x04, 0x01}, // not.wri h <literal>  
	{0xc3d0, &op_not,	  0,   8, 255, 0xff, 0x01, 0x04, 0x02}, // not.dri a <literal>  
	{0xc3d1, &op_not,	  1,   8, 255, 0xff, 0x01, 0x04, 0x02}, // not.dri b <literal>  
	{0xc3d2, &op_not,	  2,   8, 255, 0xff, 0x01, 0x04, 0x02}, // not.dri c <literal>  
	{0xc3d3, &op_not,	  3,   8, 255, 0xff, 0x01, 0x04, 0x02}, // not.dri d <literal>  
	{0xc3d4, &op_not,	  4,   8, 255, 0xff, 0x01, 0x04, 0x02}, // not.dri e <literal>  
	{0xc3d5, &op_not,	  5,   8, 255, 0xff, 0x01, 0x04, 0x02}, // not.dri f <literal>  
	{0xc3d6, &op_not,	  6,   8, 255, 0xff, 0x01, 0x04, 0x02}, // not.dri g <literal>  
	{0xc3d7, &op_not,	  7,   8, 255, 0xff, 0x01, 0x04, 0x02}, // not.dri h <literal>  
	{0xc3e0, &op_not,	  0,   8, 255, 0xff, 0x01, 0x04, 0x04}, // not.ri a <literal>  
	{0xc3e1, &op_not,	  1,   8, 255, 0xff, 0x01, 0x04, 0x04}, // not.ri b <literal>  
	{0xc3e2, &op_not,	  2,   8, 255, 0xff, 0x01, 0x04, 0x04}, // not.ri c <literal>  
	{0xc3e3, &op_not,	  3,   8, 255, 0xff, 0x01, 0x04, 0x04}, // not.ri d <literal>  
	{0xc3e4, &op_not,	  4,   8, 255, 0xff, 0x01, 0x04, 0x04}, // not.ri e <literal>  
	{0xc3e5, &op_not,	  5,   8, 255, 0xff, 0x01, 0x04, 0x04}, // not.ri f <literal>  
	{0xc3e6, &op_not,	  6,   8, 255, 0xff, 0x01, 0x04, 0x04}, // not.ri g <literal>  
	{0xc3e7, &op_not,	  7,   8, 255, 0xff, 0x01, 0x04, 0x04}, // not.ri h <literal>  
	{0xc400, &op_xor,	  0,   0, 255, 0xff, 0x00, 0x00, 0x01}, // xor.w a a  
	{0xc401, &op_xor,	  1,   0, 255, 0xff, 0x00, 0x00, 0x01}, // xor.w b a  
	{0xc402, &op_xor,	  2,   0, 255, 0xff, 0x00, 0x00, 0x01}, // xor.w c a  
	{0xc403, &op_xor,	  3,   0, 255, 0xff, 0x00, 0x00, 0x01}, // xor.w d a  
	{0xc404, &op_xor,	  4,   0, 255, 0xff, 0x00, 0x00, 0x01}, // xor.w e a  
	{0xc405, &op_xor,	  5,   0, 255, 0xff, 0x00, 0x00, 0x01}, // xor.w f a  
	{0xc406, &op_xor,	  6,   0, 255, 0xff, 0x00, 0x00, 0x01}, // xor.w g a  
	{0xc407, &op_xor,	  7,   0, 255, 0xff, 0x00, 0x00, 0x01}, // xor.w h a  
	{0xc408, &op_xor,	  0,   1, 255, 0xff, 0x00, 0x00, 0x01}, // xor.w a b  
	{0xc409, &op_xor,	  1,   1, 255, 0xff, 0x00, 0x00, 0x01}, // xor.w b b  
	{0xc40a, &op_xor,	  2,   1, 255, 0xff, 0x00, 0x00, 0x01}, // xor.w c b  
	{0xc40b, &op_xor,	  3,   1, 255, 0xff, 0x00, 0x00, 0x01}, // xor.w d b  
	{0xc40c, &op_xor,	  4,   1, 255, 0xff, 0x00, 0x00, 0x01}, // xor.w e b  
	{0xc40d, &op_xor,	  5,   1, 255, 0xff, 0x00, 0x00, 0x01}, // xor.w f b  
	{0xc40e, &op_xor,	  6,   1, 255, 0xff, 0x00, 0x00, 0x01}, // xor.w g b  
	{0xc40f, &op_xor,	  7,   1, 255, 0xff, 0x00, 0x00, 0x01}, // xor.w h b  
	{0xc410, &op_xor,	  0,   2, 255, 0xff, 0x00, 0x00, 0x01}, // xor.w a c  
	{0xc411, &op_xor,	  1,   2, 255, 0xff, 0x00, 0x00, 0x01}, // xor.w b c  
	{0xc412, &op_xor,	  2,   2, 255, 0xff, 0x00, 0x00, 0x01}, // xor.w c c  
	{0xc413, &op_xor,	  3,   2, 255, 0xff, 0x00, 0x00, 0x01}, // xor.w d c  
	{0xc414, &op_xor,	  4,   2, 255, 0xff, 0x00, 0x00, 0x01}, // xor.w e c  
	{0xc415, &op_xor,	  5,   2, 255, 0xff, 0x00, 0x00, 0x01}, // xor.w f c  
	{0xc416, &op_xor,	  6,   2, 255, 0xff, 0x00, 0x00, 0x01}, // xor.w g c  
	{0xc417, &op_xor,	  7,   2, 255, 0xff, 0x00, 0x00, 0x01}, // xor.w h c  
	{0xc418, &op_xor,	  0,   3, 255, 0xff, 0x00, 0x00, 0x01}, // xor.w a d  
	{0xc419, &op_xor,	  1,   3, 255, 0xff, 0x00, 0x00, 0x01}, // xor.w b d  
	{0xc41a, &op_xor,	  2,   3, 255, 0xff, 0x00, 0x00, 0x01}, // xor.w c d  
	{0xc41b, &op_xor,	  3,   3, 255, 0xff, 0x00, 0x00, 0x01}, // xor.w d d  
	{0xc41c, &op_xor,	  4,   3, 255, 0xff, 0x00, 0x00, 0x01}, // xor.w e d  
	{0xc41d, &op_xor,	  5,   3, 255, 0xff, 0x00, 0x00, 0x01}, // xor.w f d  
	{0xc41e, &op_xor,	  6,   3, 255, 0xff, 0x00, 0x00, 0x01}, // xor.w g d  
	{0xc41f, &op_xor,	  7,   3, 255, 0xff, 0x00, 0x00, 0x01}, // xor.w h d  
	{0xc420, &op_xor,	  0,   4, 255, 0xff, 0x00, 0x00, 0x01}, // xor.w a e  
	{0xc421, &op_xor,	  1,   4, 255, 0xff, 0x00, 0x00, 0x01}, // xor.w b e  
	{0xc422, &op_xor,	  2,   4, 255, 0xff, 0x00, 0x00, 0x01}, // xor.w c e  
	{0xc423, &op_xor,	  3,   4, 255, 0xff, 0x00, 0x00, 0x01}, // xor.w d e  
	{0xc424, &op_xor,	  4,   4, 255, 0xff, 0x00, 0x00, 0x01}, // xor.w e e  
	{0xc425, &op_xor,	  5,   4, 255, 0xff, 0x00, 0x00, 0x01}, // xor.w f e  
	{0xc426, &op_xor,	  6,   4, 255, 0xff, 0x00, 0x00, 0x01}, // xor.w g e  
	{0xc427, &op_xor,	  7,   4, 255, 0xff, 0x00, 0x00, 0x01}, // xor.w h e  
	{0xc428, &op_xor,	  0,   5, 255, 0xff, 0x00, 0x00, 0x01}, // xor.w a f  
	{0xc429, &op_xor,	  1,   5, 255, 0xff, 0x00, 0x00, 0x01}, // xor.w b f  
	{0xc42a, &op_xor,	  2,   5, 255, 0xff, 0x00, 0x00, 0x01}, // xor.w c f  
	{0xc42b, &op_xor,	  3,   5, 255, 0xff, 0x00, 0x00, 0x01}, // xor.w d f  
	{0xc42c, &op_xor,	  4,   5, 255, 0xff, 0x00, 0x00, 0x01}, // xor.w e f  
	{0xc42d, &op_xor,	  5,   5, 255, 0xff, 0x00, 0x00, 0x01}, // xor.w f f  
	{0xc42e, &op_xor,	  6,   5, 255, 0xff, 0x00, 0x00, 0x01}, // xor.w g f  
	{0xc42f, &op_xor,	  7,   5, 255, 0xff, 0x00, 0x00, 0x01}, // xor.w h f  
	{0xc430, &op_xor,	  0,   6, 255, 0xff, 0x00, 0x00, 0x01}, // xor.w a g  
	{0xc431, &op_xor,	  1,   6, 255, 0xff, 0x00, 0x00, 0x01}, // xor.w b g  
	{0xc432, &op_xor,	  2,   6, 255, 0xff, 0x00, 0x00, 0x01}, // xor.w c g  
	{0xc433, &op_xor,	  3,   6, 255, 0xff, 0x00, 0x00, 0x01}, // xor.w d g  
	{0xc434, &op_xor,	  4,   6, 255, 0xff, 0x00, 0x00, 0x01}, // xor.w e g  
	{0xc435, &op_xor,	  5,   6, 255, 0xff, 0x00, 0x00, 0x01}, // xor.w f g  
	{0xc436, &op_xor,	  6,   6, 255, 0xff, 0x00, 0x00, 0x01}, // xor.w g g  
	{0xc437, &op_xor,	  7,   6, 255, 0xff, 0x00, 0x00, 0x01}, // xor.w h g  
	{0xc438, &op_xor,	  0,   7, 255, 0xff, 0x00, 0x00, 0x01}, // xor.w a h  
	{0xc439, &op_xor,	  1,   7, 255, 0xff, 0x00, 0x00, 0x01}, // xor.w b h  
	{0xc43a, &op_xor,	  2,   7, 255, 0xff, 0x00, 0x00, 0x01}, // xor.w c h  
	{0xc43b, &op_xor,	  3,   7, 255, 0xff, 0x00, 0x00, 0x01}, // xor.w d h  
	{0xc43c, &op_xor,	  4,   7, 255, 0xff, 0x00, 0x00, 0x01}, // xor.w e h  
	{0xc43d, &op_xor,	  5,   7, 255, 0xff, 0x00, 0x00, 0x01}, // xor.w f h  
	{0xc43e, &op_xor,	  6,   7, 255, 0xff, 0x00, 0x00, 0x01}, // xor.w g h  
	{0xc43f, &op_xor,	  7,   7, 255, 0xff, 0x00, 0x00, 0x01}, // xor.w h h  
	{0xc440, &op_xor,	  0,   0, 255, 0xff, 0x00, 0x00, 0x02}, // xor.d a a  
	{0xc441, &op_xor,	  1,   0, 255, 0xff, 0x00, 0x00, 0x02}, // xor.d b a  
	{0xc442, &op_xor,	  2,   0, 255, 0xff, 0x00, 0x00, 0x02}, // xor.d c a  
	{0xc443, &op_xor,	  3,   0, 255, 0xff, 0x00, 0x00, 0x02}, // xor.d d a  
	{0xc444, &op_xor,	  4,   0, 255, 0xff, 0x00, 0x00, 0x02}, // xor.d e a  
	{0xc445, &op_xor,	  5,   0, 255, 0xff, 0x00, 0x00, 0x02}, // xor.d f a  
	{0xc446, &op_xor,	  6,   0, 255, 0xff, 0x00, 0x00, 0x02}, // xor.d g a  
	{0xc447, &op_xor,	  7,   0, 255, 0xff, 0x00, 0x00, 0x02}, // xor.d h a  
	{0xc448, &op_xor,	  0,   1, 255, 0xff, 0x00, 0x00, 0x02}, // xor.d a b  
	{0xc449, &op_xor,	  1,   1, 255, 0xff, 0x00, 0x00, 0x02}, // xor.d b b  
	{0xc44a, &op_xor,	  2,   1, 255, 0xff, 0x00, 0x00, 0x02}, // xor.d c b  
	{0xc44b, &op_xor,	  3,   1, 255, 0xff, 0x00, 0x00, 0x02}, // xor.d d b  
	{0xc44c, &op_xor,	  4,   1, 255, 0xff, 0x00, 0x00, 0x02}, // xor.d e b  
	{0xc44d, &op_xor,	  5,   1, 255, 0xff, 0x00, 0x00, 0x02}, // xor.d f b  
	{0xc44e, &op_xor,	  6,   1, 255, 0xff, 0x00, 0x00, 0x02}, // xor.d g b  
	{0xc44f, &op_xor,	  7,   1, 255, 0xff, 0x00, 0x00, 0x02}, // xor.d h b  
	{0xc450, &op_xor,	  0,   2, 255, 0xff, 0x00, 0x00, 0x02}, // xor.d a c  
	{0xc451, &op_xor,	  1,   2, 255, 0xff, 0x00, 0x00, 0x02}, // xor.d b c  
	{0xc452, &op_xor,	  2,   2, 255, 0xff, 0x00, 0x00, 0x02}, // xor.d c c  
	{0xc453, &op_xor,	  3,   2, 255, 0xff, 0x00, 0x00, 0x02}, // xor.d d c  
	{0xc454, &op_xor,	  4,   2, 255, 0xff, 0x00, 0x00, 0x02}, // xor.d e c  
	{0xc455, &op_xor,	  5,   2, 255, 0xff, 0x00, 0x00, 0x02}, // xor.d f c  
	{0xc456, &op_xor,	  6,   2, 255, 0xff, 0x00, 0x00, 0x02}, // xor.d g c  
	{0xc457, &op_xor,	  7,   2, 255, 0xff, 0x00, 0x00, 0x02}, // xor.d h c  
	{0xc458, &op_xor,	  0,   3, 255, 0xff, 0x00, 0x00, 0x02}, // xor.d a d  
	{0xc459, &op_xor,	  1,   3, 255, 0xff, 0x00, 0x00, 0x02}, // xor.d b d  
	{0xc45a, &op_xor,	  2,   3, 255, 0xff, 0x00, 0x00, 0x02}, // xor.d c d  
	{0xc45b, &op_xor,	  3,   3, 255, 0xff, 0x00, 0x00, 0x02}, // xor.d d d  
	{0xc45c, &op_xor,	  4,   3, 255, 0xff, 0x00, 0x00, 0x02}, // xor.d e d  
	{0xc45d, &op_xor,	  5,   3, 255, 0xff, 0x00, 0x00, 0x02}, // xor.d f d  
	{0xc45e, &op_xor,	  6,   3, 255, 0xff, 0x00, 0x00, 0x02}, // xor.d g d  
	{0xc45f, &op_xor,	  7,   3, 255, 0xff, 0x00, 0x00, 0x02}, // xor.d h d  
	{0xc460, &op_xor,	  0,   4, 255, 0xff, 0x00, 0x00, 0x02}, // xor.d a e  
	{0xc461, &op_xor,	  1,   4, 255, 0xff, 0x00, 0x00, 0x02}, // xor.d b e  
	{0xc462, &op_xor,	  2,   4, 255, 0xff, 0x00, 0x00, 0x02}, // xor.d c e  
	{0xc463, &op_xor,	  3,   4, 255, 0xff, 0x00, 0x00, 0x02}, // xor.d d e  
	{0xc464, &op_xor,	  4,   4, 255, 0xff, 0x00, 0x00, 0x02}, // xor.d e e  
	{0xc465, &op_xor,	  5,   4, 255, 0xff, 0x00, 0x00, 0x02}, // xor.d f e  
	{0xc466, &op_xor,	  6,   4, 255, 0xff, 0x00, 0x00, 0x02}, // xor.d g e  
	{0xc467, &op_xor,	  7,   4, 255, 0xff, 0x00, 0x00, 0x02}, // xor.d h e  
	{0xc468, &op_xor,	  0,   5, 255, 0xff, 0x00, 0x00, 0x02}, // xor.d a f  
	{0xc469, &op_xor,	  1,   5, 255, 0xff, 0x00, 0x00, 0x02}, // xor.d b f  
	{0xc46a, &op_xor,	  2,   5, 255, 0xff, 0x00, 0x00, 0x02}, // xor.d c f  
	{0xc46b, &op_xor,	  3,   5, 255, 0xff, 0x00, 0x00, 0x02}, // xor.d d f  
	{0xc46c, &op_xor,	  4,   5, 255, 0xff, 0x00, 0x00, 0x02}, // xor.d e f  
	{0xc46d, &op_xor,	  5,   5, 255, 0xff, 0x00, 0x00, 0x02}, // xor.d f f  
	{0xc46e, &op_xor,	  6,   5, 255, 0xff, 0x00, 0x00, 0x02}, // xor.d g f  
	{0xc46f, &op_xor,	  7,   5, 255, 0xff, 0x00, 0x00, 0x02}, // xor.d h f  
	{0xc470, &op_xor,	  0,   6, 255, 0xff, 0x00, 0x00, 0x02}, // xor.d a g  
	{0xc471, &op_xor,	  1,   6, 255, 0xff, 0x00, 0x00, 0x02}, // xor.d b g  
	{0xc472, &op_xor,	  2,   6, 255, 0xff, 0x00, 0x00, 0x02}, // xor.d c g  
	{0xc473, &op_xor,	  3,   6, 255, 0xff, 0x00, 0x00, 0x02}, // xor.d d g  
	{0xc474, &op_xor,	  4,   6, 255, 0xff, 0x00, 0x00, 0x02}, // xor.d e g  
	{0xc475, &op_xor,	  5,   6, 255, 0xff, 0x00, 0x00, 0x02}, // xor.d f g  
	{0xc476, &op_xor,	  6,   6, 255, 0xff, 0x00, 0x00, 0x02}, // xor.d g g  
	{0xc477, &op_xor,	  7,   6, 255, 0xff, 0x00, 0x00, 0x02}, // xor.d h g  
	{0xc478, &op_xor,	  0,   7, 255, 0xff, 0x00, 0x00, 0x02}, // xor.d a h  
	{0xc479, &op_xor,	  1,   7, 255, 0xff, 0x00, 0x00, 0x02}, // xor.d b h  
	{0xc47a, &op_xor,	  2,   7, 255, 0xff, 0x00, 0x00, 0x02}, // xor.d c h  
	{0xc47b, &op_xor,	  3,   7, 255, 0xff, 0x00, 0x00, 0x02}, // xor.d d h  
	{0xc47c, &op_xor,	  4,   7, 255, 0xff, 0x00, 0x00, 0x02}, // xor.d e h  
	{0xc47d, &op_xor,	  5,   7, 255, 0xff, 0x00, 0x00, 0x02}, // xor.d f h  
	{0xc47e, &op_xor,	  6,   7, 255, 0xff, 0x00, 0x00, 0x02}, // xor.d g h  
	{0xc47f, &op_xor,	  7,   7, 255, 0xff, 0x00, 0x00, 0x02}, // xor.d h h  
	{0xc480, &op_xor,	  0,   0, 255, 0xff, 0x00, 0x00, 0x04}, // xor a a  
	{0xc481, &op_xor,	  1,   0, 255, 0xff, 0x00, 0x00, 0x04}, // xor b a  
	{0xc482, &op_xor,	  2,   0, 255, 0xff, 0x00, 0x00, 0x04}, // xor c a  
	{0xc483, &op_xor,	  3,   0, 255, 0xff, 0x00, 0x00, 0x04}, // xor d a  
	{0xc484, &op_xor,	  4,   0, 255, 0xff, 0x00, 0x00, 0x04}, // xor e a  
	{0xc485, &op_xor,	  5,   0, 255, 0xff, 0x00, 0x00, 0x04}, // xor f a  
	{0xc486, &op_xor,	  6,   0, 255, 0xff, 0x00, 0x00, 0x04}, // xor g a  
	{0xc487, &op_xor,	  7,   0, 255, 0xff, 0x00, 0x00, 0x04}, // xor h a  
	{0xc488, &op_xor,	  0,   1, 255, 0xff, 0x00, 0x00, 0x04}, // xor a b  
	{0xc489, &op_xor,	  1,   1, 255, 0xff, 0x00, 0x00, 0x04}, // xor b b  
	{0xc48a, &op_xor,	  2,   1, 255, 0xff, 0x00, 0x00, 0x04}, // xor c b  
	{0xc48b, &op_xor,	  3,   1, 255, 0xff, 0x00, 0x00, 0x04}, // xor d b  
	{0xc48c, &op_xor,	  4,   1, 255, 0xff, 0x00, 0x00, 0x04}, // xor e b  
	{0xc48d, &op_xor,	  5,   1, 255, 0xff, 0x00, 0x00, 0x04}, // xor f b  
	{0xc48e, &op_xor,	  6,   1, 255, 0xff, 0x00, 0x00, 0x04}, // xor g b  
	{0xc48f, &op_xor,	  7,   1, 255, 0xff, 0x00, 0x00, 0x04}, // xor h b  
	{0xc490, &op_xor,	  0,   2, 255, 0xff, 0x00, 0x00, 0x04}, // xor a c  
	{0xc491, &op_xor,	  1,   2, 255, 0xff, 0x00, 0x00, 0x04}, // xor b c  
	{0xc492, &op_xor,	  2,   2, 255, 0xff, 0x00, 0x00, 0x04}, // xor c c  
	{0xc493, &op_xor,	  3,   2, 255, 0xff, 0x00, 0x00, 0x04}, // xor d c  
	{0xc494, &op_xor,	  4,   2, 255, 0xff, 0x00, 0x00, 0x04}, // xor e c  
	{0xc495, &op_xor,	  5,   2, 255, 0xff, 0x00, 0x00, 0x04}, // xor f c  
	{0xc496, &op_xor,	  6,   2, 255, 0xff, 0x00, 0x00, 0x04}, // xor g c  
	{0xc497, &op_xor,	  7,   2, 255, 0xff, 0x00, 0x00, 0x04}, // xor h c  
	{0xc498, &op_xor,	  0,   3, 255, 0xff, 0x00, 0x00, 0x04}, // xor a d  
	{0xc499, &op_xor,	  1,   3, 255, 0xff, 0x00, 0x00, 0x04}, // xor b d  
	{0xc49a, &op_xor,	  2,   3, 255, 0xff, 0x00, 0x00, 0x04}, // xor c d  
	{0xc49b, &op_xor,	  3,   3, 255, 0xff, 0x00, 0x00, 0x04}, // xor d d  
	{0xc49c, &op_xor,	  4,   3, 255, 0xff, 0x00, 0x00, 0x04}, // xor e d  
	{0xc49d, &op_xor,	  5,   3, 255, 0xff, 0x00, 0x00, 0x04}, // xor f d  
	{0xc49e, &op_xor,	  6,   3, 255, 0xff, 0x00, 0x00, 0x04}, // xor g d  
	{0xc49f, &op_xor,	  7,   3, 255, 0xff, 0x00, 0x00, 0x04}, // xor h d  
	{0xc4a0, &op_xor,	  0,   4, 255, 0xff, 0x00, 0x00, 0x04}, // xor a e  
	{0xc4a1, &op_xor,	  1,   4, 255, 0xff, 0x00, 0x00, 0x04}, // xor b e  
	{0xc4a2, &op_xor,	  2,   4, 255, 0xff, 0x00, 0x00, 0x04}, // xor c e  
	{0xc4a3, &op_xor,	  3,   4, 255, 0xff, 0x00, 0x00, 0x04}, // xor d e  
	{0xc4a4, &op_xor,	  4,   4, 255, 0xff, 0x00, 0x00, 0x04}, // xor e e  
	{0xc4a5, &op_xor,	  5,   4, 255, 0xff, 0x00, 0x00, 0x04}, // xor f e  
	{0xc4a6, &op_xor,	  6,   4, 255, 0xff, 0x00, 0x00, 0x04}, // xor g e  
	{0xc4a7, &op_xor,	  7,   4, 255, 0xff, 0x00, 0x00, 0x04}, // xor h e  
	{0xc4a8, &op_xor,	  0,   5, 255, 0xff, 0x00, 0x00, 0x04}, // xor a f  
	{0xc4a9, &op_xor,	  1,   5, 255, 0xff, 0x00, 0x00, 0x04}, // xor b f  
	{0xc4aa, &op_xor,	  2,   5, 255, 0xff, 0x00, 0x00, 0x04}, // xor c f  
	{0xc4ab, &op_xor,	  3,   5, 255, 0xff, 0x00, 0x00, 0x04}, // xor d f  
	{0xc4ac, &op_xor,	  4,   5, 255, 0xff, 0x00, 0x00, 0x04}, // xor e f  
	{0xc4ad, &op_xor,	  5,   5, 255, 0xff, 0x00, 0x00, 0x04}, // xor f f  
	{0xc4ae, &op_xor,	  6,   5, 255, 0xff, 0x00, 0x00, 0x04}, // xor g f  
	{0xc4af, &op_xor,	  7,   5, 255, 0xff, 0x00, 0x00, 0x04}, // xor h f  
	{0xc4b0, &op_xor,	  0,   6, 255, 0xff, 0x00, 0x00, 0x04}, // xor a g  
	{0xc4b1, &op_xor,	  1,   6, 255, 0xff, 0x00, 0x00, 0x04}, // xor b g  
	{0xc4b2, &op_xor,	  2,   6, 255, 0xff, 0x00, 0x00, 0x04}, // xor c g  
	{0xc4b3, &op_xor,	  3,   6, 255, 0xff, 0x00, 0x00, 0x04}, // xor d g  
	{0xc4b4, &op_xor,	  4,   6, 255, 0xff, 0x00, 0x00, 0x04}, // xor e g  
	{0xc4b5, &op_xor,	  5,   6, 255, 0xff, 0x00, 0x00, 0x04}, // xor f g  
	{0xc4b6, &op_xor,	  6,   6, 255, 0xff, 0x00, 0x00, 0x04}, // xor g g  
	{0xc4b7, &op_xor,	  7,   6, 255, 0xff, 0x00, 0x00, 0x04}, // xor h g  
	{0xc4b8, &op_xor,	  0,   7, 255, 0xff, 0x00, 0x00, 0x04}, // xor a h  
	{0xc4b9, &op_xor,	  1,   7, 255, 0xff, 0x00, 0x00, 0x04}, // xor b h  
	{0xc4ba, &op_xor,	  2,   7, 255, 0xff, 0x00, 0x00, 0x04}, // xor c h  
	{0xc4bb, &op_xor,	  3,   7, 255, 0xff, 0x00, 0x00, 0x04}, // xor d h  
	{0xc4bc, &op_xor,	  4,   7, 255, 0xff, 0x00, 0x00, 0x04}, // xor e h  
	{0xc4bd, &op_xor,	  5,   7, 255, 0xff, 0x00, 0x00, 0x04}, // xor f h  
	{0xc4be, &op_xor,	  6,   7, 255, 0xff, 0x00, 0x00, 0x04}, // xor g h  
	{0xc4bf, &op_xor,	  7,   7, 255, 0xff, 0x00, 0x00, 0x04}, // xor h h  
	{0xc500, &op_xor,	  0,   0, 255, 0xff, 0x01, 0x00, 0x01}, // xor.wr a a  
	{0xc501, &op_xor,	  1,   0, 255, 0xff, 0x01, 0x00, 0x01}, // xor.wr b a  
	{0xc502, &op_xor,	  2,   0, 255, 0xff, 0x01, 0x00, 0x01}, // xor.wr c a  
	{0xc503, &op_xor,	  3,   0, 255, 0xff, 0x01, 0x00, 0x01}, // xor.wr d a  
	{0xc504, &op_xor,	  4,   0, 255, 0xff, 0x01, 0x00, 0x01}, // xor.wr e a  
	{0xc505, &op_xor,	  5,   0, 255, 0xff, 0x01, 0x00, 0x01}, // xor.wr f a  
	{0xc506, &op_xor,	  6,   0, 255, 0xff, 0x01, 0x00, 0x01}, // xor.wr g a  
	{0xc507, &op_xor,	  7,   0, 255, 0xff, 0x01, 0x00, 0x01}, // xor.wr h a  
	{0xc508, &op_xor,	  0,   1, 255, 0xff, 0x01, 0x00, 0x01}, // xor.wr a b  
	{0xc509, &op_xor,	  1,   1, 255, 0xff, 0x01, 0x00, 0x01}, // xor.wr b b  
	{0xc50a, &op_xor,	  2,   1, 255, 0xff, 0x01, 0x00, 0x01}, // xor.wr c b  
	{0xc50b, &op_xor,	  3,   1, 255, 0xff, 0x01, 0x00, 0x01}, // xor.wr d b  
	{0xc50c, &op_xor,	  4,   1, 255, 0xff, 0x01, 0x00, 0x01}, // xor.wr e b  
	{0xc50d, &op_xor,	  5,   1, 255, 0xff, 0x01, 0x00, 0x01}, // xor.wr f b  
	{0xc50e, &op_xor,	  6,   1, 255, 0xff, 0x01, 0x00, 0x01}, // xor.wr g b  
	{0xc50f, &op_xor,	  7,   1, 255, 0xff, 0x01, 0x00, 0x01}, // xor.wr h b  
	{0xc510, &op_xor,	  0,   2, 255, 0xff, 0x01, 0x00, 0x01}, // xor.wr a c  
	{0xc511, &op_xor,	  1,   2, 255, 0xff, 0x01, 0x00, 0x01}, // xor.wr b c  
	{0xc512, &op_xor,	  2,   2, 255, 0xff, 0x01, 0x00, 0x01}, // xor.wr c c  
	{0xc513, &op_xor,	  3,   2, 255, 0xff, 0x01, 0x00, 0x01}, // xor.wr d c  
	{0xc514, &op_xor,	  4,   2, 255, 0xff, 0x01, 0x00, 0x01}, // xor.wr e c  
	{0xc515, &op_xor,	  5,   2, 255, 0xff, 0x01, 0x00, 0x01}, // xor.wr f c  
	{0xc516, &op_xor,	  6,   2, 255, 0xff, 0x01, 0x00, 0x01}, // xor.wr g c  
	{0xc517, &op_xor,	  7,   2, 255, 0xff, 0x01, 0x00, 0x01}, // xor.wr h c  
	{0xc518, &op_xor,	  0,   3, 255, 0xff, 0x01, 0x00, 0x01}, // xor.wr a d  
	{0xc519, &op_xor,	  1,   3, 255, 0xff, 0x01, 0x00, 0x01}, // xor.wr b d  
	{0xc51a, &op_xor,	  2,   3, 255, 0xff, 0x01, 0x00, 0x01}, // xor.wr c d  
	{0xc51b, &op_xor,	  3,   3, 255, 0xff, 0x01, 0x00, 0x01}, // xor.wr d d  
	{0xc51c, &op_xor,	  4,   3, 255, 0xff, 0x01, 0x00, 0x01}, // xor.wr e d  
	{0xc51d, &op_xor,	  5,   3, 255, 0xff, 0x01, 0x00, 0x01}, // xor.wr f d  
	{0xc51e, &op_xor,	  6,   3, 255, 0xff, 0x01, 0x00, 0x01}, // xor.wr g d  
	{0xc51f, &op_xor,	  7,   3, 255, 0xff, 0x01, 0x00, 0x01}, // xor.wr h d  
	{0xc520, &op_xor,	  0,   4, 255, 0xff, 0x01, 0x00, 0x01}, // xor.wr a e  
	{0xc521, &op_xor,	  1,   4, 255, 0xff, 0x01, 0x00, 0x01}, // xor.wr b e  
	{0xc522, &op_xor,	  2,   4, 255, 0xff, 0x01, 0x00, 0x01}, // xor.wr c e  
	{0xc523, &op_xor,	  3,   4, 255, 0xff, 0x01, 0x00, 0x01}, // xor.wr d e  
	{0xc524, &op_xor,	  4,   4, 255, 0xff, 0x01, 0x00, 0x01}, // xor.wr e e  
	{0xc525, &op_xor,	  5,   4, 255, 0xff, 0x01, 0x00, 0x01}, // xor.wr f e  
	{0xc526, &op_xor,	  6,   4, 255, 0xff, 0x01, 0x00, 0x01}, // xor.wr g e  
	{0xc527, &op_xor,	  7,   4, 255, 0xff, 0x01, 0x00, 0x01}, // xor.wr h e  
	{0xc528, &op_xor,	  0,   5, 255, 0xff, 0x01, 0x00, 0x01}, // xor.wr a f  
	{0xc529, &op_xor,	  1,   5, 255, 0xff, 0x01, 0x00, 0x01}, // xor.wr b f  
	{0xc52a, &op_xor,	  2,   5, 255, 0xff, 0x01, 0x00, 0x01}, // xor.wr c f  
	{0xc52b, &op_xor,	  3,   5, 255, 0xff, 0x01, 0x00, 0x01}, // xor.wr d f  
	{0xc52c, &op_xor,	  4,   5, 255, 0xff, 0x01, 0x00, 0x01}, // xor.wr e f  
	{0xc52d, &op_xor,	  5,   5, 255, 0xff, 0x01, 0x00, 0x01}, // xor.wr f f  
	{0xc52e, &op_xor,	  6,   5, 255, 0xff, 0x01, 0x00, 0x01}, // xor.wr g f  
	{0xc52f, &op_xor,	  7,   5, 255, 0xff, 0x01, 0x00, 0x01}, // xor.wr h f  
	{0xc530, &op_xor,	  0,   6, 255, 0xff, 0x01, 0x00, 0x01}, // xor.wr a g  
	{0xc531, &op_xor,	  1,   6, 255, 0xff, 0x01, 0x00, 0x01}, // xor.wr b g  
	{0xc532, &op_xor,	  2,   6, 255, 0xff, 0x01, 0x00, 0x01}, // xor.wr c g  
	{0xc533, &op_xor,	  3,   6, 255, 0xff, 0x01, 0x00, 0x01}, // xor.wr d g  
	{0xc534, &op_xor,	  4,   6, 255, 0xff, 0x01, 0x00, 0x01}, // xor.wr e g  
	{0xc535, &op_xor,	  5,   6, 255, 0xff, 0x01, 0x00, 0x01}, // xor.wr f g  
	{0xc536, &op_xor,	  6,   6, 255, 0xff, 0x01, 0x00, 0x01}, // xor.wr g g  
	{0xc537, &op_xor,	  7,   6, 255, 0xff, 0x01, 0x00, 0x01}, // xor.wr h g  
	{0xc538, &op_xor,	  0,   7, 255, 0xff, 0x01, 0x00, 0x01}, // xor.wr a h  
	{0xc539, &op_xor,	  1,   7, 255, 0xff, 0x01, 0x00, 0x01}, // xor.wr b h  
	{0xc53a, &op_xor,	  2,   7, 255, 0xff, 0x01, 0x00, 0x01}, // xor.wr c h  
	{0xc53b, &op_xor,	  3,   7, 255, 0xff, 0x01, 0x00, 0x01}, // xor.wr d h  
	{0xc53c, &op_xor,	  4,   7, 255, 0xff, 0x01, 0x00, 0x01}, // xor.wr e h  
	{0xc53d, &op_xor,	  5,   7, 255, 0xff, 0x01, 0x00, 0x01}, // xor.wr f h  
	{0xc53e, &op_xor,	  6,   7, 255, 0xff, 0x01, 0x00, 0x01}, // xor.wr g h  
	{0xc53f, &op_xor,	  7,   7, 255, 0xff, 0x01, 0x00, 0x01}, // xor.wr h h  
	{0xc540, &op_xor,	  0,   0, 255, 0xff, 0x01, 0x00, 0x02}, // xor.dr a a  
	{0xc541, &op_xor,	  1,   0, 255, 0xff, 0x01, 0x00, 0x02}, // xor.dr b a  
	{0xc542, &op_xor,	  2,   0, 255, 0xff, 0x01, 0x00, 0x02}, // xor.dr c a  
	{0xc543, &op_xor,	  3,   0, 255, 0xff, 0x01, 0x00, 0x02}, // xor.dr d a  
	{0xc544, &op_xor,	  4,   0, 255, 0xff, 0x01, 0x00, 0x02}, // xor.dr e a  
	{0xc545, &op_xor,	  5,   0, 255, 0xff, 0x01, 0x00, 0x02}, // xor.dr f a  
	{0xc546, &op_xor,	  6,   0, 255, 0xff, 0x01, 0x00, 0x02}, // xor.dr g a  
	{0xc547, &op_xor,	  7,   0, 255, 0xff, 0x01, 0x00, 0x02}, // xor.dr h a  
	{0xc548, &op_xor,	  0,   1, 255, 0xff, 0x01, 0x00, 0x02}, // xor.dr a b  
	{0xc549, &op_xor,	  1,   1, 255, 0xff, 0x01, 0x00, 0x02}, // xor.dr b b  
	{0xc54a, &op_xor,	  2,   1, 255, 0xff, 0x01, 0x00, 0x02}, // xor.dr c b  
	{0xc54b, &op_xor,	  3,   1, 255, 0xff, 0x01, 0x00, 0x02}, // xor.dr d b  
	{0xc54c, &op_xor,	  4,   1, 255, 0xff, 0x01, 0x00, 0x02}, // xor.dr e b  
	{0xc54d, &op_xor,	  5,   1, 255, 0xff, 0x01, 0x00, 0x02}, // xor.dr f b  
	{0xc54e, &op_xor,	  6,   1, 255, 0xff, 0x01, 0x00, 0x02}, // xor.dr g b  
	{0xc54f, &op_xor,	  7,   1, 255, 0xff, 0x01, 0x00, 0x02}, // xor.dr h b  
	{0xc550, &op_xor,	  0,   2, 255, 0xff, 0x01, 0x00, 0x02}, // xor.dr a c  
	{0xc551, &op_xor,	  1,   2, 255, 0xff, 0x01, 0x00, 0x02}, // xor.dr b c  
	{0xc552, &op_xor,	  2,   2, 255, 0xff, 0x01, 0x00, 0x02}, // xor.dr c c  
	{0xc553, &op_xor,	  3,   2, 255, 0xff, 0x01, 0x00, 0x02}, // xor.dr d c  
	{0xc554, &op_xor,	  4,   2, 255, 0xff, 0x01, 0x00, 0x02}, // xor.dr e c  
	{0xc555, &op_xor,	  5,   2, 255, 0xff, 0x01, 0x00, 0x02}, // xor.dr f c  
	{0xc556, &op_xor,	  6,   2, 255, 0xff, 0x01, 0x00, 0x02}, // xor.dr g c  
	{0xc557, &op_xor,	  7,   2, 255, 0xff, 0x01, 0x00, 0x02}, // xor.dr h c  
	{0xc558, &op_xor,	  0,   3, 255, 0xff, 0x01, 0x00, 0x02}, // xor.dr a d  
	{0xc559, &op_xor,	  1,   3, 255, 0xff, 0x01, 0x00, 0x02}, // xor.dr b d  
	{0xc55a, &op_xor,	  2,   3, 255, 0xff, 0x01, 0x00, 0x02}, // xor.dr c d  
	{0xc55b, &op_xor,	  3,   3, 255, 0xff, 0x01, 0x00, 0x02}, // xor.dr d d  
	{0xc55c, &op_xor,	  4,   3, 255, 0xff, 0x01, 0x00, 0x02}, // xor.dr e d  
	{0xc55d, &op_xor,	  5,   3, 255, 0xff, 0x01, 0x00, 0x02}, // xor.dr f d  
	{0xc55e, &op_xor,	  6,   3, 255, 0xff, 0x01, 0x00, 0x02}, // xor.dr g d  
	{0xc55f, &op_xor,	  7,   3, 255, 0xff, 0x01, 0x00, 0x02}, // xor.dr h d  
	{0xc560, &op_xor,	  0,   4, 255, 0xff, 0x01, 0x00, 0x02}, // xor.dr a e  
	{0xc561, &op_xor,	  1,   4, 255, 0xff, 0x01, 0x00, 0x02}, // xor.dr b e  
	{0xc562, &op_xor,	  2,   4, 255, 0xff, 0x01, 0x00, 0x02}, // xor.dr c e  
	{0xc563, &op_xor,	  3,   4, 255, 0xff, 0x01, 0x00, 0x02}, // xor.dr d e  
	{0xc564, &op_xor,	  4,   4, 255, 0xff, 0x01, 0x00, 0x02}, // xor.dr e e  
	{0xc565, &op_xor,	  5,   4, 255, 0xff, 0x01, 0x00, 0x02}, // xor.dr f e  
	{0xc566, &op_xor,	  6,   4, 255, 0xff, 0x01, 0x00, 0x02}, // xor.dr g e  
	{0xc567, &op_xor,	  7,   4, 255, 0xff, 0x01, 0x00, 0x02}, // xor.dr h e  
	{0xc568, &op_xor,	  0,   5, 255, 0xff, 0x01, 0x00, 0x02}, // xor.dr a f  
	{0xc569, &op_xor,	  1,   5, 255, 0xff, 0x01, 0x00, 0x02}, // xor.dr b f  
	{0xc56a, &op_xor,	  2,   5, 255, 0xff, 0x01, 0x00, 0x02}, // xor.dr c f  
	{0xc56b, &op_xor,	  3,   5, 255, 0xff, 0x01, 0x00, 0x02}, // xor.dr d f  
	{0xc56c, &op_xor,	  4,   5, 255, 0xff, 0x01, 0x00, 0x02}, // xor.dr e f  
	{0xc56d, &op_xor,	  5,   5, 255, 0xff, 0x01, 0x00, 0x02}, // xor.dr f f  
	{0xc56e, &op_xor,	  6,   5, 255, 0xff, 0x01, 0x00, 0x02}, // xor.dr g f  
	{0xc56f, &op_xor,	  7,   5, 255, 0xff, 0x01, 0x00, 0x02}, // xor.dr h f  
	{0xc570, &op_xor,	  0,   6, 255, 0xff, 0x01, 0x00, 0x02}, // xor.dr a g  
	{0xc571, &op_xor,	  1,   6, 255, 0xff, 0x01, 0x00, 0x02}, // xor.dr b g  
	{0xc572, &op_xor,	  2,   6, 255, 0xff, 0x01, 0x00, 0x02}, // xor.dr c g  
	{0xc573, &op_xor,	  3,   6, 255, 0xff, 0x01, 0x00, 0x02}, // xor.dr d g  
	{0xc574, &op_xor,	  4,   6, 255, 0xff, 0x01, 0x00, 0x02}, // xor.dr e g  
	{0xc575, &op_xor,	  5,   6, 255, 0xff, 0x01, 0x00, 0x02}, // xor.dr f g  
	{0xc576, &op_xor,	  6,   6, 255, 0xff, 0x01, 0x00, 0x02}, // xor.dr g g  
	{0xc577, &op_xor,	  7,   6, 255, 0xff, 0x01, 0x00, 0x02}, // xor.dr h g  
	{0xc578, &op_xor,	  0,   7, 255, 0xff, 0x01, 0x00, 0x02}, // xor.dr a h  
	{0xc579, &op_xor,	  1,   7, 255, 0xff, 0x01, 0x00, 0x02}, // xor.dr b h  
	{0xc57a, &op_xor,	  2,   7, 255, 0xff, 0x01, 0x00, 0x02}, // xor.dr c h  
	{0xc57b, &op_xor,	  3,   7, 255, 0xff, 0x01, 0x00, 0x02}, // xor.dr d h  
	{0xc57c, &op_xor,	  4,   7, 255, 0xff, 0x01, 0x00, 0x02}, // xor.dr e h  
	{0xc57d, &op_xor,	  5,   7, 255, 0xff, 0x01, 0x00, 0x02}, // xor.dr f h  
	{0xc57e, &op_xor,	  6,   7, 255, 0xff, 0x01, 0x00, 0x02}, // xor.dr g h  
	{0xc57f, &op_xor,	  7,   7, 255, 0xff, 0x01, 0x00, 0x02}, // xor.dr h h  
	{0xc580, &op_xor,	  0,   0, 255, 0xff, 0x01, 0x00, 0x04}, // xor.r a a  
	{0xc581, &op_xor,	  1,   0, 255, 0xff, 0x01, 0x00, 0x04}, // xor.r b a  
	{0xc582, &op_xor,	  2,   0, 255, 0xff, 0x01, 0x00, 0x04}, // xor.r c a  
	{0xc583, &op_xor,	  3,   0, 255, 0xff, 0x01, 0x00, 0x04}, // xor.r d a  
	{0xc584, &op_xor,	  4,   0, 255, 0xff, 0x01, 0x00, 0x04}, // xor.r e a  
	{0xc585, &op_xor,	  5,   0, 255, 0xff, 0x01, 0x00, 0x04}, // xor.r f a  
	{0xc586, &op_xor,	  6,   0, 255, 0xff, 0x01, 0x00, 0x04}, // xor.r g a  
	{0xc587, &op_xor,	  7,   0, 255, 0xff, 0x01, 0x00, 0x04}, // xor.r h a  
	{0xc588, &op_xor,	  0,   1, 255, 0xff, 0x01, 0x00, 0x04}, // xor.r a b  
	{0xc589, &op_xor,	  1,   1, 255, 0xff, 0x01, 0x00, 0x04}, // xor.r b b  
	{0xc58a, &op_xor,	  2,   1, 255, 0xff, 0x01, 0x00, 0x04}, // xor.r c b  
	{0xc58b, &op_xor,	  3,   1, 255, 0xff, 0x01, 0x00, 0x04}, // xor.r d b  
	{0xc58c, &op_xor,	  4,   1, 255, 0xff, 0x01, 0x00, 0x04}, // xor.r e b  
	{0xc58d, &op_xor,	  5,   1, 255, 0xff, 0x01, 0x00, 0x04}, // xor.r f b  
	{0xc58e, &op_xor,	  6,   1, 255, 0xff, 0x01, 0x00, 0x04}, // xor.r g b  
	{0xc58f, &op_xor,	  7,   1, 255, 0xff, 0x01, 0x00, 0x04}, // xor.r h b  
	{0xc590, &op_xor,	  0,   2, 255, 0xff, 0x01, 0x00, 0x04}, // xor.r a c  
	{0xc591, &op_xor,	  1,   2, 255, 0xff, 0x01, 0x00, 0x04}, // xor.r b c  
	{0xc592, &op_xor,	  2,   2, 255, 0xff, 0x01, 0x00, 0x04}, // xor.r c c  
	{0xc593, &op_xor,	  3,   2, 255, 0xff, 0x01, 0x00, 0x04}, // xor.r d c  
	{0xc594, &op_xor,	  4,   2, 255, 0xff, 0x01, 0x00, 0x04}, // xor.r e c  
	{0xc595, &op_xor,	  5,   2, 255, 0xff, 0x01, 0x00, 0x04}, // xor.r f c  
	{0xc596, &op_xor,	  6,   2, 255, 0xff, 0x01, 0x00, 0x04}, // xor.r g c  
	{0xc597, &op_xor,	  7,   2, 255, 0xff, 0x01, 0x00, 0x04}, // xor.r h c  
	{0xc598, &op_xor,	  0,   3, 255, 0xff, 0x01, 0x00, 0x04}, // xor.r a d  
	{0xc599, &op_xor,	  1,   3, 255, 0xff, 0x01, 0x00, 0x04}, // xor.r b d  
	{0xc59a, &op_xor,	  2,   3, 255, 0xff, 0x01, 0x00, 0x04}, // xor.r c d  
	{0xc59b, &op_xor,	  3,   3, 255, 0xff, 0x01, 0x00, 0x04}, // xor.r d d  
	{0xc59c, &op_xor,	  4,   3, 255, 0xff, 0x01, 0x00, 0x04}, // xor.r e d  
	{0xc59d, &op_xor,	  5,   3, 255, 0xff, 0x01, 0x00, 0x04}, // xor.r f d  
	{0xc59e, &op_xor,	  6,   3, 255, 0xff, 0x01, 0x00, 0x04}, // xor.r g d  
	{0xc59f, &op_xor,	  7,   3, 255, 0xff, 0x01, 0x00, 0x04}, // xor.r h d  
	{0xc5a0, &op_xor,	  0,   4, 255, 0xff, 0x01, 0x00, 0x04}, // xor.r a e  
	{0xc5a1, &op_xor,	  1,   4, 255, 0xff, 0x01, 0x00, 0x04}, // xor.r b e  
	{0xc5a2, &op_xor,	  2,   4, 255, 0xff, 0x01, 0x00, 0x04}, // xor.r c e  
	{0xc5a3, &op_xor,	  3,   4, 255, 0xff, 0x01, 0x00, 0x04}, // xor.r d e  
	{0xc5a4, &op_xor,	  4,   4, 255, 0xff, 0x01, 0x00, 0x04}, // xor.r e e  
	{0xc5a5, &op_xor,	  5,   4, 255, 0xff, 0x01, 0x00, 0x04}, // xor.r f e  
	{0xc5a6, &op_xor,	  6,   4, 255, 0xff, 0x01, 0x00, 0x04}, // xor.r g e  
	{0xc5a7, &op_xor,	  7,   4, 255, 0xff, 0x01, 0x00, 0x04}, // xor.r h e  
	{0xc5a8, &op_xor,	  0,   5, 255, 0xff, 0x01, 0x00, 0x04}, // xor.r a f  
	{0xc5a9, &op_xor,	  1,   5, 255, 0xff, 0x01, 0x00, 0x04}, // xor.r b f  
	{0xc5aa, &op_xor,	  2,   5, 255, 0xff, 0x01, 0x00, 0x04}, // xor.r c f  
	{0xc5ab, &op_xor,	  3,   5, 255, 0xff, 0x01, 0x00, 0x04}, // xor.r d f  
	{0xc5ac, &op_xor,	  4,   5, 255, 0xff, 0x01, 0x00, 0x04}, // xor.r e f  
	{0xc5ad, &op_xor,	  5,   5, 255, 0xff, 0x01, 0x00, 0x04}, // xor.r f f  
	{0xc5ae, &op_xor,	  6,   5, 255, 0xff, 0x01, 0x00, 0x04}, // xor.r g f  
	{0xc5af, &op_xor,	  7,   5, 255, 0xff, 0x01, 0x00, 0x04}, // xor.r h f  
	{0xc5b0, &op_xor,	  0,   6, 255, 0xff, 0x01, 0x00, 0x04}, // xor.r a g  
	{0xc5b1, &op_xor,	  1,   6, 255, 0xff, 0x01, 0x00, 0x04}, // xor.r b g  
	{0xc5b2, &op_xor,	  2,   6, 255, 0xff, 0x01, 0x00, 0x04}, // xor.r c g  
	{0xc5b3, &op_xor,	  3,   6, 255, 0xff, 0x01, 0x00, 0x04}, // xor.r d g  
	{0xc5b4, &op_xor,	  4,   6, 255, 0xff, 0x01, 0x00, 0x04}, // xor.r e g  
	{0xc5b5, &op_xor,	  5,   6, 255, 0xff, 0x01, 0x00, 0x04}, // xor.r f g  
	{0xc5b6, &op_xor,	  6,   6, 255, 0xff, 0x01, 0x00, 0x04}, // xor.r g g  
	{0xc5b7, &op_xor,	  7,   6, 255, 0xff, 0x01, 0x00, 0x04}, // xor.r h g  
	{0xc5b8, &op_xor,	  0,   7, 255, 0xff, 0x01, 0x00, 0x04}, // xor.r a h  
	{0xc5b9, &op_xor,	  1,   7, 255, 0xff, 0x01, 0x00, 0x04}, // xor.r b h  
	{0xc5ba, &op_xor,	  2,   7, 255, 0xff, 0x01, 0x00, 0x04}, // xor.r c h  
	{0xc5bb, &op_xor,	  3,   7, 255, 0xff, 0x01, 0x00, 0x04}, // xor.r d h  
	{0xc5bc, &op_xor,	  4,   7, 255, 0xff, 0x01, 0x00, 0x04}, // xor.r e h  
	{0xc5bd, &op_xor,	  5,   7, 255, 0xff, 0x01, 0x00, 0x04}, // xor.r f h  
	{0xc5be, &op_xor,	  6,   7, 255, 0xff, 0x01, 0x00, 0x04}, // xor.r g h  
	{0xc5bf, &op_xor,	  7,   7, 255, 0xff, 0x01, 0x00, 0x04}, // xor.r h h  
	{0xc4c8, &op_xor,	  0,   8, 255, 0xff, 0x00, 0x01, 0x01}, // xor.wi a <literal>  
	{0xc4c9, &op_xor,	  1,   8, 255, 0xff, 0x00, 0x01, 0x01}, // xor.wi b <literal>  
	{0xc4ca, &op_xor,	  2,   8, 255, 0xff, 0x00, 0x01, 0x01}, // xor.wi c <literal>  
	{0xc4cb, &op_xor,	  3,   8, 255, 0xff, 0x00, 0x01, 0x01}, // xor.wi d <literal>  
	{0xc4cc, &op_xor,	  4,   8, 255, 0xff, 0x00, 0x01, 0x01}, // xor.wi e <literal>  
	{0xc4cd, &op_xor,	  5,   8, 255, 0xff, 0x00, 0x01, 0x01}, // xor.wi f <literal>  
	{0xc4ce, &op_xor,	  6,   8, 255, 0xff, 0x00, 0x01, 0x01}, // xor.wi g <literal>  
	{0xc4cf, &op_xor,	  7,   8, 255, 0xff, 0x00, 0x01, 0x01}, // xor.wi h <literal>  
	{0xc4d0, &op_xor,	  0,   8, 255, 0xff, 0x00, 0x02, 0x02}, // xor.di a <literal>  
	{0xc4d1, &op_xor,	  1,   8, 255, 0xff, 0x00, 0x02, 0x02}, // xor.di b <literal>  
	{0xc4d2, &op_xor,	  2,   8, 255, 0xff, 0x00, 0x02, 0x02}, // xor.di c <literal>  
	{0xc4d3, &op_xor,	  3,   8, 255, 0xff, 0x00, 0x02, 0x02}, // xor.di d <literal>  
	{0xc4d4, &op_xor,	  4,   8, 255, 0xff, 0x00, 0x02, 0x02}, // xor.di e <literal>  
	{0xc4d5, &op_xor,	  5,   8, 255, 0xff, 0x00, 0x02, 0x02}, // xor.di f <literal>  
	{0xc4d6, &op_xor,	  6,   8, 255, 0xff, 0x00, 0x02, 0x02}, // xor.di g <literal>  
	{0xc4d7, &op_xor,	  7,   8, 255, 0xff, 0x00, 0x02, 0x02}, // xor.di h <literal>  
	{0xc4e0, &op_xor,	  0,   8, 255, 0xff, 0x00, 0x04, 0x04}, // xor.i a <literal>  
	{0xc4e1, &op_xor,	  1,   8, 255, 0xff, 0x00, 0x04, 0x04}, // xor.i b <literal>  
	{0xc4e2, &op_xor,	  2,   8, 255, 0xff, 0x00, 0x04, 0x04}, // xor.i c <literal>  
	{0xc4e3, &op_xor,	  3,   8, 255, 0xff, 0x00, 0x04, 0x04}, // xor.i d <literal>  
	{0xc4e4, &op_xor,	  4,   8, 255, 0xff, 0x00, 0x04, 0x04}, // xor.i e <literal>  
	{0xc4e5, &op_xor,	  5,   8, 255, 0xff, 0x00, 0x04, 0x04}, // xor.i f <literal>  
	{0xc4e6, &op_xor,	  6,   8, 255, 0xff, 0x00, 0x04, 0x04}, // xor.i g <literal>  
	{0xc4e7, &op_xor,	  7,   8, 255, 0xff, 0x00, 0x04, 0x04}, // xor.i h <literal>  
	{0xc5c8, &op_xor,	  0,   8, 255, 0xff, 0x01, 0x04, 0x01}, // xor.wri a <literal>  
	{0xc5c9, &op_xor,	  1,   8, 255, 0xff, 0x01, 0x04, 0x01}, // xor.wri b <literal>  
	{0xc5ca, &op_xor,	  2,   8, 255, 0xff, 0x01, 0x04, 0x01}, // xor.wri c <literal>  
	{0xc5cb, &op_xor,	  3,   8, 255, 0xff, 0x01, 0x04, 0x01}, // xor.wri d <literal>  
	{0xc5cc, &op_xor,	  4,   8, 255, 0xff, 0x01, 0x04, 0x01}, // xor.wri e <literal>  
	{0xc5cd, &op_xor,	  5,   8, 255, 0xff, 0x01, 0x04, 0x01}, // xor.wri f <literal>  
	{0xc5ce, &op_xor,	  6,   8, 255, 0xff, 0x01, 0x04, 0x01}, // xor.wri g <literal>  
	{0xc5cf, &op_xor,	  7,   8, 255, 0xff, 0x01, 0x04, 0x01}, // xor.wri h <literal>  
	{0xc5d0, &op_xor,	  0,   8, 255, 0xff, 0x01, 0x04, 0x02}, // xor.dri a <literal>  
	{0xc5d1, &op_xor,	  1,   8, 255, 0xff, 0x01, 0x04, 0x02}, // xor.dri b <literal>  
	{0xc5d2, &op_xor,	  2,   8, 255, 0xff, 0x01, 0x04, 0x02}, // xor.dri c <literal>  
	{0xc5d3, &op_xor,	  3,   8, 255, 0xff, 0x01, 0x04, 0x02}, // xor.dri d <literal>  
	{0xc5d4, &op_xor,	  4,   8, 255, 0xff, 0x01, 0x04, 0x02}, // xor.dri e <literal>  
	{0xc5d5, &op_xor,	  5,   8, 255, 0xff, 0x01, 0x04, 0x02}, // xor.dri f <literal>  
	{0xc5d6, &op_xor,	  6,   8, 255, 0xff, 0x01, 0x04, 0x02}, // xor.dri g <literal>  
	{0xc5d7, &op_xor,	  7,   8, 255, 0xff, 0x01, 0x04, 0x02}, // xor.dri h <literal>  
	{0xc5e0, &op_xor,	  0,   8, 255, 0xff, 0x01, 0x04, 0x04}, // xor.ri a <literal>  
	{0xc5e1, &op_xor,	  1,   8, 255, 0xff, 0x01, 0x04, 0x04}, // xor.ri b <literal>  
	{0xc5e2, &op_xor,	  2,   8, 255, 0xff, 0x01, 0x04, 0x04}, // xor.ri c <literal>  
	{0xc5e3, &op_xor,	  3,   8, 255, 0xff, 0x01, 0x04, 0x04}, // xor.ri d <literal>  
	{0xc5e4, &op_xor,	  4,   8, 255, 0xff, 0x01, 0x04, 0x04}, // xor.ri e <literal>  
	{0xc5e5, &op_xor,	  5,   8, 255, 0xff, 0x01, 0x04, 0x04}, // xor.ri f <literal>  
	{0xc5e6, &op_xor,	  6,   8, 255, 0xff, 0x01, 0x04, 0x04}, // xor.ri g <literal>  
	{0xc5e7, &op_xor,	  7,   8, 255, 0xff, 0x01, 0x04, 0x04}, // xor.ri h <literal>  
	{0xc600, &op_ror,	  0,   0, 255, 0xff, 0x00, 0x00, 0x01}, // ror.w a a  
	{0xc601, &op_ror,	  1,   0, 255, 0xff, 0x00, 0x00, 0x01}, // ror.w b a  
	{0xc602, &op_ror,	  2,   0, 255, 0xff, 0x00, 0x00, 0x01}, // ror.w c a  
	{0xc603, &op_ror,	  3,   0, 255, 0xff, 0x00, 0x00, 0x01}, // ror.w d a  
	{0xc604, &op_ror,	  4,   0, 255, 0xff, 0x00, 0x00, 0x01}, // ror.w e a  
	{0xc605, &op_ror,	  5,   0, 255, 0xff, 0x00, 0x00, 0x01}, // ror.w f a  
	{0xc606, &op_ror,	  6,   0, 255, 0xff, 0x00, 0x00, 0x01}, // ror.w g a  
	{0xc607, &op_ror,	  7,   0, 255, 0xff, 0x00, 0x00, 0x01}, // ror.w h a  
	{0xc608, &op_ror,	  0,   1, 255, 0xff, 0x00, 0x00, 0x01}, // ror.w a b  
	{0xc609, &op_ror,	  1,   1, 255, 0xff, 0x00, 0x00, 0x01}, // ror.w b b  
	{0xc60a, &op_ror,	  2,   1, 255, 0xff, 0x00, 0x00, 0x01}, // ror.w c b  
	{0xc60b, &op_ror,	  3,   1, 255, 0xff, 0x00, 0x00, 0x01}, // ror.w d b  
	{0xc60c, &op_ror,	  4,   1, 255, 0xff, 0x00, 0x00, 0x01}, // ror.w e b  
	{0xc60d, &op_ror,	  5,   1, 255, 0xff, 0x00, 0x00, 0x01}, // ror.w f b  
	{0xc60e, &op_ror,	  6,   1, 255, 0xff, 0x00, 0x00, 0x01}, // ror.w g b  
	{0xc60f, &op_ror,	  7,   1, 255, 0xff, 0x00, 0x00, 0x01}, // ror.w h b  
	{0xc610, &op_ror,	  0,   2, 255, 0xff, 0x00, 0x00, 0x01}, // ror.w a c  
	{0xc611, &op_ror,	  1,   2, 255, 0xff, 0x00, 0x00, 0x01}, // ror.w b c  
	{0xc612, &op_ror,	  2,   2, 255, 0xff, 0x00, 0x00, 0x01}, // ror.w c c  
	{0xc613, &op_ror,	  3,   2, 255, 0xff, 0x00, 0x00, 0x01}, // ror.w d c  
	{0xc614, &op_ror,	  4,   2, 255, 0xff, 0x00, 0x00, 0x01}, // ror.w e c  
	{0xc615, &op_ror,	  5,   2, 255, 0xff, 0x00, 0x00, 0x01}, // ror.w f c  
	{0xc616, &op_ror,	  6,   2, 255, 0xff, 0x00, 0x00, 0x01}, // ror.w g c  
	{0xc617, &op_ror,	  7,   2, 255, 0xff, 0x00, 0x00, 0x01}, // ror.w h c  
	{0xc618, &op_ror,	  0,   3, 255, 0xff, 0x00, 0x00, 0x01}, // ror.w a d  
	{0xc619, &op_ror,	  1,   3, 255, 0xff, 0x00, 0x00, 0x01}, // ror.w b d  
	{0xc61a, &op_ror,	  2,   3, 255, 0xff, 0x00, 0x00, 0x01}, // ror.w c d  
	{0xc61b, &op_ror,	  3,   3, 255, 0xff, 0x00, 0x00, 0x01}, // ror.w d d  
	{0xc61c, &op_ror,	  4,   3, 255, 0xff, 0x00, 0x00, 0x01}, // ror.w e d  
	{0xc61d, &op_ror,	  5,   3, 255, 0xff, 0x00, 0x00, 0x01}, // ror.w f d  
	{0xc61e, &op_ror,	  6,   3, 255, 0xff, 0x00, 0x00, 0x01}, // ror.w g d  
	{0xc61f, &op_ror,	  7,   3, 255, 0xff, 0x00, 0x00, 0x01}, // ror.w h d  
	{0xc620, &op_ror,	  0,   4, 255, 0xff, 0x00, 0x00, 0x01}, // ror.w a e  
	{0xc621, &op_ror,	  1,   4, 255, 0xff, 0x00, 0x00, 0x01}, // ror.w b e  
	{0xc622, &op_ror,	  2,   4, 255, 0xff, 0x00, 0x00, 0x01}, // ror.w c e  
	{0xc623, &op_ror,	  3,   4, 255, 0xff, 0x00, 0x00, 0x01}, // ror.w d e  
	{0xc624, &op_ror,	  4,   4, 255, 0xff, 0x00, 0x00, 0x01}, // ror.w e e  
	{0xc625, &op_ror,	  5,   4, 255, 0xff, 0x00, 0x00, 0x01}, // ror.w f e  
	{0xc626, &op_ror,	  6,   4, 255, 0xff, 0x00, 0x00, 0x01}, // ror.w g e  
	{0xc627, &op_ror,	  7,   4, 255, 0xff, 0x00, 0x00, 0x01}, // ror.w h e  
	{0xc628, &op_ror,	  0,   5, 255, 0xff, 0x00, 0x00, 0x01}, // ror.w a f  
	{0xc629, &op_ror,	  1,   5, 255, 0xff, 0x00, 0x00, 0x01}, // ror.w b f  
	{0xc62a, &op_ror,	  2,   5, 255, 0xff, 0x00, 0x00, 0x01}, // ror.w c f  
	{0xc62b, &op_ror,	  3,   5, 255, 0xff, 0x00, 0x00, 0x01}, // ror.w d f  
	{0xc62c, &op_ror,	  4,   5, 255, 0xff, 0x00, 0x00, 0x01}, // ror.w e f  
	{0xc62d, &op_ror,	  5,   5, 255, 0xff, 0x00, 0x00, 0x01}, // ror.w f f  
	{0xc62e, &op_ror,	  6,   5, 255, 0xff, 0x00, 0x00, 0x01}, // ror.w g f  
	{0xc62f, &op_ror,	  7,   5, 255, 0xff, 0x00, 0x00, 0x01}, // ror.w h f  
	{0xc630, &op_ror,	  0,   6, 255, 0xff, 0x00, 0x00, 0x01}, // ror.w a g  
	{0xc631, &op_ror,	  1,   6, 255, 0xff, 0x00, 0x00, 0x01}, // ror.w b g  
	{0xc632, &op_ror,	  2,   6, 255, 0xff, 0x00, 0x00, 0x01}, // ror.w c g  
	{0xc633, &op_ror,	  3,   6, 255, 0xff, 0x00, 0x00, 0x01}, // ror.w d g  
	{0xc634, &op_ror,	  4,   6, 255, 0xff, 0x00, 0x00, 0x01}, // ror.w e g  
	{0xc635, &op_ror,	  5,   6, 255, 0xff, 0x00, 0x00, 0x01}, // ror.w f g  
	{0xc636, &op_ror,	  6,   6, 255, 0xff, 0x00, 0x00, 0x01}, // ror.w g g  
	{0xc637, &op_ror,	  7,   6, 255, 0xff, 0x00, 0x00, 0x01}, // ror.w h g  
	{0xc638, &op_ror,	  0,   7, 255, 0xff, 0x00, 0x00, 0x01}, // ror.w a h  
	{0xc639, &op_ror,	  1,   7, 255, 0xff, 0x00, 0x00, 0x01}, // ror.w b h  
	{0xc63a, &op_ror,	  2,   7, 255, 0xff, 0x00, 0x00, 0x01}, // ror.w c h  
	{0xc63b, &op_ror,	  3,   7, 255, 0xff, 0x00, 0x00, 0x01}, // ror.w d h  
	{0xc63c, &op_ror,	  4,   7, 255, 0xff, 0x00, 0x00, 0x01}, // ror.w e h  
	{0xc63d, &op_ror,	  5,   7, 255, 0xff, 0x00, 0x00, 0x01}, // ror.w f h  
	{0xc63e, &op_ror,	  6,   7, 255, 0xff, 0x00, 0x00, 0x01}, // ror.w g h  
	{0xc63f, &op_ror,	  7,   7, 255, 0xff, 0x00, 0x00, 0x01}, // ror.w h h  
	{0xc640, &op_ror,	  0,   0, 255, 0xff, 0x00, 0x00, 0x02}, // ror.d a a  
	{0xc641, &op_ror,	  1,   0, 255, 0xff, 0x00, 0x00, 0x02}, // ror.d b a  
	{0xc642, &op_ror,	  2,   0, 255, 0xff, 0x00, 0x00, 0x02}, // ror.d c a  
	{0xc643, &op_ror,	  3,   0, 255, 0xff, 0x00, 0x00, 0x02}, // ror.d d a  
	{0xc644, &op_ror,	  4,   0, 255, 0xff, 0x00, 0x00, 0x02}, // ror.d e a  
	{0xc645, &op_ror,	  5,   0, 255, 0xff, 0x00, 0x00, 0x02}, // ror.d f a  
	{0xc646, &op_ror,	  6,   0, 255, 0xff, 0x00, 0x00, 0x02}, // ror.d g a  
	{0xc647, &op_ror,	  7,   0, 255, 0xff, 0x00, 0x00, 0x02}, // ror.d h a  
	{0xc648, &op_ror,	  0,   1, 255, 0xff, 0x00, 0x00, 0x02}, // ror.d a b  
	{0xc649, &op_ror,	  1,   1, 255, 0xff, 0x00, 0x00, 0x02}, // ror.d b b  
	{0xc64a, &op_ror,	  2,   1, 255, 0xff, 0x00, 0x00, 0x02}, // ror.d c b  
	{0xc64b, &op_ror,	  3,   1, 255, 0xff, 0x00, 0x00, 0x02}, // ror.d d b  
	{0xc64c, &op_ror,	  4,   1, 255, 0xff, 0x00, 0x00, 0x02}, // ror.d e b  
	{0xc64d, &op_ror,	  5,   1, 255, 0xff, 0x00, 0x00, 0x02}, // ror.d f b  
	{0xc64e, &op_ror,	  6,   1, 255, 0xff, 0x00, 0x00, 0x02}, // ror.d g b  
	{0xc64f, &op_ror,	  7,   1, 255, 0xff, 0x00, 0x00, 0x02}, // ror.d h b  
	{0xc650, &op_ror,	  0,   2, 255, 0xff, 0x00, 0x00, 0x02}, // ror.d a c  
	{0xc651, &op_ror,	  1,   2, 255, 0xff, 0x00, 0x00, 0x02}, // ror.d b c  
	{0xc652, &op_ror,	  2,   2, 255, 0xff, 0x00, 0x00, 0x02}, // ror.d c c  
	{0xc653, &op_ror,	  3,   2, 255, 0xff, 0x00, 0x00, 0x02}, // ror.d d c  
	{0xc654, &op_ror,	  4,   2, 255, 0xff, 0x00, 0x00, 0x02}, // ror.d e c  
	{0xc655, &op_ror,	  5,   2, 255, 0xff, 0x00, 0x00, 0x02}, // ror.d f c  
	{0xc656, &op_ror,	  6,   2, 255, 0xff, 0x00, 0x00, 0x02}, // ror.d g c  
	{0xc657, &op_ror,	  7,   2, 255, 0xff, 0x00, 0x00, 0x02}, // ror.d h c  
	{0xc658, &op_ror,	  0,   3, 255, 0xff, 0x00, 0x00, 0x02}, // ror.d a d  
	{0xc659, &op_ror,	  1,   3, 255, 0xff, 0x00, 0x00, 0x02}, // ror.d b d  
	{0xc65a, &op_ror,	  2,   3, 255, 0xff, 0x00, 0x00, 0x02}, // ror.d c d  
	{0xc65b, &op_ror,	  3,   3, 255, 0xff, 0x00, 0x00, 0x02}, // ror.d d d  
	{0xc65c, &op_ror,	  4,   3, 255, 0xff, 0x00, 0x00, 0x02}, // ror.d e d  
	{0xc65d, &op_ror,	  5,   3, 255, 0xff, 0x00, 0x00, 0x02}, // ror.d f d  
	{0xc65e, &op_ror,	  6,   3, 255, 0xff, 0x00, 0x00, 0x02}, // ror.d g d  
	{0xc65f, &op_ror,	  7,   3, 255, 0xff, 0x00, 0x00, 0x02}, // ror.d h d  
	{0xc660, &op_ror,	  0,   4, 255, 0xff, 0x00, 0x00, 0x02}, // ror.d a e  
	{0xc661, &op_ror,	  1,   4, 255, 0xff, 0x00, 0x00, 0x02}, // ror.d b e  
	{0xc662, &op_ror,	  2,   4, 255, 0xff, 0x00, 0x00, 0x02}, // ror.d c e  
	{0xc663, &op_ror,	  3,   4, 255, 0xff, 0x00, 0x00, 0x02}, // ror.d d e  
	{0xc664, &op_ror,	  4,   4, 255, 0xff, 0x00, 0x00, 0x02}, // ror.d e e  
	{0xc665, &op_ror,	  5,   4, 255, 0xff, 0x00, 0x00, 0x02}, // ror.d f e  
	{0xc666, &op_ror,	  6,   4, 255, 0xff, 0x00, 0x00, 0x02}, // ror.d g e  
	{0xc667, &op_ror,	  7,   4, 255, 0xff, 0x00, 0x00, 0x02}, // ror.d h e  
	{0xc668, &op_ror,	  0,   5, 255, 0xff, 0x00, 0x00, 0x02}, // ror.d a f  
	{0xc669, &op_ror,	  1,   5, 255, 0xff, 0x00, 0x00, 0x02}, // ror.d b f  
	{0xc66a, &op_ror,	  2,   5, 255, 0xff, 0x00, 0x00, 0x02}, // ror.d c f  
	{0xc66b, &op_ror,	  3,   5, 255, 0xff, 0x00, 0x00, 0x02}, // ror.d d f  
	{0xc66c, &op_ror,	  4,   5, 255, 0xff, 0x00, 0x00, 0x02}, // ror.d e f  
	{0xc66d, &op_ror,	  5,   5, 255, 0xff, 0x00, 0x00, 0x02}, // ror.d f f  
	{0xc66e, &op_ror,	  6,   5, 255, 0xff, 0x00, 0x00, 0x02}, // ror.d g f  
	{0xc66f, &op_ror,	  7,   5, 255, 0xff, 0x00, 0x00, 0x02}, // ror.d h f  
	{0xc670, &op_ror,	  0,   6, 255, 0xff, 0x00, 0x00, 0x02}, // ror.d a g  
	{0xc671, &op_ror,	  1,   6, 255, 0xff, 0x00, 0x00, 0x02}, // ror.d b g  
	{0xc672, &op_ror,	  2,   6, 255, 0xff, 0x00, 0x00, 0x02}, // ror.d c g  
	{0xc673, &op_ror,	  3,   6, 255, 0xff, 0x00, 0x00, 0x02}, // ror.d d g  
	{0xc674, &op_ror,	  4,   6, 255, 0xff, 0x00, 0x00, 0x02}, // ror.d e g  
	{0xc675, &op_ror,	  5,   6, 255, 0xff, 0x00, 0x00, 0x02}, // ror.d f g  
	{0xc676, &op_ror,	  6,   6, 255, 0xff, 0x00, 0x00, 0x02}, // ror.d g g  
	{0xc677, &op_ror,	  7,   6, 255, 0xff, 0x00, 0x00, 0x02}, // ror.d h g  
	{0xc678, &op_ror,	  0,   7, 255, 0xff, 0x00, 0x00, 0x02}, // ror.d a h  
	{0xc679, &op_ror,	  1,   7, 255, 0xff, 0x00, 0x00, 0x02}, // ror.d b h  
	{0xc67a, &op_ror,	  2,   7, 255, 0xff, 0x00, 0x00, 0x02}, // ror.d c h  
	{0xc67b, &op_ror,	  3,   7, 255, 0xff, 0x00, 0x00, 0x02}, // ror.d d h  
	{0xc67c, &op_ror,	  4,   7, 255, 0xff, 0x00, 0x00, 0x02}, // ror.d e h  
	{0xc67d, &op_ror,	  5,   7, 255, 0xff, 0x00, 0x00, 0x02}, // ror.d f h  
	{0xc67e, &op_ror,	  6,   7, 255, 0xff, 0x00, 0x00, 0x02}, // ror.d g h  
	{0xc67f, &op_ror,	  7,   7, 255, 0xff, 0x00, 0x00, 0x02}, // ror.d h h  
	{0xc680, &op_ror,	  0,   0, 255, 0xff, 0x00, 0x00, 0x04}, // ror a a  
	{0xc681, &op_ror,	  1,   0, 255, 0xff, 0x00, 0x00, 0x04}, // ror b a  
	{0xc682, &op_ror,	  2,   0, 255, 0xff, 0x00, 0x00, 0x04}, // ror c a  
	{0xc683, &op_ror,	  3,   0, 255, 0xff, 0x00, 0x00, 0x04}, // ror d a  
	{0xc684, &op_ror,	  4,   0, 255, 0xff, 0x00, 0x00, 0x04}, // ror e a  
	{0xc685, &op_ror,	  5,   0, 255, 0xff, 0x00, 0x00, 0x04}, // ror f a  
	{0xc686, &op_ror,	  6,   0, 255, 0xff, 0x00, 0x00, 0x04}, // ror g a  
	{0xc687, &op_ror,	  7,   0, 255, 0xff, 0x00, 0x00, 0x04}, // ror h a  
	{0xc688, &op_ror,	  0,   1, 255, 0xff, 0x00, 0x00, 0x04}, // ror a b  
	{0xc689, &op_ror,	  1,   1, 255, 0xff, 0x00, 0x00, 0x04}, // ror b b  
	{0xc68a, &op_ror,	  2,   1, 255, 0xff, 0x00, 0x00, 0x04}, // ror c b  
	{0xc68b, &op_ror,	  3,   1, 255, 0xff, 0x00, 0x00, 0x04}, // ror d b  
	{0xc68c, &op_ror,	  4,   1, 255, 0xff, 0x00, 0x00, 0x04}, // ror e b  
	{0xc68d, &op_ror,	  5,   1, 255, 0xff, 0x00, 0x00, 0x04}, // ror f b  
	{0xc68e, &op_ror,	  6,   1, 255, 0xff, 0x00, 0x00, 0x04}, // ror g b  
	{0xc68f, &op_ror,	  7,   1, 255, 0xff, 0x00, 0x00, 0x04}, // ror h b  
	{0xc690, &op_ror,	  0,   2, 255, 0xff, 0x00, 0x00, 0x04}, // ror a c  
	{0xc691, &op_ror,	  1,   2, 255, 0xff, 0x00, 0x00, 0x04}, // ror b c  
	{0xc692, &op_ror,	  2,   2, 255, 0xff, 0x00, 0x00, 0x04}, // ror c c  
	{0xc693, &op_ror,	  3,   2, 255, 0xff, 0x00, 0x00, 0x04}, // ror d c  
	{0xc694, &op_ror,	  4,   2, 255, 0xff, 0x00, 0x00, 0x04}, // ror e c  
	{0xc695, &op_ror,	  5,   2, 255, 0xff, 0x00, 0x00, 0x04}, // ror f c  
	{0xc696, &op_ror,	  6,   2, 255, 0xff, 0x00, 0x00, 0x04}, // ror g c  
	{0xc697, &op_ror,	  7,   2, 255, 0xff, 0x00, 0x00, 0x04}, // ror h c  
	{0xc698, &op_ror,	  0,   3, 255, 0xff, 0x00, 0x00, 0x04}, // ror a d  
	{0xc699, &op_ror,	  1,   3, 255, 0xff, 0x00, 0x00, 0x04}, // ror b d  
	{0xc69a, &op_ror,	  2,   3, 255, 0xff, 0x00, 0x00, 0x04}, // ror c d  
	{0xc69b, &op_ror,	  3,   3, 255, 0xff, 0x00, 0x00, 0x04}, // ror d d  
	{0xc69c, &op_ror,	  4,   3, 255, 0xff, 0x00, 0x00, 0x04}, // ror e d  
	{0xc69d, &op_ror,	  5,   3, 255, 0xff, 0x00, 0x00, 0x04}, // ror f d  
	{0xc69e, &op_ror,	  6,   3, 255, 0xff, 0x00, 0x00, 0x04}, // ror g d  
	{0xc69f, &op_ror,	  7,   3, 255, 0xff, 0x00, 0x00, 0x04}, // ror h d  
	{0xc6a0, &op_ror,	  0,   4, 255, 0xff, 0x00, 0x00, 0x04}, // ror a e  
	{0xc6a1, &op_ror,	  1,   4, 255, 0xff, 0x00, 0x00, 0x04}, // ror b e  
	{0xc6a2, &op_ror,	  2,   4, 255, 0xff, 0x00, 0x00, 0x04}, // ror c e  
	{0xc6a3, &op_ror,	  3,   4, 255, 0xff, 0x00, 0x00, 0x04}, // ror d e  
	{0xc6a4, &op_ror,	  4,   4, 255, 0xff, 0x00, 0x00, 0x04}, // ror e e  
	{0xc6a5, &op_ror,	  5,   4, 255, 0xff, 0x00, 0x00, 0x04}, // ror f e  
	{0xc6a6, &op_ror,	  6,   4, 255, 0xff, 0x00, 0x00, 0x04}, // ror g e  
	{0xc6a7, &op_ror,	  7,   4, 255, 0xff, 0x00, 0x00, 0x04}, // ror h e  
	{0xc6a8, &op_ror,	  0,   5, 255, 0xff, 0x00, 0x00, 0x04}, // ror a f  
	{0xc6a9, &op_ror,	  1,   5, 255, 0xff, 0x00, 0x00, 0x04}, // ror b f  
	{0xc6aa, &op_ror,	  2,   5, 255, 0xff, 0x00, 0x00, 0x04}, // ror c f  
	{0xc6ab, &op_ror,	  3,   5, 255, 0xff, 0x00, 0x00, 0x04}, // ror d f  
	{0xc6ac, &op_ror,	  4,   5, 255, 0xff, 0x00, 0x00, 0x04}, // ror e f  
	{0xc6ad, &op_ror,	  5,   5, 255, 0xff, 0x00, 0x00, 0x04}, // ror f f  
	{0xc6ae, &op_ror,	  6,   5, 255, 0xff, 0x00, 0x00, 0x04}, // ror g f  
	{0xc6af, &op_ror,	  7,   5, 255, 0xff, 0x00, 0x00, 0x04}, // ror h f  
	{0xc6b0, &op_ror,	  0,   6, 255, 0xff, 0x00, 0x00, 0x04}, // ror a g  
	{0xc6b1, &op_ror,	  1,   6, 255, 0xff, 0x00, 0x00, 0x04}, // ror b g  
	{0xc6b2, &op_ror,	  2,   6, 255, 0xff, 0x00, 0x00, 0x04}, // ror c g  
	{0xc6b3, &op_ror,	  3,   6, 255, 0xff, 0x00, 0x00, 0x04}, // ror d g  
	{0xc6b4, &op_ror,	  4,   6, 255, 0xff, 0x00, 0x00, 0x04}, // ror e g  
	{0xc6b5, &op_ror,	  5,   6, 255, 0xff, 0x00, 0x00, 0x04}, // ror f g  
	{0xc6b6, &op_ror,	  6,   6, 255, 0xff, 0x00, 0x00, 0x04}, // ror g g  
	{0xc6b7, &op_ror,	  7,   6, 255, 0xff, 0x00, 0x00, 0x04}, // ror h g  
	{0xc6b8, &op_ror,	  0,   7, 255, 0xff, 0x00, 0x00, 0x04}, // ror a h  
	{0xc6b9, &op_ror,	  1,   7, 255, 0xff, 0x00, 0x00, 0x04}, // ror b h  
	{0xc6ba, &op_ror,	  2,   7, 255, 0xff, 0x00, 0x00, 0x04}, // ror c h  
	{0xc6bb, &op_ror,	  3,   7, 255, 0xff, 0x00, 0x00, 0x04}, // ror d h  
	{0xc6bc, &op_ror,	  4,   7, 255, 0xff, 0x00, 0x00, 0x04}, // ror e h  
	{0xc6bd, &op_ror,	  5,   7, 255, 0xff, 0x00, 0x00, 0x04}, // ror f h  
	{0xc6be, &op_ror,	  6,   7, 255, 0xff, 0x00, 0x00, 0x04}, // ror g h  
	{0xc6bf, &op_ror,	  7,   7, 255, 0xff, 0x00, 0x00, 0x04}, // ror h h  
	{0xc700, &op_ror,	  0,   0, 255, 0xff, 0x01, 0x00, 0x01}, // ror.wr a a  
	{0xc701, &op_ror,	  1,   0, 255, 0xff, 0x01, 0x00, 0x01}, // ror.wr b a  
	{0xc702, &op_ror,	  2,   0, 255, 0xff, 0x01, 0x00, 0x01}, // ror.wr c a  
	{0xc703, &op_ror,	  3,   0, 255, 0xff, 0x01, 0x00, 0x01}, // ror.wr d a  
	{0xc704, &op_ror,	  4,   0, 255, 0xff, 0x01, 0x00, 0x01}, // ror.wr e a  
	{0xc705, &op_ror,	  5,   0, 255, 0xff, 0x01, 0x00, 0x01}, // ror.wr f a  
	{0xc706, &op_ror,	  6,   0, 255, 0xff, 0x01, 0x00, 0x01}, // ror.wr g a  
	{0xc707, &op_ror,	  7,   0, 255, 0xff, 0x01, 0x00, 0x01}, // ror.wr h a  
	{0xc708, &op_ror,	  0,   1, 255, 0xff, 0x01, 0x00, 0x01}, // ror.wr a b  
	{0xc709, &op_ror,	  1,   1, 255, 0xff, 0x01, 0x00, 0x01}, // ror.wr b b  
	{0xc70a, &op_ror,	  2,   1, 255, 0xff, 0x01, 0x00, 0x01}, // ror.wr c b  
	{0xc70b, &op_ror,	  3,   1, 255, 0xff, 0x01, 0x00, 0x01}, // ror.wr d b  
	{0xc70c, &op_ror,	  4,   1, 255, 0xff, 0x01, 0x00, 0x01}, // ror.wr e b  
	{0xc70d, &op_ror,	  5,   1, 255, 0xff, 0x01, 0x00, 0x01}, // ror.wr f b  
	{0xc70e, &op_ror,	  6,   1, 255, 0xff, 0x01, 0x00, 0x01}, // ror.wr g b  
	{0xc70f, &op_ror,	  7,   1, 255, 0xff, 0x01, 0x00, 0x01}, // ror.wr h b  
	{0xc710, &op_ror,	  0,   2, 255, 0xff, 0x01, 0x00, 0x01}, // ror.wr a c  
	{0xc711, &op_ror,	  1,   2, 255, 0xff, 0x01, 0x00, 0x01}, // ror.wr b c  
	{0xc712, &op_ror,	  2,   2, 255, 0xff, 0x01, 0x00, 0x01}, // ror.wr c c  
	{0xc713, &op_ror,	  3,   2, 255, 0xff, 0x01, 0x00, 0x01}, // ror.wr d c  
	{0xc714, &op_ror,	  4,   2, 255, 0xff, 0x01, 0x00, 0x01}, // ror.wr e c  
	{0xc715, &op_ror,	  5,   2, 255, 0xff, 0x01, 0x00, 0x01}, // ror.wr f c  
	{0xc716, &op_ror,	  6,   2, 255, 0xff, 0x01, 0x00, 0x01}, // ror.wr g c  
	{0xc717, &op_ror,	  7,   2, 255, 0xff, 0x01, 0x00, 0x01}, // ror.wr h c  
	{0xc718, &op_ror,	  0,   3, 255, 0xff, 0x01, 0x00, 0x01}, // ror.wr a d  
	{0xc719, &op_ror,	  1,   3, 255, 0xff, 0x01, 0x00, 0x01}, // ror.wr b d  
	{0xc71a, &op_ror,	  2,   3, 255, 0xff, 0x01, 0x00, 0x01}, // ror.wr c d  
	{0xc71b, &op_ror,	  3,   3, 255, 0xff, 0x01, 0x00, 0x01}, // ror.wr d d  
	{0xc71c, &op_ror,	  4,   3, 255, 0xff, 0x01, 0x00, 0x01}, // ror.wr e d  
	{0xc71d, &op_ror,	  5,   3, 255, 0xff, 0x01, 0x00, 0x01}, // ror.wr f d  
	{0xc71e, &op_ror,	  6,   3, 255, 0xff, 0x01, 0x00, 0x01}, // ror.wr g d  
	{0xc71f, &op_ror,	  7,   3, 255, 0xff, 0x01, 0x00, 0x01}, // ror.wr h d  
	{0xc720, &op_ror,	  0,   4, 255, 0xff, 0x01, 0x00, 0x01}, // ror.wr a e  
	{0xc721, &op_ror,	  1,   4, 255, 0xff, 0x01, 0x00, 0x01}, // ror.wr b e  
	{0xc722, &op_ror,	  2,   4, 255, 0xff, 0x01, 0x00, 0x01}, // ror.wr c e  
	{0xc723, &op_ror,	  3,   4, 255, 0xff, 0x01, 0x00, 0x01}, // ror.wr d e  
	{0xc724, &op_ror,	  4,   4, 255, 0xff, 0x01, 0x00, 0x01}, // ror.wr e e  
	{0xc725, &op_ror,	  5,   4, 255, 0xff, 0x01, 0x00, 0x01}, // ror.wr f e  
	{0xc726, &op_ror,	  6,   4, 255, 0xff, 0x01, 0x00, 0x01}, // ror.wr g e  
	{0xc727, &op_ror,	  7,   4, 255, 0xff, 0x01, 0x00, 0x01}, // ror.wr h e  
	{0xc728, &op_ror,	  0,   5, 255, 0xff, 0x01, 0x00, 0x01}, // ror.wr a f  
	{0xc729, &op_ror,	  1,   5, 255, 0xff, 0x01, 0x00, 0x01}, // ror.wr b f  
	{0xc72a, &op_ror,	  2,   5, 255, 0xff, 0x01, 0x00, 0x01}, // ror.wr c f  
	{0xc72b, &op_ror,	  3,   5, 255, 0xff, 0x01, 0x00, 0x01}, // ror.wr d f  
	{0xc72c, &op_ror,	  4,   5, 255, 0xff, 0x01, 0x00, 0x01}, // ror.wr e f  
	{0xc72d, &op_ror,	  5,   5, 255, 0xff, 0x01, 0x00, 0x01}, // ror.wr f f  
	{0xc72e, &op_ror,	  6,   5, 255, 0xff, 0x01, 0x00, 0x01}, // ror.wr g f  
	{0xc72f, &op_ror,	  7,   5, 255, 0xff, 0x01, 0x00, 0x01}, // ror.wr h f  
	{0xc730, &op_ror,	  0,   6, 255, 0xff, 0x01, 0x00, 0x01}, // ror.wr a g  
	{0xc731, &op_ror,	  1,   6, 255, 0xff, 0x01, 0x00, 0x01}, // ror.wr b g  
	{0xc732, &op_ror,	  2,   6, 255, 0xff, 0x01, 0x00, 0x01}, // ror.wr c g  
	{0xc733, &op_ror,	  3,   6, 255, 0xff, 0x01, 0x00, 0x01}, // ror.wr d g  
	{0xc734, &op_ror,	  4,   6, 255, 0xff, 0x01, 0x00, 0x01}, // ror.wr e g  
	{0xc735, &op_ror,	  5,   6, 255, 0xff, 0x01, 0x00, 0x01}, // ror.wr f g  
	{0xc736, &op_ror,	  6,   6, 255, 0xff, 0x01, 0x00, 0x01}, // ror.wr g g  
	{0xc737, &op_ror,	  7,   6, 255, 0xff, 0x01, 0x00, 0x01}, // ror.wr h g  
	{0xc738, &op_ror,	  0,   7, 255, 0xff, 0x01, 0x00, 0x01}, // ror.wr a h  
	{0xc739, &op_ror,	  1,   7, 255, 0xff, 0x01, 0x00, 0x01}, // ror.wr b h  
	{0xc73a, &op_ror,	  2,   7, 255, 0xff, 0x01, 0x00, 0x01}, // ror.wr c h  
	{0xc73b, &op_ror,	  3,   7, 255, 0xff, 0x01, 0x00, 0x01}, // ror.wr d h  
	{0xc73c, &op_ror,	  4,   7, 255, 0xff, 0x01, 0x00, 0x01}, // ror.wr e h  
	{0xc73d, &op_ror,	  5,   7, 255, 0xff, 0x01, 0x00, 0x01}, // ror.wr f h  
	{0xc73e, &op_ror,	  6,   7, 255, 0xff, 0x01, 0x00, 0x01}, // ror.wr g h  
	{0xc73f, &op_ror,	  7,   7, 255, 0xff, 0x01, 0x00, 0x01}, // ror.wr h h  
	{0xc740, &op_ror,	  0,   0, 255, 0xff, 0x01, 0x00, 0x02}, // ror.dr a a  
	{0xc741, &op_ror,	  1,   0, 255, 0xff, 0x01, 0x00, 0x02}, // ror.dr b a  
	{0xc742, &op_ror,	  2,   0, 255, 0xff, 0x01, 0x00, 0x02}, // ror.dr c a  
	{0xc743, &op_ror,	  3,   0, 255, 0xff, 0x01, 0x00, 0x02}, // ror.dr d a  
	{0xc744, &op_ror,	  4,   0, 255, 0xff, 0x01, 0x00, 0x02}, // ror.dr e a  
	{0xc745, &op_ror,	  5,   0, 255, 0xff, 0x01, 0x00, 0x02}, // ror.dr f a  
	{0xc746, &op_ror,	  6,   0, 255, 0xff, 0x01, 0x00, 0x02}, // ror.dr g a  
	{0xc747, &op_ror,	  7,   0, 255, 0xff, 0x01, 0x00, 0x02}, // ror.dr h a  
	{0xc748, &op_ror,	  0,   1, 255, 0xff, 0x01, 0x00, 0x02}, // ror.dr a b  
	{0xc749, &op_ror,	  1,   1, 255, 0xff, 0x01, 0x00, 0x02}, // ror.dr b b  
	{0xc74a, &op_ror,	  2,   1, 255, 0xff, 0x01, 0x00, 0x02}, // ror.dr c b  
	{0xc74b, &op_ror,	  3,   1, 255, 0xff, 0x01, 0x00, 0x02}, // ror.dr d b  
	{0xc74c, &op_ror,	  4,   1, 255, 0xff, 0x01, 0x00, 0x02}, // ror.dr e b  
	{0xc74d, &op_ror,	  5,   1, 255, 0xff, 0x01, 0x00, 0x02}, // ror.dr f b  
	{0xc74e, &op_ror,	  6,   1, 255, 0xff, 0x01, 0x00, 0x02}, // ror.dr g b  
	{0xc74f, &op_ror,	  7,   1, 255, 0xff, 0x01, 0x00, 0x02}, // ror.dr h b  
	{0xc750, &op_ror,	  0,   2, 255, 0xff, 0x01, 0x00, 0x02}, // ror.dr a c  
	{0xc751, &op_ror,	  1,   2, 255, 0xff, 0x01, 0x00, 0x02}, // ror.dr b c  
	{0xc752, &op_ror,	  2,   2, 255, 0xff, 0x01, 0x00, 0x02}, // ror.dr c c  
	{0xc753, &op_ror,	  3,   2, 255, 0xff, 0x01, 0x00, 0x02}, // ror.dr d c  
	{0xc754, &op_ror,	  4,   2, 255, 0xff, 0x01, 0x00, 0x02}, // ror.dr e c  
	{0xc755, &op_ror,	  5,   2, 255, 0xff, 0x01, 0x00, 0x02}, // ror.dr f c  
	{0xc756, &op_ror,	  6,   2, 255, 0xff, 0x01, 0x00, 0x02}, // ror.dr g c  
	{0xc757, &op_ror,	  7,   2, 255, 0xff, 0x01, 0x00, 0x02}, // ror.dr h c  
	{0xc758, &op_ror,	  0,   3, 255, 0xff, 0x01, 0x00, 0x02}, // ror.dr a d  
	{0xc759, &op_ror,	  1,   3, 255, 0xff, 0x01, 0x00, 0x02}, // ror.dr b d  
	{0xc75a, &op_ror,	  2,   3, 255, 0xff, 0x01, 0x00, 0x02}, // ror.dr c d  
	{0xc75b, &op_ror,	  3,   3, 255, 0xff, 0x01, 0x00, 0x02}, // ror.dr d d  
	{0xc75c, &op_ror,	  4,   3, 255, 0xff, 0x01, 0x00, 0x02}, // ror.dr e d  
	{0xc75d, &op_ror,	  5,   3, 255, 0xff, 0x01, 0x00, 0x02}, // ror.dr f d  
	{0xc75e, &op_ror,	  6,   3, 255, 0xff, 0x01, 0x00, 0x02}, // ror.dr g d  
	{0xc75f, &op_ror,	  7,   3, 255, 0xff, 0x01, 0x00, 0x02}, // ror.dr h d  
	{0xc760, &op_ror,	  0,   4, 255, 0xff, 0x01, 0x00, 0x02}, // ror.dr a e  
	{0xc761, &op_ror,	  1,   4, 255, 0xff, 0x01, 0x00, 0x02}, // ror.dr b e  
	{0xc762, &op_ror,	  2,   4, 255, 0xff, 0x01, 0x00, 0x02}, // ror.dr c e  
	{0xc763, &op_ror,	  3,   4, 255, 0xff, 0x01, 0x00, 0x02}, // ror.dr d e  
	{0xc764, &op_ror,	  4,   4, 255, 0xff, 0x01, 0x00, 0x02}, // ror.dr e e  
	{0xc765, &op_ror,	  5,   4, 255, 0xff, 0x01, 0x00, 0x02}, // ror.dr f e  
	{0xc766, &op_ror,	  6,   4, 255, 0xff, 0x01, 0x00, 0x02}, // ror.dr g e  
	{0xc767, &op_ror,	  7,   4, 255, 0xff, 0x01, 0x00, 0x02}, // ror.dr h e  
	{0xc768, &op_ror,	  0,   5, 255, 0xff, 0x01, 0x00, 0x02}, // ror.dr a f  
	{0xc769, &op_ror,	  1,   5, 255, 0xff, 0x01, 0x00, 0x02}, // ror.dr b f  
	{0xc76a, &op_ror,	  2,   5, 255, 0xff, 0x01, 0x00, 0x02}, // ror.dr c f  
	{0xc76b, &op_ror,	  3,   5, 255, 0xff, 0x01, 0x00, 0x02}, // ror.dr d f  
	{0xc76c, &op_ror,	  4,   5, 255, 0xff, 0x01, 0x00, 0x02}, // ror.dr e f  
	{0xc76d, &op_ror,	  5,   5, 255, 0xff, 0x01, 0x00, 0x02}, // ror.dr f f  
	{0xc76e, &op_ror,	  6,   5, 255, 0xff, 0x01, 0x00, 0x02}, // ror.dr g f  
	{0xc76f, &op_ror,	  7,   5, 255, 0xff, 0x01, 0x00, 0x02}, // ror.dr h f  
	{0xc770, &op_ror,	  0,   6, 255, 0xff, 0x01, 0x00, 0x02}, // ror.dr a g  
	{0xc771, &op_ror,	  1,   6, 255, 0xff, 0x01, 0x00, 0x02}, // ror.dr b g  
	{0xc772, &op_ror,	  2,   6, 255, 0xff, 0x01, 0x00, 0x02}, // ror.dr c g  
	{0xc773, &op_ror,	  3,   6, 255, 0xff, 0x01, 0x00, 0x02}, // ror.dr d g  
	{0xc774, &op_ror,	  4,   6, 255, 0xff, 0x01, 0x00, 0x02}, // ror.dr e g  
	{0xc775, &op_ror,	  5,   6, 255, 0xff, 0x01, 0x00, 0x02}, // ror.dr f g  
	{0xc776, &op_ror,	  6,   6, 255, 0xff, 0x01, 0x00, 0x02}, // ror.dr g g  
	{0xc777, &op_ror,	  7,   6, 255, 0xff, 0x01, 0x00, 0x02}, // ror.dr h g  
	{0xc778, &op_ror,	  0,   7, 255, 0xff, 0x01, 0x00, 0x02}, // ror.dr a h  
	{0xc779, &op_ror,	  1,   7, 255, 0xff, 0x01, 0x00, 0x02}, // ror.dr b h  
	{0xc77a, &op_ror,	  2,   7, 255, 0xff, 0x01, 0x00, 0x02}, // ror.dr c h  
	{0xc77b, &op_ror,	  3,   7, 255, 0xff, 0x01, 0x00, 0x02}, // ror.dr d h  
	{0xc77c, &op_ror,	  4,   7, 255, 0xff, 0x01, 0x00, 0x02}, // ror.dr e h  
	{0xc77d, &op_ror,	  5,   7, 255, 0xff, 0x01, 0x00, 0x02}, // ror.dr f h  
	{0xc77e, &op_ror,	  6,   7, 255, 0xff, 0x01, 0x00, 0x02}, // ror.dr g h  
	{0xc77f, &op_ror,	  7,   7, 255, 0xff, 0x01, 0x00, 0x02}, // ror.dr h h  
	{0xc780, &op_ror,	  0,   0, 255, 0xff, 0x01, 0x00, 0x04}, // ror.r a a  
	{0xc781, &op_ror,	  1,   0, 255, 0xff, 0x01, 0x00, 0x04}, // ror.r b a  
	{0xc782, &op_ror,	  2,   0, 255, 0xff, 0x01, 0x00, 0x04}, // ror.r c a  
	{0xc783, &op_ror,	  3,   0, 255, 0xff, 0x01, 0x00, 0x04}, // ror.r d a  
	{0xc784, &op_ror,	  4,   0, 255, 0xff, 0x01, 0x00, 0x04}, // ror.r e a  
	{0xc785, &op_ror,	  5,   0, 255, 0xff, 0x01, 0x00, 0x04}, // ror.r f a  
	{0xc786, &op_ror,	  6,   0, 255, 0xff, 0x01, 0x00, 0x04}, // ror.r g a  
	{0xc787, &op_ror,	  7,   0, 255, 0xff, 0x01, 0x00, 0x04}, // ror.r h a  
	{0xc788, &op_ror,	  0,   1, 255, 0xff, 0x01, 0x00, 0x04}, // ror.r a b  
	{0xc789, &op_ror,	  1,   1, 255, 0xff, 0x01, 0x00, 0x04}, // ror.r b b  
	{0xc78a, &op_ror,	  2,   1, 255, 0xff, 0x01, 0x00, 0x04}, // ror.r c b  
	{0xc78b, &op_ror,	  3,   1, 255, 0xff, 0x01, 0x00, 0x04}, // ror.r d b  
	{0xc78c, &op_ror,	  4,   1, 255, 0xff, 0x01, 0x00, 0x04}, // ror.r e b  
	{0xc78d, &op_ror,	  5,   1, 255, 0xff, 0x01, 0x00, 0x04}, // ror.r f b  
	{0xc78e, &op_ror,	  6,   1, 255, 0xff, 0x01, 0x00, 0x04}, // ror.r g b  
	{0xc78f, &op_ror,	  7,   1, 255, 0xff, 0x01, 0x00, 0x04}, // ror.r h b  
	{0xc790, &op_ror,	  0,   2, 255, 0xff, 0x01, 0x00, 0x04}, // ror.r a c  
	{0xc791, &op_ror,	  1,   2, 255, 0xff, 0x01, 0x00, 0x04}, // ror.r b c  
	{0xc792, &op_ror,	  2,   2, 255, 0xff, 0x01, 0x00, 0x04}, // ror.r c c  
	{0xc793, &op_ror,	  3,   2, 255, 0xff, 0x01, 0x00, 0x04}, // ror.r d c  
	{0xc794, &op_ror,	  4,   2, 255, 0xff, 0x01, 0x00, 0x04}, // ror.r e c  
	{0xc795, &op_ror,	  5,   2, 255, 0xff, 0x01, 0x00, 0x04}, // ror.r f c  
	{0xc796, &op_ror,	  6,   2, 255, 0xff, 0x01, 0x00, 0x04}, // ror.r g c  
	{0xc797, &op_ror,	  7,   2, 255, 0xff, 0x01, 0x00, 0x04}, // ror.r h c  
	{0xc798, &op_ror,	  0,   3, 255, 0xff, 0x01, 0x00, 0x04}, // ror.r a d  
	{0xc799, &op_ror,	  1,   3, 255, 0xff, 0x01, 0x00, 0x04}, // ror.r b d  
	{0xc79a, &op_ror,	  2,   3, 255, 0xff, 0x01, 0x00, 0x04}, // ror.r c d  
	{0xc79b, &op_ror,	  3,   3, 255, 0xff, 0x01, 0x00, 0x04}, // ror.r d d  
	{0xc79c, &op_ror,	  4,   3, 255, 0xff, 0x01, 0x00, 0x04}, // ror.r e d  
	{0xc79d, &op_ror,	  5,   3, 255, 0xff, 0x01, 0x00, 0x04}, // ror.r f d  
	{0xc79e, &op_ror,	  6,   3, 255, 0xff, 0x01, 0x00, 0x04}, // ror.r g d  
	{0xc79f, &op_ror,	  7,   3, 255, 0xff, 0x01, 0x00, 0x04}, // ror.r h d  
	{0xc7a0, &op_ror,	  0,   4, 255, 0xff, 0x01, 0x00, 0x04}, // ror.r a e  
	{0xc7a1, &op_ror,	  1,   4, 255, 0xff, 0x01, 0x00, 0x04}, // ror.r b e  
	{0xc7a2, &op_ror,	  2,   4, 255, 0xff, 0x01, 0x00, 0x04}, // ror.r c e  
	{0xc7a3, &op_ror,	  3,   4, 255, 0xff, 0x01, 0x00, 0x04}, // ror.r d e  
	{0xc7a4, &op_ror,	  4,   4, 255, 0xff, 0x01, 0x00, 0x04}, // ror.r e e  
	{0xc7a5, &op_ror,	  5,   4, 255, 0xff, 0x01, 0x00, 0x04}, // ror.r f e  
	{0xc7a6, &op_ror,	  6,   4, 255, 0xff, 0x01, 0x00, 0x04}, // ror.r g e  
	{0xc7a7, &op_ror,	  7,   4, 255, 0xff, 0x01, 0x00, 0x04}, // ror.r h e  
	{0xc7a8, &op_ror,	  0,   5, 255, 0xff, 0x01, 0x00, 0x04}, // ror.r a f  
	{0xc7a9, &op_ror,	  1,   5, 255, 0xff, 0x01, 0x00, 0x04}, // ror.r b f  
	{0xc7aa, &op_ror,	  2,   5, 255, 0xff, 0x01, 0x00, 0x04}, // ror.r c f  
	{0xc7ab, &op_ror,	  3,   5, 255, 0xff, 0x01, 0x00, 0x04}, // ror.r d f  
	{0xc7ac, &op_ror,	  4,   5, 255, 0xff, 0x01, 0x00, 0x04}, // ror.r e f  
	{0xc7ad, &op_ror,	  5,   5, 255, 0xff, 0x01, 0x00, 0x04}, // ror.r f f  
	{0xc7ae, &op_ror,	  6,   5, 255, 0xff, 0x01, 0x00, 0x04}, // ror.r g f  
	{0xc7af, &op_ror,	  7,   5, 255, 0xff, 0x01, 0x00, 0x04}, // ror.r h f  
	{0xc7b0, &op_ror,	  0,   6, 255, 0xff, 0x01, 0x00, 0x04}, // ror.r a g  
	{0xc7b1, &op_ror,	  1,   6, 255, 0xff, 0x01, 0x00, 0x04}, // ror.r b g  
	{0xc7b2, &op_ror,	  2,   6, 255, 0xff, 0x01, 0x00, 0x04}, // ror.r c g  
	{0xc7b3, &op_ror,	  3,   6, 255, 0xff, 0x01, 0x00, 0x04}, // ror.r d g  
	{0xc7b4, &op_ror,	  4,   6, 255, 0xff, 0x01, 0x00, 0x04}, // ror.r e g  
	{0xc7b5, &op_ror,	  5,   6, 255, 0xff, 0x01, 0x00, 0x04}, // ror.r f g  
	{0xc7b6, &op_ror,	  6,   6, 255, 0xff, 0x01, 0x00, 0x04}, // ror.r g g  
	{0xc7b7, &op_ror,	  7,   6, 255, 0xff, 0x01, 0x00, 0x04}, // ror.r h g  
	{0xc7b8, &op_ror,	  0,   7, 255, 0xff, 0x01, 0x00, 0x04}, // ror.r a h  
	{0xc7b9, &op_ror,	  1,   7, 255, 0xff, 0x01, 0x00, 0x04}, // ror.r b h  
	{0xc7ba, &op_ror,	  2,   7, 255, 0xff, 0x01, 0x00, 0x04}, // ror.r c h  
	{0xc7bb, &op_ror,	  3,   7, 255, 0xff, 0x01, 0x00, 0x04}, // ror.r d h  
	{0xc7bc, &op_ror,	  4,   7, 255, 0xff, 0x01, 0x00, 0x04}, // ror.r e h  
	{0xc7bd, &op_ror,	  5,   7, 255, 0xff, 0x01, 0x00, 0x04}, // ror.r f h  
	{0xc7be, &op_ror,	  6,   7, 255, 0xff, 0x01, 0x00, 0x04}, // ror.r g h  
	{0xc7bf, &op_ror,	  7,   7, 255, 0xff, 0x01, 0x00, 0x04}, // ror.r h h  
	{0xc6c8, &op_ror,	  0,   8, 255, 0xff, 0x00, 0x01, 0x01}, // ror.wi a <literal>  
	{0xc6c9, &op_ror,	  1,   8, 255, 0xff, 0x00, 0x01, 0x01}, // ror.wi b <literal>  
	{0xc6ca, &op_ror,	  2,   8, 255, 0xff, 0x00, 0x01, 0x01}, // ror.wi c <literal>  
	{0xc6cb, &op_ror,	  3,   8, 255, 0xff, 0x00, 0x01, 0x01}, // ror.wi d <literal>  
	{0xc6cc, &op_ror,	  4,   8, 255, 0xff, 0x00, 0x01, 0x01}, // ror.wi e <literal>  
	{0xc6cd, &op_ror,	  5,   8, 255, 0xff, 0x00, 0x01, 0x01}, // ror.wi f <literal>  
	{0xc6ce, &op_ror,	  6,   8, 255, 0xff, 0x00, 0x01, 0x01}, // ror.wi g <literal>  
	{0xc6cf, &op_ror,	  7,   8, 255, 0xff, 0x00, 0x01, 0x01}, // ror.wi h <literal>  
	{0xc6d0, &op_ror,	  0,   8, 255, 0xff, 0x00, 0x02, 0x02}, // ror.di a <literal>  
	{0xc6d1, &op_ror,	  1,   8, 255, 0xff, 0x00, 0x02, 0x02}, // ror.di b <literal>  
	{0xc6d2, &op_ror,	  2,   8, 255, 0xff, 0x00, 0x02, 0x02}, // ror.di c <literal>  
	{0xc6d3, &op_ror,	  3,   8, 255, 0xff, 0x00, 0x02, 0x02}, // ror.di d <literal>  
	{0xc6d4, &op_ror,	  4,   8, 255, 0xff, 0x00, 0x02, 0x02}, // ror.di e <literal>  
	{0xc6d5, &op_ror,	  5,   8, 255, 0xff, 0x00, 0x02, 0x02}, // ror.di f <literal>  
	{0xc6d6, &op_ror,	  6,   8, 255, 0xff, 0x00, 0x02, 0x02}, // ror.di g <literal>  
	{0xc6d7, &op_ror,	  7,   8, 255, 0xff, 0x00, 0x02, 0x02}, // ror.di h <literal>  
	{0xc6e0, &op_ror,	  0,   8, 255, 0xff, 0x00, 0x04, 0x04}, // ror.i a <literal>  
	{0xc6e1, &op_ror,	  1,   8, 255, 0xff, 0x00, 0x04, 0x04}, // ror.i b <literal>  
	{0xc6e2, &op_ror,	  2,   8, 255, 0xff, 0x00, 0x04, 0x04}, // ror.i c <literal>  
	{0xc6e3, &op_ror,	  3,   8, 255, 0xff, 0x00, 0x04, 0x04}, // ror.i d <literal>  
	{0xc6e4, &op_ror,	  4,   8, 255, 0xff, 0x00, 0x04, 0x04}, // ror.i e <literal>  
	{0xc6e5, &op_ror,	  5,   8, 255, 0xff, 0x00, 0x04, 0x04}, // ror.i f <literal>  
	{0xc6e6, &op_ror,	  6,   8, 255, 0xff, 0x00, 0x04, 0x04}, // ror.i g <literal>  
	{0xc6e7, &op_ror,	  7,   8, 255, 0xff, 0x00, 0x04, 0x04}, // ror.i h <literal>  
	{0xc7c8, &op_ror,	  0,   8, 255, 0xff, 0x01, 0x04, 0x01}, // ror.wri a <literal>  
	{0xc7c9, &op_ror,	  1,   8, 255, 0xff, 0x01, 0x04, 0x01}, // ror.wri b <literal>  
	{0xc7ca, &op_ror,	  2,   8, 255, 0xff, 0x01, 0x04, 0x01}, // ror.wri c <literal>  
	{0xc7cb, &op_ror,	  3,   8, 255, 0xff, 0x01, 0x04, 0x01}, // ror.wri d <literal>  
	{0xc7cc, &op_ror,	  4,   8, 255, 0xff, 0x01, 0x04, 0x01}, // ror.wri e <literal>  
	{0xc7cd, &op_ror,	  5,   8, 255, 0xff, 0x01, 0x04, 0x01}, // ror.wri f <literal>  
	{0xc7ce, &op_ror,	  6,   8, 255, 0xff, 0x01, 0x04, 0x01}, // ror.wri g <literal>  
	{0xc7cf, &op_ror,	  7,   8, 255, 0xff, 0x01, 0x04, 0x01}, // ror.wri h <literal>  
	{0xc7d0, &op_ror,	  0,   8, 255, 0xff, 0x01, 0x04, 0x02}, // ror.dri a <literal>  
	{0xc7d1, &op_ror,	  1,   8, 255, 0xff, 0x01, 0x04, 0x02}, // ror.dri b <literal>  
	{0xc7d2, &op_ror,	  2,   8, 255, 0xff, 0x01, 0x04, 0x02}, // ror.dri c <literal>  
	{0xc7d3, &op_ror,	  3,   8, 255, 0xff, 0x01, 0x04, 0x02}, // ror.dri d <literal>  
	{0xc7d4, &op_ror,	  4,   8, 255, 0xff, 0x01, 0x04, 0x02}, // ror.dri e <literal>  
	{0xc7d5, &op_ror,	  5,   8, 255, 0xff, 0x01, 0x04, 0x02}, // ror.dri f <literal>  
	{0xc7d6, &op_ror,	  6,   8, 255, 0xff, 0x01, 0x04, 0x02}, // ror.dri g <literal>  
	{0xc7d7, &op_ror,	  7,   8, 255, 0xff, 0x01, 0x04, 0x02}, // ror.dri h <literal>  
	{0xc7e0, &op_ror,	  0,   8, 255, 0xff, 0x01, 0x04, 0x04}, // ror.ri a <literal>  
	{0xc7e1, &op_ror,	  1,   8, 255, 0xff, 0x01, 0x04, 0x04}, // ror.ri b <literal>  
	{0xc7e2, &op_ror,	  2,   8, 255, 0xff, 0x01, 0x04, 0x04}, // ror.ri c <literal>  
	{0xc7e3, &op_ror,	  3,   8, 255, 0xff, 0x01, 0x04, 0x04}, // ror.ri d <literal>  
	{0xc7e4, &op_ror,	  4,   8, 255, 0xff, 0x01, 0x04, 0x04}, // ror.ri e <literal>  
	{0xc7e5, &op_ror,	  5,   8, 255, 0xff, 0x01, 0x04, 0x04}, // ror.ri f <literal>  
	{0xc7e6, &op_ror,	  6,   8, 255, 0xff, 0x01, 0x04, 0x04}, // ror.ri g <literal>  
	{0xc7e7, &op_ror,	  7,   8, 255, 0xff, 0x01, 0x04, 0x04}, // ror.ri h <literal>  
	{0xc800, &op_and,	  0,   0, 255, 0xff, 0x00, 0x00, 0x01}, // and.w a a  
	{0xc801, &op_and,	  1,   0, 255, 0xff, 0x00, 0x00, 0x01}, // and.w b a  
	{0xc802, &op_and,	  2,   0, 255, 0xff, 0x00, 0x00, 0x01}, // and.w c a  
	{0xc803, &op_and,	  3,   0, 255, 0xff, 0x00, 0x00, 0x01}, // and.w d a  
	{0xc804, &op_and,	  4,   0, 255, 0xff, 0x00, 0x00, 0x01}, // and.w e a  
	{0xc805, &op_and,	  5,   0, 255, 0xff, 0x00, 0x00, 0x01}, // and.w f a  
	{0xc806, &op_and,	  6,   0, 255, 0xff, 0x00, 0x00, 0x01}, // and.w g a  
	{0xc807, &op_and,	  7,   0, 255, 0xff, 0x00, 0x00, 0x01}, // and.w h a  
	{0xc808, &op_and,	  0,   1, 255, 0xff, 0x00, 0x00, 0x01}, // and.w a b  
	{0xc809, &op_and,	  1,   1, 255, 0xff, 0x00, 0x00, 0x01}, // and.w b b  
	{0xc80a, &op_and,	  2,   1, 255, 0xff, 0x00, 0x00, 0x01}, // and.w c b  
	{0xc80b, &op_and,	  3,   1, 255, 0xff, 0x00, 0x00, 0x01}, // and.w d b  
	{0xc80c, &op_and,	  4,   1, 255, 0xff, 0x00, 0x00, 0x01}, // and.w e b  
	{0xc80d, &op_and,	  5,   1, 255, 0xff, 0x00, 0x00, 0x01}, // and.w f b  
	{0xc80e, &op_and,	  6,   1, 255, 0xff, 0x00, 0x00, 0x01}, // and.w g b  
	{0xc80f, &op_and,	  7,   1, 255, 0xff, 0x00, 0x00, 0x01}, // and.w h b  
	{0xc810, &op_and,	  0,   2, 255, 0xff, 0x00, 0x00, 0x01}, // and.w a c  
	{0xc811, &op_and,	  1,   2, 255, 0xff, 0x00, 0x00, 0x01}, // and.w b c  
	{0xc812, &op_and,	  2,   2, 255, 0xff, 0x00, 0x00, 0x01}, // and.w c c  
	{0xc813, &op_and,	  3,   2, 255, 0xff, 0x00, 0x00, 0x01}, // and.w d c  
	{0xc814, &op_and,	  4,   2, 255, 0xff, 0x00, 0x00, 0x01}, // and.w e c  
	{0xc815, &op_and,	  5,   2, 255, 0xff, 0x00, 0x00, 0x01}, // and.w f c  
	{0xc816, &op_and,	  6,   2, 255, 0xff, 0x00, 0x00, 0x01}, // and.w g c  
	{0xc817, &op_and,	  7,   2, 255, 0xff, 0x00, 0x00, 0x01}, // and.w h c  
	{0xc818, &op_and,	  0,   3, 255, 0xff, 0x00, 0x00, 0x01}, // and.w a d  
	{0xc819, &op_and,	  1,   3, 255, 0xff, 0x00, 0x00, 0x01}, // and.w b d  
	{0xc81a, &op_and,	  2,   3, 255, 0xff, 0x00, 0x00, 0x01}, // and.w c d  
	{0xc81b, &op_and,	  3,   3, 255, 0xff, 0x00, 0x00, 0x01}, // and.w d d  
	{0xc81c, &op_and,	  4,   3, 255, 0xff, 0x00, 0x00, 0x01}, // and.w e d  
	{0xc81d, &op_and,	  5,   3, 255, 0xff, 0x00, 0x00, 0x01}, // and.w f d  
	{0xc81e, &op_and,	  6,   3, 255, 0xff, 0x00, 0x00, 0x01}, // and.w g d  
	{0xc81f, &op_and,	  7,   3, 255, 0xff, 0x00, 0x00, 0x01}, // and.w h d  
	{0xc820, &op_and,	  0,   4, 255, 0xff, 0x00, 0x00, 0x01}, // and.w a e  
	{0xc821, &op_and,	  1,   4, 255, 0xff, 0x00, 0x00, 0x01}, // and.w b e  
	{0xc822, &op_and,	  2,   4, 255, 0xff, 0x00, 0x00, 0x01}, // and.w c e  
	{0xc823, &op_and,	  3,   4, 255, 0xff, 0x00, 0x00, 0x01}, // and.w d e  
	{0xc824, &op_and,	  4,   4, 255, 0xff, 0x00, 0x00, 0x01}, // and.w e e  
	{0xc825, &op_and,	  5,   4, 255, 0xff, 0x00, 0x00, 0x01}, // and.w f e  
	{0xc826, &op_and,	  6,   4, 255, 0xff, 0x00, 0x00, 0x01}, // and.w g e  
	{0xc827, &op_and,	  7,   4, 255, 0xff, 0x00, 0x00, 0x01}, // and.w h e  
	{0xc828, &op_and,	  0,   5, 255, 0xff, 0x00, 0x00, 0x01}, // and.w a f  
	{0xc829, &op_and,	  1,   5, 255, 0xff, 0x00, 0x00, 0x01}, // and.w b f  
	{0xc82a, &op_and,	  2,   5, 255, 0xff, 0x00, 0x00, 0x01}, // and.w c f  
	{0xc82b, &op_and,	  3,   5, 255, 0xff, 0x00, 0x00, 0x01}, // and.w d f  
	{0xc82c, &op_and,	  4,   5, 255, 0xff, 0x00, 0x00, 0x01}, // and.w e f  
	{0xc82d, &op_and,	  5,   5, 255, 0xff, 0x00, 0x00, 0x01}, // and.w f f  
	{0xc82e, &op_and,	  6,   5, 255, 0xff, 0x00, 0x00, 0x01}, // and.w g f  
	{0xc82f, &op_and,	  7,   5, 255, 0xff, 0x00, 0x00, 0x01}, // and.w h f  
	{0xc830, &op_and,	  0,   6, 255, 0xff, 0x00, 0x00, 0x01}, // and.w a g  
	{0xc831, &op_and,	  1,   6, 255, 0xff, 0x00, 0x00, 0x01}, // and.w b g  
	{0xc832, &op_and,	  2,   6, 255, 0xff, 0x00, 0x00, 0x01}, // and.w c g  
	{0xc833, &op_and,	  3,   6, 255, 0xff, 0x00, 0x00, 0x01}, // and.w d g  
	{0xc834, &op_and,	  4,   6, 255, 0xff, 0x00, 0x00, 0x01}, // and.w e g  
	{0xc835, &op_and,	  5,   6, 255, 0xff, 0x00, 0x00, 0x01}, // and.w f g  
	{0xc836, &op_and,	  6,   6, 255, 0xff, 0x00, 0x00, 0x01}, // and.w g g  
	{0xc837, &op_and,	  7,   6, 255, 0xff, 0x00, 0x00, 0x01}, // and.w h g  
	{0xc838, &op_and,	  0,   7, 255, 0xff, 0x00, 0x00, 0x01}, // and.w a h  
	{0xc839, &op_and,	  1,   7, 255, 0xff, 0x00, 0x00, 0x01}, // and.w b h  
	{0xc83a, &op_and,	  2,   7, 255, 0xff, 0x00, 0x00, 0x01}, // and.w c h  
	{0xc83b, &op_and,	  3,   7, 255, 0xff, 0x00, 0x00, 0x01}, // and.w d h  
	{0xc83c, &op_and,	  4,   7, 255, 0xff, 0x00, 0x00, 0x01}, // and.w e h  
	{0xc83d, &op_and,	  5,   7, 255, 0xff, 0x00, 0x00, 0x01}, // and.w f h  
	{0xc83e, &op_and,	  6,   7, 255, 0xff, 0x00, 0x00, 0x01}, // and.w g h  
	{0xc83f, &op_and,	  7,   7, 255, 0xff, 0x00, 0x00, 0x01}, // and.w h h  
	{0xc840, &op_and,	  0,   0, 255, 0xff, 0x00, 0x00, 0x02}, // and.d a a  
	{0xc841, &op_and,	  1,   0, 255, 0xff, 0x00, 0x00, 0x02}, // and.d b a  
	{0xc842, &op_and,	  2,   0, 255, 0xff, 0x00, 0x00, 0x02}, // and.d c a  
	{0xc843, &op_and,	  3,   0, 255, 0xff, 0x00, 0x00, 0x02}, // and.d d a  
	{0xc844, &op_and,	  4,   0, 255, 0xff, 0x00, 0x00, 0x02}, // and.d e a  
	{0xc845, &op_and,	  5,   0, 255, 0xff, 0x00, 0x00, 0x02}, // and.d f a  
	{0xc846, &op_and,	  6,   0, 255, 0xff, 0x00, 0x00, 0x02}, // and.d g a  
	{0xc847, &op_and,	  7,   0, 255, 0xff, 0x00, 0x00, 0x02}, // and.d h a  
	{0xc848, &op_and,	  0,   1, 255, 0xff, 0x00, 0x00, 0x02}, // and.d a b  
	{0xc849, &op_and,	  1,   1, 255, 0xff, 0x00, 0x00, 0x02}, // and.d b b  
	{0xc84a, &op_and,	  2,   1, 255, 0xff, 0x00, 0x00, 0x02}, // and.d c b  
	{0xc84b, &op_and,	  3,   1, 255, 0xff, 0x00, 0x00, 0x02}, // and.d d b  
	{0xc84c, &op_and,	  4,   1, 255, 0xff, 0x00, 0x00, 0x02}, // and.d e b  
	{0xc84d, &op_and,	  5,   1, 255, 0xff, 0x00, 0x00, 0x02}, // and.d f b  
	{0xc84e, &op_and,	  6,   1, 255, 0xff, 0x00, 0x00, 0x02}, // and.d g b  
	{0xc84f, &op_and,	  7,   1, 255, 0xff, 0x00, 0x00, 0x02}, // and.d h b  
	{0xc850, &op_and,	  0,   2, 255, 0xff, 0x00, 0x00, 0x02}, // and.d a c  
	{0xc851, &op_and,	  1,   2, 255, 0xff, 0x00, 0x00, 0x02}, // and.d b c  
	{0xc852, &op_and,	  2,   2, 255, 0xff, 0x00, 0x00, 0x02}, // and.d c c  
	{0xc853, &op_and,	  3,   2, 255, 0xff, 0x00, 0x00, 0x02}, // and.d d c  
	{0xc854, &op_and,	  4,   2, 255, 0xff, 0x00, 0x00, 0x02}, // and.d e c  
	{0xc855, &op_and,	  5,   2, 255, 0xff, 0x00, 0x00, 0x02}, // and.d f c  
	{0xc856, &op_and,	  6,   2, 255, 0xff, 0x00, 0x00, 0x02}, // and.d g c  
	{0xc857, &op_and,	  7,   2, 255, 0xff, 0x00, 0x00, 0x02}, // and.d h c  
	{0xc858, &op_and,	  0,   3, 255, 0xff, 0x00, 0x00, 0x02}, // and.d a d  
	{0xc859, &op_and,	  1,   3, 255, 0xff, 0x00, 0x00, 0x02}, // and.d b d  
	{0xc85a, &op_and,	  2,   3, 255, 0xff, 0x00, 0x00, 0x02}, // and.d c d  
	{0xc85b, &op_and,	  3,   3, 255, 0xff, 0x00, 0x00, 0x02}, // and.d d d  
	{0xc85c, &op_and,	  4,   3, 255, 0xff, 0x00, 0x00, 0x02}, // and.d e d  
	{0xc85d, &op_and,	  5,   3, 255, 0xff, 0x00, 0x00, 0x02}, // and.d f d  
	{0xc85e, &op_and,	  6,   3, 255, 0xff, 0x00, 0x00, 0x02}, // and.d g d  
	{0xc85f, &op_and,	  7,   3, 255, 0xff, 0x00, 0x00, 0x02}, // and.d h d  
	{0xc860, &op_and,	  0,   4, 255, 0xff, 0x00, 0x00, 0x02}, // and.d a e  
	{0xc861, &op_and,	  1,   4, 255, 0xff, 0x00, 0x00, 0x02}, // and.d b e  
	{0xc862, &op_and,	  2,   4, 255, 0xff, 0x00, 0x00, 0x02}, // and.d c e  
	{0xc863, &op_and,	  3,   4, 255, 0xff, 0x00, 0x00, 0x02}, // and.d d e  
	{0xc864, &op_and,	  4,   4, 255, 0xff, 0x00, 0x00, 0x02}, // and.d e e  
	{0xc865, &op_and,	  5,   4, 255, 0xff, 0x00, 0x00, 0x02}, // and.d f e  
	{0xc866, &op_and,	  6,   4, 255, 0xff, 0x00, 0x00, 0x02}, // and.d g e  
	{0xc867, &op_and,	  7,   4, 255, 0xff, 0x00, 0x00, 0x02}, // and.d h e  
	{0xc868, &op_and,	  0,   5, 255, 0xff, 0x00, 0x00, 0x02}, // and.d a f  
	{0xc869, &op_and,	  1,   5, 255, 0xff, 0x00, 0x00, 0x02}, // and.d b f  
	{0xc86a, &op_and,	  2,   5, 255, 0xff, 0x00, 0x00, 0x02}, // and.d c f  
	{0xc86b, &op_and,	  3,   5, 255, 0xff, 0x00, 0x00, 0x02}, // and.d d f  
	{0xc86c, &op_and,	  4,   5, 255, 0xff, 0x00, 0x00, 0x02}, // and.d e f  
	{0xc86d, &op_and,	  5,   5, 255, 0xff, 0x00, 0x00, 0x02}, // and.d f f  
	{0xc86e, &op_and,	  6,   5, 255, 0xff, 0x00, 0x00, 0x02}, // and.d g f  
	{0xc86f, &op_and,	  7,   5, 255, 0xff, 0x00, 0x00, 0x02}, // and.d h f  
	{0xc870, &op_and,	  0,   6, 255, 0xff, 0x00, 0x00, 0x02}, // and.d a g  
	{0xc871, &op_and,	  1,   6, 255, 0xff, 0x00, 0x00, 0x02}, // and.d b g  
	{0xc872, &op_and,	  2,   6, 255, 0xff, 0x00, 0x00, 0x02}, // and.d c g  
	{0xc873, &op_and,	  3,   6, 255, 0xff, 0x00, 0x00, 0x02}, // and.d d g  
	{0xc874, &op_and,	  4,   6, 255, 0xff, 0x00, 0x00, 0x02}, // and.d e g  
	{0xc875, &op_and,	  5,   6, 255, 0xff, 0x00, 0x00, 0x02}, // and.d f g  
	{0xc876, &op_and,	  6,   6, 255, 0xff, 0x00, 0x00, 0x02}, // and.d g g  
	{0xc877, &op_and,	  7,   6, 255, 0xff, 0x00, 0x00, 0x02}, // and.d h g  
	{0xc878, &op_and,	  0,   7, 255, 0xff, 0x00, 0x00, 0x02}, // and.d a h  
	{0xc879, &op_and,	  1,   7, 255, 0xff, 0x00, 0x00, 0x02}, // and.d b h  
	{0xc87a, &op_and,	  2,   7, 255, 0xff, 0x00, 0x00, 0x02}, // and.d c h  
	{0xc87b, &op_and,	  3,   7, 255, 0xff, 0x00, 0x00, 0x02}, // and.d d h  
	{0xc87c, &op_and,	  4,   7, 255, 0xff, 0x00, 0x00, 0x02}, // and.d e h  
	{0xc87d, &op_and,	  5,   7, 255, 0xff, 0x00, 0x00, 0x02}, // and.d f h  
	{0xc87e, &op_and,	  6,   7, 255, 0xff, 0x00, 0x00, 0x02}, // and.d g h  
	{0xc87f, &op_and,	  7,   7, 255, 0xff, 0x00, 0x00, 0x02}, // and.d h h  
	{0xc880, &op_and,	  0,   0, 255, 0xff, 0x00, 0x00, 0x04}, // and a a  
	{0xc881, &op_and,	  1,   0, 255, 0xff, 0x00, 0x00, 0x04}, // and b a  
	{0xc882, &op_and,	  2,   0, 255, 0xff, 0x00, 0x00, 0x04}, // and c a  
	{0xc883, &op_and,	  3,   0, 255, 0xff, 0x00, 0x00, 0x04}, // and d a  
	{0xc884, &op_and,	  4,   0, 255, 0xff, 0x00, 0x00, 0x04}, // and e a  
	{0xc885, &op_and,	  5,   0, 255, 0xff, 0x00, 0x00, 0x04}, // and f a  
	{0xc886, &op_and,	  6,   0, 255, 0xff, 0x00, 0x00, 0x04}, // and g a  
	{0xc887, &op_and,	  7,   0, 255, 0xff, 0x00, 0x00, 0x04}, // and h a  
	{0xc888, &op_and,	  0,   1, 255, 0xff, 0x00, 0x00, 0x04}, // and a b  
	{0xc889, &op_and,	  1,   1, 255, 0xff, 0x00, 0x00, 0x04}, // and b b  
	{0xc88a, &op_and,	  2,   1, 255, 0xff, 0x00, 0x00, 0x04}, // and c b  
	{0xc88b, &op_and,	  3,   1, 255, 0xff, 0x00, 0x00, 0x04}, // and d b  
	{0xc88c, &op_and,	  4,   1, 255, 0xff, 0x00, 0x00, 0x04}, // and e b  
	{0xc88d, &op_and,	  5,   1, 255, 0xff, 0x00, 0x00, 0x04}, // and f b  
	{0xc88e, &op_and,	  6,   1, 255, 0xff, 0x00, 0x00, 0x04}, // and g b  
	{0xc88f, &op_and,	  7,   1, 255, 0xff, 0x00, 0x00, 0x04}, // and h b  
	{0xc890, &op_and,	  0,   2, 255, 0xff, 0x00, 0x00, 0x04}, // and a c  
	{0xc891, &op_and,	  1,   2, 255, 0xff, 0x00, 0x00, 0x04}, // and b c  
	{0xc892, &op_and,	  2,   2, 255, 0xff, 0x00, 0x00, 0x04}, // and c c  
	{0xc893, &op_and,	  3,   2, 255, 0xff, 0x00, 0x00, 0x04}, // and d c  
	{0xc894, &op_and,	  4,   2, 255, 0xff, 0x00, 0x00, 0x04}, // and e c  
	{0xc895, &op_and,	  5,   2, 255, 0xff, 0x00, 0x00, 0x04}, // and f c  
	{0xc896, &op_and,	  6,   2, 255, 0xff, 0x00, 0x00, 0x04}, // and g c  
	{0xc897, &op_and,	  7,   2, 255, 0xff, 0x00, 0x00, 0x04}, // and h c  
	{0xc898, &op_and,	  0,   3, 255, 0xff, 0x00, 0x00, 0x04}, // and a d  
	{0xc899, &op_and,	  1,   3, 255, 0xff, 0x00, 0x00, 0x04}, // and b d  
	{0xc89a, &op_and,	  2,   3, 255, 0xff, 0x00, 0x00, 0x04}, // and c d  
	{0xc89b, &op_and,	  3,   3, 255, 0xff, 0x00, 0x00, 0x04}, // and d d  
	{0xc89c, &op_and,	  4,   3, 255, 0xff, 0x00, 0x00, 0x04}, // and e d  
	{0xc89d, &op_and,	  5,   3, 255, 0xff, 0x00, 0x00, 0x04}, // and f d  
	{0xc89e, &op_and,	  6,   3, 255, 0xff, 0x00, 0x00, 0x04}, // and g d  
	{0xc89f, &op_and,	  7,   3, 255, 0xff, 0x00, 0x00, 0x04}, // and h d  
	{0xc8a0, &op_and,	  0,   4, 255, 0xff, 0x00, 0x00, 0x04}, // and a e  
	{0xc8a1, &op_and,	  1,   4, 255, 0xff, 0x00, 0x00, 0x04}, // and b e  
	{0xc8a2, &op_and,	  2,   4, 255, 0xff, 0x00, 0x00, 0x04}, // and c e  
	{0xc8a3, &op_and,	  3,   4, 255, 0xff, 0x00, 0x00, 0x04}, // and d e  
	{0xc8a4, &op_and,	  4,   4, 255, 0xff, 0x00, 0x00, 0x04}, // and e e  
	{0xc8a5, &op_and,	  5,   4, 255, 0xff, 0x00, 0x00, 0x04}, // and f e  
	{0xc8a6, &op_and,	  6,   4, 255, 0xff, 0x00, 0x00, 0x04}, // and g e  
	{0xc8a7, &op_and,	  7,   4, 255, 0xff, 0x00, 0x00, 0x04}, // and h e  
	{0xc8a8, &op_and,	  0,   5, 255, 0xff, 0x00, 0x00, 0x04}, // and a f  
	{0xc8a9, &op_and,	  1,   5, 255, 0xff, 0x00, 0x00, 0x04}, // and b f  
	{0xc8aa, &op_and,	  2,   5, 255, 0xff, 0x00, 0x00, 0x04}, // and c f  
	{0xc8ab, &op_and,	  3,   5, 255, 0xff, 0x00, 0x00, 0x04}, // and d f  
	{0xc8ac, &op_and,	  4,   5, 255, 0xff, 0x00, 0x00, 0x04}, // and e f  
	{0xc8ad, &op_and,	  5,   5, 255, 0xff, 0x00, 0x00, 0x04}, // and f f  
	{0xc8ae, &op_and,	  6,   5, 255, 0xff, 0x00, 0x00, 0x04}, // and g f  
	{0xc8af, &op_and,	  7,   5, 255, 0xff, 0x00, 0x00, 0x04}, // and h f  
	{0xc8b0, &op_and,	  0,   6, 255, 0xff, 0x00, 0x00, 0x04}, // and a g  
	{0xc8b1, &op_and,	  1,   6, 255, 0xff, 0x00, 0x00, 0x04}, // and b g  
	{0xc8b2, &op_and,	  2,   6, 255, 0xff, 0x00, 0x00, 0x04}, // and c g  
	{0xc8b3, &op_and,	  3,   6, 255, 0xff, 0x00, 0x00, 0x04}, // and d g  
	{0xc8b4, &op_and,	  4,   6, 255, 0xff, 0x00, 0x00, 0x04}, // and e g  
	{0xc8b5, &op_and,	  5,   6, 255, 0xff, 0x00, 0x00, 0x04}, // and f g  
	{0xc8b6, &op_and,	  6,   6, 255, 0xff, 0x00, 0x00, 0x04}, // and g g  
	{0xc8b7, &op_and,	  7,   6, 255, 0xff, 0x00, 0x00, 0x04}, // and h g  
	{0xc8b8, &op_and,	  0,   7, 255, 0xff, 0x00, 0x00, 0x04}, // and a h  
	{0xc8b9, &op_and,	  1,   7, 255, 0xff, 0x00, 0x00, 0x04}, // and b h  
	{0xc8ba, &op_and,	  2,   7, 255, 0xff, 0x00, 0x00, 0x04}, // and c h  
	{0xc8bb, &op_and,	  3,   7, 255, 0xff, 0x00, 0x00, 0x04}, // and d h  
	{0xc8bc, &op_and,	  4,   7, 255, 0xff, 0x00, 0x00, 0x04}, // and e h  
	{0xc8bd, &op_and,	  5,   7, 255, 0xff, 0x00, 0x00, 0x04}, // and f h  
	{0xc8be, &op_and,	  6,   7, 255, 0xff, 0x00, 0x00, 0x04}, // and g h  
	{0xc8bf, &op_and,	  7,   7, 255, 0xff, 0x00, 0x00, 0x04}, // and h h  
	{0xc900, &op_and,	  0,   0, 255, 0xff, 0x01, 0x00, 0x01}, // and.wr a a  
	{0xc901, &op_and,	  1,   0, 255, 0xff, 0x01, 0x00, 0x01}, // and.wr b a  
	{0xc902, &op_and,	  2,   0, 255, 0xff, 0x01, 0x00, 0x01}, // and.wr c a  
	{0xc903, &op_and,	  3,   0, 255, 0xff, 0x01, 0x00, 0x01}, // and.wr d a  
	{0xc904, &op_and,	  4,   0, 255, 0xff, 0x01, 0x00, 0x01}, // and.wr e a  
	{0xc905, &op_and,	  5,   0, 255, 0xff, 0x01, 0x00, 0x01}, // and.wr f a  
	{0xc906, &op_and,	  6,   0, 255, 0xff, 0x01, 0x00, 0x01}, // and.wr g a  
	{0xc907, &op_and,	  7,   0, 255, 0xff, 0x01, 0x00, 0x01}, // and.wr h a  
	{0xc908, &op_and,	  0,   1, 255, 0xff, 0x01, 0x00, 0x01}, // and.wr a b  
	{0xc909, &op_and,	  1,   1, 255, 0xff, 0x01, 0x00, 0x01}, // and.wr b b  
	{0xc90a, &op_and,	  2,   1, 255, 0xff, 0x01, 0x00, 0x01}, // and.wr c b  
	{0xc90b, &op_and,	  3,   1, 255, 0xff, 0x01, 0x00, 0x01}, // and.wr d b  
	{0xc90c, &op_and,	  4,   1, 255, 0xff, 0x01, 0x00, 0x01}, // and.wr e b  
	{0xc90d, &op_and,	  5,   1, 255, 0xff, 0x01, 0x00, 0x01}, // and.wr f b  
	{0xc90e, &op_and,	  6,   1, 255, 0xff, 0x01, 0x00, 0x01}, // and.wr g b  
	{0xc90f, &op_and,	  7,   1, 255, 0xff, 0x01, 0x00, 0x01}, // and.wr h b  
	{0xc910, &op_and,	  0,   2, 255, 0xff, 0x01, 0x00, 0x01}, // and.wr a c  
	{0xc911, &op_and,	  1,   2, 255, 0xff, 0x01, 0x00, 0x01}, // and.wr b c  
	{0xc912, &op_and,	  2,   2, 255, 0xff, 0x01, 0x00, 0x01}, // and.wr c c  
	{0xc913, &op_and,	  3,   2, 255, 0xff, 0x01, 0x00, 0x01}, // and.wr d c  
	{0xc914, &op_and,	  4,   2, 255, 0xff, 0x01, 0x00, 0x01}, // and.wr e c  
	{0xc915, &op_and,	  5,   2, 255, 0xff, 0x01, 0x00, 0x01}, // and.wr f c  
	{0xc916, &op_and,	  6,   2, 255, 0xff, 0x01, 0x00, 0x01}, // and.wr g c  
	{0xc917, &op_and,	  7,   2, 255, 0xff, 0x01, 0x00, 0x01}, // and.wr h c  
	{0xc918, &op_and,	  0,   3, 255, 0xff, 0x01, 0x00, 0x01}, // and.wr a d  
	{0xc919, &op_and,	  1,   3, 255, 0xff, 0x01, 0x00, 0x01}, // and.wr b d  
	{0xc91a, &op_and,	  2,   3, 255, 0xff, 0x01, 0x00, 0x01}, // and.wr c d  
	{0xc91b, &op_and,	  3,   3, 255, 0xff, 0x01, 0x00, 0x01}, // and.wr d d  
	{0xc91c, &op_and,	  4,   3, 255, 0xff, 0x01, 0x00, 0x01}, // and.wr e d  
	{0xc91d, &op_and,	  5,   3, 255, 0xff, 0x01, 0x00, 0x01}, // and.wr f d  
	{0xc91e, &op_and,	  6,   3, 255, 0xff, 0x01, 0x00, 0x01}, // and.wr g d  
	{0xc91f, &op_and,	  7,   3, 255, 0xff, 0x01, 0x00, 0x01}, // and.wr h d  
	{0xc920, &op_and,	  0,   4, 255, 0xff, 0x01, 0x00, 0x01}, // and.wr a e  
	{0xc921, &op_and,	  1,   4, 255, 0xff, 0x01, 0x00, 0x01}, // and.wr b e  
	{0xc922, &op_and,	  2,   4, 255, 0xff, 0x01, 0x00, 0x01}, // and.wr c e  
	{0xc923, &op_and,	  3,   4, 255, 0xff, 0x01, 0x00, 0x01}, // and.wr d e  
	{0xc924, &op_and,	  4,   4, 255, 0xff, 0x01, 0x00, 0x01}, // and.wr e e  
	{0xc925, &op_and,	  5,   4, 255, 0xff, 0x01, 0x00, 0x01}, // and.wr f e  
	{0xc926, &op_and,	  6,   4, 255, 0xff, 0x01, 0x00, 0x01}, // and.wr g e  
	{0xc927, &op_and,	  7,   4, 255, 0xff, 0x01, 0x00, 0x01}, // and.wr h e  
	{0xc928, &op_and,	  0,   5, 255, 0xff, 0x01, 0x00, 0x01}, // and.wr a f  
	{0xc929, &op_and,	  1,   5, 255, 0xff, 0x01, 0x00, 0x01}, // and.wr b f  
	{0xc92a, &op_and,	  2,   5, 255, 0xff, 0x01, 0x00, 0x01}, // and.wr c f  
	{0xc92b, &op_and,	  3,   5, 255, 0xff, 0x01, 0x00, 0x01}, // and.wr d f  
	{0xc92c, &op_and,	  4,   5, 255, 0xff, 0x01, 0x00, 0x01}, // and.wr e f  
	{0xc92d, &op_and,	  5,   5, 255, 0xff, 0x01, 0x00, 0x01}, // and.wr f f  
	{0xc92e, &op_and,	  6,   5, 255, 0xff, 0x01, 0x00, 0x01}, // and.wr g f  
	{0xc92f, &op_and,	  7,   5, 255, 0xff, 0x01, 0x00, 0x01}, // and.wr h f  
	{0xc930, &op_and,	  0,   6, 255, 0xff, 0x01, 0x00, 0x01}, // and.wr a g  
	{0xc931, &op_and,	  1,   6, 255, 0xff, 0x01, 0x00, 0x01}, // and.wr b g  
	{0xc932, &op_and,	  2,   6, 255, 0xff, 0x01, 0x00, 0x01}, // and.wr c g  
	{0xc933, &op_and,	  3,   6, 255, 0xff, 0x01, 0x00, 0x01}, // and.wr d g  
	{0xc934, &op_and,	  4,   6, 255, 0xff, 0x01, 0x00, 0x01}, // and.wr e g  
	{0xc935, &op_and,	  5,   6, 255, 0xff, 0x01, 0x00, 0x01}, // and.wr f g  
	{0xc936, &op_and,	  6,   6, 255, 0xff, 0x01, 0x00, 0x01}, // and.wr g g  
	{0xc937, &op_and,	  7,   6, 255, 0xff, 0x01, 0x00, 0x01}, // and.wr h g  
	{0xc938, &op_and,	  0,   7, 255, 0xff, 0x01, 0x00, 0x01}, // and.wr a h  
	{0xc939, &op_and,	  1,   7, 255, 0xff, 0x01, 0x00, 0x01}, // and.wr b h  
	{0xc93a, &op_and,	  2,   7, 255, 0xff, 0x01, 0x00, 0x01}, // and.wr c h  
	{0xc93b, &op_and,	  3,   7, 255, 0xff, 0x01, 0x00, 0x01}, // and.wr d h  
	{0xc93c, &op_and,	  4,   7, 255, 0xff, 0x01, 0x00, 0x01}, // and.wr e h  
	{0xc93d, &op_and,	  5,   7, 255, 0xff, 0x01, 0x00, 0x01}, // and.wr f h  
	{0xc93e, &op_and,	  6,   7, 255, 0xff, 0x01, 0x00, 0x01}, // and.wr g h  
	{0xc93f, &op_and,	  7,   7, 255, 0xff, 0x01, 0x00, 0x01}, // and.wr h h  
	{0xc940, &op_and,	  0,   0, 255, 0xff, 0x01, 0x00, 0x02}, // and.dr a a  
	{0xc941, &op_and,	  1,   0, 255, 0xff, 0x01, 0x00, 0x02}, // and.dr b a  
	{0xc942, &op_and,	  2,   0, 255, 0xff, 0x01, 0x00, 0x02}, // and.dr c a  
	{0xc943, &op_and,	  3,   0, 255, 0xff, 0x01, 0x00, 0x02}, // and.dr d a  
	{0xc944, &op_and,	  4,   0, 255, 0xff, 0x01, 0x00, 0x02}, // and.dr e a  
	{0xc945, &op_and,	  5,   0, 255, 0xff, 0x01, 0x00, 0x02}, // and.dr f a  
	{0xc946, &op_and,	  6,   0, 255, 0xff, 0x01, 0x00, 0x02}, // and.dr g a  
	{0xc947, &op_and,	  7,   0, 255, 0xff, 0x01, 0x00, 0x02}, // and.dr h a  
	{0xc948, &op_and,	  0,   1, 255, 0xff, 0x01, 0x00, 0x02}, // and.dr a b  
	{0xc949, &op_and,	  1,   1, 255, 0xff, 0x01, 0x00, 0x02}, // and.dr b b  
	{0xc94a, &op_and,	  2,   1, 255, 0xff, 0x01, 0x00, 0x02}, // and.dr c b  
	{0xc94b, &op_and,	  3,   1, 255, 0xff, 0x01, 0x00, 0x02}, // and.dr d b  
	{0xc94c, &op_and,	  4,   1, 255, 0xff, 0x01, 0x00, 0x02}, // and.dr e b  
	{0xc94d, &op_and,	  5,   1, 255, 0xff, 0x01, 0x00, 0x02}, // and.dr f b  
	{0xc94e, &op_and,	  6,   1, 255, 0xff, 0x01, 0x00, 0x02}, // and.dr g b  
	{0xc94f, &op_and,	  7,   1, 255, 0xff, 0x01, 0x00, 0x02}, // and.dr h b  
	{0xc950, &op_and,	  0,   2, 255, 0xff, 0x01, 0x00, 0x02}, // and.dr a c  
	{0xc951, &op_and,	  1,   2, 255, 0xff, 0x01, 0x00, 0x02}, // and.dr b c  
	{0xc952, &op_and,	  2,   2, 255, 0xff, 0x01, 0x00, 0x02}, // and.dr c c  
	{0xc953, &op_and,	  3,   2, 255, 0xff, 0x01, 0x00, 0x02}, // and.dr d c  
	{0xc954, &op_and,	  4,   2, 255, 0xff, 0x01, 0x00, 0x02}, // and.dr e c  
	{0xc955, &op_and,	  5,   2, 255, 0xff, 0x01, 0x00, 0x02}, // and.dr f c  
	{0xc956, &op_and,	  6,   2, 255, 0xff, 0x01, 0x00, 0x02}, // and.dr g c  
	{0xc957, &op_and,	  7,   2, 255, 0xff, 0x01, 0x00, 0x02}, // and.dr h c  
	{0xc958, &op_and,	  0,   3, 255, 0xff, 0x01, 0x00, 0x02}, // and.dr a d  
	{0xc959, &op_and,	  1,   3, 255, 0xff, 0x01, 0x00, 0x02}, // and.dr b d  
	{0xc95a, &op_and,	  2,   3, 255, 0xff, 0x01, 0x00, 0x02}, // and.dr c d  
	{0xc95b, &op_and,	  3,   3, 255, 0xff, 0x01, 0x00, 0x02}, // and.dr d d  
	{0xc95c, &op_and,	  4,   3, 255, 0xff, 0x01, 0x00, 0x02}, // and.dr e d  
	{0xc95d, &op_and,	  5,   3, 255, 0xff, 0x01, 0x00, 0x02}, // and.dr f d  
	{0xc95e, &op_and,	  6,   3, 255, 0xff, 0x01, 0x00, 0x02}, // and.dr g d  
	{0xc95f, &op_and,	  7,   3, 255, 0xff, 0x01, 0x00, 0x02}, // and.dr h d  
	{0xc960, &op_and,	  0,   4, 255, 0xff, 0x01, 0x00, 0x02}, // and.dr a e  
	{0xc961, &op_and,	  1,   4, 255, 0xff, 0x01, 0x00, 0x02}, // and.dr b e  
	{0xc962, &op_and,	  2,   4, 255, 0xff, 0x01, 0x00, 0x02}, // and.dr c e  
	{0xc963, &op_and,	  3,   4, 255, 0xff, 0x01, 0x00, 0x02}, // and.dr d e  
	{0xc964, &op_and,	  4,   4, 255, 0xff, 0x01, 0x00, 0x02}, // and.dr e e  
	{0xc965, &op_and,	  5,   4, 255, 0xff, 0x01, 0x00, 0x02}, // and.dr f e  
	{0xc966, &op_and,	  6,   4, 255, 0xff, 0x01, 0x00, 0x02}, // and.dr g e  
	{0xc967, &op_and,	  7,   4, 255, 0xff, 0x01, 0x00, 0x02}, // and.dr h e  
	{0xc968, &op_and,	  0,   5, 255, 0xff, 0x01, 0x00, 0x02}, // and.dr a f  
	{0xc969, &op_and,	  1,   5, 255, 0xff, 0x01, 0x00, 0x02}, // and.dr b f  
	{0xc96a, &op_and,	  2,   5, 255, 0xff, 0x01, 0x00, 0x02}, // and.dr c f  
	{0xc96b, &op_and,	  3,   5, 255, 0xff, 0x01, 0x00, 0x02}, // and.dr d f  
	{0xc96c, &op_and,	  4,   5, 255, 0xff, 0x01, 0x00, 0x02}, // and.dr e f  
	{0xc96d, &op_and,	  5,   5, 255, 0xff, 0x01, 0x00, 0x02}, // and.dr f f  
	{0xc96e, &op_and,	  6,   5, 255, 0xff, 0x01, 0x00, 0x02}, // and.dr g f  
	{0xc96f, &op_and,	  7,   5, 255, 0xff, 0x01, 0x00, 0x02}, // and.dr h f  
	{0xc970, &op_and,	  0,   6, 255, 0xff, 0x01, 0x00, 0x02}, // and.dr a g  
	{0xc971, &op_and,	  1,   6, 255, 0xff, 0x01, 0x00, 0x02}, // and.dr b g  
	{0xc972, &op_and,	  2,   6, 255, 0xff, 0x01, 0x00, 0x02}, // and.dr c g  
	{0xc973, &op_and,	  3,   6, 255, 0xff, 0x01, 0x00, 0x02}, // and.dr d g  
	{0xc974, &op_and,	  4,   6, 255, 0xff, 0x01, 0x00, 0x02}, // and.dr e g  
	{0xc975, &op_and,	  5,   6, 255, 0xff, 0x01, 0x00, 0x02}, // and.dr f g  
	{0xc976, &op_and,	  6,   6, 255, 0xff, 0x01, 0x00, 0x02}, // and.dr g g  
	{0xc977, &op_and,	  7,   6, 255, 0xff, 0x01, 0x00, 0x02}, // and.dr h g  
	{0xc978, &op_and,	  0,   7, 255, 0xff, 0x01, 0x00, 0x02}, // and.dr a h  
	{0xc979, &op_and,	  1,   7, 255, 0xff, 0x01, 0x00, 0x02}, // and.dr b h  
	{0xc97a, &op_and,	  2,   7, 255, 0xff, 0x01, 0x00, 0x02}, // and.dr c h  
	{0xc97b, &op_and,	  3,   7, 255, 0xff, 0x01, 0x00, 0x02}, // and.dr d h  
	{0xc97c, &op_and,	  4,   7, 255, 0xff, 0x01, 0x00, 0x02}, // and.dr e h  
	{0xc97d, &op_and,	  5,   7, 255, 0xff, 0x01, 0x00, 0x02}, // and.dr f h  
	{0xc97e, &op_and,	  6,   7, 255, 0xff, 0x01, 0x00, 0x02}, // and.dr g h  
	{0xc97f, &op_and,	  7,   7, 255, 0xff, 0x01, 0x00, 0x02}, // and.dr h h  
	{0xc980, &op_and,	  0,   0, 255, 0xff, 0x01, 0x00, 0x04}, // and.r a a  
	{0xc981, &op_and,	  1,   0, 255, 0xff, 0x01, 0x00, 0x04}, // and.r b a  
	{0xc982, &op_and,	  2,   0, 255, 0xff, 0x01, 0x00, 0x04}, // and.r c a  
	{0xc983, &op_and,	  3,   0, 255, 0xff, 0x01, 0x00, 0x04}, // and.r d a  
	{0xc984, &op_and,	  4,   0, 255, 0xff, 0x01, 0x00, 0x04}, // and.r e a  
	{0xc985, &op_and,	  5,   0, 255, 0xff, 0x01, 0x00, 0x04}, // and.r f a  
	{0xc986, &op_and,	  6,   0, 255, 0xff, 0x01, 0x00, 0x04}, // and.r g a  
	{0xc987, &op_and,	  7,   0, 255, 0xff, 0x01, 0x00, 0x04}, // and.r h a  
	{0xc988, &op_and,	  0,   1, 255, 0xff, 0x01, 0x00, 0x04}, // and.r a b  
	{0xc989, &op_and,	  1,   1, 255, 0xff, 0x01, 0x00, 0x04}, // and.r b b  
	{0xc98a, &op_and,	  2,   1, 255, 0xff, 0x01, 0x00, 0x04}, // and.r c b  
	{0xc98b, &op_and,	  3,   1, 255, 0xff, 0x01, 0x00, 0x04}, // and.r d b  
	{0xc98c, &op_and,	  4,   1, 255, 0xff, 0x01, 0x00, 0x04}, // and.r e b  
	{0xc98d, &op_and,	  5,   1, 255, 0xff, 0x01, 0x00, 0x04}, // and.r f b  
	{0xc98e, &op_and,	  6,   1, 255, 0xff, 0x01, 0x00, 0x04}, // and.r g b  
	{0xc98f, &op_and,	  7,   1, 255, 0xff, 0x01, 0x00, 0x04}, // and.r h b  
	{0xc990, &op_and,	  0,   2, 255, 0xff, 0x01, 0x00, 0x04}, // and.r a c  
	{0xc991, &op_and,	  1,   2, 255, 0xff, 0x01, 0x00, 0x04}, // and.r b c  
	{0xc992, &op_and,	  2,   2, 255, 0xff, 0x01, 0x00, 0x04}, // and.r c c  
	{0xc993, &op_and,	  3,   2, 255, 0xff, 0x01, 0x00, 0x04}, // and.r d c  
	{0xc994, &op_and,	  4,   2, 255, 0xff, 0x01, 0x00, 0x04}, // and.r e c  
	{0xc995, &op_and,	  5,   2, 255, 0xff, 0x01, 0x00, 0x04}, // and.r f c  
	{0xc996, &op_and,	  6,   2, 255, 0xff, 0x01, 0x00, 0x04}, // and.r g c  
	{0xc997, &op_and,	  7,   2, 255, 0xff, 0x01, 0x00, 0x04}, // and.r h c  
	{0xc998, &op_and,	  0,   3, 255, 0xff, 0x01, 0x00, 0x04}, // and.r a d  
	{0xc999, &op_and,	  1,   3, 255, 0xff, 0x01, 0x00, 0x04}, // and.r b d  
	{0xc99a, &op_and,	  2,   3, 255, 0xff, 0x01, 0x00, 0x04}, // and.r c d  
	{0xc99b, &op_and,	  3,   3, 255, 0xff, 0x01, 0x00, 0x04}, // and.r d d  
	{0xc99c, &op_and,	  4,   3, 255, 0xff, 0x01, 0x00, 0x04}, // and.r e d  
	{0xc99d, &op_and,	  5,   3, 255, 0xff, 0x01, 0x00, 0x04}, // and.r f d  
	{0xc99e, &op_and,	  6,   3, 255, 0xff, 0x01, 0x00, 0x04}, // and.r g d  
	{0xc99f, &op_and,	  7,   3, 255, 0xff, 0x01, 0x00, 0x04}, // and.r h d  
	{0xc9a0, &op_and,	  0,   4, 255, 0xff, 0x01, 0x00, 0x04}, // and.r a e  
	{0xc9a1, &op_and,	  1,   4, 255, 0xff, 0x01, 0x00, 0x04}, // and.r b e  
	{0xc9a2, &op_and,	  2,   4, 255, 0xff, 0x01, 0x00, 0x04}, // and.r c e  
	{0xc9a3, &op_and,	  3,   4, 255, 0xff, 0x01, 0x00, 0x04}, // and.r d e  
	{0xc9a4, &op_and,	  4,   4, 255, 0xff, 0x01, 0x00, 0x04}, // and.r e e  
	{0xc9a5, &op_and,	  5,   4, 255, 0xff, 0x01, 0x00, 0x04}, // and.r f e  
	{0xc9a6, &op_and,	  6,   4, 255, 0xff, 0x01, 0x00, 0x04}, // and.r g e  
	{0xc9a7, &op_and,	  7,   4, 255, 0xff, 0x01, 0x00, 0x04}, // and.r h e  
	{0xc9a8, &op_and,	  0,   5, 255, 0xff, 0x01, 0x00, 0x04}, // and.r a f  
	{0xc9a9, &op_and,	  1,   5, 255, 0xff, 0x01, 0x00, 0x04}, // and.r b f  
	{0xc9aa, &op_and,	  2,   5, 255, 0xff, 0x01, 0x00, 0x04}, // and.r c f  
	{0xc9ab, &op_and,	  3,   5, 255, 0xff, 0x01, 0x00, 0x04}, // and.r d f  
	{0xc9ac, &op_and,	  4,   5, 255, 0xff, 0x01, 0x00, 0x04}, // and.r e f  
	{0xc9ad, &op_and,	  5,   5, 255, 0xff, 0x01, 0x00, 0x04}, // and.r f f  
	{0xc9ae, &op_and,	  6,   5, 255, 0xff, 0x01, 0x00, 0x04}, // and.r g f  
	{0xc9af, &op_and,	  7,   5, 255, 0xff, 0x01, 0x00, 0x04}, // and.r h f  
	{0xc9b0, &op_and,	  0,   6, 255, 0xff, 0x01, 0x00, 0x04}, // and.r a g  
	{0xc9b1, &op_and,	  1,   6, 255, 0xff, 0x01, 0x00, 0x04}, // and.r b g  
	{0xc9b2, &op_and,	  2,   6, 255, 0xff, 0x01, 0x00, 0x04}, // and.r c g  
	{0xc9b3, &op_and,	  3,   6, 255, 0xff, 0x01, 0x00, 0x04}, // and.r d g  
	{0xc9b4, &op_and,	  4,   6, 255, 0xff, 0x01, 0x00, 0x04}, // and.r e g  
	{0xc9b5, &op_and,	  5,   6, 255, 0xff, 0x01, 0x00, 0x04}, // and.r f g  
	{0xc9b6, &op_and,	  6,   6, 255, 0xff, 0x01, 0x00, 0x04}, // and.r g g  
	{0xc9b7, &op_and,	  7,   6, 255, 0xff, 0x01, 0x00, 0x04}, // and.r h g  
	{0xc9b8, &op_and,	  0,   7, 255, 0xff, 0x01, 0x00, 0x04}, // and.r a h  
	{0xc9b9, &op_and,	  1,   7, 255, 0xff, 0x01, 0x00, 0x04}, // and.r b h  
	{0xc9ba, &op_and,	  2,   7, 255, 0xff, 0x01, 0x00, 0x04}, // and.r c h  
	{0xc9bb, &op_and,	  3,   7, 255, 0xff, 0x01, 0x00, 0x04}, // and.r d h  
	{0xc9bc, &op_and,	  4,   7, 255, 0xff, 0x01, 0x00, 0x04}, // and.r e h  
	{0xc9bd, &op_and,	  5,   7, 255, 0xff, 0x01, 0x00, 0x04}, // and.r f h  
	{0xc9be, &op_and,	  6,   7, 255, 0xff, 0x01, 0x00, 0x04}, // and.r g h  
	{0xc9bf, &op_and,	  7,   7, 255, 0xff, 0x01, 0x00, 0x04}, // and.r h h  
	{0xc8c8, &op_and,	  0,   8, 255, 0xff, 0x00, 0x01, 0x01}, // and.wi a <literal>  
	{0xc8c9, &op_and,	  1,   8, 255, 0xff, 0x00, 0x01, 0x01}, // and.wi b <literal>  
	{0xc8ca, &op_and,	  2,   8, 255, 0xff, 0x00, 0x01, 0x01}, // and.wi c <literal>  
	{0xc8cb, &op_and,	  3,   8, 255, 0xff, 0x00, 0x01, 0x01}, // and.wi d <literal>  
	{0xc8cc, &op_and,	  4,   8, 255, 0xff, 0x00, 0x01, 0x01}, // and.wi e <literal>  
	{0xc8cd, &op_and,	  5,   8, 255, 0xff, 0x00, 0x01, 0x01}, // and.wi f <literal>  
	{0xc8ce, &op_and,	  6,   8, 255, 0xff, 0x00, 0x01, 0x01}, // and.wi g <literal>  
	{0xc8cf, &op_and,	  7,   8, 255, 0xff, 0x00, 0x01, 0x01}, // and.wi h <literal>  
	{0xc8d0, &op_and,	  0,   8, 255, 0xff, 0x00, 0x02, 0x02}, // and.di a <literal>  
	{0xc8d1, &op_and,	  1,   8, 255, 0xff, 0x00, 0x02, 0x02}, // and.di b <literal>  
	{0xc8d2, &op_and,	  2,   8, 255, 0xff, 0x00, 0x02, 0x02}, // and.di c <literal>  
	{0xc8d3, &op_and,	  3,   8, 255, 0xff, 0x00, 0x02, 0x02}, // and.di d <literal>  
	{0xc8d4, &op_and,	  4,   8, 255, 0xff, 0x00, 0x02, 0x02}, // and.di e <literal>  
	{0xc8d5, &op_and,	  5,   8, 255, 0xff, 0x00, 0x02, 0x02}, // and.di f <literal>  
	{0xc8d6, &op_and,	  6,   8, 255, 0xff, 0x00, 0x02, 0x02}, // and.di g <literal>  
	{0xc8d7, &op_and,	  7,   8, 255, 0xff, 0x00, 0x02, 0x02}, // and.di h <literal>  
	{0xc8e0, &op_and,	  0,   8, 255, 0xff, 0x00, 0x04, 0x04}, // and.i a <literal>  
	{0xc8e1, &op_and,	  1,   8, 255, 0xff, 0x00, 0x04, 0x04}, // and.i b <literal>  
	{0xc8e2, &op_and,	  2,   8, 255, 0xff, 0x00, 0x04, 0x04}, // and.i c <literal>  
	{0xc8e3, &op_and,	  3,   8, 255, 0xff, 0x00, 0x04, 0x04}, // and.i d <literal>  
	{0xc8e4, &op_and,	  4,   8, 255, 0xff, 0x00, 0x04, 0x04}, // and.i e <literal>  
	{0xc8e5, &op_and,	  5,   8, 255, 0xff, 0x00, 0x04, 0x04}, // and.i f <literal>  
	{0xc8e6, &op_and,	  6,   8, 255, 0xff, 0x00, 0x04, 0x04}, // and.i g <literal>  
	{0xc8e7, &op_and,	  7,   8, 255, 0xff, 0x00, 0x04, 0x04}, // and.i h <literal>  
	{0xc9c8, &op_and,	  0,   8, 255, 0xff, 0x01, 0x04, 0x01}, // and.wri a <literal>  
	{0xc9c9, &op_and,	  1,   8, 255, 0xff, 0x01, 0x04, 0x01}, // and.wri b <literal>  
	{0xc9ca, &op_and,	  2,   8, 255, 0xff, 0x01, 0x04, 0x01}, // and.wri c <literal>  
	{0xc9cb, &op_and,	  3,   8, 255, 0xff, 0x01, 0x04, 0x01}, // and.wri d <literal>  
	{0xc9cc, &op_and,	  4,   8, 255, 0xff, 0x01, 0x04, 0x01}, // and.wri e <literal>  
	{0xc9cd, &op_and,	  5,   8, 255, 0xff, 0x01, 0x04, 0x01}, // and.wri f <literal>  
	{0xc9ce, &op_and,	  6,   8, 255, 0xff, 0x01, 0x04, 0x01}, // and.wri g <literal>  
	{0xc9cf, &op_and,	  7,   8, 255, 0xff, 0x01, 0x04, 0x01}, // and.wri h <literal>  
	{0xc9d0, &op_and,	  0,   8, 255, 0xff, 0x01, 0x04, 0x02}, // and.dri a <literal>  
	{0xc9d1, &op_and,	  1,   8, 255, 0xff, 0x01, 0x04, 0x02}, // and.dri b <literal>  
	{0xc9d2, &op_and,	  2,   8, 255, 0xff, 0x01, 0x04, 0x02}, // and.dri c <literal>  
	{0xc9d3, &op_and,	  3,   8, 255, 0xff, 0x01, 0x04, 0x02}, // and.dri d <literal>  
	{0xc9d4, &op_and,	  4,   8, 255, 0xff, 0x01, 0x04, 0x02}, // and.dri e <literal>  
	{0xc9d5, &op_and,	  5,   8, 255, 0xff, 0x01, 0x04, 0x02}, // and.dri f <literal>  
	{0xc9d6, &op_and,	  6,   8, 255, 0xff, 0x01, 0x04, 0x02}, // and.dri g <literal>  
	{0xc9d7, &op_and,	  7,   8, 255, 0xff, 0x01, 0x04, 0x02}, // and.dri h <literal>  
	{0xc9e0, &op_and,	  0,   8, 255, 0xff, 0x01, 0x04, 0x04}, // and.ri a <literal>  
	{0xc9e1, &op_and,	  1,   8, 255, 0xff, 0x01, 0x04, 0x04}, // and.ri b <literal>  
	{0xc9e2, &op_and,	  2,   8, 255, 0xff, 0x01, 0x04, 0x04}, // and.ri c <literal>  
	{0xc9e3, &op_and,	  3,   8, 255, 0xff, 0x01, 0x04, 0x04}, // and.ri d <literal>  
	{0xc9e4, &op_and,	  4,   8, 255, 0xff, 0x01, 0x04, 0x04}, // and.ri e <literal>  
	{0xc9e5, &op_and,	  5,   8, 255, 0xff, 0x01, 0x04, 0x04}, // and.ri f <literal>  
	{0xc9e6, &op_and,	  6,   8, 255, 0xff, 0x01, 0x04, 0x04}, // and.ri g <literal>  
	{0xc9e7, &op_and,	  7,   8, 255, 0xff, 0x01, 0x04, 0x04}, // and.ri h <literal>  
	{0xca00, &op_or,	  0,   0, 255, 0xff, 0x00, 0x00, 0x01}, // or.w a a  
	{0xca01, &op_or,	  1,   0, 255, 0xff, 0x00, 0x00, 0x01}, // or.w b a  
	{0xca02, &op_or,	  2,   0, 255, 0xff, 0x00, 0x00, 0x01}, // or.w c a  
	{0xca03, &op_or,	  3,   0, 255, 0xff, 0x00, 0x00, 0x01}, // or.w d a  
	{0xca04, &op_or,	  4,   0, 255, 0xff, 0x00, 0x00, 0x01}, // or.w e a  
	{0xca05, &op_or,	  5,   0, 255, 0xff, 0x00, 0x00, 0x01}, // or.w f a  
	{0xca06, &op_or,	  6,   0, 255, 0xff, 0x00, 0x00, 0x01}, // or.w g a  
	{0xca07, &op_or,	  7,   0, 255, 0xff, 0x00, 0x00, 0x01}, // or.w h a  
	{0xca08, &op_or,	  0,   1, 255, 0xff, 0x00, 0x00, 0x01}, // or.w a b  
	{0xca09, &op_or,	  1,   1, 255, 0xff, 0x00, 0x00, 0x01}, // or.w b b  
	{0xca0a, &op_or,	  2,   1, 255, 0xff, 0x00, 0x00, 0x01}, // or.w c b  
	{0xca0b, &op_or,	  3,   1, 255, 0xff, 0x00, 0x00, 0x01}, // or.w d b  
	{0xca0c, &op_or,	  4,   1, 255, 0xff, 0x00, 0x00, 0x01}, // or.w e b  
	{0xca0d, &op_or,	  5,   1, 255, 0xff, 0x00, 0x00, 0x01}, // or.w f b  
	{0xca0e, &op_or,	  6,   1, 255, 0xff, 0x00, 0x00, 0x01}, // or.w g b  
	{0xca0f, &op_or,	  7,   1, 255, 0xff, 0x00, 0x00, 0x01}, // or.w h b  
	{0xca10, &op_or,	  0,   2, 255, 0xff, 0x00, 0x00, 0x01}, // or.w a c  
	{0xca11, &op_or,	  1,   2, 255, 0xff, 0x00, 0x00, 0x01}, // or.w b c  
	{0xca12, &op_or,	  2,   2, 255, 0xff, 0x00, 0x00, 0x01}, // or.w c c  
	{0xca13, &op_or,	  3,   2, 255, 0xff, 0x00, 0x00, 0x01}, // or.w d c  
	{0xca14, &op_or,	  4,   2, 255, 0xff, 0x00, 0x00, 0x01}, // or.w e c  
	{0xca15, &op_or,	  5,   2, 255, 0xff, 0x00, 0x00, 0x01}, // or.w f c  
	{0xca16, &op_or,	  6,   2, 255, 0xff, 0x00, 0x00, 0x01}, // or.w g c  
	{0xca17, &op_or,	  7,   2, 255, 0xff, 0x00, 0x00, 0x01}, // or.w h c  
	{0xca18, &op_or,	  0,   3, 255, 0xff, 0x00, 0x00, 0x01}, // or.w a d  
	{0xca19, &op_or,	  1,   3, 255, 0xff, 0x00, 0x00, 0x01}, // or.w b d  
	{0xca1a, &op_or,	  2,   3, 255, 0xff, 0x00, 0x00, 0x01}, // or.w c d  
	{0xca1b, &op_or,	  3,   3, 255, 0xff, 0x00, 0x00, 0x01}, // or.w d d  
	{0xca1c, &op_or,	  4,   3, 255, 0xff, 0x00, 0x00, 0x01}, // or.w e d  
	{0xca1d, &op_or,	  5,   3, 255, 0xff, 0x00, 0x00, 0x01}, // or.w f d  
	{0xca1e, &op_or,	  6,   3, 255, 0xff, 0x00, 0x00, 0x01}, // or.w g d  
	{0xca1f, &op_or,	  7,   3, 255, 0xff, 0x00, 0x00, 0x01}, // or.w h d  
	{0xca20, &op_or,	  0,   4, 255, 0xff, 0x00, 0x00, 0x01}, // or.w a e  
	{0xca21, &op_or,	  1,   4, 255, 0xff, 0x00, 0x00, 0x01}, // or.w b e  
	{0xca22, &op_or,	  2,   4, 255, 0xff, 0x00, 0x00, 0x01}, // or.w c e  
	{0xca23, &op_or,	  3,   4, 255, 0xff, 0x00, 0x00, 0x01}, // or.w d e  
	{0xca24, &op_or,	  4,   4, 255, 0xff, 0x00, 0x00, 0x01}, // or.w e e  
	{0xca25, &op_or,	  5,   4, 255, 0xff, 0x00, 0x00, 0x01}, // or.w f e  
	{0xca26, &op_or,	  6,   4, 255, 0xff, 0x00, 0x00, 0x01}, // or.w g e  
	{0xca27, &op_or,	  7,   4, 255, 0xff, 0x00, 0x00, 0x01}, // or.w h e  
	{0xca28, &op_or,	  0,   5, 255, 0xff, 0x00, 0x00, 0x01}, // or.w a f  
	{0xca29, &op_or,	  1,   5, 255, 0xff, 0x00, 0x00, 0x01}, // or.w b f  
	{0xca2a, &op_or,	  2,   5, 255, 0xff, 0x00, 0x00, 0x01}, // or.w c f  
	{0xca2b, &op_or,	  3,   5, 255, 0xff, 0x00, 0x00, 0x01}, // or.w d f  
	{0xca2c, &op_or,	  4,   5, 255, 0xff, 0x00, 0x00, 0x01}, // or.w e f  
	{0xca2d, &op_or,	  5,   5, 255, 0xff, 0x00, 0x00, 0x01}, // or.w f f  
	{0xca2e, &op_or,	  6,   5, 255, 0xff, 0x00, 0x00, 0x01}, // or.w g f  
	{0xca2f, &op_or,	  7,   5, 255, 0xff, 0x00, 0x00, 0x01}, // or.w h f  
	{0xca30, &op_or,	  0,   6, 255, 0xff, 0x00, 0x00, 0x01}, // or.w a g  
	{0xca31, &op_or,	  1,   6, 255, 0xff, 0x00, 0x00, 0x01}, // or.w b g  
	{0xca32, &op_or,	  2,   6, 255, 0xff, 0x00, 0x00, 0x01}, // or.w c g  
	{0xca33, &op_or,	  3,   6, 255, 0xff, 0x00, 0x00, 0x01}, // or.w d g  
	{0xca34, &op_or,	  4,   6, 255, 0xff, 0x00, 0x00, 0x01}, // or.w e g  
	{0xca35, &op_or,	  5,   6, 255, 0xff, 0x00, 0x00, 0x01}, // or.w f g  
	{0xca36, &op_or,	  6,   6, 255, 0xff, 0x00, 0x00, 0x01}, // or.w g g  
	{0xca37, &op_or,	  7,   6, 255, 0xff, 0x00, 0x00, 0x01}, // or.w h g  
	{0xca38, &op_or,	  0,   7, 255, 0xff, 0x00, 0x00, 0x01}, // or.w a h  
	{0xca39, &op_or,	  1,   7, 255, 0xff, 0x00, 0x00, 0x01}, // or.w b h  
	{0xca3a, &op_or,	  2,   7, 255, 0xff, 0x00, 0x00, 0x01}, // or.w c h  
	{0xca3b, &op_or,	  3,   7, 255, 0xff, 0x00, 0x00, 0x01}, // or.w d h  
	{0xca3c, &op_or,	  4,   7, 255, 0xff, 0x00, 0x00, 0x01}, // or.w e h  
	{0xca3d, &op_or,	  5,   7, 255, 0xff, 0x00, 0x00, 0x01}, // or.w f h  
	{0xca3e, &op_or,	  6,   7, 255, 0xff, 0x00, 0x00, 0x01}, // or.w g h  
	{0xca3f, &op_or,	  7,   7, 255, 0xff, 0x00, 0x00, 0x01}, // or.w h h  
	{0xca40, &op_or,	  0,   0, 255, 0xff, 0x00, 0x00, 0x02}, // or.d a a  
	{0xca41, &op_or,	  1,   0, 255, 0xff, 0x00, 0x00, 0x02}, // or.d b a  
	{0xca42, &op_or,	  2,   0, 255, 0xff, 0x00, 0x00, 0x02}, // or.d c a  
	{0xca43, &op_or,	  3,   0, 255, 0xff, 0x00, 0x00, 0x02}, // or.d d a  
	{0xca44, &op_or,	  4,   0, 255, 0xff, 0x00, 0x00, 0x02}, // or.d e a  
	{0xca45, &op_or,	  5,   0, 255, 0xff, 0x00, 0x00, 0x02}, // or.d f a  
	{0xca46, &op_or,	  6,   0, 255, 0xff, 0x00, 0x00, 0x02}, // or.d g a  
	{0xca47, &op_or,	  7,   0, 255, 0xff, 0x00, 0x00, 0x02}, // or.d h a  
	{0xca48, &op_or,	  0,   1, 255, 0xff, 0x00, 0x00, 0x02}, // or.d a b  
	{0xca49, &op_or,	  1,   1, 255, 0xff, 0x00, 0x00, 0x02}, // or.d b b  
	{0xca4a, &op_or,	  2,   1, 255, 0xff, 0x00, 0x00, 0x02}, // or.d c b  
	{0xca4b, &op_or,	  3,   1, 255, 0xff, 0x00, 0x00, 0x02}, // or.d d b  
	{0xca4c, &op_or,	  4,   1, 255, 0xff, 0x00, 0x00, 0x02}, // or.d e b  
	{0xca4d, &op_or,	  5,   1, 255, 0xff, 0x00, 0x00, 0x02}, // or.d f b  
	{0xca4e, &op_or,	  6,   1, 255, 0xff, 0x00, 0x00, 0x02}, // or.d g b  
	{0xca4f, &op_or,	  7,   1, 255, 0xff, 0x00, 0x00, 0x02}, // or.d h b  
	{0xca50, &op_or,	  0,   2, 255, 0xff, 0x00, 0x00, 0x02}, // or.d a c  
	{0xca51, &op_or,	  1,   2, 255, 0xff, 0x00, 0x00, 0x02}, // or.d b c  
	{0xca52, &op_or,	  2,   2, 255, 0xff, 0x00, 0x00, 0x02}, // or.d c c  
	{0xca53, &op_or,	  3,   2, 255, 0xff, 0x00, 0x00, 0x02}, // or.d d c  
	{0xca54, &op_or,	  4,   2, 255, 0xff, 0x00, 0x00, 0x02}, // or.d e c  
	{0xca55, &op_or,	  5,   2, 255, 0xff, 0x00, 0x00, 0x02}, // or.d f c  
	{0xca56, &op_or,	  6,   2, 255, 0xff, 0x00, 0x00, 0x02}, // or.d g c  
	{0xca57, &op_or,	  7,   2, 255, 0xff, 0x00, 0x00, 0x02}, // or.d h c  
	{0xca58, &op_or,	  0,   3, 255, 0xff, 0x00, 0x00, 0x02}, // or.d a d  
	{0xca59, &op_or,	  1,   3, 255, 0xff, 0x00, 0x00, 0x02}, // or.d b d  
	{0xca5a, &op_or,	  2,   3, 255, 0xff, 0x00, 0x00, 0x02}, // or.d c d  
	{0xca5b, &op_or,	  3,   3, 255, 0xff, 0x00, 0x00, 0x02}, // or.d d d  
	{0xca5c, &op_or,	  4,   3, 255, 0xff, 0x00, 0x00, 0x02}, // or.d e d  
	{0xca5d, &op_or,	  5,   3, 255, 0xff, 0x00, 0x00, 0x02}, // or.d f d  
	{0xca5e, &op_or,	  6,   3, 255, 0xff, 0x00, 0x00, 0x02}, // or.d g d  
	{0xca5f, &op_or,	  7,   3, 255, 0xff, 0x00, 0x00, 0x02}, // or.d h d  
	{0xca60, &op_or,	  0,   4, 255, 0xff, 0x00, 0x00, 0x02}, // or.d a e  
	{0xca61, &op_or,	  1,   4, 255, 0xff, 0x00, 0x00, 0x02}, // or.d b e  
	{0xca62, &op_or,	  2,   4, 255, 0xff, 0x00, 0x00, 0x02}, // or.d c e  
	{0xca63, &op_or,	  3,   4, 255, 0xff, 0x00, 0x00, 0x02}, // or.d d e  
	{0xca64, &op_or,	  4,   4, 255, 0xff, 0x00, 0x00, 0x02}, // or.d e e  
	{0xca65, &op_or,	  5,   4, 255, 0xff, 0x00, 0x00, 0x02}, // or.d f e  
	{0xca66, &op_or,	  6,   4, 255, 0xff, 0x00, 0x00, 0x02}, // or.d g e  
	{0xca67, &op_or,	  7,   4, 255, 0xff, 0x00, 0x00, 0x02}, // or.d h e  
	{0xca68, &op_or,	  0,   5, 255, 0xff, 0x00, 0x00, 0x02}, // or.d a f  
	{0xca69, &op_or,	  1,   5, 255, 0xff, 0x00, 0x00, 0x02}, // or.d b f  
	{0xca6a, &op_or,	  2,   5, 255, 0xff, 0x00, 0x00, 0x02}, // or.d c f  
	{0xca6b, &op_or,	  3,   5, 255, 0xff, 0x00, 0x00, 0x02}, // or.d d f  
	{0xca6c, &op_or,	  4,   5, 255, 0xff, 0x00, 0x00, 0x02}, // or.d e f  
	{0xca6d, &op_or,	  5,   5, 255, 0xff, 0x00, 0x00, 0x02}, // or.d f f  
	{0xca6e, &op_or,	  6,   5, 255, 0xff, 0x00, 0x00, 0x02}, // or.d g f  
	{0xca6f, &op_or,	  7,   5, 255, 0xff, 0x00, 0x00, 0x02}, // or.d h f  
	{0xca70, &op_or,	  0,   6, 255, 0xff, 0x00, 0x00, 0x02}, // or.d a g  
	{0xca71, &op_or,	  1,   6, 255, 0xff, 0x00, 0x00, 0x02}, // or.d b g  
	{0xca72, &op_or,	  2,   6, 255, 0xff, 0x00, 0x00, 0x02}, // or.d c g  
	{0xca73, &op_or,	  3,   6, 255, 0xff, 0x00, 0x00, 0x02}, // or.d d g  
	{0xca74, &op_or,	  4,   6, 255, 0xff, 0x00, 0x00, 0x02}, // or.d e g  
	{0xca75, &op_or,	  5,   6, 255, 0xff, 0x00, 0x00, 0x02}, // or.d f g  
	{0xca76, &op_or,	  6,   6, 255, 0xff, 0x00, 0x00, 0x02}, // or.d g g  
	{0xca77, &op_or,	  7,   6, 255, 0xff, 0x00, 0x00, 0x02}, // or.d h g  
	{0xca78, &op_or,	  0,   7, 255, 0xff, 0x00, 0x00, 0x02}, // or.d a h  
	{0xca79, &op_or,	  1,   7, 255, 0xff, 0x00, 0x00, 0x02}, // or.d b h  
	{0xca7a, &op_or,	  2,   7, 255, 0xff, 0x00, 0x00, 0x02}, // or.d c h  
	{0xca7b, &op_or,	  3,   7, 255, 0xff, 0x00, 0x00, 0x02}, // or.d d h  
	{0xca7c, &op_or,	  4,   7, 255, 0xff, 0x00, 0x00, 0x02}, // or.d e h  
	{0xca7d, &op_or,	  5,   7, 255, 0xff, 0x00, 0x00, 0x02}, // or.d f h  
	{0xca7e, &op_or,	  6,   7, 255, 0xff, 0x00, 0x00, 0x02}, // or.d g h  
	{0xca7f, &op_or,	  7,   7, 255, 0xff, 0x00, 0x00, 0x02}, // or.d h h  
	{0xca80, &op_or,	  0,   0, 255, 0xff, 0x00, 0x00, 0x04}, // or a a  
	{0xca81, &op_or,	  1,   0, 255, 0xff, 0x00, 0x00, 0x04}, // or b a  
	{0xca82, &op_or,	  2,   0, 255, 0xff, 0x00, 0x00, 0x04}, // or c a  
	{0xca83, &op_or,	  3,   0, 255, 0xff, 0x00, 0x00, 0x04}, // or d a  
	{0xca84, &op_or,	  4,   0, 255, 0xff, 0x00, 0x00, 0x04}, // or e a  
	{0xca85, &op_or,	  5,   0, 255, 0xff, 0x00, 0x00, 0x04}, // or f a  
	{0xca86, &op_or,	  6,   0, 255, 0xff, 0x00, 0x00, 0x04}, // or g a  
	{0xca87, &op_or,	  7,   0, 255, 0xff, 0x00, 0x00, 0x04}, // or h a  
	{0xca88, &op_or,	  0,   1, 255, 0xff, 0x00, 0x00, 0x04}, // or a b  
	{0xca89, &op_or,	  1,   1, 255, 0xff, 0x00, 0x00, 0x04}, // or b b  
	{0xca8a, &op_or,	  2,   1, 255, 0xff, 0x00, 0x00, 0x04}, // or c b  
	{0xca8b, &op_or,	  3,   1, 255, 0xff, 0x00, 0x00, 0x04}, // or d b  
	{0xca8c, &op_or,	  4,   1, 255, 0xff, 0x00, 0x00, 0x04}, // or e b  
	{0xca8d, &op_or,	  5,   1, 255, 0xff, 0x00, 0x00, 0x04}, // or f b  
	{0xca8e, &op_or,	  6,   1, 255, 0xff, 0x00, 0x00, 0x04}, // or g b  
	{0xca8f, &op_or,	  7,   1, 255, 0xff, 0x00, 0x00, 0x04}, // or h b  
	{0xca90, &op_or,	  0,   2, 255, 0xff, 0x00, 0x00, 0x04}, // or a c  
	{0xca91, &op_or,	  1,   2, 255, 0xff, 0x00, 0x00, 0x04}, // or b c  
	{0xca92, &op_or,	  2,   2, 255, 0xff, 0x00, 0x00, 0x04}, // or c c  
	{0xca93, &op_or,	  3,   2, 255, 0xff, 0x00, 0x00, 0x04}, // or d c  
	{0xca94, &op_or,	  4,   2, 255, 0xff, 0x00, 0x00, 0x04}, // or e c  
	{0xca95, &op_or,	  5,   2, 255, 0xff, 0x00, 0x00, 0x04}, // or f c  
	{0xca96, &op_or,	  6,   2, 255, 0xff, 0x00, 0x00, 0x04}, // or g c  
	{0xca97, &op_or,	  7,   2, 255, 0xff, 0x00, 0x00, 0x04}, // or h c  
	{0xca98, &op_or,	  0,   3, 255, 0xff, 0x00, 0x00, 0x04}, // or a d  
	{0xca99, &op_or,	  1,   3, 255, 0xff, 0x00, 0x00, 0x04}, // or b d  
	{0xca9a, &op_or,	  2,   3, 255, 0xff, 0x00, 0x00, 0x04}, // or c d  
	{0xca9b, &op_or,	  3,   3, 255, 0xff, 0x00, 0x00, 0x04}, // or d d  
	{0xca9c, &op_or,	  4,   3, 255, 0xff, 0x00, 0x00, 0x04}, // or e d  
	{0xca9d, &op_or,	  5,   3, 255, 0xff, 0x00, 0x00, 0x04}, // or f d  
	{0xca9e, &op_or,	  6,   3, 255, 0xff, 0x00, 0x00, 0x04}, // or g d  
	{0xca9f, &op_or,	  7,   3, 255, 0xff, 0x00, 0x00, 0x04}, // or h d  
	{0xcaa0, &op_or,	  0,   4, 255, 0xff, 0x00, 0x00, 0x04}, // or a e  
	{0xcaa1, &op_or,	  1,   4, 255, 0xff, 0x00, 0x00, 0x04}, // or b e  
	{0xcaa2, &op_or,	  2,   4, 255, 0xff, 0x00, 0x00, 0x04}, // or c e  
	{0xcaa3, &op_or,	  3,   4, 255, 0xff, 0x00, 0x00, 0x04}, // or d e  
	{0xcaa4, &op_or,	  4,   4, 255, 0xff, 0x00, 0x00, 0x04}, // or e e  
	{0xcaa5, &op_or,	  5,   4, 255, 0xff, 0x00, 0x00, 0x04}, // or f e  
	{0xcaa6, &op_or,	  6,   4, 255, 0xff, 0x00, 0x00, 0x04}, // or g e  
	{0xcaa7, &op_or,	  7,   4, 255, 0xff, 0x00, 0x00, 0x04}, // or h e  
	{0xcaa8, &op_or,	  0,   5, 255, 0xff, 0x00, 0x00, 0x04}, // or a f  
	{0xcaa9, &op_or,	  1,   5, 255, 0xff, 0x00, 0x00, 0x04}, // or b f  
	{0xcaaa, &op_or,	  2,   5, 255, 0xff, 0x00, 0x00, 0x04}, // or c f  
	{0xcaab, &op_or,	  3,   5, 255, 0xff, 0x00, 0x00, 0x04}, // or d f  
	{0xcaac, &op_or,	  4,   5, 255, 0xff, 0x00, 0x00, 0x04}, // or e f  
	{0xcaad, &op_or,	  5,   5, 255, 0xff, 0x00, 0x00, 0x04}, // or f f  
	{0xcaae, &op_or,	  6,   5, 255, 0xff, 0x00, 0x00, 0x04}, // or g f  
	{0xcaaf, &op_or,	  7,   5, 255, 0xff, 0x00, 0x00, 0x04}, // or h f  
	{0xcab0, &op_or,	  0,   6, 255, 0xff, 0x00, 0x00, 0x04}, // or a g  
	{0xcab1, &op_or,	  1,   6, 255, 0xff, 0x00, 0x00, 0x04}, // or b g  
	{0xcab2, &op_or,	  2,   6, 255, 0xff, 0x00, 0x00, 0x04}, // or c g  
	{0xcab3, &op_or,	  3,   6, 255, 0xff, 0x00, 0x00, 0x04}, // or d g  
	{0xcab4, &op_or,	  4,   6, 255, 0xff, 0x00, 0x00, 0x04}, // or e g  
	{0xcab5, &op_or,	  5,   6, 255, 0xff, 0x00, 0x00, 0x04}, // or f g  
	{0xcab6, &op_or,	  6,   6, 255, 0xff, 0x00, 0x00, 0x04}, // or g g  
	{0xcab7, &op_or,	  7,   6, 255, 0xff, 0x00, 0x00, 0x04}, // or h g  
	{0xcab8, &op_or,	  0,   7, 255, 0xff, 0x00, 0x00, 0x04}, // or a h  
	{0xcab9, &op_or,	  1,   7, 255, 0xff, 0x00, 0x00, 0x04}, // or b h  
	{0xcaba, &op_or,	  2,   7, 255, 0xff, 0x00, 0x00, 0x04}, // or c h  
	{0xcabb, &op_or,	  3,   7, 255, 0xff, 0x00, 0x00, 0x04}, // or d h  
	{0xcabc, &op_or,	  4,   7, 255, 0xff, 0x00, 0x00, 0x04}, // or e h  
	{0xcabd, &op_or,	  5,   7, 255, 0xff, 0x00, 0x00, 0x04}, // or f h  
	{0xcabe, &op_or,	  6,   7, 255, 0xff, 0x00, 0x00, 0x04}, // or g h  
	{0xcabf, &op_or,	  7,   7, 255, 0xff, 0x00, 0x00, 0x04}, // or h h  
	{0xcb00, &op_or,	  0,   0, 255, 0xff, 0x01, 0x00, 0x01}, // or.wr a a  
	{0xcb01, &op_or,	  1,   0, 255, 0xff, 0x01, 0x00, 0x01}, // or.wr b a  
	{0xcb02, &op_or,	  2,   0, 255, 0xff, 0x01, 0x00, 0x01}, // or.wr c a  
	{0xcb03, &op_or,	  3,   0, 255, 0xff, 0x01, 0x00, 0x01}, // or.wr d a  
	{0xcb04, &op_or,	  4,   0, 255, 0xff, 0x01, 0x00, 0x01}, // or.wr e a  
	{0xcb05, &op_or,	  5,   0, 255, 0xff, 0x01, 0x00, 0x01}, // or.wr f a  
	{0xcb06, &op_or,	  6,   0, 255, 0xff, 0x01, 0x00, 0x01}, // or.wr g a  
	{0xcb07, &op_or,	  7,   0, 255, 0xff, 0x01, 0x00, 0x01}, // or.wr h a  
	{0xcb08, &op_or,	  0,   1, 255, 0xff, 0x01, 0x00, 0x01}, // or.wr a b  
	{0xcb09, &op_or,	  1,   1, 255, 0xff, 0x01, 0x00, 0x01}, // or.wr b b  
	{0xcb0a, &op_or,	  2,   1, 255, 0xff, 0x01, 0x00, 0x01}, // or.wr c b  
	{0xcb0b, &op_or,	  3,   1, 255, 0xff, 0x01, 0x00, 0x01}, // or.wr d b  
	{0xcb0c, &op_or,	  4,   1, 255, 0xff, 0x01, 0x00, 0x01}, // or.wr e b  
	{0xcb0d, &op_or,	  5,   1, 255, 0xff, 0x01, 0x00, 0x01}, // or.wr f b  
	{0xcb0e, &op_or,	  6,   1, 255, 0xff, 0x01, 0x00, 0x01}, // or.wr g b  
	{0xcb0f, &op_or,	  7,   1, 255, 0xff, 0x01, 0x00, 0x01}, // or.wr h b  
	{0xcb10, &op_or,	  0,   2, 255, 0xff, 0x01, 0x00, 0x01}, // or.wr a c  
	{0xcb11, &op_or,	  1,   2, 255, 0xff, 0x01, 0x00, 0x01}, // or.wr b c  
	{0xcb12, &op_or,	  2,   2, 255, 0xff, 0x01, 0x00, 0x01}, // or.wr c c  
	{0xcb13, &op_or,	  3,   2, 255, 0xff, 0x01, 0x00, 0x01}, // or.wr d c  
	{0xcb14, &op_or,	  4,   2, 255, 0xff, 0x01, 0x00, 0x01}, // or.wr e c  
	{0xcb15, &op_or,	  5,   2, 255, 0xff, 0x01, 0x00, 0x01}, // or.wr f c  
	{0xcb16, &op_or,	  6,   2, 255, 0xff, 0x01, 0x00, 0x01}, // or.wr g c  
	{0xcb17, &op_or,	  7,   2, 255, 0xff, 0x01, 0x00, 0x01}, // or.wr h c  
	{0xcb18, &op_or,	  0,   3, 255, 0xff, 0x01, 0x00, 0x01}, // or.wr a d  
	{0xcb19, &op_or,	  1,   3, 255, 0xff, 0x01, 0x00, 0x01}, // or.wr b d  
	{0xcb1a, &op_or,	  2,   3, 255, 0xff, 0x01, 0x00, 0x01}, // or.wr c d  
	{0xcb1b, &op_or,	  3,   3, 255, 0xff, 0x01, 0x00, 0x01}, // or.wr d d  
	{0xcb1c, &op_or,	  4,   3, 255, 0xff, 0x01, 0x00, 0x01}, // or.wr e d  
	{0xcb1d, &op_or,	  5,   3, 255, 0xff, 0x01, 0x00, 0x01}, // or.wr f d  
	{0xcb1e, &op_or,	  6,   3, 255, 0xff, 0x01, 0x00, 0x01}, // or.wr g d  
	{0xcb1f, &op_or,	  7,   3, 255, 0xff, 0x01, 0x00, 0x01}, // or.wr h d  
	{0xcb20, &op_or,	  0,   4, 255, 0xff, 0x01, 0x00, 0x01}, // or.wr a e  
	{0xcb21, &op_or,	  1,   4, 255, 0xff, 0x01, 0x00, 0x01}, // or.wr b e  
	{0xcb22, &op_or,	  2,   4, 255, 0xff, 0x01, 0x00, 0x01}, // or.wr c e  
	{0xcb23, &op_or,	  3,   4, 255, 0xff, 0x01, 0x00, 0x01}, // or.wr d e  
	{0xcb24, &op_or,	  4,   4, 255, 0xff, 0x01, 0x00, 0x01}, // or.wr e e  
	{0xcb25, &op_or,	  5,   4, 255, 0xff, 0x01, 0x00, 0x01}, // or.wr f e  
	{0xcb26, &op_or,	  6,   4, 255, 0xff, 0x01, 0x00, 0x01}, // or.wr g e  
	{0xcb27, &op_or,	  7,   4, 255, 0xff, 0x01, 0x00, 0x01}, // or.wr h e  
	{0xcb28, &op_or,	  0,   5, 255, 0xff, 0x01, 0x00, 0x01}, // or.wr a f  
	{0xcb29, &op_or,	  1,   5, 255, 0xff, 0x01, 0x00, 0x01}, // or.wr b f  
	{0xcb2a, &op_or,	  2,   5, 255, 0xff, 0x01, 0x00, 0x01}, // or.wr c f  
	{0xcb2b, &op_or,	  3,   5, 255, 0xff, 0x01, 0x00, 0x01}, // or.wr d f  
	{0xcb2c, &op_or,	  4,   5, 255, 0xff, 0x01, 0x00, 0x01}, // or.wr e f  
	{0xcb2d, &op_or,	  5,   5, 255, 0xff, 0x01, 0x00, 0x01}, // or.wr f f  
	{0xcb2e, &op_or,	  6,   5, 255, 0xff, 0x01, 0x00, 0x01}, // or.wr g f  
	{0xcb2f, &op_or,	  7,   5, 255, 0xff, 0x01, 0x00, 0x01}, // or.wr h f  
	{0xcb30, &op_or,	  0,   6, 255, 0xff, 0x01, 0x00, 0x01}, // or.wr a g  
	{0xcb31, &op_or,	  1,   6, 255, 0xff, 0x01, 0x00, 0x01}, // or.wr b g  
	{0xcb32, &op_or,	  2,   6, 255, 0xff, 0x01, 0x00, 0x01}, // or.wr c g  
	{0xcb33, &op_or,	  3,   6, 255, 0xff, 0x01, 0x00, 0x01}, // or.wr d g  
	{0xcb34, &op_or,	  4,   6, 255, 0xff, 0x01, 0x00, 0x01}, // or.wr e g  
	{0xcb35, &op_or,	  5,   6, 255, 0xff, 0x01, 0x00, 0x01}, // or.wr f g  
	{0xcb36, &op_or,	  6,   6, 255, 0xff, 0x01, 0x00, 0x01}, // or.wr g g  
	{0xcb37, &op_or,	  7,   6, 255, 0xff, 0x01, 0x00, 0x01}, // or.wr h g  
	{0xcb38, &op_or,	  0,   7, 255, 0xff, 0x01, 0x00, 0x01}, // or.wr a h  
	{0xcb39, &op_or,	  1,   7, 255, 0xff, 0x01, 0x00, 0x01}, // or.wr b h  
	{0xcb3a, &op_or,	  2,   7, 255, 0xff, 0x01, 0x00, 0x01}, // or.wr c h  
	{0xcb3b, &op_or,	  3,   7, 255, 0xff, 0x01, 0x00, 0x01}, // or.wr d h  
	{0xcb3c, &op_or,	  4,   7, 255, 0xff, 0x01, 0x00, 0x01}, // or.wr e h  
	{0xcb3d, &op_or,	  5,   7, 255, 0xff, 0x01, 0x00, 0x01}, // or.wr f h  
	{0xcb3e, &op_or,	  6,   7, 255, 0xff, 0x01, 0x00, 0x01}, // or.wr g h  
	{0xcb3f, &op_or,	  7,   7, 255, 0xff, 0x01, 0x00, 0x01}, // or.wr h h  
	{0xcb40, &op_or,	  0,   0, 255, 0xff, 0x01, 0x00, 0x02}, // or.dr a a  
	{0xcb41, &op_or,	  1,   0, 255, 0xff, 0x01, 0x00, 0x02}, // or.dr b a  
	{0xcb42, &op_or,	  2,   0, 255, 0xff, 0x01, 0x00, 0x02}, // or.dr c a  
	{0xcb43, &op_or,	  3,   0, 255, 0xff, 0x01, 0x00, 0x02}, // or.dr d a  
	{0xcb44, &op_or,	  4,   0, 255, 0xff, 0x01, 0x00, 0x02}, // or.dr e a  
	{0xcb45, &op_or,	  5,   0, 255, 0xff, 0x01, 0x00, 0x02}, // or.dr f a  
	{0xcb46, &op_or,	  6,   0, 255, 0xff, 0x01, 0x00, 0x02}, // or.dr g a  
	{0xcb47, &op_or,	  7,   0, 255, 0xff, 0x01, 0x00, 0x02}, // or.dr h a  
	{0xcb48, &op_or,	  0,   1, 255, 0xff, 0x01, 0x00, 0x02}, // or.dr a b  
	{0xcb49, &op_or,	  1,   1, 255, 0xff, 0x01, 0x00, 0x02}, // or.dr b b  
	{0xcb4a, &op_or,	  2,   1, 255, 0xff, 0x01, 0x00, 0x02}, // or.dr c b  
	{0xcb4b, &op_or,	  3,   1, 255, 0xff, 0x01, 0x00, 0x02}, // or.dr d b  
	{0xcb4c, &op_or,	  4,   1, 255, 0xff, 0x01, 0x00, 0x02}, // or.dr e b  
	{0xcb4d, &op_or,	  5,   1, 255, 0xff, 0x01, 0x00, 0x02}, // or.dr f b  
	{0xcb4e, &op_or,	  6,   1, 255, 0xff, 0x01, 0x00, 0x02}, // or.dr g b  
	{0xcb4f, &op_or,	  7,   1, 255, 0xff, 0x01, 0x00, 0x02}, // or.dr h b  
	{0xcb50, &op_or,	  0,   2, 255, 0xff, 0x01, 0x00, 0x02}, // or.dr a c  
	{0xcb51, &op_or,	  1,   2, 255, 0xff, 0x01, 0x00, 0x02}, // or.dr b c  
	{0xcb52, &op_or,	  2,   2, 255, 0xff, 0x01, 0x00, 0x02}, // or.dr c c  
	{0xcb53, &op_or,	  3,   2, 255, 0xff, 0x01, 0x00, 0x02}, // or.dr d c  
	{0xcb54, &op_or,	  4,   2, 255, 0xff, 0x01, 0x00, 0x02}, // or.dr e c  
	{0xcb55, &op_or,	  5,   2, 255, 0xff, 0x01, 0x00, 0x02}, // or.dr f c  
	{0xcb56, &op_or,	  6,   2, 255, 0xff, 0x01, 0x00, 0x02}, // or.dr g c  
	{0xcb57, &op_or,	  7,   2, 255, 0xff, 0x01, 0x00, 0x02}, // or.dr h c  
	{0xcb58, &op_or,	  0,   3, 255, 0xff, 0x01, 0x00, 0x02}, // or.dr a d  
	{0xcb59, &op_or,	  1,   3, 255, 0xff, 0x01, 0x00, 0x02}, // or.dr b d  
	{0xcb5a, &op_or,	  2,   3, 255, 0xff, 0x01, 0x00, 0x02}, // or.dr c d  
	{0xcb5b, &op_or,	  3,   3, 255, 0xff, 0x01, 0x00, 0x02}, // or.dr d d  
	{0xcb5c, &op_or,	  4,   3, 255, 0xff, 0x01, 0x00, 0x02}, // or.dr e d  
	{0xcb5d, &op_or,	  5,   3, 255, 0xff, 0x01, 0x00, 0x02}, // or.dr f d  
	{0xcb5e, &op_or,	  6,   3, 255, 0xff, 0x01, 0x00, 0x02}, // or.dr g d  
	{0xcb5f, &op_or,	  7,   3, 255, 0xff, 0x01, 0x00, 0x02}, // or.dr h d  
	{0xcb60, &op_or,	  0,   4, 255, 0xff, 0x01, 0x00, 0x02}, // or.dr a e  
	{0xcb61, &op_or,	  1,   4, 255, 0xff, 0x01, 0x00, 0x02}, // or.dr b e  
	{0xcb62, &op_or,	  2,   4, 255, 0xff, 0x01, 0x00, 0x02}, // or.dr c e  
	{0xcb63, &op_or,	  3,   4, 255, 0xff, 0x01, 0x00, 0x02}, // or.dr d e  
	{0xcb64, &op_or,	  4,   4, 255, 0xff, 0x01, 0x00, 0x02}, // or.dr e e  
	{0xcb65, &op_or,	  5,   4, 255, 0xff, 0x01, 0x00, 0x02}, // or.dr f e  
	{0xcb66, &op_or,	  6,   4, 255, 0xff, 0x01, 0x00, 0x02}, // or.dr g e  
	{0xcb67, &op_or,	  7,   4, 255, 0xff, 0x01, 0x00, 0x02}, // or.dr h e  
	{0xcb68, &op_or,	  0,   5, 255, 0xff, 0x01, 0x00, 0x02}, // or.dr a f  
	{0xcb69, &op_or,	  1,   5, 255, 0xff, 0x01, 0x00, 0x02}, // or.dr b f  
	{0xcb6a, &op_or,	  2,   5, 255, 0xff, 0x01, 0x00, 0x02}, // or.dr c f  
	{0xcb6b, &op_or,	  3,   5, 255, 0xff, 0x01, 0x00, 0x02}, // or.dr d f  
	{0xcb6c, &op_or,	  4,   5, 255, 0xff, 0x01, 0x00, 0x02}, // or.dr e f  
	{0xcb6d, &op_or,	  5,   5, 255, 0xff, 0x01, 0x00, 0x02}, // or.dr f f  
	{0xcb6e, &op_or,	  6,   5, 255, 0xff, 0x01, 0x00, 0x02}, // or.dr g f  
	{0xcb6f, &op_or,	  7,   5, 255, 0xff, 0x01, 0x00, 0x02}, // or.dr h f  
	{0xcb70, &op_or,	  0,   6, 255, 0xff, 0x01, 0x00, 0x02}, // or.dr a g  
	{0xcb71, &op_or,	  1,   6, 255, 0xff, 0x01, 0x00, 0x02}, // or.dr b g  
	{0xcb72, &op_or,	  2,   6, 255, 0xff, 0x01, 0x00, 0x02}, // or.dr c g  
	{0xcb73, &op_or,	  3,   6, 255, 0xff, 0x01, 0x00, 0x02}, // or.dr d g  
	{0xcb74, &op_or,	  4,   6, 255, 0xff, 0x01, 0x00, 0x02}, // or.dr e g  
	{0xcb75, &op_or,	  5,   6, 255, 0xff, 0x01, 0x00, 0x02}, // or.dr f g  
	{0xcb76, &op_or,	  6,   6, 255, 0xff, 0x01, 0x00, 0x02}, // or.dr g g  
	{0xcb77, &op_or,	  7,   6, 255, 0xff, 0x01, 0x00, 0x02}, // or.dr h g  
	{0xcb78, &op_or,	  0,   7, 255, 0xff, 0x01, 0x00, 0x02}, // or.dr a h  
	{0xcb79, &op_or,	  1,   7, 255, 0xff, 0x01, 0x00, 0x02}, // or.dr b h  
	{0xcb7a, &op_or,	  2,   7, 255, 0xff, 0x01, 0x00, 0x02}, // or.dr c h  
	{0xcb7b, &op_or,	  3,   7, 255, 0xff, 0x01, 0x00, 0x02}, // or.dr d h  
	{0xcb7c, &op_or,	  4,   7, 255, 0xff, 0x01, 0x00, 0x02}, // or.dr e h  
	{0xcb7d, &op_or,	  5,   7, 255, 0xff, 0x01, 0x00, 0x02}, // or.dr f h  
	{0xcb7e, &op_or,	  6,   7, 255, 0xff, 0x01, 0x00, 0x02}, // or.dr g h  
	{0xcb7f, &op_or,	  7,   7, 255, 0xff, 0x01, 0x00, 0x02}, // or.dr h h  
	{0xcb80, &op_or,	  0,   0, 255, 0xff, 0x01, 0x00, 0x04}, // or.r a a  
	{0xcb81, &op_or,	  1,   0, 255, 0xff, 0x01, 0x00, 0x04}, // or.r b a  
	{0xcb82, &op_or,	  2,   0, 255, 0xff, 0x01, 0x00, 0x04}, // or.r c a  
	{0xcb83, &op_or,	  3,   0, 255, 0xff, 0x01, 0x00, 0x04}, // or.r d a  
	{0xcb84, &op_or,	  4,   0, 255, 0xff, 0x01, 0x00, 0x04}, // or.r e a  
	{0xcb85, &op_or,	  5,   0, 255, 0xff, 0x01, 0x00, 0x04}, // or.r f a  
	{0xcb86, &op_or,	  6,   0, 255, 0xff, 0x01, 0x00, 0x04}, // or.r g a  
	{0xcb87, &op_or,	  7,   0, 255, 0xff, 0x01, 0x00, 0x04}, // or.r h a  
	{0xcb88, &op_or,	  0,   1, 255, 0xff, 0x01, 0x00, 0x04}, // or.r a b  
	{0xcb89, &op_or,	  1,   1, 255, 0xff, 0x01, 0x00, 0x04}, // or.r b b  
	{0xcb8a, &op_or,	  2,   1, 255, 0xff, 0x01, 0x00, 0x04}, // or.r c b  
	{0xcb8b, &op_or,	  3,   1, 255, 0xff, 0x01, 0x00, 0x04}, // or.r d b  
	{0xcb8c, &op_or,	  4,   1, 255, 0xff, 0x01, 0x00, 0x04}, // or.r e b  
	{0xcb8d, &op_or,	  5,   1, 255, 0xff, 0x01, 0x00, 0x04}, // or.r f b  
	{0xcb8e, &op_or,	  6,   1, 255, 0xff, 0x01, 0x00, 0x04}, // or.r g b  
	{0xcb8f, &op_or,	  7,   1, 255, 0xff, 0x01, 0x00, 0x04}, // or.r h b  
	{0xcb90, &op_or,	  0,   2, 255, 0xff, 0x01, 0x00, 0x04}, // or.r a c  
	{0xcb91, &op_or,	  1,   2, 255, 0xff, 0x01, 0x00, 0x04}, // or.r b c  
	{0xcb92, &op_or,	  2,   2, 255, 0xff, 0x01, 0x00, 0x04}, // or.r c c  
	{0xcb93, &op_or,	  3,   2, 255, 0xff, 0x01, 0x00, 0x04}, // or.r d c  
	{0xcb94, &op_or,	  4,   2, 255, 0xff, 0x01, 0x00, 0x04}, // or.r e c  
	{0xcb95, &op_or,	  5,   2, 255, 0xff, 0x01, 0x00, 0x04}, // or.r f c  
	{0xcb96, &op_or,	  6,   2, 255, 0xff, 0x01, 0x00, 0x04}, // or.r g c  
	{0xcb97, &op_or,	  7,   2, 255, 0xff, 0x01, 0x00, 0x04}, // or.r h c  
	{0xcb98, &op_or,	  0,   3, 255, 0xff, 0x01, 0x00, 0x04}, // or.r a d  
	{0xcb99, &op_or,	  1,   3, 255, 0xff, 0x01, 0x00, 0x04}, // or.r b d  
	{0xcb9a, &op_or,	  2,   3, 255, 0xff, 0x01, 0x00, 0x04}, // or.r c d  
	{0xcb9b, &op_or,	  3,   3, 255, 0xff, 0x01, 0x00, 0x04}, // or.r d d  
	{0xcb9c, &op_or,	  4,   3, 255, 0xff, 0x01, 0x00, 0x04}, // or.r e d  
	{0xcb9d, &op_or,	  5,   3, 255, 0xff, 0x01, 0x00, 0x04}, // or.r f d  
	{0xcb9e, &op_or,	  6,   3, 255, 0xff, 0x01, 0x00, 0x04}, // or.r g d  
	{0xcb9f, &op_or,	  7,   3, 255, 0xff, 0x01, 0x00, 0x04}, // or.r h d  
	{0xcba0, &op_or,	  0,   4, 255, 0xff, 0x01, 0x00, 0x04}, // or.r a e  
	{0xcba1, &op_or,	  1,   4, 255, 0xff, 0x01, 0x00, 0x04}, // or.r b e  
	{0xcba2, &op_or,	  2,   4, 255, 0xff, 0x01, 0x00, 0x04}, // or.r c e  
	{0xcba3, &op_or,	  3,   4, 255, 0xff, 0x01, 0x00, 0x04}, // or.r d e  
	{0xcba4, &op_or,	  4,   4, 255, 0xff, 0x01, 0x00, 0x04}, // or.r e e  
	{0xcba5, &op_or,	  5,   4, 255, 0xff, 0x01, 0x00, 0x04}, // or.r f e  
	{0xcba6, &op_or,	  6,   4, 255, 0xff, 0x01, 0x00, 0x04}, // or.r g e  
	{0xcba7, &op_or,	  7,   4, 255, 0xff, 0x01, 0x00, 0x04}, // or.r h e  
	{0xcba8, &op_or,	  0,   5, 255, 0xff, 0x01, 0x00, 0x04}, // or.r a f  
	{0xcba9, &op_or,	  1,   5, 255, 0xff, 0x01, 0x00, 0x04}, // or.r b f  
	{0xcbaa, &op_or,	  2,   5, 255, 0xff, 0x01, 0x00, 0x04}, // or.r c f  
	{0xcbab, &op_or,	  3,   5, 255, 0xff, 0x01, 0x00, 0x04}, // or.r d f  
	{0xcbac, &op_or,	  4,   5, 255, 0xff, 0x01, 0x00, 0x04}, // or.r e f  
	{0xcbad, &op_or,	  5,   5, 255, 0xff, 0x01, 0x00, 0x04}, // or.r f f  
	{0xcbae, &op_or,	  6,   5, 255, 0xff, 0x01, 0x00, 0x04}, // or.r g f  
	{0xcbaf, &op_or,	  7,   5, 255, 0xff, 0x01, 0x00, 0x04}, // or.r h f  
	{0xcbb0, &op_or,	  0,   6, 255, 0xff, 0x01, 0x00, 0x04}, // or.r a g  
	{0xcbb1, &op_or,	  1,   6, 255, 0xff, 0x01, 0x00, 0x04}, // or.r b g  
	{0xcbb2, &op_or,	  2,   6, 255, 0xff, 0x01, 0x00, 0x04}, // or.r c g  
	{0xcbb3, &op_or,	  3,   6, 255, 0xff, 0x01, 0x00, 0x04}, // or.r d g  
	{0xcbb4, &op_or,	  4,   6, 255, 0xff, 0x01, 0x00, 0x04}, // or.r e g  
	{0xcbb5, &op_or,	  5,   6, 255, 0xff, 0x01, 0x00, 0x04}, // or.r f g  
	{0xcbb6, &op_or,	  6,   6, 255, 0xff, 0x01, 0x00, 0x04}, // or.r g g  
	{0xcbb7, &op_or,	  7,   6, 255, 0xff, 0x01, 0x00, 0x04}, // or.r h g  
	{0xcbb8, &op_or,	  0,   7, 255, 0xff, 0x01, 0x00, 0x04}, // or.r a h  
	{0xcbb9, &op_or,	  1,   7, 255, 0xff, 0x01, 0x00, 0x04}, // or.r b h  
	{0xcbba, &op_or,	  2,   7, 255, 0xff, 0x01, 0x00, 0x04}, // or.r c h  
	{0xcbbb, &op_or,	  3,   7, 255, 0xff, 0x01, 0x00, 0x04}, // or.r d h  
	{0xcbbc, &op_or,	  4,   7, 255, 0xff, 0x01, 0x00, 0x04}, // or.r e h  
	{0xcbbd, &op_or,	  5,   7, 255, 0xff, 0x01, 0x00, 0x04}, // or.r f h  
	{0xcbbe, &op_or,	  6,   7, 255, 0xff, 0x01, 0x00, 0x04}, // or.r g h  
	{0xcbbf, &op_or,	  7,   7, 255, 0xff, 0x01, 0x00, 0x04}, // or.r h h  
	{0xcac8, &op_or,	  0,   8, 255, 0xff, 0x00, 0x01, 0x01}, // or.wi a <literal>  
	{0xcac9, &op_or,	  1,   8, 255, 0xff, 0x00, 0x01, 0x01}, // or.wi b <literal>  
	{0xcaca, &op_or,	  2,   8, 255, 0xff, 0x00, 0x01, 0x01}, // or.wi c <literal>  
	{0xcacb, &op_or,	  3,   8, 255, 0xff, 0x00, 0x01, 0x01}, // or.wi d <literal>  
	{0xcacc, &op_or,	  4,   8, 255, 0xff, 0x00, 0x01, 0x01}, // or.wi e <literal>  
	{0xcacd, &op_or,	  5,   8, 255, 0xff, 0x00, 0x01, 0x01}, // or.wi f <literal>  
	{0xcace, &op_or,	  6,   8, 255, 0xff, 0x00, 0x01, 0x01}, // or.wi g <literal>  
	{0xcacf, &op_or,	  7,   8, 255, 0xff, 0x00, 0x01, 0x01}, // or.wi h <literal>  
	{0xcad0, &op_or,	  0,   8, 255, 0xff, 0x00, 0x02, 0x02}, // or.di a <literal>  
	{0xcad1, &op_or,	  1,   8, 255, 0xff, 0x00, 0x02, 0x02}, // or.di b <literal>  
	{0xcad2, &op_or,	  2,   8, 255, 0xff, 0x00, 0x02, 0x02}, // or.di c <literal>  
	{0xcad3, &op_or,	  3,   8, 255, 0xff, 0x00, 0x02, 0x02}, // or.di d <literal>  
	{0xcad4, &op_or,	  4,   8, 255, 0xff, 0x00, 0x02, 0x02}, // or.di e <literal>  
	{0xcad5, &op_or,	  5,   8, 255, 0xff, 0x00, 0x02, 0x02}, // or.di f <literal>  
	{0xcad6, &op_or,	  6,   8, 255, 0xff, 0x00, 0x02, 0x02}, // or.di g <literal>  
	{0xcad7, &op_or,	  7,   8, 255, 0xff, 0x00, 0x02, 0x02}, // or.di h <literal>  
	{0xcae0, &op_or,	  0,   8, 255, 0xff, 0x00, 0x04, 0x04}, // or.i a <literal>  
	{0xcae1, &op_or,	  1,   8, 255, 0xff, 0x00, 0x04, 0x04}, // or.i b <literal>  
	{0xcae2, &op_or,	  2,   8, 255, 0xff, 0x00, 0x04, 0x04}, // or.i c <literal>  
	{0xcae3, &op_or,	  3,   8, 255, 0xff, 0x00, 0x04, 0x04}, // or.i d <literal>  
	{0xcae4, &op_or,	  4,   8, 255, 0xff, 0x00, 0x04, 0x04}, // or.i e <literal>  
	{0xcae5, &op_or,	  5,   8, 255, 0xff, 0x00, 0x04, 0x04}, // or.i f <literal>  
	{0xcae6, &op_or,	  6,   8, 255, 0xff, 0x00, 0x04, 0x04}, // or.i g <literal>  
	{0xcae7, &op_or,	  7,   8, 255, 0xff, 0x00, 0x04, 0x04}, // or.i h <literal>  
	{0xcbc8, &op_or,	  0,   8, 255, 0xff, 0x01, 0x04, 0x01}, // or.wri a <literal>  
	{0xcbc9, &op_or,	  1,   8, 255, 0xff, 0x01, 0x04, 0x01}, // or.wri b <literal>  
	{0xcbca, &op_or,	  2,   8, 255, 0xff, 0x01, 0x04, 0x01}, // or.wri c <literal>  
	{0xcbcb, &op_or,	  3,   8, 255, 0xff, 0x01, 0x04, 0x01}, // or.wri d <literal>  
	{0xcbcc, &op_or,	  4,   8, 255, 0xff, 0x01, 0x04, 0x01}, // or.wri e <literal>  
	{0xcbcd, &op_or,	  5,   8, 255, 0xff, 0x01, 0x04, 0x01}, // or.wri f <literal>  
	{0xcbce, &op_or,	  6,   8, 255, 0xff, 0x01, 0x04, 0x01}, // or.wri g <literal>  
	{0xcbcf, &op_or,	  7,   8, 255, 0xff, 0x01, 0x04, 0x01}, // or.wri h <literal>  
	{0xcbd0, &op_or,	  0,   8, 255, 0xff, 0x01, 0x04, 0x02}, // or.dri a <literal>  
	{0xcbd1, &op_or,	  1,   8, 255, 0xff, 0x01, 0x04, 0x02}, // or.dri b <literal>  
	{0xcbd2, &op_or,	  2,   8, 255, 0xff, 0x01, 0x04, 0x02}, // or.dri c <literal>  
	{0xcbd3, &op_or,	  3,   8, 255, 0xff, 0x01, 0x04, 0x02}, // or.dri d <literal>  
	{0xcbd4, &op_or,	  4,   8, 255, 0xff, 0x01, 0x04, 0x02}, // or.dri e <literal>  
	{0xcbd5, &op_or,	  5,   8, 255, 0xff, 0x01, 0x04, 0x02}, // or.dri f <literal>  
	{0xcbd6, &op_or,	  6,   8, 255, 0xff, 0x01, 0x04, 0x02}, // or.dri g <literal>  
	{0xcbd7, &op_or,	  7,   8, 255, 0xff, 0x01, 0x04, 0x02}, // or.dri h <literal>  
	{0xcbe0, &op_or,	  0,   8, 255, 0xff, 0x01, 0x04, 0x04}, // or.ri a <literal>  
	{0xcbe1, &op_or,	  1,   8, 255, 0xff, 0x01, 0x04, 0x04}, // or.ri b <literal>  
	{0xcbe2, &op_or,	  2,   8, 255, 0xff, 0x01, 0x04, 0x04}, // or.ri c <literal>  
	{0xcbe3, &op_or,	  3,   8, 255, 0xff, 0x01, 0x04, 0x04}, // or.ri d <literal>  
	{0xcbe4, &op_or,	  4,   8, 255, 0xff, 0x01, 0x04, 0x04}, // or.ri e <literal>  
	{0xcbe5, &op_or,	  5,   8, 255, 0xff, 0x01, 0x04, 0x04}, // or.ri f <literal>  
	{0xcbe6, &op_or,	  6,   8, 255, 0xff, 0x01, 0x04, 0x04}, // or.ri g <literal>  
	{0xcbe7, &op_or,	  7,   8, 255, 0xff, 0x01, 0x04, 0x04}, // or.ri h <literal>  
	{0xcc00, &op_rol,	  0,   0, 255, 0xff, 0x00, 0x00, 0x01}, // rol.w a a  
	{0xcc01, &op_rol,	  1,   0, 255, 0xff, 0x00, 0x00, 0x01}, // rol.w b a  
	{0xcc02, &op_rol,	  2,   0, 255, 0xff, 0x00, 0x00, 0x01}, // rol.w c a  
	{0xcc03, &op_rol,	  3,   0, 255, 0xff, 0x00, 0x00, 0x01}, // rol.w d a  
	{0xcc04, &op_rol,	  4,   0, 255, 0xff, 0x00, 0x00, 0x01}, // rol.w e a  
	{0xcc05, &op_rol,	  5,   0, 255, 0xff, 0x00, 0x00, 0x01}, // rol.w f a  
	{0xcc06, &op_rol,	  6,   0, 255, 0xff, 0x00, 0x00, 0x01}, // rol.w g a  
	{0xcc07, &op_rol,	  7,   0, 255, 0xff, 0x00, 0x00, 0x01}, // rol.w h a  
	{0xcc08, &op_rol,	  0,   1, 255, 0xff, 0x00, 0x00, 0x01}, // rol.w a b  
	{0xcc09, &op_rol,	  1,   1, 255, 0xff, 0x00, 0x00, 0x01}, // rol.w b b  
	{0xcc0a, &op_rol,	  2,   1, 255, 0xff, 0x00, 0x00, 0x01}, // rol.w c b  
	{0xcc0b, &op_rol,	  3,   1, 255, 0xff, 0x00, 0x00, 0x01}, // rol.w d b  
	{0xcc0c, &op_rol,	  4,   1, 255, 0xff, 0x00, 0x00, 0x01}, // rol.w e b  
	{0xcc0d, &op_rol,	  5,   1, 255, 0xff, 0x00, 0x00, 0x01}, // rol.w f b  
	{0xcc0e, &op_rol,	  6,   1, 255, 0xff, 0x00, 0x00, 0x01}, // rol.w g b  
	{0xcc0f, &op_rol,	  7,   1, 255, 0xff, 0x00, 0x00, 0x01}, // rol.w h b  
	{0xcc10, &op_rol,	  0,   2, 255, 0xff, 0x00, 0x00, 0x01}, // rol.w a c  
	{0xcc11, &op_rol,	  1,   2, 255, 0xff, 0x00, 0x00, 0x01}, // rol.w b c  
	{0xcc12, &op_rol,	  2,   2, 255, 0xff, 0x00, 0x00, 0x01}, // rol.w c c  
	{0xcc13, &op_rol,	  3,   2, 255, 0xff, 0x00, 0x00, 0x01}, // rol.w d c  
	{0xcc14, &op_rol,	  4,   2, 255, 0xff, 0x00, 0x00, 0x01}, // rol.w e c  
	{0xcc15, &op_rol,	  5,   2, 255, 0xff, 0x00, 0x00, 0x01}, // rol.w f c  
	{0xcc16, &op_rol,	  6,   2, 255, 0xff, 0x00, 0x00, 0x01}, // rol.w g c  
	{0xcc17, &op_rol,	  7,   2, 255, 0xff, 0x00, 0x00, 0x01}, // rol.w h c  
	{0xcc18, &op_rol,	  0,   3, 255, 0xff, 0x00, 0x00, 0x01}, // rol.w a d  
	{0xcc19, &op_rol,	  1,   3, 255, 0xff, 0x00, 0x00, 0x01}, // rol.w b d  
	{0xcc1a, &op_rol,	  2,   3, 255, 0xff, 0x00, 0x00, 0x01}, // rol.w c d  
	{0xcc1b, &op_rol,	  3,   3, 255, 0xff, 0x00, 0x00, 0x01}, // rol.w d d  
	{0xcc1c, &op_rol,	  4,   3, 255, 0xff, 0x00, 0x00, 0x01}, // rol.w e d  
	{0xcc1d, &op_rol,	  5,   3, 255, 0xff, 0x00, 0x00, 0x01}, // rol.w f d  
	{0xcc1e, &op_rol,	  6,   3, 255, 0xff, 0x00, 0x00, 0x01}, // rol.w g d  
	{0xcc1f, &op_rol,	  7,   3, 255, 0xff, 0x00, 0x00, 0x01}, // rol.w h d  
	{0xcc20, &op_rol,	  0,   4, 255, 0xff, 0x00, 0x00, 0x01}, // rol.w a e  
	{0xcc21, &op_rol,	  1,   4, 255, 0xff, 0x00, 0x00, 0x01}, // rol.w b e  
	{0xcc22, &op_rol,	  2,   4, 255, 0xff, 0x00, 0x00, 0x01}, // rol.w c e  
	{0xcc23, &op_rol,	  3,   4, 255, 0xff, 0x00, 0x00, 0x01}, // rol.w d e  
	{0xcc24, &op_rol,	  4,   4, 255, 0xff, 0x00, 0x00, 0x01}, // rol.w e e  
	{0xcc25, &op_rol,	  5,   4, 255, 0xff, 0x00, 0x00, 0x01}, // rol.w f e  
	{0xcc26, &op_rol,	  6,   4, 255, 0xff, 0x00, 0x00, 0x01}, // rol.w g e  
	{0xcc27, &op_rol,	  7,   4, 255, 0xff, 0x00, 0x00, 0x01}, // rol.w h e  
	{0xcc28, &op_rol,	  0,   5, 255, 0xff, 0x00, 0x00, 0x01}, // rol.w a f  
	{0xcc29, &op_rol,	  1,   5, 255, 0xff, 0x00, 0x00, 0x01}, // rol.w b f  
	{0xcc2a, &op_rol,	  2,   5, 255, 0xff, 0x00, 0x00, 0x01}, // rol.w c f  
	{0xcc2b, &op_rol,	  3,   5, 255, 0xff, 0x00, 0x00, 0x01}, // rol.w d f  
	{0xcc2c, &op_rol,	  4,   5, 255, 0xff, 0x00, 0x00, 0x01}, // rol.w e f  
	{0xcc2d, &op_rol,	  5,   5, 255, 0xff, 0x00, 0x00, 0x01}, // rol.w f f  
	{0xcc2e, &op_rol,	  6,   5, 255, 0xff, 0x00, 0x00, 0x01}, // rol.w g f  
	{0xcc2f, &op_rol,	  7,   5, 255, 0xff, 0x00, 0x00, 0x01}, // rol.w h f  
	{0xcc30, &op_rol,	  0,   6, 255, 0xff, 0x00, 0x00, 0x01}, // rol.w a g  
	{0xcc31, &op_rol,	  1,   6, 255, 0xff, 0x00, 0x00, 0x01}, // rol.w b g  
	{0xcc32, &op_rol,	  2,   6, 255, 0xff, 0x00, 0x00, 0x01}, // rol.w c g  
	{0xcc33, &op_rol,	  3,   6, 255, 0xff, 0x00, 0x00, 0x01}, // rol.w d g  
	{0xcc34, &op_rol,	  4,   6, 255, 0xff, 0x00, 0x00, 0x01}, // rol.w e g  
	{0xcc35, &op_rol,	  5,   6, 255, 0xff, 0x00, 0x00, 0x01}, // rol.w f g  
	{0xcc36, &op_rol,	  6,   6, 255, 0xff, 0x00, 0x00, 0x01}, // rol.w g g  
	{0xcc37, &op_rol,	  7,   6, 255, 0xff, 0x00, 0x00, 0x01}, // rol.w h g  
	{0xcc38, &op_rol,	  0,   7, 255, 0xff, 0x00, 0x00, 0x01}, // rol.w a h  
	{0xcc39, &op_rol,	  1,   7, 255, 0xff, 0x00, 0x00, 0x01}, // rol.w b h  
	{0xcc3a, &op_rol,	  2,   7, 255, 0xff, 0x00, 0x00, 0x01}, // rol.w c h  
	{0xcc3b, &op_rol,	  3,   7, 255, 0xff, 0x00, 0x00, 0x01}, // rol.w d h  
	{0xcc3c, &op_rol,	  4,   7, 255, 0xff, 0x00, 0x00, 0x01}, // rol.w e h  
	{0xcc3d, &op_rol,	  5,   7, 255, 0xff, 0x00, 0x00, 0x01}, // rol.w f h  
	{0xcc3e, &op_rol,	  6,   7, 255, 0xff, 0x00, 0x00, 0x01}, // rol.w g h  
	{0xcc3f, &op_rol,	  7,   7, 255, 0xff, 0x00, 0x00, 0x01}, // rol.w h h  
	{0xcc40, &op_rol,	  0,   0, 255, 0xff, 0x00, 0x00, 0x02}, // rol.d a a  
	{0xcc41, &op_rol,	  1,   0, 255, 0xff, 0x00, 0x00, 0x02}, // rol.d b a  
	{0xcc42, &op_rol,	  2,   0, 255, 0xff, 0x00, 0x00, 0x02}, // rol.d c a  
	{0xcc43, &op_rol,	  3,   0, 255, 0xff, 0x00, 0x00, 0x02}, // rol.d d a  
	{0xcc44, &op_rol,	  4,   0, 255, 0xff, 0x00, 0x00, 0x02}, // rol.d e a  
	{0xcc45, &op_rol,	  5,   0, 255, 0xff, 0x00, 0x00, 0x02}, // rol.d f a  
	{0xcc46, &op_rol,	  6,   0, 255, 0xff, 0x00, 0x00, 0x02}, // rol.d g a  
	{0xcc47, &op_rol,	  7,   0, 255, 0xff, 0x00, 0x00, 0x02}, // rol.d h a  
	{0xcc48, &op_rol,	  0,   1, 255, 0xff, 0x00, 0x00, 0x02}, // rol.d a b  
	{0xcc49, &op_rol,	  1,   1, 255, 0xff, 0x00, 0x00, 0x02}, // rol.d b b  
	{0xcc4a, &op_rol,	  2,   1, 255, 0xff, 0x00, 0x00, 0x02}, // rol.d c b  
	{0xcc4b, &op_rol,	  3,   1, 255, 0xff, 0x00, 0x00, 0x02}, // rol.d d b  
	{0xcc4c, &op_rol,	  4,   1, 255, 0xff, 0x00, 0x00, 0x02}, // rol.d e b  
	{0xcc4d, &op_rol,	  5,   1, 255, 0xff, 0x00, 0x00, 0x02}, // rol.d f b  
	{0xcc4e, &op_rol,	  6,   1, 255, 0xff, 0x00, 0x00, 0x02}, // rol.d g b  
	{0xcc4f, &op_rol,	  7,   1, 255, 0xff, 0x00, 0x00, 0x02}, // rol.d h b  
	{0xcc50, &op_rol,	  0,   2, 255, 0xff, 0x00, 0x00, 0x02}, // rol.d a c  
	{0xcc51, &op_rol,	  1,   2, 255, 0xff, 0x00, 0x00, 0x02}, // rol.d b c  
	{0xcc52, &op_rol,	  2,   2, 255, 0xff, 0x00, 0x00, 0x02}, // rol.d c c  
	{0xcc53, &op_rol,	  3,   2, 255, 0xff, 0x00, 0x00, 0x02}, // rol.d d c  
	{0xcc54, &op_rol,	  4,   2, 255, 0xff, 0x00, 0x00, 0x02}, // rol.d e c  
	{0xcc55, &op_rol,	  5,   2, 255, 0xff, 0x00, 0x00, 0x02}, // rol.d f c  
	{0xcc56, &op_rol,	  6,   2, 255, 0xff, 0x00, 0x00, 0x02}, // rol.d g c  
	{0xcc57, &op_rol,	  7,   2, 255, 0xff, 0x00, 0x00, 0x02}, // rol.d h c  
	{0xcc58, &op_rol,	  0,   3, 255, 0xff, 0x00, 0x00, 0x02}, // rol.d a d  
	{0xcc59, &op_rol,	  1,   3, 255, 0xff, 0x00, 0x00, 0x02}, // rol.d b d  
	{0xcc5a, &op_rol,	  2,   3, 255, 0xff, 0x00, 0x00, 0x02}, // rol.d c d  
	{0xcc5b, &op_rol,	  3,   3, 255, 0xff, 0x00, 0x00, 0x02}, // rol.d d d  
	{0xcc5c, &op_rol,	  4,   3, 255, 0xff, 0x00, 0x00, 0x02}, // rol.d e d  
	{0xcc5d, &op_rol,	  5,   3, 255, 0xff, 0x00, 0x00, 0x02}, // rol.d f d  
	{0xcc5e, &op_rol,	  6,   3, 255, 0xff, 0x00, 0x00, 0x02}, // rol.d g d  
	{0xcc5f, &op_rol,	  7,   3, 255, 0xff, 0x00, 0x00, 0x02}, // rol.d h d  
	{0xcc60, &op_rol,	  0,   4, 255, 0xff, 0x00, 0x00, 0x02}, // rol.d a e  
	{0xcc61, &op_rol,	  1,   4, 255, 0xff, 0x00, 0x00, 0x02}, // rol.d b e  
	{0xcc62, &op_rol,	  2,   4, 255, 0xff, 0x00, 0x00, 0x02}, // rol.d c e  
	{0xcc63, &op_rol,	  3,   4, 255, 0xff, 0x00, 0x00, 0x02}, // rol.d d e  
	{0xcc64, &op_rol,	  4,   4, 255, 0xff, 0x00, 0x00, 0x02}, // rol.d e e  
	{0xcc65, &op_rol,	  5,   4, 255, 0xff, 0x00, 0x00, 0x02}, // rol.d f e  
	{0xcc66, &op_rol,	  6,   4, 255, 0xff, 0x00, 0x00, 0x02}, // rol.d g e  
	{0xcc67, &op_rol,	  7,   4, 255, 0xff, 0x00, 0x00, 0x02}, // rol.d h e  
	{0xcc68, &op_rol,	  0,   5, 255, 0xff, 0x00, 0x00, 0x02}, // rol.d a f  
	{0xcc69, &op_rol,	  1,   5, 255, 0xff, 0x00, 0x00, 0x02}, // rol.d b f  
	{0xcc6a, &op_rol,	  2,   5, 255, 0xff, 0x00, 0x00, 0x02}, // rol.d c f  
	{0xcc6b, &op_rol,	  3,   5, 255, 0xff, 0x00, 0x00, 0x02}, // rol.d d f  
	{0xcc6c, &op_rol,	  4,   5, 255, 0xff, 0x00, 0x00, 0x02}, // rol.d e f  
	{0xcc6d, &op_rol,	  5,   5, 255, 0xff, 0x00, 0x00, 0x02}, // rol.d f f  
	{0xcc6e, &op_rol,	  6,   5, 255, 0xff, 0x00, 0x00, 0x02}, // rol.d g f  
	{0xcc6f, &op_rol,	  7,   5, 255, 0xff, 0x00, 0x00, 0x02}, // rol.d h f  
	{0xcc70, &op_rol,	  0,   6, 255, 0xff, 0x00, 0x00, 0x02}, // rol.d a g  
	{0xcc71, &op_rol,	  1,   6, 255, 0xff, 0x00, 0x00, 0x02}, // rol.d b g  
	{0xcc72, &op_rol,	  2,   6, 255, 0xff, 0x00, 0x00, 0x02}, // rol.d c g  
	{0xcc73, &op_rol,	  3,   6, 255, 0xff, 0x00, 0x00, 0x02}, // rol.d d g  
	{0xcc74, &op_rol,	  4,   6, 255, 0xff, 0x00, 0x00, 0x02}, // rol.d e g  
	{0xcc75, &op_rol,	  5,   6, 255, 0xff, 0x00, 0x00, 0x02}, // rol.d f g  
	{0xcc76, &op_rol,	  6,   6, 255, 0xff, 0x00, 0x00, 0x02}, // rol.d g g  
	{0xcc77, &op_rol,	  7,   6, 255, 0xff, 0x00, 0x00, 0x02}, // rol.d h g  
	{0xcc78, &op_rol,	  0,   7, 255, 0xff, 0x00, 0x00, 0x02}, // rol.d a h  
	{0xcc79, &op_rol,	  1,   7, 255, 0xff, 0x00, 0x00, 0x02}, // rol.d b h  
	{0xcc7a, &op_rol,	  2,   7, 255, 0xff, 0x00, 0x00, 0x02}, // rol.d c h  
	{0xcc7b, &op_rol,	  3,   7, 255, 0xff, 0x00, 0x00, 0x02}, // rol.d d h  
	{0xcc7c, &op_rol,	  4,   7, 255, 0xff, 0x00, 0x00, 0x02}, // rol.d e h  
	{0xcc7d, &op_rol,	  5,   7, 255, 0xff, 0x00, 0x00, 0x02}, // rol.d f h  
	{0xcc7e, &op_rol,	  6,   7, 255, 0xff, 0x00, 0x00, 0x02}, // rol.d g h  
	{0xcc7f, &op_rol,	  7,   7, 255, 0xff, 0x00, 0x00, 0x02}, // rol.d h h  
	{0xcc80, &op_rol,	  0,   0, 255, 0xff, 0x00, 0x00, 0x04}, // rol a a  
	{0xcc81, &op_rol,	  1,   0, 255, 0xff, 0x00, 0x00, 0x04}, // rol b a  
	{0xcc82, &op_rol,	  2,   0, 255, 0xff, 0x00, 0x00, 0x04}, // rol c a  
	{0xcc83, &op_rol,	  3,   0, 255, 0xff, 0x00, 0x00, 0x04}, // rol d a  
	{0xcc84, &op_rol,	  4,   0, 255, 0xff, 0x00, 0x00, 0x04}, // rol e a  
	{0xcc85, &op_rol,	  5,   0, 255, 0xff, 0x00, 0x00, 0x04}, // rol f a  
	{0xcc86, &op_rol,	  6,   0, 255, 0xff, 0x00, 0x00, 0x04}, // rol g a  
	{0xcc87, &op_rol,	  7,   0, 255, 0xff, 0x00, 0x00, 0x04}, // rol h a  
	{0xcc88, &op_rol,	  0,   1, 255, 0xff, 0x00, 0x00, 0x04}, // rol a b  
	{0xcc89, &op_rol,	  1,   1, 255, 0xff, 0x00, 0x00, 0x04}, // rol b b  
	{0xcc8a, &op_rol,	  2,   1, 255, 0xff, 0x00, 0x00, 0x04}, // rol c b  
	{0xcc8b, &op_rol,	  3,   1, 255, 0xff, 0x00, 0x00, 0x04}, // rol d b  
	{0xcc8c, &op_rol,	  4,   1, 255, 0xff, 0x00, 0x00, 0x04}, // rol e b  
	{0xcc8d, &op_rol,	  5,   1, 255, 0xff, 0x00, 0x00, 0x04}, // rol f b  
	{0xcc8e, &op_rol,	  6,   1, 255, 0xff, 0x00, 0x00, 0x04}, // rol g b  
	{0xcc8f, &op_rol,	  7,   1, 255, 0xff, 0x00, 0x00, 0x04}, // rol h b  
	{0xcc90, &op_rol,	  0,   2, 255, 0xff, 0x00, 0x00, 0x04}, // rol a c  
	{0xcc91, &op_rol,	  1,   2, 255, 0xff, 0x00, 0x00, 0x04}, // rol b c  
	{0xcc92, &op_rol,	  2,   2, 255, 0xff, 0x00, 0x00, 0x04}, // rol c c  
	{0xcc93, &op_rol,	  3,   2, 255, 0xff, 0x00, 0x00, 0x04}, // rol d c  
	{0xcc94, &op_rol,	  4,   2, 255, 0xff, 0x00, 0x00, 0x04}, // rol e c  
	{0xcc95, &op_rol,	  5,   2, 255, 0xff, 0x00, 0x00, 0x04}, // rol f c  
	{0xcc96, &op_rol,	  6,   2, 255, 0xff, 0x00, 0x00, 0x04}, // rol g c  
	{0xcc97, &op_rol,	  7,   2, 255, 0xff, 0x00, 0x00, 0x04}, // rol h c  
	{0xcc98, &op_rol,	  0,   3, 255, 0xff, 0x00, 0x00, 0x04}, // rol a d  
	{0xcc99, &op_rol,	  1,   3, 255, 0xff, 0x00, 0x00, 0x04}, // rol b d  
	{0xcc9a, &op_rol,	  2,   3, 255, 0xff, 0x00, 0x00, 0x04}, // rol c d  
	{0xcc9b, &op_rol,	  3,   3, 255, 0xff, 0x00, 0x00, 0x04}, // rol d d  
	{0xcc9c, &op_rol,	  4,   3, 255, 0xff, 0x00, 0x00, 0x04}, // rol e d  
	{0xcc9d, &op_rol,	  5,   3, 255, 0xff, 0x00, 0x00, 0x04}, // rol f d  
	{0xcc9e, &op_rol,	  6,   3, 255, 0xff, 0x00, 0x00, 0x04}, // rol g d  
	{0xcc9f, &op_rol,	  7,   3, 255, 0xff, 0x00, 0x00, 0x04}, // rol h d  
	{0xcca0, &op_rol,	  0,   4, 255, 0xff, 0x00, 0x00, 0x04}, // rol a e  
	{0xcca1, &op_rol,	  1,   4, 255, 0xff, 0x00, 0x00, 0x04}, // rol b e  
	{0xcca2, &op_rol,	  2,   4, 255, 0xff, 0x00, 0x00, 0x04}, // rol c e  
	{0xcca3, &op_rol,	  3,   4, 255, 0xff, 0x00, 0x00, 0x04}, // rol d e  
	{0xcca4, &op_rol,	  4,   4, 255, 0xff, 0x00, 0x00, 0x04}, // rol e e  
	{0xcca5, &op_rol,	  5,   4, 255, 0xff, 0x00, 0x00, 0x04}, // rol f e  
	{0xcca6, &op_rol,	  6,   4, 255, 0xff, 0x00, 0x00, 0x04}, // rol g e  
	{0xcca7, &op_rol,	  7,   4, 255, 0xff, 0x00, 0x00, 0x04}, // rol h e  
	{0xcca8, &op_rol,	  0,   5, 255, 0xff, 0x00, 0x00, 0x04}, // rol a f  
	{0xcca9, &op_rol,	  1,   5, 255, 0xff, 0x00, 0x00, 0x04}, // rol b f  
	{0xccaa, &op_rol,	  2,   5, 255, 0xff, 0x00, 0x00, 0x04}, // rol c f  
	{0xccab, &op_rol,	  3,   5, 255, 0xff, 0x00, 0x00, 0x04}, // rol d f  
	{0xccac, &op_rol,	  4,   5, 255, 0xff, 0x00, 0x00, 0x04}, // rol e f  
	{0xccad, &op_rol,	  5,   5, 255, 0xff, 0x00, 0x00, 0x04}, // rol f f  
	{0xccae, &op_rol,	  6,   5, 255, 0xff, 0x00, 0x00, 0x04}, // rol g f  
	{0xccaf, &op_rol,	  7,   5, 255, 0xff, 0x00, 0x00, 0x04}, // rol h f  
	{0xccb0, &op_rol,	  0,   6, 255, 0xff, 0x00, 0x00, 0x04}, // rol a g  
	{0xccb1, &op_rol,	  1,   6, 255, 0xff, 0x00, 0x00, 0x04}, // rol b g  
	{0xccb2, &op_rol,	  2,   6, 255, 0xff, 0x00, 0x00, 0x04}, // rol c g  
	{0xccb3, &op_rol,	  3,   6, 255, 0xff, 0x00, 0x00, 0x04}, // rol d g  
	{0xccb4, &op_rol,	  4,   6, 255, 0xff, 0x00, 0x00, 0x04}, // rol e g  
	{0xccb5, &op_rol,	  5,   6, 255, 0xff, 0x00, 0x00, 0x04}, // rol f g  
	{0xccb6, &op_rol,	  6,   6, 255, 0xff, 0x00, 0x00, 0x04}, // rol g g  
	{0xccb7, &op_rol,	  7,   6, 255, 0xff, 0x00, 0x00, 0x04}, // rol h g  
	{0xccb8, &op_rol,	  0,   7, 255, 0xff, 0x00, 0x00, 0x04}, // rol a h  
	{0xccb9, &op_rol,	  1,   7, 255, 0xff, 0x00, 0x00, 0x04}, // rol b h  
	{0xccba, &op_rol,	  2,   7, 255, 0xff, 0x00, 0x00, 0x04}, // rol c h  
	{0xccbb, &op_rol,	  3,   7, 255, 0xff, 0x00, 0x00, 0x04}, // rol d h  
	{0xccbc, &op_rol,	  4,   7, 255, 0xff, 0x00, 0x00, 0x04}, // rol e h  
	{0xccbd, &op_rol,	  5,   7, 255, 0xff, 0x00, 0x00, 0x04}, // rol f h  
	{0xccbe, &op_rol,	  6,   7, 255, 0xff, 0x00, 0x00, 0x04}, // rol g h  
	{0xccbf, &op_rol,	  7,   7, 255, 0xff, 0x00, 0x00, 0x04}, // rol h h  
	{0xcd00, &op_rol,	  0,   0, 255, 0xff, 0x01, 0x00, 0x01}, // rol.wr a a  
	{0xcd01, &op_rol,	  1,   0, 255, 0xff, 0x01, 0x00, 0x01}, // rol.wr b a  
	{0xcd02, &op_rol,	  2,   0, 255, 0xff, 0x01, 0x00, 0x01}, // rol.wr c a  
	{0xcd03, &op_rol,	  3,   0, 255, 0xff, 0x01, 0x00, 0x01}, // rol.wr d a  
	{0xcd04, &op_rol,	  4,   0, 255, 0xff, 0x01, 0x00, 0x01}, // rol.wr e a  
	{0xcd05, &op_rol,	  5,   0, 255, 0xff, 0x01, 0x00, 0x01}, // rol.wr f a  
	{0xcd06, &op_rol,	  6,   0, 255, 0xff, 0x01, 0x00, 0x01}, // rol.wr g a  
	{0xcd07, &op_rol,	  7,   0, 255, 0xff, 0x01, 0x00, 0x01}, // rol.wr h a  
	{0xcd08, &op_rol,	  0,   1, 255, 0xff, 0x01, 0x00, 0x01}, // rol.wr a b  
	{0xcd09, &op_rol,	  1,   1, 255, 0xff, 0x01, 0x00, 0x01}, // rol.wr b b  
	{0xcd0a, &op_rol,	  2,   1, 255, 0xff, 0x01, 0x00, 0x01}, // rol.wr c b  
	{0xcd0b, &op_rol,	  3,   1, 255, 0xff, 0x01, 0x00, 0x01}, // rol.wr d b  
	{0xcd0c, &op_rol,	  4,   1, 255, 0xff, 0x01, 0x00, 0x01}, // rol.wr e b  
	{0xcd0d, &op_rol,	  5,   1, 255, 0xff, 0x01, 0x00, 0x01}, // rol.wr f b  
	{0xcd0e, &op_rol,	  6,   1, 255, 0xff, 0x01, 0x00, 0x01}, // rol.wr g b  
	{0xcd0f, &op_rol,	  7,   1, 255, 0xff, 0x01, 0x00, 0x01}, // rol.wr h b  
	{0xcd10, &op_rol,	  0,   2, 255, 0xff, 0x01, 0x00, 0x01}, // rol.wr a c  
	{0xcd11, &op_rol,	  1,   2, 255, 0xff, 0x01, 0x00, 0x01}, // rol.wr b c  
	{0xcd12, &op_rol,	  2,   2, 255, 0xff, 0x01, 0x00, 0x01}, // rol.wr c c  
	{0xcd13, &op_rol,	  3,   2, 255, 0xff, 0x01, 0x00, 0x01}, // rol.wr d c  
	{0xcd14, &op_rol,	  4,   2, 255, 0xff, 0x01, 0x00, 0x01}, // rol.wr e c  
	{0xcd15, &op_rol,	  5,   2, 255, 0xff, 0x01, 0x00, 0x01}, // rol.wr f c  
	{0xcd16, &op_rol,	  6,   2, 255, 0xff, 0x01, 0x00, 0x01}, // rol.wr g c  
	{0xcd17, &op_rol,	  7,   2, 255, 0xff, 0x01, 0x00, 0x01}, // rol.wr h c  
	{0xcd18, &op_rol,	  0,   3, 255, 0xff, 0x01, 0x00, 0x01}, // rol.wr a d  
	{0xcd19, &op_rol,	  1,   3, 255, 0xff, 0x01, 0x00, 0x01}, // rol.wr b d  
	{0xcd1a, &op_rol,	  2,   3, 255, 0xff, 0x01, 0x00, 0x01}, // rol.wr c d  
	{0xcd1b, &op_rol,	  3,   3, 255, 0xff, 0x01, 0x00, 0x01}, // rol.wr d d  
	{0xcd1c, &op_rol,	  4,   3, 255, 0xff, 0x01, 0x00, 0x01}, // rol.wr e d  
	{0xcd1d, &op_rol,	  5,   3, 255, 0xff, 0x01, 0x00, 0x01}, // rol.wr f d  
	{0xcd1e, &op_rol,	  6,   3, 255, 0xff, 0x01, 0x00, 0x01}, // rol.wr g d  
	{0xcd1f, &op_rol,	  7,   3, 255, 0xff, 0x01, 0x00, 0x01}, // rol.wr h d  
	{0xcd20, &op_rol,	  0,   4, 255, 0xff, 0x01, 0x00, 0x01}, // rol.wr a e  
	{0xcd21, &op_rol,	  1,   4, 255, 0xff, 0x01, 0x00, 0x01}, // rol.wr b e  
	{0xcd22, &op_rol,	  2,   4, 255, 0xff, 0x01, 0x00, 0x01}, // rol.wr c e  
	{0xcd23, &op_rol,	  3,   4, 255, 0xff, 0x01, 0x00, 0x01}, // rol.wr d e  
	{0xcd24, &op_rol,	  4,   4, 255, 0xff, 0x01, 0x00, 0x01}, // rol.wr e e  
	{0xcd25, &op_rol,	  5,   4, 255, 0xff, 0x01, 0x00, 0x01}, // rol.wr f e  
	{0xcd26, &op_rol,	  6,   4, 255, 0xff, 0x01, 0x00, 0x01}, // rol.wr g e  
	{0xcd27, &op_rol,	  7,   4, 255, 0xff, 0x01, 0x00, 0x01}, // rol.wr h e  
	{0xcd28, &op_rol,	  0,   5, 255, 0xff, 0x01, 0x00, 0x01}, // rol.wr a f  
	{0xcd29, &op_rol,	  1,   5, 255, 0xff, 0x01, 0x00, 0x01}, // rol.wr b f  
	{0xcd2a, &op_rol,	  2,   5, 255, 0xff, 0x01, 0x00, 0x01}, // rol.wr c f  
	{0xcd2b, &op_rol,	  3,   5, 255, 0xff, 0x01, 0x00, 0x01}, // rol.wr d f  
	{0xcd2c, &op_rol,	  4,   5, 255, 0xff, 0x01, 0x00, 0x01}, // rol.wr e f  
	{0xcd2d, &op_rol,	  5,   5, 255, 0xff, 0x01, 0x00, 0x01}, // rol.wr f f  
	{0xcd2e, &op_rol,	  6,   5, 255, 0xff, 0x01, 0x00, 0x01}, // rol.wr g f  
	{0xcd2f, &op_rol,	  7,   5, 255, 0xff, 0x01, 0x00, 0x01}, // rol.wr h f  
	{0xcd30, &op_rol,	  0,   6, 255, 0xff, 0x01, 0x00, 0x01}, // rol.wr a g  
	{0xcd31, &op_rol,	  1,   6, 255, 0xff, 0x01, 0x00, 0x01}, // rol.wr b g  
	{0xcd32, &op_rol,	  2,   6, 255, 0xff, 0x01, 0x00, 0x01}, // rol.wr c g  
	{0xcd33, &op_rol,	  3,   6, 255, 0xff, 0x01, 0x00, 0x01}, // rol.wr d g  
	{0xcd34, &op_rol,	  4,   6, 255, 0xff, 0x01, 0x00, 0x01}, // rol.wr e g  
	{0xcd35, &op_rol,	  5,   6, 255, 0xff, 0x01, 0x00, 0x01}, // rol.wr f g  
	{0xcd36, &op_rol,	  6,   6, 255, 0xff, 0x01, 0x00, 0x01}, // rol.wr g g  
	{0xcd37, &op_rol,	  7,   6, 255, 0xff, 0x01, 0x00, 0x01}, // rol.wr h g  
	{0xcd38, &op_rol,	  0,   7, 255, 0xff, 0x01, 0x00, 0x01}, // rol.wr a h  
	{0xcd39, &op_rol,	  1,   7, 255, 0xff, 0x01, 0x00, 0x01}, // rol.wr b h  
	{0xcd3a, &op_rol,	  2,   7, 255, 0xff, 0x01, 0x00, 0x01}, // rol.wr c h  
	{0xcd3b, &op_rol,	  3,   7, 255, 0xff, 0x01, 0x00, 0x01}, // rol.wr d h  
	{0xcd3c, &op_rol,	  4,   7, 255, 0xff, 0x01, 0x00, 0x01}, // rol.wr e h  
	{0xcd3d, &op_rol,	  5,   7, 255, 0xff, 0x01, 0x00, 0x01}, // rol.wr f h  
	{0xcd3e, &op_rol,	  6,   7, 255, 0xff, 0x01, 0x00, 0x01}, // rol.wr g h  
	{0xcd3f, &op_rol,	  7,   7, 255, 0xff, 0x01, 0x00, 0x01}, // rol.wr h h  
	{0xcd40, &op_rol,	  0,   0, 255, 0xff, 0x01, 0x00, 0x02}, // rol.dr a a  
	{0xcd41, &op_rol,	  1,   0, 255, 0xff, 0x01, 0x00, 0x02}, // rol.dr b a  
	{0xcd42, &op_rol,	  2,   0, 255, 0xff, 0x01, 0x00, 0x02}, // rol.dr c a  
	{0xcd43, &op_rol,	  3,   0, 255, 0xff, 0x01, 0x00, 0x02}, // rol.dr d a  
	{0xcd44, &op_rol,	  4,   0, 255, 0xff, 0x01, 0x00, 0x02}, // rol.dr e a  
	{0xcd45, &op_rol,	  5,   0, 255, 0xff, 0x01, 0x00, 0x02}, // rol.dr f a  
	{0xcd46, &op_rol,	  6,   0, 255, 0xff, 0x01, 0x00, 0x02}, // rol.dr g a  
	{0xcd47, &op_rol,	  7,   0, 255, 0xff, 0x01, 0x00, 0x02}, // rol.dr h a  
	{0xcd48, &op_rol,	  0,   1, 255, 0xff, 0x01, 0x00, 0x02}, // rol.dr a b  
	{0xcd49, &op_rol,	  1,   1, 255, 0xff, 0x01, 0x00, 0x02}, // rol.dr b b  
	{0xcd4a, &op_rol,	  2,   1, 255, 0xff, 0x01, 0x00, 0x02}, // rol.dr c b  
	{0xcd4b, &op_rol,	  3,   1, 255, 0xff, 0x01, 0x00, 0x02}, // rol.dr d b  
	{0xcd4c, &op_rol,	  4,   1, 255, 0xff, 0x01, 0x00, 0x02}, // rol.dr e b  
	{0xcd4d, &op_rol,	  5,   1, 255, 0xff, 0x01, 0x00, 0x02}, // rol.dr f b  
	{0xcd4e, &op_rol,	  6,   1, 255, 0xff, 0x01, 0x00, 0x02}, // rol.dr g b  
	{0xcd4f, &op_rol,	  7,   1, 255, 0xff, 0x01, 0x00, 0x02}, // rol.dr h b  
	{0xcd50, &op_rol,	  0,   2, 255, 0xff, 0x01, 0x00, 0x02}, // rol.dr a c  
	{0xcd51, &op_rol,	  1,   2, 255, 0xff, 0x01, 0x00, 0x02}, // rol.dr b c  
	{0xcd52, &op_rol,	  2,   2, 255, 0xff, 0x01, 0x00, 0x02}, // rol.dr c c  
	{0xcd53, &op_rol,	  3,   2, 255, 0xff, 0x01, 0x00, 0x02}, // rol.dr d c  
	{0xcd54, &op_rol,	  4,   2, 255, 0xff, 0x01, 0x00, 0x02}, // rol.dr e c  
	{0xcd55, &op_rol,	  5,   2, 255, 0xff, 0x01, 0x00, 0x02}, // rol.dr f c  
	{0xcd56, &op_rol,	  6,   2, 255, 0xff, 0x01, 0x00, 0x02}, // rol.dr g c  
	{0xcd57, &op_rol,	  7,   2, 255, 0xff, 0x01, 0x00, 0x02}, // rol.dr h c  
	{0xcd58, &op_rol,	  0,   3, 255, 0xff, 0x01, 0x00, 0x02}, // rol.dr a d  
	{0xcd59, &op_rol,	  1,   3, 255, 0xff, 0x01, 0x00, 0x02}, // rol.dr b d  
	{0xcd5a, &op_rol,	  2,   3, 255, 0xff, 0x01, 0x00, 0x02}, // rol.dr c d  
	{0xcd5b, &op_rol,	  3,   3, 255, 0xff, 0x01, 0x00, 0x02}, // rol.dr d d  
	{0xcd5c, &op_rol,	  4,   3, 255, 0xff, 0x01, 0x00, 0x02}, // rol.dr e d  
	{0xcd5d, &op_rol,	  5,   3, 255, 0xff, 0x01, 0x00, 0x02}, // rol.dr f d  
	{0xcd5e, &op_rol,	  6,   3, 255, 0xff, 0x01, 0x00, 0x02}, // rol.dr g d  
	{0xcd5f, &op_rol,	  7,   3, 255, 0xff, 0x01, 0x00, 0x02}, // rol.dr h d  
	{0xcd60, &op_rol,	  0,   4, 255, 0xff, 0x01, 0x00, 0x02}, // rol.dr a e  
	{0xcd61, &op_rol,	  1,   4, 255, 0xff, 0x01, 0x00, 0x02}, // rol.dr b e  
	{0xcd62, &op_rol,	  2,   4, 255, 0xff, 0x01, 0x00, 0x02}, // rol.dr c e  
	{0xcd63, &op_rol,	  3,   4, 255, 0xff, 0x01, 0x00, 0x02}, // rol.dr d e  
	{0xcd64, &op_rol,	  4,   4, 255, 0xff, 0x01, 0x00, 0x02}, // rol.dr e e  
	{0xcd65, &op_rol,	  5,   4, 255, 0xff, 0x01, 0x00, 0x02}, // rol.dr f e  
	{0xcd66, &op_rol,	  6,   4, 255, 0xff, 0x01, 0x00, 0x02}, // rol.dr g e  
	{0xcd67, &op_rol,	  7,   4, 255, 0xff, 0x01, 0x00, 0x02}, // rol.dr h e  
	{0xcd68, &op_rol,	  0,   5, 255, 0xff, 0x01, 0x00, 0x02}, // rol.dr a f  
	{0xcd69, &op_rol,	  1,   5, 255, 0xff, 0x01, 0x00, 0x02}, // rol.dr b f  
	{0xcd6a, &op_rol,	  2,   5, 255, 0xff, 0x01, 0x00, 0x02}, // rol.dr c f  
	{0xcd6b, &op_rol,	  3,   5, 255, 0xff, 0x01, 0x00, 0x02}, // rol.dr d f  
	{0xcd6c, &op_rol,	  4,   5, 255, 0xff, 0x01, 0x00, 0x02}, // rol.dr e f  
	{0xcd6d, &op_rol,	  5,   5, 255, 0xff, 0x01, 0x00, 0x02}, // rol.dr f f  
	{0xcd6e, &op_rol,	  6,   5, 255, 0xff, 0x01, 0x00, 0x02}, // rol.dr g f  
	{0xcd6f, &op_rol,	  7,   5, 255, 0xff, 0x01, 0x00, 0x02}, // rol.dr h f  
	{0xcd70, &op_rol,	  0,   6, 255, 0xff, 0x01, 0x00, 0x02}, // rol.dr a g  
	{0xcd71, &op_rol,	  1,   6, 255, 0xff, 0x01, 0x00, 0x02}, // rol.dr b g  
	{0xcd72, &op_rol,	  2,   6, 255, 0xff, 0x01, 0x00, 0x02}, // rol.dr c g  
	{0xcd73, &op_rol,	  3,   6, 255, 0xff, 0x01, 0x00, 0x02}, // rol.dr d g  
	{0xcd74, &op_rol,	  4,   6, 255, 0xff, 0x01, 0x00, 0x02}, // rol.dr e g  
	{0xcd75, &op_rol,	  5,   6, 255, 0xff, 0x01, 0x00, 0x02}, // rol.dr f g  
	{0xcd76, &op_rol,	  6,   6, 255, 0xff, 0x01, 0x00, 0x02}, // rol.dr g g  
	{0xcd77, &op_rol,	  7,   6, 255, 0xff, 0x01, 0x00, 0x02}, // rol.dr h g  
	{0xcd78, &op_rol,	  0,   7, 255, 0xff, 0x01, 0x00, 0x02}, // rol.dr a h  
	{0xcd79, &op_rol,	  1,   7, 255, 0xff, 0x01, 0x00, 0x02}, // rol.dr b h  
	{0xcd7a, &op_rol,	  2,   7, 255, 0xff, 0x01, 0x00, 0x02}, // rol.dr c h  
	{0xcd7b, &op_rol,	  3,   7, 255, 0xff, 0x01, 0x00, 0x02}, // rol.dr d h  
	{0xcd7c, &op_rol,	  4,   7, 255, 0xff, 0x01, 0x00, 0x02}, // rol.dr e h  
	{0xcd7d, &op_rol,	  5,   7, 255, 0xff, 0x01, 0x00, 0x02}, // rol.dr f h  
	{0xcd7e, &op_rol,	  6,   7, 255, 0xff, 0x01, 0x00, 0x02}, // rol.dr g h  
	{0xcd7f, &op_rol,	  7,   7, 255, 0xff, 0x01, 0x00, 0x02}, // rol.dr h h  
	{0xcd80, &op_rol,	  0,   0, 255, 0xff, 0x01, 0x00, 0x04}, // rol.r a a  
	{0xcd81, &op_rol,	  1,   0, 255, 0xff, 0x01, 0x00, 0x04}, // rol.r b a  
	{0xcd82, &op_rol,	  2,   0, 255, 0xff, 0x01, 0x00, 0x04}, // rol.r c a  
	{0xcd83, &op_rol,	  3,   0, 255, 0xff, 0x01, 0x00, 0x04}, // rol.r d a  
	{0xcd84, &op_rol,	  4,   0, 255, 0xff, 0x01, 0x00, 0x04}, // rol.r e a  
	{0xcd85, &op_rol,	  5,   0, 255, 0xff, 0x01, 0x00, 0x04}, // rol.r f a  
	{0xcd86, &op_rol,	  6,   0, 255, 0xff, 0x01, 0x00, 0x04}, // rol.r g a  
	{0xcd87, &op_rol,	  7,   0, 255, 0xff, 0x01, 0x00, 0x04}, // rol.r h a  
	{0xcd88, &op_rol,	  0,   1, 255, 0xff, 0x01, 0x00, 0x04}, // rol.r a b  
	{0xcd89, &op_rol,	  1,   1, 255, 0xff, 0x01, 0x00, 0x04}, // rol.r b b  
	{0xcd8a, &op_rol,	  2,   1, 255, 0xff, 0x01, 0x00, 0x04}, // rol.r c b  
	{0xcd8b, &op_rol,	  3,   1, 255, 0xff, 0x01, 0x00, 0x04}, // rol.r d b  
	{0xcd8c, &op_rol,	  4,   1, 255, 0xff, 0x01, 0x00, 0x04}, // rol.r e b  
	{0xcd8d, &op_rol,	  5,   1, 255, 0xff, 0x01, 0x00, 0x04}, // rol.r f b  
	{0xcd8e, &op_rol,	  6,   1, 255, 0xff, 0x01, 0x00, 0x04}, // rol.r g b  
	{0xcd8f, &op_rol,	  7,   1, 255, 0xff, 0x01, 0x00, 0x04}, // rol.r h b  
	{0xcd90, &op_rol,	  0,   2, 255, 0xff, 0x01, 0x00, 0x04}, // rol.r a c  
	{0xcd91, &op_rol,	  1,   2, 255, 0xff, 0x01, 0x00, 0x04}, // rol.r b c  
	{0xcd92, &op_rol,	  2,   2, 255, 0xff, 0x01, 0x00, 0x04}, // rol.r c c  
	{0xcd93, &op_rol,	  3,   2, 255, 0xff, 0x01, 0x00, 0x04}, // rol.r d c  
	{0xcd94, &op_rol,	  4,   2, 255, 0xff, 0x01, 0x00, 0x04}, // rol.r e c  
	{0xcd95, &op_rol,	  5,   2, 255, 0xff, 0x01, 0x00, 0x04}, // rol.r f c  
	{0xcd96, &op_rol,	  6,   2, 255, 0xff, 0x01, 0x00, 0x04}, // rol.r g c  
	{0xcd97, &op_rol,	  7,   2, 255, 0xff, 0x01, 0x00, 0x04}, // rol.r h c  
	{0xcd98, &op_rol,	  0,   3, 255, 0xff, 0x01, 0x00, 0x04}, // rol.r a d  
	{0xcd99, &op_rol,	  1,   3, 255, 0xff, 0x01, 0x00, 0x04}, // rol.r b d  
	{0xcd9a, &op_rol,	  2,   3, 255, 0xff, 0x01, 0x00, 0x04}, // rol.r c d  
	{0xcd9b, &op_rol,	  3,   3, 255, 0xff, 0x01, 0x00, 0x04}, // rol.r d d  
	{0xcd9c, &op_rol,	  4,   3, 255, 0xff, 0x01, 0x00, 0x04}, // rol.r e d  
	{0xcd9d, &op_rol,	  5,   3, 255, 0xff, 0x01, 0x00, 0x04}, // rol.r f d  
	{0xcd9e, &op_rol,	  6,   3, 255, 0xff, 0x01, 0x00, 0x04}, // rol.r g d  
	{0xcd9f, &op_rol,	  7,   3, 255, 0xff, 0x01, 0x00, 0x04}, // rol.r h d  
	{0xcda0, &op_rol,	  0,   4, 255, 0xff, 0x01, 0x00, 0x04}, // rol.r a e  
	{0xcda1, &op_rol,	  1,   4, 255, 0xff, 0x01, 0x00, 0x04}, // rol.r b e  
	{0xcda2, &op_rol,	  2,   4, 255, 0xff, 0x01, 0x00, 0x04}, // rol.r c e  
	{0xcda3, &op_rol,	  3,   4, 255, 0xff, 0x01, 0x00, 0x04}, // rol.r d e  
	{0xcda4, &op_rol,	  4,   4, 255, 0xff, 0x01, 0x00, 0x04}, // rol.r e e  
	{0xcda5, &op_rol,	  5,   4, 255, 0xff, 0x01, 0x00, 0x04}, // rol.r f e  
	{0xcda6, &op_rol,	  6,   4, 255, 0xff, 0x01, 0x00, 0x04}, // rol.r g e  
	{0xcda7, &op_rol,	  7,   4, 255, 0xff, 0x01, 0x00, 0x04}, // rol.r h e  
	{0xcda8, &op_rol,	  0,   5, 255, 0xff, 0x01, 0x00, 0x04}, // rol.r a f  
	{0xcda9, &op_rol,	  1,   5, 255, 0xff, 0x01, 0x00, 0x04}, // rol.r b f  
	{0xcdaa, &op_rol,	  2,   5, 255, 0xff, 0x01, 0x00, 0x04}, // rol.r c f  
	{0xcdab, &op_rol,	  3,   5, 255, 0xff, 0x01, 0x00, 0x04}, // rol.r d f  
	{0xcdac, &op_rol,	  4,   5, 255, 0xff, 0x01, 0x00, 0x04}, // rol.r e f  
	{0xcdad, &op_rol,	  5,   5, 255, 0xff, 0x01, 0x00, 0x04}, // rol.r f f  
	{0xcdae, &op_rol,	  6,   5, 255, 0xff, 0x01, 0x00, 0x04}, // rol.r g f  
	{0xcdaf, &op_rol,	  7,   5, 255, 0xff, 0x01, 0x00, 0x04}, // rol.r h f  
	{0xcdb0, &op_rol,	  0,   6, 255, 0xff, 0x01, 0x00, 0x04}, // rol.r a g  
	{0xcdb1, &op_rol,	  1,   6, 255, 0xff, 0x01, 0x00, 0x04}, // rol.r b g  
	{0xcdb2, &op_rol,	  2,   6, 255, 0xff, 0x01, 0x00, 0x04}, // rol.r c g  
	{0xcdb3, &op_rol,	  3,   6, 255, 0xff, 0x01, 0x00, 0x04}, // rol.r d g  
	{0xcdb4, &op_rol,	  4,   6, 255, 0xff, 0x01, 0x00, 0x04}, // rol.r e g  
	{0xcdb5, &op_rol,	  5,   6, 255, 0xff, 0x01, 0x00, 0x04}, // rol.r f g  
	{0xcdb6, &op_rol,	  6,   6, 255, 0xff, 0x01, 0x00, 0x04}, // rol.r g g  
	{0xcdb7, &op_rol,	  7,   6, 255, 0xff, 0x01, 0x00, 0x04}, // rol.r h g  
	{0xcdb8, &op_rol,	  0,   7, 255, 0xff, 0x01, 0x00, 0x04}, // rol.r a h  
	{0xcdb9, &op_rol,	  1,   7, 255, 0xff, 0x01, 0x00, 0x04}, // rol.r b h  
	{0xcdba, &op_rol,	  2,   7, 255, 0xff, 0x01, 0x00, 0x04}, // rol.r c h  
	{0xcdbb, &op_rol,	  3,   7, 255, 0xff, 0x01, 0x00, 0x04}, // rol.r d h  
	{0xcdbc, &op_rol,	  4,   7, 255, 0xff, 0x01, 0x00, 0x04}, // rol.r e h  
	{0xcdbd, &op_rol,	  5,   7, 255, 0xff, 0x01, 0x00, 0x04}, // rol.r f h  
	{0xcdbe, &op_rol,	  6,   7, 255, 0xff, 0x01, 0x00, 0x04}, // rol.r g h  
	{0xcdbf, &op_rol,	  7,   7, 255, 0xff, 0x01, 0x00, 0x04}, // rol.r h h  
	{0xccc8, &op_rol,	  0,   8, 255, 0xff, 0x00, 0x01, 0x01}, // rol.wi a <literal>  
	{0xccc9, &op_rol,	  1,   8, 255, 0xff, 0x00, 0x01, 0x01}, // rol.wi b <literal>  
	{0xccca, &op_rol,	  2,   8, 255, 0xff, 0x00, 0x01, 0x01}, // rol.wi c <literal>  
	{0xcccb, &op_rol,	  3,   8, 255, 0xff, 0x00, 0x01, 0x01}, // rol.wi d <literal>  
	{0xcccc, &op_rol,	  4,   8, 255, 0xff, 0x00, 0x01, 0x01}, // rol.wi e <literal>  
	{0xcccd, &op_rol,	  5,   8, 255, 0xff, 0x00, 0x01, 0x01}, // rol.wi f <literal>  
	{0xccce, &op_rol,	  6,   8, 255, 0xff, 0x00, 0x01, 0x01}, // rol.wi g <literal>  
	{0xcccf, &op_rol,	  7,   8, 255, 0xff, 0x00, 0x01, 0x01}, // rol.wi h <literal>  
	{0xccd0, &op_rol,	  0,   8, 255, 0xff, 0x00, 0x02, 0x02}, // rol.di a <literal>  
	{0xccd1, &op_rol,	  1,   8, 255, 0xff, 0x00, 0x02, 0x02}, // rol.di b <literal>  
	{0xccd2, &op_rol,	  2,   8, 255, 0xff, 0x00, 0x02, 0x02}, // rol.di c <literal>  
	{0xccd3, &op_rol,	  3,   8, 255, 0xff, 0x00, 0x02, 0x02}, // rol.di d <literal>  
	{0xccd4, &op_rol,	  4,   8, 255, 0xff, 0x00, 0x02, 0x02}, // rol.di e <literal>  
	{0xccd5, &op_rol,	  5,   8, 255, 0xff, 0x00, 0x02, 0x02}, // rol.di f <literal>  
	{0xccd6, &op_rol,	  6,   8, 255, 0xff, 0x00, 0x02, 0x02}, // rol.di g <literal>  
	{0xccd7, &op_rol,	  7,   8, 255, 0xff, 0x00, 0x02, 0x02}, // rol.di h <literal>  
	{0xcce0, &op_rol,	  0,   8, 255, 0xff, 0x00, 0x04, 0x04}, // rol.i a <literal>  
	{0xcce1, &op_rol,	  1,   8, 255, 0xff, 0x00, 0x04, 0x04}, // rol.i b <literal>  
	{0xcce2, &op_rol,	  2,   8, 255, 0xff, 0x00, 0x04, 0x04}, // rol.i c <literal>  
	{0xcce3, &op_rol,	  3,   8, 255, 0xff, 0x00, 0x04, 0x04}, // rol.i d <literal>  
	{0xcce4, &op_rol,	  4,   8, 255, 0xff, 0x00, 0x04, 0x04}, // rol.i e <literal>  
	{0xcce5, &op_rol,	  5,   8, 255, 0xff, 0x00, 0x04, 0x04}, // rol.i f <literal>  
	{0xcce6, &op_rol,	  6,   8, 255, 0xff, 0x00, 0x04, 0x04}, // rol.i g <literal>  
	{0xcce7, &op_rol,	  7,   8, 255, 0xff, 0x00, 0x04, 0x04}, // rol.i h <literal>  
	{0xcdc8, &op_rol,	  0,   8, 255, 0xff, 0x01, 0x04, 0x01}, // rol.wri a <literal>  
	{0xcdc9, &op_rol,	  1,   8, 255, 0xff, 0x01, 0x04, 0x01}, // rol.wri b <literal>  
	{0xcdca, &op_rol,	  2,   8, 255, 0xff, 0x01, 0x04, 0x01}, // rol.wri c <literal>  
	{0xcdcb, &op_rol,	  3,   8, 255, 0xff, 0x01, 0x04, 0x01}, // rol.wri d <literal>  
	{0xcdcc, &op_rol,	  4,   8, 255, 0xff, 0x01, 0x04, 0x01}, // rol.wri e <literal>  
	{0xcdcd, &op_rol,	  5,   8, 255, 0xff, 0x01, 0x04, 0x01}, // rol.wri f <literal>  
	{0xcdce, &op_rol,	  6,   8, 255, 0xff, 0x01, 0x04, 0x01}, // rol.wri g <literal>  
	{0xcdcf, &op_rol,	  7,   8, 255, 0xff, 0x01, 0x04, 0x01}, // rol.wri h <literal>  
	{0xcdd0, &op_rol,	  0,   8, 255, 0xff, 0x01, 0x04, 0x02}, // rol.dri a <literal>  
	{0xcdd1, &op_rol,	  1,   8, 255, 0xff, 0x01, 0x04, 0x02}, // rol.dri b <literal>  
	{0xcdd2, &op_rol,	  2,   8, 255, 0xff, 0x01, 0x04, 0x02}, // rol.dri c <literal>  
	{0xcdd3, &op_rol,	  3,   8, 255, 0xff, 0x01, 0x04, 0x02}, // rol.dri d <literal>  
	{0xcdd4, &op_rol,	  4,   8, 255, 0xff, 0x01, 0x04, 0x02}, // rol.dri e <literal>  
	{0xcdd5, &op_rol,	  5,   8, 255, 0xff, 0x01, 0x04, 0x02}, // rol.dri f <literal>  
	{0xcdd6, &op_rol,	  6,   8, 255, 0xff, 0x01, 0x04, 0x02}, // rol.dri g <literal>  
	{0xcdd7, &op_rol,	  7,   8, 255, 0xff, 0x01, 0x04, 0x02}, // rol.dri h <literal>  
	{0xcde0, &op_rol,	  0,   8, 255, 0xff, 0x01, 0x04, 0x04}, // rol.ri a <literal>  
	{0xcde1, &op_rol,	  1,   8, 255, 0xff, 0x01, 0x04, 0x04}, // rol.ri b <literal>  
	{0xcde2, &op_rol,	  2,   8, 255, 0xff, 0x01, 0x04, 0x04}, // rol.ri c <literal>  
	{0xcde3, &op_rol,	  3,   8, 255, 0xff, 0x01, 0x04, 0x04}, // rol.ri d <literal>  
	{0xcde4, &op_rol,	  4,   8, 255, 0xff, 0x01, 0x04, 0x04}, // rol.ri e <literal>  
	{0xcde5, &op_rol,	  5,   8, 255, 0xff, 0x01, 0x04, 0x04}, // rol.ri f <literal>  
	{0xcde6, &op_rol,	  6,   8, 255, 0xff, 0x01, 0x04, 0x04}, // rol.ri g <literal>  
	{0xcde7, &op_rol,	  7,   8, 255, 0xff, 0x01, 0x04, 0x04}, // rol.ri h <literal>  
	{0xce00, &op_popcount,	  0,   0, 255, 0xff, 0x00, 0x00, 0x01}, // popcount.w a a  
	{0xce01, &op_popcount,	  1,   0, 255, 0xff, 0x00, 0x00, 0x01}, // popcount.w b a  
	{0xce02, &op_popcount,	  2,   0, 255, 0xff, 0x00, 0x00, 0x01}, // popcount.w c a  
	{0xce03, &op_popcount,	  3,   0, 255, 0xff, 0x00, 0x00, 0x01}, // popcount.w d a  
	{0xce04, &op_popcount,	  4,   0, 255, 0xff, 0x00, 0x00, 0x01}, // popcount.w e a  
	{0xce05, &op_popcount,	  5,   0, 255, 0xff, 0x00, 0x00, 0x01}, // popcount.w f a  
	{0xce06, &op_popcount,	  6,   0, 255, 0xff, 0x00, 0x00, 0x01}, // popcount.w g a  
	{0xce07, &op_popcount,	  7,   0, 255, 0xff, 0x00, 0x00, 0x01}, // popcount.w h a  
	{0xce08, &op_popcount,	  0,   1, 255, 0xff, 0x00, 0x00, 0x01}, // popcount.w a b  
	{0xce09, &op_popcount,	  1,   1, 255, 0xff, 0x00, 0x00, 0x01}, // popcount.w b b  
	{0xce0a, &op_popcount,	  2,   1, 255, 0xff, 0x00, 0x00, 0x01}, // popcount.w c b  
	{0xce0b, &op_popcount,	  3,   1, 255, 0xff, 0x00, 0x00, 0x01}, // popcount.w d b  
	{0xce0c, &op_popcount,	  4,   1, 255, 0xff, 0x00, 0x00, 0x01}, // popcount.w e b  
	{0xce0d, &op_popcount,	  5,   1, 255, 0xff, 0x00, 0x00, 0x01}, // popcount.w f b  
	{0xce0e, &op_popcount,	  6,   1, 255, 0xff, 0x00, 0x00, 0x01}, // popcount.w g b  
	{0xce0f, &op_popcount,	  7,   1, 255, 0xff, 0x00, 0x00, 0x01}, // popcount.w h b  
	{0xce10, &op_popcount,	  0,   2, 255, 0xff, 0x00, 0x00, 0x01}, // popcount.w a c  
	{0xce11, &op_popcount,	  1,   2, 255, 0xff, 0x00, 0x00, 0x01}, // popcount.w b c  
	{0xce12, &op_popcount,	  2,   2, 255, 0xff, 0x00, 0x00, 0x01}, // popcount.w c c  
	{0xce13, &op_popcount,	  3,   2, 255, 0xff, 0x00, 0x00, 0x01}, // popcount.w d c  
	{0xce14, &op_popcount,	  4,   2, 255, 0xff, 0x00, 0x00, 0x01}, // popcount.w e c  
	{0xce15, &op_popcount,	  5,   2, 255, 0xff, 0x00, 0x00, 0x01}, // popcount.w f c  
	{0xce16, &op_popcount,	  6,   2, 255, 0xff, 0x00, 0x00, 0x01}, // popcount.w g c  
	{0xce17, &op_popcount,	  7,   2, 255, 0xff, 0x00, 0x00, 0x01}, // popcount.w h c  
	{0xce18, &op_popcount,	  0,   3, 255, 0xff, 0x00, 0x00, 0x01}, // popcount.w a d  
	{0xce19, &op_popcount,	  1,   3, 255, 0xff, 0x00, 0x00, 0x01}, // popcount.w b d  
	{0xce1a, &op_popcount,	  2,   3, 255, 0xff, 0x00, 0x00, 0x01}, // popcount.w c d  
	{0xce1b, &op_popcount,	  3,   3, 255, 0xff, 0x00, 0x00, 0x01}, // popcount.w d d  
	{0xce1c, &op_popcount,	  4,   3, 255, 0xff, 0x00, 0x00, 0x01}, // popcount.w e d  
	{0xce1d, &op_popcount,	  5,   3, 255, 0xff, 0x00, 0x00, 0x01}, // popcount.w f d  
	{0xce1e, &op_popcount,	  6,   3, 255, 0xff, 0x00, 0x00, 0x01}, // popcount.w g d  
	{0xce1f, &op_popcount,	  7,   3, 255, 0xff, 0x00, 0x00, 0x01}, // popcount.w h d  
	{0xce20, &op_popcount,	  0,   4, 255, 0xff, 0x00, 0x00, 0x01}, // popcount.w a e  
	{0xce21, &op_popcount,	  1,   4, 255, 0xff, 0x00, 0x00, 0x01}, // popcount.w b e  
	{0xce22, &op_popcount,	  2,   4, 255, 0xff, 0x00, 0x00, 0x01}, // popcount.w c e  
	{0xce23, &op_popcount,	  3,   4, 255, 0xff, 0x00, 0x00, 0x01}, // popcount.w d e  
	{0xce24, &op_popcount,	  4,   4, 255, 0xff, 0x00, 0x00, 0x01}, // popcount.w e e  
	{0xce25, &op_popcount,	  5,   4, 255, 0xff, 0x00, 0x00, 0x01}, // popcount.w f e  
	{0xce26, &op_popcount,	  6,   4, 255, 0xff, 0x00, 0x00, 0x01}, // popcount.w g e  
	{0xce27, &op_popcount,	  7,   4, 255, 0xff, 0x00, 0x00, 0x01}, // popcount.w h e  
	{0xce28, &op_popcount,	  0,   5, 255, 0xff, 0x00, 0x00, 0x01}, // popcount.w a f  
	{0xce29, &op_popcount,	  1,   5, 255, 0xff, 0x00, 0x00, 0x01}, // popcount.w b f  
	{0xce2a, &op_popcount,	  2,   5, 255, 0xff, 0x00, 0x00, 0x01}, // popcount.w c f  
	{0xce2b, &op_popcount,	  3,   5, 255, 0xff, 0x00, 0x00, 0x01}, // popcount.w d f  
	{0xce2c, &op_popcount,	  4,   5, 255, 0xff, 0x00, 0x00, 0x01}, // popcount.w e f  
	{0xce2d, &op_popcount,	  5,   5, 255, 0xff, 0x00, 0x00, 0x01}, // popcount.w f f  
	{0xce2e, &op_popcount,	  6,   5, 255, 0xff, 0x00, 0x00, 0x01}, // popcount.w g f  
	{0xce2f, &op_popcount,	  7,   5, 255, 0xff, 0x00, 0x00, 0x01}, // popcount.w h f  
	{0xce30, &op_popcount,	  0,   6, 255, 0xff, 0x00, 0x00, 0x01}, // popcount.w a g  
	{0xce31, &op_popcount,	  1,   6, 255, 0xff, 0x00, 0x00, 0x01}, // popcount.w b g  
	{0xce32, &op_popcount,	  2,   6, 255, 0xff, 0x00, 0x00, 0x01}, // popcount.w c g  
	{0xce33, &op_popcount,	  3,   6, 255, 0xff, 0x00, 0x00, 0x01}, // popcount.w d g  
	{0xce34, &op_popcount,	  4,   6, 255, 0xff, 0x00, 0x00, 0x01}, // popcount.w e g  
	{0xce35, &op_popcount,	  5,   6, 255, 0xff, 0x00, 0x00, 0x01}, // popcount.w f g  
	{0xce36, &op_popcount,	  6,   6, 255, 0xff, 0x00, 0x00, 0x01}, // popcount.w g g  
	{0xce37, &op_popcount,	  7,   6, 255, 0xff, 0x00, 0x00, 0x01}, // popcount.w h g  
	{0xce38, &op_popcount,	  0,   7, 255, 0xff, 0x00, 0x00, 0x01}, // popcount.w a h  
	{0xce39, &op_popcount,	  1,   7, 255, 0xff, 0x00, 0x00, 0x01}, // popcount.w b h  
	{0xce3a, &op_popcount,	  2,   7, 255, 0xff, 0x00, 0x00, 0x01}, // popcount.w c h  
	{0xce3b, &op_popcount,	  3,   7, 255, 0xff, 0x00, 0x00, 0x01}, // popcount.w d h  
	{0xce3c, &op_popcount,	  4,   7, 255, 0xff, 0x00, 0x00, 0x01}, // popcount.w e h  
	{0xce3d, &op_popcount,	  5,   7, 255, 0xff, 0x00, 0x00, 0x01}, // popcount.w f h  
	{0xce3e, &op_popcount,	  6,   7, 255, 0xff, 0x00, 0x00, 0x01}, // popcount.w g h  
	{0xce3f, &op_popcount,	  7,   7, 255, 0xff, 0x00, 0x00, 0x01}, // popcount.w h h  
	{0xce40, &op_popcount,	  0,   0, 255, 0xff, 0x00, 0x00, 0x02}, // popcount.d a a  
	{0xce41, &op_popcount,	  1,   0, 255, 0xff, 0x00, 0x00, 0x02}, // popcount.d b a  
	{0xce42, &op_popcount,	  2,   0, 255, 0xff, 0x00, 0x00, 0x02}, // popcount.d c a  
	{0xce43, &op_popcount,	  3,   0, 255, 0xff, 0x00, 0x00, 0x02}, // popcount.d d a  
	{0xce44, &op_popcount,	  4,   0, 255, 0xff, 0x00, 0x00, 0x02}, // popcount.d e a  
	{0xce45, &op_popcount,	  5,   0, 255, 0xff, 0x00, 0x00, 0x02}, // popcount.d f a  
	{0xce46, &op_popcount,	  6,   0, 255, 0xff, 0x00, 0x00, 0x02}, // popcount.d g a  
	{0xce47, &op_popcount,	  7,   0, 255, 0xff, 0x00, 0x00, 0x02}, // popcount.d h a  
	{0xce48, &op_popcount,	  0,   1, 255, 0xff, 0x00, 0x00, 0x02}, // popcount.d a b  
	{0xce49, &op_popcount,	  1,   1, 255, 0xff, 0x00, 0x00, 0x02}, // popcount.d b b  
	{0xce4a, &op_popcount,	  2,   1, 255, 0xff, 0x00, 0x00, 0x02}, // popcount.d c b  
	{0xce4b, &op_popcount,	  3,   1, 255, 0xff, 0x00, 0x00, 0x02}, // popcount.d d b  
	{0xce4c, &op_popcount,	  4,   1, 255, 0xff, 0x00, 0x00, 0x02}, // popcount.d e b  
	{0xce4d, &op_popcount,	  5,   1, 255, 0xff, 0x00, 0x00, 0x02}, // popcount.d f b  
	{0xce4e, &op_popcount,	  6,   1, 255, 0xff, 0x00, 0x00, 0x02}, // popcount.d g b  
	{0xce4f, &op_popcount,	  7,   1, 255, 0xff, 0x00, 0x00, 0x02}, // popcount.d h b  
	{0xce50, &op_popcount,	  0,   2, 255, 0xff, 0x00, 0x00, 0x02}, // popcount.d a c  
	{0xce51, &op_popcount,	  1,   2, 255, 0xff, 0x00, 0x00, 0x02}, // popcount.d b c  
	{0xce52, &op_popcount,	  2,   2, 255, 0xff, 0x00, 0x00, 0x02}, // popcount.d c c  
	{0xce53, &op_popcount,	  3,   2, 255, 0xff, 0x00, 0x00, 0x02}, // popcount.d d c  
	{0xce54, &op_popcount,	  4,   2, 255, 0xff, 0x00, 0x00, 0x02}, // popcount.d e c  
	{0xce55, &op_popcount,	  5,   2, 255, 0xff, 0x00, 0x00, 0x02}, // popcount.d f c  
	{0xce56, &op_popcount,	  6,   2, 255, 0xff, 0x00, 0x00, 0x02}, // popcount.d g c  
	{0xce57, &op_popcount,	  7,   2, 255, 0xff, 0x00, 0x00, 0x02}, // popcount.d h c  
	{0xce58, &op_popcount,	  0,   3, 255, 0xff, 0x00, 0x00, 0x02}, // popcount.d a d  
	{0xce59, &op_popcount,	  1,   3, 255, 0xff, 0x00, 0x00, 0x02}, // popcount.d b d  
	{0xce5a, &op_popcount,	  2,   3, 255, 0xff, 0x00, 0x00, 0x02}, // popcount.d c d  
	{0xce5b, &op_popcount,	  3,   3, 255, 0xff, 0x00, 0x00, 0x02}, // popcount.d d d  
	{0xce5c, &op_popcount,	  4,   3, 255, 0xff, 0x00, 0x00, 0x02}, // popcount.d e d  
	{0xce5d, &op_popcount,	  5,   3, 255, 0xff, 0x00, 0x00, 0x02}, // popcount.d f d  
	{0xce5e, &op_popcount,	  6,   3, 255, 0xff, 0x00, 0x00, 0x02}, // popcount.d g d  
	{0xce5f, &op_popcount,	  7,   3, 255, 0xff, 0x00, 0x00, 0x02}, // popcount.d h d  
	{0xce60, &op_popcount,	  0,   4, 255, 0xff, 0x00, 0x00, 0x02}, // popcount.d a e  
	{0xce61, &op_popcount,	  1,   4, 255, 0xff, 0x00, 0x00, 0x02}, // popcount.d b e  
	{0xce62, &op_popcount,	  2,   4, 255, 0xff, 0x00, 0x00, 0x02}, // popcount.d c e  
	{0xce63, &op_popcount,	  3,   4, 255, 0xff, 0x00, 0x00, 0x02}, // popcount.d d e  
	{0xce64, &op_popcount,	  4,   4, 255, 0xff, 0x00, 0x00, 0x02}, // popcount.d e e  
	{0xce65, &op_popcount,	  5,   4, 255, 0xff, 0x00, 0x00, 0x02}, // popcount.d f e  
	{0xce66, &op_popcount,	  6,   4, 255, 0xff, 0x00, 0x00, 0x02}, // popcount.d g e  
	{0xce67, &op_popcount,	  7,   4, 255, 0xff, 0x00, 0x00, 0x02}, // popcount.d h e  
	{0xce68, &op_popcount,	  0,   5, 255, 0xff, 0x00, 0x00, 0x02}, // popcount.d a f  
	{0xce69, &op_popcount,	  1,   5, 255, 0xff, 0x00, 0x00, 0x02}, // popcount.d b f  
	{0xce6a, &op_popcount,	  2,   5, 255, 0xff, 0x00, 0x00, 0x02}, // popcount.d c f  
	{0xce6b, &op_popcount,	  3,   5, 255, 0xff, 0x00, 0x00, 0x02}, // popcount.d d f  
	{0xce6c, &op_popcount,	  4,   5, 255, 0xff, 0x00, 0x00, 0x02}, // popcount.d e f  
	{0xce6d, &op_popcount,	  5,   5, 255, 0xff, 0x00, 0x00, 0x02}, // popcount.d f f  
	{0xce6e, &op_popcount,	  6,   5, 255, 0xff, 0x00, 0x00, 0x02}, // popcount.d g f  
	{0xce6f, &op_popcount,	  7,   5, 255, 0xff, 0x00, 0x00, 0x02}, // popcount.d h f  
	{0xce70, &op_popcount,	  0,   6, 255, 0xff, 0x00, 0x00, 0x02}, // popcount.d a g  
	{0xce71, &op_popcount,	  1,   6, 255, 0xff, 0x00, 0x00, 0x02}, // popcount.d b g  
	{0xce72, &op_popcount,	  2,   6, 255, 0xff, 0x00, 0x00, 0x02}, // popcount.d c g  
	{0xce73, &op_popcount,	  3,   6, 255, 0xff, 0x00, 0x00, 0x02}, // popcount.d d g  
	{0xce74, &op_popcount,	  4,   6, 255, 0xff, 0x00, 0x00, 0x02}, // popcount.d e g  
	{0xce75, &op_popcount,	  5,   6, 255, 0xff, 0x00, 0x00, 0x02}, // popcount.d f g  
	{0xce76, &op_popcount,	  6,   6, 255, 0xff, 0x00, 0x00, 0x02}, // popcount.d g g  
	{0xce77, &op_popcount,	  7,   6, 255, 0xff, 0x00, 0x00, 0x02}, // popcount.d h g  
	{0xce78, &op_popcount,	  0,   7, 255, 0xff, 0x00, 0x00, 0x02}, // popcount.d a h  
	{0xce79, &op_popcount,	  1,   7, 255, 0xff, 0x00, 0x00, 0x02}, // popcount.d b h  
	{0xce7a, &op_popcount,	  2,   7, 255, 0xff, 0x00, 0x00, 0x02}, // popcount.d c h  
	{0xce7b, &op_popcount,	  3,   7, 255, 0xff, 0x00, 0x00, 0x02}, // popcount.d d h  
	{0xce7c, &op_popcount,	  4,   7, 255, 0xff, 0x00, 0x00, 0x02}, // popcount.d e h  
	{0xce7d, &op_popcount,	  5,   7, 255, 0xff, 0x00, 0x00, 0x02}, // popcount.d f h  
	{0xce7e, &op_popcount,	  6,   7, 255, 0xff, 0x00, 0x00, 0x02}, // popcount.d g h  
	{0xce7f, &op_popcount,	  7,   7, 255, 0xff, 0x00, 0x00, 0x02}, // popcount.d h h  
	{0xce80, &op_popcount,	  0,   0, 255, 0xff, 0x00, 0x00, 0x04}, // popcount a a  
	{0xce81, &op_popcount,	  1,   0, 255, 0xff, 0x00, 0x00, 0x04}, // popcount b a  
	{0xce82, &op_popcount,	  2,   0, 255, 0xff, 0x00, 0x00, 0x04}, // popcount c a  
	{0xce83, &op_popcount,	  3,   0, 255, 0xff, 0x00, 0x00, 0x04}, // popcount d a  
	{0xce84, &op_popcount,	  4,   0, 255, 0xff, 0x00, 0x00, 0x04}, // popcount e a  
	{0xce85, &op_popcount,	  5,   0, 255, 0xff, 0x00, 0x00, 0x04}, // popcount f a  
	{0xce86, &op_popcount,	  6,   0, 255, 0xff, 0x00, 0x00, 0x04}, // popcount g a  
	{0xce87, &op_popcount,	  7,   0, 255, 0xff, 0x00, 0x00, 0x04}, // popcount h a  
	{0xce88, &op_popcount,	  0,   1, 255, 0xff, 0x00, 0x00, 0x04}, // popcount a b  
	{0xce89, &op_popcount,	  1,   1, 255, 0xff, 0x00, 0x00, 0x04}, // popcount b b  
	{0xce8a, &op_popcount,	  2,   1, 255, 0xff, 0x00, 0x00, 0x04}, // popcount c b  
	{0xce8b, &op_popcount,	  3,   1, 255, 0xff, 0x00, 0x00, 0x04}, // popcount d b  
	{0xce8c, &op_popcount,	  4,   1, 255, 0xff, 0x00, 0x00, 0x04}, // popcount e b  
	{0xce8d, &op_popcount,	  5,   1, 255, 0xff, 0x00, 0x00, 0x04}, // popcount f b  
	{0xce8e, &op_popcount,	  6,   1, 255, 0xff, 0x00, 0x00, 0x04}, // popcount g b  
	{0xce8f, &op_popcount,	  7,   1, 255, 0xff, 0x00, 0x00, 0x04}, // popcount h b  
	{0xce90, &op_popcount,	  0,   2, 255, 0xff, 0x00, 0x00, 0x04}, // popcount a c  
	{0xce91, &op_popcount,	  1,   2, 255, 0xff, 0x00, 0x00, 0x04}, // popcount b c  
	{0xce92, &op_popcount,	  2,   2, 255, 0xff, 0x00, 0x00, 0x04}, // popcount c c  
	{0xce93, &op_popcount,	  3,   2, 255, 0xff, 0x00, 0x00, 0x04}, // popcount d c  
	{0xce94, &op_popcount,	  4,   2, 255, 0xff, 0x00, 0x00, 0x04}, // popcount e c  
	{0xce95, &op_popcount,	  5,   2, 255, 0xff, 0x00, 0x00, 0x04}, // popcount f c  
	{0xce96, &op_popcount,	  6,   2, 255, 0xff, 0x00, 0x00, 0x04}, // popcount g c  
	{0xce97, &op_popcount,	  7,   2, 255, 0xff, 0x00, 0x00, 0x04}, // popcount h c  
	{0xce98, &op_popcount,	  0,   3, 255, 0xff, 0x00, 0x00, 0x04}, // popcount a d  
	{0xce99, &op_popcount,	  1,   3, 255, 0xff, 0x00, 0x00, 0x04}, // popcount b d  
	{0xce9a, &op_popcount,	  2,   3, 255, 0xff, 0x00, 0x00, 0x04}, // popcount c d  
	{0xce9b, &op_popcount,	  3,   3, 255, 0xff, 0x00, 0x00, 0x04}, // popcount d d  
	{0xce9c, &op_popcount,	  4,   3, 255, 0xff, 0x00, 0x00, 0x04}, // popcount e d  
	{0xce9d, &op_popcount,	  5,   3, 255, 0xff, 0x00, 0x00, 0x04}, // popcount f d  
	{0xce9e, &op_popcount,	  6,   3, 255, 0xff, 0x00, 0x00, 0x04}, // popcount g d  
	{0xce9f, &op_popcount,	  7,   3, 255, 0xff, 0x00, 0x00, 0x04}, // popcount h d  
	{0xcea0, &op_popcount,	  0,   4, 255, 0xff, 0x00, 0x00, 0x04}, // popcount a e  
	{0xcea1, &op_popcount,	  1,   4, 255, 0xff, 0x00, 0x00, 0x04}, // popcount b e  
	{0xcea2, &op_popcount,	  2,   4, 255, 0xff, 0x00, 0x00, 0x04}, // popcount c e  
	{0xcea3, &op_popcount,	  3,   4, 255, 0xff, 0x00, 0x00, 0x04}, // popcount d e  
	{0xcea4, &op_popcount,	  4,   4, 255, 0xff, 0x00, 0x00, 0x04}, // popcount e e  
	{0xcea5, &op_popcount,	  5,   4, 255, 0xff, 0x00, 0x00, 0x04}, // popcount f e  
	{0xcea6, &op_popcount,	  6,   4, 255, 0xff, 0x00, 0x00, 0x04}, // popcount g e  
	{0xcea7, &op_popcount,	  7,   4, 255, 0xff, 0x00, 0x00, 0x04}, // popcount h e  
	{0xcea8, &op_popcount,	  0,   5, 255, 0xff, 0x00, 0x00, 0x04}, // popcount a f  
	{0xcea9, &op_popcount,	  1,   5, 255, 0xff, 0x00, 0x00, 0x04}, // popcount b f  
	{0xceaa, &op_popcount,	  2,   5, 255, 0xff, 0x00, 0x00, 0x04}, // popcount c f  
	{0xceab, &op_popcount,	  3,   5, 255, 0xff, 0x00, 0x00, 0x04}, // popcount d f  
	{0xceac, &op_popcount,	  4,   5, 255, 0xff, 0x00, 0x00, 0x04}, // popcount e f  
	{0xcead, &op_popcount,	  5,   5, 255, 0xff, 0x00, 0x00, 0x04}, // popcount f f  
	{0xceae, &op_popcount,	  6,   5, 255, 0xff, 0x00, 0x00, 0x04}, // popcount g f  
	{0xceaf, &op_popcount,	  7,   5, 255, 0xff, 0x00, 0x00, 0x04}, // popcount h f  
	{0xceb0, &op_popcount,	  0,   6, 255, 0xff, 0x00, 0x00, 0x04}, // popcount a g  
	{0xceb1, &op_popcount,	  1,   6, 255, 0xff, 0x00, 0x00, 0x04}, // popcount b g  
	{0xceb2, &op_popcount,	  2,   6, 255, 0xff, 0x00, 0x00, 0x04}, // popcount c g  
	{0xceb3, &op_popcount,	  3,   6, 255, 0xff, 0x00, 0x00, 0x04}, // popcount d g  
	{0xceb4, &op_popcount,	  4,   6, 255, 0xff, 0x00, 0x00, 0x04}, // popcount e g  
	{0xceb5, &op_popcount,	  5,   6, 255, 0xff, 0x00, 0x00, 0x04}, // popcount f g  
	{0xceb6, &op_popcount,	  6,   6, 255, 0xff, 0x00, 0x00, 0x04}, // popcount g g  
	{0xceb7, &op_popcount,	  7,   6, 255, 0xff, 0x00, 0x00, 0x04}, // popcount h g  
	{0xceb8, &op_popcount,	  0,   7, 255, 0xff, 0x00, 0x00, 0x04}, // popcount a h  
	{0xceb9, &op_popcount,	  1,   7, 255, 0xff, 0x00, 0x00, 0x04}, // popcount b h  
	{0xceba, &op_popcount,	  2,   7, 255, 0xff, 0x00, 0x00, 0x04}, // popcount c h  
	{0xcebb, &op_popcount,	  3,   7, 255, 0xff, 0x00, 0x00, 0x04}, // popcount d h  
	{0xcebc, &op_popcount,	  4,   7, 255, 0xff, 0x00, 0x00, 0x04}, // popcount e h  
	{0xcebd, &op_popcount,	  5,   7, 255, 0xff, 0x00, 0x00, 0x04}, // popcount f h  
	{0xcebe, &op_popcount,	  6,   7, 255, 0xff, 0x00, 0x00, 0x04}, // popcount g h  
	{0xcebf, &op_popcount,	  7,   7, 255, 0xff, 0x00, 0x00, 0x04}, // popcount h h  
	{0xcf00, &op_popcount,	  0,   0, 255, 0xff, 0x01, 0x00, 0x01}, // popcount.wr a a  
	{0xcf01, &op_popcount,	  1,   0, 255, 0xff, 0x01, 0x00, 0x01}, // popcount.wr b a  
	{0xcf02, &op_popcount,	  2,   0, 255, 0xff, 0x01, 0x00, 0x01}, // popcount.wr c a  
	{0xcf03, &op_popcount,	  3,   0, 255, 0xff, 0x01, 0x00, 0x01}, // popcount.wr d a  
	{0xcf04, &op_popcount,	  4,   0, 255, 0xff, 0x01, 0x00, 0x01}, // popcount.wr e a  
	{0xcf05, &op_popcount,	  5,   0, 255, 0xff, 0x01, 0x00, 0x01}, // popcount.wr f a  
	{0xcf06, &op_popcount,	  6,   0, 255, 0xff, 0x01, 0x00, 0x01}, // popcount.wr g a  
	{0xcf07, &op_popcount,	  7,   0, 255, 0xff, 0x01, 0x00, 0x01}, // popcount.wr h a  
	{0xcf08, &op_popcount,	  0,   1, 255, 0xff, 0x01, 0x00, 0x01}, // popcount.wr a b  
	{0xcf09, &op_popcount,	  1,   1, 255, 0xff, 0x01, 0x00, 0x01}, // popcount.wr b b  
	{0xcf0a, &op_popcount,	  2,   1, 255, 0xff, 0x01, 0x00, 0x01}, // popcount.wr c b  
	{0xcf0b, &op_popcount,	  3,   1, 255, 0xff, 0x01, 0x00, 0x01}, // popcount.wr d b  
	{0xcf0c, &op_popcount,	  4,   1, 255, 0xff, 0x01, 0x00, 0x01}, // popcount.wr e b  
	{0xcf0d, &op_popcount,	  5,   1, 255, 0xff, 0x01, 0x00, 0x01}, // popcount.wr f b  
	{0xcf0e, &op_popcount,	  6,   1, 255, 0xff, 0x01, 0x00, 0x01}, // popcount.wr g b  
	{0xcf0f, &op_popcount,	  7,   1, 255, 0xff, 0x01, 0x00, 0x01}, // popcount.wr h b  
	{0xcf10, &op_popcount,	  0,   2, 255, 0xff, 0x01, 0x00, 0x01}, // popcount.wr a c  
	{0xcf11, &op_popcount,	  1,   2, 255, 0xff, 0x01, 0x00, 0x01}, // popcount.wr b c  
	{0xcf12, &op_popcount,	  2,   2, 255, 0xff, 0x01, 0x00, 0x01}, // popcount.wr c c  
	{0xcf13, &op_popcount,	  3,   2, 255, 0xff, 0x01, 0x00, 0x01}, // popcount.wr d c  
	{0xcf14, &op_popcount,	  4,   2, 255, 0xff, 0x01, 0x00, 0x01}, // popcount.wr e c  
	{0xcf15, &op_popcount,	  5,   2, 255, 0xff, 0x01, 0x00, 0x01}, // popcount.wr f c  
	{0xcf16, &op_popcount,	  6,   2, 255, 0xff, 0x01, 0x00, 0x01}, // popcount.wr g c  
	{0xcf17, &op_popcount,	  7,   2, 255, 0xff, 0x01, 0x00, 0x01}, // popcount.wr h c  
	{0xcf18, &op_popcount,	  0,   3, 255, 0xff, 0x01, 0x00, 0x01}, // popcount.wr a d  
	{0xcf19, &op_popcount,	  1,   3, 255, 0xff, 0x01, 0x00, 0x01}, // popcount.wr b d  
	{0xcf1a, &op_popcount,	  2,   3, 255, 0xff, 0x01, 0x00, 0x01}, // popcount.wr c d  
	{0xcf1b, &op_popcount,	  3,   3, 255, 0xff, 0x01, 0x00, 0x01}, // popcount.wr d d  
	{0xcf1c, &op_popcount,	  4,   3, 255, 0xff, 0x01, 0x00, 0x01}, // popcount.wr e d  
	{0xcf1d, &op_popcount,	  5,   3, 255, 0xff, 0x01, 0x00, 0x01}, // popcount.wr f d  
	{0xcf1e, &op_popcount,	  6,   3, 255, 0xff, 0x01, 0x00, 0x01}, // popcount.wr g d  
	{0xcf1f, &op_popcount,	  7,   3, 255, 0xff, 0x01, 0x00, 0x01}, // popcount.wr h d  
	{0xcf20, &op_popcount,	  0,   4, 255, 0xff, 0x01, 0x00, 0x01}, // popcount.wr a e  
	{0xcf21, &op_popcount,	  1,   4, 255, 0xff, 0x01, 0x00, 0x01}, // popcount.wr b e  
	{0xcf22, &op_popcount,	  2,   4, 255, 0xff, 0x01, 0x00, 0x01}, // popcount.wr c e  
	{0xcf23, &op_popcount,	  3,   4, 255, 0xff, 0x01, 0x00, 0x01}, // popcount.wr d e  
	{0xcf24, &op_popcount,	  4,   4, 255, 0xff, 0x01, 0x00, 0x01}, // popcount.wr e e  
	{0xcf25, &op_popcount,	  5,   4, 255, 0xff, 0x01, 0x00, 0x01}, // popcount.wr f e  
	{0xcf26, &op_popcount,	  6,   4, 255, 0xff, 0x01, 0x00, 0x01}, // popcount.wr g e  
	{0xcf27, &op_popcount,	  7,   4, 255, 0xff, 0x01, 0x00, 0x01}, // popcount.wr h e  
	{0xcf28, &op_popcount,	  0,   5, 255, 0xff, 0x01, 0x00, 0x01}, // popcount.wr a f  
	{0xcf29, &op_popcount,	  1,   5, 255, 0xff, 0x01, 0x00, 0x01}, // popcount.wr b f  
	{0xcf2a, &op_popcount,	  2,   5, 255, 0xff, 0x01, 0x00, 0x01}, // popcount.wr c f  
	{0xcf2b, &op_popcount,	  3,   5, 255, 0xff, 0x01, 0x00, 0x01}, // popcount.wr d f  
	{0xcf2c, &op_popcount,	  4,   5, 255, 0xff, 0x01, 0x00, 0x01}, // popcount.wr e f  
	{0xcf2d, &op_popcount,	  5,   5, 255, 0xff, 0x01, 0x00, 0x01}, // popcount.wr f f  
	{0xcf2e, &op_popcount,	  6,   5, 255, 0xff, 0x01, 0x00, 0x01}, // popcount.wr g f  
	{0xcf2f, &op_popcount,	  7,   5, 255, 0xff, 0x01, 0x00, 0x01}, // popcount.wr h f  
	{0xcf30, &op_popcount,	  0,   6, 255, 0xff, 0x01, 0x00, 0x01}, // popcount.wr a g  
	{0xcf31, &op_popcount,	  1,   6, 255, 0xff, 0x01, 0x00, 0x01}, // popcount.wr b g  
	{0xcf32, &op_popcount,	  2,   6, 255, 0xff, 0x01, 0x00, 0x01}, // popcount.wr c g  
	{0xcf33, &op_popcount,	  3,   6, 255, 0xff, 0x01, 0x00, 0x01}, // popcount.wr d g  
	{0xcf34, &op_popcount,	  4,   6, 255, 0xff, 0x01, 0x00, 0x01}, // popcount.wr e g  
	{0xcf35, &op_popcount,	  5,   6, 255, 0xff, 0x01, 0x00, 0x01}, // popcount.wr f g  
	{0xcf36, &op_popcount,	  6,   6, 255, 0xff, 0x01, 0x00, 0x01}, // popcount.wr g g  
	{0xcf37, &op_popcount,	  7,   6, 255, 0xff, 0x01, 0x00, 0x01}, // popcount.wr h g  
	{0xcf38, &op_popcount,	  0,   7, 255, 0xff, 0x01, 0x00, 0x01}, // popcount.wr a h  
	{0xcf39, &op_popcount,	  1,   7, 255, 0xff, 0x01, 0x00, 0x01}, // popcount.wr b h  
	{0xcf3a, &op_popcount,	  2,   7, 255, 0xff, 0x01, 0x00, 0x01}, // popcount.wr c h  
	{0xcf3b, &op_popcount,	  3,   7, 255, 0xff, 0x01, 0x00, 0x01}, // popcount.wr d h  
	{0xcf3c, &op_popcount,	  4,   7, 255, 0xff, 0x01, 0x00, 0x01}, // popcount.wr e h  
	{0xcf3d, &op_popcount,	  5,   7, 255, 0xff, 0x01, 0x00, 0x01}, // popcount.wr f h  
	{0xcf3e, &op_popcount,	  6,   7, 255, 0xff, 0x01, 0x00, 0x01}, // popcount.wr g h  
	{0xcf3f, &op_popcount,	  7,   7, 255, 0xff, 0x01, 0x00, 0x01}, // popcount.wr h h  
	{0xcf40, &op_popcount,	  0,   0, 255, 0xff, 0x01, 0x00, 0x02}, // popcount.dr a a  
	{0xcf41, &op_popcount,	  1,   0, 255, 0xff, 0x01, 0x00, 0x02}, // popcount.dr b a  
	{0xcf42, &op_popcount,	  2,   0, 255, 0xff, 0x01, 0x00, 0x02}, // popcount.dr c a  
	{0xcf43, &op_popcount,	  3,   0, 255, 0xff, 0x01, 0x00, 0x02}, // popcount.dr d a  
	{0xcf44, &op_popcount,	  4,   0, 255, 0xff, 0x01, 0x00, 0x02}, // popcount.dr e a  
	{0xcf45, &op_popcount,	  5,   0, 255, 0xff, 0x01, 0x00, 0x02}, // popcount.dr f a  
	{0xcf46, &op_popcount,	  6,   0, 255, 0xff, 0x01, 0x00, 0x02}, // popcount.dr g a  
	{0xcf47, &op_popcount,	  7,   0, 255, 0xff, 0x01, 0x00, 0x02}, // popcount.dr h a  
	{0xcf48, &op_popcount,	  0,   1, 255, 0xff, 0x01, 0x00, 0x02}, // popcount.dr a b  
	{0xcf49, &op_popcount,	  1,   1, 255, 0xff, 0x01, 0x00, 0x02}, // popcount.dr b b  
	{0xcf4a, &op_popcount,	  2,   1, 255, 0xff, 0x01, 0x00, 0x02}, // popcount.dr c b  
	{0xcf4b, &op_popcount,	  3,   1, 255, 0xff, 0x01, 0x00, 0x02}, // popcount.dr d b  
	{0xcf4c, &op_popcount,	  4,   1, 255, 0xff, 0x01, 0x00, 0x02}, // popcount.dr e b  
	{0xcf4d, &op_popcount,	  5,   1, 255, 0xff, 0x01, 0x00, 0x02}, // popcount.dr f b  
	{0xcf4e, &op_popcount,	  6,   1, 255, 0xff, 0x01, 0x00, 0x02}, // popcount.dr g b  
	{0xcf4f, &op_popcount,	  7,   1, 255, 0xff, 0x01, 0x00, 0x02}, // popcount.dr h b  
	{0xcf50, &op_popcount,	  0,   2, 255, 0xff, 0x01, 0x00, 0x02}, // popcount.dr a c  
	{0xcf51, &op_popcount,	  1,   2, 255, 0xff, 0x01, 0x00, 0x02}, // popcount.dr b c  
	{0xcf52, &op_popcount,	  2,   2, 255, 0xff, 0x01, 0x00, 0x02}, // popcount.dr c c  
	{0xcf53, &op_popcount,	  3,   2, 255, 0xff, 0x01, 0x00, 0x02}, // popcount.dr d c  
	{0xcf54, &op_popcount,	  4,   2, 255, 0xff, 0x01, 0x00, 0x02}, // popcount.dr e c  
	{0xcf55, &op_popcount,	  5,   2, 255, 0xff, 0x01, 0x00, 0x02}, // popcount.dr f c  
	{0xcf56, &op_popcount,	  6,   2, 255, 0xff, 0x01, 0x00, 0x02}, // popcount.dr g c  
	{0xcf57, &op_popcount,	  7,   2, 255, 0xff, 0x01, 0x00, 0x02}, // popcount.dr h c  
	{0xcf58, &op_popcount,	  0,   3, 255, 0xff, 0x01, 0x00, 0x02}, // popcount.dr a d  
	{0xcf59, &op_popcount,	  1,   3, 255, 0xff, 0x01, 0x00, 0x02}, // popcount.dr b d  
	{0xcf5a, &op_popcount,	  2,   3, 255, 0xff, 0x01, 0x00, 0x02}, // popcount.dr c d  
	{0xcf5b, &op_popcount,	  3,   3, 255, 0xff, 0x01, 0x00, 0x02}, // popcount.dr d d  
	{0xcf5c, &op_popcount,	  4,   3, 255, 0xff, 0x01, 0x00, 0x02}, // popcount.dr e d  
	{0xcf5d, &op_popcount,	  5,   3, 255, 0xff, 0x01, 0x00, 0x02}, // popcount.dr f d  
	{0xcf5e, &op_popcount,	  6,   3, 255, 0xff, 0x01, 0x00, 0x02}, // popcount.dr g d  
	{0xcf5f, &op_popcount,	  7,   3, 255, 0xff, 0x01, 0x00, 0x02}, // popcount.dr h d  
	{0xcf60, &op_popcount,	  0,   4, 255, 0xff, 0x01, 0x00, 0x02}, // popcount.dr a e  
	{0xcf61, &op_popcount,	  1,   4, 255, 0xff, 0x01, 0x00, 0x02}, // popcount.dr b e  
	{0xcf62, &op_popcount,	  2,   4, 255, 0xff, 0x01, 0x00, 0x02}, // popcount.dr c e  
	{0xcf63, &op_popcount,	  3,   4, 255, 0xff, 0x01, 0x00, 0x02}, // popcount.dr d e  
	{0xcf64, &op_popcount,	  4,   4, 255, 0xff, 0x01, 0x00, 0x02}, // popcount.dr e e  
	{0xcf65, &op_popcount,	  5,   4, 255, 0xff, 0x01, 0x00, 0x02}, // popcount.dr f e  
	{0xcf66, &op_popcount,	  6,   4, 255, 0xff, 0x01, 0x00, 0x02}, // popcount.dr g e  
	{0xcf67, &op_popcount,	  7,   4, 255, 0xff, 0x01, 0x00, 0x02}, // popcount.dr h e  
	{0xcf68, &op_popcount,	  0,   5, 255, 0xff, 0x01, 0x00, 0x02}, // popcount.dr a f  
	{0xcf69, &op_popcount,	  1,   5, 255, 0xff, 0x01, 0x00, 0x02}, // popcount.dr b f  
	{0xcf6a, &op_popcount,	  2,   5, 255, 0xff, 0x01, 0x00, 0x02}, // popcount.dr c f  
	{0xcf6b, &op_popcount,	  3,   5, 255, 0xff, 0x01, 0x00, 0x02}, // popcount.dr d f  
	{0xcf6c, &op_popcount,	  4,   5, 255, 0xff, 0x01, 0x00, 0x02}, // popcount.dr e f  
	{0xcf6d, &op_popcount,	  5,   5, 255, 0xff, 0x01, 0x00, 0x02}, // popcount.dr f f  
	{0xcf6e, &op_popcount,	  6,   5, 255, 0xff, 0x01, 0x00, 0x02}, // popcount.dr g f  
	{0xcf6f, &op_popcount,	  7,   5, 255, 0xff, 0x01, 0x00, 0x02}, // popcount.dr h f  
	{0xcf70, &op_popcount,	  0,   6, 255, 0xff, 0x01, 0x00, 0x02}, // popcount.dr a g  
	{0xcf71, &op_popcount,	  1,   6, 255, 0xff, 0x01, 0x00, 0x02}, // popcount.dr b g  
	{0xcf72, &op_popcount,	  2,   6, 255, 0xff, 0x01, 0x00, 0x02}, // popcount.dr c g  
	{0xcf73, &op_popcount,	  3,   6, 255, 0xff, 0x01, 0x00, 0x02}, // popcount.dr d g  
	{0xcf74, &op_popcount,	  4,   6, 255, 0xff, 0x01, 0x00, 0x02}, // popcount.dr e g  
	{0xcf75, &op_popcount,	  5,   6, 255, 0xff, 0x01, 0x00, 0x02}, // popcount.dr f g  
	{0xcf76, &op_popcount,	  6,   6, 255, 0xff, 0x01, 0x00, 0x02}, // popcount.dr g g  
	{0xcf77, &op_popcount,	  7,   6, 255, 0xff, 0x01, 0x00, 0x02}, // popcount.dr h g  
	{0xcf78, &op_popcount,	  0,   7, 255, 0xff, 0x01, 0x00, 0x02}, // popcount.dr a h  
	{0xcf79, &op_popcount,	  1,   7, 255, 0xff, 0x01, 0x00, 0x02}, // popcount.dr b h  
	{0xcf7a, &op_popcount,	  2,   7, 255, 0xff, 0x01, 0x00, 0x02}, // popcount.dr c h  
	{0xcf7b, &op_popcount,	  3,   7, 255, 0xff, 0x01, 0x00, 0x02}, // popcount.dr d h  
	{0xcf7c, &op_popcount,	  4,   7, 255, 0xff, 0x01, 0x00, 0x02}, // popcount.dr e h  
	{0xcf7d, &op_popcount,	  5,   7, 255, 0xff, 0x01, 0x00, 0x02}, // popcount.dr f h  
	{0xcf7e, &op_popcount,	  6,   7, 255, 0xff, 0x01, 0x00, 0x02}, // popcount.dr g h  
	{0xcf7f, &op_popcount,	  7,   7, 255, 0xff, 0x01, 0x00, 0x02}, // popcount.dr h h  
	{0xcf80, &op_popcount,	  0,   0, 255, 0xff, 0x01, 0x00, 0x04}, // popcount.r a a  
	{0xcf81, &op_popcount,	  1,   0, 255, 0xff, 0x01, 0x00, 0x04}, // popcount.r b a  
	{0xcf82, &op_popcount,	  2,   0, 255, 0xff, 0x01, 0x00, 0x04}, // popcount.r c a  
	{0xcf83, &op_popcount,	  3,   0, 255, 0xff, 0x01, 0x00, 0x04}, // popcount.r d a  
	{0xcf84, &op_popcount,	  4,   0, 255, 0xff, 0x01, 0x00, 0x04}, // popcount.r e a  
	{0xcf85, &op_popcount,	  5,   0, 255, 0xff, 0x01, 0x00, 0x04}, // popcount.r f a  
	{0xcf86, &op_popcount,	  6,   0, 255, 0xff, 0x01, 0x00, 0x04}, // popcount.r g a  
	{0xcf87, &op_popcount,	  7,   0, 255, 0xff, 0x01, 0x00, 0x04}, // popcount.r h a  
	{0xcf88, &op_popcount,	  0,   1, 255, 0xff, 0x01, 0x00, 0x04}, // popcount.r a b  
	{0xcf89, &op_popcount,	  1,   1, 255, 0xff, 0x01, 0x00, 0x04}, // popcount.r b b  
	{0xcf8a, &op_popcount,	  2,   1, 255, 0xff, 0x01, 0x00, 0x04}, // popcount.r c b  
	{0xcf8b, &op_popcount,	  3,   1, 255, 0xff, 0x01, 0x00, 0x04}, // popcount.r d b  
	{0xcf8c, &op_popcount,	  4,   1, 255, 0xff, 0x01, 0x00, 0x04}, // popcount.r e b  
	{0xcf8d, &op_popcount,	  5,   1, 255, 0xff, 0x01, 0x00, 0x04}, // popcount.r f b  
	{0xcf8e, &op_popcount,	  6,   1, 255, 0xff, 0x01, 0x00, 0x04}, // popcount.r g b  
	{0xcf8f, &op_popcount,	  7,   1, 255, 0xff, 0x01, 0x00, 0x04}, // popcount.r h b  
	{0xcf90, &op_popcount,	  0,   2, 255, 0xff, 0x01, 0x00, 0x04}, // popcount.r a c  
	{0xcf91, &op_popcount,	  1,   2, 255, 0xff, 0x01, 0x00, 0x04}, // popcount.r b c  
	{0xcf92, &op_popcount,	  2,   2, 255, 0xff, 0x01, 0x00, 0x04}, // popcount.r c c  
	{0xcf93, &op_popcount,	  3,   2, 255, 0xff, 0x01, 0x00, 0x04}, // popcount.r d c  
	{0xcf94, &op_popcount,	  4,   2, 255, 0xff, 0x01, 0x00, 0x04}, // popcount.r e c  
	{0xcf95, &op_popcount,	  5,   2, 255, 0xff, 0x01, 0x00, 0x04}, // popcount.r f c  
	{0xcf96, &op_popcount,	  6,   2, 255, 0xff, 0x01, 0x00, 0x04}, // popcount.r g c  
	{0xcf97, &op_popcount,	  7,   2, 255, 0xff, 0x01, 0x00, 0x04}, // popcount.r h c  
	{0xcf98, &op_popcount,	  0,   3, 255, 0xff, 0x01, 0x00, 0x04}, // popcount.r a d  
	{0xcf99, &op_popcount,	  1,   3, 255, 0xff, 0x01, 0x00, 0x04}, // popcount.r b d  
	{0xcf9a, &op_popcount,	  2,   3, 255, 0xff, 0x01, 0x00, 0x04}, // popcount.r c d  
	{0xcf9b, &op_popcount,	  3,   3, 255, 0xff, 0x01, 0x00, 0x04}, // popcount.r d d  
	{0xcf9c, &op_popcount,	  4,   3, 255, 0xff, 0x01, 0x00, 0x04}, // popcount.r e d  
	{0xcf9d, &op_popcount,	  5,   3, 255, 0xff, 0x01, 0x00, 0x04}, // popcount.r f d  
	{0xcf9e, &op_popcount,	  6,   3, 255, 0xff, 0x01, 0x00, 0x04}, // popcount.r g d  
	{0xcf9f, &op_popcount,	  7,   3, 255, 0xff, 0x01, 0x00, 0x04}, // popcount.r h d  
	{0xcfa0, &op_popcount,	  0,   4, 255, 0xff, 0x01, 0x00, 0x04}, // popcount.r a e  
	{0xcfa1, &op_popcount,	  1,   4, 255, 0xff, 0x01, 0x00, 0x04}, // popcount.r b e  
	{0xcfa2, &op_popcount,	  2,   4, 255, 0xff, 0x01, 0x00, 0x04}, // popcount.r c e  
	{0xcfa3, &op_popcount,	  3,   4, 255, 0xff, 0x01, 0x00, 0x04}, // popcount.r d e  
	{0xcfa4, &op_popcount,	  4,   4, 255, 0xff, 0x01, 0x00, 0x04}, // popcount.r e e  
	{0xcfa5, &op_popcount,	  5,   4, 255, 0xff, 0x01, 0x00, 0x04}, // popcount.r f e  
	{0xcfa6, &op_popcount,	  6,   4, 255, 0xff, 0x01, 0x00, 0x04}, // popcount.r g e  
	{0xcfa7, &op_popcount,	  7,   4, 255, 0xff, 0x01, 0x00, 0x04}, // popcount.r h e  
	{0xcfa8, &op_popcount,	  0,   5, 255, 0xff, 0x01, 0x00, 0x04}, // popcount.r a f  
	{0xcfa9, &op_popcount,	  1,   5, 255, 0xff, 0x01, 0x00, 0x04}, // popcount.r b f  
	{0xcfaa, &op_popcount,	  2,   5, 255, 0xff, 0x01, 0x00, 0x04}, // popcount.r c f  
	{0xcfab, &op_popcount,	  3,   5, 255, 0xff, 0x01, 0x00, 0x04}, // popcount.r d f  
	{0xcfac, &op_popcount,	  4,   5, 255, 0xff, 0x01, 0x00, 0x04}, // popcount.r e f  
	{0xcfad, &op_popcount,	  5,   5, 255, 0xff, 0x01, 0x00, 0x04}, // popcount.r f f  
	{0xcfae, &op_popcount,	  6,   5, 255, 0xff, 0x01, 0x00, 0x04}, // popcount.r g f  
	{0xcfaf, &op_popcount,	  7,   5, 255, 0xff, 0x01, 0x00, 0x04}, // popcount.r h f  
	{0xcfb0, &op_popcount,	  0,   6, 255, 0xff, 0x01, 0x00, 0x04}, // popcount.r a g  
	{0xcfb1, &op_popcount,	  1,   6, 255, 0xff, 0x01, 0x00, 0x04}, // popcount.r b g  
	{0xcfb2, &op_popcount,	  2,   6, 255, 0xff, 0x01, 0x00, 0x04}, // popcount.r c g  
	{0xcfb3, &op_popcount,	  3,   6, 255, 0xff, 0x01, 0x00, 0x04}, // popcount.r d g  
	{0xcfb4, &op_popcount,	  4,   6, 255, 0xff, 0x01, 0x00, 0x04}, // popcount.r e g  
	{0xcfb5, &op_popcount,	  5,   6, 255, 0xff, 0x01, 0x00, 0x04}, // popcount.r f g  
	{0xcfb6, &op_popcount,	  6,   6, 255, 0xff, 0x01, 0x00, 0x04}, // popcount.r g g  
	{0xcfb7, &op_popcount,	  7,   6, 255, 0xff, 0x01, 0x00, 0x04}, // popcount.r h g  
	{0xcfb8, &op_popcount,	  0,   7, 255, 0xff, 0x01, 0x00, 0x04}, // popcount.r a h  
	{0xcfb9, &op_popcount,	  1,   7, 255, 0xff, 0x01, 0x00, 0x04}, // popcount.r b h  
	{0xcfba, &op_popcount,	  2,   7, 255, 0xff, 0x01, 0x00, 0x04}, // popcount.r c h  
	{0xcfbb, &op_popcount,	  3,   7, 255, 0xff, 0x01, 0x00, 0x04}, // popcount.r d h  
	{0xcfbc, &op_popcount,	  4,   7, 255, 0xff, 0x01, 0x00, 0x04}, // popcount.r e h  
	{0xcfbd, &op_popcount,	  5,   7, 255, 0xff, 0x01, 0x00, 0x04}, // popcount.r f h  
	{0xcfbe, &op_popcount,	  6,   7, 255, 0xff, 0x01, 0x00, 0x04}, // popcount.r g h  
	{0xcfbf, &op_popcount,	  7,   7, 255, 0xff, 0x01, 0x00, 0x04}, // popcount.r h h  
	{0xcec8, &op_popcount,	  0,   8, 255, 0xff, 0x00, 0x01, 0x01}, // popcount.wi a <literal>  
	{0xcec9, &op_popcount,	  1,   8, 255, 0xff, 0x00, 0x01, 0x01}, // popcount.wi b <literal>  
	{0xceca, &op_popcount,	  2,   8, 255, 0xff, 0x00, 0x01, 0x01}, // popcount.wi c <literal>  
	{0xcecb, &op_popcount,	  3,   8, 255, 0xff, 0x00, 0x01, 0x01}, // popcount.wi d <literal>  
	{0xcecc, &op_popcount,	  4,   8, 255, 0xff, 0x00, 0x01, 0x01}, // popcount.wi e <literal>  
	{0xcecd, &op_popcount,	  5,   8, 255, 0xff, 0x00, 0x01, 0x01}, // popcount.wi f <literal>  
	{0xcece, &op_popcount,	  6,   8, 255, 0xff, 0x00, 0x01, 0x01}, // popcount.wi g <literal>  
	{0xcecf, &op_popcount,	  7,   8, 255, 0xff, 0x00, 0x01, 0x01}, // popcount.wi h <literal>  
	{0xced0, &op_popcount,	  0,   8, 255, 0xff, 0x00, 0x02, 0x02}, // popcount.di a <literal>  
	{0xced1, &op_popcount,	  1,   8, 255, 0xff, 0x00, 0x02, 0x02}, // popcount.di b <literal>  
	{0xced2, &op_popcount,	  2,   8, 255, 0xff, 0x00, 0x02, 0x02}, // popcount.di c <literal>  
	{0xced3, &op_popcount,	  3,   8, 255, 0xff, 0x00, 0x02, 0x02}, // popcount.di d <literal>  
	{0xced4, &op_popcount,	  4,   8, 255, 0xff, 0x00, 0x02, 0x02}, // popcount.di e <literal>  
	{0xced5, &op_popcount,	  5,   8, 255, 0xff, 0x00, 0x02, 0x02}, // popcount.di f <literal>  
	{0xced6, &op_popcount,	  6,   8, 255, 0xff, 0x00, 0x02, 0x02}, // popcount.di g <literal>  
	{0xced7, &op_popcount,	  7,   8, 255, 0xff, 0x00, 0x02, 0x02}, // popcount.di h <literal>  
	{0xcee0, &op_popcount,	  0,   8, 255, 0xff, 0x00, 0x04, 0x04}, // popcount.i a <literal>  
	{0xcee1, &op_popcount,	  1,   8, 255, 0xff, 0x00, 0x04, 0x04}, // popcount.i b <literal>  
	{0xcee2, &op_popcount,	  2,   8, 255, 0xff, 0x00, 0x04, 0x04}, // popcount.i c <literal>  
	{0xcee3, &op_popcount,	  3,   8, 255, 0xff, 0x00, 0x04, 0x04}, // popcount.i d <literal>  
	{0xcee4, &op_popcount,	  4,   8, 255, 0xff, 0x00, 0x04, 0x04}, // popcount.i e <literal>  
	{0xcee5, &op_popcount,	  5,   8, 255, 0xff, 0x00, 0x04, 0x04}, // popcount.i f <literal>  
	{0xcee6, &op_popcount,	  6,   8, 255, 0xff, 0x00, 0x04, 0x04}, // popcount.i g <literal>  
	{0xcee7, &op_popcount,	  7,   8, 255, 0xff, 0x00, 0x04, 0x04}, // popcount.i h <literal>  
	{0xcfc8, &op_popcount,	  0,   8, 255, 0xff, 0x01, 0x04, 0x01}, // popcount.wri a <literal>  
	{0xcfc9, &op_popcount,	  1,   8, 255, 0xff, 0x01, 0x04, 0x01}, // popcount.wri b <literal>  
	{0xcfca, &op_popcount,	  2,   8, 255, 0xff, 0x01, 0x04, 0x01}, // popcount.wri c <literal>  
	{0xcfcb, &op_popcount,	  3,   8, 255, 0xff, 0x01, 0x04, 0x01}, // popcount.wri d <literal>  
	{0xcfcc, &op_popcount,	  4,   8, 255, 0xff, 0x01, 0x04, 0x01}, // popcount.wri e <literal>  
	{0xcfcd, &op_popcount,	  5,   8, 255, 0xff, 0x01, 0x04, 0x01}, // popcount.wri f <literal>  
	{0xcfce, &op_popcount,	  6,   8, 255, 0xff, 0x01, 0x04, 0x01}, // popcount.wri g <literal>  
	{0xcfcf, &op_popcount,	  7,   8, 255, 0xff, 0x01, 0x04, 0x01}, // popcount.wri h <literal>  
	{0xcfd0, &op_popcount,	  0,   8, 255, 0xff, 0x01, 0x04, 0x02}, // popcount.dri a <literal>  
	{0xcfd1, &op_popcount,	  1,   8, 255, 0xff, 0x01, 0x04, 0x02}, // popcount.dri b <literal>  
	{0xcfd2, &op_popcount,	  2,   8, 255, 0xff, 0x01, 0x04, 0x02}, // popcount.dri c <literal>  
	{0xcfd3, &op_popcount,	  3,   8, 255, 0xff, 0x01, 0x04, 0x02}, // popcount.dri d <literal>  
	{0xcfd4, &op_popcount,	  4,   8, 255, 0xff, 0x01, 0x04, 0x02}, // popcount.dri e <literal>  
	{0xcfd5, &op_popcount,	  5,   8, 255, 0xff, 0x01, 0x04, 0x02}, // popcount.dri f <literal>  
	{0xcfd6, &op_popcount,	  6,   8, 255, 0xff, 0x01, 0x04, 0x02}, // popcount.dri g <literal>  
	{0xcfd7, &op_popcount,	  7,   8, 255, 0xff, 0x01, 0x04, 0x02}, // popcount.dri h <literal>  
	{0xcfe0, &op_popcount,	  0,   8, 255, 0xff, 0x01, 0x04, 0x04}, // popcount.ri a <literal>  
	{0xcfe1, &op_popcount,	  1,   8, 255, 0xff, 0x01, 0x04, 0x04}, // popcount.ri b <literal>  
	{0xcfe2, &op_popcount,	  2,   8, 255, 0xff, 0x01, 0x04, 0x04}, // popcount.ri c <literal>  
	{0xcfe3, &op_popcount,	  3,   8, 255, 0xff, 0x01, 0x04, 0x04}, // popcount.ri d <literal>  
	{0xcfe4, &op_popcount,	  4,   8, 255, 0xff, 0x01, 0x04, 0x04}, // popcount.ri e <literal>  
	{0xcfe5, &op_popcount,	  5,   8, 255, 0xff, 0x01, 0x04, 0x04}, // popcount.ri f <literal>  
	{0xcfe6, &op_popcount,	  6,   8, 255, 0xff, 0x01, 0x04, 0x04}, // popcount.ri g <literal>  
	{0xcfe7, &op_popcount,	  7,   8, 255, 0xff, 0x01, 0x04, 0x04}, // popcount.ri h <literal>  
	{0xd200, &op_cadd,	  0,   0, 255, 0xff, 0x00, 0x00, 0x01}, // cadd.w a a  
	{0xd201, &op_cadd,	  1,   0, 255, 0xff, 0x00, 0x00, 0x01}, // cadd.w b a  
	{0xd202, &op_cadd,	  2,   0, 255, 0xff, 0x00, 0x00, 0x01}, // cadd.w c a  
	{0xd203, &op_cadd,	  3,   0, 255, 0xff, 0x00, 0x00, 0x01}, // cadd.w d a  
	{0xd204, &op_cadd,	  4,   0, 255, 0xff, 0x00, 0x00, 0x01}, // cadd.w e a  
	{0xd205, &op_cadd,	  5,   0, 255, 0xff, 0x00, 0x00, 0x01}, // cadd.w f a  
	{0xd206, &op_cadd,	  6,   0, 255, 0xff, 0x00, 0x00, 0x01}, // cadd.w g a  
	{0xd207, &op_cadd,	  7,   0, 255, 0xff, 0x00, 0x00, 0x01}, // cadd.w h a  
	{0xd208, &op_cadd,	  0,   1, 255, 0xff, 0x00, 0x00, 0x01}, // cadd.w a b  
	{0xd209, &op_cadd,	  1,   1, 255, 0xff, 0x00, 0x00, 0x01}, // cadd.w b b  
	{0xd20a, &op_cadd,	  2,   1, 255, 0xff, 0x00, 0x00, 0x01}, // cadd.w c b  
	{0xd20b, &op_cadd,	  3,   1, 255, 0xff, 0x00, 0x00, 0x01}, // cadd.w d b  
	{0xd20c, &op_cadd,	  4,   1, 255, 0xff, 0x00, 0x00, 0x01}, // cadd.w e b  
	{0xd20d, &op_cadd,	  5,   1, 255, 0xff, 0x00, 0x00, 0x01}, // cadd.w f b  
	{0xd20e, &op_cadd,	  6,   1, 255, 0xff, 0x00, 0x00, 0x01}, // cadd.w g b  
	{0xd20f, &op_cadd,	  7,   1, 255, 0xff, 0x00, 0x00, 0x01}, // cadd.w h b  
	{0xd210, &op_cadd,	  0,   2, 255, 0xff, 0x00, 0x00, 0x01}, // cadd.w a c  
	{0xd211, &op_cadd,	  1,   2, 255, 0xff, 0x00, 0x00, 0x01}, // cadd.w b c  
	{0xd212, &op_cadd,	  2,   2, 255, 0xff, 0x00, 0x00, 0x01}, // cadd.w c c  
	{0xd213, &op_cadd,	  3,   2, 255, 0xff, 0x00, 0x00, 0x01}, // cadd.w d c  
	{0xd214, &op_cadd,	  4,   2, 255, 0xff, 0x00, 0x00, 0x01}, // cadd.w e c  
	{0xd215, &op_cadd,	  5,   2, 255, 0xff, 0x00, 0x00, 0x01}, // cadd.w f c  
	{0xd216, &op_cadd,	  6,   2, 255, 0xff, 0x00, 0x00, 0x01}, // cadd.w g c  
	{0xd217, &op_cadd,	  7,   2, 255, 0xff, 0x00, 0x00, 0x01}, // cadd.w h c  
	{0xd218, &op_cadd,	  0,   3, 255, 0xff, 0x00, 0x00, 0x01}, // cadd.w a d  
	{0xd219, &op_cadd,	  1,   3, 255, 0xff, 0x00, 0x00, 0x01}, // cadd.w b d  
	{0xd21a, &op_cadd,	  2,   3, 255, 0xff, 0x00, 0x00, 0x01}, // cadd.w c d  
	{0xd21b, &op_cadd,	  3,   3, 255, 0xff, 0x00, 0x00, 0x01}, // cadd.w d d  
	{0xd21c, &op_cadd,	  4,   3, 255, 0xff, 0x00, 0x00, 0x01}, // cadd.w e d  
	{0xd21d, &op_cadd,	  5,   3, 255, 0xff, 0x00, 0x00, 0x01}, // cadd.w f d  
	{0xd21e, &op_cadd,	  6,   3, 255, 0xff, 0x00, 0x00, 0x01}, // cadd.w g d  
	{0xd21f, &op_cadd,	  7,   3, 255, 0xff, 0x00, 0x00, 0x01}, // cadd.w h d  
	{0xd220, &op_cadd,	  0,   4, 255, 0xff, 0x00, 0x00, 0x01}, // cadd.w a e  
	{0xd221, &op_cadd,	  1,   4, 255, 0xff, 0x00, 0x00, 0x01}, // cadd.w b e  
	{0xd222, &op_cadd,	  2,   4, 255, 0xff, 0x00, 0x00, 0x01}, // cadd.w c e  
	{0xd223, &op_cadd,	  3,   4, 255, 0xff, 0x00, 0x00, 0x01}, // cadd.w d e  
	{0xd224, &op_cadd,	  4,   4, 255, 0xff, 0x00, 0x00, 0x01}, // cadd.w e e  
	{0xd225, &op_cadd,	  5,   4, 255, 0xff, 0x00, 0x00, 0x01}, // cadd.w f e  
	{0xd226, &op_cadd,	  6,   4, 255, 0xff, 0x00, 0x00, 0x01}, // cadd.w g e  
	{0xd227, &op_cadd,	  7,   4, 255, 0xff, 0x00, 0x00, 0x01}, // cadd.w h e  
	{0xd228, &op_cadd,	  0,   5, 255, 0xff, 0x00, 0x00, 0x01}, // cadd.w a f  
	{0xd229, &op_cadd,	  1,   5, 255, 0xff, 0x00, 0x00, 0x01}, // cadd.w b f  
	{0xd22a, &op_cadd,	  2,   5, 255, 0xff, 0x00, 0x00, 0x01}, // cadd.w c f  
	{0xd22b, &op_cadd,	  3,   5, 255, 0xff, 0x00, 0x00, 0x01}, // cadd.w d f  
	{0xd22c, &op_cadd,	  4,   5, 255, 0xff, 0x00, 0x00, 0x01}, // cadd.w e f  
	{0xd22d, &op_cadd,	  5,   5, 255, 0xff, 0x00, 0x00, 0x01}, // cadd.w f f  
	{0xd22e, &op_cadd,	  6,   5, 255, 0xff, 0x00, 0x00, 0x01}, // cadd.w g f  
	{0xd22f, &op_cadd,	  7,   5, 255, 0xff, 0x00, 0x00, 0x01}, // cadd.w h f  
	{0xd230, &op_cadd,	  0,   6, 255, 0xff, 0x00, 0x00, 0x01}, // cadd.w a g  
	{0xd231, &op_cadd,	  1,   6, 255, 0xff, 0x00, 0x00, 0x01}, // cadd.w b g  
	{0xd232, &op_cadd,	  2,   6, 255, 0xff, 0x00, 0x00, 0x01}, // cadd.w c g  
	{0xd233, &op_cadd,	  3,   6, 255, 0xff, 0x00, 0x00, 0x01}, // cadd.w d g  
	{0xd234, &op_cadd,	  4,   6, 255, 0xff, 0x00, 0x00, 0x01}, // cadd.w e g  
	{0xd235, &op_cadd,	  5,   6, 255, 0xff, 0x00, 0x00, 0x01}, // cadd.w f g  
	{0xd236, &op_cadd,	  6,   6, 255, 0xff, 0x00, 0x00, 0x01}, // cadd.w g g  
	{0xd237, &op_cadd,	  7,   6, 255, 0xff, 0x00, 0x00, 0x01}, // cadd.w h g  
	{0xd238, &op_cadd,	  0,   7, 255, 0xff, 0x00, 0x00, 0x01}, // cadd.w a h  
	{0xd239, &op_cadd,	  1,   7, 255, 0xff, 0x00, 0x00, 0x01}, // cadd.w b h  
	{0xd23a, &op_cadd,	  2,   7, 255, 0xff, 0x00, 0x00, 0x01}, // cadd.w c h  
	{0xd23b, &op_cadd,	  3,   7, 255, 0xff, 0x00, 0x00, 0x01}, // cadd.w d h  
	{0xd23c, &op_cadd,	  4,   7, 255, 0xff, 0x00, 0x00, 0x01}, // cadd.w e h  
	{0xd23d, &op_cadd,	  5,   7, 255, 0xff, 0x00, 0x00, 0x01}, // cadd.w f h  
	{0xd23e, &op_cadd,	  6,   7, 255, 0xff, 0x00, 0x00, 0x01}, // cadd.w g h  
	{0xd23f, &op_cadd,	  7,   7, 255, 0xff, 0x00, 0x00, 0x01}, // cadd.w h h  
	{0xd240, &op_cadd,	  0,   0, 255, 0xff, 0x00, 0x00, 0x02}, // cadd.d a a  
	{0xd241, &op_cadd,	  1,   0, 255, 0xff, 0x00, 0x00, 0x02}, // cadd.d b a  
	{0xd242, &op_cadd,	  2,   0, 255, 0xff, 0x00, 0x00, 0x02}, // cadd.d c a  
	{0xd243, &op_cadd,	  3,   0, 255, 0xff, 0x00, 0x00, 0x02}, // cadd.d d a  
	{0xd244, &op_cadd,	  4,   0, 255, 0xff, 0x00, 0x00, 0x02}, // cadd.d e a  
	{0xd245, &op_cadd,	  5,   0, 255, 0xff, 0x00, 0x00, 0x02}, // cadd.d f a  
	{0xd246, &op_cadd,	  6,   0, 255, 0xff, 0x00, 0x00, 0x02}, // cadd.d g a  
	{0xd247, &op_cadd,	  7,   0, 255, 0xff, 0x00, 0x00, 0x02}, // cadd.d h a  
	{0xd248, &op_cadd,	  0,   1, 255, 0xff, 0x00, 0x00, 0x02}, // cadd.d a b  
	{0xd249, &op_cadd,	  1,   1, 255, 0xff, 0x00, 0x00, 0x02}, // cadd.d b b  
	{0xd24a, &op_cadd,	  2,   1, 255, 0xff, 0x00, 0x00, 0x02}, // cadd.d c b  
	{0xd24b, &op_cadd,	  3,   1, 255, 0xff, 0x00, 0x00, 0x02}, // cadd.d d b  
	{0xd24c, &op_cadd,	  4,   1, 255, 0xff, 0x00, 0x00, 0x02}, // cadd.d e b  
	{0xd24d, &op_cadd,	  5,   1, 255, 0xff, 0x00, 0x00, 0x02}, // cadd.d f b  
	{0xd24e, &op_cadd,	  6,   1, 255, 0xff, 0x00, 0x00, 0x02}, // cadd.d g b  
	{0xd24f, &op_cadd,	  7,   1, 255, 0xff, 0x00, 0x00, 0x02}, // cadd.d h b  
	{0xd250, &op_cadd,	  0,   2, 255, 0xff, 0x00, 0x00, 0x02}, // cadd.d a c  
	{0xd251, &op_cadd,	  1,   2, 255, 0xff, 0x00, 0x00, 0x02}, // cadd.d b c  
	{0xd252, &op_cadd,	  2,   2, 255, 0xff, 0x00, 0x00, 0x02}, // cadd.d c c  
	{0xd253, &op_cadd,	  3,   2, 255, 0xff, 0x00, 0x00, 0x02}, // cadd.d d c  
	{0xd254, &op_cadd,	  4,   2, 255, 0xff, 0x00, 0x00, 0x02}, // cadd.d e c  
	{0xd255, &op_cadd,	  5,   2, 255, 0xff, 0x00, 0x00, 0x02}, // cadd.d f c  
	{0xd256, &op_cadd,	  6,   2, 255, 0xff, 0x00, 0x00, 0x02}, // cadd.d g c  
	{0xd257, &op_cadd,	  7,   2, 255, 0xff, 0x00, 0x00, 0x02}, // cadd.d h c  
	{0xd258, &op_cadd,	  0,   3, 255, 0xff, 0x00, 0x00, 0x02}, // cadd.d a d  
	{0xd259, &op_cadd,	  1,   3, 255, 0xff, 0x00, 0x00, 0x02}, // cadd.d b d  
	{0xd25a, &op_cadd,	  2,   3, 255, 0xff, 0x00, 0x00, 0x02}, // cadd.d c d  
	{0xd25b, &op_cadd,	  3,   3, 255, 0xff, 0x00, 0x00, 0x02}, // cadd.d d d  
	{0xd25c, &op_cadd,	  4,   3, 255, 0xff, 0x00, 0x00, 0x02}, // cadd.d e d  
	{0xd25d, &op_cadd,	  5,   3, 255, 0xff, 0x00, 0x00, 0x02}, // cadd.d f d  
	{0xd25e, &op_cadd,	  6,   3, 255, 0xff, 0x00, 0x00, 0x02}, // cadd.d g d  
	{0xd25f, &op_cadd,	  7,   3, 255, 0xff, 0x00, 0x00, 0x02}, // cadd.d h d  
	{0xd260, &op_cadd,	  0,   4, 255, 0xff, 0x00, 0x00, 0x02}, // cadd.d a e  
	{0xd261, &op_cadd,	  1,   4, 255, 0xff, 0x00, 0x00, 0x02}, // cadd.d b e  
	{0xd262, &op_cadd,	  2,   4, 255, 0xff, 0x00, 0x00, 0x02}, // cadd.d c e  
	{0xd263, &op_cadd,	  3,   4, 255, 0xff, 0x00, 0x00, 0x02}, // cadd.d d e  
	{0xd264, &op_cadd,	  4,   4, 255, 0xff, 0x00, 0x00, 0x02}, // cadd.d e e  
	{0xd265, &op_cadd,	  5,   4, 255, 0xff, 0x00, 0x00, 0x02}, // cadd.d f e  
	{0xd266, &op_cadd,	  6,   4, 255, 0xff, 0x00, 0x00, 0x02}, // cadd.d g e  
	{0xd267, &op_cadd,	  7,   4, 255, 0xff, 0x00, 0x00, 0x02}, // cadd.d h e  
	{0xd268, &op_cadd,	  0,   5, 255, 0xff, 0x00, 0x00, 0x02}, // cadd.d a f  
	{0xd269, &op_cadd,	  1,   5, 255, 0xff, 0x00, 0x00, 0x02}, // cadd.d b f  
	{0xd26a, &op_cadd,	  2,   5, 255, 0xff, 0x00, 0x00, 0x02}, // cadd.d c f  
	{0xd26b, &op_cadd,	  3,   5, 255, 0xff, 0x00, 0x00, 0x02}, // cadd.d d f  
	{0xd26c, &op_cadd,	  4,   5, 255, 0xff, 0x00, 0x00, 0x02}, // cadd.d e f  
	{0xd26d, &op_cadd,	  5,   5, 255, 0xff, 0x00, 0x00, 0x02}, // cadd.d f f  
	{0xd26e, &op_cadd,	  6,   5, 255, 0xff, 0x00, 0x00, 0x02}, // cadd.d g f  
	{0xd26f, &op_cadd,	  7,   5, 255, 0xff, 0x00, 0x00, 0x02}, // cadd.d h f  
	{0xd270, &op_cadd,	  0,   6, 255, 0xff, 0x00, 0x00, 0x02}, // cadd.d a g  
	{0xd271, &op_cadd,	  1,   6, 255, 0xff, 0x00, 0x00, 0x02}, // cadd.d b g  
	{0xd272, &op_cadd,	  2,   6, 255, 0xff, 0x00, 0x00, 0x02}, // cadd.d c g  
	{0xd273, &op_cadd,	  3,   6, 255, 0xff, 0x00, 0x00, 0x02}, // cadd.d d g  
	{0xd274, &op_cadd,	  4,   6, 255, 0xff, 0x00, 0x00, 0x02}, // cadd.d e g  
	{0xd275, &op_cadd,	  5,   6, 255, 0xff, 0x00, 0x00, 0x02}, // cadd.d f g  
	{0xd276, &op_cadd,	  6,   6, 255, 0xff, 0x00, 0x00, 0x02}, // cadd.d g g  
	{0xd277, &op_cadd,	  7,   6, 255, 0xff, 0x00, 0x00, 0x02}, // cadd.d h g  
	{0xd278, &op_cadd,	  0,   7, 255, 0xff, 0x00, 0x00, 0x02}, // cadd.d a h  
	{0xd279, &op_cadd,	  1,   7, 255, 0xff, 0x00, 0x00, 0x02}, // cadd.d b h  
	{0xd27a, &op_cadd,	  2,   7, 255, 0xff, 0x00, 0x00, 0x02}, // cadd.d c h  
	{0xd27b, &op_cadd,	  3,   7, 255, 0xff, 0x00, 0x00, 0x02}, // cadd.d d h  
	{0xd27c, &op_cadd,	  4,   7, 255, 0xff, 0x00, 0x00, 0x02}, // cadd.d e h  
	{0xd27d, &op_cadd,	  5,   7, 255, 0xff, 0x00, 0x00, 0x02}, // cadd.d f h  
	{0xd27e, &op_cadd,	  6,   7, 255, 0xff, 0x00, 0x00, 0x02}, // cadd.d g h  
	{0xd27f, &op_cadd,	  7,   7, 255, 0xff, 0x00, 0x00, 0x02}, // cadd.d h h  
	{0xd280, &op_cadd,	  0,   0, 255, 0xff, 0x00, 0x00, 0x04}, // cadd a a  
	{0xd281, &op_cadd,	  1,   0, 255, 0xff, 0x00, 0x00, 0x04}, // cadd b a  
	{0xd282, &op_cadd,	  2,   0, 255, 0xff, 0x00, 0x00, 0x04}, // cadd c a  
	{0xd283, &op_cadd,	  3,   0, 255, 0xff, 0x00, 0x00, 0x04}, // cadd d a  
	{0xd284, &op_cadd,	  4,   0, 255, 0xff, 0x00, 0x00, 0x04}, // cadd e a  
	{0xd285, &op_cadd,	  5,   0, 255, 0xff, 0x00, 0x00, 0x04}, // cadd f a  
	{0xd286, &op_cadd,	  6,   0, 255, 0xff, 0x00, 0x00, 0x04}, // cadd g a  
	{0xd287, &op_cadd,	  7,   0, 255, 0xff, 0x00, 0x00, 0x04}, // cadd h a  
	{0xd288, &op_cadd,	  0,   1, 255, 0xff, 0x00, 0x00, 0x04}, // cadd a b  
	{0xd289, &op_cadd,	  1,   1, 255, 0xff, 0x00, 0x00, 0x04}, // cadd b b  
	{0xd28a, &op_cadd,	  2,   1, 255, 0xff, 0x00, 0x00, 0x04}, // cadd c b  
	{0xd28b, &op_cadd,	  3,   1, 255, 0xff, 0x00, 0x00, 0x04}, // cadd d b  
	{0xd28c, &op_cadd,	  4,   1, 255, 0xff, 0x00, 0x00, 0x04}, // cadd e b  
	{0xd28d, &op_cadd,	  5,   1, 255, 0xff, 0x00, 0x00, 0x04}, // cadd f b  
	{0xd28e, &op_cadd,	  6,   1, 255, 0xff, 0x00, 0x00, 0x04}, // cadd g b  
	{0xd28f, &op_cadd,	  7,   1, 255, 0xff, 0x00, 0x00, 0x04}, // cadd h b  
	{0xd290, &op_cadd,	  0,   2, 255, 0xff, 0x00, 0x00, 0x04}, // cadd a c  
	{0xd291, &op_cadd,	  1,   2, 255, 0xff, 0x00, 0x00, 0x04}, // cadd b c  
	{0xd292, &op_cadd,	  2,   2, 255, 0xff, 0x00, 0x00, 0x04}, // cadd c c  
	{0xd293, &op_cadd,	  3,   2, 255, 0xff, 0x00, 0x00, 0x04}, // cadd d c  
	{0xd294, &op_cadd,	  4,   2, 255, 0xff, 0x00, 0x00, 0x04}, // cadd e c  
	{0xd295, &op_cadd,	  5,   2, 255, 0xff, 0x00, 0x00, 0x04}, // cadd f c  
	{0xd296, &op_cadd,	  6,   2, 255, 0xff, 0x00, 0x00, 0x04}, // cadd g c  
	{0xd297, &op_cadd,	  7,   2, 255, 0xff, 0x00, 0x00, 0x04}, // cadd h c  
	{0xd298, &op_cadd,	  0,   3, 255, 0xff, 0x00, 0x00, 0x04}, // cadd a d  
	{0xd299, &op_cadd,	  1,   3, 255, 0xff, 0x00, 0x00, 0x04}, // cadd b d  
	{0xd29a, &op_cadd,	  2,   3, 255, 0xff, 0x00, 0x00, 0x04}, // cadd c d  
	{0xd29b, &op_cadd,	  3,   3, 255, 0xff, 0x00, 0x00, 0x04}, // cadd d d  
	{0xd29c, &op_cadd,	  4,   3, 255, 0xff, 0x00, 0x00, 0x04}, // cadd e d  
	{0xd29d, &op_cadd,	  5,   3, 255, 0xff, 0x00, 0x00, 0x04}, // cadd f d  
	{0xd29e, &op_cadd,	  6,   3, 255, 0xff, 0x00, 0x00, 0x04}, // cadd g d  
	{0xd29f, &op_cadd,	  7,   3, 255, 0xff, 0x00, 0x00, 0x04}, // cadd h d  
	{0xd2a0, &op_cadd,	  0,   4, 255, 0xff, 0x00, 0x00, 0x04}, // cadd a e  
	{0xd2a1, &op_cadd,	  1,   4, 255, 0xff, 0x00, 0x00, 0x04}, // cadd b e  
	{0xd2a2, &op_cadd,	  2,   4, 255, 0xff, 0x00, 0x00, 0x04}, // cadd c e  
	{0xd2a3, &op_cadd,	  3,   4, 255, 0xff, 0x00, 0x00, 0x04}, // cadd d e  
	{0xd2a4, &op_cadd,	  4,   4, 255, 0xff, 0x00, 0x00, 0x04}, // cadd e e  
	{0xd2a5, &op_cadd,	  5,   4, 255, 0xff, 0x00, 0x00, 0x04}, // cadd f e  
	{0xd2a6, &op_cadd,	  6,   4, 255, 0xff, 0x00, 0x00, 0x04}, // cadd g e  
	{0xd2a7, &op_cadd,	  7,   4, 255, 0xff, 0x00, 0x00, 0x04}, // cadd h e  
	{0xd2a8, &op_cadd,	  0,   5, 255, 0xff, 0x00, 0x00, 0x04}, // cadd a f  
	{0xd2a9, &op_cadd,	  1,   5, 255, 0xff, 0x00, 0x00, 0x04}, // cadd b f  
	{0xd2aa, &op_cadd,	  2,   5, 255, 0xff, 0x00, 0x00, 0x04}, // cadd c f  
	{0xd2ab, &op_cadd,	  3,   5, 255, 0xff, 0x00, 0x00, 0x04}, // cadd d f  
	{0xd2ac, &op_cadd,	  4,   5, 255, 0xff, 0x00, 0x00, 0x04}, // cadd e f  
	{0xd2ad, &op_cadd,	  5,   5, 255, 0xff, 0x00, 0x00, 0x04}, // cadd f f  
	{0xd2ae, &op_cadd,	  6,   5, 255, 0xff, 0x00, 0x00, 0x04}, // cadd g f  
	{0xd2af, &op_cadd,	  7,   5, 255, 0xff, 0x00, 0x00, 0x04}, // cadd h f  
	{0xd2b0, &op_cadd,	  0,   6, 255, 0xff, 0x00, 0x00, 0x04}, // cadd a g  
	{0xd2b1, &op_cadd,	  1,   6, 255, 0xff, 0x00, 0x00, 0x04}, // cadd b g  
	{0xd2b2, &op_cadd,	  2,   6, 255, 0xff, 0x00, 0x00, 0x04}, // cadd c g  
	{0xd2b3, &op_cadd,	  3,   6, 255, 0xff, 0x00, 0x00, 0x04}, // cadd d g  
	{0xd2b4, &op_cadd,	  4,   6, 255, 0xff, 0x00, 0x00, 0x04}, // cadd e g  
	{0xd2b5, &op_cadd,	  5,   6, 255, 0xff, 0x00, 0x00, 0x04}, // cadd f g  
	{0xd2b6, &op_cadd,	  6,   6, 255, 0xff, 0x00, 0x00, 0x04}, // cadd g g  
	{0xd2b7, &op_cadd,	  7,   6, 255, 0xff, 0x00, 0x00, 0x04}, // cadd h g  
	{0xd2b8, &op_cadd,	  0,   7, 255, 0xff, 0x00, 0x00, 0x04}, // cadd a h  
	{0xd2b9, &op_cadd,	  1,   7, 255, 0xff, 0x00, 0x00, 0x04}, // cadd b h  
	{0xd2ba, &op_cadd,	  2,   7, 255, 0xff, 0x00, 0x00, 0x04}, // cadd c h  
	{0xd2bb, &op_cadd,	  3,   7, 255, 0xff, 0x00, 0x00, 0x04}, // cadd d h  
	{0xd2bc, &op_cadd,	  4,   7, 255, 0xff, 0x00, 0x00, 0x04}, // cadd e h  
	{0xd2bd, &op_cadd,	  5,   7, 255, 0xff, 0x00, 0x00, 0x04}, // cadd f h  
	{0xd2be, &op_cadd,	  6,   7, 255, 0xff, 0x00, 0x00, 0x04}, // cadd g h  
	{0xd2bf, &op_cadd,	  7,   7, 255, 0xff, 0x00, 0x00, 0x04}, // cadd h h  
	{0xd300, &op_cadd,	  0,   0, 255, 0xff, 0x01, 0x00, 0x01}, // cadd.wr a a  
	{0xd301, &op_cadd,	  1,   0, 255, 0xff, 0x01, 0x00, 0x01}, // cadd.wr b a  
	{0xd302, &op_cadd,	  2,   0, 255, 0xff, 0x01, 0x00, 0x01}, // cadd.wr c a  
	{0xd303, &op_cadd,	  3,   0, 255, 0xff, 0x01, 0x00, 0x01}, // cadd.wr d a  
	{0xd304, &op_cadd,	  4,   0, 255, 0xff, 0x01, 0x00, 0x01}, // cadd.wr e a  
	{0xd305, &op_cadd,	  5,   0, 255, 0xff, 0x01, 0x00, 0x01}, // cadd.wr f a  
	{0xd306, &op_cadd,	  6,   0, 255, 0xff, 0x01, 0x00, 0x01}, // cadd.wr g a  
	{0xd307, &op_cadd,	  7,   0, 255, 0xff, 0x01, 0x00, 0x01}, // cadd.wr h a  
	{0xd308, &op_cadd,	  0,   1, 255, 0xff, 0x01, 0x00, 0x01}, // cadd.wr a b  
	{0xd309, &op_cadd,	  1,   1, 255, 0xff, 0x01, 0x00, 0x01}, // cadd.wr b b  
	{0xd30a, &op_cadd,	  2,   1, 255, 0xff, 0x01, 0x00, 0x01}, // cadd.wr c b  
	{0xd30b, &op_cadd,	  3,   1, 255, 0xff, 0x01, 0x00, 0x01}, // cadd.wr d b  
	{0xd30c, &op_cadd,	  4,   1, 255, 0xff, 0x01, 0x00, 0x01}, // cadd.wr e b  
	{0xd30d, &op_cadd,	  5,   1, 255, 0xff, 0x01, 0x00, 0x01}, // cadd.wr f b  
	{0xd30e, &op_cadd,	  6,   1, 255, 0xff, 0x01, 0x00, 0x01}, // cadd.wr g b  
	{0xd30f, &op_cadd,	  7,   1, 255, 0xff, 0x01, 0x00, 0x01}, // cadd.wr h b  
	{0xd310, &op_cadd,	  0,   2, 255, 0xff, 0x01, 0x00, 0x01}, // cadd.wr a c  
	{0xd311, &op_cadd,	  1,   2, 255, 0xff, 0x01, 0x00, 0x01}, // cadd.wr b c  
	{0xd312, &op_cadd,	  2,   2, 255, 0xff, 0x01, 0x00, 0x01}, // cadd.wr c c  
	{0xd313, &op_cadd,	  3,   2, 255, 0xff, 0x01, 0x00, 0x01}, // cadd.wr d c  
	{0xd314, &op_cadd,	  4,   2, 255, 0xff, 0x01, 0x00, 0x01}, // cadd.wr e c  
	{0xd315, &op_cadd,	  5,   2, 255, 0xff, 0x01, 0x00, 0x01}, // cadd.wr f c  
	{0xd316, &op_cadd,	  6,   2, 255, 0xff, 0x01, 0x00, 0x01}, // cadd.wr g c  
	{0xd317, &op_cadd,	  7,   2, 255, 0xff, 0x01, 0x00, 0x01}, // cadd.wr h c  
	{0xd318, &op_cadd,	  0,   3, 255, 0xff, 0x01, 0x00, 0x01}, // cadd.wr a d  
	{0xd319, &op_cadd,	  1,   3, 255, 0xff, 0x01, 0x00, 0x01}, // cadd.wr b d  
	{0xd31a, &op_cadd,	  2,   3, 255, 0xff, 0x01, 0x00, 0x01}, // cadd.wr c d  
	{0xd31b, &op_cadd,	  3,   3, 255, 0xff, 0x01, 0x00, 0x01}, // cadd.wr d d  
	{0xd31c, &op_cadd,	  4,   3, 255, 0xff, 0x01, 0x00, 0x01}, // cadd.wr e d  
	{0xd31d, &op_cadd,	  5,   3, 255, 0xff, 0x01, 0x00, 0x01}, // cadd.wr f d  
	{0xd31e, &op_cadd,	  6,   3, 255, 0xff, 0x01, 0x00, 0x01}, // cadd.wr g d  
	{0xd31f, &op_cadd,	  7,   3, 255, 0xff, 0x01, 0x00, 0x01}, // cadd.wr h d  
	{0xd320, &op_cadd,	  0,   4, 255, 0xff, 0x01, 0x00, 0x01}, // cadd.wr a e  
	{0xd321, &op_cadd,	  1,   4, 255, 0xff, 0x01, 0x00, 0x01}, // cadd.wr b e  
	{0xd322, &op_cadd,	  2,   4, 255, 0xff, 0x01, 0x00, 0x01}, // cadd.wr c e  
	{0xd323, &op_cadd,	  3,   4, 255, 0xff, 0x01, 0x00, 0x01}, // cadd.wr d e  
	{0xd324, &op_cadd,	  4,   4, 255, 0xff, 0x01, 0x00, 0x01}, // cadd.wr e e  
	{0xd325, &op_cadd,	  5,   4, 255, 0xff, 0x01, 0x00, 0x01}, // cadd.wr f e  
	{0xd326, &op_cadd,	  6,   4, 255, 0xff, 0x01, 0x00, 0x01}, // cadd.wr g e  
	{0xd327, &op_cadd,	  7,   4, 255, 0xff, 0x01, 0x00, 0x01}, // cadd.wr h e  
	{0xd328, &op_cadd,	  0,   5, 255, 0xff, 0x01, 0x00, 0x01}, // cadd.wr a f  
	{0xd329, &op_cadd,	  1,   5, 255, 0xff, 0x01, 0x00, 0x01}, // cadd.wr b f  
	{0xd32a, &op_cadd,	  2,   5, 255, 0xff, 0x01, 0x00, 0x01}, // cadd.wr c f  
	{0xd32b, &op_cadd,	  3,   5, 255, 0xff, 0x01, 0x00, 0x01}, // cadd.wr d f  
	{0xd32c, &op_cadd,	  4,   5, 255, 0xff, 0x01, 0x00, 0x01}, // cadd.wr e f  
	{0xd32d, &op_cadd,	  5,   5, 255, 0xff, 0x01, 0x00, 0x01}, // cadd.wr f f  
	{0xd32e, &op_cadd,	  6,   5, 255, 0xff, 0x01, 0x00, 0x01}, // cadd.wr g f  
	{0xd32f, &op_cadd,	  7,   5, 255, 0xff, 0x01, 0x00, 0x01}, // cadd.wr h f  
	{0xd330, &op_cadd,	  0,   6, 255, 0xff, 0x01, 0x00, 0x01}, // cadd.wr a g  
	{0xd331, &op_cadd,	  1,   6, 255, 0xff, 0x01, 0x00, 0x01}, // cadd.wr b g  
	{0xd332, &op_cadd,	  2,   6, 255, 0xff, 0x01, 0x00, 0x01}, // cadd.wr c g  
	{0xd333, &op_cadd,	  3,   6, 255, 0xff, 0x01, 0x00, 0x01}, // cadd.wr d g  
	{0xd334, &op_cadd,	  4,   6, 255, 0xff, 0x01, 0x00, 0x01}, // cadd.wr e g  
	{0xd335, &op_cadd,	  5,   6, 255, 0xff, 0x01, 0x00, 0x01}, // cadd.wr f g  
	{0xd336, &op_cadd,	  6,   6, 255, 0xff, 0x01, 0x00, 0x01}, // cadd.wr g g  
	{0xd337, &op_cadd,	  7,   6, 255, 0xff, 0x01, 0x00, 0x01}, // cadd.wr h g  
	{0xd338, &op_cadd,	  0,   7, 255, 0xff, 0x01, 0x00, 0x01}, // cadd.wr a h  
	{0xd339, &op_cadd,	  1,   7, 255, 0xff, 0x01, 0x00, 0x01}, // cadd.wr b h  
	{0xd33a, &op_cadd,	  2,   7, 255, 0xff, 0x01, 0x00, 0x01}, // cadd.wr c h  
	{0xd33b, &op_cadd,	  3,   7, 255, 0xff, 0x01, 0x00, 0x01}, // cadd.wr d h  
	{0xd33c, &op_cadd,	  4,   7, 255, 0xff, 0x01, 0x00, 0x01}, // cadd.wr e h  
	{0xd33d, &op_cadd,	  5,   7, 255, 0xff, 0x01, 0x00, 0x01}, // cadd.wr f h  
	{0xd33e, &op_cadd,	  6,   7, 255, 0xff, 0x01, 0x00, 0x01}, // cadd.wr g h  
	{0xd33f, &op_cadd,	  7,   7, 255, 0xff, 0x01, 0x00, 0x01}, // cadd.wr h h  
	{0xd340, &op_cadd,	  0,   0, 255, 0xff, 0x01, 0x00, 0x02}, // cadd.dr a a  
	{0xd341, &op_cadd,	  1,   0, 255, 0xff, 0x01, 0x00, 0x02}, // cadd.dr b a  
	{0xd342, &op_cadd,	  2,   0, 255, 0xff, 0x01, 0x00, 0x02}, // cadd.dr c a  
	{0xd343, &op_cadd,	  3,   0, 255, 0xff, 0x01, 0x00, 0x02}, // cadd.dr d a  
	{0xd344, &op_cadd,	  4,   0, 255, 0xff, 0x01, 0x00, 0x02}, // cadd.dr e a  
	{0xd345, &op_cadd,	  5,   0, 255, 0xff, 0x01, 0x00, 0x02}, // cadd.dr f a  
	{0xd346, &op_cadd,	  6,   0, 255, 0xff, 0x01, 0x00, 0x02}, // cadd.dr g a  
	{0xd347, &op_cadd,	  7,   0, 255, 0xff, 0x01, 0x00, 0x02}, // cadd.dr h a  
	{0xd348, &op_cadd,	  0,   1, 255, 0xff, 0x01, 0x00, 0x02}, // cadd.dr a b  
	{0xd349, &op_cadd,	  1,   1, 255, 0xff, 0x01, 0x00, 0x02}, // cadd.dr b b  
	{0xd34a, &op_cadd,	  2,   1, 255, 0xff, 0x01, 0x00, 0x02}, // cadd.dr c b  
	{0xd34b, &op_cadd,	  3,   1, 255, 0xff, 0x01, 0x00, 0x02}, // cadd.dr d b  
	{0xd34c, &op_cadd,	  4,   1, 255, 0xff, 0x01, 0x00, 0x02}, // cadd.dr e b  
	{0xd34d, &op_cadd,	  5,   1, 255, 0xff, 0x01, 0x00, 0x02}, // cadd.dr f b  
	{0xd34e, &op_cadd,	  6,   1, 255, 0xff, 0x01, 0x00, 0x02}, // cadd.dr g b  
	{0xd34f, &op_cadd,	  7,   1, 255, 0xff, 0x01, 0x00, 0x02}, // cadd.dr h b  
	{0xd350, &op_cadd,	  0,   2, 255, 0xff, 0x01, 0x00, 0x02}, // cadd.dr a c  
	{0xd351, &op_cadd,	  1,   2, 255, 0xff, 0x01, 0x00, 0x02}, // cadd.dr b c  
	{0xd352, &op_cadd,	  2,   2, 255, 0xff, 0x01, 0x00, 0x02}, // cadd.dr c c  
	{0xd353, &op_cadd,	  3,   2, 255, 0xff, 0x01, 0x00, 0x02}, // cadd.dr d c  
	{0xd354, &op_cadd,	  4,   2, 255, 0xff, 0x01, 0x00, 0x02}, // cadd.dr e c  
	{0xd355, &op_cadd,	  5,   2, 255, 0xff, 0x01, 0x00, 0x02}, // cadd.dr f c  
	{0xd356, &op_cadd,	  6,   2, 255, 0xff, 0x01, 0x00, 0x02}, // cadd.dr g c  
	{0xd357, &op_cadd,	  7,   2, 255, 0xff, 0x01, 0x00, 0x02}, // cadd.dr h c  
	{0xd358, &op_cadd,	  0,   3, 255, 0xff, 0x01, 0x00, 0x02}, // cadd.dr a d  
	{0xd359, &op_cadd,	  1,   3, 255, 0xff, 0x01, 0x00, 0x02}, // cadd.dr b d  
	{0xd35a, &op_cadd,	  2,   3, 255, 0xff, 0x01, 0x00, 0x02}, // cadd.dr c d  
	{0xd35b, &op_cadd,	  3,   3, 255, 0xff, 0x01, 0x00, 0x02}, // cadd.dr d d  
	{0xd35c, &op_cadd,	  4,   3, 255, 0xff, 0x01, 0x00, 0x02}, // cadd.dr e d  
	{0xd35d, &op_cadd,	  5,   3, 255, 0xff, 0x01, 0x00, 0x02}, // cadd.dr f d  
	{0xd35e, &op_cadd,	  6,   3, 255, 0xff, 0x01, 0x00, 0x02}, // cadd.dr g d  
	{0xd35f, &op_cadd,	  7,   3, 255, 0xff, 0x01, 0x00, 0x02}, // cadd.dr h d  
	{0xd360, &op_cadd,	  0,   4, 255, 0xff, 0x01, 0x00, 0x02}, // cadd.dr a e  
	{0xd361, &op_cadd,	  1,   4, 255, 0xff, 0x01, 0x00, 0x02}, // cadd.dr b e  
	{0xd362, &op_cadd,	  2,   4, 255, 0xff, 0x01, 0x00, 0x02}, // cadd.dr c e  
	{0xd363, &op_cadd,	  3,   4, 255, 0xff, 0x01, 0x00, 0x02}, // cadd.dr d e  
	{0xd364, &op_cadd,	  4,   4, 255, 0xff, 0x01, 0x00, 0x02}, // cadd.dr e e  
	{0xd365, &op_cadd,	  5,   4, 255, 0xff, 0x01, 0x00, 0x02}, // cadd.dr f e  
	{0xd366, &op_cadd,	  6,   4, 255, 0xff, 0x01, 0x00, 0x02}, // cadd.dr g e  
	{0xd367, &op_cadd,	  7,   4, 255, 0xff, 0x01, 0x00, 0x02}, // cadd.dr h e  
	{0xd368, &op_cadd,	  0,   5, 255, 0xff, 0x01, 0x00, 0x02}, // cadd.dr a f  
	{0xd369, &op_cadd,	  1,   5, 255, 0xff, 0x01, 0x00, 0x02}, // cadd.dr b f  
	{0xd36a, &op_cadd,	  2,   5, 255, 0xff, 0x01, 0x00, 0x02}, // cadd.dr c f  
	{0xd36b, &op_cadd,	  3,   5, 255, 0xff, 0x01, 0x00, 0x02}, // cadd.dr d f  
	{0xd36c, &op_cadd,	  4,   5, 255, 0xff, 0x01, 0x00, 0x02}, // cadd.dr e f  
	{0xd36d, &op_cadd,	  5,   5, 255, 0xff, 0x01, 0x00, 0x02}, // cadd.dr f f  
	{0xd36e, &op_cadd,	  6,   5, 255, 0xff, 0x01, 0x00, 0x02}, // cadd.dr g f  
	{0xd36f, &op_cadd,	  7,   5, 255, 0xff, 0x01, 0x00, 0x02}, // cadd.dr h f  
	{0xd370, &op_cadd,	  0,   6, 255, 0xff, 0x01, 0x00, 0x02}, // cadd.dr a g  
	{0xd371, &op_cadd,	  1,   6, 255, 0xff, 0x01, 0x00, 0x02}, // cadd.dr b g  
	{0xd372, &op_cadd,	  2,   6, 255, 0xff, 0x01, 0x00, 0x02}, // cadd.dr c g  
	{0xd373, &op_cadd,	  3,   6, 255, 0xff, 0x01, 0x00, 0x02}, // cadd.dr d g  
	{0xd374, &op_cadd,	  4,   6, 255, 0xff, 0x01, 0x00, 0x02}, // cadd.dr e g  
	{0xd375, &op_cadd,	  5,   6, 255, 0xff, 0x01, 0x00, 0x02}, // cadd.dr f g  
	{0xd376, &op_cadd,	  6,   6, 255, 0xff, 0x01, 0x00, 0x02}, // cadd.dr g g  
	{0xd377, &op_cadd,	  7,   6, 255, 0xff, 0x01, 0x00, 0x02}, // cadd.dr h g  
	{0xd378, &op_cadd,	  0,   7, 255, 0xff, 0x01, 0x00, 0x02}, // cadd.dr a h  
	{0xd379, &op_cadd,	  1,   7, 255, 0xff, 0x01, 0x00, 0x02}, // cadd.dr b h  
	{0xd37a, &op_cadd,	  2,   7, 255, 0xff, 0x01, 0x00, 0x02}, // cadd.dr c h  
	{0xd37b, &op_cadd,	  3,   7, 255, 0xff, 0x01, 0x00, 0x02}, // cadd.dr d h  
	{0xd37c, &op_cadd,	  4,   7, 255, 0xff, 0x01, 0x00, 0x02}, // cadd.dr e h  
	{0xd37d, &op_cadd,	  5,   7, 255, 0xff, 0x01, 0x00, 0x02}, // cadd.dr f h  
	{0xd37e, &op_cadd,	  6,   7, 255, 0xff, 0x01, 0x00, 0x02}, // cadd.dr g h  
	{0xd37f, &op_cadd,	  7,   7, 255, 0xff, 0x01, 0x00, 0x02}, // cadd.dr h h  
	{0xd380, &op_cadd,	  0,   0, 255, 0xff, 0x01, 0x00, 0x04}, // cadd.r a a  
	{0xd381, &op_cadd,	  1,   0, 255, 0xff, 0x01, 0x00, 0x04}, // cadd.r b a  
	{0xd382, &op_cadd,	  2,   0, 255, 0xff, 0x01, 0x00, 0x04}, // cadd.r c a  
	{0xd383, &op_cadd,	  3,   0, 255, 0xff, 0x01, 0x00, 0x04}, // cadd.r d a  
	{0xd384, &op_cadd,	  4,   0, 255, 0xff, 0x01, 0x00, 0x04}, // cadd.r e a  
	{0xd385, &op_cadd,	  5,   0, 255, 0xff, 0x01, 0x00, 0x04}, // cadd.r f a  
	{0xd386, &op_cadd,	  6,   0, 255, 0xff, 0x01, 0x00, 0x04}, // cadd.r g a  
	{0xd387, &op_cadd,	  7,   0, 255, 0xff, 0x01, 0x00, 0x04}, // cadd.r h a  
	{0xd388, &op_cadd,	  0,   1, 255, 0xff, 0x01, 0x00, 0x04}, // cadd.r a b  
	{0xd389, &op_cadd,	  1,   1, 255, 0xff, 0x01, 0x00, 0x04}, // cadd.r b b  
	{0xd38a, &op_cadd,	  2,   1, 255, 0xff, 0x01, 0x00, 0x04}, // cadd.r c b  
	{0xd38b, &op_cadd,	  3,   1, 255, 0xff, 0x01, 0x00, 0x04}, // cadd.r d b  
	{0xd38c, &op_cadd,	  4,   1, 255, 0xff, 0x01, 0x00, 0x04}, // cadd.r e b  
	{0xd38d, &op_cadd,	  5,   1, 255, 0xff, 0x01, 0x00, 0x04}, // cadd.r f b  
	{0xd38e, &op_cadd,	  6,   1, 255, 0xff, 0x01, 0x00, 0x04}, // cadd.r g b  
	{0xd38f, &op_cadd,	  7,   1, 255, 0xff, 0x01, 0x00, 0x04}, // cadd.r h b  
	{0xd390, &op_cadd,	  0,   2, 255, 0xff, 0x01, 0x00, 0x04}, // cadd.r a c  
	{0xd391, &op_cadd,	  1,   2, 255, 0xff, 0x01, 0x00, 0x04}, // cadd.r b c  
	{0xd392, &op_cadd,	  2,   2, 255, 0xff, 0x01, 0x00, 0x04}, // cadd.r c c  
	{0xd393, &op_cadd,	  3,   2, 255, 0xff, 0x01, 0x00, 0x04}, // cadd.r d c  
	{0xd394, &op_cadd,	  4,   2, 255, 0xff, 0x01, 0x00, 0x04}, // cadd.r e c  
	{0xd395, &op_cadd,	  5,   2, 255, 0xff, 0x01, 0x00, 0x04}, // cadd.r f c  
	{0xd396, &op_cadd,	  6,   2, 255, 0xff, 0x01, 0x00, 0x04}, // cadd.r g c  
	{0xd397, &op_cadd,	  7,   2, 255, 0xff, 0x01, 0x00, 0x04}, // cadd.r h c  
	{0xd398, &op_cadd,	  0,   3, 255, 0xff, 0x01, 0x00, 0x04}, // cadd.r a d  
	{0xd399, &op_cadd,	  1,   3, 255, 0xff, 0x01, 0x00, 0x04}, // cadd.r b d  
	{0xd39a, &op_cadd,	  2,   3, 255, 0xff, 0x01, 0x00, 0x04}, // cadd.r c d  
	{0xd39b, &op_cadd,	  3,   3, 255, 0xff, 0x01, 0x00, 0x04}, // cadd.r d d  
	{0xd39c, &op_cadd,	  4,   3, 255, 0xff, 0x01, 0x00, 0x04}, // cadd.r e d  
	{0xd39d, &op_cadd,	  5,   3, 255, 0xff, 0x01, 0x00, 0x04}, // cadd.r f d  
	{0xd39e, &op_cadd,	  6,   3, 255, 0xff, 0x01, 0x00, 0x04}, // cadd.r g d  
	{0xd39f, &op_cadd,	  7,   3, 255, 0xff, 0x01, 0x00, 0x04}, // cadd.r h d  
	{0xd3a0, &op_cadd,	  0,   4, 255, 0xff, 0x01, 0x00, 0x04}, // cadd.r a e  
	{0xd3a1, &op_cadd,	  1,   4, 255, 0xff, 0x01, 0x00, 0x04}, // cadd.r b e  
	{0xd3a2, &op_cadd,	  2,   4, 255, 0xff, 0x01, 0x00, 0x04}, // cadd.r c e  
	{0xd3a3, &op_cadd,	  3,   4, 255, 0xff, 0x01, 0x00, 0x04}, // cadd.r d e  
	{0xd3a4, &op_cadd,	  4,   4, 255, 0xff, 0x01, 0x00, 0x04}, // cadd.r e e  
	{0xd3a5, &op_cadd,	  5,   4, 255, 0xff, 0x01, 0x00, 0x04}, // cadd.r f e  
	{0xd3a6, &op_cadd,	  6,   4, 255, 0xff, 0x01, 0x00, 0x04}, // cadd.r g e  
	{0xd3a7, &op_cadd,	  7,   4, 255, 0xff, 0x01, 0x00, 0x04}, // cadd.r h e  
	{0xd3a8, &op_cadd,	  0,   5, 255, 0xff, 0x01, 0x00, 0x04}, // cadd.r a f  
	{0xd3a9, &op_cadd,	  1,   5, 255, 0xff, 0x01, 0x00, 0x04}, // cadd.r b f  
	{0xd3aa, &op_cadd,	  2,   5, 255, 0xff, 0x01, 0x00, 0x04}, // cadd.r c f  
	{0xd3ab, &op_cadd,	  3,   5, 255, 0xff, 0x01, 0x00, 0x04}, // cadd.r d f  
	{0xd3ac, &op_cadd,	  4,   5, 255, 0xff, 0x01, 0x00, 0x04}, // cadd.r e f  
	{0xd3ad, &op_cadd,	  5,   5, 255, 0xff, 0x01, 0x00, 0x04}, // cadd.r f f  
	{0xd3ae, &op_cadd,	  6,   5, 255, 0xff, 0x01, 0x00, 0x04}, // cadd.r g f  
	{0xd3af, &op_cadd,	  7,   5, 255, 0xff, 0x01, 0x00, 0x04}, // cadd.r h f  
	{0xd3b0, &op_cadd,	  0,   6, 255, 0xff, 0x01, 0x00, 0x04}, // cadd.r a g  
	{0xd3b1, &op_cadd,	  1,   6, 255, 0xff, 0x01, 0x00, 0x04}, // cadd.r b g  
	{0xd3b2, &op_cadd,	  2,   6, 255, 0xff, 0x01, 0x00, 0x04}, // cadd.r c g  
	{0xd3b3, &op_cadd,	  3,   6, 255, 0xff, 0x01, 0x00, 0x04}, // cadd.r d g  
	{0xd3b4, &op_cadd,	  4,   6, 255, 0xff, 0x01, 0x00, 0x04}, // cadd.r e g  
	{0xd3b5, &op_cadd,	  5,   6, 255, 0xff, 0x01, 0x00, 0x04}, // cadd.r f g  
	{0xd3b6, &op_cadd,	  6,   6, 255, 0xff, 0x01, 0x00, 0x04}, // cadd.r g g  
	{0xd3b7, &op_cadd,	  7,   6, 255, 0xff, 0x01, 0x00, 0x04}, // cadd.r h g  
	{0xd3b8, &op_cadd,	  0,   7, 255, 0xff, 0x01, 0x00, 0x04}, // cadd.r a h  
	{0xd3b9, &op_cadd,	  1,   7, 255, 0xff, 0x01, 0x00, 0x04}, // cadd.r b h  
	{0xd3ba, &op_cadd,	  2,   7, 255, 0xff, 0x01, 0x00, 0x04}, // cadd.r c h  
	{0xd3bb, &op_cadd,	  3,   7, 255, 0xff, 0x01, 0x00, 0x04}, // cadd.r d h  
	{0xd3bc, &op_cadd,	  4,   7, 255, 0xff, 0x01, 0x00, 0x04}, // cadd.r e h  
	{0xd3bd, &op_cadd,	  5,   7, 255, 0xff, 0x01, 0x00, 0x04}, // cadd.r f h  
	{0xd3be, &op_cadd,	  6,   7, 255, 0xff, 0x01, 0x00, 0x04}, // cadd.r g h  
	{0xd3bf, &op_cadd,	  7,   7, 255, 0xff, 0x01, 0x00, 0x04}, // cadd.r h h  
	{0xd2c8, &op_cadd,	  0,   8, 255, 0xff, 0x00, 0x01, 0x01}, // cadd.wi a <literal>  
	{0xd2c9, &op_cadd,	  1,   8, 255, 0xff, 0x00, 0x01, 0x01}, // cadd.wi b <literal>  
	{0xd2ca, &op_cadd,	  2,   8, 255, 0xff, 0x00, 0x01, 0x01}, // cadd.wi c <literal>  
	{0xd2cb, &op_cadd,	  3,   8, 255, 0xff, 0x00, 0x01, 0x01}, // cadd.wi d <literal>  
	{0xd2cc, &op_cadd,	  4,   8, 255, 0xff, 0x00, 0x01, 0x01}, // cadd.wi e <literal>  
	{0xd2cd, &op_cadd,	  5,   8, 255, 0xff, 0x00, 0x01, 0x01}, // cadd.wi f <literal>  
	{0xd2ce, &op_cadd,	  6,   8, 255, 0xff, 0x00, 0x01, 0x01}, // cadd.wi g <literal>  
	{0xd2cf, &op_cadd,	  7,   8, 255, 0xff, 0x00, 0x01, 0x01}, // cadd.wi h <literal>  
	{0xd2d0, &op_cadd,	  0,   8, 255, 0xff, 0x00, 0x02, 0x02}, // cadd.di a <literal>  
	{0xd2d1, &op_cadd,	  1,   8, 255, 0xff, 0x00, 0x02, 0x02}, // cadd.di b <literal>  
	{0xd2d2, &op_cadd,	  2,   8, 255, 0xff, 0x00, 0x02, 0x02}, // cadd.di c <literal>  
	{0xd2d3, &op_cadd,	  3,   8, 255, 0xff, 0x00, 0x02, 0x02}, // cadd.di d <literal>  
	{0xd2d4, &op_cadd,	  4,   8, 255, 0xff, 0x00, 0x02, 0x02}, // cadd.di e <literal>  
	{0xd2d5, &op_cadd,	  5,   8, 255, 0xff, 0x00, 0x02, 0x02}, // cadd.di f <literal>  
	{0xd2d6, &op_cadd,	  6,   8, 255, 0xff, 0x00, 0x02, 0x02}, // cadd.di g <literal>  
	{0xd2d7, &op_cadd,	  7,   8, 255, 0xff, 0x00, 0x02, 0x02}, // cadd.di h <literal>  
	{0xd2e0, &op_cadd,	  0,   8, 255, 0xff, 0x00, 0x04, 0x04}, // cadd.i a <literal>  
	{0xd2e1, &op_cadd,	  1,   8, 255, 0xff, 0x00, 0x04, 0x04}, // cadd.i b <literal>  
	{0xd2e2, &op_cadd,	  2,   8, 255, 0xff, 0x00, 0x04, 0x04}, // cadd.i c <literal>  
	{0xd2e3, &op_cadd,	  3,   8, 255, 0xff, 0x00, 0x04, 0x04}, // cadd.i d <literal>  
	{0xd2e4, &op_cadd,	  4,   8, 255, 0xff, 0x00, 0x04, 0x04}, // cadd.i e <literal>  
	{0xd2e5, &op_cadd,	  5,   8, 255, 0xff, 0x00, 0x04, 0x04}, // cadd.i f <literal>  
	{0xd2e6, &op_cadd,	  6,   8, 255, 0xff, 0x00, 0x04, 0x04}, // cadd.i g <literal>  
	{0xd2e7, &op_cadd,	  7,   8, 255, 0xff, 0x00, 0x04, 0x04}, // cadd.i h <literal>  
	{0xd3c8, &op_cadd,	  0,   8, 255, 0xff, 0x01, 0x04, 0x01}, // cadd.wri a <literal>  
	{0xd3c9, &op_cadd,	  1,   8, 255, 0xff, 0x01, 0x04, 0x01}, // cadd.wri b <literal>  
	{0xd3ca, &op_cadd,	  2,   8, 255, 0xff, 0x01, 0x04, 0x01}, // cadd.wri c <literal>  
	{0xd3cb, &op_cadd,	  3,   8, 255, 0xff, 0x01, 0x04, 0x01}, // cadd.wri d <literal>  
	{0xd3cc, &op_cadd,	  4,   8, 255, 0xff, 0x01, 0x04, 0x01}, // cadd.wri e <literal>  
	{0xd3cd, &op_cadd,	  5,   8, 255, 0xff, 0x01, 0x04, 0x01}, // cadd.wri f <literal>  
	{0xd3ce, &op_cadd,	  6,   8, 255, 0xff, 0x01, 0x04, 0x01}, // cadd.wri g <literal>  
	{0xd3cf, &op_cadd,	  7,   8, 255, 0xff, 0x01, 0x04, 0x01}, // cadd.wri h <literal>  
	{0xd3d0, &op_cadd,	  0,   8, 255, 0xff, 0x01, 0x04, 0x02}, // cadd.dri a <literal>  
	{0xd3d1, &op_cadd,	  1,   8, 255, 0xff, 0x01, 0x04, 0x02}, // cadd.dri b <literal>  
	{0xd3d2, &op_cadd,	  2,   8, 255, 0xff, 0x01, 0x04, 0x02}, // cadd.dri c <literal>  
	{0xd3d3, &op_cadd,	  3,   8, 255, 0xff, 0x01, 0x04, 0x02}, // cadd.dri d <literal>  
	{0xd3d4, &op_cadd,	  4,   8, 255, 0xff, 0x01, 0x04, 0x02}, // cadd.dri e <literal>  
	{0xd3d5, &op_cadd,	  5,   8, 255, 0xff, 0x01, 0x04, 0x02}, // cadd.dri f <literal>  
	{0xd3d6, &op_cadd,	  6,   8, 255, 0xff, 0x01, 0x04, 0x02}, // cadd.dri g <literal>  
	{0xd3d7, &op_cadd,	  7,   8, 255, 0xff, 0x01, 0x04, 0x02}, // cadd.dri h <literal>  
	{0xd3e0, &op_cadd,	  0,   8, 255, 0xff, 0x01, 0x04, 0x04}, // cadd.ri a <literal>  
	{0xd3e1, &op_cadd,	  1,   8, 255, 0xff, 0x01, 0x04, 0x04}, // cadd.ri b <literal>  
	{0xd3e2, &op_cadd,	  2,   8, 255, 0xff, 0x01, 0x04, 0x04}, // cadd.ri c <literal>  
	{0xd3e3, &op_cadd,	  3,   8, 255, 0xff, 0x01, 0x04, 0x04}, // cadd.ri d <literal>  
	{0xd3e4, &op_cadd,	  4,   8, 255, 0xff, 0x01, 0x04, 0x04}, // cadd.ri e <literal>  
	{0xd3e5, &op_cadd,	  5,   8, 255, 0xff, 0x01, 0x04, 0x04}, // cadd.ri f <literal>  
	{0xd3e6, &op_cadd,	  6,   8, 255, 0xff, 0x01, 0x04, 0x04}, // cadd.ri g <literal>  
	{0xd3e7, &op_cadd,	  7,   8, 255, 0xff, 0x01, 0x04, 0x04}, // cadd.ri h <literal>  
	{0xd400, &op_clsh,	  0,   0, 255, 0xff, 0x00, 0x00, 0x01}, // clsh.w a a  
	{0xd401, &op_clsh,	  1,   0, 255, 0xff, 0x00, 0x00, 0x01}, // clsh.w b a  
	{0xd402, &op_clsh,	  2,   0, 255, 0xff, 0x00, 0x00, 0x01}, // clsh.w c a  
	{0xd403, &op_clsh,	  3,   0, 255, 0xff, 0x00, 0x00, 0x01}, // clsh.w d a  
	{0xd404, &op_clsh,	  4,   0, 255, 0xff, 0x00, 0x00, 0x01}, // clsh.w e a  
	{0xd405, &op_clsh,	  5,   0, 255, 0xff, 0x00, 0x00, 0x01}, // clsh.w f a  
	{0xd406, &op_clsh,	  6,   0, 255, 0xff, 0x00, 0x00, 0x01}, // clsh.w g a  
	{0xd407, &op_clsh,	  7,   0, 255, 0xff, 0x00, 0x00, 0x01}, // clsh.w h a  
	{0xd408, &op_clsh,	  0,   1, 255, 0xff, 0x00, 0x00, 0x01}, // clsh.w a b  
	{0xd409, &op_clsh,	  1,   1, 255, 0xff, 0x00, 0x00, 0x01}, // clsh.w b b  
	{0xd40a, &op_clsh,	  2,   1, 255, 0xff, 0x00, 0x00, 0x01}, // clsh.w c b  
	{0xd40b, &op_clsh,	  3,   1, 255, 0xff, 0x00, 0x00, 0x01}, // clsh.w d b  
	{0xd40c, &op_clsh,	  4,   1, 255, 0xff, 0x00, 0x00, 0x01}, // clsh.w e b  
	{0xd40d, &op_clsh,	  5,   1, 255, 0xff, 0x00, 0x00, 0x01}, // clsh.w f b  
	{0xd40e, &op_clsh,	  6,   1, 255, 0xff, 0x00, 0x00, 0x01}, // clsh.w g b  
	{0xd40f, &op_clsh,	  7,   1, 255, 0xff, 0x00, 0x00, 0x01}, // clsh.w h b  
	{0xd410, &op_clsh,	  0,   2, 255, 0xff, 0x00, 0x00, 0x01}, // clsh.w a c  
	{0xd411, &op_clsh,	  1,   2, 255, 0xff, 0x00, 0x00, 0x01}, // clsh.w b c  
	{0xd412, &op_clsh,	  2,   2, 255, 0xff, 0x00, 0x00, 0x01}, // clsh.w c c  
	{0xd413, &op_clsh,	  3,   2, 255, 0xff, 0x00, 0x00, 0x01}, // clsh.w d c  
	{0xd414, &op_clsh,	  4,   2, 255, 0xff, 0x00, 0x00, 0x01}, // clsh.w e c  
	{0xd415, &op_clsh,	  5,   2, 255, 0xff, 0x00, 0x00, 0x01}, // clsh.w f c  
	{0xd416, &op_clsh,	  6,   2, 255, 0xff, 0x00, 0x00, 0x01}, // clsh.w g c  
	{0xd417, &op_clsh,	  7,   2, 255, 0xff, 0x00, 0x00, 0x01}, // clsh.w h c  
	{0xd418, &op_clsh,	  0,   3, 255, 0xff, 0x00, 0x00, 0x01}, // clsh.w a d  
	{0xd419, &op_clsh,	  1,   3, 255, 0xff, 0x00, 0x00, 0x01}, // clsh.w b d  
	{0xd41a, &op_clsh,	  2,   3, 255, 0xff, 0x00, 0x00, 0x01}, // clsh.w c d  
	{0xd41b, &op_clsh,	  3,   3, 255, 0xff, 0x00, 0x00, 0x01}, // clsh.w d d  
	{0xd41c, &op_clsh,	  4,   3, 255, 0xff, 0x00, 0x00, 0x01}, // clsh.w e d  
	{0xd41d, &op_clsh,	  5,   3, 255, 0xff, 0x00, 0x00, 0x01}, // clsh.w f d  
	{0xd41e, &op_clsh,	  6,   3, 255, 0xff, 0x00, 0x00, 0x01}, // clsh.w g d  
	{0xd41f, &op_clsh,	  7,   3, 255, 0xff, 0x00, 0x00, 0x01}, // clsh.w h d  
	{0xd420, &op_clsh,	  0,   4, 255, 0xff, 0x00, 0x00, 0x01}, // clsh.w a e  
	{0xd421, &op_clsh,	  1,   4, 255, 0xff, 0x00, 0x00, 0x01}, // clsh.w b e  
	{0xd422, &op_clsh,	  2,   4, 255, 0xff, 0x00, 0x00, 0x01}, // clsh.w c e  
	{0xd423, &op_clsh,	  3,   4, 255, 0xff, 0x00, 0x00, 0x01}, // clsh.w d e  
	{0xd424, &op_clsh,	  4,   4, 255, 0xff, 0x00, 0x00, 0x01}, // clsh.w e e  
	{0xd425, &op_clsh,	  5,   4, 255, 0xff, 0x00, 0x00, 0x01}, // clsh.w f e  
	{0xd426, &op_clsh,	  6,   4, 255, 0xff, 0x00, 0x00, 0x01}, // clsh.w g e  
	{0xd427, &op_clsh,	  7,   4, 255, 0xff, 0x00, 0x00, 0x01}, // clsh.w h e  
	{0xd428, &op_clsh,	  0,   5, 255, 0xff, 0x00, 0x00, 0x01}, // clsh.w a f  
	{0xd429, &op_clsh,	  1,   5, 255, 0xff, 0x00, 0x00, 0x01}, // clsh.w b f  
	{0xd42a, &op_clsh,	  2,   5, 255, 0xff, 0x00, 0x00, 0x01}, // clsh.w c f  
	{0xd42b, &op_clsh,	  3,   5, 255, 0xff, 0x00, 0x00, 0x01}, // clsh.w d f  
	{0xd42c, &op_clsh,	  4,   5, 255, 0xff, 0x00, 0x00, 0x01}, // clsh.w e f  
	{0xd42d, &op_clsh,	  5,   5, 255, 0xff, 0x00, 0x00, 0x01}, // clsh.w f f  
	{0xd42e, &op_clsh,	  6,   5, 255, 0xff, 0x00, 0x00, 0x01}, // clsh.w g f  
	{0xd42f, &op_clsh,	  7,   5, 255, 0xff, 0x00, 0x00, 0x01}, // clsh.w h f  
	{0xd430, &op_clsh,	  0,   6, 255, 0xff, 0x00, 0x00, 0x01}, // clsh.w a g  
	{0xd431, &op_clsh,	  1,   6, 255, 0xff, 0x00, 0x00, 0x01}, // clsh.w b g  
	{0xd432, &op_clsh,	  2,   6, 255, 0xff, 0x00, 0x00, 0x01}, // clsh.w c g  
	{0xd433, &op_clsh,	  3,   6, 255, 0xff, 0x00, 0x00, 0x01}, // clsh.w d g  
	{0xd434, &op_clsh,	  4,   6, 255, 0xff, 0x00, 0x00, 0x01}, // clsh.w e g  
	{0xd435, &op_clsh,	  5,   6, 255, 0xff, 0x00, 0x00, 0x01}, // clsh.w f g  
	{0xd436, &op_clsh,	  6,   6, 255, 0xff, 0x00, 0x00, 0x01}, // clsh.w g g  
	{0xd437, &op_clsh,	  7,   6, 255, 0xff, 0x00, 0x00, 0x01}, // clsh.w h g  
	{0xd438, &op_clsh,	  0,   7, 255, 0xff, 0x00, 0x00, 0x01}, // clsh.w a h  
	{0xd439, &op_clsh,	  1,   7, 255, 0xff, 0x00, 0x00, 0x01}, // clsh.w b h  
	{0xd43a, &op_clsh,	  2,   7, 255, 0xff, 0x00, 0x00, 0x01}, // clsh.w c h  
	{0xd43b, &op_clsh,	  3,   7, 255, 0xff, 0x00, 0x00, 0x01}, // clsh.w d h  
	{0xd43c, &op_clsh,	  4,   7, 255, 0xff, 0x00, 0x00, 0x01}, // clsh.w e h  
	{0xd43d, &op_clsh,	  5,   7, 255, 0xff, 0x00, 0x00, 0x01}, // clsh.w f h  
	{0xd43e, &op_clsh,	  6,   7, 255, 0xff, 0x00, 0x00, 0x01}, // clsh.w g h  
	{0xd43f, &op_clsh,	  7,   7, 255, 0xff, 0x00, 0x00, 0x01}, // clsh.w h h  
	{0xd440, &op_clsh,	  0,   0, 255, 0xff, 0x00, 0x00, 0x02}, // clsh.d a a  
	{0xd441, &op_clsh,	  1,   0, 255, 0xff, 0x00, 0x00, 0x02}, // clsh.d b a  
	{0xd442, &op_clsh,	  2,   0, 255, 0xff, 0x00, 0x00, 0x02}, // clsh.d c a  
	{0xd443, &op_clsh,	  3,   0, 255, 0xff, 0x00, 0x00, 0x02}, // clsh.d d a  
	{0xd444, &op_clsh,	  4,   0, 255, 0xff, 0x00, 0x00, 0x02}, // clsh.d e a  
	{0xd445, &op_clsh,	  5,   0, 255, 0xff, 0x00, 0x00, 0x02}, // clsh.d f a  
	{0xd446, &op_clsh,	  6,   0, 255, 0xff, 0x00, 0x00, 0x02}, // clsh.d g a  
	{0xd447, &op_clsh,	  7,   0, 255, 0xff, 0x00, 0x00, 0x02}, // clsh.d h a  
	{0xd448, &op_clsh,	  0,   1, 255, 0xff, 0x00, 0x00, 0x02}, // clsh.d a b  
	{0xd449, &op_clsh,	  1,   1, 255, 0xff, 0x00, 0x00, 0x02}, // clsh.d b b  
	{0xd44a, &op_clsh,	  2,   1, 255, 0xff, 0x00, 0x00, 0x02}, // clsh.d c b  
	{0xd44b, &op_clsh,	  3,   1, 255, 0xff, 0x00, 0x00, 0x02}, // clsh.d d b  
	{0xd44c, &op_clsh,	  4,   1, 255, 0xff, 0x00, 0x00, 0x02}, // clsh.d e b  
	{0xd44d, &op_clsh,	  5,   1, 255, 0xff, 0x00, 0x00, 0x02}, // clsh.d f b  
	{0xd44e, &op_clsh,	  6,   1, 255, 0xff, 0x00, 0x00, 0x02}, // clsh.d g b  
	{0xd44f, &op_clsh,	  7,   1, 255, 0xff, 0x00, 0x00, 0x02}, // clsh.d h b  
	{0xd450, &op_clsh,	  0,   2, 255, 0xff, 0x00, 0x00, 0x02}, // clsh.d a c  
	{0xd451, &op_clsh,	  1,   2, 255, 0xff, 0x00, 0x00, 0x02}, // clsh.d b c  
	{0xd452, &op_clsh,	  2,   2, 255, 0xff, 0x00, 0x00, 0x02}, // clsh.d c c  
	{0xd453, &op_clsh,	  3,   2, 255, 0xff, 0x00, 0x00, 0x02}, // clsh.d d c  
	{0xd454, &op_clsh,	  4,   2, 255, 0xff, 0x00, 0x00, 0x02}, // clsh.d e c  
	{0xd455, &op_clsh,	  5,   2, 255, 0xff, 0x00, 0x00, 0x02}, // clsh.d f c  
	{0xd456, &op_clsh,	  6,   2, 255, 0xff, 0x00, 0x00, 0x02}, // clsh.d g c  
	{0xd457, &op_clsh,	  7,   2, 255, 0xff, 0x00, 0x00, 0x02}, // clsh.d h c  
	{0xd458, &op_clsh,	  0,   3, 255, 0xff, 0x00, 0x00, 0x02}, // clsh.d a d  
	{0xd459, &op_clsh,	  1,   3, 255, 0xff, 0x00, 0x00, 0x02}, // clsh.d b d  
	{0xd45a, &op_clsh,	  2,   3, 255, 0xff, 0x00, 0x00, 0x02}, // clsh.d c d  
	{0xd45b, &op_clsh,	  3,   3, 255, 0xff, 0x00, 0x00, 0x02}, // clsh.d d d  
	{0xd45c, &op_clsh,	  4,   3, 255, 0xff, 0x00, 0x00, 0x02}, // clsh.d e d  
	{0xd45d, &op_clsh,	  5,   3, 255, 0xff, 0x00, 0x00, 0x02}, // clsh.d f d  
	{0xd45e, &op_clsh,	  6,   3, 255, 0xff, 0x00, 0x00, 0x02}, // clsh.d g d  
	{0xd45f, &op_clsh,	  7,   3, 255, 0xff, 0x00, 0x00, 0x02}, // clsh.d h d  
	{0xd460, &op_clsh,	  0,   4, 255, 0xff, 0x00, 0x00, 0x02}, // clsh.d a e  
	{0xd461, &op_clsh,	  1,   4, 255, 0xff, 0x00, 0x00, 0x02}, // clsh.d b e  
	{0xd462, &op_clsh,	  2,   4, 255, 0xff, 0x00, 0x00, 0x02}, // clsh.d c e  
	{0xd463, &op_clsh,	  3,   4, 255, 0xff, 0x00, 0x00, 0x02}, // clsh.d d e  
	{0xd464, &op_clsh,	  4,   4, 255, 0xff, 0x00, 0x00, 0x02}, // clsh.d e e  
	{0xd465, &op_clsh,	  5,   4, 255, 0xff, 0x00, 0x00, 0x02}, // clsh.d f e  
	{0xd466, &op_clsh,	  6,   4, 255, 0xff, 0x00, 0x00, 0x02}, // clsh.d g e  
	{0xd467, &op_clsh,	  7,   4, 255, 0xff, 0x00, 0x00, 0x02}, // clsh.d h e  
	{0xd468, &op_clsh,	  0,   5, 255, 0xff, 0x00, 0x00, 0x02}, // clsh.d a f  
	{0xd469, &op_clsh,	  1,   5, 255, 0xff, 0x00, 0x00, 0x02}, // clsh.d b f  
	{0xd46a, &op_clsh,	  2,   5, 255, 0xff, 0x00, 0x00, 0x02}, // clsh.d c f  
	{0xd46b, &op_clsh,	  3,   5, 255, 0xff, 0x00, 0x00, 0x02}, // clsh.d d f  
	{0xd46c, &op_clsh,	  4,   5, 255, 0xff, 0x00, 0x00, 0x02}, // clsh.d e f  
	{0xd46d, &op_clsh,	  5,   5, 255, 0xff, 0x00, 0x00, 0x02}, // clsh.d f f  
	{0xd46e, &op_clsh,	  6,   5, 255, 0xff, 0x00, 0x00, 0x02}, // clsh.d g f  
	{0xd46f, &op_clsh,	  7,   5, 255, 0xff, 0x00, 0x00, 0x02}, // clsh.d h f  
	{0xd470, &op_clsh,	  0,   6, 255, 0xff, 0x00, 0x00, 0x02}, // clsh.d a g  
	{0xd471, &op_clsh,	  1,   6, 255, 0xff, 0x00, 0x00, 0x02}, // clsh.d b g  
	{0xd472, &op_clsh,	  2,   6, 255, 0xff, 0x00, 0x00, 0x02}, // clsh.d c g  
	{0xd473, &op_clsh,	  3,   6, 255, 0xff, 0x00, 0x00, 0x02}, // clsh.d d g  
	{0xd474, &op_clsh,	  4,   6, 255, 0xff, 0x00, 0x00, 0x02}, // clsh.d e g  
	{0xd475, &op_clsh,	  5,   6, 255, 0xff, 0x00, 0x00, 0x02}, // clsh.d f g  
	{0xd476, &op_clsh,	  6,   6, 255, 0xff, 0x00, 0x00, 0x02}, // clsh.d g g  
	{0xd477, &op_clsh,	  7,   6, 255, 0xff, 0x00, 0x00, 0x02}, // clsh.d h g  
	{0xd478, &op_clsh,	  0,   7, 255, 0xff, 0x00, 0x00, 0x02}, // clsh.d a h  
	{0xd479, &op_clsh,	  1,   7, 255, 0xff, 0x00, 0x00, 0x02}, // clsh.d b h  
	{0xd47a, &op_clsh,	  2,   7, 255, 0xff, 0x00, 0x00, 0x02}, // clsh.d c h  
	{0xd47b, &op_clsh,	  3,   7, 255, 0xff, 0x00, 0x00, 0x02}, // clsh.d d h  
	{0xd47c, &op_clsh,	  4,   7, 255, 0xff, 0x00, 0x00, 0x02}, // clsh.d e h  
	{0xd47d, &op_clsh,	  5,   7, 255, 0xff, 0x00, 0x00, 0x02}, // clsh.d f h  
	{0xd47e, &op_clsh,	  6,   7, 255, 0xff, 0x00, 0x00, 0x02}, // clsh.d g h  
	{0xd47f, &op_clsh,	  7,   7, 255, 0xff, 0x00, 0x00, 0x02}, // clsh.d h h  
	{0xd480, &op_clsh,	  0,   0, 255, 0xff, 0x00, 0x00, 0x04}, // clsh a a  
	{0xd481, &op_clsh,	  1,   0, 255, 0xff, 0x00, 0x00, 0x04}, // clsh b a  
	{0xd482, &op_clsh,	  2,   0, 255, 0xff, 0x00, 0x00, 0x04}, // clsh c a  
	{0xd483, &op_clsh,	  3,   0, 255, 0xff, 0x00, 0x00, 0x04}, // clsh d a  
	{0xd484, &op_clsh,	  4,   0, 255, 0xff, 0x00, 0x00, 0x04}, // clsh e a  
	{0xd485, &op_clsh,	  5,   0, 255, 0xff, 0x00, 0x00, 0x04}, // clsh f a  
	{0xd486, &op_clsh,	  6,   0, 255, 0xff, 0x00, 0x00, 0x04}, // clsh g a  
	{0xd487, &op_clsh,	  7,   0, 255, 0xff, 0x00, 0x00, 0x04}, // clsh h a  
	{0xd488, &op_clsh,	  0,   1, 255, 0xff, 0x00, 0x00, 0x04}, // clsh a b  
	{0xd489, &op_clsh,	  1,   1, 255, 0xff, 0x00, 0x00, 0x04}, // clsh b b  
	{0xd48a, &op_clsh,	  2,   1, 255, 0xff, 0x00, 0x00, 0x04}, // clsh c b  
	{0xd48b, &op_clsh,	  3,   1, 255, 0xff, 0x00, 0x00, 0x04}, // clsh d b  
	{0xd48c, &op_clsh,	  4,   1, 255, 0xff, 0x00, 0x00, 0x04}, // clsh e b  
	{0xd48d, &op_clsh,	  5,   1, 255, 0xff, 0x00, 0x00, 0x04}, // clsh f b  
	{0xd48e, &op_clsh,	  6,   1, 255, 0xff, 0x00, 0x00, 0x04}, // clsh g b  
	{0xd48f, &op_clsh,	  7,   1, 255, 0xff, 0x00, 0x00, 0x04}, // clsh h b  
	{0xd490, &op_clsh,	  0,   2, 255, 0xff, 0x00, 0x00, 0x04}, // clsh a c  
	{0xd491, &op_clsh,	  1,   2, 255, 0xff, 0x00, 0x00, 0x04}, // clsh b c  
	{0xd492, &op_clsh,	  2,   2, 255, 0xff, 0x00, 0x00, 0x04}, // clsh c c  
	{0xd493, &op_clsh,	  3,   2, 255, 0xff, 0x00, 0x00, 0x04}, // clsh d c  
	{0xd494, &op_clsh,	  4,   2, 255, 0xff, 0x00, 0x00, 0x04}, // clsh e c  
	{0xd495, &op_clsh,	  5,   2, 255, 0xff, 0x00, 0x00, 0x04}, // clsh f c  
	{0xd496, &op_clsh,	  6,   2, 255, 0xff, 0x00, 0x00, 0x04}, // clsh g c  
	{0xd497, &op_clsh,	  7,   2, 255, 0xff, 0x00, 0x00, 0x04}, // clsh h c  
	{0xd498, &op_clsh,	  0,   3, 255, 0xff, 0x00, 0x00, 0x04}, // clsh a d  
	{0xd499, &op_clsh,	  1,   3, 255, 0xff, 0x00, 0x00, 0x04}, // clsh b d  
	{0xd49a, &op_clsh,	  2,   3, 255, 0xff, 0x00, 0x00, 0x04}, // clsh c d  
	{0xd49b, &op_clsh,	  3,   3, 255, 0xff, 0x00, 0x00, 0x04}, // clsh d d  
	{0xd49c, &op_clsh,	  4,   3, 255, 0xff, 0x00, 0x00, 0x04}, // clsh e d  
	{0xd49d, &op_clsh,	  5,   3, 255, 0xff, 0x00, 0x00, 0x04}, // clsh f d  
	{0xd49e, &op_clsh,	  6,   3, 255, 0xff, 0x00, 0x00, 0x04}, // clsh g d  
	{0xd49f, &op_clsh,	  7,   3, 255, 0xff, 0x00, 0x00, 0x04}, // clsh h d  
	{0xd4a0, &op_clsh,	  0,   4, 255, 0xff, 0x00, 0x00, 0x04}, // clsh a e  
	{0xd4a1, &op_clsh,	  1,   4, 255, 0xff, 0x00, 0x00, 0x04}, // clsh b e  
	{0xd4a2, &op_clsh,	  2,   4, 255, 0xff, 0x00, 0x00, 0x04}, // clsh c e  
	{0xd4a3, &op_clsh,	  3,   4, 255, 0xff, 0x00, 0x00, 0x04}, // clsh d e  
	{0xd4a4, &op_clsh,	  4,   4, 255, 0xff, 0x00, 0x00, 0x04}, // clsh e e  
	{0xd4a5, &op_clsh,	  5,   4, 255, 0xff, 0x00, 0x00, 0x04}, // clsh f e  
	{0xd4a6, &op_clsh,	  6,   4, 255, 0xff, 0x00, 0x00, 0x04}, // clsh g e  
	{0xd4a7, &op_clsh,	  7,   4, 255, 0xff, 0x00, 0x00, 0x04}, // clsh h e  
	{0xd4a8, &op_clsh,	  0,   5, 255, 0xff, 0x00, 0x00, 0x04}, // clsh a f  
	{0xd4a9, &op_clsh,	  1,   5, 255, 0xff, 0x00, 0x00, 0x04}, // clsh b f  
	{0xd4aa, &op_clsh,	  2,   5, 255, 0xff, 0x00, 0x00, 0x04}, // clsh c f  
	{0xd4ab, &op_clsh,	  3,   5, 255, 0xff, 0x00, 0x00, 0x04}, // clsh d f  
	{0xd4ac, &op_clsh,	  4,   5, 255, 0xff, 0x00, 0x00, 0x04}, // clsh e f  
	{0xd4ad, &op_clsh,	  5,   5, 255, 0xff, 0x00, 0x00, 0x04}, // clsh f f  
	{0xd4ae, &op_clsh,	  6,   5, 255, 0xff, 0x00, 0x00, 0x04}, // clsh g f  
	{0xd4af, &op_clsh,	  7,   5, 255, 0xff, 0x00, 0x00, 0x04}, // clsh h f  
	{0xd4b0, &op_clsh,	  0,   6, 255, 0xff, 0x00, 0x00, 0x04}, // clsh a g  
	{0xd4b1, &op_clsh,	  1,   6, 255, 0xff, 0x00, 0x00, 0x04}, // clsh b g  
	{0xd4b2, &op_clsh,	  2,   6, 255, 0xff, 0x00, 0x00, 0x04}, // clsh c g  
	{0xd4b3, &op_clsh,	  3,   6, 255, 0xff, 0x00, 0x00, 0x04}, // clsh d g  
	{0xd4b4, &op_clsh,	  4,   6, 255, 0xff, 0x00, 0x00, 0x04}, // clsh e g  
	{0xd4b5, &op_clsh,	  5,   6, 255, 0xff, 0x00, 0x00, 0x04}, // clsh f g  
	{0xd4b6, &op_clsh,	  6,   6, 255, 0xff, 0x00, 0x00, 0x04}, // clsh g g  
	{0xd4b7, &op_clsh,	  7,   6, 255, 0xff, 0x00, 0x00, 0x04}, // clsh h g  
	{0xd4b8, &op_clsh,	  0,   7, 255, 0xff, 0x00, 0x00, 0x04}, // clsh a h  
	{0xd4b9, &op_clsh,	  1,   7, 255, 0xff, 0x00, 0x00, 0x04}, // clsh b h  
	{0xd4ba, &op_clsh,	  2,   7, 255, 0xff, 0x00, 0x00, 0x04}, // clsh c h  
	{0xd4bb, &op_clsh,	  3,   7, 255, 0xff, 0x00, 0x00, 0x04}, // clsh d h  
	{0xd4bc, &op_clsh,	  4,   7, 255, 0xff, 0x00, 0x00, 0x04}, // clsh e h  
	{0xd4bd, &op_clsh,	  5,   7, 255, 0xff, 0x00, 0x00, 0x04}, // clsh f h  
	{0xd4be, &op_clsh,	  6,   7, 255, 0xff, 0x00, 0x00, 0x04}, // clsh g h  
	{0xd4bf, &op_clsh,	  7,   7, 255, 0xff, 0x00, 0x00, 0x04}, // clsh h h  
	{0xd500, &op_clsh,	  0,   0, 255, 0xff, 0x01, 0x00, 0x01}, // clsh.wr a a  
	{0xd501, &op_clsh,	  1,   0, 255, 0xff, 0x01, 0x00, 0x01}, // clsh.wr b a  
	{0xd502, &op_clsh,	  2,   0, 255, 0xff, 0x01, 0x00, 0x01}, // clsh.wr c a  
	{0xd503, &op_clsh,	  3,   0, 255, 0xff, 0x01, 0x00, 0x01}, // clsh.wr d a  
	{0xd504, &op_clsh,	  4,   0, 255, 0xff, 0x01, 0x00, 0x01}, // clsh.wr e a  
	{0xd505, &op_clsh,	  5,   0, 255, 0xff, 0x01, 0x00, 0x01}, // clsh.wr f a  
	{0xd506, &op_clsh,	  6,   0, 255, 0xff, 0x01, 0x00, 0x01}, // clsh.wr g a  
	{0xd507, &op_clsh,	  7,   0, 255, 0xff, 0x01, 0x00, 0x01}, // clsh.wr h a  
	{0xd508, &op_clsh,	  0,   1, 255, 0xff, 0x01, 0x00, 0x01}, // clsh.wr a b  
	{0xd509, &op_clsh,	  1,   1, 255, 0xff, 0x01, 0x00, 0x01}, // clsh.wr b b  
	{0xd50a, &op_clsh,	  2,   1, 255, 0xff, 0x01, 0x00, 0x01}, // clsh.wr c b  
	{0xd50b, &op_clsh,	  3,   1, 255, 0xff, 0x01, 0x00, 0x01}, // clsh.wr d b  
	{0xd50c, &op_clsh,	  4,   1, 255, 0xff, 0x01, 0x00, 0x01}, // clsh.wr e b  
	{0xd50d, &op_clsh,	  5,   1, 255, 0xff, 0x01, 0x00, 0x01}, // clsh.wr f b  
	{0xd50e, &op_clsh,	  6,   1, 255, 0xff, 0x01, 0x00, 0x01}, // clsh.wr g b  
	{0xd50f, &op_clsh,	  7,   1, 255, 0xff, 0x01, 0x00, 0x01}, // clsh.wr h b  
	{0xd510, &op_clsh,	  0,   2, 255, 0xff, 0x01, 0x00, 0x01}, // clsh.wr a c  
	{0xd511, &op_clsh,	  1,   2, 255, 0xff, 0x01, 0x00, 0x01}, // clsh.wr b c  
	{0xd512, &op_clsh,	  2,   2, 255, 0xff, 0x01, 0x00, 0x01}, // clsh.wr c c  
	{0xd513, &op_clsh,	  3,   2, 255, 0xff, 0x01, 0x00, 0x01}, // clsh.wr d c  
	{0xd514, &op_clsh,	  4,   2, 255, 0xff, 0x01, 0x00, 0x01}, // clsh.wr e c  
	{0xd515, &op_clsh,	  5,   2, 255, 0xff, 0x01, 0x00, 0x01}, // clsh.wr f c  
	{0xd516, &op_clsh,	  6,   2, 255, 0xff, 0x01, 0x00, 0x01}, // clsh.wr g c  
	{0xd517, &op_clsh,	  7,   2, 255, 0xff, 0x01, 0x00, 0x01}, // clsh.wr h c  
	{0xd518, &op_clsh,	  0,   3, 255, 0xff, 0x01, 0x00, 0x01}, // clsh.wr a d  
	{0xd519, &op_clsh,	  1,   3, 255, 0xff, 0x01, 0x00, 0x01}, // clsh.wr b d  
	{0xd51a, &op_clsh,	  2,   3, 255, 0xff, 0x01, 0x00, 0x01}, // clsh.wr c d  
	{0xd51b, &op_clsh,	  3,   3, 255, 0xff, 0x01, 0x00, 0x01}, // clsh.wr d d  
	{0xd51c, &op_clsh,	  4,   3, 255, 0xff, 0x01, 0x00, 0x01}, // clsh.wr e d  
	{0xd51d, &op_clsh,	  5,   3, 255, 0xff, 0x01, 0x00, 0x01}, // clsh.wr f d  
	{0xd51e, &op_clsh,	  6,   3, 255, 0xff, 0x01, 0x00, 0x01}, // clsh.wr g d  
	{0xd51f, &op_clsh,	  7,   3, 255, 0xff, 0x01, 0x00, 0x01}, // clsh.wr h d  
	{0xd520, &op_clsh,	  0,   4, 255, 0xff, 0x01, 0x00, 0x01}, // clsh.wr a e  
	{0xd521, &op_clsh,	  1,   4, 255, 0xff, 0x01, 0x00, 0x01}, // clsh.wr b e  
	{0xd522, &op_clsh,	  2,   4, 255, 0xff, 0x01, 0x00, 0x01}, // clsh.wr c e  
	{0xd523, &op_clsh,	  3,   4, 255, 0xff, 0x01, 0x00, 0x01}, // clsh.wr d e  
	{0xd524, &op_clsh,	  4,   4, 255, 0xff, 0x01, 0x00, 0x01}, // clsh.wr e e  
	{0xd525, &op_clsh,	  5,   4, 255, 0xff, 0x01, 0x00, 0x01}, // clsh.wr f e  
	{0xd526, &op_clsh,	  6,   4, 255, 0xff, 0x01, 0x00, 0x01}, // clsh.wr g e  
	{0xd527, &op_clsh,	  7,   4, 255, 0xff, 0x01, 0x00, 0x01}, // clsh.wr h e  
	{0xd528, &op_clsh,	  0,   5, 255, 0xff, 0x01, 0x00, 0x01}, // clsh.wr a f  
	{0xd529, &op_clsh,	  1,   5, 255, 0xff, 0x01, 0x00, 0x01}, // clsh.wr b f  
	{0xd52a, &op_clsh,	  2,   5, 255, 0xff, 0x01, 0x00, 0x01}, // clsh.wr c f  
	{0xd52b, &op_clsh,	  3,   5, 255, 0xff, 0x01, 0x00, 0x01}, // clsh.wr d f  
	{0xd52c, &op_clsh,	  4,   5, 255, 0xff, 0x01, 0x00, 0x01}, // clsh.wr e f  
	{0xd52d, &op_clsh,	  5,   5, 255, 0xff, 0x01, 0x00, 0x01}, // clsh.wr f f  
	{0xd52e, &op_clsh,	  6,   5, 255, 0xff, 0x01, 0x00, 0x01}, // clsh.wr g f  
	{0xd52f, &op_clsh,	  7,   5, 255, 0xff, 0x01, 0x00, 0x01}, // clsh.wr h f  
	{0xd530, &op_clsh,	  0,   6, 255, 0xff, 0x01, 0x00, 0x01}, // clsh.wr a g  
	{0xd531, &op_clsh,	  1,   6, 255, 0xff, 0x01, 0x00, 0x01}, // clsh.wr b g  
	{0xd532, &op_clsh,	  2,   6, 255, 0xff, 0x01, 0x00, 0x01}, // clsh.wr c g  
	{0xd533, &op_clsh,	  3,   6, 255, 0xff, 0x01, 0x00, 0x01}, // clsh.wr d g  
	{0xd534, &op_clsh,	  4,   6, 255, 0xff, 0x01, 0x00, 0x01}, // clsh.wr e g  
	{0xd535, &op_clsh,	  5,   6, 255, 0xff, 0x01, 0x00, 0x01}, // clsh.wr f g  
	{0xd536, &op_clsh,	  6,   6, 255, 0xff, 0x01, 0x00, 0x01}, // clsh.wr g g  
	{0xd537, &op_clsh,	  7,   6, 255, 0xff, 0x01, 0x00, 0x01}, // clsh.wr h g  
	{0xd538, &op_clsh,	  0,   7, 255, 0xff, 0x01, 0x00, 0x01}, // clsh.wr a h  
	{0xd539, &op_clsh,	  1,   7, 255, 0xff, 0x01, 0x00, 0x01}, // clsh.wr b h  
	{0xd53a, &op_clsh,	  2,   7, 255, 0xff, 0x01, 0x00, 0x01}, // clsh.wr c h  
	{0xd53b, &op_clsh,	  3,   7, 255, 0xff, 0x01, 0x00, 0x01}, // clsh.wr d h  
	{0xd53c, &op_clsh,	  4,   7, 255, 0xff, 0x01, 0x00, 0x01}, // clsh.wr e h  
	{0xd53d, &op_clsh,	  5,   7, 255, 0xff, 0x01, 0x00, 0x01}, // clsh.wr f h  
	{0xd53e, &op_clsh,	  6,   7, 255, 0xff, 0x01, 0x00, 0x01}, // clsh.wr g h  
	{0xd53f, &op_clsh,	  7,   7, 255, 0xff, 0x01, 0x00, 0x01}, // clsh.wr h h  
	{0xd540, &op_clsh,	  0,   0, 255, 0xff, 0x01, 0x00, 0x02}, // clsh.dr a a  
	{0xd541, &op_clsh,	  1,   0, 255, 0xff, 0x01, 0x00, 0x02}, // clsh.dr b a  
	{0xd542, &op_clsh,	  2,   0, 255, 0xff, 0x01, 0x00, 0x02}, // clsh.dr c a  
	{0xd543, &op_clsh,	  3,   0, 255, 0xff, 0x01, 0x00, 0x02}, // clsh.dr d a  
	{0xd544, &op_clsh,	  4,   0, 255, 0xff, 0x01, 0x00, 0x02}, // clsh.dr e a  
	{0xd545, &op_clsh,	  5,   0, 255, 0xff, 0x01, 0x00, 0x02}, // clsh.dr f a  
	{0xd546, &op_clsh,	  6,   0, 255, 0xff, 0x01, 0x00, 0x02}, // clsh.dr g a  
	{0xd547, &op_clsh,	  7,   0, 255, 0xff, 0x01, 0x00, 0x02}, // clsh.dr h a  
	{0xd548, &op_clsh,	  0,   1, 255, 0xff, 0x01, 0x00, 0x02}, // clsh.dr a b  
	{0xd549, &op_clsh,	  1,   1, 255, 0xff, 0x01, 0x00, 0x02}, // clsh.dr b b  
	{0xd54a, &op_clsh,	  2,   1, 255, 0xff, 0x01, 0x00, 0x02}, // clsh.dr c b  
	{0xd54b, &op_clsh,	  3,   1, 255, 0xff, 0x01, 0x00, 0x02}, // clsh.dr d b  
	{0xd54c, &op_clsh,	  4,   1, 255, 0xff, 0x01, 0x00, 0x02}, // clsh.dr e b  
	{0xd54d, &op_clsh,	  5,   1, 255, 0xff, 0x01, 0x00, 0x02}, // clsh.dr f b  
	{0xd54e, &op_clsh,	  6,   1, 255, 0xff, 0x01, 0x00, 0x02}, // clsh.dr g b  
	{0xd54f, &op_clsh,	  7,   1, 255, 0xff, 0x01, 0x00, 0x02}, // clsh.dr h b  
	{0xd550, &op_clsh,	  0,   2, 255, 0xff, 0x01, 0x00, 0x02}, // clsh.dr a c  
	{0xd551, &op_clsh,	  1,   2, 255, 0xff, 0x01, 0x00, 0x02}, // clsh.dr b c  
	{0xd552, &op_clsh,	  2,   2, 255, 0xff, 0x01, 0x00, 0x02}, // clsh.dr c c  
	{0xd553, &op_clsh,	  3,   2, 255, 0xff, 0x01, 0x00, 0x02}, // clsh.dr d c  
	{0xd554, &op_clsh,	  4,   2, 255, 0xff, 0x01, 0x00, 0x02}, // clsh.dr e c  
	{0xd555, &op_clsh,	  5,   2, 255, 0xff, 0x01, 0x00, 0x02}, // clsh.dr f c  
	{0xd556, &op_clsh,	  6,   2, 255, 0xff, 0x01, 0x00, 0x02}, // clsh.dr g c  
	{0xd557, &op_clsh,	  7,   2, 255, 0xff, 0x01, 0x00, 0x02}, // clsh.dr h c  
	{0xd558, &op_clsh,	  0,   3, 255, 0xff, 0x01, 0x00, 0x02}, // clsh.dr a d  
	{0xd559, &op_clsh,	  1,   3, 255, 0xff, 0x01, 0x00, 0x02}, // clsh.dr b d  
	{0xd55a, &op_clsh,	  2,   3, 255, 0xff, 0x01, 0x00, 0x02}, // clsh.dr c d  
	{0xd55b, &op_clsh,	  3,   3, 255, 0xff, 0x01, 0x00, 0x02}, // clsh.dr d d  
	{0xd55c, &op_clsh,	  4,   3, 255, 0xff, 0x01, 0x00, 0x02}, // clsh.dr e d  
	{0xd55d, &op_clsh,	  5,   3, 255, 0xff, 0x01, 0x00, 0x02}, // clsh.dr f d  
	{0xd55e, &op_clsh,	  6,   3, 255, 0xff, 0x01, 0x00, 0x02}, // clsh.dr g d  
	{0xd55f, &op_clsh,	  7,   3, 255, 0xff, 0x01, 0x00, 0x02}, // clsh.dr h d  
	{0xd560, &op_clsh,	  0,   4, 255, 0xff, 0x01, 0x00, 0x02}, // clsh.dr a e  
	{0xd561, &op_clsh,	  1,   4, 255, 0xff, 0x01, 0x00, 0x02}, // clsh.dr b e  
	{0xd562, &op_clsh,	  2,   4, 255, 0xff, 0x01, 0x00, 0x02}, // clsh.dr c e  
	{0xd563, &op_clsh,	  3,   4, 255, 0xff, 0x01, 0x00, 0x02}, // clsh.dr d e  
	{0xd564, &op_clsh,	  4,   4, 255, 0xff, 0x01, 0x00, 0x02}, // clsh.dr e e  
	{0xd565, &op_clsh,	  5,   4, 255, 0xff, 0x01, 0x00, 0x02}, // clsh.dr f e  
	{0xd566, &op_clsh,	  6,   4, 255, 0xff, 0x01, 0x00, 0x02}, // clsh.dr g e  
	{0xd567, &op_clsh,	  7,   4, 255, 0xff, 0x01, 0x00, 0x02}, // clsh.dr h e  
	{0xd568, &op_clsh,	  0,   5, 255, 0xff, 0x01, 0x00, 0x02}, // clsh.dr a f  
	{0xd569, &op_clsh,	  1,   5, 255, 0xff, 0x01, 0x00, 0x02}, // clsh.dr b f  
	{0xd56a, &op_clsh,	  2,   5, 255, 0xff, 0x01, 0x00, 0x02}, // clsh.dr c f  
	{0xd56b, &op_clsh,	  3,   5, 255, 0xff, 0x01, 0x00, 0x02}, // clsh.dr d f  
	{0xd56c, &op_clsh,	  4,   5, 255, 0xff, 0x01, 0x00, 0x02}, // clsh.dr e f  
	{0xd56d, &op_clsh,	  5,   5, 255, 0xff, 0x01, 0x00, 0x02}, // clsh.dr f f  
	{0xd56e, &op_clsh,	  6,   5, 255, 0xff, 0x01, 0x00, 0x02}, // clsh.dr g f  
	{0xd56f, &op_clsh,	  7,   5, 255, 0xff, 0x01, 0x00, 0x02}, // clsh.dr h f  
	{0xd570, &op_clsh,	  0,   6, 255, 0xff, 0x01, 0x00, 0x02}, // clsh.dr a g  
	{0xd571, &op_clsh,	  1,   6, 255, 0xff, 0x01, 0x00, 0x02}, // clsh.dr b g  
	{0xd572, &op_clsh,	  2,   6, 255, 0xff, 0x01, 0x00, 0x02}, // clsh.dr c g  
	{0xd573, &op_clsh,	  3,   6, 255, 0xff, 0x01, 0x00, 0x02}, // clsh.dr d g  
	{0xd574, &op_clsh,	  4,   6, 255, 0xff, 0x01, 0x00, 0x02}, // clsh.dr e g  
	{0xd575, &op_clsh,	  5,   6, 255, 0xff, 0x01, 0x00, 0x02}, // clsh.dr f g  
	{0xd576, &op_clsh,	  6,   6, 255, 0xff, 0x01, 0x00, 0x02}, // clsh.dr g g  
	{0xd577, &op_clsh,	  7,   6, 255, 0xff, 0x01, 0x00, 0x02}, // clsh.dr h g  
	{0xd578, &op_clsh,	  0,   7, 255, 0xff, 0x01, 0x00, 0x02}, // clsh.dr a h  
	{0xd579, &op_clsh,	  1,   7, 255, 0xff, 0x01, 0x00, 0x02}, // clsh.dr b h  
	{0xd57a, &op_clsh,	  2,   7, 255, 0xff, 0x01, 0x00, 0x02}, // clsh.dr c h  
	{0xd57b, &op_clsh,	  3,   7, 255, 0xff, 0x01, 0x00, 0x02}, // clsh.dr d h  
	{0xd57c, &op_clsh,	  4,   7, 255, 0xff, 0x01, 0x00, 0x02}, // clsh.dr e h  
	{0xd57d, &op_clsh,	  5,   7, 255, 0xff, 0x01, 0x00, 0x02}, // clsh.dr f h  
	{0xd57e, &op_clsh,	  6,   7, 255, 0xff, 0x01, 0x00, 0x02}, // clsh.dr g h  
	{0xd57f, &op_clsh,	  7,   7, 255, 0xff, 0x01, 0x00, 0x02}, // clsh.dr h h  
	{0xd580, &op_clsh,	  0,   0, 255, 0xff, 0x01, 0x00, 0x04}, // clsh.r a a  
	{0xd581, &op_clsh,	  1,   0, 255, 0xff, 0x01, 0x00, 0x04}, // clsh.r b a  
	{0xd582, &op_clsh,	  2,   0, 255, 0xff, 0x01, 0x00, 0x04}, // clsh.r c a  
	{0xd583, &op_clsh,	  3,   0, 255, 0xff, 0x01, 0x00, 0x04}, // clsh.r d a  
	{0xd584, &op_clsh,	  4,   0, 255, 0xff, 0x01, 0x00, 0x04}, // clsh.r e a  
	{0xd585, &op_clsh,	  5,   0, 255, 0xff, 0x01, 0x00, 0x04}, // clsh.r f a  
	{0xd586, &op_clsh,	  6,   0, 255, 0xff, 0x01, 0x00, 0x04}, // clsh.r g a  
	{0xd587, &op_clsh,	  7,   0, 255, 0xff, 0x01, 0x00, 0x04}, // clsh.r h a  
	{0xd588, &op_clsh,	  0,   1, 255, 0xff, 0x01, 0x00, 0x04}, // clsh.r a b  
	{0xd589, &op_clsh,	  1,   1, 255, 0xff, 0x01, 0x00, 0x04}, // clsh.r b b  
	{0xd58a, &op_clsh,	  2,   1, 255, 0xff, 0x01, 0x00, 0x04}, // clsh.r c b  
	{0xd58b, &op_clsh,	  3,   1, 255, 0xff, 0x01, 0x00, 0x04}, // clsh.r d b  
	{0xd58c, &op_clsh,	  4,   1, 255, 0xff, 0x01, 0x00, 0x04}, // clsh.r e b  
	{0xd58d, &op_clsh,	  5,   1, 255, 0xff, 0x01, 0x00, 0x04}, // clsh.r f b  
	{0xd58e, &op_clsh,	  6,   1, 255, 0xff, 0x01, 0x00, 0x04}, // clsh.r g b  
	{0xd58f, &op_clsh,	  7,   1, 255, 0xff, 0x01, 0x00, 0x04}, // clsh.r h b  
	{0xd590, &op_clsh,	  0,   2, 255, 0xff, 0x01, 0x00, 0x04}, // clsh.r a c  
	{0xd591, &op_clsh,	  1,   2, 255, 0xff, 0x01, 0x00, 0x04}, // clsh.r b c  
	{0xd592, &op_clsh,	  2,   2, 255, 0xff, 0x01, 0x00, 0x04}, // clsh.r c c  
	{0xd593, &op_clsh,	  3,   2, 255, 0xff, 0x01, 0x00, 0x04}, // clsh.r d c  
	{0xd594, &op_clsh,	  4,   2, 255, 0xff, 0x01, 0x00, 0x04}, // clsh.r e c  
	{0xd595, &op_clsh,	  5,   2, 255, 0xff, 0x01, 0x00, 0x04}, // clsh.r f c  
	{0xd596, &op_clsh,	  6,   2, 255, 0xff, 0x01, 0x00, 0x04}, // clsh.r g c  
	{0xd597, &op_clsh,	  7,   2, 255, 0xff, 0x01, 0x00, 0x04}, // clsh.r h c  
	{0xd598, &op_clsh,	  0,   3, 255, 0xff, 0x01, 0x00, 0x04}, // clsh.r a d  
	{0xd599, &op_clsh,	  1,   3, 255, 0xff, 0x01, 0x00, 0x04}, // clsh.r b d  
	{0xd59a, &op_clsh,	  2,   3, 255, 0xff, 0x01, 0x00, 0x04}, // clsh.r c d  
	{0xd59b, &op_clsh,	  3,   3, 255, 0xff, 0x01, 0x00, 0x04}, // clsh.r d d  
	{0xd59c, &op_clsh,	  4,   3, 255, 0xff, 0x01, 0x00, 0x04}, // clsh.r e d  
	{0xd59d, &op_clsh,	  5,   3, 255, 0xff, 0x01, 0x00, 0x04}, // clsh.r f d  
	{0xd59e, &op_clsh,	  6,   3, 255, 0xff, 0x01, 0x00, 0x04}, // clsh.r g d  
	{0xd59f, &op_clsh,	  7,   3, 255, 0xff, 0x01, 0x00, 0x04}, // clsh.r h d  
	{0xd5a0, &op_clsh,	  0,   4, 255, 0xff, 0x01, 0x00, 0x04}, // clsh.r a e  
	{0xd5a1, &op_clsh,	  1,   4, 255, 0xff, 0x01, 0x00, 0x04}, // clsh.r b e  
	{0xd5a2, &op_clsh,	  2,   4, 255, 0xff, 0x01, 0x00, 0x04}, // clsh.r c e  
	{0xd5a3, &op_clsh,	  3,   4, 255, 0xff, 0x01, 0x00, 0x04}, // clsh.r d e  
	{0xd5a4, &op_clsh,	  4,   4, 255, 0xff, 0x01, 0x00, 0x04}, // clsh.r e e  
	{0xd5a5, &op_clsh,	  5,   4, 255, 0xff, 0x01, 0x00, 0x04}, // clsh.r f e  
	{0xd5a6, &op_clsh,	  6,   4, 255, 0xff, 0x01, 0x00, 0x04}, // clsh.r g e  
	{0xd5a7, &op_clsh,	  7,   4, 255, 0xff, 0x01, 0x00, 0x04}, // clsh.r h e  
	{0xd5a8, &op_clsh,	  0,   5, 255, 0xff, 0x01, 0x00, 0x04}, // clsh.r a f  
	{0xd5a9, &op_clsh,	  1,   5, 255, 0xff, 0x01, 0x00, 0x04}, // clsh.r b f  
	{0xd5aa, &op_clsh,	  2,   5, 255, 0xff, 0x01, 0x00, 0x04}, // clsh.r c f  
	{0xd5ab, &op_clsh,	  3,   5, 255, 0xff, 0x01, 0x00, 0x04}, // clsh.r d f  
	{0xd5ac, &op_clsh,	  4,   5, 255, 0xff, 0x01, 0x00, 0x04}, // clsh.r e f  
	{0xd5ad, &op_clsh,	  5,   5, 255, 0xff, 0x01, 0x00, 0x04}, // clsh.r f f  
	{0xd5ae, &op_clsh,	  6,   5, 255, 0xff, 0x01, 0x00, 0x04}, // clsh.r g f  
	{0xd5af, &op_clsh,	  7,   5, 255, 0xff, 0x01, 0x00, 0x04}, // clsh.r h f  
	{0xd5b0, &op_clsh,	  0,   6, 255, 0xff, 0x01, 0x00, 0x04}, // clsh.r a g  
	{0xd5b1, &op_clsh,	  1,   6, 255, 0xff, 0x01, 0x00, 0x04}, // clsh.r b g  
	{0xd5b2, &op_clsh,	  2,   6, 255, 0xff, 0x01, 0x00, 0x04}, // clsh.r c g  
	{0xd5b3, &op_clsh,	  3,   6, 255, 0xff, 0x01, 0x00, 0x04}, // clsh.r d g  
	{0xd5b4, &op_clsh,	  4,   6, 255, 0xff, 0x01, 0x00, 0x04}, // clsh.r e g  
	{0xd5b5, &op_clsh,	  5,   6, 255, 0xff, 0x01, 0x00, 0x04}, // clsh.r f g  
	{0xd5b6, &op_clsh,	  6,   6, 255, 0xff, 0x01, 0x00, 0x04}, // clsh.r g g  
	{0xd5b7, &op_clsh,	  7,   6, 255, 0xff, 0x01, 0x00, 0x04}, // clsh.r h g  
	{0xd5b8, &op_clsh,	  0,   7, 255, 0xff, 0x01, 0x00, 0x04}, // clsh.r a h  
	{0xd5b9, &op_clsh,	  1,   7, 255, 0xff, 0x01, 0x00, 0x04}, // clsh.r b h  
	{0xd5ba, &op_clsh,	  2,   7, 255, 0xff, 0x01, 0x00, 0x04}, // clsh.r c h  
	{0xd5bb, &op_clsh,	  3,   7, 255, 0xff, 0x01, 0x00, 0x04}, // clsh.r d h  
	{0xd5bc, &op_clsh,	  4,   7, 255, 0xff, 0x01, 0x00, 0x04}, // clsh.r e h  
	{0xd5bd, &op_clsh,	  5,   7, 255, 0xff, 0x01, 0x00, 0x04}, // clsh.r f h  
	{0xd5be, &op_clsh,	  6,   7, 255, 0xff, 0x01, 0x00, 0x04}, // clsh.r g h  
	{0xd5bf, &op_clsh,	  7,   7, 255, 0xff, 0x01, 0x00, 0x04}, // clsh.r h h  
	{0xd4c8, &op_clsh,	  0,   8, 255, 0xff, 0x00, 0x01, 0x01}, // clsh.wi a <literal>  
	{0xd4c9, &op_clsh,	  1,   8, 255, 0xff, 0x00, 0x01, 0x01}, // clsh.wi b <literal>  
	{0xd4ca, &op_clsh,	  2,   8, 255, 0xff, 0x00, 0x01, 0x01}, // clsh.wi c <literal>  
	{0xd4cb, &op_clsh,	  3,   8, 255, 0xff, 0x00, 0x01, 0x01}, // clsh.wi d <literal>  
	{0xd4cc, &op_clsh,	  4,   8, 255, 0xff, 0x00, 0x01, 0x01}, // clsh.wi e <literal>  
	{0xd4cd, &op_clsh,	  5,   8, 255, 0xff, 0x00, 0x01, 0x01}, // clsh.wi f <literal>  
	{0xd4ce, &op_clsh,	  6,   8, 255, 0xff, 0x00, 0x01, 0x01}, // clsh.wi g <literal>  
	{0xd4cf, &op_clsh,	  7,   8, 255, 0xff, 0x00, 0x01, 0x01}, // clsh.wi h <literal>  
	{0xd4d0, &op_clsh,	  0,   8, 255, 0xff, 0x00, 0x02, 0x02}, // clsh.di a <literal>  
	{0xd4d1, &op_clsh,	  1,   8, 255, 0xff, 0x00, 0x02, 0x02}, // clsh.di b <literal>  
	{0xd4d2, &op_clsh,	  2,   8, 255, 0xff, 0x00, 0x02, 0x02}, // clsh.di c <literal>  
	{0xd4d3, &op_clsh,	  3,   8, 255, 0xff, 0x00, 0x02, 0x02}, // clsh.di d <literal>  
	{0xd4d4, &op_clsh,	  4,   8, 255, 0xff, 0x00, 0x02, 0x02}, // clsh.di e <literal>  
	{0xd4d5, &op_clsh,	  5,   8, 255, 0xff, 0x00, 0x02, 0x02}, // clsh.di f <literal>  
	{0xd4d6, &op_clsh,	  6,   8, 255, 0xff, 0x00, 0x02, 0x02}, // clsh.di g <literal>  
	{0xd4d7, &op_clsh,	  7,   8, 255, 0xff, 0x00, 0x02, 0x02}, // clsh.di h <literal>  
	{0xd4e0, &op_clsh,	  0,   8, 255, 0xff, 0x00, 0x04, 0x04}, // clsh.i a <literal>  
	{0xd4e1, &op_clsh,	  1,   8, 255, 0xff, 0x00, 0x04, 0x04}, // clsh.i b <literal>  
	{0xd4e2, &op_clsh,	  2,   8, 255, 0xff, 0x00, 0x04, 0x04}, // clsh.i c <literal>  
	{0xd4e3, &op_clsh,	  3,   8, 255, 0xff, 0x00, 0x04, 0x04}, // clsh.i d <literal>  
	{0xd4e4, &op_clsh,	  4,   8, 255, 0xff, 0x00, 0x04, 0x04}, // clsh.i e <literal>  
	{0xd4e5, &op_clsh,	  5,   8, 255, 0xff, 0x00, 0x04, 0x04}, // clsh.i f <literal>  
	{0xd4e6, &op_clsh,	  6,   8, 255, 0xff, 0x00, 0x04, 0x04}, // clsh.i g <literal>  
	{0xd4e7, &op_clsh,	  7,   8, 255, 0xff, 0x00, 0x04, 0x04}, // clsh.i h <literal>  
	{0xd5c8, &op_clsh,	  0,   8, 255, 0xff, 0x01, 0x04, 0x01}, // clsh.wri a <literal>  
	{0xd5c9, &op_clsh,	  1,   8, 255, 0xff, 0x01, 0x04, 0x01}, // clsh.wri b <literal>  
	{0xd5ca, &op_clsh,	  2,   8, 255, 0xff, 0x01, 0x04, 0x01}, // clsh.wri c <literal>  
	{0xd5cb, &op_clsh,	  3,   8, 255, 0xff, 0x01, 0x04, 0x01}, // clsh.wri d <literal>  
	{0xd5cc, &op_clsh,	  4,   8, 255, 0xff, 0x01, 0x04, 0x01}, // clsh.wri e <literal>  
	{0xd5cd, &op_clsh,	  5,   8, 255, 0xff, 0x01, 0x04, 0x01}, // clsh.wri f <literal>  
	{0xd5ce, &op_clsh,	  6,   8, 255, 0xff, 0x01, 0x04, 0x01}, // clsh.wri g <literal>  
	{0xd5cf, &op_clsh,	  7,   8, 255, 0xff, 0x01, 0x04, 0x01}, // clsh.wri h <literal>  
	{0xd5d0, &op_clsh,	  0,   8, 255, 0xff, 0x01, 0x04, 0x02}, // clsh.dri a <literal>  
	{0xd5d1, &op_clsh,	  1,   8, 255, 0xff, 0x01, 0x04, 0x02}, // clsh.dri b <literal>  
	{0xd5d2, &op_clsh,	  2,   8, 255, 0xff, 0x01, 0x04, 0x02}, // clsh.dri c <literal>  
	{0xd5d3, &op_clsh,	  3,   8, 255, 0xff, 0x01, 0x04, 0x02}, // clsh.dri d <literal>  
	{0xd5d4, &op_clsh,	  4,   8, 255, 0xff, 0x01, 0x04, 0x02}, // clsh.dri e <literal>  
	{0xd5d5, &op_clsh,	  5,   8, 255, 0xff, 0x01, 0x04, 0x02}, // clsh.dri f <literal>  
	{0xd5d6, &op_clsh,	  6,   8, 255, 0xff, 0x01, 0x04, 0x02}, // clsh.dri g <literal>  
	{0xd5d7, &op_clsh,	  7,   8, 255, 0xff, 0x01, 0x04, 0x02}, // clsh.dri h <literal>  
	{0xd5e0, &op_clsh,	  0,   8, 255, 0xff, 0x01, 0x04, 0x04}, // clsh.ri a <literal>  
	{0xd5e1, &op_clsh,	  1,   8, 255, 0xff, 0x01, 0x04, 0x04}, // clsh.ri b <literal>  
	{0xd5e2, &op_clsh,	  2,   8, 255, 0xff, 0x01, 0x04, 0x04}, // clsh.ri c <literal>  
	{0xd5e3, &op_clsh,	  3,   8, 255, 0xff, 0x01, 0x04, 0x04}, // clsh.ri d <literal>  
	{0xd5e4, &op_clsh,	  4,   8, 255, 0xff, 0x01, 0x04, 0x04}, // clsh.ri e <literal>  
	{0xd5e5, &op_clsh,	  5,   8, 255, 0xff, 0x01, 0x04, 0x04}, // clsh.ri f <literal>  
	{0xd5e6, &op_clsh,	  6,   8, 255, 0xff, 0x01, 0x04, 0x04}, // clsh.ri g <literal>  
	{0xd5e7, &op_clsh,	  7,   8, 255, 0xff, 0x01, 0x04, 0x04}, // clsh.ri h <literal>  
	{0xd600, &op_csub,	  0,   0, 255, 0xff, 0x00, 0x00, 0x01}, // csub.w a a  
	{0xd601, &op_csub,	  1,   0, 255, 0xff, 0x00, 0x00, 0x01}, // csub.w b a  
	{0xd602, &op_csub,	  2,   0, 255, 0xff, 0x00, 0x00, 0x01}, // csub.w c a  
	{0xd603, &op_csub,	  3,   0, 255, 0xff, 0x00, 0x00, 0x01}, // csub.w d a  
	{0xd604, &op_csub,	  4,   0, 255, 0xff, 0x00, 0x00, 0x01}, // csub.w e a  
	{0xd605, &op_csub,	  5,   0, 255, 0xff, 0x00, 0x00, 0x01}, // csub.w f a  
	{0xd606, &op_csub,	  6,   0, 255, 0xff, 0x00, 0x00, 0x01}, // csub.w g a  
	{0xd607, &op_csub,	  7,   0, 255, 0xff, 0x00, 0x00, 0x01}, // csub.w h a  
	{0xd608, &op_csub,	  0,   1, 255, 0xff, 0x00, 0x00, 0x01}, // csub.w a b  
	{0xd609, &op_csub,	  1,   1, 255, 0xff, 0x00, 0x00, 0x01}, // csub.w b b  
	{0xd60a, &op_csub,	  2,   1, 255, 0xff, 0x00, 0x00, 0x01}, // csub.w c b  
	{0xd60b, &op_csub,	  3,   1, 255, 0xff, 0x00, 0x00, 0x01}, // csub.w d b  
	{0xd60c, &op_csub,	  4,   1, 255, 0xff, 0x00, 0x00, 0x01}, // csub.w e b  
	{0xd60d, &op_csub,	  5,   1, 255, 0xff, 0x00, 0x00, 0x01}, // csub.w f b  
	{0xd60e, &op_csub,	  6,   1, 255, 0xff, 0x00, 0x00, 0x01}, // csub.w g b  
	{0xd60f, &op_csub,	  7,   1, 255, 0xff, 0x00, 0x00, 0x01}, // csub.w h b  
	{0xd610, &op_csub,	  0,   2, 255, 0xff, 0x00, 0x00, 0x01}, // csub.w a c  
	{0xd611, &op_csub,	  1,   2, 255, 0xff, 0x00, 0x00, 0x01}, // csub.w b c  
	{0xd612, &op_csub,	  2,   2, 255, 0xff, 0x00, 0x00, 0x01}, // csub.w c c  
	{0xd613, &op_csub,	  3,   2, 255, 0xff, 0x00, 0x00, 0x01}, // csub.w d c  
	{0xd614, &op_csub,	  4,   2, 255, 0xff, 0x00, 0x00, 0x01}, // csub.w e c  
	{0xd615, &op_csub,	  5,   2, 255, 0xff, 0x00, 0x00, 0x01}, // csub.w f c  
	{0xd616, &op_csub,	  6,   2, 255, 0xff, 0x00, 0x00, 0x01}, // csub.w g c  
	{0xd617, &op_csub,	  7,   2, 255, 0xff, 0x00, 0x00, 0x01}, // csub.w h c  
	{0xd618, &op_csub,	  0,   3, 255, 0xff, 0x00, 0x00, 0x01}, // csub.w a d  
	{0xd619, &op_csub,	  1,   3, 255, 0xff, 0x00, 0x00, 0x01}, // csub.w b d  
	{0xd61a, &op_csub,	  2,   3, 255, 0xff, 0x00, 0x00, 0x01}, // csub.w c d  
	{0xd61b, &op_csub,	  3,   3, 255, 0xff, 0x00, 0x00, 0x01}, // csub.w d d  
	{0xd61c, &op_csub,	  4,   3, 255, 0xff, 0x00, 0x00, 0x01}, // csub.w e d  
	{0xd61d, &op_csub,	  5,   3, 255, 0xff, 0x00, 0x00, 0x01}, // csub.w f d  
	{0xd61e, &op_csub,	  6,   3, 255, 0xff, 0x00, 0x00, 0x01}, // csub.w g d  
	{0xd61f, &op_csub,	  7,   3, 255, 0xff, 0x00, 0x00, 0x01}, // csub.w h d  
	{0xd620, &op_csub,	  0,   4, 255, 0xff, 0x00, 0x00, 0x01}, // csub.w a e  
	{0xd621, &op_csub,	  1,   4, 255, 0xff, 0x00, 0x00, 0x01}, // csub.w b e  
	{0xd622, &op_csub,	  2,   4, 255, 0xff, 0x00, 0x00, 0x01}, // csub.w c e  
	{0xd623, &op_csub,	  3,   4, 255, 0xff, 0x00, 0x00, 0x01}, // csub.w d e  
	{0xd624, &op_csub,	  4,   4, 255, 0xff, 0x00, 0x00, 0x01}, // csub.w e e  
	{0xd625, &op_csub,	  5,   4, 255, 0xff, 0x00, 0x00, 0x01}, // csub.w f e  
	{0xd626, &op_csub,	  6,   4, 255, 0xff, 0x00, 0x00, 0x01}, // csub.w g e  
	{0xd627, &op_csub,	  7,   4, 255, 0xff, 0x00, 0x00, 0x01}, // csub.w h e  
	{0xd628, &op_csub,	  0,   5, 255, 0xff, 0x00, 0x00, 0x01}, // csub.w a f  
	{0xd629, &op_csub,	  1,   5, 255, 0xff, 0x00, 0x00, 0x01}, // csub.w b f  
	{0xd62a, &op_csub,	  2,   5, 255, 0xff, 0x00, 0x00, 0x01}, // csub.w c f  
	{0xd62b, &op_csub,	  3,   5, 255, 0xff, 0x00, 0x00, 0x01}, // csub.w d f  
	{0xd62c, &op_csub,	  4,   5, 255, 0xff, 0x00, 0x00, 0x01}, // csub.w e f  
	{0xd62d, &op_csub,	  5,   5, 255, 0xff, 0x00, 0x00, 0x01}, // csub.w f f  
	{0xd62e, &op_csub,	  6,   5, 255, 0xff, 0x00, 0x00, 0x01}, // csub.w g f  
	{0xd62f, &op_csub,	  7,   5, 255, 0xff, 0x00, 0x00, 0x01}, // csub.w h f  
	{0xd630, &op_csub,	  0,   6, 255, 0xff, 0x00, 0x00, 0x01}, // csub.w a g  
	{0xd631, &op_csub,	  1,   6, 255, 0xff, 0x00, 0x00, 0x01}, // csub.w b g  
	{0xd632, &op_csub,	  2,   6, 255, 0xff, 0x00, 0x00, 0x01}, // csub.w c g  
	{0xd633, &op_csub,	  3,   6, 255, 0xff, 0x00, 0x00, 0x01}, // csub.w d g  
	{0xd634, &op_csub,	  4,   6, 255, 0xff, 0x00, 0x00, 0x01}, // csub.w e g  
	{0xd635, &op_csub,	  5,   6, 255, 0xff, 0x00, 0x00, 0x01}, // csub.w f g  
	{0xd636, &op_csub,	  6,   6, 255, 0xff, 0x00, 0x00, 0x01}, // csub.w g g  
	{0xd637, &op_csub,	  7,   6, 255, 0xff, 0x00, 0x00, 0x01}, // csub.w h g  
	{0xd638, &op_csub,	  0,   7, 255, 0xff, 0x00, 0x00, 0x01}, // csub.w a h  
	{0xd639, &op_csub,	  1,   7, 255, 0xff, 0x00, 0x00, 0x01}, // csub.w b h  
	{0xd63a, &op_csub,	  2,   7, 255, 0xff, 0x00, 0x00, 0x01}, // csub.w c h  
	{0xd63b, &op_csub,	  3,   7, 255, 0xff, 0x00, 0x00, 0x01}, // csub.w d h  
	{0xd63c, &op_csub,	  4,   7, 255, 0xff, 0x00, 0x00, 0x01}, // csub.w e h  
	{0xd63d, &op_csub,	  5,   7, 255, 0xff, 0x00, 0x00, 0x01}, // csub.w f h  
	{0xd63e, &op_csub,	  6,   7, 255, 0xff, 0x00, 0x00, 0x01}, // csub.w g h  
	{0xd63f, &op_csub,	  7,   7, 255, 0xff, 0x00, 0x00, 0x01}, // csub.w h h  
	{0xd640, &op_csub,	  0,   0, 255, 0xff, 0x00, 0x00, 0x02}, // csub.d a a  
	{0xd641, &op_csub,	  1,   0, 255, 0xff, 0x00, 0x00, 0x02}, // csub.d b a  
	{0xd642, &op_csub,	  2,   0, 255, 0xff, 0x00, 0x00, 0x02}, // csub.d c a  
	{0xd643, &op_csub,	  3,   0, 255, 0xff, 0x00, 0x00, 0x02}, // csub.d d a  
	{0xd644, &op_csub,	  4,   0, 255, 0xff, 0x00, 0x00, 0x02}, // csub.d e a  
	{0xd645, &op_csub,	  5,   0, 255, 0xff, 0x00, 0x00, 0x02}, // csub.d f a  
	{0xd646, &op_csub,	  6,   0, 255, 0xff, 0x00, 0x00, 0x02}, // csub.d g a  
	{0xd647, &op_csub,	  7,   0, 255, 0xff, 0x00, 0x00, 0x02}, // csub.d h a  
	{0xd648, &op_csub,	  0,   1, 255, 0xff, 0x00, 0x00, 0x02}, // csub.d a b  
	{0xd649, &op_csub,	  1,   1, 255, 0xff, 0x00, 0x00, 0x02}, // csub.d b b  
	{0xd64a, &op_csub,	  2,   1, 255, 0xff, 0x00, 0x00, 0x02}, // csub.d c b  
	{0xd64b, &op_csub,	  3,   1, 255, 0xff, 0x00, 0x00, 0x02}, // csub.d d b  
	{0xd64c, &op_csub,	  4,   1, 255, 0xff, 0x00, 0x00, 0x02}, // csub.d e b  
	{0xd64d, &op_csub,	  5,   1, 255, 0xff, 0x00, 0x00, 0x02}, // csub.d f b  
	{0xd64e, &op_csub,	  6,   1, 255, 0xff, 0x00, 0x00, 0x02}, // csub.d g b  
	{0xd64f, &op_csub,	  7,   1, 255, 0xff, 0x00, 0x00, 0x02}, // csub.d h b  
	{0xd650, &op_csub,	  0,   2, 255, 0xff, 0x00, 0x00, 0x02}, // csub.d a c  
	{0xd651, &op_csub,	  1,   2, 255, 0xff, 0x00, 0x00, 0x02}, // csub.d b c  
	{0xd652, &op_csub,	  2,   2, 255, 0xff, 0x00, 0x00, 0x02}, // csub.d c c  
	{0xd653, &op_csub,	  3,   2, 255, 0xff, 0x00, 0x00, 0x02}, // csub.d d c  
	{0xd654, &op_csub,	  4,   2, 255, 0xff, 0x00, 0x00, 0x02}, // csub.d e c  
	{0xd655, &op_csub,	  5,   2, 255, 0xff, 0x00, 0x00, 0x02}, // csub.d f c  
	{0xd656, &op_csub,	  6,   2, 255, 0xff, 0x00, 0x00, 0x02}, // csub.d g c  
	{0xd657, &op_csub,	  7,   2, 255, 0xff, 0x00, 0x00, 0x02}, // csub.d h c  
	{0xd658, &op_csub,	  0,   3, 255, 0xff, 0x00, 0x00, 0x02}, // csub.d a d  
	{0xd659, &op_csub,	  1,   3, 255, 0xff, 0x00, 0x00, 0x02}, // csub.d b d  
	{0xd65a, &op_csub,	  2,   3, 255, 0xff, 0x00, 0x00, 0x02}, // csub.d c d  
	{0xd65b, &op_csub,	  3,   3, 255, 0xff, 0x00, 0x00, 0x02}, // csub.d d d  
	{0xd65c, &op_csub,	  4,   3, 255, 0xff, 0x00, 0x00, 0x02}, // csub.d e d  
	{0xd65d, &op_csub,	  5,   3, 255, 0xff, 0x00, 0x00, 0x02}, // csub.d f d  
	{0xd65e, &op_csub,	  6,   3, 255, 0xff, 0x00, 0x00, 0x02}, // csub.d g d  
	{0xd65f, &op_csub,	  7,   3, 255, 0xff, 0x00, 0x00, 0x02}, // csub.d h d  
	{0xd660, &op_csub,	  0,   4, 255, 0xff, 0x00, 0x00, 0x02}, // csub.d a e  
	{0xd661, &op_csub,	  1,   4, 255, 0xff, 0x00, 0x00, 0x02}, // csub.d b e  
	{0xd662, &op_csub,	  2,   4, 255, 0xff, 0x00, 0x00, 0x02}, // csub.d c e  
	{0xd663, &op_csub,	  3,   4, 255, 0xff, 0x00, 0x00, 0x02}, // csub.d d e  
	{0xd664, &op_csub,	  4,   4, 255, 0xff, 0x00, 0x00, 0x02}, // csub.d e e  
	{0xd665, &op_csub,	  5,   4, 255, 0xff, 0x00, 0x00, 0x02}, // csub.d f e  
	{0xd666, &op_csub,	  6,   4, 255, 0xff, 0x00, 0x00, 0x02}, // csub.d g e  
	{0xd667, &op_csub,	  7,   4, 255, 0xff, 0x00, 0x00, 0x02}, // csub.d h e  
	{0xd668, &op_csub,	  0,   5, 255, 0xff, 0x00, 0x00, 0x02}, // csub.d a f  
	{0xd669, &op_csub,	  1,   5, 255, 0xff, 0x00, 0x00, 0x02}, // csub.d b f  
	{0xd66a, &op_csub,	  2,   5, 255, 0xff, 0x00, 0x00, 0x02}, // csub.d c f  
	{0xd66b, &op_csub,	  3,   5, 255, 0xff, 0x00, 0x00, 0x02}, // csub.d d f  
	{0xd66c, &op_csub,	  4,   5, 255, 0xff, 0x00, 0x00, 0x02}, // csub.d e f  
	{0xd66d, &op_csub,	  5,   5, 255, 0xff, 0x00, 0x00, 0x02}, // csub.d f f  
	{0xd66e, &op_csub,	  6,   5, 255, 0xff, 0x00, 0x00, 0x02}, // csub.d g f  
	{0xd66f, &op_csub,	  7,   5, 255, 0xff, 0x00, 0x00, 0x02}, // csub.d h f  
	{0xd670, &op_csub,	  0,   6, 255, 0xff, 0x00, 0x00, 0x02}, // csub.d a g  
	{0xd671, &op_csub,	  1,   6, 255, 0xff, 0x00, 0x00, 0x02}, // csub.d b g  
	{0xd672, &op_csub,	  2,   6, 255, 0xff, 0x00, 0x00, 0x02}, // csub.d c g  
	{0xd673, &op_csub,	  3,   6, 255, 0xff, 0x00, 0x00, 0x02}, // csub.d d g  
	{0xd674, &op_csub,	  4,   6, 255, 0xff, 0x00, 0x00, 0x02}, // csub.d e g  
	{0xd675, &op_csub,	  5,   6, 255, 0xff, 0x00, 0x00, 0x02}, // csub.d f g  
	{0xd676, &op_csub,	  6,   6, 255, 0xff, 0x00, 0x00, 0x02}, // csub.d g g  
	{0xd677, &op_csub,	  7,   6, 255, 0xff, 0x00, 0x00, 0x02}, // csub.d h g  
	{0xd678, &op_csub,	  0,   7, 255, 0xff, 0x00, 0x00, 0x02}, // csub.d a h  
	{0xd679, &op_csub,	  1,   7, 255, 0xff, 0x00, 0x00, 0x02}, // csub.d b h  
	{0xd67a, &op_csub,	  2,   7, 255, 0xff, 0x00, 0x00, 0x02}, // csub.d c h  
	{0xd67b, &op_csub,	  3,   7, 255, 0xff, 0x00, 0x00, 0x02}, // csub.d d h  
	{0xd67c, &op_csub,	  4,   7, 255, 0xff, 0x00, 0x00, 0x02}, // csub.d e h  
	{0xd67d, &op_csub,	  5,   7, 255, 0xff, 0x00, 0x00, 0x02}, // csub.d f h  
	{0xd67e, &op_csub,	  6,   7, 255, 0xff, 0x00, 0x00, 0x02}, // csub.d g h  
	{0xd67f, &op_csub,	  7,   7, 255, 0xff, 0x00, 0x00, 0x02}, // csub.d h h  
	{0xd680, &op_csub,	  0,   0, 255, 0xff, 0x00, 0x00, 0x04}, // csub a a  
	{0xd681, &op_csub,	  1,   0, 255, 0xff, 0x00, 0x00, 0x04}, // csub b a  
	{0xd682, &op_csub,	  2,   0, 255, 0xff, 0x00, 0x00, 0x04}, // csub c a  
	{0xd683, &op_csub,	  3,   0, 255, 0xff, 0x00, 0x00, 0x04}, // csub d a  
	{0xd684, &op_csub,	  4,   0, 255, 0xff, 0x00, 0x00, 0x04}, // csub e a  
	{0xd685, &op_csub,	  5,   0, 255, 0xff, 0x00, 0x00, 0x04}, // csub f a  
	{0xd686, &op_csub,	  6,   0, 255, 0xff, 0x00, 0x00, 0x04}, // csub g a  
	{0xd687, &op_csub,	  7,   0, 255, 0xff, 0x00, 0x00, 0x04}, // csub h a  
	{0xd688, &op_csub,	  0,   1, 255, 0xff, 0x00, 0x00, 0x04}, // csub a b  
	{0xd689, &op_csub,	  1,   1, 255, 0xff, 0x00, 0x00, 0x04}, // csub b b  
	{0xd68a, &op_csub,	  2,   1, 255, 0xff, 0x00, 0x00, 0x04}, // csub c b  
	{0xd68b, &op_csub,	  3,   1, 255, 0xff, 0x00, 0x00, 0x04}, // csub d b  
	{0xd68c, &op_csub,	  4,   1, 255, 0xff, 0x00, 0x00, 0x04}, // csub e b  
	{0xd68d, &op_csub,	  5,   1, 255, 0xff, 0x00, 0x00, 0x04}, // csub f b  
	{0xd68e, &op_csub,	  6,   1, 255, 0xff, 0x00, 0x00, 0x04}, // csub g b  
	{0xd68f, &op_csub,	  7,   1, 255, 0xff, 0x00, 0x00, 0x04}, // csub h b  
	{0xd690, &op_csub,	  0,   2, 255, 0xff, 0x00, 0x00, 0x04}, // csub a c  
	{0xd691, &op_csub,	  1,   2, 255, 0xff, 0x00, 0x00, 0x04}, // csub b c  
	{0xd692, &op_csub,	  2,   2, 255, 0xff, 0x00, 0x00, 0x04}, // csub c c  
	{0xd693, &op_csub,	  3,   2, 255, 0xff, 0x00, 0x00, 0x04}, // csub d c  
	{0xd694, &op_csub,	  4,   2, 255, 0xff, 0x00, 0x00, 0x04}, // csub e c  
	{0xd695, &op_csub,	  5,   2, 255, 0xff, 0x00, 0x00, 0x04}, // csub f c  
	{0xd696, &op_csub,	  6,   2, 255, 0xff, 0x00, 0x00, 0x04}, // csub g c  
	{0xd697, &op_csub,	  7,   2, 255, 0xff, 0x00, 0x00, 0x04}, // csub h c  
	{0xd698, &op_csub,	  0,   3, 255, 0xff, 0x00, 0x00, 0x04}, // csub a d  
	{0xd699, &op_csub,	  1,   3, 255, 0xff, 0x00, 0x00, 0x04}, // csub b d  
	{0xd69a, &op_csub,	  2,   3, 255, 0xff, 0x00, 0x00, 0x04}, // csub c d  
	{0xd69b, &op_csub,	  3,   3, 255, 0xff, 0x00, 0x00, 0x04}, // csub d d  
	{0xd69c, &op_csub,	  4,   3, 255, 0xff, 0x00, 0x00, 0x04}, // csub e d  
	{0xd69d, &op_csub,	  5,   3, 255, 0xff, 0x00, 0x00, 0x04}, // csub f d  
	{0xd69e, &op_csub,	  6,   3, 255, 0xff, 0x00, 0x00, 0x04}, // csub g d  
	{0xd69f, &op_csub,	  7,   3, 255, 0xff, 0x00, 0x00, 0x04}, // csub h d  
	{0xd6a0, &op_csub,	  0,   4, 255, 0xff, 0x00, 0x00, 0x04}, // csub a e  
	{0xd6a1, &op_csub,	  1,   4, 255, 0xff, 0x00, 0x00, 0x04}, // csub b e  
	{0xd6a2, &op_csub,	  2,   4, 255, 0xff, 0x00, 0x00, 0x04}, // csub c e  
	{0xd6a3, &op_csub,	  3,   4, 255, 0xff, 0x00, 0x00, 0x04}, // csub d e  
	{0xd6a4, &op_csub,	  4,   4, 255, 0xff, 0x00, 0x00, 0x04}, // csub e e  
	{0xd6a5, &op_csub,	  5,   4, 255, 0xff, 0x00, 0x00, 0x04}, // csub f e  
	{0xd6a6, &op_csub,	  6,   4, 255, 0xff, 0x00, 0x00, 0x04}, // csub g e  
	{0xd6a7, &op_csub,	  7,   4, 255, 0xff, 0x00, 0x00, 0x04}, // csub h e  
	{0xd6a8, &op_csub,	  0,   5, 255, 0xff, 0x00, 0x00, 0x04}, // csub a f  
	{0xd6a9, &op_csub,	  1,   5, 255, 0xff, 0x00, 0x00, 0x04}, // csub b f  
	{0xd6aa, &op_csub,	  2,   5, 255, 0xff, 0x00, 0x00, 0x04}, // csub c f  
	{0xd6ab, &op_csub,	  3,   5, 255, 0xff, 0x00, 0x00, 0x04}, // csub d f  
	{0xd6ac, &op_csub,	  4,   5, 255, 0xff, 0x00, 0x00, 0x04}, // csub e f  
	{0xd6ad, &op_csub,	  5,   5, 255, 0xff, 0x00, 0x00, 0x04}, // csub f f  
	{0xd6ae, &op_csub,	  6,   5, 255, 0xff, 0x00, 0x00, 0x04}, // csub g f  
	{0xd6af, &op_csub,	  7,   5, 255, 0xff, 0x00, 0x00, 0x04}, // csub h f  
	{0xd6b0, &op_csub,	  0,   6, 255, 0xff, 0x00, 0x00, 0x04}, // csub a g  
	{0xd6b1, &op_csub,	  1,   6, 255, 0xff, 0x00, 0x00, 0x04}, // csub b g  
	{0xd6b2, &op_csub,	  2,   6, 255, 0xff, 0x00, 0x00, 0x04}, // csub c g  
	{0xd6b3, &op_csub,	  3,   6, 255, 0xff, 0x00, 0x00, 0x04}, // csub d g  
	{0xd6b4, &op_csub,	  4,   6, 255, 0xff, 0x00, 0x00, 0x04}, // csub e g  
	{0xd6b5, &op_csub,	  5,   6, 255, 0xff, 0x00, 0x00, 0x04}, // csub f g  
	{0xd6b6, &op_csub,	  6,   6, 255, 0xff, 0x00, 0x00, 0x04}, // csub g g  
	{0xd6b7, &op_csub,	  7,   6, 255, 0xff, 0x00, 0x00, 0x04}, // csub h g  
	{0xd6b8, &op_csub,	  0,   7, 255, 0xff, 0x00, 0x00, 0x04}, // csub a h  
	{0xd6b9, &op_csub,	  1,   7, 255, 0xff, 0x00, 0x00, 0x04}, // csub b h  
	{0xd6ba, &op_csub,	  2,   7, 255, 0xff, 0x00, 0x00, 0x04}, // csub c h  
	{0xd6bb, &op_csub,	  3,   7, 255, 0xff, 0x00, 0x00, 0x04}, // csub d h  
	{0xd6bc, &op_csub,	  4,   7, 255, 0xff, 0x00, 0x00, 0x04}, // csub e h  
	{0xd6bd, &op_csub,	  5,   7, 255, 0xff, 0x00, 0x00, 0x04}, // csub f h  
	{0xd6be, &op_csub,	  6,   7, 255, 0xff, 0x00, 0x00, 0x04}, // csub g h  
	{0xd6bf, &op_csub,	  7,   7, 255, 0xff, 0x00, 0x00, 0x04}, // csub h h  
	{0xd700, &op_csub,	  0,   0, 255, 0xff, 0x01, 0x00, 0x01}, // csub.wr a a  
	{0xd701, &op_csub,	  1,   0, 255, 0xff, 0x01, 0x00, 0x01}, // csub.wr b a  
	{0xd702, &op_csub,	  2,   0, 255, 0xff, 0x01, 0x00, 0x01}, // csub.wr c a  
	{0xd703, &op_csub,	  3,   0, 255, 0xff, 0x01, 0x00, 0x01}, // csub.wr d a  
	{0xd704, &op_csub,	  4,   0, 255, 0xff, 0x01, 0x00, 0x01}, // csub.wr e a  
	{0xd705, &op_csub,	  5,   0, 255, 0xff, 0x01, 0x00, 0x01}, // csub.wr f a  
	{0xd706, &op_csub,	  6,   0, 255, 0xff, 0x01, 0x00, 0x01}, // csub.wr g a  
	{0xd707, &op_csub,	  7,   0, 255, 0xff, 0x01, 0x00, 0x01}, // csub.wr h a  
	{0xd708, &op_csub,	  0,   1, 255, 0xff, 0x01, 0x00, 0x01}, // csub.wr a b  
	{0xd709, &op_csub,	  1,   1, 255, 0xff, 0x01, 0x00, 0x01}, // csub.wr b b  
	{0xd70a, &op_csub,	  2,   1, 255, 0xff, 0x01, 0x00, 0x01}, // csub.wr c b  
	{0xd70b, &op_csub,	  3,   1, 255, 0xff, 0x01, 0x00, 0x01}, // csub.wr d b  
	{0xd70c, &op_csub,	  4,   1, 255, 0xff, 0x01, 0x00, 0x01}, // csub.wr e b  
	{0xd70d, &op_csub,	  5,   1, 255, 0xff, 0x01, 0x00, 0x01}, // csub.wr f b  
	{0xd70e, &op_csub,	  6,   1, 255, 0xff, 0x01, 0x00, 0x01}, // csub.wr g b  
	{0xd70f, &op_csub,	  7,   1, 255, 0xff, 0x01, 0x00, 0x01}, // csub.wr h b  
	{0xd710, &op_csub,	  0,   2, 255, 0xff, 0x01, 0x00, 0x01}, // csub.wr a c  
	{0xd711, &op_csub,	  1,   2, 255, 0xff, 0x01, 0x00, 0x01}, // csub.wr b c  
	{0xd712, &op_csub,	  2,   2, 255, 0xff, 0x01, 0x00, 0x01}, // csub.wr c c  
	{0xd713, &op_csub,	  3,   2, 255, 0xff, 0x01, 0x00, 0x01}, // csub.wr d c  
	{0xd714, &op_csub,	  4,   2, 255, 0xff, 0x01, 0x00, 0x01}, // csub.wr e c  
	{0xd715, &op_csub,	  5,   2, 255, 0xff, 0x01, 0x00, 0x01}, // csub.wr f c  
	{0xd716, &op_csub,	  6,   2, 255, 0xff, 0x01, 0x00, 0x01}, // csub.wr g c  
	{0xd717, &op_csub,	  7,   2, 255, 0xff, 0x01, 0x00, 0x01}, // csub.wr h c  
	{0xd718, &op_csub,	  0,   3, 255, 0xff, 0x01, 0x00, 0x01}, // csub.wr a d  
	{0xd719, &op_csub,	  1,   3, 255, 0xff, 0x01, 0x00, 0x01}, // csub.wr b d  
	{0xd71a, &op_csub,	  2,   3, 255, 0xff, 0x01, 0x00, 0x01}, // csub.wr c d  
	{0xd71b, &op_csub,	  3,   3, 255, 0xff, 0x01, 0x00, 0x01}, // csub.wr d d  
	{0xd71c, &op_csub,	  4,   3, 255, 0xff, 0x01, 0x00, 0x01}, // csub.wr e d  
	{0xd71d, &op_csub,	  5,   3, 255, 0xff, 0x01, 0x00, 0x01}, // csub.wr f d  
	{0xd71e, &op_csub,	  6,   3, 255, 0xff, 0x01, 0x00, 0x01}, // csub.wr g d  
	{0xd71f, &op_csub,	  7,   3, 255, 0xff, 0x01, 0x00, 0x01}, // csub.wr h d  
	{0xd720, &op_csub,	  0,   4, 255, 0xff, 0x01, 0x00, 0x01}, // csub.wr a e  
	{0xd721, &op_csub,	  1,   4, 255, 0xff, 0x01, 0x00, 0x01}, // csub.wr b e  
	{0xd722, &op_csub,	  2,   4, 255, 0xff, 0x01, 0x00, 0x01}, // csub.wr c e  
	{0xd723, &op_csub,	  3,   4, 255, 0xff, 0x01, 0x00, 0x01}, // csub.wr d e  
	{0xd724, &op_csub,	  4,   4, 255, 0xff, 0x01, 0x00, 0x01}, // csub.wr e e  
	{0xd725, &op_csub,	  5,   4, 255, 0xff, 0x01, 0x00, 0x01}, // csub.wr f e  
	{0xd726, &op_csub,	  6,   4, 255, 0xff, 0x01, 0x00, 0x01}, // csub.wr g e  
	{0xd727, &op_csub,	  7,   4, 255, 0xff, 0x01, 0x00, 0x01}, // csub.wr h e  
	{0xd728, &op_csub,	  0,   5, 255, 0xff, 0x01, 0x00, 0x01}, // csub.wr a f  
	{0xd729, &op_csub,	  1,   5, 255, 0xff, 0x01, 0x00, 0x01}, // csub.wr b f  
	{0xd72a, &op_csub,	  2,   5, 255, 0xff, 0x01, 0x00, 0x01}, // csub.wr c f  
	{0xd72b, &op_csub,	  3,   5, 255, 0xff, 0x01, 0x00, 0x01}, // csub.wr d f  
	{0xd72c, &op_csub,	  4,   5, 255, 0xff, 0x01, 0x00, 0x01}, // csub.wr e f  
	{0xd72d, &op_csub,	  5,   5, 255, 0xff, 0x01, 0x00, 0x01}, // csub.wr f f  
	{0xd72e, &op_csub,	  6,   5, 255, 0xff, 0x01, 0x00, 0x01}, // csub.wr g f  
	{0xd72f, &op_csub,	  7,   5, 255, 0xff, 0x01, 0x00, 0x01}, // csub.wr h f  
	{0xd730, &op_csub,	  0,   6, 255, 0xff, 0x01, 0x00, 0x01}, // csub.wr a g  
	{0xd731, &op_csub,	  1,   6, 255, 0xff, 0x01, 0x00, 0x01}, // csub.wr b g  
	{0xd732, &op_csub,	  2,   6, 255, 0xff, 0x01, 0x00, 0x01}, // csub.wr c g  
	{0xd733, &op_csub,	  3,   6, 255, 0xff, 0x01, 0x00, 0x01}, // csub.wr d g  
	{0xd734, &op_csub,	  4,   6, 255, 0xff, 0x01, 0x00, 0x01}, // csub.wr e g  
	{0xd735, &op_csub,	  5,   6, 255, 0xff, 0x01, 0x00, 0x01}, // csub.wr f g  
	{0xd736, &op_csub,	  6,   6, 255, 0xff, 0x01, 0x00, 0x01}, // csub.wr g g  
	{0xd737, &op_csub,	  7,   6, 255, 0xff, 0x01, 0x00, 0x01}, // csub.wr h g  
	{0xd738, &op_csub,	  0,   7, 255, 0xff, 0x01, 0x00, 0x01}, // csub.wr a h  
	{0xd739, &op_csub,	  1,   7, 255, 0xff, 0x01, 0x00, 0x01}, // csub.wr b h  
	{0xd73a, &op_csub,	  2,   7, 255, 0xff, 0x01, 0x00, 0x01}, // csub.wr c h  
	{0xd73b, &op_csub,	  3,   7, 255, 0xff, 0x01, 0x00, 0x01}, // csub.wr d h  
	{0xd73c, &op_csub,	  4,   7, 255, 0xff, 0x01, 0x00, 0x01}, // csub.wr e h  
	{0xd73d, &op_csub,	  5,   7, 255, 0xff, 0x01, 0x00, 0x01}, // csub.wr f h  
	{0xd73e, &op_csub,	  6,   7, 255, 0xff, 0x01, 0x00, 0x01}, // csub.wr g h  
	{0xd73f, &op_csub,	  7,   7, 255, 0xff, 0x01, 0x00, 0x01}, // csub.wr h h  
	{0xd740, &op_csub,	  0,   0, 255, 0xff, 0x01, 0x00, 0x02}, // csub.dr a a  
	{0xd741, &op_csub,	  1,   0, 255, 0xff, 0x01, 0x00, 0x02}, // csub.dr b a  
	{0xd742, &op_csub,	  2,   0, 255, 0xff, 0x01, 0x00, 0x02}, // csub.dr c a  
	{0xd743, &op_csub,	  3,   0, 255, 0xff, 0x01, 0x00, 0x02}, // csub.dr d a  
	{0xd744, &op_csub,	  4,   0, 255, 0xff, 0x01, 0x00, 0x02}, // csub.dr e a  
	{0xd745, &op_csub,	  5,   0, 255, 0xff, 0x01, 0x00, 0x02}, // csub.dr f a  
	{0xd746, &op_csub,	  6,   0, 255, 0xff, 0x01, 0x00, 0x02}, // csub.dr g a  
	{0xd747, &op_csub,	  7,   0, 255, 0xff, 0x01, 0x00, 0x02}, // csub.dr h a  
	{0xd748, &op_csub,	  0,   1, 255, 0xff, 0x01, 0x00, 0x02}, // csub.dr a b  
	{0xd749, &op_csub,	  1,   1, 255, 0xff, 0x01, 0x00, 0x02}, // csub.dr b b  
	{0xd74a, &op_csub,	  2,   1, 255, 0xff, 0x01, 0x00, 0x02}, // csub.dr c b  
	{0xd74b, &op_csub,	  3,   1, 255, 0xff, 0x01, 0x00, 0x02}, // csub.dr d b  
	{0xd74c, &op_csub,	  4,   1, 255, 0xff, 0x01, 0x00, 0x02}, // csub.dr e b  
	{0xd74d, &op_csub,	  5,   1, 255, 0xff, 0x01, 0x00, 0x02}, // csub.dr f b  
	{0xd74e, &op_csub,	  6,   1, 255, 0xff, 0x01, 0x00, 0x02}, // csub.dr g b  
	{0xd74f, &op_csub,	  7,   1, 255, 0xff, 0x01, 0x00, 0x02}, // csub.dr h b  
	{0xd750, &op_csub,	  0,   2, 255, 0xff, 0x01, 0x00, 0x02}, // csub.dr a c  
	{0xd751, &op_csub,	  1,   2, 255, 0xff, 0x01, 0x00, 0x02}, // csub.dr b c  
	{0xd752, &op_csub,	  2,   2, 255, 0xff, 0x01, 0x00, 0x02}, // csub.dr c c  
	{0xd753, &op_csub,	  3,   2, 255, 0xff, 0x01, 0x00, 0x02}, // csub.dr d c  
	{0xd754, &op_csub,	  4,   2, 255, 0xff, 0x01, 0x00, 0x02}, // csub.dr e c  
	{0xd755, &op_csub,	  5,   2, 255, 0xff, 0x01, 0x00, 0x02}, // csub.dr f c  
	{0xd756, &op_csub,	  6,   2, 255, 0xff, 0x01, 0x00, 0x02}, // csub.dr g c  
	{0xd757, &op_csub,	  7,   2, 255, 0xff, 0x01, 0x00, 0x02}, // csub.dr h c  
	{0xd758, &op_csub,	  0,   3, 255, 0xff, 0x01, 0x00, 0x02}, // csub.dr a d  
	{0xd759, &op_csub,	  1,   3, 255, 0xff, 0x01, 0x00, 0x02}, // csub.dr b d  
	{0xd75a, &op_csub,	  2,   3, 255, 0xff, 0x01, 0x00, 0x02}, // csub.dr c d  
	{0xd75b, &op_csub,	  3,   3, 255, 0xff, 0x01, 0x00, 0x02}, // csub.dr d d  
	{0xd75c, &op_csub,	  4,   3, 255, 0xff, 0x01, 0x00, 0x02}, // csub.dr e d  
	{0xd75d, &op_csub,	  5,   3, 255, 0xff, 0x01, 0x00, 0x02}, // csub.dr f d  
	{0xd75e, &op_csub,	  6,   3, 255, 0xff, 0x01, 0x00, 0x02}, // csub.dr g d  
	{0xd75f, &op_csub,	  7,   3, 255, 0xff, 0x01, 0x00, 0x02}, // csub.dr h d  
	{0xd760, &op_csub,	  0,   4, 255, 0xff, 0x01, 0x00, 0x02}, // csub.dr a e  
	{0xd761, &op_csub,	  1,   4, 255, 0xff, 0x01, 0x00, 0x02}, // csub.dr b e  
	{0xd762, &op_csub,	  2,   4, 255, 0xff, 0x01, 0x00, 0x02}, // csub.dr c e  
	{0xd763, &op_csub,	  3,   4, 255, 0xff, 0x01, 0x00, 0x02}, // csub.dr d e  
	{0xd764, &op_csub,	  4,   4, 255, 0xff, 0x01, 0x00, 0x02}, // csub.dr e e  
	{0xd765, &op_csub,	  5,   4, 255, 0xff, 0x01, 0x00, 0x02}, // csub.dr f e  
	{0xd766, &op_csub,	  6,   4, 255, 0xff, 0x01, 0x00, 0x02}, // csub.dr g e  
	{0xd767, &op_csub,	  7,   4, 255, 0xff, 0x01, 0x00, 0x02}, // csub.dr h e  
	{0xd768, &op_csub,	  0,   5, 255, 0xff, 0x01, 0x00, 0x02}, // csub.dr a f  
	{0xd769, &op_csub,	  1,   5, 255, 0xff, 0x01, 0x00, 0x02}, // csub.dr b f  
	{0xd76a, &op_csub,	  2,   5, 255, 0xff, 0x01, 0x00, 0x02}, // csub.dr c f  
	{0xd76b, &op_csub,	  3,   5, 255, 0xff, 0x01, 0x00, 0x02}, // csub.dr d f  
	{0xd76c, &op_csub,	  4,   5, 255, 0xff, 0x01, 0x00, 0x02}, // csub.dr e f  
	{0xd76d, &op_csub,	  5,   5, 255, 0xff, 0x01, 0x00, 0x02}, // csub.dr f f  
	{0xd76e, &op_csub,	  6,   5, 255, 0xff, 0x01, 0x00, 0x02}, // csub.dr g f  
	{0xd76f, &op_csub,	  7,   5, 255, 0xff, 0x01, 0x00, 0x02}, // csub.dr h f  
	{0xd770, &op_csub,	  0,   6, 255, 0xff, 0x01, 0x00, 0x02}, // csub.dr a g  
	{0xd771, &op_csub,	  1,   6, 255, 0xff, 0x01, 0x00, 0x02}, // csub.dr b g  
	{0xd772, &op_csub,	  2,   6, 255, 0xff, 0x01, 0x00, 0x02}, // csub.dr c g  
	{0xd773, &op_csub,	  3,   6, 255, 0xff, 0x01, 0x00, 0x02}, // csub.dr d g  
	{0xd774, &op_csub,	  4,   6, 255, 0xff, 0x01, 0x00, 0x02}, // csub.dr e g  
	{0xd775, &op_csub,	  5,   6, 255, 0xff, 0x01, 0x00, 0x02}, // csub.dr f g  
	{0xd776, &op_csub,	  6,   6, 255, 0xff, 0x01, 0x00, 0x02}, // csub.dr g g  
	{0xd777, &op_csub,	  7,   6, 255, 0xff, 0x01, 0x00, 0x02}, // csub.dr h g  
	{0xd778, &op_csub,	  0,   7, 255, 0xff, 0x01, 0x00, 0x02}, // csub.dr a h  
	{0xd779, &op_csub,	  1,   7, 255, 0xff, 0x01, 0x00, 0x02}, // csub.dr b h  
	{0xd77a, &op_csub,	  2,   7, 255, 0xff, 0x01, 0x00, 0x02}, // csub.dr c h  
	{0xd77b, &op_csub,	  3,   7, 255, 0xff, 0x01, 0x00, 0x02}, // csub.dr d h  
	{0xd77c, &op_csub,	  4,   7, 255, 0xff, 0x01, 0x00, 0x02}, // csub.dr e h  
	{0xd77d, &op_csub,	  5,   7, 255, 0xff, 0x01, 0x00, 0x02}, // csub.dr f h  
	{0xd77e, &op_csub,	  6,   7, 255, 0xff, 0x01, 0x00, 0x02}, // csub.dr g h  
	{0xd77f, &op_csub,	  7,   7, 255, 0xff, 0x01, 0x00, 0x02}, // csub.dr h h  
	{0xd780, &op_csub,	  0,   0, 255, 0xff, 0x01, 0x00, 0x04}, // csub.r a a  
	{0xd781, &op_csub,	  1,   0, 255, 0xff, 0x01, 0x00, 0x04}, // csub.r b a  
	{0xd782, &op_csub,	  2,   0, 255, 0xff, 0x01, 0x00, 0x04}, // csub.r c a  
	{0xd783, &op_csub,	  3,   0, 255, 0xff, 0x01, 0x00, 0x04}, // csub.r d a  
	{0xd784, &op_csub,	  4,   0, 255, 0xff, 0x01, 0x00, 0x04}, // csub.r e a  
	{0xd785, &op_csub,	  5,   0, 255, 0xff, 0x01, 0x00, 0x04}, // csub.r f a  
	{0xd786, &op_csub,	  6,   0, 255, 0xff, 0x01, 0x00, 0x04}, // csub.r g a  
	{0xd787, &op_csub,	  7,   0, 255, 0xff, 0x01, 0x00, 0x04}, // csub.r h a  
	{0xd788, &op_csub,	  0,   1, 255, 0xff, 0x01, 0x00, 0x04}, // csub.r a b  
	{0xd789, &op_csub,	  1,   1, 255, 0xff, 0x01, 0x00, 0x04}, // csub.r b b  
	{0xd78a, &op_csub,	  2,   1, 255, 0xff, 0x01, 0x00, 0x04}, // csub.r c b  
	{0xd78b, &op_csub,	  3,   1, 255, 0xff, 0x01, 0x00, 0x04}, // csub.r d b  
	{0xd78c, &op_csub,	  4,   1, 255, 0xff, 0x01, 0x00, 0x04}, // csub.r e b  
	{0xd78d, &op_csub,	  5,   1, 255, 0xff, 0x01, 0x00, 0x04}, // csub.r f b  
	{0xd78e, &op_csub,	  6,   1, 255, 0xff, 0x01, 0x00, 0x04}, // csub.r g b  
	{0xd78f, &op_csub,	  7,   1, 255, 0xff, 0x01, 0x00, 0x04}, // csub.r h b  
	{0xd790, &op_csub,	  0,   2, 255, 0xff, 0x01, 0x00, 0x04}, // csub.r a c  
	{0xd791, &op_csub,	  1,   2, 255, 0xff, 0x01, 0x00, 0x04}, // csub.r b c  
	{0xd792, &op_csub,	  2,   2, 255, 0xff, 0x01, 0x00, 0x04}, // csub.r c c  
	{0xd793, &op_csub,	  3,   2, 255, 0xff, 0x01, 0x00, 0x04}, // csub.r d c  
	{0xd794, &op_csub,	  4,   2, 255, 0xff, 0x01, 0x00, 0x04}, // csub.r e c  
	{0xd795, &op_csub,	  5,   2, 255, 0xff, 0x01, 0x00, 0x04}, // csub.r f c  
	{0xd796, &op_csub,	  6,   2, 255, 0xff, 0x01, 0x00, 0x04}, // csub.r g c  
	{0xd797, &op_csub,	  7,   2, 255, 0xff, 0x01, 0x00, 0x04}, // csub.r h c  
	{0xd798, &op_csub,	  0,   3, 255, 0xff, 0x01, 0x00, 0x04}, // csub.r a d  
	{0xd799, &op_csub,	  1,   3, 255, 0xff, 0x01, 0x00, 0x04}, // csub.r b d  
	{0xd79a, &op_csub,	  2,   3, 255, 0xff, 0x01, 0x00, 0x04}, // csub.r c d  
	{0xd79b, &op_csub,	  3,   3, 255, 0xff, 0x01, 0x00, 0x04}, // csub.r d d  
	{0xd79c, &op_csub,	  4,   3, 255, 0xff, 0x01, 0x00, 0x04}, // csub.r e d  
	{0xd79d, &op_csub,	  5,   3, 255, 0xff, 0x01, 0x00, 0x04}, // csub.r f d  
	{0xd79e, &op_csub,	  6,   3, 255, 0xff, 0x01, 0x00, 0x04}, // csub.r g d  
	{0xd79f, &op_csub,	  7,   3, 255, 0xff, 0x01, 0x00, 0x04}, // csub.r h d  
	{0xd7a0, &op_csub,	  0,   4, 255, 0xff, 0x01, 0x00, 0x04}, // csub.r a e  
	{0xd7a1, &op_csub,	  1,   4, 255, 0xff, 0x01, 0x00, 0x04}, // csub.r b e  
	{0xd7a2, &op_csub,	  2,   4, 255, 0xff, 0x01, 0x00, 0x04}, // csub.r c e  
	{0xd7a3, &op_csub,	  3,   4, 255, 0xff, 0x01, 0x00, 0x04}, // csub.r d e  
	{0xd7a4, &op_csub,	  4,   4, 255, 0xff, 0x01, 0x00, 0x04}, // csub.r e e  
	{0xd7a5, &op_csub,	  5,   4, 255, 0xff, 0x01, 0x00, 0x04}, // csub.r f e  
	{0xd7a6, &op_csub,	  6,   4, 255, 0xff, 0x01, 0x00, 0x04}, // csub.r g e  
	{0xd7a7, &op_csub,	  7,   4, 255, 0xff, 0x01, 0x00, 0x04}, // csub.r h e  
	{0xd7a8, &op_csub,	  0,   5, 255, 0xff, 0x01, 0x00, 0x04}, // csub.r a f  
	{0xd7a9, &op_csub,	  1,   5, 255, 0xff, 0x01, 0x00, 0x04}, // csub.r b f  
	{0xd7aa, &op_csub,	  2,   5, 255, 0xff, 0x01, 0x00, 0x04}, // csub.r c f  
	{0xd7ab, &op_csub,	  3,   5, 255, 0xff, 0x01, 0x00, 0x04}, // csub.r d f  
	{0xd7ac, &op_csub,	  4,   5, 255, 0xff, 0x01, 0x00, 0x04}, // csub.r e f  
	{0xd7ad, &op_csub,	  5,   5, 255, 0xff, 0x01, 0x00, 0x04}, // csub.r f f  
	{0xd7ae, &op_csub,	  6,   5, 255, 0xff, 0x01, 0x00, 0x04}, // csub.r g f  
	{0xd7af, &op_csub,	  7,   5, 255, 0xff, 0x01, 0x00, 0x04}, // csub.r h f  
	{0xd7b0, &op_csub,	  0,   6, 255, 0xff, 0x01, 0x00, 0x04}, // csub.r a g  
	{0xd7b1, &op_csub,	  1,   6, 255, 0xff, 0x01, 0x00, 0x04}, // csub.r b g  
	{0xd7b2, &op_csub,	  2,   6, 255, 0xff, 0x01, 0x00, 0x04}, // csub.r c g  
	{0xd7b3, &op_csub,	  3,   6, 255, 0xff, 0x01, 0x00, 0x04}, // csub.r d g  
	{0xd7b4, &op_csub,	  4,   6, 255, 0xff, 0x01, 0x00, 0x04}, // csub.r e g  
	{0xd7b5, &op_csub,	  5,   6, 255, 0xff, 0x01, 0x00, 0x04}, // csub.r f g  
	{0xd7b6, &op_csub,	  6,   6, 255, 0xff, 0x01, 0x00, 0x04}, // csub.r g g  
	{0xd7b7, &op_csub,	  7,   6, 255, 0xff, 0x01, 0x00, 0x04}, // csub.r h g  
	{0xd7b8, &op_csub,	  0,   7, 255, 0xff, 0x01, 0x00, 0x04}, // csub.r a h  
	{0xd7b9, &op_csub,	  1,   7, 255, 0xff, 0x01, 0x00, 0x04}, // csub.r b h  
	{0xd7ba, &op_csub,	  2,   7, 255, 0xff, 0x01, 0x00, 0x04}, // csub.r c h  
	{0xd7bb, &op_csub,	  3,   7, 255, 0xff, 0x01, 0x00, 0x04}, // csub.r d h  
	{0xd7bc, &op_csub,	  4,   7, 255, 0xff, 0x01, 0x00, 0x04}, // csub.r e h  
	{0xd7bd, &op_csub,	  5,   7, 255, 0xff, 0x01, 0x00, 0x04}, // csub.r f h  
	{0xd7be, &op_csub,	  6,   7, 255, 0xff, 0x01, 0x00, 0x04}, // csub.r g h  
	{0xd7bf, &op_csub,	  7,   7, 255, 0xff, 0x01, 0x00, 0x04}, // csub.r h h  
	{0xd6c8, &op_csub,	  0,   8, 255, 0xff, 0x00, 0x01, 0x01}, // csub.wi a <literal>  
	{0xd6c9, &op_csub,	  1,   8, 255, 0xff, 0x00, 0x01, 0x01}, // csub.wi b <literal>  
	{0xd6ca, &op_csub,	  2,   8, 255, 0xff, 0x00, 0x01, 0x01}, // csub.wi c <literal>  
	{0xd6cb, &op_csub,	  3,   8, 255, 0xff, 0x00, 0x01, 0x01}, // csub.wi d <literal>  
	{0xd6cc, &op_csub,	  4,   8, 255, 0xff, 0x00, 0x01, 0x01}, // csub.wi e <literal>  
	{0xd6cd, &op_csub,	  5,   8, 255, 0xff, 0x00, 0x01, 0x01}, // csub.wi f <literal>  
	{0xd6ce, &op_csub,	  6,   8, 255, 0xff, 0x00, 0x01, 0x01}, // csub.wi g <literal>  
	{0xd6cf, &op_csub,	  7,   8, 255, 0xff, 0x00, 0x01, 0x01}, // csub.wi h <literal>  
	{0xd6d0, &op_csub,	  0,   8, 255, 0xff, 0x00, 0x02, 0x02}, // csub.di a <literal>  
	{0xd6d1, &op_csub,	  1,   8, 255, 0xff, 0x00, 0x02, 0x02}, // csub.di b <literal>  
	{0xd6d2, &op_csub,	  2,   8, 255, 0xff, 0x00, 0x02, 0x02}, // csub.di c <literal>  
	{0xd6d3, &op_csub,	  3,   8, 255, 0xff, 0x00, 0x02, 0x02}, // csub.di d <literal>  
	{0xd6d4, &op_csub,	  4,   8, 255, 0xff, 0x00, 0x02, 0x02}, // csub.di e <literal>  
	{0xd6d5, &op_csub,	  5,   8, 255, 0xff, 0x00, 0x02, 0x02}, // csub.di f <literal>  
	{0xd6d6, &op_csub,	  6,   8, 255, 0xff, 0x00, 0x02, 0x02}, // csub.di g <literal>  
	{0xd6d7, &op_csub,	  7,   8, 255, 0xff, 0x00, 0x02, 0x02}, // csub.di h <literal>  
	{0xd6e0, &op_csub,	  0,   8, 255, 0xff, 0x00, 0x04, 0x04}, // csub.i a <literal>  
	{0xd6e1, &op_csub,	  1,   8, 255, 0xff, 0x00, 0x04, 0x04}, // csub.i b <literal>  
	{0xd6e2, &op_csub,	  2,   8, 255, 0xff, 0x00, 0x04, 0x04}, // csub.i c <literal>  
	{0xd6e3, &op_csub,	  3,   8, 255, 0xff, 0x00, 0x04, 0x04}, // csub.i d <literal>  
	{0xd6e4, &op_csub,	  4,   8, 255, 0xff, 0x00, 0x04, 0x04}, // csub.i e <literal>  
	{0xd6e5, &op_csub,	  5,   8, 255, 0xff, 0x00, 0x04, 0x04}, // csub.i f <literal>  
	{0xd6e6, &op_csub,	  6,   8, 255, 0xff, 0x00, 0x04, 0x04}, // csub.i g <literal>  
	{0xd6e7, &op_csub,	  7,   8, 255, 0xff, 0x00, 0x04, 0x04}, // csub.i h <literal>  
	{0xd7c8, &op_csub,	  0,   8, 255, 0xff, 0x01, 0x04, 0x01}, // csub.wri a <literal>  
	{0xd7c9, &op_csub,	  1,   8, 255, 0xff, 0x01, 0x04, 0x01}, // csub.wri b <literal>  
	{0xd7ca, &op_csub,	  2,   8, 255, 0xff, 0x01, 0x04, 0x01}, // csub.wri c <literal>  
	{0xd7cb, &op_csub,	  3,   8, 255, 0xff, 0x01, 0x04, 0x01}, // csub.wri d <literal>  
	{0xd7cc, &op_csub,	  4,   8, 255, 0xff, 0x01, 0x04, 0x01}, // csub.wri e <literal>  
	{0xd7cd, &op_csub,	  5,   8, 255, 0xff, 0x01, 0x04, 0x01}, // csub.wri f <literal>  
	{0xd7ce, &op_csub,	  6,   8, 255, 0xff, 0x01, 0x04, 0x01}, // csub.wri g <literal>  
	{0xd7cf, &op_csub,	  7,   8, 255, 0xff, 0x01, 0x04, 0x01}, // csub.wri h <literal>  
	{0xd7d0, &op_csub,	  0,   8, 255, 0xff, 0x01, 0x04, 0x02}, // csub.dri a <literal>  
	{0xd7d1, &op_csub,	  1,   8, 255, 0xff, 0x01, 0x04, 0x02}, // csub.dri b <literal>  
	{0xd7d2, &op_csub,	  2,   8, 255, 0xff, 0x01, 0x04, 0x02}, // csub.dri c <literal>  
	{0xd7d3, &op_csub,	  3,   8, 255, 0xff, 0x01, 0x04, 0x02}, // csub.dri d <literal>  
	{0xd7d4, &op_csub,	  4,   8, 255, 0xff, 0x01, 0x04, 0x02}, // csub.dri e <literal>  
	{0xd7d5, &op_csub,	  5,   8, 255, 0xff, 0x01, 0x04, 0x02}, // csub.dri f <literal>  
	{0xd7d6, &op_csub,	  6,   8, 255, 0xff, 0x01, 0x04, 0x02}, // csub.dri g <literal>  
	{0xd7d7, &op_csub,	  7,   8, 255, 0xff, 0x01, 0x04, 0x02}, // csub.dri h <literal>  
	{0xd7e0, &op_csub,	  0,   8, 255, 0xff, 0x01, 0x04, 0x04}, // csub.ri a <literal>  
	{0xd7e1, &op_csub,	  1,   8, 255, 0xff, 0x01, 0x04, 0x04}, // csub.ri b <literal>  
	{0xd7e2, &op_csub,	  2,   8, 255, 0xff, 0x01, 0x04, 0x04}, // csub.ri c <literal>  
	{0xd7e3, &op_csub,	  3,   8, 255, 0xff, 0x01, 0x04, 0x04}, // csub.ri d <literal>  
	{0xd7e4, &op_csub,	  4,   8, 255, 0xff, 0x01, 0x04, 0x04}, // csub.ri e <literal>  
	{0xd7e5, &op_csub,	  5,   8, 255, 0xff, 0x01, 0x04, 0x04}, // csub.ri f <literal>  
	{0xd7e6, &op_csub,	  6,   8, 255, 0xff, 0x01, 0x04, 0x04}, // csub.ri g <literal>  
	{0xd7e7, &op_csub,	  7,   8, 255, 0xff, 0x01, 0x04, 0x04}, // csub.ri h <literal>  
	{0xd800, &op_cmul,	  0,   0, 255, 0xff, 0x00, 0x00, 0x01}, // cmul.w a a  
	{0xd801, &op_cmul,	  1,   0, 255, 0xff, 0x00, 0x00, 0x01}, // cmul.w b a  
	{0xd802, &op_cmul,	  2,   0, 255, 0xff, 0x00, 0x00, 0x01}, // cmul.w c a  
	{0xd803, &op_cmul,	  3,   0, 255, 0xff, 0x00, 0x00, 0x01}, // cmul.w d a  
	{0xd804, &op_cmul,	  4,   0, 255, 0xff, 0x00, 0x00, 0x01}, // cmul.w e a  
	{0xd805, &op_cmul,	  5,   0, 255, 0xff, 0x00, 0x00, 0x01}, // cmul.w f a  
	{0xd806, &op_cmul,	  6,   0, 255, 0xff, 0x00, 0x00, 0x01}, // cmul.w g a  
	{0xd807, &op_cmul,	  7,   0, 255, 0xff, 0x00, 0x00, 0x01}, // cmul.w h a  
	{0xd808, &op_cmul,	  0,   1, 255, 0xff, 0x00, 0x00, 0x01}, // cmul.w a b  
	{0xd809, &op_cmul,	  1,   1, 255, 0xff, 0x00, 0x00, 0x01}, // cmul.w b b  
	{0xd80a, &op_cmul,	  2,   1, 255, 0xff, 0x00, 0x00, 0x01}, // cmul.w c b  
	{0xd80b, &op_cmul,	  3,   1, 255, 0xff, 0x00, 0x00, 0x01}, // cmul.w d b  
	{0xd80c, &op_cmul,	  4,   1, 255, 0xff, 0x00, 0x00, 0x01}, // cmul.w e b  
	{0xd80d, &op_cmul,	  5,   1, 255, 0xff, 0x00, 0x00, 0x01}, // cmul.w f b  
	{0xd80e, &op_cmul,	  6,   1, 255, 0xff, 0x00, 0x00, 0x01}, // cmul.w g b  
	{0xd80f, &op_cmul,	  7,   1, 255, 0xff, 0x00, 0x00, 0x01}, // cmul.w h b  
	{0xd810, &op_cmul,	  0,   2, 255, 0xff, 0x00, 0x00, 0x01}, // cmul.w a c  
	{0xd811, &op_cmul,	  1,   2, 255, 0xff, 0x00, 0x00, 0x01}, // cmul.w b c  
	{0xd812, &op_cmul,	  2,   2, 255, 0xff, 0x00, 0x00, 0x01}, // cmul.w c c  
	{0xd813, &op_cmul,	  3,   2, 255, 0xff, 0x00, 0x00, 0x01}, // cmul.w d c  
	{0xd814, &op_cmul,	  4,   2, 255, 0xff, 0x00, 0x00, 0x01}, // cmul.w e c  
	{0xd815, &op_cmul,	  5,   2, 255, 0xff, 0x00, 0x00, 0x01}, // cmul.w f c  
	{0xd816, &op_cmul,	  6,   2, 255, 0xff, 0x00, 0x00, 0x01}, // cmul.w g c  
	{0xd817, &op_cmul,	  7,   2, 255, 0xff, 0x00, 0x00, 0x01}, // cmul.w h c  
	{0xd818, &op_cmul,	  0,   3, 255, 0xff, 0x00, 0x00, 0x01}, // cmul.w a d  
	{0xd819, &op_cmul,	  1,   3, 255, 0xff, 0x00, 0x00, 0x01}, // cmul.w b d  
	{0xd81a, &op_cmul,	  2,   3, 255, 0xff, 0x00, 0x00, 0x01}, // cmul.w c d  
	{0xd81b, &op_cmul,	  3,   3, 255, 0xff, 0x00, 0x00, 0x01}, // cmul.w d d  
	{0xd81c, &op_cmul,	  4,   3, 255, 0xff, 0x00, 0x00, 0x01}, // cmul.w e d  
	{0xd81d, &op_cmul,	  5,   3, 255, 0xff, 0x00, 0x00, 0x01}, // cmul.w f d  
	{0xd81e, &op_cmul,	  6,   3, 255, 0xff, 0x00, 0x00, 0x01}, // cmul.w g d  
	{0xd81f, &op_cmul,	  7,   3, 255, 0xff, 0x00, 0x00, 0x01}, // cmul.w h d  
	{0xd820, &op_cmul,	  0,   4, 255, 0xff, 0x00, 0x00, 0x01}, // cmul.w a e  
	{0xd821, &op_cmul,	  1,   4, 255, 0xff, 0x00, 0x00, 0x01}, // cmul.w b e  
	{0xd822, &op_cmul,	  2,   4, 255, 0xff, 0x00, 0x00, 0x01}, // cmul.w c e  
	{0xd823, &op_cmul,	  3,   4, 255, 0xff, 0x00, 0x00, 0x01}, // cmul.w d e  
	{0xd824, &op_cmul,	  4,   4, 255, 0xff, 0x00, 0x00, 0x01}, // cmul.w e e  
	{0xd825, &op_cmul,	  5,   4, 255, 0xff, 0x00, 0x00, 0x01}, // cmul.w f e  
	{0xd826, &op_cmul,	  6,   4, 255, 0xff, 0x00, 0x00, 0x01}, // cmul.w g e  
	{0xd827, &op_cmul,	  7,   4, 255, 0xff, 0x00, 0x00, 0x01}, // cmul.w h e  
	{0xd828, &op_cmul,	  0,   5, 255, 0xff, 0x00, 0x00, 0x01}, // cmul.w a f  
	{0xd829, &op_cmul,	  1,   5, 255, 0xff, 0x00, 0x00, 0x01}, // cmul.w b f  
	{0xd82a, &op_cmul,	  2,   5, 255, 0xff, 0x00, 0x00, 0x01}, // cmul.w c f  
	{0xd82b, &op_cmul,	  3,   5, 255, 0xff, 0x00, 0x00, 0x01}, // cmul.w d f  
	{0xd82c, &op_cmul,	  4,   5, 255, 0xff, 0x00, 0x00, 0x01}, // cmul.w e f  
	{0xd82d, &op_cmul,	  5,   5, 255, 0xff, 0x00, 0x00, 0x01}, // cmul.w f f  
	{0xd82e, &op_cmul,	  6,   5, 255, 0xff, 0x00, 0x00, 0x01}, // cmul.w g f  
	{0xd82f, &op_cmul,	  7,   5, 255, 0xff, 0x00, 0x00, 0x01}, // cmul.w h f  
	{0xd830, &op_cmul,	  0,   6, 255, 0xff, 0x00, 0x00, 0x01}, // cmul.w a g  
	{0xd831, &op_cmul,	  1,   6, 255, 0xff, 0x00, 0x00, 0x01}, // cmul.w b g  
	{0xd832, &op_cmul,	  2,   6, 255, 0xff, 0x00, 0x00, 0x01}, // cmul.w c g  
	{0xd833, &op_cmul,	  3,   6, 255, 0xff, 0x00, 0x00, 0x01}, // cmul.w d g  
	{0xd834, &op_cmul,	  4,   6, 255, 0xff, 0x00, 0x00, 0x01}, // cmul.w e g  
	{0xd835, &op_cmul,	  5,   6, 255, 0xff, 0x00, 0x00, 0x01}, // cmul.w f g  
	{0xd836, &op_cmul,	  6,   6, 255, 0xff, 0x00, 0x00, 0x01}, // cmul.w g g  
	{0xd837, &op_cmul,	  7,   6, 255, 0xff, 0x00, 0x00, 0x01}, // cmul.w h g  
	{0xd838, &op_cmul,	  0,   7, 255, 0xff, 0x00, 0x00, 0x01}, // cmul.w a h  
	{0xd839, &op_cmul,	  1,   7, 255, 0xff, 0x00, 0x00, 0x01}, // cmul.w b h  
	{0xd83a, &op_cmul,	  2,   7, 255, 0xff, 0x00, 0x00, 0x01}, // cmul.w c h  
	{0xd83b, &op_cmul,	  3,   7, 255, 0xff, 0x00, 0x00, 0x01}, // cmul.w d h  
	{0xd83c, &op_cmul,	  4,   7, 255, 0xff, 0x00, 0x00, 0x01}, // cmul.w e h  
	{0xd83d, &op_cmul,	  5,   7, 255, 0xff, 0x00, 0x00, 0x01}, // cmul.w f h  
	{0xd83e, &op_cmul,	  6,   7, 255, 0xff, 0x00, 0x00, 0x01}, // cmul.w g h  
	{0xd83f, &op_cmul,	  7,   7, 255, 0xff, 0x00, 0x00, 0x01}, // cmul.w h h  
	{0xd840, &op_cmul,	  0,   0, 255, 0xff, 0x00, 0x00, 0x02}, // cmul.d a a  
	{0xd841, &op_cmul,	  1,   0, 255, 0xff, 0x00, 0x00, 0x02}, // cmul.d b a  
	{0xd842, &op_cmul,	  2,   0, 255, 0xff, 0x00, 0x00, 0x02}, // cmul.d c a  
	{0xd843, &op_cmul,	  3,   0, 255, 0xff, 0x00, 0x00, 0x02}, // cmul.d d a  
	{0xd844, &op_cmul,	  4,   0, 255, 0xff, 0x00, 0x00, 0x02}, // cmul.d e a  
	{0xd845, &op_cmul,	  5,   0, 255, 0xff, 0x00, 0x00, 0x02}, // cmul.d f a  
	{0xd846, &op_cmul,	  6,   0, 255, 0xff, 0x00, 0x00, 0x02}, // cmul.d g a  
	{0xd847, &op_cmul,	  7,   0, 255, 0xff, 0x00, 0x00, 0x02}, // cmul.d h a  
	{0xd848, &op_cmul,	  0,   1, 255, 0xff, 0x00, 0x00, 0x02}, // cmul.d a b  
	{0xd849, &op_cmul,	  1,   1, 255, 0xff, 0x00, 0x00, 0x02}, // cmul.d b b  
	{0xd84a, &op_cmul,	  2,   1, 255, 0xff, 0x00, 0x00, 0x02}, // cmul.d c b  
	{0xd84b, &op_cmul,	  3,   1, 255, 0xff, 0x00, 0x00, 0x02}, // cmul.d d b  
	{0xd84c, &op_cmul,	  4,   1, 255, 0xff, 0x00, 0x00, 0x02}, // cmul.d e b  
	{0xd84d, &op_cmul,	  5,   1, 255, 0xff, 0x00, 0x00, 0x02}, // cmul.d f b  
	{0xd84e, &op_cmul,	  6,   1, 255, 0xff, 0x00, 0x00, 0x02}, // cmul.d g b  
	{0xd84f, &op_cmul,	  7,   1, 255, 0xff, 0x00, 0x00, 0x02}, // cmul.d h b  
	{0xd850, &op_cmul,	  0,   2, 255, 0xff, 0x00, 0x00, 0x02}, // cmul.d a c  
	{0xd851, &op_cmul,	  1,   2, 255, 0xff, 0x00, 0x00, 0x02}, // cmul.d b c  
	{0xd852, &op_cmul,	  2,   2, 255, 0xff, 0x00, 0x00, 0x02}, // cmul.d c c  
	{0xd853, &op_cmul,	  3,   2, 255, 0xff, 0x00, 0x00, 0x02}, // cmul.d d c  
	{0xd854, &op_cmul,	  4,   2, 255, 0xff, 0x00, 0x00, 0x02}, // cmul.d e c  
	{0xd855, &op_cmul,	  5,   2, 255, 0xff, 0x00, 0x00, 0x02}, // cmul.d f c  
	{0xd856, &op_cmul,	  6,   2, 255, 0xff, 0x00, 0x00, 0x02}, // cmul.d g c  
	{0xd857, &op_cmul,	  7,   2, 255, 0xff, 0x00, 0x00, 0x02}, // cmul.d h c  
	{0xd858, &op_cmul,	  0,   3, 255, 0xff, 0x00, 0x00, 0x02}, // cmul.d a d  
	{0xd859, &op_cmul,	  1,   3, 255, 0xff, 0x00, 0x00, 0x02}, // cmul.d b d  
	{0xd85a, &op_cmul,	  2,   3, 255, 0xff, 0x00, 0x00, 0x02}, // cmul.d c d  
	{0xd85b, &op_cmul,	  3,   3, 255, 0xff, 0x00, 0x00, 0x02}, // cmul.d d d  
	{0xd85c, &op_cmul,	  4,   3, 255, 0xff, 0x00, 0x00, 0x02}, // cmul.d e d  
	{0xd85d, &op_cmul,	  5,   3, 255, 0xff, 0x00, 0x00, 0x02}, // cmul.d f d  
	{0xd85e, &op_cmul,	  6,   3, 255, 0xff, 0x00, 0x00, 0x02}, // cmul.d g d  
	{0xd85f, &op_cmul,	  7,   3, 255, 0xff, 0x00, 0x00, 0x02}, // cmul.d h d  
	{0xd860, &op_cmul,	  0,   4, 255, 0xff, 0x00, 0x00, 0x02}, // cmul.d a e  
	{0xd861, &op_cmul,	  1,   4, 255, 0xff, 0x00, 0x00, 0x02}, // cmul.d b e  
	{0xd862, &op_cmul,	  2,   4, 255, 0xff, 0x00, 0x00, 0x02}, // cmul.d c e  
	{0xd863, &op_cmul,	  3,   4, 255, 0xff, 0x00, 0x00, 0x02}, // cmul.d d e  
	{0xd864, &op_cmul,	  4,   4, 255, 0xff, 0x00, 0x00, 0x02}, // cmul.d e e  
	{0xd865, &op_cmul,	  5,   4, 255, 0xff, 0x00, 0x00, 0x02}, // cmul.d f e  
	{0xd866, &op_cmul,	  6,   4, 255, 0xff, 0x00, 0x00, 0x02}, // cmul.d g e  
	{0xd867, &op_cmul,	  7,   4, 255, 0xff, 0x00, 0x00, 0x02}, // cmul.d h e  
	{0xd868, &op_cmul,	  0,   5, 255, 0xff, 0x00, 0x00, 0x02}, // cmul.d a f  
	{0xd869, &op_cmul,	  1,   5, 255, 0xff, 0x00, 0x00, 0x02}, // cmul.d b f  
	{0xd86a, &op_cmul,	  2,   5, 255, 0xff, 0x00, 0x00, 0x02}, // cmul.d c f  
	{0xd86b, &op_cmul,	  3,   5, 255, 0xff, 0x00, 0x00, 0x02}, // cmul.d d f  
	{0xd86c, &op_cmul,	  4,   5, 255, 0xff, 0x00, 0x00, 0x02}, // cmul.d e f  
	{0xd86d, &op_cmul,	  5,   5, 255, 0xff, 0x00, 0x00, 0x02}, // cmul.d f f  
	{0xd86e, &op_cmul,	  6,   5, 255, 0xff, 0x00, 0x00, 0x02}, // cmul.d g f  
	{0xd86f, &op_cmul,	  7,   5, 255, 0xff, 0x00, 0x00, 0x02}, // cmul.d h f  
	{0xd870, &op_cmul,	  0,   6, 255, 0xff, 0x00, 0x00, 0x02}, // cmul.d a g  
	{0xd871, &op_cmul,	  1,   6, 255, 0xff, 0x00, 0x00, 0x02}, // cmul.d b g  
	{0xd872, &op_cmul,	  2,   6, 255, 0xff, 0x00, 0x00, 0x02}, // cmul.d c g  
	{0xd873, &op_cmul,	  3,   6, 255, 0xff, 0x00, 0x00, 0x02}, // cmul.d d g  
	{0xd874, &op_cmul,	  4,   6, 255, 0xff, 0x00, 0x00, 0x02}, // cmul.d e g  
	{0xd875, &op_cmul,	  5,   6, 255, 0xff, 0x00, 0x00, 0x02}, // cmul.d f g  
	{0xd876, &op_cmul,	  6,   6, 255, 0xff, 0x00, 0x00, 0x02}, // cmul.d g g  
	{0xd877, &op_cmul,	  7,   6, 255, 0xff, 0x00, 0x00, 0x02}, // cmul.d h g  
	{0xd878, &op_cmul,	  0,   7, 255, 0xff, 0x00, 0x00, 0x02}, // cmul.d a h  
	{0xd879, &op_cmul,	  1,   7, 255, 0xff, 0x00, 0x00, 0x02}, // cmul.d b h  
	{0xd87a, &op_cmul,	  2,   7, 255, 0xff, 0x00, 0x00, 0x02}, // cmul.d c h  
	{0xd87b, &op_cmul,	  3,   7, 255, 0xff, 0x00, 0x00, 0x02}, // cmul.d d h  
	{0xd87c, &op_cmul,	  4,   7, 255, 0xff, 0x00, 0x00, 0x02}, // cmul.d e h  
	{0xd87d, &op_cmul,	  5,   7, 255, 0xff, 0x00, 0x00, 0x02}, // cmul.d f h  
	{0xd87e, &op_cmul,	  6,   7, 255, 0xff, 0x00, 0x00, 0x02}, // cmul.d g h  
	{0xd87f, &op_cmul,	  7,   7, 255, 0xff, 0x00, 0x00, 0x02}, // cmul.d h h  
	{0xd880, &op_cmul,	  0,   0, 255, 0xff, 0x00, 0x00, 0x04}, // cmul a a  
	{0xd881, &op_cmul,	  1,   0, 255, 0xff, 0x00, 0x00, 0x04}, // cmul b a  
	{0xd882, &op_cmul,	  2,   0, 255, 0xff, 0x00, 0x00, 0x04}, // cmul c a  
	{0xd883, &op_cmul,	  3,   0, 255, 0xff, 0x00, 0x00, 0x04}, // cmul d a  
	{0xd884, &op_cmul,	  4,   0, 255, 0xff, 0x00, 0x00, 0x04}, // cmul e a  
	{0xd885, &op_cmul,	  5,   0, 255, 0xff, 0x00, 0x00, 0x04}, // cmul f a  
	{0xd886, &op_cmul,	  6,   0, 255, 0xff, 0x00, 0x00, 0x04}, // cmul g a  
	{0xd887, &op_cmul,	  7,   0, 255, 0xff, 0x00, 0x00, 0x04}, // cmul h a  
	{0xd888, &op_cmul,	  0,   1, 255, 0xff, 0x00, 0x00, 0x04}, // cmul a b  
	{0xd889, &op_cmul,	  1,   1, 255, 0xff, 0x00, 0x00, 0x04}, // cmul b b  
	{0xd88a, &op_cmul,	  2,   1, 255, 0xff, 0x00, 0x00, 0x04}, // cmul c b  
	{0xd88b, &op_cmul,	  3,   1, 255, 0xff, 0x00, 0x00, 0x04}, // cmul d b  
	{0xd88c, &op_cmul,	  4,   1, 255, 0xff, 0x00, 0x00, 0x04}, // cmul e b  
	{0xd88d, &op_cmul,	  5,   1, 255, 0xff, 0x00, 0x00, 0x04}, // cmul f b  
	{0xd88e, &op_cmul,	  6,   1, 255, 0xff, 0x00, 0x00, 0x04}, // cmul g b  
	{0xd88f, &op_cmul,	  7,   1, 255, 0xff, 0x00, 0x00, 0x04}, // cmul h b  
	{0xd890, &op_cmul,	  0,   2, 255, 0xff, 0x00, 0x00, 0x04}, // cmul a c  
	{0xd891, &op_cmul,	  1,   2, 255, 0xff, 0x00, 0x00, 0x04}, // cmul b c  
	{0xd892, &op_cmul,	  2,   2, 255, 0xff, 0x00, 0x00, 0x04}, // cmul c c  
	{0xd893, &op_cmul,	  3,   2, 255, 0xff, 0x00, 0x00, 0x04}, // cmul d c  
	{0xd894, &op_cmul,	  4,   2, 255, 0xff, 0x00, 0x00, 0x04}, // cmul e c  
	{0xd895, &op_cmul,	  5,   2, 255, 0xff, 0x00, 0x00, 0x04}, // cmul f c  
	{0xd896, &op_cmul,	  6,   2, 255, 0xff, 0x00, 0x00, 0x04}, // cmul g c  
	{0xd897, &op_cmul,	  7,   2, 255, 0xff, 0x00, 0x00, 0x04}, // cmul h c  
	{0xd898, &op_cmul,	  0,   3, 255, 0xff, 0x00, 0x00, 0x04}, // cmul a d  
	{0xd899, &op_cmul,	  1,   3, 255, 0xff, 0x00, 0x00, 0x04}, // cmul b d  
	{0xd89a, &op_cmul,	  2,   3, 255, 0xff, 0x00, 0x00, 0x04}, // cmul c d  
	{0xd89b, &op_cmul,	  3,   3, 255, 0xff, 0x00, 0x00, 0x04}, // cmul d d  
	{0xd89c, &op_cmul,	  4,   3, 255, 0xff, 0x00, 0x00, 0x04}, // cmul e d  
	{0xd89d, &op_cmul,	  5,   3, 255, 0xff, 0x00, 0x00, 0x04}, // cmul f d  
	{0xd89e, &op_cmul,	  6,   3, 255, 0xff, 0x00, 0x00, 0x04}, // cmul g d  
	{0xd89f, &op_cmul,	  7,   3, 255, 0xff, 0x00, 0x00, 0x04}, // cmul h d  
	{0xd8a0, &op_cmul,	  0,   4, 255, 0xff, 0x00, 0x00, 0x04}, // cmul a e  
	{0xd8a1, &op_cmul,	  1,   4, 255, 0xff, 0x00, 0x00, 0x04}, // cmul b e  
	{0xd8a2, &op_cmul,	  2,   4, 255, 0xff, 0x00, 0x00, 0x04}, // cmul c e  
	{0xd8a3, &op_cmul,	  3,   4, 255, 0xff, 0x00, 0x00, 0x04}, // cmul d e  
	{0xd8a4, &op_cmul,	  4,   4, 255, 0xff, 0x00, 0x00, 0x04}, // cmul e e  
	{0xd8a5, &op_cmul,	  5,   4, 255, 0xff, 0x00, 0x00, 0x04}, // cmul f e  
	{0xd8a6, &op_cmul,	  6,   4, 255, 0xff, 0x00, 0x00, 0x04}, // cmul g e  
	{0xd8a7, &op_cmul,	  7,   4, 255, 0xff, 0x00, 0x00, 0x04}, // cmul h e  
	{0xd8a8, &op_cmul,	  0,   5, 255, 0xff, 0x00, 0x00, 0x04}, // cmul a f  
	{0xd8a9, &op_cmul,	  1,   5, 255, 0xff, 0x00, 0x00, 0x04}, // cmul b f  
	{0xd8aa, &op_cmul,	  2,   5, 255, 0xff, 0x00, 0x00, 0x04}, // cmul c f  
	{0xd8ab, &op_cmul,	  3,   5, 255, 0xff, 0x00, 0x00, 0x04}, // cmul d f  
	{0xd8ac, &op_cmul,	  4,   5, 255, 0xff, 0x00, 0x00, 0x04}, // cmul e f  
	{0xd8ad, &op_cmul,	  5,   5, 255, 0xff, 0x00, 0x00, 0x04}, // cmul f f  
	{0xd8ae, &op_cmul,	  6,   5, 255, 0xff, 0x00, 0x00, 0x04}, // cmul g f  
	{0xd8af, &op_cmul,	  7,   5, 255, 0xff, 0x00, 0x00, 0x04}, // cmul h f  
	{0xd8b0, &op_cmul,	  0,   6, 255, 0xff, 0x00, 0x00, 0x04}, // cmul a g  
	{0xd8b1, &op_cmul,	  1,   6, 255, 0xff, 0x00, 0x00, 0x04}, // cmul b g  
	{0xd8b2, &op_cmul,	  2,   6, 255, 0xff, 0x00, 0x00, 0x04}, // cmul c g  
	{0xd8b3, &op_cmul,	  3,   6, 255, 0xff, 0x00, 0x00, 0x04}, // cmul d g  
	{0xd8b4, &op_cmul,	  4,   6, 255, 0xff, 0x00, 0x00, 0x04}, // cmul e g  
	{0xd8b5, &op_cmul,	  5,   6, 255, 0xff, 0x00, 0x00, 0x04}, // cmul f g  
	{0xd8b6, &op_cmul,	  6,   6, 255, 0xff, 0x00, 0x00, 0x04}, // cmul g g  
	{0xd8b7, &op_cmul,	  7,   6, 255, 0xff, 0x00, 0x00, 0x04}, // cmul h g  
	{0xd8b8, &op_cmul,	  0,   7, 255, 0xff, 0x00, 0x00, 0x04}, // cmul a h  
	{0xd8b9, &op_cmul,	  1,   7, 255, 0xff, 0x00, 0x00, 0x04}, // cmul b h  
	{0xd8ba, &op_cmul,	  2,   7, 255, 0xff, 0x00, 0x00, 0x04}, // cmul c h  
	{0xd8bb, &op_cmul,	  3,   7, 255, 0xff, 0x00, 0x00, 0x04}, // cmul d h  
	{0xd8bc, &op_cmul,	  4,   7, 255, 0xff, 0x00, 0x00, 0x04}, // cmul e h  
	{0xd8bd, &op_cmul,	  5,   7, 255, 0xff, 0x00, 0x00, 0x04}, // cmul f h  
	{0xd8be, &op_cmul,	  6,   7, 255, 0xff, 0x00, 0x00, 0x04}, // cmul g h  
	{0xd8bf, &op_cmul,	  7,   7, 255, 0xff, 0x00, 0x00, 0x04}, // cmul h h  
	{0xd900, &op_cmul,	  0,   0, 255, 0xff, 0x01, 0x00, 0x01}, // cmul.wr a a  
	{0xd901, &op_cmul,	  1,   0, 255, 0xff, 0x01, 0x00, 0x01}, // cmul.wr b a  
	{0xd902, &op_cmul,	  2,   0, 255, 0xff, 0x01, 0x00, 0x01}, // cmul.wr c a  
	{0xd903, &op_cmul,	  3,   0, 255, 0xff, 0x01, 0x00, 0x01}, // cmul.wr d a  
	{0xd904, &op_cmul,	  4,   0, 255, 0xff, 0x01, 0x00, 0x01}, // cmul.wr e a  
	{0xd905, &op_cmul,	  5,   0, 255, 0xff, 0x01, 0x00, 0x01}, // cmul.wr f a  
	{0xd906, &op_cmul,	  6,   0, 255, 0xff, 0x01, 0x00, 0x01}, // cmul.wr g a  
	{0xd907, &op_cmul,	  7,   0, 255, 0xff, 0x01, 0x00, 0x01}, // cmul.wr h a  
	{0xd908, &op_cmul,	  0,   1, 255, 0xff, 0x01, 0x00, 0x01}, // cmul.wr a b  
	{0xd909, &op_cmul,	  1,   1, 255, 0xff, 0x01, 0x00, 0x01}, // cmul.wr b b  
	{0xd90a, &op_cmul,	  2,   1, 255, 0xff, 0x01, 0x00, 0x01}, // cmul.wr c b  
	{0xd90b, &op_cmul,	  3,   1, 255, 0xff, 0x01, 0x00, 0x01}, // cmul.wr d b  
	{0xd90c, &op_cmul,	  4,   1, 255, 0xff, 0x01, 0x00, 0x01}, // cmul.wr e b  
	{0xd90d, &op_cmul,	  5,   1, 255, 0xff, 0x01, 0x00, 0x01}, // cmul.wr f b  
	{0xd90e, &op_cmul,	  6,   1, 255, 0xff, 0x01, 0x00, 0x01}, // cmul.wr g b  
	{0xd90f, &op_cmul,	  7,   1, 255, 0xff, 0x01, 0x00, 0x01}, // cmul.wr h b  
	{0xd910, &op_cmul,	  0,   2, 255, 0xff, 0x01, 0x00, 0x01}, // cmul.wr a c  
	{0xd911, &op_cmul,	  1,   2, 255, 0xff, 0x01, 0x00, 0x01}, // cmul.wr b c  
	{0xd912, &op_cmul,	  2,   2, 255, 0xff, 0x01, 0x00, 0x01}, // cmul.wr c c  
	{0xd913, &op_cmul,	  3,   2, 255, 0xff, 0x01, 0x00, 0x01}, // cmul.wr d c  
	{0xd914, &op_cmul,	  4,   2, 255, 0xff, 0x01, 0x00, 0x01}, // cmul.wr e c  
	{0xd915, &op_cmul,	  5,   2, 255, 0xff, 0x01, 0x00, 0x01}, // cmul.wr f c  
	{0xd916, &op_cmul,	  6,   2, 255, 0xff, 0x01, 0x00, 0x01}, // cmul.wr g c  
	{0xd917, &op_cmul,	  7,   2, 255, 0xff, 0x01, 0x00, 0x01}, // cmul.wr h c  
	{0xd918, &op_cmul,	  0,   3, 255, 0xff, 0x01, 0x00, 0x01}, // cmul.wr a d  
	{0xd919, &op_cmul,	  1,   3, 255, 0xff, 0x01, 0x00, 0x01}, // cmul.wr b d  
	{0xd91a, &op_cmul,	  2,   3, 255, 0xff, 0x01, 0x00, 0x01}, // cmul.wr c d  
	{0xd91b, &op_cmul,	  3,   3, 255, 0xff, 0x01, 0x00, 0x01}, // cmul.wr d d  
	{0xd91c, &op_cmul,	  4,   3, 255, 0xff, 0x01, 0x00, 0x01}, // cmul.wr e d  
	{0xd91d, &op_cmul,	  5,   3, 255, 0xff, 0x01, 0x00, 0x01}, // cmul.wr f d  
	{0xd91e, &op_cmul,	  6,   3, 255, 0xff, 0x01, 0x00, 0x01}, // cmul.wr g d  
	{0xd91f, &op_cmul,	  7,   3, 255, 0xff, 0x01, 0x00, 0x01}, // cmul.wr h d  
	{0xd920, &op_cmul,	  0,   4, 255, 0xff, 0x01, 0x00, 0x01}, // cmul.wr a e  
	{0xd921, &op_cmul,	  1,   4, 255, 0xff, 0x01, 0x00, 0x01}, // cmul.wr b e  
	{0xd922, &op_cmul,	  2,   4, 255, 0xff, 0x01, 0x00, 0x01}, // cmul.wr c e  
	{0xd923, &op_cmul,	  3,   4, 255, 0xff, 0x01, 0x00, 0x01}, // cmul.wr d e  
	{0xd924, &op_cmul,	  4,   4, 255, 0xff, 0x01, 0x00, 0x01}, // cmul.wr e e  
	{0xd925, &op_cmul,	  5,   4, 255, 0xff, 0x01, 0x00, 0x01}, // cmul.wr f e  
	{0xd926, &op_cmul,	  6,   4, 255, 0xff, 0x01, 0x00, 0x01}, // cmul.wr g e  
	{0xd927, &op_cmul,	  7,   4, 255, 0xff, 0x01, 0x00, 0x01}, // cmul.wr h e  
	{0xd928, &op_cmul,	  0,   5, 255, 0xff, 0x01, 0x00, 0x01}, // cmul.wr a f  
	{0xd929, &op_cmul,	  1,   5, 255, 0xff, 0x01, 0x00, 0x01}, // cmul.wr b f  
	{0xd92a, &op_cmul,	  2,   5, 255, 0xff, 0x01, 0x00, 0x01}, // cmul.wr c f  
	{0xd92b, &op_cmul,	  3,   5, 255, 0xff, 0x01, 0x00, 0x01}, // cmul.wr d f  
	{0xd92c, &op_cmul,	  4,   5, 255, 0xff, 0x01, 0x00, 0x01}, // cmul.wr e f  
	{0xd92d, &op_cmul,	  5,   5, 255, 0xff, 0x01, 0x00, 0x01}, // cmul.wr f f  
	{0xd92e, &op_cmul,	  6,   5, 255, 0xff, 0x01, 0x00, 0x01}, // cmul.wr g f  
	{0xd92f, &op_cmul,	  7,   5, 255, 0xff, 0x01, 0x00, 0x01}, // cmul.wr h f  
	{0xd930, &op_cmul,	  0,   6, 255, 0xff, 0x01, 0x00, 0x01}, // cmul.wr a g  
	{0xd931, &op_cmul,	  1,   6, 255, 0xff, 0x01, 0x00, 0x01}, // cmul.wr b g  
	{0xd932, &op_cmul,	  2,   6, 255, 0xff, 0x01, 0x00, 0x01}, // cmul.wr c g  
	{0xd933, &op_cmul,	  3,   6, 255, 0xff, 0x01, 0x00, 0x01}, // cmul.wr d g  
	{0xd934, &op_cmul,	  4,   6, 255, 0xff, 0x01, 0x00, 0x01}, // cmul.wr e g  
	{0xd935, &op_cmul,	  5,   6, 255, 0xff, 0x01, 0x00, 0x01}, // cmul.wr f g  
	{0xd936, &op_cmul,	  6,   6, 255, 0xff, 0x01, 0x00, 0x01}, // cmul.wr g g  
	{0xd937, &op_cmul,	  7,   6, 255, 0xff, 0x01, 0x00, 0x01}, // cmul.wr h g  
	{0xd938, &op_cmul,	  0,   7, 255, 0xff, 0x01, 0x00, 0x01}, // cmul.wr a h  
	{0xd939, &op_cmul,	  1,   7, 255, 0xff, 0x01, 0x00, 0x01}, // cmul.wr b h  
	{0xd93a, &op_cmul,	  2,   7, 255, 0xff, 0x01, 0x00, 0x01}, // cmul.wr c h  
	{0xd93b, &op_cmul,	  3,   7, 255, 0xff, 0x01, 0x00, 0x01}, // cmul.wr d h  
	{0xd93c, &op_cmul,	  4,   7, 255, 0xff, 0x01, 0x00, 0x01}, // cmul.wr e h  
	{0xd93d, &op_cmul,	  5,   7, 255, 0xff, 0x01, 0x00, 0x01}, // cmul.wr f h  
	{0xd93e, &op_cmul,	  6,   7, 255, 0xff, 0x01, 0x00, 0x01}, // cmul.wr g h  
	{0xd93f, &op_cmul,	  7,   7, 255, 0xff, 0x01, 0x00, 0x01}, // cmul.wr h h  
	{0xd940, &op_cmul,	  0,   0, 255, 0xff, 0x01, 0x00, 0x02}, // cmul.dr a a  
	{0xd941, &op_cmul,	  1,   0, 255, 0xff, 0x01, 0x00, 0x02}, // cmul.dr b a  
	{0xd942, &op_cmul,	  2,   0, 255, 0xff, 0x01, 0x00, 0x02}, // cmul.dr c a  
	{0xd943, &op_cmul,	  3,   0, 255, 0xff, 0x01, 0x00, 0x02}, // cmul.dr d a  
	{0xd944, &op_cmul,	  4,   0, 255, 0xff, 0x01, 0x00, 0x02}, // cmul.dr e a  
	{0xd945, &op_cmul,	  5,   0, 255, 0xff, 0x01, 0x00, 0x02}, // cmul.dr f a  
	{0xd946, &op_cmul,	  6,   0, 255, 0xff, 0x01, 0x00, 0x02}, // cmul.dr g a  
	{0xd947, &op_cmul,	  7,   0, 255, 0xff, 0x01, 0x00, 0x02}, // cmul.dr h a  
	{0xd948, &op_cmul,	  0,   1, 255, 0xff, 0x01, 0x00, 0x02}, // cmul.dr a b  
	{0xd949, &op_cmul,	  1,   1, 255, 0xff, 0x01, 0x00, 0x02}, // cmul.dr b b  
	{0xd94a, &op_cmul,	  2,   1, 255, 0xff, 0x01, 0x00, 0x02}, // cmul.dr c b  
	{0xd94b, &op_cmul,	  3,   1, 255, 0xff, 0x01, 0x00, 0x02}, // cmul.dr d b  
	{0xd94c, &op_cmul,	  4,   1, 255, 0xff, 0x01, 0x00, 0x02}, // cmul.dr e b  
	{0xd94d, &op_cmul,	  5,   1, 255, 0xff, 0x01, 0x00, 0x02}, // cmul.dr f b  
	{0xd94e, &op_cmul,	  6,   1, 255, 0xff, 0x01, 0x00, 0x02}, // cmul.dr g b  
	{0xd94f, &op_cmul,	  7,   1, 255, 0xff, 0x01, 0x00, 0x02}, // cmul.dr h b  
	{0xd950, &op_cmul,	  0,   2, 255, 0xff, 0x01, 0x00, 0x02}, // cmul.dr a c  
	{0xd951, &op_cmul,	  1,   2, 255, 0xff, 0x01, 0x00, 0x02}, // cmul.dr b c  
	{0xd952, &op_cmul,	  2,   2, 255, 0xff, 0x01, 0x00, 0x02}, // cmul.dr c c  
	{0xd953, &op_cmul,	  3,   2, 255, 0xff, 0x01, 0x00, 0x02}, // cmul.dr d c  
	{0xd954, &op_cmul,	  4,   2, 255, 0xff, 0x01, 0x00, 0x02}, // cmul.dr e c  
	{0xd955, &op_cmul,	  5,   2, 255, 0xff, 0x01, 0x00, 0x02}, // cmul.dr f c  
	{0xd956, &op_cmul,	  6,   2, 255, 0xff, 0x01, 0x00, 0x02}, // cmul.dr g c  
	{0xd957, &op_cmul,	  7,   2, 255, 0xff, 0x01, 0x00, 0x02}, // cmul.dr h c  
	{0xd958, &op_cmul,	  0,   3, 255, 0xff, 0x01, 0x00, 0x02}, // cmul.dr a d  
	{0xd959, &op_cmul,	  1,   3, 255, 0xff, 0x01, 0x00, 0x02}, // cmul.dr b d  
	{0xd95a, &op_cmul,	  2,   3, 255, 0xff, 0x01, 0x00, 0x02}, // cmul.dr c d  
	{0xd95b, &op_cmul,	  3,   3, 255, 0xff, 0x01, 0x00, 0x02}, // cmul.dr d d  
	{0xd95c, &op_cmul,	  4,   3, 255, 0xff, 0x01, 0x00, 0x02}, // cmul.dr e d  
	{0xd95d, &op_cmul,	  5,   3, 255, 0xff, 0x01, 0x00, 0x02}, // cmul.dr f d  
	{0xd95e, &op_cmul,	  6,   3, 255, 0xff, 0x01, 0x00, 0x02}, // cmul.dr g d  
	{0xd95f, &op_cmul,	  7,   3, 255, 0xff, 0x01, 0x00, 0x02}, // cmul.dr h d  
	{0xd960, &op_cmul,	  0,   4, 255, 0xff, 0x01, 0x00, 0x02}, // cmul.dr a e  
	{0xd961, &op_cmul,	  1,   4, 255, 0xff, 0x01, 0x00, 0x02}, // cmul.dr b e  
	{0xd962, &op_cmul,	  2,   4, 255, 0xff, 0x01, 0x00, 0x02}, // cmul.dr c e  
	{0xd963, &op_cmul,	  3,   4, 255, 0xff, 0x01, 0x00, 0x02}, // cmul.dr d e  
	{0xd964, &op_cmul,	  4,   4, 255, 0xff, 0x01, 0x00, 0x02}, // cmul.dr e e  
	{0xd965, &op_cmul,	  5,   4, 255, 0xff, 0x01, 0x00, 0x02}, // cmul.dr f e  
	{0xd966, &op_cmul,	  6,   4, 255, 0xff, 0x01, 0x00, 0x02}, // cmul.dr g e  
	{0xd967, &op_cmul,	  7,   4, 255, 0xff, 0x01, 0x00, 0x02}, // cmul.dr h e  
	{0xd968, &op_cmul,	  0,   5, 255, 0xff, 0x01, 0x00, 0x02}, // cmul.dr a f  
	{0xd969, &op_cmul,	  1,   5, 255, 0xff, 0x01, 0x00, 0x02}, // cmul.dr b f  
	{0xd96a, &op_cmul,	  2,   5, 255, 0xff, 0x01, 0x00, 0x02}, // cmul.dr c f  
	{0xd96b, &op_cmul,	  3,   5, 255, 0xff, 0x01, 0x00, 0x02}, // cmul.dr d f  
	{0xd96c, &op_cmul,	  4,   5, 255, 0xff, 0x01, 0x00, 0x02}, // cmul.dr e f  
	{0xd96d, &op_cmul,	  5,   5, 255, 0xff, 0x01, 0x00, 0x02}, // cmul.dr f f  
	{0xd96e, &op_cmul,	  6,   5, 255, 0xff, 0x01, 0x00, 0x02}, // cmul.dr g f  
	{0xd96f, &op_cmul,	  7,   5, 255, 0xff, 0x01, 0x00, 0x02}, // cmul.dr h f  
	{0xd970, &op_cmul,	  0,   6, 255, 0xff, 0x01, 0x00, 0x02}, // cmul.dr a g  
	{0xd971, &op_cmul,	  1,   6, 255, 0xff, 0x01, 0x00, 0x02}, // cmul.dr b g  
	{0xd972, &op_cmul,	  2,   6, 255, 0xff, 0x01, 0x00, 0x02}, // cmul.dr c g  
	{0xd973, &op_cmul,	  3,   6, 255, 0xff, 0x01, 0x00, 0x02}, // cmul.dr d g  
	{0xd974, &op_cmul,	  4,   6, 255, 0xff, 0x01, 0x00, 0x02}, // cmul.dr e g  
	{0xd975, &op_cmul,	  5,   6, 255, 0xff, 0x01, 0x00, 0x02}, // cmul.dr f g  
	{0xd976, &op_cmul,	  6,   6, 255, 0xff, 0x01, 0x00, 0x02}, // cmul.dr g g  
	{0xd977, &op_cmul,	  7,   6, 255, 0xff, 0x01, 0x00, 0x02}, // cmul.dr h g  
	{0xd978, &op_cmul,	  0,   7, 255, 0xff, 0x01, 0x00, 0x02}, // cmul.dr a h  
	{0xd979, &op_cmul,	  1,   7, 255, 0xff, 0x01, 0x00, 0x02}, // cmul.dr b h  
	{0xd97a, &op_cmul,	  2,   7, 255, 0xff, 0x01, 0x00, 0x02}, // cmul.dr c h  
	{0xd97b, &op_cmul,	  3,   7, 255, 0xff, 0x01, 0x00, 0x02}, // cmul.dr d h  
	{0xd97c, &op_cmul,	  4,   7, 255, 0xff, 0x01, 0x00, 0x02}, // cmul.dr e h  
	{0xd97d, &op_cmul,	  5,   7, 255, 0xff, 0x01, 0x00, 0x02}, // cmul.dr f h  
	{0xd97e, &op_cmul,	  6,   7, 255, 0xff, 0x01, 0x00, 0x02}, // cmul.dr g h  
	{0xd97f, &op_cmul,	  7,   7, 255, 0xff, 0x01, 0x00, 0x02}, // cmul.dr h h  
	{0xd980, &op_cmul,	  0,   0, 255, 0xff, 0x01, 0x00, 0x04}, // cmul.r a a  
	{0xd981, &op_cmul,	  1,   0, 255, 0xff, 0x01, 0x00, 0x04}, // cmul.r b a  
	{0xd982, &op_cmul,	  2,   0, 255, 0xff, 0x01, 0x00, 0x04}, // cmul.r c a  
	{0xd983, &op_cmul,	  3,   0, 255, 0xff, 0x01, 0x00, 0x04}, // cmul.r d a  
	{0xd984, &op_cmul,	  4,   0, 255, 0xff, 0x01, 0x00, 0x04}, // cmul.r e a  
	{0xd985, &op_cmul,	  5,   0, 255, 0xff, 0x01, 0x00, 0x04}, // cmul.r f a  
	{0xd986, &op_cmul,	  6,   0, 255, 0xff, 0x01, 0x00, 0x04}, // cmul.r g a  
	{0xd987, &op_cmul,	  7,   0, 255, 0xff, 0x01, 0x00, 0x04}, // cmul.r h a  
	{0xd988, &op_cmul,	  0,   1, 255, 0xff, 0x01, 0x00, 0x04}, // cmul.r a b  
	{0xd989, &op_cmul,	  1,   1, 255, 0xff, 0x01, 0x00, 0x04}, // cmul.r b b  
	{0xd98a, &op_cmul,	  2,   1, 255, 0xff, 0x01, 0x00, 0x04}, // cmul.r c b  
	{0xd98b, &op_cmul,	  3,   1, 255, 0xff, 0x01, 0x00, 0x04}, // cmul.r d b  
	{0xd98c, &op_cmul,	  4,   1, 255, 0xff, 0x01, 0x00, 0x04}, // cmul.r e b  
	{0xd98d, &op_cmul,	  5,   1, 255, 0xff, 0x01, 0x00, 0x04}, // cmul.r f b  
	{0xd98e, &op_cmul,	  6,   1, 255, 0xff, 0x01, 0x00, 0x04}, // cmul.r g b  
	{0xd98f, &op_cmul,	  7,   1, 255, 0xff, 0x01, 0x00, 0x04}, // cmul.r h b  
	{0xd990, &op_cmul,	  0,   2, 255, 0xff, 0x01, 0x00, 0x04}, // cmul.r a c  
	{0xd991, &op_cmul,	  1,   2, 255, 0xff, 0x01, 0x00, 0x04}, // cmul.r b c  
	{0xd992, &op_cmul,	  2,   2, 255, 0xff, 0x01, 0x00, 0x04}, // cmul.r c c  
	{0xd993, &op_cmul,	  3,   2, 255, 0xff, 0x01, 0x00, 0x04}, // cmul.r d c  
	{0xd994, &op_cmul,	  4,   2, 255, 0xff, 0x01, 0x00, 0x04}, // cmul.r e c  
	{0xd995, &op_cmul,	  5,   2, 255, 0xff, 0x01, 0x00, 0x04}, // cmul.r f c  
	{0xd996, &op_cmul,	  6,   2, 255, 0xff, 0x01, 0x00, 0x04}, // cmul.r g c  
	{0xd997, &op_cmul,	  7,   2, 255, 0xff, 0x01, 0x00, 0x04}, // cmul.r h c  
	{0xd998, &op_cmul,	  0,   3, 255, 0xff, 0x01, 0x00, 0x04}, // cmul.r a d  
	{0xd999, &op_cmul,	  1,   3, 255, 0xff, 0x01, 0x00, 0x04}, // cmul.r b d  
	{0xd99a, &op_cmul,	  2,   3, 255, 0xff, 0x01, 0x00, 0x04}, // cmul.r c d  
	{0xd99b, &op_cmul,	  3,   3, 255, 0xff, 0x01, 0x00, 0x04}, // cmul.r d d  
	{0xd99c, &op_cmul,	  4,   3, 255, 0xff, 0x01, 0x00, 0x04}, // cmul.r e d  
	{0xd99d, &op_cmul,	  5,   3, 255, 0xff, 0x01, 0x00, 0x04}, // cmul.r f d  
	{0xd99e, &op_cmul,	  6,   3, 255, 0xff, 0x01, 0x00, 0x04}, // cmul.r g d  
	{0xd99f, &op_cmul,	  7,   3, 255, 0xff, 0x01, 0x00, 0x04}, // cmul.r h d  
	{0xd9a0, &op_cmul,	  0,   4, 255, 0xff, 0x01, 0x00, 0x04}, // cmul.r a e  
	{0xd9a1, &op_cmul,	  1,   4, 255, 0xff, 0x01, 0x00, 0x04}, // cmul.r b e  
	{0xd9a2, &op_cmul,	  2,   4, 255, 0xff, 0x01, 0x00, 0x04}, // cmul.r c e  
	{0xd9a3, &op_cmul,	  3,   4, 255, 0xff, 0x01, 0x00, 0x04}, // cmul.r d e  
	{0xd9a4, &op_cmul,	  4,   4, 255, 0xff, 0x01, 0x00, 0x04}, // cmul.r e e  
	{0xd9a5, &op_cmul,	  5,   4, 255, 0xff, 0x01, 0x00, 0x04}, // cmul.r f e  
	{0xd9a6, &op_cmul,	  6,   4, 255, 0xff, 0x01, 0x00, 0x04}, // cmul.r g e  
	{0xd9a7, &op_cmul,	  7,   4, 255, 0xff, 0x01, 0x00, 0x04}, // cmul.r h e  
	{0xd9a8, &op_cmul,	  0,   5, 255, 0xff, 0x01, 0x00, 0x04}, // cmul.r a f  
	{0xd9a9, &op_cmul,	  1,   5, 255, 0xff, 0x01, 0x00, 0x04}, // cmul.r b f  
	{0xd9aa, &op_cmul,	  2,   5, 255, 0xff, 0x01, 0x00, 0x04}, // cmul.r c f  
	{0xd9ab, &op_cmul,	  3,   5, 255, 0xff, 0x01, 0x00, 0x04}, // cmul.r d f  
	{0xd9ac, &op_cmul,	  4,   5, 255, 0xff, 0x01, 0x00, 0x04}, // cmul.r e f  
	{0xd9ad, &op_cmul,	  5,   5, 255, 0xff, 0x01, 0x00, 0x04}, // cmul.r f f  
	{0xd9ae, &op_cmul,	  6,   5, 255, 0xff, 0x01, 0x00, 0x04}, // cmul.r g f  
	{0xd9af, &op_cmul,	  7,   5, 255, 0xff, 0x01, 0x00, 0x04}, // cmul.r h f  
	{0xd9b0, &op_cmul,	  0,   6, 255, 0xff, 0x01, 0x00, 0x04}, // cmul.r a g  
	{0xd9b1, &op_cmul,	  1,   6, 255, 0xff, 0x01, 0x00, 0x04}, // cmul.r b g  
	{0xd9b2, &op_cmul,	  2,   6, 255, 0xff, 0x01, 0x00, 0x04}, // cmul.r c g  
	{0xd9b3, &op_cmul,	  3,   6, 255, 0xff, 0x01, 0x00, 0x04}, // cmul.r d g  
	{0xd9b4, &op_cmul,	  4,   6, 255, 0xff, 0x01, 0x00, 0x04}, // cmul.r e g  
	{0xd9b5, &op_cmul,	  5,   6, 255, 0xff, 0x01, 0x00, 0x04}, // cmul.r f g  
	{0xd9b6, &op_cmul,	  6,   6, 255, 0xff, 0x01, 0x00, 0x04}, // cmul.r g g  
	{0xd9b7, &op_cmul,	  7,   6, 255, 0xff, 0x01, 0x00, 0x04}, // cmul.r h g  
	{0xd9b8, &op_cmul,	  0,   7, 255, 0xff, 0x01, 0x00, 0x04}, // cmul.r a h  
	{0xd9b9, &op_cmul,	  1,   7, 255, 0xff, 0x01, 0x00, 0x04}, // cmul.r b h  
	{0xd9ba, &op_cmul,	  2,   7, 255, 0xff, 0x01, 0x00, 0x04}, // cmul.r c h  
	{0xd9bb, &op_cmul,	  3,   7, 255, 0xff, 0x01, 0x00, 0x04}, // cmul.r d h  
	{0xd9bc, &op_cmul,	  4,   7, 255, 0xff, 0x01, 0x00, 0x04}, // cmul.r e h  
	{0xd9bd, &op_cmul,	  5,   7, 255, 0xff, 0x01, 0x00, 0x04}, // cmul.r f h  
	{0xd9be, &op_cmul,	  6,   7, 255, 0xff, 0x01, 0x00, 0x04}, // cmul.r g h  
	{0xd9bf, &op_cmul,	  7,   7, 255, 0xff, 0x01, 0x00, 0x04}, // cmul.r h h  
	{0xd8c8, &op_cmul,	  0,   8, 255, 0xff, 0x00, 0x01, 0x01}, // cmul.wi a <literal>  
	{0xd8c9, &op_cmul,	  1,   8, 255, 0xff, 0x00, 0x01, 0x01}, // cmul.wi b <literal>  
	{0xd8ca, &op_cmul,	  2,   8, 255, 0xff, 0x00, 0x01, 0x01}, // cmul.wi c <literal>  
	{0xd8cb, &op_cmul,	  3,   8, 255, 0xff, 0x00, 0x01, 0x01}, // cmul.wi d <literal>  
	{0xd8cc, &op_cmul,	  4,   8, 255, 0xff, 0x00, 0x01, 0x01}, // cmul.wi e <literal>  
	{0xd8cd, &op_cmul,	  5,   8, 255, 0xff, 0x00, 0x01, 0x01}, // cmul.wi f <literal>  
	{0xd8ce, &op_cmul,	  6,   8, 255, 0xff, 0x00, 0x01, 0x01}, // cmul.wi g <literal>  
	{0xd8cf, &op_cmul,	  7,   8, 255, 0xff, 0x00, 0x01, 0x01}, // cmul.wi h <literal>  
	{0xd8d0, &op_cmul,	  0,   8, 255, 0xff, 0x00, 0x02, 0x02}, // cmul.di a <literal>  
	{0xd8d1, &op_cmul,	  1,   8, 255, 0xff, 0x00, 0x02, 0x02}, // cmul.di b <literal>  
	{0xd8d2, &op_cmul,	  2,   8, 255, 0xff, 0x00, 0x02, 0x02}, // cmul.di c <literal>  
	{0xd8d3, &op_cmul,	  3,   8, 255, 0xff, 0x00, 0x02, 0x02}, // cmul.di d <literal>  
	{0xd8d4, &op_cmul,	  4,   8, 255, 0xff, 0x00, 0x02, 0x02}, // cmul.di e <literal>  
	{0xd8d5, &op_cmul,	  5,   8, 255, 0xff, 0x00, 0x02, 0x02}, // cmul.di f <literal>  
	{0xd8d6, &op_cmul,	  6,   8, 255, 0xff, 0x00, 0x02, 0x02}, // cmul.di g <literal>  
	{0xd8d7, &op_cmul,	  7,   8, 255, 0xff, 0x00, 0x02, 0x02}, // cmul.di h <literal>  
	{0xd8e0, &op_cmul,	  0,   8, 255, 0xff, 0x00, 0x04, 0x04}, // cmul.i a <literal>  
	{0xd8e1, &op_cmul,	  1,   8, 255, 0xff, 0x00, 0x04, 0x04}, // cmul.i b <literal>  
	{0xd8e2, &op_cmul,	  2,   8, 255, 0xff, 0x00, 0x04, 0x04}, // cmul.i c <literal>  
	{0xd8e3, &op_cmul,	  3,   8, 255, 0xff, 0x00, 0x04, 0x04}, // cmul.i d <literal>  
	{0xd8e4, &op_cmul,	  4,   8, 255, 0xff, 0x00, 0x04, 0x04}, // cmul.i e <literal>  
	{0xd8e5, &op_cmul,	  5,   8, 255, 0xff, 0x00, 0x04, 0x04}, // cmul.i f <literal>  
	{0xd8e6, &op_cmul,	  6,   8, 255, 0xff, 0x00, 0x04, 0x04}, // cmul.i g <literal>  
	{0xd8e7, &op_cmul,	  7,   8, 255, 0xff, 0x00, 0x04, 0x04}, // cmul.i h <literal>  
	{0xd9c8, &op_cmul,	  0,   8, 255, 0xff, 0x01, 0x04, 0x01}, // cmul.wri a <literal>  
	{0xd9c9, &op_cmul,	  1,   8, 255, 0xff, 0x01, 0x04, 0x01}, // cmul.wri b <literal>  
	{0xd9ca, &op_cmul,	  2,   8, 255, 0xff, 0x01, 0x04, 0x01}, // cmul.wri c <literal>  
	{0xd9cb, &op_cmul,	  3,   8, 255, 0xff, 0x01, 0x04, 0x01}, // cmul.wri d <literal>  
	{0xd9cc, &op_cmul,	  4,   8, 255, 0xff, 0x01, 0x04, 0x01}, // cmul.wri e <literal>  
	{0xd9cd, &op_cmul,	  5,   8, 255, 0xff, 0x01, 0x04, 0x01}, // cmul.wri f <literal>  
	{0xd9ce, &op_cmul,	  6,   8, 255, 0xff, 0x01, 0x04, 0x01}, // cmul.wri g <literal>  
	{0xd9cf, &op_cmul,	  7,   8, 255, 0xff, 0x01, 0x04, 0x01}, // cmul.wri h <literal>  
	{0xd9d0, &op_cmul,	  0,   8, 255, 0xff, 0x01, 0x04, 0x02}, // cmul.dri a <literal>  
	{0xd9d1, &op_cmul,	  1,   8, 255, 0xff, 0x01, 0x04, 0x02}, // cmul.dri b <literal>  
	{0xd9d2, &op_cmul,	  2,   8, 255, 0xff, 0x01, 0x04, 0x02}, // cmul.dri c <literal>  
	{0xd9d3, &op_cmul,	  3,   8, 255, 0xff, 0x01, 0x04, 0x02}, // cmul.dri d <literal>  
	{0xd9d4, &op_cmul,	  4,   8, 255, 0xff, 0x01, 0x04, 0x02}, // cmul.dri e <literal>  
	{0xd9d5, &op_cmul,	  5,   8, 255, 0xff, 0x01, 0x04, 0x02}, // cmul.dri f <literal>  
	{0xd9d6, &op_cmul,	  6,   8, 255, 0xff, 0x01, 0x04, 0x02}, // cmul.dri g <literal>  
	{0xd9d7, &op_cmul,	  7,   8, 255, 0xff, 0x01, 0x04, 0x02}, // cmul.dri h <literal>  
	{0xd9e0, &op_cmul,	  0,   8, 255, 0xff, 0x01, 0x04, 0x04}, // cmul.ri a <literal>  
	{0xd9e1, &op_cmul,	  1,   8, 255, 0xff, 0x01, 0x04, 0x04}, // cmul.ri b <literal>  
	{0xd9e2, &op_cmul,	  2,   8, 255, 0xff, 0x01, 0x04, 0x04}, // cmul.ri c <literal>  
	{0xd9e3, &op_cmul,	  3,   8, 255, 0xff, 0x01, 0x04, 0x04}, // cmul.ri d <literal>  
	{0xd9e4, &op_cmul,	  4,   8, 255, 0xff, 0x01, 0x04, 0x04}, // cmul.ri e <literal>  
	{0xd9e5, &op_cmul,	  5,   8, 255, 0xff, 0x01, 0x04, 0x04}, // cmul.ri f <literal>  
	{0xd9e6, &op_cmul,	  6,   8, 255, 0xff, 0x01, 0x04, 0x04}, // cmul.ri g <literal>  
	{0xd9e7, &op_cmul,	  7,   8, 255, 0xff, 0x01, 0x04, 0x04}, // cmul.ri h <literal>  
	{0xda00, &op_crsh,	  0,   0, 255, 0xff, 0x00, 0x00, 0x01}, // crsh.w a a  
	{0xda01, &op_crsh,	  1,   0, 255, 0xff, 0x00, 0x00, 0x01}, // crsh.w b a  
	{0xda02, &op_crsh,	  2,   0, 255, 0xff, 0x00, 0x00, 0x01}, // crsh.w c a  
	{0xda03, &op_crsh,	  3,   0, 255, 0xff, 0x00, 0x00, 0x01}, // crsh.w d a  
	{0xda04, &op_crsh,	  4,   0, 255, 0xff, 0x00, 0x00, 0x01}, // crsh.w e a  
	{0xda05, &op_crsh,	  5,   0, 255, 0xff, 0x00, 0x00, 0x01}, // crsh.w f a  
	{0xda06, &op_crsh,	  6,   0, 255, 0xff, 0x00, 0x00, 0x01}, // crsh.w g a  
	{0xda07, &op_crsh,	  7,   0, 255, 0xff, 0x00, 0x00, 0x01}, // crsh.w h a  
	{0xda08, &op_crsh,	  0,   1, 255, 0xff, 0x00, 0x00, 0x01}, // crsh.w a b  
	{0xda09, &op_crsh,	  1,   1, 255, 0xff, 0x00, 0x00, 0x01}, // crsh.w b b  
	{0xda0a, &op_crsh,	  2,   1, 255, 0xff, 0x00, 0x00, 0x01}, // crsh.w c b  
	{0xda0b, &op_crsh,	  3,   1, 255, 0xff, 0x00, 0x00, 0x01}, // crsh.w d b  
	{0xda0c, &op_crsh,	  4,   1, 255, 0xff, 0x00, 0x00, 0x01}, // crsh.w e b  
	{0xda0d, &op_crsh,	  5,   1, 255, 0xff, 0x00, 0x00, 0x01}, // crsh.w f b  
	{0xda0e, &op_crsh,	  6,   1, 255, 0xff, 0x00, 0x00, 0x01}, // crsh.w g b  
	{0xda0f, &op_crsh,	  7,   1, 255, 0xff, 0x00, 0x00, 0x01}, // crsh.w h b  
	{0xda10, &op_crsh,	  0,   2, 255, 0xff, 0x00, 0x00, 0x01}, // crsh.w a c  
	{0xda11, &op_crsh,	  1,   2, 255, 0xff, 0x00, 0x00, 0x01}, // crsh.w b c  
	{0xda12, &op_crsh,	  2,   2, 255, 0xff, 0x00, 0x00, 0x01}, // crsh.w c c  
	{0xda13, &op_crsh,	  3,   2, 255, 0xff, 0x00, 0x00, 0x01}, // crsh.w d c  
	{0xda14, &op_crsh,	  4,   2, 255, 0xff, 0x00, 0x00, 0x01}, // crsh.w e c  
	{0xda15, &op_crsh,	  5,   2, 255, 0xff, 0x00, 0x00, 0x01}, // crsh.w f c  
	{0xda16, &op_crsh,	  6,   2, 255, 0xff, 0x00, 0x00, 0x01}, // crsh.w g c  
	{0xda17, &op_crsh,	  7,   2, 255, 0xff, 0x00, 0x00, 0x01}, // crsh.w h c  
	{0xda18, &op_crsh,	  0,   3, 255, 0xff, 0x00, 0x00, 0x01}, // crsh.w a d  
	{0xda19, &op_crsh,	  1,   3, 255, 0xff, 0x00, 0x00, 0x01}, // crsh.w b d  
	{0xda1a, &op_crsh,	  2,   3, 255, 0xff, 0x00, 0x00, 0x01}, // crsh.w c d  
	{0xda1b, &op_crsh,	  3,   3, 255, 0xff, 0x00, 0x00, 0x01}, // crsh.w d d  
	{0xda1c, &op_crsh,	  4,   3, 255, 0xff, 0x00, 0x00, 0x01}, // crsh.w e d  
	{0xda1d, &op_crsh,	  5,   3, 255, 0xff, 0x00, 0x00, 0x01}, // crsh.w f d  
	{0xda1e, &op_crsh,	  6,   3, 255, 0xff, 0x00, 0x00, 0x01}, // crsh.w g d  
	{0xda1f, &op_crsh,	  7,   3, 255, 0xff, 0x00, 0x00, 0x01}, // crsh.w h d  
	{0xda20, &op_crsh,	  0,   4, 255, 0xff, 0x00, 0x00, 0x01}, // crsh.w a e  
	{0xda21, &op_crsh,	  1,   4, 255, 0xff, 0x00, 0x00, 0x01}, // crsh.w b e  
	{0xda22, &op_crsh,	  2,   4, 255, 0xff, 0x00, 0x00, 0x01}, // crsh.w c e  
	{0xda23, &op_crsh,	  3,   4, 255, 0xff, 0x00, 0x00, 0x01}, // crsh.w d e  
	{0xda24, &op_crsh,	  4,   4, 255, 0xff, 0x00, 0x00, 0x01}, // crsh.w e e  
	{0xda25, &op_crsh,	  5,   4, 255, 0xff, 0x00, 0x00, 0x01}, // crsh.w f e  
	{0xda26, &op_crsh,	  6,   4, 255, 0xff, 0x00, 0x00, 0x01}, // crsh.w g e  
	{0xda27, &op_crsh,	  7,   4, 255, 0xff, 0x00, 0x00, 0x01}, // crsh.w h e  
	{0xda28, &op_crsh,	  0,   5, 255, 0xff, 0x00, 0x00, 0x01}, // crsh.w a f  
	{0xda29, &op_crsh,	  1,   5, 255, 0xff, 0x00, 0x00, 0x01}, // crsh.w b f  
	{0xda2a, &op_crsh,	  2,   5, 255, 0xff, 0x00, 0x00, 0x01}, // crsh.w c f  
	{0xda2b, &op_crsh,	  3,   5, 255, 0xff, 0x00, 0x00, 0x01}, // crsh.w d f  
	{0xda2c, &op_crsh,	  4,   5, 255, 0xff, 0x00, 0x00, 0x01}, // crsh.w e f  
	{0xda2d, &op_crsh,	  5,   5, 255, 0xff, 0x00, 0x00, 0x01}, // crsh.w f f  
	{0xda2e, &op_crsh,	  6,   5, 255, 0xff, 0x00, 0x00, 0x01}, // crsh.w g f  
	{0xda2f, &op_crsh,	  7,   5, 255, 0xff, 0x00, 0x00, 0x01}, // crsh.w h f  
	{0xda30, &op_crsh,	  0,   6, 255, 0xff, 0x00, 0x00, 0x01}, // crsh.w a g  
	{0xda31, &op_crsh,	  1,   6, 255, 0xff, 0x00, 0x00, 0x01}, // crsh.w b g  
	{0xda32, &op_crsh,	  2,   6, 255, 0xff, 0x00, 0x00, 0x01}, // crsh.w c g  
	{0xda33, &op_crsh,	  3,   6, 255, 0xff, 0x00, 0x00, 0x01}, // crsh.w d g  
	{0xda34, &op_crsh,	  4,   6, 255, 0xff, 0x00, 0x00, 0x01}, // crsh.w e g  
	{0xda35, &op_crsh,	  5,   6, 255, 0xff, 0x00, 0x00, 0x01}, // crsh.w f g  
	{0xda36, &op_crsh,	  6,   6, 255, 0xff, 0x00, 0x00, 0x01}, // crsh.w g g  
	{0xda37, &op_crsh,	  7,   6, 255, 0xff, 0x00, 0x00, 0x01}, // crsh.w h g  
	{0xda38, &op_crsh,	  0,   7, 255, 0xff, 0x00, 0x00, 0x01}, // crsh.w a h  
	{0xda39, &op_crsh,	  1,   7, 255, 0xff, 0x00, 0x00, 0x01}, // crsh.w b h  
	{0xda3a, &op_crsh,	  2,   7, 255, 0xff, 0x00, 0x00, 0x01}, // crsh.w c h  
	{0xda3b, &op_crsh,	  3,   7, 255, 0xff, 0x00, 0x00, 0x01}, // crsh.w d h  
	{0xda3c, &op_crsh,	  4,   7, 255, 0xff, 0x00, 0x00, 0x01}, // crsh.w e h  
	{0xda3d, &op_crsh,	  5,   7, 255, 0xff, 0x00, 0x00, 0x01}, // crsh.w f h  
	{0xda3e, &op_crsh,	  6,   7, 255, 0xff, 0x00, 0x00, 0x01}, // crsh.w g h  
	{0xda3f, &op_crsh,	  7,   7, 255, 0xff, 0x00, 0x00, 0x01}, // crsh.w h h  
	{0xda40, &op_crsh,	  0,   0, 255, 0xff, 0x00, 0x00, 0x02}, // crsh.d a a  
	{0xda41, &op_crsh,	  1,   0, 255, 0xff, 0x00, 0x00, 0x02}, // crsh.d b a  
	{0xda42, &op_crsh,	  2,   0, 255, 0xff, 0x00, 0x00, 0x02}, // crsh.d c a  
	{0xda43, &op_crsh,	  3,   0, 255, 0xff, 0x00, 0x00, 0x02}, // crsh.d d a  
	{0xda44, &op_crsh,	  4,   0, 255, 0xff, 0x00, 0x00, 0x02}, // crsh.d e a  
	{0xda45, &op_crsh,	  5,   0, 255, 0xff, 0x00, 0x00, 0x02}, // crsh.d f a  
	{0xda46, &op_crsh,	  6,   0, 255, 0xff, 0x00, 0x00, 0x02}, // crsh.d g a  
	{0xda47, &op_crsh,	  7,   0, 255, 0xff, 0x00, 0x00, 0x02}, // crsh.d h a  
	{0xda48, &op_crsh,	  0,   1, 255, 0xff, 0x00, 0x00, 0x02}, // crsh.d a b  
	{0xda49, &op_crsh,	  1,   1, 255, 0xff, 0x00, 0x00, 0x02}, // crsh.d b b  
	{0xda4a, &op_crsh,	  2,   1, 255, 0xff, 0x00, 0x00, 0x02}, // crsh.d c b  
	{0xda4b, &op_crsh,	  3,   1, 255, 0xff, 0x00, 0x00, 0x02}, // crsh.d d b  
	{0xda4c, &op_crsh,	  4,   1, 255, 0xff, 0x00, 0x00, 0x02}, // crsh.d e b  
	{0xda4d, &op_crsh,	  5,   1, 255, 0xff, 0x00, 0x00, 0x02}, // crsh.d f b  
	{0xda4e, &op_crsh,	  6,   1, 255, 0xff, 0x00, 0x00, 0x02}, // crsh.d g b  
	{0xda4f, &op_crsh,	  7,   1, 255, 0xff, 0x00, 0x00, 0x02}, // crsh.d h b  
	{0xda50, &op_crsh,	  0,   2, 255, 0xff, 0x00, 0x00, 0x02}, // crsh.d a c  
	{0xda51, &op_crsh,	  1,   2, 255, 0xff, 0x00, 0x00, 0x02}, // crsh.d b c  
	{0xda52, &op_crsh,	  2,   2, 255, 0xff, 0x00, 0x00, 0x02}, // crsh.d c c  
	{0xda53, &op_crsh,	  3,   2, 255, 0xff, 0x00, 0x00, 0x02}, // crsh.d d c  
	{0xda54, &op_crsh,	  4,   2, 255, 0xff, 0x00, 0x00, 0x02}, // crsh.d e c  
	{0xda55, &op_crsh,	  5,   2, 255, 0xff, 0x00, 0x00, 0x02}, // crsh.d f c  
	{0xda56, &op_crsh,	  6,   2, 255, 0xff, 0x00, 0x00, 0x02}, // crsh.d g c  
	{0xda57, &op_crsh,	  7,   2, 255, 0xff, 0x00, 0x00, 0x02}, // crsh.d h c  
	{0xda58, &op_crsh,	  0,   3, 255, 0xff, 0x00, 0x00, 0x02}, // crsh.d a d  
	{0xda59, &op_crsh,	  1,   3, 255, 0xff, 0x00, 0x00, 0x02}, // crsh.d b d  
	{0xda5a, &op_crsh,	  2,   3, 255, 0xff, 0x00, 0x00, 0x02}, // crsh.d c d  
	{0xda5b, &op_crsh,	  3,   3, 255, 0xff, 0x00, 0x00, 0x02}, // crsh.d d d  
	{0xda5c, &op_crsh,	  4,   3, 255, 0xff, 0x00, 0x00, 0x02}, // crsh.d e d  
	{0xda5d, &op_crsh,	  5,   3, 255, 0xff, 0x00, 0x00, 0x02}, // crsh.d f d  
	{0xda5e, &op_crsh,	  6,   3, 255, 0xff, 0x00, 0x00, 0x02}, // crsh.d g d  
	{0xda5f, &op_crsh,	  7,   3, 255, 0xff, 0x00, 0x00, 0x02}, // crsh.d h d  
	{0xda60, &op_crsh,	  0,   4, 255, 0xff, 0x00, 0x00, 0x02}, // crsh.d a e  
	{0xda61, &op_crsh,	  1,   4, 255, 0xff, 0x00, 0x00, 0x02}, // crsh.d b e  
	{0xda62, &op_crsh,	  2,   4, 255, 0xff, 0x00, 0x00, 0x02}, // crsh.d c e  
	{0xda63, &op_crsh,	  3,   4, 255, 0xff, 0x00, 0x00, 0x02}, // crsh.d d e  
	{0xda64, &op_crsh,	  4,   4, 255, 0xff, 0x00, 0x00, 0x02}, // crsh.d e e  
	{0xda65, &op_crsh,	  5,   4, 255, 0xff, 0x00, 0x00, 0x02}, // crsh.d f e  
	{0xda66, &op_crsh,	  6,   4, 255, 0xff, 0x00, 0x00, 0x02}, // crsh.d g e  
	{0xda67, &op_crsh,	  7,   4, 255, 0xff, 0x00, 0x00, 0x02}, // crsh.d h e  
	{0xda68, &op_crsh,	  0,   5, 255, 0xff, 0x00, 0x00, 0x02}, // crsh.d a f  
	{0xda69, &op_crsh,	  1,   5, 255, 0xff, 0x00, 0x00, 0x02}, // crsh.d b f  
	{0xda6a, &op_crsh,	  2,   5, 255, 0xff, 0x00, 0x00, 0x02}, // crsh.d c f  
	{0xda6b, &op_crsh,	  3,   5, 255, 0xff, 0x00, 0x00, 0x02}, // crsh.d d f  
	{0xda6c, &op_crsh,	  4,   5, 255, 0xff, 0x00, 0x00, 0x02}, // crsh.d e f  
	{0xda6d, &op_crsh,	  5,   5, 255, 0xff, 0x00, 0x00, 0x02}, // crsh.d f f  
	{0xda6e, &op_crsh,	  6,   5, 255, 0xff, 0x00, 0x00, 0x02}, // crsh.d g f  
	{0xda6f, &op_crsh,	  7,   5, 255, 0xff, 0x00, 0x00, 0x02}, // crsh.d h f  
	{0xda70, &op_crsh,	  0,   6, 255, 0xff, 0x00, 0x00, 0x02}, // crsh.d a g  
	{0xda71, &op_crsh,	  1,   6, 255, 0xff, 0x00, 0x00, 0x02}, // crsh.d b g  
	{0xda72, &op_crsh,	  2,   6, 255, 0xff, 0x00, 0x00, 0x02}, // crsh.d c g  
	{0xda73, &op_crsh,	  3,   6, 255, 0xff, 0x00, 0x00, 0x02}, // crsh.d d g  
	{0xda74, &op_crsh,	  4,   6, 255, 0xff, 0x00, 0x00, 0x02}, // crsh.d e g  
	{0xda75, &op_crsh,	  5,   6, 255, 0xff, 0x00, 0x00, 0x02}, // crsh.d f g  
	{0xda76, &op_crsh,	  6,   6, 255, 0xff, 0x00, 0x00, 0x02}, // crsh.d g g  
	{0xda77, &op_crsh,	  7,   6, 255, 0xff, 0x00, 0x00, 0x02}, // crsh.d h g  
	{0xda78, &op_crsh,	  0,   7, 255, 0xff, 0x00, 0x00, 0x02}, // crsh.d a h  
	{0xda79, &op_crsh,	  1,   7, 255, 0xff, 0x00, 0x00, 0x02}, // crsh.d b h  
	{0xda7a, &op_crsh,	  2,   7, 255, 0xff, 0x00, 0x00, 0x02}, // crsh.d c h  
	{0xda7b, &op_crsh,	  3,   7, 255, 0xff, 0x00, 0x00, 0x02}, // crsh.d d h  
	{0xda7c, &op_crsh,	  4,   7, 255, 0xff, 0x00, 0x00, 0x02}, // crsh.d e h  
	{0xda7d, &op_crsh,	  5,   7, 255, 0xff, 0x00, 0x00, 0x02}, // crsh.d f h  
	{0xda7e, &op_crsh,	  6,   7, 255, 0xff, 0x00, 0x00, 0x02}, // crsh.d g h  
	{0xda7f, &op_crsh,	  7,   7, 255, 0xff, 0x00, 0x00, 0x02}, // crsh.d h h  
	{0xda80, &op_crsh,	  0,   0, 255, 0xff, 0x00, 0x00, 0x04}, // crsh a a  
	{0xda81, &op_crsh,	  1,   0, 255, 0xff, 0x00, 0x00, 0x04}, // crsh b a  
	{0xda82, &op_crsh,	  2,   0, 255, 0xff, 0x00, 0x00, 0x04}, // crsh c a  
	{0xda83, &op_crsh,	  3,   0, 255, 0xff, 0x00, 0x00, 0x04}, // crsh d a  
	{0xda84, &op_crsh,	  4,   0, 255, 0xff, 0x00, 0x00, 0x04}, // crsh e a  
	{0xda85, &op_crsh,	  5,   0, 255, 0xff, 0x00, 0x00, 0x04}, // crsh f a  
	{0xda86, &op_crsh,	  6,   0, 255, 0xff, 0x00, 0x00, 0x04}, // crsh g a  
	{0xda87, &op_crsh,	  7,   0, 255, 0xff, 0x00, 0x00, 0x04}, // crsh h a  
	{0xda88, &op_crsh,	  0,   1, 255, 0xff, 0x00, 0x00, 0x04}, // crsh a b  
	{0xda89, &op_crsh,	  1,   1, 255, 0xff, 0x00, 0x00, 0x04}, // crsh b b  
	{0xda8a, &op_crsh,	  2,   1, 255, 0xff, 0x00, 0x00, 0x04}, // crsh c b  
	{0xda8b, &op_crsh,	  3,   1, 255, 0xff, 0x00, 0x00, 0x04}, // crsh d b  
	{0xda8c, &op_crsh,	  4,   1, 255, 0xff, 0x00, 0x00, 0x04}, // crsh e b  
	{0xda8d, &op_crsh,	  5,   1, 255, 0xff, 0x00, 0x00, 0x04}, // crsh f b  
	{0xda8e, &op_crsh,	  6,   1, 255, 0xff, 0x00, 0x00, 0x04}, // crsh g b  
	{0xda8f, &op_crsh,	  7,   1, 255, 0xff, 0x00, 0x00, 0x04}, // crsh h b  
	{0xda90, &op_crsh,	  0,   2, 255, 0xff, 0x00, 0x00, 0x04}, // crsh a c  
	{0xda91, &op_crsh,	  1,   2, 255, 0xff, 0x00, 0x00, 0x04}, // crsh b c  
	{0xda92, &op_crsh,	  2,   2, 255, 0xff, 0x00, 0x00, 0x04}, // crsh c c  
	{0xda93, &op_crsh,	  3,   2, 255, 0xff, 0x00, 0x00, 0x04}, // crsh d c  
	{0xda94, &op_crsh,	  4,   2, 255, 0xff, 0x00, 0x00, 0x04}, // crsh e c  
	{0xda95, &op_crsh,	  5,   2, 255, 0xff, 0x00, 0x00, 0x04}, // crsh f c  
	{0xda96, &op_crsh,	  6,   2, 255, 0xff, 0x00, 0x00, 0x04}, // crsh g c  
	{0xda97, &op_crsh,	  7,   2, 255, 0xff, 0x00, 0x00, 0x04}, // crsh h c  
	{0xda98, &op_crsh,	  0,   3, 255, 0xff, 0x00, 0x00, 0x04}, // crsh a d  
	{0xda99, &op_crsh,	  1,   3, 255, 0xff, 0x00, 0x00, 0x04}, // crsh b d  
	{0xda9a, &op_crsh,	  2,   3, 255, 0xff, 0x00, 0x00, 0x04}, // crsh c d  
	{0xda9b, &op_crsh,	  3,   3, 255, 0xff, 0x00, 0x00, 0x04}, // crsh d d  
	{0xda9c, &op_crsh,	  4,   3, 255, 0xff, 0x00, 0x00, 0x04}, // crsh e d  
	{0xda9d, &op_crsh,	  5,   3, 255, 0xff, 0x00, 0x00, 0x04}, // crsh f d  
	{0xda9e, &op_crsh,	  6,   3, 255, 0xff, 0x00, 0x00, 0x04}, // crsh g d  
	{0xda9f, &op_crsh,	  7,   3, 255, 0xff, 0x00, 0x00, 0x04}, // crsh h d  
	{0xdaa0, &op_crsh,	  0,   4, 255, 0xff, 0x00, 0x00, 0x04}, // crsh a e  
	{0xdaa1, &op_crsh,	  1,   4, 255, 0xff, 0x00, 0x00, 0x04}, // crsh b e  
	{0xdaa2, &op_crsh,	  2,   4, 255, 0xff, 0x00, 0x00, 0x04}, // crsh c e  
	{0xdaa3, &op_crsh,	  3,   4, 255, 0xff, 0x00, 0x00, 0x04}, // crsh d e  
	{0xdaa4, &op_crsh,	  4,   4, 255, 0xff, 0x00, 0x00, 0x04}, // crsh e e  
	{0xdaa5, &op_crsh,	  5,   4, 255, 0xff, 0x00, 0x00, 0x04}, // crsh f e  
	{0xdaa6, &op_crsh,	  6,   4, 255, 0xff, 0x00, 0x00, 0x04}, // crsh g e  
	{0xdaa7, &op_crsh,	  7,   4, 255, 0xff, 0x00, 0x00, 0x04}, // crsh h e  
	{0xdaa8, &op_crsh,	  0,   5, 255, 0xff, 0x00, 0x00, 0x04}, // crsh a f  
	{0xdaa9, &op_crsh,	  1,   5, 255, 0xff, 0x00, 0x00, 0x04}, // crsh b f  
	{0xdaaa, &op_crsh,	  2,   5, 255, 0xff, 0x00, 0x00, 0x04}, // crsh c f  
	{0xdaab, &op_crsh,	  3,   5, 255, 0xff, 0x00, 0x00, 0x04}, // crsh d f  
	{0xdaac, &op_crsh,	  4,   5, 255, 0xff, 0x00, 0x00, 0x04}, // crsh e f  
	{0xdaad, &op_crsh,	  5,   5, 255, 0xff, 0x00, 0x00, 0x04}, // crsh f f  
	{0xdaae, &op_crsh,	  6,   5, 255, 0xff, 0x00, 0x00, 0x04}, // crsh g f  
	{0xdaaf, &op_crsh,	  7,   5, 255, 0xff, 0x00, 0x00, 0x04}, // crsh h f  
	{0xdab0, &op_crsh,	  0,   6, 255, 0xff, 0x00, 0x00, 0x04}, // crsh a g  
	{0xdab1, &op_crsh,	  1,   6, 255, 0xff, 0x00, 0x00, 0x04}, // crsh b g  
	{0xdab2, &op_crsh,	  2,   6, 255, 0xff, 0x00, 0x00, 0x04}, // crsh c g  
	{0xdab3, &op_crsh,	  3,   6, 255, 0xff, 0x00, 0x00, 0x04}, // crsh d g  
	{0xdab4, &op_crsh,	  4,   6, 255, 0xff, 0x00, 0x00, 0x04}, // crsh e g  
	{0xdab5, &op_crsh,	  5,   6, 255, 0xff, 0x00, 0x00, 0x04}, // crsh f g  
	{0xdab6, &op_crsh,	  6,   6, 255, 0xff, 0x00, 0x00, 0x04}, // crsh g g  
	{0xdab7, &op_crsh,	  7,   6, 255, 0xff, 0x00, 0x00, 0x04}, // crsh h g  
	{0xdab8, &op_crsh,	  0,   7, 255, 0xff, 0x00, 0x00, 0x04}, // crsh a h  
	{0xdab9, &op_crsh,	  1,   7, 255, 0xff, 0x00, 0x00, 0x04}, // crsh b h  
	{0xdaba, &op_crsh,	  2,   7, 255, 0xff, 0x00, 0x00, 0x04}, // crsh c h  
	{0xdabb, &op_crsh,	  3,   7, 255, 0xff, 0x00, 0x00, 0x04}, // crsh d h  
	{0xdabc, &op_crsh,	  4,   7, 255, 0xff, 0x00, 0x00, 0x04}, // crsh e h  
	{0xdabd, &op_crsh,	  5,   7, 255, 0xff, 0x00, 0x00, 0x04}, // crsh f h  
	{0xdabe, &op_crsh,	  6,   7, 255, 0xff, 0x00, 0x00, 0x04}, // crsh g h  
	{0xdabf, &op_crsh,	  7,   7, 255, 0xff, 0x00, 0x00, 0x04}, // crsh h h  
	{0xdb00, &op_crsh,	  0,   0, 255, 0xff, 0x01, 0x00, 0x01}, // crsh.wr a a  
	{0xdb01, &op_crsh,	  1,   0, 255, 0xff, 0x01, 0x00, 0x01}, // crsh.wr b a  
	{0xdb02, &op_crsh,	  2,   0, 255, 0xff, 0x01, 0x00, 0x01}, // crsh.wr c a  
	{0xdb03, &op_crsh,	  3,   0, 255, 0xff, 0x01, 0x00, 0x01}, // crsh.wr d a  
	{0xdb04, &op_crsh,	  4,   0, 255, 0xff, 0x01, 0x00, 0x01}, // crsh.wr e a  
	{0xdb05, &op_crsh,	  5,   0, 255, 0xff, 0x01, 0x00, 0x01}, // crsh.wr f a  
	{0xdb06, &op_crsh,	  6,   0, 255, 0xff, 0x01, 0x00, 0x01}, // crsh.wr g a  
	{0xdb07, &op_crsh,	  7,   0, 255, 0xff, 0x01, 0x00, 0x01}, // crsh.wr h a  
	{0xdb08, &op_crsh,	  0,   1, 255, 0xff, 0x01, 0x00, 0x01}, // crsh.wr a b  
	{0xdb09, &op_crsh,	  1,   1, 255, 0xff, 0x01, 0x00, 0x01}, // crsh.wr b b  
	{0xdb0a, &op_crsh,	  2,   1, 255, 0xff, 0x01, 0x00, 0x01}, // crsh.wr c b  
	{0xdb0b, &op_crsh,	  3,   1, 255, 0xff, 0x01, 0x00, 0x01}, // crsh.wr d b  
	{0xdb0c, &op_crsh,	  4,   1, 255, 0xff, 0x01, 0x00, 0x01}, // crsh.wr e b  
	{0xdb0d, &op_crsh,	  5,   1, 255, 0xff, 0x01, 0x00, 0x01}, // crsh.wr f b  
	{0xdb0e, &op_crsh,	  6,   1, 255, 0xff, 0x01, 0x00, 0x01}, // crsh.wr g b  
	{0xdb0f, &op_crsh,	  7,   1, 255, 0xff, 0x01, 0x00, 0x01}, // crsh.wr h b  
	{0xdb10, &op_crsh,	  0,   2, 255, 0xff, 0x01, 0x00, 0x01}, // crsh.wr a c  
	{0xdb11, &op_crsh,	  1,   2, 255, 0xff, 0x01, 0x00, 0x01}, // crsh.wr b c  
	{0xdb12, &op_crsh,	  2,   2, 255, 0xff, 0x01, 0x00, 0x01}, // crsh.wr c c  
	{0xdb13, &op_crsh,	  3,   2, 255, 0xff, 0x01, 0x00, 0x01}, // crsh.wr d c  
	{0xdb14, &op_crsh,	  4,   2, 255, 0xff, 0x01, 0x00, 0x01}, // crsh.wr e c  
	{0xdb15, &op_crsh,	  5,   2, 255, 0xff, 0x01, 0x00, 0x01}, // crsh.wr f c  
	{0xdb16, &op_crsh,	  6,   2, 255, 0xff, 0x01, 0x00, 0x01}, // crsh.wr g c  
	{0xdb17, &op_crsh,	  7,   2, 255, 0xff, 0x01, 0x00, 0x01}, // crsh.wr h c  
	{0xdb18, &op_crsh,	  0,   3, 255, 0xff, 0x01, 0x00, 0x01}, // crsh.wr a d  
	{0xdb19, &op_crsh,	  1,   3, 255, 0xff, 0x01, 0x00, 0x01}, // crsh.wr b d  
	{0xdb1a, &op_crsh,	  2,   3, 255, 0xff, 0x01, 0x00, 0x01}, // crsh.wr c d  
	{0xdb1b, &op_crsh,	  3,   3, 255, 0xff, 0x01, 0x00, 0x01}, // crsh.wr d d  
	{0xdb1c, &op_crsh,	  4,   3, 255, 0xff, 0x01, 0x00, 0x01}, // crsh.wr e d  
	{0xdb1d, &op_crsh,	  5,   3, 255, 0xff, 0x01, 0x00, 0x01}, // crsh.wr f d  
	{0xdb1e, &op_crsh,	  6,   3, 255, 0xff, 0x01, 0x00, 0x01}, // crsh.wr g d  
	{0xdb1f, &op_crsh,	  7,   3, 255, 0xff, 0x01, 0x00, 0x01}, // crsh.wr h d  
	{0xdb20, &op_crsh,	  0,   4, 255, 0xff, 0x01, 0x00, 0x01}, // crsh.wr a e  
	{0xdb21, &op_crsh,	  1,   4, 255, 0xff, 0x01, 0x00, 0x01}, // crsh.wr b e  
	{0xdb22, &op_crsh,	  2,   4, 255, 0xff, 0x01, 0x00, 0x01}, // crsh.wr c e  
	{0xdb23, &op_crsh,	  3,   4, 255, 0xff, 0x01, 0x00, 0x01}, // crsh.wr d e  
	{0xdb24, &op_crsh,	  4,   4, 255, 0xff, 0x01, 0x00, 0x01}, // crsh.wr e e  
	{0xdb25, &op_crsh,	  5,   4, 255, 0xff, 0x01, 0x00, 0x01}, // crsh.wr f e  
	{0xdb26, &op_crsh,	  6,   4, 255, 0xff, 0x01, 0x00, 0x01}, // crsh.wr g e  
	{0xdb27, &op_crsh,	  7,   4, 255, 0xff, 0x01, 0x00, 0x01}, // crsh.wr h e  
	{0xdb28, &op_crsh,	  0,   5, 255, 0xff, 0x01, 0x00, 0x01}, // crsh.wr a f  
	{0xdb29, &op_crsh,	  1,   5, 255, 0xff, 0x01, 0x00, 0x01}, // crsh.wr b f  
	{0xdb2a, &op_crsh,	  2,   5, 255, 0xff, 0x01, 0x00, 0x01}, // crsh.wr c f  
	{0xdb2b, &op_crsh,	  3,   5, 255, 0xff, 0x01, 0x00, 0x01}, // crsh.wr d f  
	{0xdb2c, &op_crsh,	  4,   5, 255, 0xff, 0x01, 0x00, 0x01}, // crsh.wr e f  
	{0xdb2d, &op_crsh,	  5,   5, 255, 0xff, 0x01, 0x00, 0x01}, // crsh.wr f f  
	{0xdb2e, &op_crsh,	  6,   5, 255, 0xff, 0x01, 0x00, 0x01}, // crsh.wr g f  
	{0xdb2f, &op_crsh,	  7,   5, 255, 0xff, 0x01, 0x00, 0x01}, // crsh.wr h f  
	{0xdb30, &op_crsh,	  0,   6, 255, 0xff, 0x01, 0x00, 0x01}, // crsh.wr a g  
	{0xdb31, &op_crsh,	  1,   6, 255, 0xff, 0x01, 0x00, 0x01}, // crsh.wr b g  
	{0xdb32, &op_crsh,	  2,   6, 255, 0xff, 0x01, 0x00, 0x01}, // crsh.wr c g  
	{0xdb33, &op_crsh,	  3,   6, 255, 0xff, 0x01, 0x00, 0x01}, // crsh.wr d g  
	{0xdb34, &op_crsh,	  4,   6, 255, 0xff, 0x01, 0x00, 0x01}, // crsh.wr e g  
	{0xdb35, &op_crsh,	  5,   6, 255, 0xff, 0x01, 0x00, 0x01}, // crsh.wr f g  
	{0xdb36, &op_crsh,	  6,   6, 255, 0xff, 0x01, 0x00, 0x01}, // crsh.wr g g  
	{0xdb37, &op_crsh,	  7,   6, 255, 0xff, 0x01, 0x00, 0x01}, // crsh.wr h g  
	{0xdb38, &op_crsh,	  0,   7, 255, 0xff, 0x01, 0x00, 0x01}, // crsh.wr a h  
	{0xdb39, &op_crsh,	  1,   7, 255, 0xff, 0x01, 0x00, 0x01}, // crsh.wr b h  
	{0xdb3a, &op_crsh,	  2,   7, 255, 0xff, 0x01, 0x00, 0x01}, // crsh.wr c h  
	{0xdb3b, &op_crsh,	  3,   7, 255, 0xff, 0x01, 0x00, 0x01}, // crsh.wr d h  
	{0xdb3c, &op_crsh,	  4,   7, 255, 0xff, 0x01, 0x00, 0x01}, // crsh.wr e h  
	{0xdb3d, &op_crsh,	  5,   7, 255, 0xff, 0x01, 0x00, 0x01}, // crsh.wr f h  
	{0xdb3e, &op_crsh,	  6,   7, 255, 0xff, 0x01, 0x00, 0x01}, // crsh.wr g h  
	{0xdb3f, &op_crsh,	  7,   7, 255, 0xff, 0x01, 0x00, 0x01}, // crsh.wr h h  
	{0xdb40, &op_crsh,	  0,   0, 255, 0xff, 0x01, 0x00, 0x02}, // crsh.dr a a  
	{0xdb41, &op_crsh,	  1,   0, 255, 0xff, 0x01, 0x00, 0x02}, // crsh.dr b a  
	{0xdb42, &op_crsh,	  2,   0, 255, 0xff, 0x01, 0x00, 0x02}, // crsh.dr c a  
	{0xdb43, &op_crsh,	  3,   0, 255, 0xff, 0x01, 0x00, 0x02}, // crsh.dr d a  
	{0xdb44, &op_crsh,	  4,   0, 255, 0xff, 0x01, 0x00, 0x02}, // crsh.dr e a  
	{0xdb45, &op_crsh,	  5,   0, 255, 0xff, 0x01, 0x00, 0x02}, // crsh.dr f a  
	{0xdb46, &op_crsh,	  6,   0, 255, 0xff, 0x01, 0x00, 0x02}, // crsh.dr g a  
	{0xdb47, &op_crsh,	  7,   0, 255, 0xff, 0x01, 0x00, 0x02}, // crsh.dr h a  
	{0xdb48, &op_crsh,	  0,   1, 255, 0xff, 0x01, 0x00, 0x02}, // crsh.dr a b  
	{0xdb49, &op_crsh,	  1,   1, 255, 0xff, 0x01, 0x00, 0x02}, // crsh.dr b b  
	{0xdb4a, &op_crsh,	  2,   1, 255, 0xff, 0x01, 0x00, 0x02}, // crsh.dr c b  
	{0xdb4b, &op_crsh,	  3,   1, 255, 0xff, 0x01, 0x00, 0x02}, // crsh.dr d b  
	{0xdb4c, &op_crsh,	  4,   1, 255, 0xff, 0x01, 0x00, 0x02}, // crsh.dr e b  
	{0xdb4d, &op_crsh,	  5,   1, 255, 0xff, 0x01, 0x00, 0x02}, // crsh.dr f b  
	{0xdb4e, &op_crsh,	  6,   1, 255, 0xff, 0x01, 0x00, 0x02}, // crsh.dr g b  
	{0xdb4f, &op_crsh,	  7,   1, 255, 0xff, 0x01, 0x00, 0x02}, // crsh.dr h b  
	{0xdb50, &op_crsh,	  0,   2, 255, 0xff, 0x01, 0x00, 0x02}, // crsh.dr a c  
	{0xdb51, &op_crsh,	  1,   2, 255, 0xff, 0x01, 0x00, 0x02}, // crsh.dr b c  
	{0xdb52, &op_crsh,	  2,   2, 255, 0xff, 0x01, 0x00, 0x02}, // crsh.dr c c  
	{0xdb53, &op_crsh,	  3,   2, 255, 0xff, 0x01, 0x00, 0x02}, // crsh.dr d c  
	{0xdb54, &op_crsh,	  4,   2, 255, 0xff, 0x01, 0x00, 0x02}, // crsh.dr e c  
	{0xdb55, &op_crsh,	  5,   2, 255, 0xff, 0x01, 0x00, 0x02}, // crsh.dr f c  
	{0xdb56, &op_crsh,	  6,   2, 255, 0xff, 0x01, 0x00, 0x02}, // crsh.dr g c  
	{0xdb57, &op_crsh,	  7,   2, 255, 0xff, 0x01, 0x00, 0x02}, // crsh.dr h c  
	{0xdb58, &op_crsh,	  0,   3, 255, 0xff, 0x01, 0x00, 0x02}, // crsh.dr a d  
	{0xdb59, &op_crsh,	  1,   3, 255, 0xff, 0x01, 0x00, 0x02}, // crsh.dr b d  
	{0xdb5a, &op_crsh,	  2,   3, 255, 0xff, 0x01, 0x00, 0x02}, // crsh.dr c d  
	{0xdb5b, &op_crsh,	  3,   3, 255, 0xff, 0x01, 0x00, 0x02}, // crsh.dr d d  
	{0xdb5c, &op_crsh,	  4,   3, 255, 0xff, 0x01, 0x00, 0x02}, // crsh.dr e d  
	{0xdb5d, &op_crsh,	  5,   3, 255, 0xff, 0x01, 0x00, 0x02}, // crsh.dr f d  
	{0xdb5e, &op_crsh,	  6,   3, 255, 0xff, 0x01, 0x00, 0x02}, // crsh.dr g d  
	{0xdb5f, &op_crsh,	  7,   3, 255, 0xff, 0x01, 0x00, 0x02}, // crsh.dr h d  
	{0xdb60, &op_crsh,	  0,   4, 255, 0xff, 0x01, 0x00, 0x02}, // crsh.dr a e  
	{0xdb61, &op_crsh,	  1,   4, 255, 0xff, 0x01, 0x00, 0x02}, // crsh.dr b e  
	{0xdb62, &op_crsh,	  2,   4, 255, 0xff, 0x01, 0x00, 0x02}, // crsh.dr c e  
	{0xdb63, &op_crsh,	  3,   4, 255, 0xff, 0x01, 0x00, 0x02}, // crsh.dr d e  
	{0xdb64, &op_crsh,	  4,   4, 255, 0xff, 0x01, 0x00, 0x02}, // crsh.dr e e  
	{0xdb65, &op_crsh,	  5,   4, 255, 0xff, 0x01, 0x00, 0x02}, // crsh.dr f e  
	{0xdb66, &op_crsh,	  6,   4, 255, 0xff, 0x01, 0x00, 0x02}, // crsh.dr g e  
	{0xdb67, &op_crsh,	  7,   4, 255, 0xff, 0x01, 0x00, 0x02}, // crsh.dr h e  
	{0xdb68, &op_crsh,	  0,   5, 255, 0xff, 0x01, 0x00, 0x02}, // crsh.dr a f  
	{0xdb69, &op_crsh,	  1,   5, 255, 0xff, 0x01, 0x00, 0x02}, // crsh.dr b f  
	{0xdb6a, &op_crsh,	  2,   5, 255, 0xff, 0x01, 0x00, 0x02}, // crsh.dr c f  
	{0xdb6b, &op_crsh,	  3,   5, 255, 0xff, 0x01, 0x00, 0x02}, // crsh.dr d f  
	{0xdb6c, &op_crsh,	  4,   5, 255, 0xff, 0x01, 0x00, 0x02}, // crsh.dr e f  
	{0xdb6d, &op_crsh,	  5,   5, 255, 0xff, 0x01, 0x00, 0x02}, // crsh.dr f f  
	{0xdb6e, &op_crsh,	  6,   5, 255, 0xff, 0x01, 0x00, 0x02}, // crsh.dr g f  
	{0xdb6f, &op_crsh,	  7,   5, 255, 0xff, 0x01, 0x00, 0x02}, // crsh.dr h f  
	{0xdb70, &op_crsh,	  0,   6, 255, 0xff, 0x01, 0x00, 0x02}, // crsh.dr a g  
	{0xdb71, &op_crsh,	  1,   6, 255, 0xff, 0x01, 0x00, 0x02}, // crsh.dr b g  
	{0xdb72, &op_crsh,	  2,   6, 255, 0xff, 0x01, 0x00, 0x02}, // crsh.dr c g  
	{0xdb73, &op_crsh,	  3,   6, 255, 0xff, 0x01, 0x00, 0x02}, // crsh.dr d g  
	{0xdb74, &op_crsh,	  4,   6, 255, 0xff, 0x01, 0x00, 0x02}, // crsh.dr e g  
	{0xdb75, &op_crsh,	  5,   6, 255, 0xff, 0x01, 0x00, 0x02}, // crsh.dr f g  
	{0xdb76, &op_crsh,	  6,   6, 255, 0xff, 0x01, 0x00, 0x02}, // crsh.dr g g  
	{0xdb77, &op_crsh,	  7,   6, 255, 0xff, 0x01, 0x00, 0x02}, // crsh.dr h g  
	{0xdb78, &op_crsh,	  0,   7, 255, 0xff, 0x01, 0x00, 0x02}, // crsh.dr a h  
	{0xdb79, &op_crsh,	  1,   7, 255, 0xff, 0x01, 0x00, 0x02}, // crsh.dr b h  
	{0xdb7a, &op_crsh,	  2,   7, 255, 0xff, 0x01, 0x00, 0x02}, // crsh.dr c h  
	{0xdb7b, &op_crsh,	  3,   7, 255, 0xff, 0x01, 0x00, 0x02}, // crsh.dr d h  
	{0xdb7c, &op_crsh,	  4,   7, 255, 0xff, 0x01, 0x00, 0x02}, // crsh.dr e h  
	{0xdb7d, &op_crsh,	  5,   7, 255, 0xff, 0x01, 0x00, 0x02}, // crsh.dr f h  
	{0xdb7e, &op_crsh,	  6,   7, 255, 0xff, 0x01, 0x00, 0x02}, // crsh.dr g h  
	{0xdb7f, &op_crsh,	  7,   7, 255, 0xff, 0x01, 0x00, 0x02}, // crsh.dr h h  
	{0xdb80, &op_crsh,	  0,   0, 255, 0xff, 0x01, 0x00, 0x04}, // crsh.r a a  
	{0xdb81, &op_crsh,	  1,   0, 255, 0xff, 0x01, 0x00, 0x04}, // crsh.r b a  
	{0xdb82, &op_crsh,	  2,   0, 255, 0xff, 0x01, 0x00, 0x04}, // crsh.r c a  
	{0xdb83, &op_crsh,	  3,   0, 255, 0xff, 0x01, 0x00, 0x04}, // crsh.r d a  
	{0xdb84, &op_crsh,	  4,   0, 255, 0xff, 0x01, 0x00, 0x04}, // crsh.r e a  
	{0xdb85, &op_crsh,	  5,   0, 255, 0xff, 0x01, 0x00, 0x04}, // crsh.r f a  
	{0xdb86, &op_crsh,	  6,   0, 255, 0xff, 0x01, 0x00, 0x04}, // crsh.r g a  
	{0xdb87, &op_crsh,	  7,   0, 255, 0xff, 0x01, 0x00, 0x04}, // crsh.r h a  
	{0xdb88, &op_crsh,	  0,   1, 255, 0xff, 0x01, 0x00, 0x04}, // crsh.r a b  
	{0xdb89, &op_crsh,	  1,   1, 255, 0xff, 0x01, 0x00, 0x04}, // crsh.r b b  
	{0xdb8a, &op_crsh,	  2,   1, 255, 0xff, 0x01, 0x00, 0x04}, // crsh.r c b  
	{0xdb8b, &op_crsh,	  3,   1, 255, 0xff, 0x01, 0x00, 0x04}, // crsh.r d b  
	{0xdb8c, &op_crsh,	  4,   1, 255, 0xff, 0x01, 0x00, 0x04}, // crsh.r e b  
	{0xdb8d, &op_crsh,	  5,   1, 255, 0xff, 0x01, 0x00, 0x04}, // crsh.r f b  
	{0xdb8e, &op_crsh,	  6,   1, 255, 0xff, 0x01, 0x00, 0x04}, // crsh.r g b  
	{0xdb8f, &op_crsh,	  7,   1, 255, 0xff, 0x01, 0x00, 0x04}, // crsh.r h b  
	{0xdb90, &op_crsh,	  0,   2, 255, 0xff, 0x01, 0x00, 0x04}, // crsh.r a c  
	{0xdb91, &op_crsh,	  1,   2, 255, 0xff, 0x01, 0x00, 0x04}, // crsh.r b c  
	{0xdb92, &op_crsh,	  2,   2, 255, 0xff, 0x01, 0x00, 0x04}, // crsh.r c c  
	{0xdb93, &op_crsh,	  3,   2, 255, 0xff, 0x01, 0x00, 0x04}, // crsh.r d c  
	{0xdb94, &op_crsh,	  4,   2, 255, 0xff, 0x01, 0x00, 0x04}, // crsh.r e c  
	{0xdb95, &op_crsh,	  5,   2, 255, 0xff, 0x01, 0x00, 0x04}, // crsh.r f c  
	{0xdb96, &op_crsh,	  6,   2, 255, 0xff, 0x01, 0x00, 0x04}, // crsh.r g c  
	{0xdb97, &op_crsh,	  7,   2, 255, 0xff, 0x01, 0x00, 0x04}, // crsh.r h c  
	{0xdb98, &op_crsh,	  0,   3, 255, 0xff, 0x01, 0x00, 0x04}, // crsh.r a d  
	{0xdb99, &op_crsh,	  1,   3, 255, 0xff, 0x01, 0x00, 0x04}, // crsh.r b d  
	{0xdb9a, &op_crsh,	  2,   3, 255, 0xff, 0x01, 0x00, 0x04}, // crsh.r c d  
	{0xdb9b, &op_crsh,	  3,   3, 255, 0xff, 0x01, 0x00, 0x04}, // crsh.r d d  
	{0xdb9c, &op_crsh,	  4,   3, 255, 0xff, 0x01, 0x00, 0x04}, // crsh.r e d  
	{0xdb9d, &op_crsh,	  5,   3, 255, 0xff, 0x01, 0x00, 0x04}, // crsh.r f d  
	{0xdb9e, &op_crsh,	  6,   3, 255, 0xff, 0x01, 0x00, 0x04}, // crsh.r g d  
	{0xdb9f, &op_crsh,	  7,   3, 255, 0xff, 0x01, 0x00, 0x04}, // crsh.r h d  
	{0xdba0, &op_crsh,	  0,   4, 255, 0xff, 0x01, 0x00, 0x04}, // crsh.r a e  
	{0xdba1, &op_crsh,	  1,   4, 255, 0xff, 0x01, 0x00, 0x04}, // crsh.r b e  
	{0xdba2, &op_crsh,	  2,   4, 255, 0xff, 0x01, 0x00, 0x04}, // crsh.r c e  
	{0xdba3, &op_crsh,	  3,   4, 255, 0xff, 0x01, 0x00, 0x04}, // crsh.r d e  
	{0xdba4, &op_crsh,	  4,   4, 255, 0xff, 0x01, 0x00, 0x04}, // crsh.r e e  
	{0xdba5, &op_crsh,	  5,   4, 255, 0xff, 0x01, 0x00, 0x04}, // crsh.r f e  
	{0xdba6, &op_crsh,	  6,   4, 255, 0xff, 0x01, 0x00, 0x04}, // crsh.r g e  
	{0xdba7, &op_crsh,	  7,   4, 255, 0xff, 0x01, 0x00, 0x04}, // crsh.r h e  
	{0xdba8, &op_crsh,	  0,   5, 255, 0xff, 0x01, 0x00, 0x04}, // crsh.r a f  
	{0xdba9, &op_crsh,	  1,   5, 255, 0xff, 0x01, 0x00, 0x04}, // crsh.r b f  
	{0xdbaa, &op_crsh,	  2,   5, 255, 0xff, 0x01, 0x00, 0x04}, // crsh.r c f  
	{0xdbab, &op_crsh,	  3,   5, 255, 0xff, 0x01, 0x00, 0x04}, // crsh.r d f  
	{0xdbac, &op_crsh,	  4,   5, 255, 0xff, 0x01, 0x00, 0x04}, // crsh.r e f  
	{0xdbad, &op_crsh,	  5,   5, 255, 0xff, 0x01, 0x00, 0x04}, // crsh.r f f  
	{0xdbae, &op_crsh,	  6,   5, 255, 0xff, 0x01, 0x00, 0x04}, // crsh.r g f  
	{0xdbaf, &op_crsh,	  7,   5, 255, 0xff, 0x01, 0x00, 0x04}, // crsh.r h f  
	{0xdbb0, &op_crsh,	  0,   6, 255, 0xff, 0x01, 0x00, 0x04}, // crsh.r a g  
	{0xdbb1, &op_crsh,	  1,   6, 255, 0xff, 0x01, 0x00, 0x04}, // crsh.r b g  
	{0xdbb2, &op_crsh,	  2,   6, 255, 0xff, 0x01, 0x00, 0x04}, // crsh.r c g  
	{0xdbb3, &op_crsh,	  3,   6, 255, 0xff, 0x01, 0x00, 0x04}, // crsh.r d g  
	{0xdbb4, &op_crsh,	  4,   6, 255, 0xff, 0x01, 0x00, 0x04}, // crsh.r e g  
	{0xdbb5, &op_crsh,	  5,   6, 255, 0xff, 0x01, 0x00, 0x04}, // crsh.r f g  
	{0xdbb6, &op_crsh,	  6,   6, 255, 0xff, 0x01, 0x00, 0x04}, // crsh.r g g  
	{0xdbb7, &op_crsh,	  7,   6, 255, 0xff, 0x01, 0x00, 0x04}, // crsh.r h g  
	{0xdbb8, &op_crsh,	  0,   7, 255, 0xff, 0x01, 0x00, 0x04}, // crsh.r a h  
	{0xdbb9, &op_crsh,	  1,   7, 255, 0xff, 0x01, 0x00, 0x04}, // crsh.r b h  
	{0xdbba, &op_crsh,	  2,   7, 255, 0xff, 0x01, 0x00, 0x04}, // crsh.r c h  
	{0xdbbb, &op_crsh,	  3,   7, 255, 0xff, 0x01, 0x00, 0x04}, // crsh.r d h  
	{0xdbbc, &op_crsh,	  4,   7, 255, 0xff, 0x01, 0x00, 0x04}, // crsh.r e h  
	{0xdbbd, &op_crsh,	  5,   7, 255, 0xff, 0x01, 0x00, 0x04}, // crsh.r f h  
	{0xdbbe, &op_crsh,	  6,   7, 255, 0xff, 0x01, 0x00, 0x04}, // crsh.r g h  
	{0xdbbf, &op_crsh,	  7,   7, 255, 0xff, 0x01, 0x00, 0x04}, // crsh.r h h  
	{0xdac8, &op_crsh,	  0,   8, 255, 0xff, 0x00, 0x01, 0x01}, // crsh.wi a <literal>  
	{0xdac9, &op_crsh,	  1,   8, 255, 0xff, 0x00, 0x01, 0x01}, // crsh.wi b <literal>  
	{0xdaca, &op_crsh,	  2,   8, 255, 0xff, 0x00, 0x01, 0x01}, // crsh.wi c <literal>  
	{0xdacb, &op_crsh,	  3,   8, 255, 0xff, 0x00, 0x01, 0x01}, // crsh.wi d <literal>  
	{0xdacc, &op_crsh,	  4,   8, 255, 0xff, 0x00, 0x01, 0x01}, // crsh.wi e <literal>  
	{0xdacd, &op_crsh,	  5,   8, 255, 0xff, 0x00, 0x01, 0x01}, // crsh.wi f <literal>  
	{0xdace, &op_crsh,	  6,   8, 255, 0xff, 0x00, 0x01, 0x01}, // crsh.wi g <literal>  
	{0xdacf, &op_crsh,	  7,   8, 255, 0xff, 0x00, 0x01, 0x01}, // crsh.wi h <literal>  
	{0xdad0, &op_crsh,	  0,   8, 255, 0xff, 0x00, 0x02, 0x02}, // crsh.di a <literal>  
	{0xdad1, &op_crsh,	  1,   8, 255, 0xff, 0x00, 0x02, 0x02}, // crsh.di b <literal>  
	{0xdad2, &op_crsh,	  2,   8, 255, 0xff, 0x00, 0x02, 0x02}, // crsh.di c <literal>  
	{0xdad3, &op_crsh,	  3,   8, 255, 0xff, 0x00, 0x02, 0x02}, // crsh.di d <literal>  
	{0xdad4, &op_crsh,	  4,   8, 255, 0xff, 0x00, 0x02, 0x02}, // crsh.di e <literal>  
	{0xdad5, &op_crsh,	  5,   8, 255, 0xff, 0x00, 0x02, 0x02}, // crsh.di f <literal>  
	{0xdad6, &op_crsh,	  6,   8, 255, 0xff, 0x00, 0x02, 0x02}, // crsh.di g <literal>  
	{0xdad7, &op_crsh,	  7,   8, 255, 0xff, 0x00, 0x02, 0x02}, // crsh.di h <literal>  
	{0xdae0, &op_crsh,	  0,   8, 255, 0xff, 0x00, 0x04, 0x04}, // crsh.i a <literal>  
	{0xdae1, &op_crsh,	  1,   8, 255, 0xff, 0x00, 0x04, 0x04}, // crsh.i b <literal>  
	{0xdae2, &op_crsh,	  2,   8, 255, 0xff, 0x00, 0x04, 0x04}, // crsh.i c <literal>  
	{0xdae3, &op_crsh,	  3,   8, 255, 0xff, 0x00, 0x04, 0x04}, // crsh.i d <literal>  
	{0xdae4, &op_crsh,	  4,   8, 255, 0xff, 0x00, 0x04, 0x04}, // crsh.i e <literal>  
	{0xdae5, &op_crsh,	  5,   8, 255, 0xff, 0x00, 0x04, 0x04}, // crsh.i f <literal>  
	{0xdae6, &op_crsh,	  6,   8, 255, 0xff, 0x00, 0x04, 0x04}, // crsh.i g <literal>  
	{0xdae7, &op_crsh,	  7,   8, 255, 0xff, 0x00, 0x04, 0x04}, // crsh.i h <literal>  
	{0xdbc8, &op_crsh,	  0,   8, 255, 0xff, 0x01, 0x04, 0x01}, // crsh.wri a <literal>  
	{0xdbc9, &op_crsh,	  1,   8, 255, 0xff, 0x01, 0x04, 0x01}, // crsh.wri b <literal>  
	{0xdbca, &op_crsh,	  2,   8, 255, 0xff, 0x01, 0x04, 0x01}, // crsh.wri c <literal>  
	{0xdbcb, &op_crsh,	  3,   8, 255, 0xff, 0x01, 0x04, 0x01}, // crsh.wri d <literal>  
	{0xdbcc, &op_crsh,	  4,   8, 255, 0xff, 0x01, 0x04, 0x01}, // crsh.wri e <literal>  
	{0xdbcd, &op_crsh,	  5,   8, 255, 0xff, 0x01, 0x04, 0x01}, // crsh.wri f <literal>  
	{0xdbce, &op_crsh,	  6,   8, 255, 0xff, 0x01, 0x04, 0x01}, // crsh.wri g <literal>  
	{0xdbcf, &op_crsh,	  7,   8, 255, 0xff, 0x01, 0x04, 0x01}, // crsh.wri h <literal>  
	{0xdbd0, &op_crsh,	  0,   8, 255, 0xff, 0x01, 0x04, 0x02}, // crsh.dri a <literal>  
	{0xdbd1, &op_crsh,	  1,   8, 255, 0xff, 0x01, 0x04, 0x02}, // crsh.dri b <literal>  
	{0xdbd2, &op_crsh,	  2,   8, 255, 0xff, 0x01, 0x04, 0x02}, // crsh.dri c <literal>  
	{0xdbd3, &op_crsh,	  3,   8, 255, 0xff, 0x01, 0x04, 0x02}, // crsh.dri d <literal>  
	{0xdbd4, &op_crsh,	  4,   8, 255, 0xff, 0x01, 0x04, 0x02}, // crsh.dri e <literal>  
	{0xdbd5, &op_crsh,	  5,   8, 255, 0xff, 0x01, 0x04, 0x02}, // crsh.dri f <literal>  
	{0xdbd6, &op_crsh,	  6,   8, 255, 0xff, 0x01, 0x04, 0x02}, // crsh.dri g <literal>  
	{0xdbd7, &op_crsh,	  7,   8, 255, 0xff, 0x01, 0x04, 0x02}, // crsh.dri h <literal>  
	{0xdbe0, &op_crsh,	  0,   8, 255, 0xff, 0x01, 0x04, 0x04}, // crsh.ri a <literal>  
	{0xdbe1, &op_crsh,	  1,   8, 255, 0xff, 0x01, 0x04, 0x04}, // crsh.ri b <literal>  
	{0xdbe2, &op_crsh,	  2,   8, 255, 0xff, 0x01, 0x04, 0x04}, // crsh.ri c <literal>  
	{0xdbe3, &op_crsh,	  3,   8, 255, 0xff, 0x01, 0x04, 0x04}, // crsh.ri d <literal>  
	{0xdbe4, &op_crsh,	  4,   8, 255, 0xff, 0x01, 0x04, 0x04}, // crsh.ri e <literal>  
	{0xdbe5, &op_crsh,	  5,   8, 255, 0xff, 0x01, 0x04, 0x04}, // crsh.ri f <literal>  
	{0xdbe6, &op_crsh,	  6,   8, 255, 0xff, 0x01, 0x04, 0x04}, // crsh.ri g <literal>  
	{0xdbe7, &op_crsh,	  7,   8, 255, 0xff, 0x01, 0x04, 0x04}, // crsh.ri h <literal>  
	{0xdc00, &op_cdiv,	  0,   0, 255, 0xff, 0x00, 0x00, 0x01}, // cdiv.w a a  
	{0xdc01, &op_cdiv,	  1,   0, 255, 0xff, 0x00, 0x00, 0x01}, // cdiv.w b a  
	{0xdc02, &op_cdiv,	  2,   0, 255, 0xff, 0x00, 0x00, 0x01}, // cdiv.w c a  
	{0xdc03, &op_cdiv,	  3,   0, 255, 0xff, 0x00, 0x00, 0x01}, // cdiv.w d a  
	{0xdc04, &op_cdiv,	  4,   0, 255, 0xff, 0x00, 0x00, 0x01}, // cdiv.w e a  
	{0xdc05, &op_cdiv,	  5,   0, 255, 0xff, 0x00, 0x00, 0x01}, // cdiv.w f a  
	{0xdc06, &op_cdiv,	  6,   0, 255, 0xff, 0x00, 0x00, 0x01}, // cdiv.w g a  
	{0xdc07, &op_cdiv,	  7,   0, 255, 0xff, 0x00, 0x00, 0x01}, // cdiv.w h a  
	{0xdc08, &op_cdiv,	  0,   1, 255, 0xff, 0x00, 0x00, 0x01}, // cdiv.w a b  
	{0xdc09, &op_cdiv,	  1,   1, 255, 0xff, 0x00, 0x00, 0x01}, // cdiv.w b b  
	{0xdc0a, &op_cdiv,	  2,   1, 255, 0xff, 0x00, 0x00, 0x01}, // cdiv.w c b  
	{0xdc0b, &op_cdiv,	  3,   1, 255, 0xff, 0x00, 0x00, 0x01}, // cdiv.w d b  
	{0xdc0c, &op_cdiv,	  4,   1, 255, 0xff, 0x00, 0x00, 0x01}, // cdiv.w e b  
	{0xdc0d, &op_cdiv,	  5,   1, 255, 0xff, 0x00, 0x00, 0x01}, // cdiv.w f b  
	{0xdc0e, &op_cdiv,	  6,   1, 255, 0xff, 0x00, 0x00, 0x01}, // cdiv.w g b  
	{0xdc0f, &op_cdiv,	  7,   1, 255, 0xff, 0x00, 0x00, 0x01}, // cdiv.w h b  
	{0xdc10, &op_cdiv,	  0,   2, 255, 0xff, 0x00, 0x00, 0x01}, // cdiv.w a c  
	{0xdc11, &op_cdiv,	  1,   2, 255, 0xff, 0x00, 0x00, 0x01}, // cdiv.w b c  
	{0xdc12, &op_cdiv,	  2,   2, 255, 0xff, 0x00, 0x00, 0x01}, // cdiv.w c c  
	{0xdc13, &op_cdiv,	  3,   2, 255, 0xff, 0x00, 0x00, 0x01}, // cdiv.w d c  
	{0xdc14, &op_cdiv,	  4,   2, 255, 0xff, 0x00, 0x00, 0x01}, // cdiv.w e c  
	{0xdc15, &op_cdiv,	  5,   2, 255, 0xff, 0x00, 0x00, 0x01}, // cdiv.w f c  
	{0xdc16, &op_cdiv,	  6,   2, 255, 0xff, 0x00, 0x00, 0x01}, // cdiv.w g c  
	{0xdc17, &op_cdiv,	  7,   2, 255, 0xff, 0x00, 0x00, 0x01}, // cdiv.w h c  
	{0xdc18, &op_cdiv,	  0,   3, 255, 0xff, 0x00, 0x00, 0x01}, // cdiv.w a d  
	{0xdc19, &op_cdiv,	  1,   3, 255, 0xff, 0x00, 0x00, 0x01}, // cdiv.w b d  
	{0xdc1a, &op_cdiv,	  2,   3, 255, 0xff, 0x00, 0x00, 0x01}, // cdiv.w c d  
	{0xdc1b, &op_cdiv,	  3,   3, 255, 0xff, 0x00, 0x00, 0x01}, // cdiv.w d d  
	{0xdc1c, &op_cdiv,	  4,   3, 255, 0xff, 0x00, 0x00, 0x01}, // cdiv.w e d  
	{0xdc1d, &op_cdiv,	  5,   3, 255, 0xff, 0x00, 0x00, 0x01}, // cdiv.w f d  
	{0xdc1e, &op_cdiv,	  6,   3, 255, 0xff, 0x00, 0x00, 0x01}, // cdiv.w g d  
	{0xdc1f, &op_cdiv,	  7,   3, 255, 0xff, 0x00, 0x00, 0x01}, // cdiv.w h d  
	{0xdc20, &op_cdiv,	  0,   4, 255, 0xff, 0x00, 0x00, 0x01}, // cdiv.w a e  
	{0xdc21, &op_cdiv,	  1,   4, 255, 0xff, 0x00, 0x00, 0x01}, // cdiv.w b e  
	{0xdc22, &op_cdiv,	  2,   4, 255, 0xff, 0x00, 0x00, 0x01}, // cdiv.w c e  
	{0xdc23, &op_cdiv,	  3,   4, 255, 0xff, 0x00, 0x00, 0x01}, // cdiv.w d e  
	{0xdc24, &op_cdiv,	  4,   4, 255, 0xff, 0x00, 0x00, 0x01}, // cdiv.w e e  
	{0xdc25, &op_cdiv,	  5,   4, 255, 0xff, 0x00, 0x00, 0x01}, // cdiv.w f e  
	{0xdc26, &op_cdiv,	  6,   4, 255, 0xff, 0x00, 0x00, 0x01}, // cdiv.w g e  
	{0xdc27, &op_cdiv,	  7,   4, 255, 0xff, 0x00, 0x00, 0x01}, // cdiv.w h e  
	{0xdc28, &op_cdiv,	  0,   5, 255, 0xff, 0x00, 0x00, 0x01}, // cdiv.w a f  
	{0xdc29, &op_cdiv,	  1,   5, 255, 0xff, 0x00, 0x00, 0x01}, // cdiv.w b f  
	{0xdc2a, &op_cdiv,	  2,   5, 255, 0xff, 0x00, 0x00, 0x01}, // cdiv.w c f  
	{0xdc2b, &op_cdiv,	  3,   5, 255, 0xff, 0x00, 0x00, 0x01}, // cdiv.w d f  
	{0xdc2c, &op_cdiv,	  4,   5, 255, 0xff, 0x00, 0x00, 0x01}, // cdiv.w e f  
	{0xdc2d, &op_cdiv,	  5,   5, 255, 0xff, 0x00, 0x00, 0x01}, // cdiv.w f f  
	{0xdc2e, &op_cdiv,	  6,   5, 255, 0xff, 0x00, 0x00, 0x01}, // cdiv.w g f  
	{0xdc2f, &op_cdiv,	  7,   5, 255, 0xff, 0x00, 0x00, 0x01}, // cdiv.w h f  
	{0xdc30, &op_cdiv,	  0,   6, 255, 0xff, 0x00, 0x00, 0x01}, // cdiv.w a g  
	{0xdc31, &op_cdiv,	  1,   6, 255, 0xff, 0x00, 0x00, 0x01}, // cdiv.w b g  
	{0xdc32, &op_cdiv,	  2,   6, 255, 0xff, 0x00, 0x00, 0x01}, // cdiv.w c g  
	{0xdc33, &op_cdiv,	  3,   6, 255, 0xff, 0x00, 0x00, 0x01}, // cdiv.w d g  
	{0xdc34, &op_cdiv,	  4,   6, 255, 0xff, 0x00, 0x00, 0x01}, // cdiv.w e g  
	{0xdc35, &op_cdiv,	  5,   6, 255, 0xff, 0x00, 0x00, 0x01}, // cdiv.w f g  
	{0xdc36, &op_cdiv,	  6,   6, 255, 0xff, 0x00, 0x00, 0x01}, // cdiv.w g g  
	{0xdc37, &op_cdiv,	  7,   6, 255, 0xff, 0x00, 0x00, 0x01}, // cdiv.w h g  
	{0xdc38, &op_cdiv,	  0,   7, 255, 0xff, 0x00, 0x00, 0x01}, // cdiv.w a h  
	{0xdc39, &op_cdiv,	  1,   7, 255, 0xff, 0x00, 0x00, 0x01}, // cdiv.w b h  
	{0xdc3a, &op_cdiv,	  2,   7, 255, 0xff, 0x00, 0x00, 0x01}, // cdiv.w c h  
	{0xdc3b, &op_cdiv,	  3,   7, 255, 0xff, 0x00, 0x00, 0x01}, // cdiv.w d h  
	{0xdc3c, &op_cdiv,	  4,   7, 255, 0xff, 0x00, 0x00, 0x01}, // cdiv.w e h  
	{0xdc3d, &op_cdiv,	  5,   7, 255, 0xff, 0x00, 0x00, 0x01}, // cdiv.w f h  
	{0xdc3e, &op_cdiv,	  6,   7, 255, 0xff, 0x00, 0x00, 0x01}, // cdiv.w g h  
	{0xdc3f, &op_cdiv,	  7,   7, 255, 0xff, 0x00, 0x00, 0x01}, // cdiv.w h h  
	{0xdc40, &op_cdiv,	  0,   0, 255, 0xff, 0x00, 0x00, 0x02}, // cdiv.d a a  
	{0xdc41, &op_cdiv,	  1,   0, 255, 0xff, 0x00, 0x00, 0x02}, // cdiv.d b a  
	{0xdc42, &op_cdiv,	  2,   0, 255, 0xff, 0x00, 0x00, 0x02}, // cdiv.d c a  
	{0xdc43, &op_cdiv,	  3,   0, 255, 0xff, 0x00, 0x00, 0x02}, // cdiv.d d a  
	{0xdc44, &op_cdiv,	  4,   0, 255, 0xff, 0x00, 0x00, 0x02}, // cdiv.d e a  
	{0xdc45, &op_cdiv,	  5,   0, 255, 0xff, 0x00, 0x00, 0x02}, // cdiv.d f a  
	{0xdc46, &op_cdiv,	  6,   0, 255, 0xff, 0x00, 0x00, 0x02}, // cdiv.d g a  
	{0xdc47, &op_cdiv,	  7,   0, 255, 0xff, 0x00, 0x00, 0x02}, // cdiv.d h a  
	{0xdc48, &op_cdiv,	  0,   1, 255, 0xff, 0x00, 0x00, 0x02}, // cdiv.d a b  
	{0xdc49, &op_cdiv,	  1,   1, 255, 0xff, 0x00, 0x00, 0x02}, // cdiv.d b b  
	{0xdc4a, &op_cdiv,	  2,   1, 255, 0xff, 0x00, 0x00, 0x02}, // cdiv.d c b  
	{0xdc4b, &op_cdiv,	  3,   1, 255, 0xff, 0x00, 0x00, 0x02}, // cdiv.d d b  
	{0xdc4c, &op_cdiv,	  4,   1, 255, 0xff, 0x00, 0x00, 0x02}, // cdiv.d e b  
	{0xdc4d, &op_cdiv,	  5,   1, 255, 0xff, 0x00, 0x00, 0x02}, // cdiv.d f b  
	{0xdc4e, &op_cdiv,	  6,   1, 255, 0xff, 0x00, 0x00, 0x02}, // cdiv.d g b  
	{0xdc4f, &op_cdiv,	  7,   1, 255, 0xff, 0x00, 0x00, 0x02}, // cdiv.d h b  
	{0xdc50, &op_cdiv,	  0,   2, 255, 0xff, 0x00, 0x00, 0x02}, // cdiv.d a c  
	{0xdc51, &op_cdiv,	  1,   2, 255, 0xff, 0x00, 0x00, 0x02}, // cdiv.d b c  
	{0xdc52, &op_cdiv,	  2,   2, 255, 0xff, 0x00, 0x00, 0x02}, // cdiv.d c c  
	{0xdc53, &op_cdiv,	  3,   2, 255, 0xff, 0x00, 0x00, 0x02}, // cdiv.d d c  
	{0xdc54, &op_cdiv,	  4,   2, 255, 0xff, 0x00, 0x00, 0x02}, // cdiv.d e c  
	{0xdc55, &op_cdiv,	  5,   2, 255, 0xff, 0x00, 0x00, 0x02}, // cdiv.d f c  
	{0xdc56, &op_cdiv,	  6,   2, 255, 0xff, 0x00, 0x00, 0x02}, // cdiv.d g c  
	{0xdc57, &op_cdiv,	  7,   2, 255, 0xff, 0x00, 0x00, 0x02}, // cdiv.d h c  
	{0xdc58, &op_cdiv,	  0,   3, 255, 0xff, 0x00, 0x00, 0x02}, // cdiv.d a d  
	{0xdc59, &op_cdiv,	  1,   3, 255, 0xff, 0x00, 0x00, 0x02}, // cdiv.d b d  
	{0xdc5a, &op_cdiv,	  2,   3, 255, 0xff, 0x00, 0x00, 0x02}, // cdiv.d c d  
	{0xdc5b, &op_cdiv,	  3,   3, 255, 0xff, 0x00, 0x00, 0x02}, // cdiv.d d d  
	{0xdc5c, &op_cdiv,	  4,   3, 255, 0xff, 0x00, 0x00, 0x02}, // cdiv.d e d  
	{0xdc5d, &op_cdiv,	  5,   3, 255, 0xff, 0x00, 0x00, 0x02}, // cdiv.d f d  
	{0xdc5e, &op_cdiv,	  6,   3, 255, 0xff, 0x00, 0x00, 0x02}, // cdiv.d g d  
	{0xdc5f, &op_cdiv,	  7,   3, 255, 0xff, 0x00, 0x00, 0x02}, // cdiv.d h d  
	{0xdc60, &op_cdiv,	  0,   4, 255, 0xff, 0x00, 0x00, 0x02}, // cdiv.d a e  
	{0xdc61, &op_cdiv,	  1,   4, 255, 0xff, 0x00, 0x00, 0x02}, // cdiv.d b e  
	{0xdc62, &op_cdiv,	  2,   4, 255, 0xff, 0x00, 0x00, 0x02}, // cdiv.d c e  
	{0xdc63, &op_cdiv,	  3,   4, 255, 0xff, 0x00, 0x00, 0x02}, // cdiv.d d e  
	{0xdc64, &op_cdiv,	  4,   4, 255, 0xff, 0x00, 0x00, 0x02}, // cdiv.d e e  
	{0xdc65, &op_cdiv,	  5,   4, 255, 0xff, 0x00, 0x00, 0x02}, // cdiv.d f e  
	{0xdc66, &op_cdiv,	  6,   4, 255, 0xff, 0x00, 0x00, 0x02}, // cdiv.d g e  
	{0xdc67, &op_cdiv,	  7,   4, 255, 0xff, 0x00, 0x00, 0x02}, // cdiv.d h e  
	{0xdc68, &op_cdiv,	  0,   5, 255, 0xff, 0x00, 0x00, 0x02}, // cdiv.d a f  
	{0xdc69, &op_cdiv,	  1,   5, 255, 0xff, 0x00, 0x00, 0x02}, // cdiv.d b f  
	{0xdc6a, &op_cdiv,	  2,   5, 255, 0xff, 0x00, 0x00, 0x02}, // cdiv.d c f  
	{0xdc6b, &op_cdiv,	  3,   5, 255, 0xff, 0x00, 0x00, 0x02}, // cdiv.d d f  
	{0xdc6c, &op_cdiv,	  4,   5, 255, 0xff, 0x00, 0x00, 0x02}, // cdiv.d e f  
	{0xdc6d, &op_cdiv,	  5,   5, 255, 0xff, 0x00, 0x00, 0x02}, // cdiv.d f f  
	{0xdc6e, &op_cdiv,	  6,   5, 255, 0xff, 0x00, 0x00, 0x02}, // cdiv.d g f  
	{0xdc6f, &op_cdiv,	  7,   5, 255, 0xff, 0x00, 0x00, 0x02}, // cdiv.d h f  
	{0xdc70, &op_cdiv,	  0,   6, 255, 0xff, 0x00, 0x00, 0x02}, // cdiv.d a g  
	{0xdc71, &op_cdiv,	  1,   6, 255, 0xff, 0x00, 0x00, 0x02}, // cdiv.d b g  
	{0xdc72, &op_cdiv,	  2,   6, 255, 0xff, 0x00, 0x00, 0x02}, // cdiv.d c g  
	{0xdc73, &op_cdiv,	  3,   6, 255, 0xff, 0x00, 0x00, 0x02}, // cdiv.d d g  
	{0xdc74, &op_cdiv,	  4,   6, 255, 0xff, 0x00, 0x00, 0x02}, // cdiv.d e g  
	{0xdc75, &op_cdiv,	  5,   6, 255, 0xff, 0x00, 0x00, 0x02}, // cdiv.d f g  
	{0xdc76, &op_cdiv,	  6,   6, 255, 0xff, 0x00, 0x00, 0x02}, // cdiv.d g g  
	{0xdc77, &op_cdiv,	  7,   6, 255, 0xff, 0x00, 0x00, 0x02}, // cdiv.d h g  
	{0xdc78, &op_cdiv,	  0,   7, 255, 0xff, 0x00, 0x00, 0x02}, // cdiv.d a h  
	{0xdc79, &op_cdiv,	  1,   7, 255, 0xff, 0x00, 0x00, 0x02}, // cdiv.d b h  
	{0xdc7a, &op_cdiv,	  2,   7, 255, 0xff, 0x00, 0x00, 0x02}, // cdiv.d c h  
	{0xdc7b, &op_cdiv,	  3,   7, 255, 0xff, 0x00, 0x00, 0x02}, // cdiv.d d h  
	{0xdc7c, &op_cdiv,	  4,   7, 255, 0xff, 0x00, 0x00, 0x02}, // cdiv.d e h  
	{0xdc7d, &op_cdiv,	  5,   7, 255, 0xff, 0x00, 0x00, 0x02}, // cdiv.d f h  
	{0xdc7e, &op_cdiv,	  6,   7, 255, 0xff, 0x00, 0x00, 0x02}, // cdiv.d g h  
	{0xdc7f, &op_cdiv,	  7,   7, 255, 0xff, 0x00, 0x00, 0x02}, // cdiv.d h h  
	{0xdc80, &op_cdiv,	  0,   0, 255, 0xff, 0x00, 0x00, 0x04}, // cdiv a a  
	{0xdc81, &op_cdiv,	  1,   0, 255, 0xff, 0x00, 0x00, 0x04}, // cdiv b a  
	{0xdc82, &op_cdiv,	  2,   0, 255, 0xff, 0x00, 0x00, 0x04}, // cdiv c a  
	{0xdc83, &op_cdiv,	  3,   0, 255, 0xff, 0x00, 0x00, 0x04}, // cdiv d a  
	{0xdc84, &op_cdiv,	  4,   0, 255, 0xff, 0x00, 0x00, 0x04}, // cdiv e a  
	{0xdc85, &op_cdiv,	  5,   0, 255, 0xff, 0x00, 0x00, 0x04}, // cdiv f a  
	{0xdc86, &op_cdiv,	  6,   0, 255, 0xff, 0x00, 0x00, 0x04}, // cdiv g a  
	{0xdc87, &op_cdiv,	  7,   0, 255, 0xff, 0x00, 0x00, 0x04}, // cdiv h a  
	{0xdc88, &op_cdiv,	  0,   1, 255, 0xff, 0x00, 0x00, 0x04}, // cdiv a b  
	{0xdc89, &op_cdiv,	  1,   1, 255, 0xff, 0x00, 0x00, 0x04}, // cdiv b b  
	{0xdc8a, &op_cdiv,	  2,   1, 255, 0xff, 0x00, 0x00, 0x04}, // cdiv c b  
	{0xdc8b, &op_cdiv,	  3,   1, 255, 0xff, 0x00, 0x00, 0x04}, // cdiv d b  
	{0xdc8c, &op_cdiv,	  4,   1, 255, 0xff, 0x00, 0x00, 0x04}, // cdiv e b  
	{0xdc8d, &op_cdiv,	  5,   1, 255, 0xff, 0x00, 0x00, 0x04}, // cdiv f b  
	{0xdc8e, &op_cdiv,	  6,   1, 255, 0xff, 0x00, 0x00, 0x04}, // cdiv g b  
	{0xdc8f, &op_cdiv,	  7,   1, 255, 0xff, 0x00, 0x00, 0x04}, // cdiv h b  
	{0xdc90, &op_cdiv,	  0,   2, 255, 0xff, 0x00, 0x00, 0x04}, // cdiv a c  
	{0xdc91, &op_cdiv,	  1,   2, 255, 0xff, 0x00, 0x00, 0x04}, // cdiv b c  
	{0xdc92, &op_cdiv,	  2,   2, 255, 0xff, 0x00, 0x00, 0x04}, // cdiv c c  
	{0xdc93, &op_cdiv,	  3,   2, 255, 0xff, 0x00, 0x00, 0x04}, // cdiv d c  
	{0xdc94, &op_cdiv,	  4,   2, 255, 0xff, 0x00, 0x00, 0x04}, // cdiv e c  
	{0xdc95, &op_cdiv,	  5,   2, 255, 0xff, 0x00, 0x00, 0x04}, // cdiv f c  
	{0xdc96, &op_cdiv,	  6,   2, 255, 0xff, 0x00, 0x00, 0x04}, // cdiv g c  
	{0xdc97, &op_cdiv,	  7,   2, 255, 0xff, 0x00, 0x00, 0x04}, // cdiv h c  
	{0xdc98, &op_cdiv,	  0,   3, 255, 0xff, 0x00, 0x00, 0x04}, // cdiv a d  
	{0xdc99, &op_cdiv,	  1,   3, 255, 0xff, 0x00, 0x00, 0x04}, // cdiv b d  
	{0xdc9a, &op_cdiv,	  2,   3, 255, 0xff, 0x00, 0x00, 0x04}, // cdiv c d  
	{0xdc9b, &op_cdiv,	  3,   3, 255, 0xff, 0x00, 0x00, 0x04}, // cdiv d d  
	{0xdc9c, &op_cdiv,	  4,   3, 255, 0xff, 0x00, 0x00, 0x04}, // cdiv e d  
	{0xdc9d, &op_cdiv,	  5,   3, 255, 0xff, 0x00, 0x00, 0x04}, // cdiv f d  
	{0xdc9e, &op_cdiv,	  6,   3, 255, 0xff, 0x00, 0x00, 0x04}, // cdiv g d  
	{0xdc9f, &op_cdiv,	  7,   3, 255, 0xff, 0x00, 0x00, 0x04}, // cdiv h d  
	{0xdca0, &op_cdiv,	  0,   4, 255, 0xff, 0x00, 0x00, 0x04}, // cdiv a e  
	{0xdca1, &op_cdiv,	  1,   4, 255, 0xff, 0x00, 0x00, 0x04}, // cdiv b e  
	{0xdca2, &op_cdiv,	  2,   4, 255, 0xff, 0x00, 0x00, 0x04}, // cdiv c e  
	{0xdca3, &op_cdiv,	  3,   4, 255, 0xff, 0x00, 0x00, 0x04}, // cdiv d e  
	{0xdca4, &op_cdiv,	  4,   4, 255, 0xff, 0x00, 0x00, 0x04}, // cdiv e e  
	{0xdca5, &op_cdiv,	  5,   4, 255, 0xff, 0x00, 0x00, 0x04}, // cdiv f e  
	{0xdca6, &op_cdiv,	  6,   4, 255, 0xff, 0x00, 0x00, 0x04}, // cdiv g e  
	{0xdca7, &op_cdiv,	  7,   4, 255, 0xff, 0x00, 0x00, 0x04}, // cdiv h e  
	{0xdca8, &op_cdiv,	  0,   5, 255, 0xff, 0x00, 0x00, 0x04}, // cdiv a f  
	{0xdca9, &op_cdiv,	  1,   5, 255, 0xff, 0x00, 0x00, 0x04}, // cdiv b f  
	{0xdcaa, &op_cdiv,	  2,   5, 255, 0xff, 0x00, 0x00, 0x04}, // cdiv c f  
	{0xdcab, &op_cdiv,	  3,   5, 255, 0xff, 0x00, 0x00, 0x04}, // cdiv d f  
	{0xdcac, &op_cdiv,	  4,   5, 255, 0xff, 0x00, 0x00, 0x04}, // cdiv e f  
	{0xdcad, &op_cdiv,	  5,   5, 255, 0xff, 0x00, 0x00, 0x04}, // cdiv f f  
	{0xdcae, &op_cdiv,	  6,   5, 255, 0xff, 0x00, 0x00, 0x04}, // cdiv g f  
	{0xdcaf, &op_cdiv,	  7,   5, 255, 0xff, 0x00, 0x00, 0x04}, // cdiv h f  
	{0xdcb0, &op_cdiv,	  0,   6, 255, 0xff, 0x00, 0x00, 0x04}, // cdiv a g  
	{0xdcb1, &op_cdiv,	  1,   6, 255, 0xff, 0x00, 0x00, 0x04}, // cdiv b g  
	{0xdcb2, &op_cdiv,	  2,   6, 255, 0xff, 0x00, 0x00, 0x04}, // cdiv c g  
	{0xdcb3, &op_cdiv,	  3,   6, 255, 0xff, 0x00, 0x00, 0x04}, // cdiv d g  
	{0xdcb4, &op_cdiv,	  4,   6, 255, 0xff, 0x00, 0x00, 0x04}, // cdiv e g  
	{0xdcb5, &op_cdiv,	  5,   6, 255, 0xff, 0x00, 0x00, 0x04}, // cdiv f g  
	{0xdcb6, &op_cdiv,	  6,   6, 255, 0xff, 0x00, 0x00, 0x04}, // cdiv g g  
	{0xdcb7, &op_cdiv,	  7,   6, 255, 0xff, 0x00, 0x00, 0x04}, // cdiv h g  
	{0xdcb8, &op_cdiv,	  0,   7, 255, 0xff, 0x00, 0x00, 0x04}, // cdiv a h  
	{0xdcb9, &op_cdiv,	  1,   7, 255, 0xff, 0x00, 0x00, 0x04}, // cdiv b h  
	{0xdcba, &op_cdiv,	  2,   7, 255, 0xff, 0x00, 0x00, 0x04}, // cdiv c h  
	{0xdcbb, &op_cdiv,	  3,   7, 255, 0xff, 0x00, 0x00, 0x04}, // cdiv d h  
	{0xdcbc, &op_cdiv,	  4,   7, 255, 0xff, 0x00, 0x00, 0x04}, // cdiv e h  
	{0xdcbd, &op_cdiv,	  5,   7, 255, 0xff, 0x00, 0x00, 0x04}, // cdiv f h  
	{0xdcbe, &op_cdiv,	  6,   7, 255, 0xff, 0x00, 0x00, 0x04}, // cdiv g h  
	{0xdcbf, &op_cdiv,	  7,   7, 255, 0xff, 0x00, 0x00, 0x04}, // cdiv h h  
	{0xdd00, &op_cdiv,	  0,   0, 255, 0xff, 0x01, 0x00, 0x01}, // cdiv.wr a a  
	{0xdd01, &op_cdiv,	  1,   0, 255, 0xff, 0x01, 0x00, 0x01}, // cdiv.wr b a  
	{0xdd02, &op_cdiv,	  2,   0, 255, 0xff, 0x01, 0x00, 0x01}, // cdiv.wr c a  
	{0xdd03, &op_cdiv,	  3,   0, 255, 0xff, 0x01, 0x00, 0x01}, // cdiv.wr d a  
	{0xdd04, &op_cdiv,	  4,   0, 255, 0xff, 0x01, 0x00, 0x01}, // cdiv.wr e a  
	{0xdd05, &op_cdiv,	  5,   0, 255, 0xff, 0x01, 0x00, 0x01}, // cdiv.wr f a  
	{0xdd06, &op_cdiv,	  6,   0, 255, 0xff, 0x01, 0x00, 0x01}, // cdiv.wr g a  
	{0xdd07, &op_cdiv,	  7,   0, 255, 0xff, 0x01, 0x00, 0x01}, // cdiv.wr h a  
	{0xdd08, &op_cdiv,	  0,   1, 255, 0xff, 0x01, 0x00, 0x01}, // cdiv.wr a b  
	{0xdd09, &op_cdiv,	  1,   1, 255, 0xff, 0x01, 0x00, 0x01}, // cdiv.wr b b  
	{0xdd0a, &op_cdiv,	  2,   1, 255, 0xff, 0x01, 0x00, 0x01}, // cdiv.wr c b  
	{0xdd0b, &op_cdiv,	  3,   1, 255, 0xff, 0x01, 0x00, 0x01}, // cdiv.wr d b  
	{0xdd0c, &op_cdiv,	  4,   1, 255, 0xff, 0x01, 0x00, 0x01}, // cdiv.wr e b  
	{0xdd0d, &op_cdiv,	  5,   1, 255, 0xff, 0x01, 0x00, 0x01}, // cdiv.wr f b  
	{0xdd0e, &op_cdiv,	  6,   1, 255, 0xff, 0x01, 0x00, 0x01}, // cdiv.wr g b  
	{0xdd0f, &op_cdiv,	  7,   1, 255, 0xff, 0x01, 0x00, 0x01}, // cdiv.wr h b  
	{0xdd10, &op_cdiv,	  0,   2, 255, 0xff, 0x01, 0x00, 0x01}, // cdiv.wr a c  
	{0xdd11, &op_cdiv,	  1,   2, 255, 0xff, 0x01, 0x00, 0x01}, // cdiv.wr b c  
	{0xdd12, &op_cdiv,	  2,   2, 255, 0xff, 0x01, 0x00, 0x01}, // cdiv.wr c c  
	{0xdd13, &op_cdiv,	  3,   2, 255, 0xff, 0x01, 0x00, 0x01}, // cdiv.wr d c  
	{0xdd14, &op_cdiv,	  4,   2, 255, 0xff, 0x01, 0x00, 0x01}, // cdiv.wr e c  
	{0xdd15, &op_cdiv,	  5,   2, 255, 0xff, 0x01, 0x00, 0x01}, // cdiv.wr f c  
	{0xdd16, &op_cdiv,	  6,   2, 255, 0xff, 0x01, 0x00, 0x01}, // cdiv.wr g c  
	{0xdd17, &op_cdiv,	  7,   2, 255, 0xff, 0x01, 0x00, 0x01}, // cdiv.wr h c  
	{0xdd18, &op_cdiv,	  0,   3, 255, 0xff, 0x01, 0x00, 0x01}, // cdiv.wr a d  
	{0xdd19, &op_cdiv,	  1,   3, 255, 0xff, 0x01, 0x00, 0x01}, // cdiv.wr b d  
	{0xdd1a, &op_cdiv,	  2,   3, 255, 0xff, 0x01, 0x00, 0x01}, // cdiv.wr c d  
	{0xdd1b, &op_cdiv,	  3,   3, 255, 0xff, 0x01, 0x00, 0x01}, // cdiv.wr d d  
	{0xdd1c, &op_cdiv,	  4,   3, 255, 0xff, 0x01, 0x00, 0x01}, // cdiv.wr e d  
	{0xdd1d, &op_cdiv,	  5,   3, 255, 0xff, 0x01, 0x00, 0x01}, // cdiv.wr f d  
	{0xdd1e, &op_cdiv,	  6,   3, 255, 0xff, 0x01, 0x00, 0x01}, // cdiv.wr g d  
	{0xdd1f, &op_cdiv,	  7,   3, 255, 0xff, 0x01, 0x00, 0x01}, // cdiv.wr h d  
	{0xdd20, &op_cdiv,	  0,   4, 255, 0xff, 0x01, 0x00, 0x01}, // cdiv.wr a e  
	{0xdd21, &op_cdiv,	  1,   4, 255, 0xff, 0x01, 0x00, 0x01}, // cdiv.wr b e  
	{0xdd22, &op_cdiv,	  2,   4, 255, 0xff, 0x01, 0x00, 0x01}, // cdiv.wr c e  
	{0xdd23, &op_cdiv,	  3,   4, 255, 0xff, 0x01, 0x00, 0x01}, // cdiv.wr d e  
	{0xdd24, &op_cdiv,	  4,   4, 255, 0xff, 0x01, 0x00, 0x01}, // cdiv.wr e e  
	{0xdd25, &op_cdiv,	  5,   4, 255, 0xff, 0x01, 0x00, 0x01}, // cdiv.wr f e  
	{0xdd26, &op_cdiv,	  6,   4, 255, 0xff, 0x01, 0x00, 0x01}, // cdiv.wr g e  
	{0xdd27, &op_cdiv,	  7,   4, 255, 0xff, 0x01, 0x00, 0x01}, // cdiv.wr h e  
	{0xdd28, &op_cdiv,	  0,   5, 255, 0xff, 0x01, 0x00, 0x01}, // cdiv.wr a f  
	{0xdd29, &op_cdiv,	  1,   5, 255, 0xff, 0x01, 0x00, 0x01}, // cdiv.wr b f  
	{0xdd2a, &op_cdiv,	  2,   5, 255, 0xff, 0x01, 0x00, 0x01}, // cdiv.wr c f  
	{0xdd2b, &op_cdiv,	  3,   5, 255, 0xff, 0x01, 0x00, 0x01}, // cdiv.wr d f  
	{0xdd2c, &op_cdiv,	  4,   5, 255, 0xff, 0x01, 0x00, 0x01}, // cdiv.wr e f  
	{0xdd2d, &op_cdiv,	  5,   5, 255, 0xff, 0x01, 0x00, 0x01}, // cdiv.wr f f  
	{0xdd2e, &op_cdiv,	  6,   5, 255, 0xff, 0x01, 0x00, 0x01}, // cdiv.wr g f  
	{0xdd2f, &op_cdiv,	  7,   5, 255, 0xff, 0x01, 0x00, 0x01}, // cdiv.wr h f  
	{0xdd30, &op_cdiv,	  0,   6, 255, 0xff, 0x01, 0x00, 0x01}, // cdiv.wr a g  
	{0xdd31, &op_cdiv,	  1,   6, 255, 0xff, 0x01, 0x00, 0x01}, // cdiv.wr b g  
	{0xdd32, &op_cdiv,	  2,   6, 255, 0xff, 0x01, 0x00, 0x01}, // cdiv.wr c g  
	{0xdd33, &op_cdiv,	  3,   6, 255, 0xff, 0x01, 0x00, 0x01}, // cdiv.wr d g  
	{0xdd34, &op_cdiv,	  4,   6, 255, 0xff, 0x01, 0x00, 0x01}, // cdiv.wr e g  
	{0xdd35, &op_cdiv,	  5,   6, 255, 0xff, 0x01, 0x00, 0x01}, // cdiv.wr f g  
	{0xdd36, &op_cdiv,	  6,   6, 255, 0xff, 0x01, 0x00, 0x01}, // cdiv.wr g g  
	{0xdd37, &op_cdiv,	  7,   6, 255, 0xff, 0x01, 0x00, 0x01}, // cdiv.wr h g  
	{0xdd38, &op_cdiv,	  0,   7, 255, 0xff, 0x01, 0x00, 0x01}, // cdiv.wr a h  
	{0xdd39, &op_cdiv,	  1,   7, 255, 0xff, 0x01, 0x00, 0x01}, // cdiv.wr b h  
	{0xdd3a, &op_cdiv,	  2,   7, 255, 0xff, 0x01, 0x00, 0x01}, // cdiv.wr c h  
	{0xdd3b, &op_cdiv,	  3,   7, 255, 0xff, 0x01, 0x00, 0x01}, // cdiv.wr d h  
	{0xdd3c, &op_cdiv,	  4,   7, 255, 0xff, 0x01, 0x00, 0x01}, // cdiv.wr e h  
	{0xdd3d, &op_cdiv,	  5,   7, 255, 0xff, 0x01, 0x00, 0x01}, // cdiv.wr f h  
	{0xdd3e, &op_cdiv,	  6,   7, 255, 0xff, 0x01, 0x00, 0x01}, // cdiv.wr g h  
	{0xdd3f, &op_cdiv,	  7,   7, 255, 0xff, 0x01, 0x00, 0x01}, // cdiv.wr h h  
	{0xdd40, &op_cdiv,	  0,   0, 255, 0xff, 0x01, 0x00, 0x02}, // cdiv.dr a a  
	{0xdd41, &op_cdiv,	  1,   0, 255, 0xff, 0x01, 0x00, 0x02}, // cdiv.dr b a  
	{0xdd42, &op_cdiv,	  2,   0, 255, 0xff, 0x01, 0x00, 0x02}, // cdiv.dr c a  
	{0xdd43, &op_cdiv,	  3,   0, 255, 0xff, 0x01, 0x00, 0x02}, // cdiv.dr d a  
	{0xdd44, &op_cdiv,	  4,   0, 255, 0xff, 0x01, 0x00, 0x02}, // cdiv.dr e a  
	{0xdd45, &op_cdiv,	  5,   0, 255, 0xff, 0x01, 0x00, 0x02}, // cdiv.dr f a  
	{0xdd46, &op_cdiv,	  6,   0, 255, 0xff, 0x01, 0x00, 0x02}, // cdiv.dr g a  
	{0xdd47, &op_cdiv,	  7,   0, 255, 0xff, 0x01, 0x00, 0x02}, // cdiv.dr h a  
	{0xdd48, &op_cdiv,	  0,   1, 255, 0xff, 0x01, 0x00, 0x02}, // cdiv.dr a b  
	{0xdd49, &op_cdiv,	  1,   1, 255, 0xff, 0x01, 0x00, 0x02}, // cdiv.dr b b  
	{0xdd4a, &op_cdiv,	  2,   1, 255, 0xff, 0x01, 0x00, 0x02}, // cdiv.dr c b  
	{0xdd4b, &op_cdiv,	  3,   1, 255, 0xff, 0x01, 0x00, 0x02}, // cdiv.dr d b  
	{0xdd4c, &op_cdiv,	  4,   1, 255, 0xff, 0x01, 0x00, 0x02}, // cdiv.dr e b  
	{0xdd4d, &op_cdiv,	  5,   1, 255, 0xff, 0x01, 0x00, 0x02}, // cdiv.dr f b  
	{0xdd4e, &op_cdiv,	  6,   1, 255, 0xff, 0x01, 0x00, 0x02}, // cdiv.dr g b  
	{0xdd4f, &op_cdiv,	  7,   1, 255, 0xff, 0x01, 0x00, 0x02}, // cdiv.dr h b  
	{0xdd50, &op_cdiv,	  0,   2, 255, 0xff, 0x01, 0x00, 0x02}, // cdiv.dr a c  
	{0xdd51, &op_cdiv,	  1,   2, 255, 0xff, 0x01, 0x00, 0x02}, // cdiv.dr b c  
	{0xdd52, &op_cdiv,	  2,   2, 255, 0xff, 0x01, 0x00, 0x02}, // cdiv.dr c c  
	{0xdd53, &op_cdiv,	  3,   2, 255, 0xff, 0x01, 0x00, 0x02}, // cdiv.dr d c  
	{0xdd54, &op_cdiv,	  4,   2, 255, 0xff, 0x01, 0x00, 0x02}, // cdiv.dr e c  
	{0xdd55, &op_cdiv,	  5,   2, 255, 0xff, 0x01, 0x00, 0x02}, // cdiv.dr f c  
	{0xdd56, &op_cdiv,	  6,   2, 255, 0xff, 0x01, 0x00, 0x02}, // cdiv.dr g c  
	{0xdd57, &op_cdiv,	  7,   2, 255, 0xff, 0x01, 0x00, 0x02}, // cdiv.dr h c  
	{0xdd58, &op_cdiv,	  0,   3, 255, 0xff, 0x01, 0x00, 0x02}, // cdiv.dr a d  
	{0xdd59, &op_cdiv,	  1,   3, 255, 0xff, 0x01, 0x00, 0x02}, // cdiv.dr b d  
	{0xdd5a, &op_cdiv,	  2,   3, 255, 0xff, 0x01, 0x00, 0x02}, // cdiv.dr c d  
	{0xdd5b, &op_cdiv,	  3,   3, 255, 0xff, 0x01, 0x00, 0x02}, // cdiv.dr d d  
	{0xdd5c, &op_cdiv,	  4,   3, 255, 0xff, 0x01, 0x00, 0x02}, // cdiv.dr e d  
	{0xdd5d, &op_cdiv,	  5,   3, 255, 0xff, 0x01, 0x00, 0x02}, // cdiv.dr f d  
	{0xdd5e, &op_cdiv,	  6,   3, 255, 0xff, 0x01, 0x00, 0x02}, // cdiv.dr g d  
	{0xdd5f, &op_cdiv,	  7,   3, 255, 0xff, 0x01, 0x00, 0x02}, // cdiv.dr h d  
	{0xdd60, &op_cdiv,	  0,   4, 255, 0xff, 0x01, 0x00, 0x02}, // cdiv.dr a e  
	{0xdd61, &op_cdiv,	  1,   4, 255, 0xff, 0x01, 0x00, 0x02}, // cdiv.dr b e  
	{0xdd62, &op_cdiv,	  2,   4, 255, 0xff, 0x01, 0x00, 0x02}, // cdiv.dr c e  
	{0xdd63, &op_cdiv,	  3,   4, 255, 0xff, 0x01, 0x00, 0x02}, // cdiv.dr d e  
	{0xdd64, &op_cdiv,	  4,   4, 255, 0xff, 0x01, 0x00, 0x02}, // cdiv.dr e e  
	{0xdd65, &op_cdiv,	  5,   4, 255, 0xff, 0x01, 0x00, 0x02}, // cdiv.dr f e  
	{0xdd66, &op_cdiv,	  6,   4, 255, 0xff, 0x01, 0x00, 0x02}, // cdiv.dr g e  
	{0xdd67, &op_cdiv,	  7,   4, 255, 0xff, 0x01, 0x00, 0x02}, // cdiv.dr h e  
	{0xdd68, &op_cdiv,	  0,   5, 255, 0xff, 0x01, 0x00, 0x02}, // cdiv.dr a f  
	{0xdd69, &op_cdiv,	  1,   5, 255, 0xff, 0x01, 0x00, 0x02}, // cdiv.dr b f  
	{0xdd6a, &op_cdiv,	  2,   5, 255, 0xff, 0x01, 0x00, 0x02}, // cdiv.dr c f  
	{0xdd6b, &op_cdiv,	  3,   5, 255, 0xff, 0x01, 0x00, 0x02}, // cdiv.dr d f  
	{0xdd6c, &op_cdiv,	  4,   5, 255, 0xff, 0x01, 0x00, 0x02}, // cdiv.dr e f  
	{0xdd6d, &op_cdiv,	  5,   5, 255, 0xff, 0x01, 0x00, 0x02}, // cdiv.dr f f  
	{0xdd6e, &op_cdiv,	  6,   5, 255, 0xff, 0x01, 0x00, 0x02}, // cdiv.dr g f  
	{0xdd6f, &op_cdiv,	  7,   5, 255, 0xff, 0x01, 0x00, 0x02}, // cdiv.dr h f  
	{0xdd70, &op_cdiv,	  0,   6, 255, 0xff, 0x01, 0x00, 0x02}, // cdiv.dr a g  
	{0xdd71, &op_cdiv,	  1,   6, 255, 0xff, 0x01, 0x00, 0x02}, // cdiv.dr b g  
	{0xdd72, &op_cdiv,	  2,   6, 255, 0xff, 0x01, 0x00, 0x02}, // cdiv.dr c g  
	{0xdd73, &op_cdiv,	  3,   6, 255, 0xff, 0x01, 0x00, 0x02}, // cdiv.dr d g  
	{0xdd74, &op_cdiv,	  4,   6, 255, 0xff, 0x01, 0x00, 0x02}, // cdiv.dr e g  
	{0xdd75, &op_cdiv,	  5,   6, 255, 0xff, 0x01, 0x00, 0x02}, // cdiv.dr f g  
	{0xdd76, &op_cdiv,	  6,   6, 255, 0xff, 0x01, 0x00, 0x02}, // cdiv.dr g g  
	{0xdd77, &op_cdiv,	  7,   6, 255, 0xff, 0x01, 0x00, 0x02}, // cdiv.dr h g  
	{0xdd78, &op_cdiv,	  0,   7, 255, 0xff, 0x01, 0x00, 0x02}, // cdiv.dr a h  
	{0xdd79, &op_cdiv,	  1,   7, 255, 0xff, 0x01, 0x00, 0x02}, // cdiv.dr b h  
	{0xdd7a, &op_cdiv,	  2,   7, 255, 0xff, 0x01, 0x00, 0x02}, // cdiv.dr c h  
	{0xdd7b, &op_cdiv,	  3,   7, 255, 0xff, 0x01, 0x00, 0x02}, // cdiv.dr d h  
	{0xdd7c, &op_cdiv,	  4,   7, 255, 0xff, 0x01, 0x00, 0x02}, // cdiv.dr e h  
	{0xdd7d, &op_cdiv,	  5,   7, 255, 0xff, 0x01, 0x00, 0x02}, // cdiv.dr f h  
	{0xdd7e, &op_cdiv,	  6,   7, 255, 0xff, 0x01, 0x00, 0x02}, // cdiv.dr g h  
	{0xdd7f, &op_cdiv,	  7,   7, 255, 0xff, 0x01, 0x00, 0x02}, // cdiv.dr h h  
	{0xdd80, &op_cdiv,	  0,   0, 255, 0xff, 0x01, 0x00, 0x04}, // cdiv.r a a  
	{0xdd81, &op_cdiv,	  1,   0, 255, 0xff, 0x01, 0x00, 0x04}, // cdiv.r b a  
	{0xdd82, &op_cdiv,	  2,   0, 255, 0xff, 0x01, 0x00, 0x04}, // cdiv.r c a  
	{0xdd83, &op_cdiv,	  3,   0, 255, 0xff, 0x01, 0x00, 0x04}, // cdiv.r d a  
	{0xdd84, &op_cdiv,	  4,   0, 255, 0xff, 0x01, 0x00, 0x04}, // cdiv.r e a  
	{0xdd85, &op_cdiv,	  5,   0, 255, 0xff, 0x01, 0x00, 0x04}, // cdiv.r f a  
	{0xdd86, &op_cdiv,	  6,   0, 255, 0xff, 0x01, 0x00, 0x04}, // cdiv.r g a  
	{0xdd87, &op_cdiv,	  7,   0, 255, 0xff, 0x01, 0x00, 0x04}, // cdiv.r h a  
	{0xdd88, &op_cdiv,	  0,   1, 255, 0xff, 0x01, 0x00, 0x04}, // cdiv.r a b  
	{0xdd89, &op_cdiv,	  1,   1, 255, 0xff, 0x01, 0x00, 0x04}, // cdiv.r b b  
	{0xdd8a, &op_cdiv,	  2,   1, 255, 0xff, 0x01, 0x00, 0x04}, // cdiv.r c b  
	{0xdd8b, &op_cdiv,	  3,   1, 255, 0xff, 0x01, 0x00, 0x04}, // cdiv.r d b  
	{0xdd8c, &op_cdiv,	  4,   1, 255, 0xff, 0x01, 0x00, 0x04}, // cdiv.r e b  
	{0xdd8d, &op_cdiv,	  5,   1, 255, 0xff, 0x01, 0x00, 0x04}, // cdiv.r f b  
	{0xdd8e, &op_cdiv,	  6,   1, 255, 0xff, 0x01, 0x00, 0x04}, // cdiv.r g b  
	{0xdd8f, &op_cdiv,	  7,   1, 255, 0xff, 0x01, 0x00, 0x04}, // cdiv.r h b  
	{0xdd90, &op_cdiv,	  0,   2, 255, 0xff, 0x01, 0x00, 0x04}, // cdiv.r a c  
	{0xdd91, &op_cdiv,	  1,   2, 255, 0xff, 0x01, 0x00, 0x04}, // cdiv.r b c  
	{0xdd92, &op_cdiv,	  2,   2, 255, 0xff, 0x01, 0x00, 0x04}, // cdiv.r c c  
	{0xdd93, &op_cdiv,	  3,   2, 255, 0xff, 0x01, 0x00, 0x04}, // cdiv.r d c  
	{0xdd94, &op_cdiv,	  4,   2, 255, 0xff, 0x01, 0x00, 0x04}, // cdiv.r e c  
	{0xdd95, &op_cdiv,	  5,   2, 255, 0xff, 0x01, 0x00, 0x04}, // cdiv.r f c  
	{0xdd96, &op_cdiv,	  6,   2, 255, 0xff, 0x01, 0x00, 0x04}, // cdiv.r g c  
	{0xdd97, &op_cdiv,	  7,   2, 255, 0xff, 0x01, 0x00, 0x04}, // cdiv.r h c  
	{0xdd98, &op_cdiv,	  0,   3, 255, 0xff, 0x01, 0x00, 0x04}, // cdiv.r a d  
	{0xdd99, &op_cdiv,	  1,   3, 255, 0xff, 0x01, 0x00, 0x04}, // cdiv.r b d  
	{0xdd9a, &op_cdiv,	  2,   3, 255, 0xff, 0x01, 0x00, 0x04}, // cdiv.r c d  
	{0xdd9b, &op_cdiv,	  3,   3, 255, 0xff, 0x01, 0x00, 0x04}, // cdiv.r d d  
	{0xdd9c, &op_cdiv,	  4,   3, 255, 0xff, 0x01, 0x00, 0x04}, // cdiv.r e d  
	{0xdd9d, &op_cdiv,	  5,   3, 255, 0xff, 0x01, 0x00, 0x04}, // cdiv.r f d  
	{0xdd9e, &op_cdiv,	  6,   3, 255, 0xff, 0x01, 0x00, 0x04}, // cdiv.r g d  
	{0xdd9f, &op_cdiv,	  7,   3, 255, 0xff, 0x01, 0x00, 0x04}, // cdiv.r h d  
	{0xdda0, &op_cdiv,	  0,   4, 255, 0xff, 0x01, 0x00, 0x04}, // cdiv.r a e  
	{0xdda1, &op_cdiv,	  1,   4, 255, 0xff, 0x01, 0x00, 0x04}, // cdiv.r b e  
	{0xdda2, &op_cdiv,	  2,   4, 255, 0xff, 0x01, 0x00, 0x04}, // cdiv.r c e  
	{0xdda3, &op_cdiv,	  3,   4, 255, 0xff, 0x01, 0x00, 0x04}, // cdiv.r d e  
	{0xdda4, &op_cdiv,	  4,   4, 255, 0xff, 0x01, 0x00, 0x04}, // cdiv.r e e  
	{0xdda5, &op_cdiv,	  5,   4, 255, 0xff, 0x01, 0x00, 0x04}, // cdiv.r f e  
	{0xdda6, &op_cdiv,	  6,   4, 255, 0xff, 0x01, 0x00, 0x04}, // cdiv.r g e  
	{0xdda7, &op_cdiv,	  7,   4, 255, 0xff, 0x01, 0x00, 0x04}, // cdiv.r h e  
	{0xdda8, &op_cdiv,	  0,   5, 255, 0xff, 0x01, 0x00, 0x04}, // cdiv.r a f  
	{0xdda9, &op_cdiv,	  1,   5, 255, 0xff, 0x01, 0x00, 0x04}, // cdiv.r b f  
	{0xddaa, &op_cdiv,	  2,   5, 255, 0xff, 0x01, 0x00, 0x04}, // cdiv.r c f  
	{0xddab, &op_cdiv,	  3,   5, 255, 0xff, 0x01, 0x00, 0x04}, // cdiv.r d f  
	{0xddac, &op_cdiv,	  4,   5, 255, 0xff, 0x01, 0x00, 0x04}, // cdiv.r e f  
	{0xddad, &op_cdiv,	  5,   5, 255, 0xff, 0x01, 0x00, 0x04}, // cdiv.r f f  
	{0xddae, &op_cdiv,	  6,   5, 255, 0xff, 0x01, 0x00, 0x04}, // cdiv.r g f  
	{0xddaf, &op_cdiv,	  7,   5, 255, 0xff, 0x01, 0x00, 0x04}, // cdiv.r h f  
	{0xddb0, &op_cdiv,	  0,   6, 255, 0xff, 0x01, 0x00, 0x04}, // cdiv.r a g  
	{0xddb1, &op_cdiv,	  1,   6, 255, 0xff, 0x01, 0x00, 0x04}, // cdiv.r b g  
	{0xddb2, &op_cdiv,	  2,   6, 255, 0xff, 0x01, 0x00, 0x04}, // cdiv.r c g  
	{0xddb3, &op_cdiv,	  3,   6, 255, 0xff, 0x01, 0x00, 0x04}, // cdiv.r d g  
	{0xddb4, &op_cdiv,	  4,   6, 255, 0xff, 0x01, 0x00, 0x04}, // cdiv.r e g  
	{0xddb5, &op_cdiv,	  5,   6, 255, 0xff, 0x01, 0x00, 0x04}, // cdiv.r f g  
	{0xddb6, &op_cdiv,	  6,   6, 255, 0xff, 0x01, 0x00, 0x04}, // cdiv.r g g  
	{0xddb7, &op_cdiv,	  7,   6, 255, 0xff, 0x01, 0x00, 0x04}, // cdiv.r h g  
	{0xddb8, &op_cdiv,	  0,   7, 255, 0xff, 0x01, 0x00, 0x04}, // cdiv.r a h  
	{0xddb9, &op_cdiv,	  1,   7, 255, 0xff, 0x01, 0x00, 0x04}, // cdiv.r b h  
	{0xddba, &op_cdiv,	  2,   7, 255, 0xff, 0x01, 0x00, 0x04}, // cdiv.r c h  
	{0xddbb, &op_cdiv,	  3,   7, 255, 0xff, 0x01, 0x00, 0x04}, // cdiv.r d h  
	{0xddbc, &op_cdiv,	  4,   7, 255, 0xff, 0x01, 0x00, 0x04}, // cdiv.r e h  
	{0xddbd, &op_cdiv,	  5,   7, 255, 0xff, 0x01, 0x00, 0x04}, // cdiv.r f h  
	{0xddbe, &op_cdiv,	  6,   7, 255, 0xff, 0x01, 0x00, 0x04}, // cdiv.r g h  
	{0xddbf, &op_cdiv,	  7,   7, 255, 0xff, 0x01, 0x00, 0x04}, // cdiv.r h h  
	{0xdcc8, &op_cdiv,	  0,   8, 255, 0xff, 0x00, 0x01, 0x01}, // cdiv.wi a <literal>  
	{0xdcc9, &op_cdiv,	  1,   8, 255, 0xff, 0x00, 0x01, 0x01}, // cdiv.wi b <literal>  
	{0xdcca, &op_cdiv,	  2,   8, 255, 0xff, 0x00, 0x01, 0x01}, // cdiv.wi c <literal>  
	{0xdccb, &op_cdiv,	  3,   8, 255, 0xff, 0x00, 0x01, 0x01}, // cdiv.wi d <literal>  
	{0xdccc, &op_cdiv,	  4,   8, 255, 0xff, 0x00, 0x01, 0x01}, // cdiv.wi e <literal>  
	{0xdccd, &op_cdiv,	  5,   8, 255, 0xff, 0x00, 0x01, 0x01}, // cdiv.wi f <literal>  
	{0xdcce, &op_cdiv,	  6,   8, 255, 0xff, 0x00, 0x01, 0x01}, // cdiv.wi g <literal>  
	{0xdccf, &op_cdiv,	  7,   8, 255, 0xff, 0x00, 0x01, 0x01}, // cdiv.wi h <literal>  
	{0xdcd0, &op_cdiv,	  0,   8, 255, 0xff, 0x00, 0x02, 0x02}, // cdiv.di a <literal>  
	{0xdcd1, &op_cdiv,	  1,   8, 255, 0xff, 0x00, 0x02, 0x02}, // cdiv.di b <literal>  
	{0xdcd2, &op_cdiv,	  2,   8, 255, 0xff, 0x00, 0x02, 0x02}, // cdiv.di c <literal>  
	{0xdcd3, &op_cdiv,	  3,   8, 255, 0xff, 0x00, 0x02, 0x02}, // cdiv.di d <literal>  
	{0xdcd4, &op_cdiv,	  4,   8, 255, 0xff, 0x00, 0x02, 0x02}, // cdiv.di e <literal>  
	{0xdcd5, &op_cdiv,	  5,   8, 255, 0xff, 0x00, 0x02, 0x02}, // cdiv.di f <literal>  
	{0xdcd6, &op_cdiv,	  6,   8, 255, 0xff, 0x00, 0x02, 0x02}, // cdiv.di g <literal>  
	{0xdcd7, &op_cdiv,	  7,   8, 255, 0xff, 0x00, 0x02, 0x02}, // cdiv.di h <literal>  
	{0xdce0, &op_cdiv,	  0,   8, 255, 0xff, 0x00, 0x04, 0x04}, // cdiv.i a <literal>  
	{0xdce1, &op_cdiv,	  1,   8, 255, 0xff, 0x00, 0x04, 0x04}, // cdiv.i b <literal>  
	{0xdce2, &op_cdiv,	  2,   8, 255, 0xff, 0x00, 0x04, 0x04}, // cdiv.i c <literal>  
	{0xdce3, &op_cdiv,	  3,   8, 255, 0xff, 0x00, 0x04, 0x04}, // cdiv.i d <literal>  
	{0xdce4, &op_cdiv,	  4,   8, 255, 0xff, 0x00, 0x04, 0x04}, // cdiv.i e <literal>  
	{0xdce5, &op_cdiv,	  5,   8, 255, 0xff, 0x00, 0x04, 0x04}, // cdiv.i f <literal>  
	{0xdce6, &op_cdiv,	  6,   8, 255, 0xff, 0x00, 0x04, 0x04}, // cdiv.i g <literal>  
	{0xdce7, &op_cdiv,	  7,   8, 255, 0xff, 0x00, 0x04, 0x04}, // cdiv.i h <literal>  
	{0xddc8, &op_cdiv,	  0,   8, 255, 0xff, 0x01, 0x04, 0x01}, // cdiv.wri a <literal>  
	{0xddc9, &op_cdiv,	  1,   8, 255, 0xff, 0x01, 0x04, 0x01}, // cdiv.wri b <literal>  
	{0xddca, &op_cdiv,	  2,   8, 255, 0xff, 0x01, 0x04, 0x01}, // cdiv.wri c <literal>  
	{0xddcb, &op_cdiv,	  3,   8, 255, 0xff, 0x01, 0x04, 0x01}, // cdiv.wri d <literal>  
	{0xddcc, &op_cdiv,	  4,   8, 255, 0xff, 0x01, 0x04, 0x01}, // cdiv.wri e <literal>  
	{0xddcd, &op_cdiv,	  5,   8, 255, 0xff, 0x01, 0x04, 0x01}, // cdiv.wri f <literal>  
	{0xddce, &op_cdiv,	  6,   8, 255, 0xff, 0x01, 0x04, 0x01}, // cdiv.wri g <literal>  
	{0xddcf, &op_cdiv,	  7,   8, 255, 0xff, 0x01, 0x04, 0x01}, // cdiv.wri h <literal>  
	{0xddd0, &op_cdiv,	  0,   8, 255, 0xff, 0x01, 0x04, 0x02}, // cdiv.dri a <literal>  
	{0xddd1, &op_cdiv,	  1,   8, 255, 0xff, 0x01, 0x04, 0x02}, // cdiv.dri b <literal>  
	{0xddd2, &op_cdiv,	  2,   8, 255, 0xff, 0x01, 0x04, 0x02}, // cdiv.dri c <literal>  
	{0xddd3, &op_cdiv,	  3,   8, 255, 0xff, 0x01, 0x04, 0x02}, // cdiv.dri d <literal>  
	{0xddd4, &op_cdiv,	  4,   8, 255, 0xff, 0x01, 0x04, 0x02}, // cdiv.dri e <literal>  
	{0xddd5, &op_cdiv,	  5,   8, 255, 0xff, 0x01, 0x04, 0x02}, // cdiv.dri f <literal>  
	{0xddd6, &op_cdiv,	  6,   8, 255, 0xff, 0x01, 0x04, 0x02}, // cdiv.dri g <literal>  
	{0xddd7, &op_cdiv,	  7,   8, 255, 0xff, 0x01, 0x04, 0x02}, // cdiv.dri h <literal>  
	{0xdde0, &op_cdiv,	  0,   8, 255, 0xff, 0x01, 0x04, 0x04}, // cdiv.ri a <literal>  
	{0xdde1, &op_cdiv,	  1,   8, 255, 0xff, 0x01, 0x04, 0x04}, // cdiv.ri b <literal>  
	{0xdde2, &op_cdiv,	  2,   8, 255, 0xff, 0x01, 0x04, 0x04}, // cdiv.ri c <literal>  
	{0xdde3, &op_cdiv,	  3,   8, 255, 0xff, 0x01, 0x04, 0x04}, // cdiv.ri d <literal>  
	{0xdde4, &op_cdiv,	  4,   8, 255, 0xff, 0x01, 0x04, 0x04}, // cdiv.ri e <literal>  
	{0xdde5, &op_cdiv,	  5,   8, 255, 0xff, 0x01, 0x04, 0x04}, // cdiv.ri f <literal>  
	{0xdde6, &op_cdiv,	  6,   8, 255, 0xff, 0x01, 0x04, 0x04}, // cdiv.ri g <literal>  
	{0xdde7, &op_cdiv,	  7,   8, 255, 0xff, 0x01, 0x04, 0x04}, // cdiv.ri h <literal>  
	{0xde00, &op_ccmp,	  0,   0, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.w a a  
	{0xde01, &op_ccmp,	  1,   0, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.w b a  
	{0xde02, &op_ccmp,	  2,   0, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.w c a  
	{0xde03, &op_ccmp,	  3,   0, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.w d a  
	{0xde04, &op_ccmp,	  4,   0, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.w e a  
	{0xde05, &op_ccmp,	  5,   0, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.w f a  
	{0xde06, &op_ccmp,	  6,   0, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.w g a  
	{0xde07, &op_ccmp,	  7,   0, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.w h a  
	{0xde08, &op_ccmp,	  0,   1, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.w a b  
	{0xde09, &op_ccmp,	  1,   1, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.w b b  
	{0xde0a, &op_ccmp,	  2,   1, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.w c b  
	{0xde0b, &op_ccmp,	  3,   1, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.w d b  
	{0xde0c, &op_ccmp,	  4,   1, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.w e b  
	{0xde0d, &op_ccmp,	  5,   1, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.w f b  
	{0xde0e, &op_ccmp,	  6,   1, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.w g b  
	{0xde0f, &op_ccmp,	  7,   1, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.w h b  
	{0xde10, &op_ccmp,	  0,   2, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.w a c  
	{0xde11, &op_ccmp,	  1,   2, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.w b c  
	{0xde12, &op_ccmp,	  2,   2, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.w c c  
	{0xde13, &op_ccmp,	  3,   2, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.w d c  
	{0xde14, &op_ccmp,	  4,   2, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.w e c  
	{0xde15, &op_ccmp,	  5,   2, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.w f c  
	{0xde16, &op_ccmp,	  6,   2, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.w g c  
	{0xde17, &op_ccmp,	  7,   2, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.w h c  
	{0xde18, &op_ccmp,	  0,   3, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.w a d  
	{0xde19, &op_ccmp,	  1,   3, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.w b d  
	{0xde1a, &op_ccmp,	  2,   3, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.w c d  
	{0xde1b, &op_ccmp,	  3,   3, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.w d d  
	{0xde1c, &op_ccmp,	  4,   3, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.w e d  
	{0xde1d, &op_ccmp,	  5,   3, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.w f d  
	{0xde1e, &op_ccmp,	  6,   3, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.w g d  
	{0xde1f, &op_ccmp,	  7,   3, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.w h d  
	{0xde20, &op_ccmp,	  0,   4, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.w a e  
	{0xde21, &op_ccmp,	  1,   4, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.w b e  
	{0xde22, &op_ccmp,	  2,   4, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.w c e  
	{0xde23, &op_ccmp,	  3,   4, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.w d e  
	{0xde24, &op_ccmp,	  4,   4, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.w e e  
	{0xde25, &op_ccmp,	  5,   4, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.w f e  
	{0xde26, &op_ccmp,	  6,   4, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.w g e  
	{0xde27, &op_ccmp,	  7,   4, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.w h e  
	{0xde28, &op_ccmp,	  0,   5, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.w a f  
	{0xde29, &op_ccmp,	  1,   5, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.w b f  
	{0xde2a, &op_ccmp,	  2,   5, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.w c f  
	{0xde2b, &op_ccmp,	  3,   5, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.w d f  
	{0xde2c, &op_ccmp,	  4,   5, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.w e f  
	{0xde2d, &op_ccmp,	  5,   5, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.w f f  
	{0xde2e, &op_ccmp,	  6,   5, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.w g f  
	{0xde2f, &op_ccmp,	  7,   5, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.w h f  
	{0xde30, &op_ccmp,	  0,   6, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.w a g  
	{0xde31, &op_ccmp,	  1,   6, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.w b g  
	{0xde32, &op_ccmp,	  2,   6, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.w c g  
	{0xde33, &op_ccmp,	  3,   6, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.w d g  
	{0xde34, &op_ccmp,	  4,   6, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.w e g  
	{0xde35, &op_ccmp,	  5,   6, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.w f g  
	{0xde36, &op_ccmp,	  6,   6, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.w g g  
	{0xde37, &op_ccmp,	  7,   6, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.w h g  
	{0xde38, &op_ccmp,	  0,   7, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.w a h  
	{0xde39, &op_ccmp,	  1,   7, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.w b h  
	{0xde3a, &op_ccmp,	  2,   7, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.w c h  
	{0xde3b, &op_ccmp,	  3,   7, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.w d h  
	{0xde3c, &op_ccmp,	  4,   7, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.w e h  
	{0xde3d, &op_ccmp,	  5,   7, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.w f h  
	{0xde3e, &op_ccmp,	  6,   7, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.w g h  
	{0xde3f, &op_ccmp,	  7,   7, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.w h h  
	{0xde40, &op_ccmp,	  0,   0, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.d a a  
	{0xde41, &op_ccmp,	  1,   0, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.d b a  
	{0xde42, &op_ccmp,	  2,   0, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.d c a  
	{0xde43, &op_ccmp,	  3,   0, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.d d a  
	{0xde44, &op_ccmp,	  4,   0, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.d e a  
	{0xde45, &op_ccmp,	  5,   0, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.d f a  
	{0xde46, &op_ccmp,	  6,   0, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.d g a  
	{0xde47, &op_ccmp,	  7,   0, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.d h a  
	{0xde48, &op_ccmp,	  0,   1, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.d a b  
	{0xde49, &op_ccmp,	  1,   1, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.d b b  
	{0xde4a, &op_ccmp,	  2,   1, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.d c b  
	{0xde4b, &op_ccmp,	  3,   1, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.d d b  
	{0xde4c, &op_ccmp,	  4,   1, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.d e b  
	{0xde4d, &op_ccmp,	  5,   1, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.d f b  
	{0xde4e, &op_ccmp,	  6,   1, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.d g b  
	{0xde4f, &op_ccmp,	  7,   1, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.d h b  
	{0xde50, &op_ccmp,	  0,   2, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.d a c  
	{0xde51, &op_ccmp,	  1,   2, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.d b c  
	{0xde52, &op_ccmp,	  2,   2, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.d c c  
	{0xde53, &op_ccmp,	  3,   2, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.d d c  
	{0xde54, &op_ccmp,	  4,   2, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.d e c  
	{0xde55, &op_ccmp,	  5,   2, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.d f c  
	{0xde56, &op_ccmp,	  6,   2, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.d g c  
	{0xde57, &op_ccmp,	  7,   2, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.d h c  
	{0xde58, &op_ccmp,	  0,   3, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.d a d  
	{0xde59, &op_ccmp,	  1,   3, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.d b d  
	{0xde5a, &op_ccmp,	  2,   3, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.d c d  
	{0xde5b, &op_ccmp,	  3,   3, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.d d d  
	{0xde5c, &op_ccmp,	  4,   3, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.d e d  
	{0xde5d, &op_ccmp,	  5,   3, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.d f d  
	{0xde5e, &op_ccmp,	  6,   3, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.d g d  
	{0xde5f, &op_ccmp,	  7,   3, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.d h d  
	{0xde60, &op_ccmp,	  0,   4, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.d a e  
	{0xde61, &op_ccmp,	  1,   4, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.d b e  
	{0xde62, &op_ccmp,	  2,   4, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.d c e  
	{0xde63, &op_ccmp,	  3,   4, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.d d e  
	{0xde64, &op_ccmp,	  4,   4, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.d e e  
	{0xde65, &op_ccmp,	  5,   4, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.d f e  
	{0xde66, &op_ccmp,	  6,   4, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.d g e  
	{0xde67, &op_ccmp,	  7,   4, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.d h e  
	{0xde68, &op_ccmp,	  0,   5, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.d a f  
	{0xde69, &op_ccmp,	  1,   5, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.d b f  
	{0xde6a, &op_ccmp,	  2,   5, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.d c f  
	{0xde6b, &op_ccmp,	  3,   5, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.d d f  
	{0xde6c, &op_ccmp,	  4,   5, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.d e f  
	{0xde6d, &op_ccmp,	  5,   5, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.d f f  
	{0xde6e, &op_ccmp,	  6,   5, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.d g f  
	{0xde6f, &op_ccmp,	  7,   5, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.d h f  
	{0xde70, &op_ccmp,	  0,   6, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.d a g  
	{0xde71, &op_ccmp,	  1,   6, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.d b g  
	{0xde72, &op_ccmp,	  2,   6, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.d c g  
	{0xde73, &op_ccmp,	  3,   6, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.d d g  
	{0xde74, &op_ccmp,	  4,   6, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.d e g  
	{0xde75, &op_ccmp,	  5,   6, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.d f g  
	{0xde76, &op_ccmp,	  6,   6, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.d g g  
	{0xde77, &op_ccmp,	  7,   6, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.d h g  
	{0xde78, &op_ccmp,	  0,   7, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.d a h  
	{0xde79, &op_ccmp,	  1,   7, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.d b h  
	{0xde7a, &op_ccmp,	  2,   7, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.d c h  
	{0xde7b, &op_ccmp,	  3,   7, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.d d h  
	{0xde7c, &op_ccmp,	  4,   7, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.d e h  
	{0xde7d, &op_ccmp,	  5,   7, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.d f h  
	{0xde7e, &op_ccmp,	  6,   7, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.d g h  
	{0xde7f, &op_ccmp,	  7,   7, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.d h h  
	{0xde80, &op_ccmp,	  0,   0, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp a a  
	{0xde81, &op_ccmp,	  1,   0, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp b a  
	{0xde82, &op_ccmp,	  2,   0, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp c a  
	{0xde83, &op_ccmp,	  3,   0, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp d a  
	{0xde84, &op_ccmp,	  4,   0, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp e a  
	{0xde85, &op_ccmp,	  5,   0, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp f a  
	{0xde86, &op_ccmp,	  6,   0, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp g a  
	{0xde87, &op_ccmp,	  7,   0, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp h a  
	{0xde88, &op_ccmp,	  0,   1, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp a b  
	{0xde89, &op_ccmp,	  1,   1, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp b b  
	{0xde8a, &op_ccmp,	  2,   1, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp c b  
	{0xde8b, &op_ccmp,	  3,   1, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp d b  
	{0xde8c, &op_ccmp,	  4,   1, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp e b  
	{0xde8d, &op_ccmp,	  5,   1, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp f b  
	{0xde8e, &op_ccmp,	  6,   1, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp g b  
	{0xde8f, &op_ccmp,	  7,   1, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp h b  
	{0xde90, &op_ccmp,	  0,   2, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp a c  
	{0xde91, &op_ccmp,	  1,   2, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp b c  
	{0xde92, &op_ccmp,	  2,   2, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp c c  
	{0xde93, &op_ccmp,	  3,   2, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp d c  
	{0xde94, &op_ccmp,	  4,   2, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp e c  
	{0xde95, &op_ccmp,	  5,   2, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp f c  
	{0xde96, &op_ccmp,	  6,   2, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp g c  
	{0xde97, &op_ccmp,	  7,   2, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp h c  
	{0xde98, &op_ccmp,	  0,   3, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp a d  
	{0xde99, &op_ccmp,	  1,   3, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp b d  
	{0xde9a, &op_ccmp,	  2,   3, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp c d  
	{0xde9b, &op_ccmp,	  3,   3, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp d d  
	{0xde9c, &op_ccmp,	  4,   3, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp e d  
	{0xde9d, &op_ccmp,	  5,   3, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp f d  
	{0xde9e, &op_ccmp,	  6,   3, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp g d  
	{0xde9f, &op_ccmp,	  7,   3, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp h d  
	{0xdea0, &op_ccmp,	  0,   4, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp a e  
	{0xdea1, &op_ccmp,	  1,   4, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp b e  
	{0xdea2, &op_ccmp,	  2,   4, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp c e  
	{0xdea3, &op_ccmp,	  3,   4, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp d e  
	{0xdea4, &op_ccmp,	  4,   4, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp e e  
	{0xdea5, &op_ccmp,	  5,   4, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp f e  
	{0xdea6, &op_ccmp,	  6,   4, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp g e  
	{0xdea7, &op_ccmp,	  7,   4, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp h e  
	{0xdea8, &op_ccmp,	  0,   5, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp a f  
	{0xdea9, &op_ccmp,	  1,   5, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp b f  
	{0xdeaa, &op_ccmp,	  2,   5, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp c f  
	{0xdeab, &op_ccmp,	  3,   5, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp d f  
	{0xdeac, &op_ccmp,	  4,   5, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp e f  
	{0xdead, &op_ccmp,	  5,   5, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp f f  
	{0xdeae, &op_ccmp,	  6,   5, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp g f  
	{0xdeaf, &op_ccmp,	  7,   5, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp h f  
	{0xdeb0, &op_ccmp,	  0,   6, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp a g  
	{0xdeb1, &op_ccmp,	  1,   6, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp b g  
	{0xdeb2, &op_ccmp,	  2,   6, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp c g  
	{0xdeb3, &op_ccmp,	  3,   6, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp d g  
	{0xdeb4, &op_ccmp,	  4,   6, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp e g  
	{0xdeb5, &op_ccmp,	  5,   6, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp f g  
	{0xdeb6, &op_ccmp,	  6,   6, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp g g  
	{0xdeb7, &op_ccmp,	  7,   6, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp h g  
	{0xdeb8, &op_ccmp,	  0,   7, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp a h  
	{0xdeb9, &op_ccmp,	  1,   7, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp b h  
	{0xdeba, &op_ccmp,	  2,   7, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp c h  
	{0xdebb, &op_ccmp,	  3,   7, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp d h  
	{0xdebc, &op_ccmp,	  4,   7, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp e h  
	{0xdebd, &op_ccmp,	  5,   7, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp f h  
	{0xdebe, &op_ccmp,	  6,   7, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp g h  
	{0xdebf, &op_ccmp,	  7,   7, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp h h  
	{0xdf00, &op_ccmp,	  0,   0, 255, 0xff, 0x01, 0x00, 0x01}, // ccmp.wr a a  
	{0xdf01, &op_ccmp,	  1,   0, 255, 0xff, 0x01, 0x00, 0x01}, // ccmp.wr b a  
	{0xdf02, &op_ccmp,	  2,   0, 255, 0xff, 0x01, 0x00, 0x01}, // ccmp.wr c a  
	{0xdf03, &op_ccmp,	  3,   0, 255, 0xff, 0x01, 0x00, 0x01}, // ccmp.wr d a  
	{0xdf04, &op_ccmp,	  4,   0, 255, 0xff, 0x01, 0x00, 0x01}, // ccmp.wr e a  
	{0xdf05, &op_ccmp,	  5,   0, 255, 0xff, 0x01, 0x00, 0x01}, // ccmp.wr f a  
	{0xdf06, &op_ccmp,	  6,   0, 255, 0xff, 0x01, 0x00, 0x01}, // ccmp.wr g a  
	{0xdf07, &op_ccmp,	  7,   0, 255, 0xff, 0x01, 0x00, 0x01}, // ccmp.wr h a  
	{0xdf08, &op_ccmp,	  0,   1, 255, 0xff, 0x01, 0x00, 0x01}, // ccmp.wr a b  
	{0xdf09, &op_ccmp,	  1,   1, 255, 0xff, 0x01, 0x00, 0x01}, // ccmp.wr b b  
	{0xdf0a, &op_ccmp,	  2,   1, 255, 0xff, 0x01, 0x00, 0x01}, // ccmp.wr c b  
	{0xdf0b, &op_ccmp,	  3,   1, 255, 0xff, 0x01, 0x00, 0x01}, // ccmp.wr d b  
	{0xdf0c, &op_ccmp,	  4,   1, 255, 0xff, 0x01, 0x00, 0x01}, // ccmp.wr e b  
	{0xdf0d, &op_ccmp,	  5,   1, 255, 0xff, 0x01, 0x00, 0x01}, // ccmp.wr f b  
	{0xdf0e, &op_ccmp,	  6,   1, 255, 0xff, 0x01, 0x00, 0x01}, // ccmp.wr g b  
	{0xdf0f, &op_ccmp,	  7,   1, 255, 0xff, 0x01, 0x00, 0x01}, // ccmp.wr h b  
	{0xdf10, &op_ccmp,	  0,   2, 255, 0xff, 0x01, 0x00, 0x01}, // ccmp.wr a c  
	{0xdf11, &op_ccmp,	  1,   2, 255, 0xff, 0x01, 0x00, 0x01}, // ccmp.wr b c  
	{0xdf12, &op_ccmp,	  2,   2, 255, 0xff, 0x01, 0x00, 0x01}, // ccmp.wr c c  
	{0xdf13, &op_ccmp,	  3,   2, 255, 0xff, 0x01, 0x00, 0x01}, // ccmp.wr d c  
	{0xdf14, &op_ccmp,	  4,   2, 255, 0xff, 0x01, 0x00, 0x01}, // ccmp.wr e c  
	{0xdf15, &op_ccmp,	  5,   2, 255, 0xff, 0x01, 0x00, 0x01}, // ccmp.wr f c  
	{0xdf16, &op_ccmp,	  6,   2, 255, 0xff, 0x01, 0x00, 0x01}, // ccmp.wr g c  
	{0xdf17, &op_ccmp,	  7,   2, 255, 0xff, 0x01, 0x00, 0x01}, // ccmp.wr h c  
	{0xdf18, &op_ccmp,	  0,   3, 255, 0xff, 0x01, 0x00, 0x01}, // ccmp.wr a d  
	{0xdf19, &op_ccmp,	  1,   3, 255, 0xff, 0x01, 0x00, 0x01}, // ccmp.wr b d  
	{0xdf1a, &op_ccmp,	  2,   3, 255, 0xff, 0x01, 0x00, 0x01}, // ccmp.wr c d  
	{0xdf1b, &op_ccmp,	  3,   3, 255, 0xff, 0x01, 0x00, 0x01}, // ccmp.wr d d  
	{0xdf1c, &op_ccmp,	  4,   3, 255, 0xff, 0x01, 0x00, 0x01}, // ccmp.wr e d  
	{0xdf1d, &op_ccmp,	  5,   3, 255, 0xff, 0x01, 0x00, 0x01}, // ccmp.wr f d  
	{0xdf1e, &op_ccmp,	  6,   3, 255, 0xff, 0x01, 0x00, 0x01}, // ccmp.wr g d  
	{0xdf1f, &op_ccmp,	  7,   3, 255, 0xff, 0x01, 0x00, 0x01}, // ccmp.wr h d  
	{0xdf20, &op_ccmp,	  0,   4, 255, 0xff, 0x01, 0x00, 0x01}, // ccmp.wr a e  
	{0xdf21, &op_ccmp,	  1,   4, 255, 0xff, 0x01, 0x00, 0x01}, // ccmp.wr b e  
	{0xdf22, &op_ccmp,	  2,   4, 255, 0xff, 0x01, 0x00, 0x01}, // ccmp.wr c e  
	{0xdf23, &op_ccmp,	  3,   4, 255, 0xff, 0x01, 0x00, 0x01}, // ccmp.wr d e  
	{0xdf24, &op_ccmp,	  4,   4, 255, 0xff, 0x01, 0x00, 0x01}, // ccmp.wr e e  
	{0xdf25, &op_ccmp,	  5,   4, 255, 0xff, 0x01, 0x00, 0x01}, // ccmp.wr f e  
	{0xdf26, &op_ccmp,	  6,   4, 255, 0xff, 0x01, 0x00, 0x01}, // ccmp.wr g e  
	{0xdf27, &op_ccmp,	  7,   4, 255, 0xff, 0x01, 0x00, 0x01}, // ccmp.wr h e  
	{0xdf28, &op_ccmp,	  0,   5, 255, 0xff, 0x01, 0x00, 0x01}, // ccmp.wr a f  
	{0xdf29, &op_ccmp,	  1,   5, 255, 0xff, 0x01, 0x00, 0x01}, // ccmp.wr b f  
	{0xdf2a, &op_ccmp,	  2,   5, 255, 0xff, 0x01, 0x00, 0x01}, // ccmp.wr c f  
	{0xdf2b, &op_ccmp,	  3,   5, 255, 0xff, 0x01, 0x00, 0x01}, // ccmp.wr d f  
	{0xdf2c, &op_ccmp,	  4,   5, 255, 0xff, 0x01, 0x00, 0x01}, // ccmp.wr e f  
	{0xdf2d, &op_ccmp,	  5,   5, 255, 0xff, 0x01, 0x00, 0x01}, // ccmp.wr f f  
	{0xdf2e, &op_ccmp,	  6,   5, 255, 0xff, 0x01, 0x00, 0x01}, // ccmp.wr g f  
	{0xdf2f, &op_ccmp,	  7,   5, 255, 0xff, 0x01, 0x00, 0x01}, // ccmp.wr h f  
	{0xdf30, &op_ccmp,	  0,   6, 255, 0xff, 0x01, 0x00, 0x01}, // ccmp.wr a g  
	{0xdf31, &op_ccmp,	  1,   6, 255, 0xff, 0x01, 0x00, 0x01}, // ccmp.wr b g  
	{0xdf32, &op_ccmp,	  2,   6, 255, 0xff, 0x01, 0x00, 0x01}, // ccmp.wr c g  
	{0xdf33, &op_ccmp,	  3,   6, 255, 0xff, 0x01, 0x00, 0x01}, // ccmp.wr d g  
	{0xdf34, &op_ccmp,	  4,   6, 255, 0xff, 0x01, 0x00, 0x01}, // ccmp.wr e g  
	{0xdf35, &op_ccmp,	  5,   6, 255, 0xff, 0x01, 0x00, 0x01}, // ccmp.wr f g  
	{0xdf36, &op_ccmp,	  6,   6, 255, 0xff, 0x01, 0x00, 0x01}, // ccmp.wr g g  
	{0xdf37, &op_ccmp,	  7,   6, 255, 0xff, 0x01, 0x00, 0x01}, // ccmp.wr h g  
	{0xdf38, &op_ccmp,	  0,   7, 255, 0xff, 0x01, 0x00, 0x01}, // ccmp.wr a h  
	{0xdf39, &op_ccmp,	  1,   7, 255, 0xff, 0x01, 0x00, 0x01}, // ccmp.wr b h  
	{0xdf3a, &op_ccmp,	  2,   7, 255, 0xff, 0x01, 0x00, 0x01}, // ccmp.wr c h  
	{0xdf3b, &op_ccmp,	  3,   7, 255, 0xff, 0x01, 0x00, 0x01}, // ccmp.wr d h  
	{0xdf3c, &op_ccmp,	  4,   7, 255, 0xff, 0x01, 0x00, 0x01}, // ccmp.wr e h  
	{0xdf3d, &op_ccmp,	  5,   7, 255, 0xff, 0x01, 0x00, 0x01}, // ccmp.wr f h  
	{0xdf3e, &op_ccmp,	  6,   7, 255, 0xff, 0x01, 0x00, 0x01}, // ccmp.wr g h  
	{0xdf3f, &op_ccmp,	  7,   7, 255, 0xff, 0x01, 0x00, 0x01}, // ccmp.wr h h  
	{0xdf40, &op_ccmp,	  0,   0, 255, 0xff, 0x01, 0x00, 0x02}, // ccmp.dr a a  
	{0xdf41, &op_ccmp,	  1,   0, 255, 0xff, 0x01, 0x00, 0x02}, // ccmp.dr b a  
	{0xdf42, &op_ccmp,	  2,   0, 255, 0xff, 0x01, 0x00, 0x02}, // ccmp.dr c a  
	{0xdf43, &op_ccmp,	  3,   0, 255, 0xff, 0x01, 0x00, 0x02}, // ccmp.dr d a  
	{0xdf44, &op_ccmp,	  4,   0, 255, 0xff, 0x01, 0x00, 0x02}, // ccmp.dr e a  
	{0xdf45, &op_ccmp,	  5,   0, 255, 0xff, 0x01, 0x00, 0x02}, // ccmp.dr f a  
	{0xdf46, &op_ccmp,	  6,   0, 255, 0xff, 0x01, 0x00, 0x02}, // ccmp.dr g a  
	{0xdf47, &op_ccmp,	  7,   0, 255, 0xff, 0x01, 0x00, 0x02}, // ccmp.dr h a  
	{0xdf48, &op_ccmp,	  0,   1, 255, 0xff, 0x01, 0x00, 0x02}, // ccmp.dr a b  
	{0xdf49, &op_ccmp,	  1,   1, 255, 0xff, 0x01, 0x00, 0x02}, // ccmp.dr b b  
	{0xdf4a, &op_ccmp,	  2,   1, 255, 0xff, 0x01, 0x00, 0x02}, // ccmp.dr c b  
	{0xdf4b, &op_ccmp,	  3,   1, 255, 0xff, 0x01, 0x00, 0x02}, // ccmp.dr d b  
	{0xdf4c, &op_ccmp,	  4,   1, 255, 0xff, 0x01, 0x00, 0x02}, // ccmp.dr e b  
	{0xdf4d, &op_ccmp,	  5,   1, 255, 0xff, 0x01, 0x00, 0x02}, // ccmp.dr f b  
	{0xdf4e, &op_ccmp,	  6,   1, 255, 0xff, 0x01, 0x00, 0x02}, // ccmp.dr g b  
	{0xdf4f, &op_ccmp,	  7,   1, 255, 0xff, 0x01, 0x00, 0x02}, // ccmp.dr h b  
	{0xdf50, &op_ccmp,	  0,   2, 255, 0xff, 0x01, 0x00, 0x02}, // ccmp.dr a c  
	{0xdf51, &op_ccmp,	  1,   2, 255, 0xff, 0x01, 0x00, 0x02}, // ccmp.dr b c  
	{0xdf52, &op_ccmp,	  2,   2, 255, 0xff, 0x01, 0x00, 0x02}, // ccmp.dr c c  
	{0xdf53, &op_ccmp,	  3,   2, 255, 0xff, 0x01, 0x00, 0x02}, // ccmp.dr d c  
	{0xdf54, &op_ccmp,	  4,   2, 255, 0xff, 0x01, 0x00, 0x02}, // ccmp.dr e c  
	{0xdf55, &op_ccmp,	  5,   2, 255, 0xff, 0x01, 0x00, 0x02}, // ccmp.dr f c  
	{0xdf56, &op_ccmp,	  6,   2, 255, 0xff, 0x01, 0x00, 0x02}, // ccmp.dr g c  
	{0xdf57, &op_ccmp,	  7,   2, 255, 0xff, 0x01, 0x00, 0x02}, // ccmp.dr h c  
	{0xdf58, &op_ccmp,	  0,   3, 255, 0xff, 0x01, 0x00, 0x02}, // ccmp.dr a d  
	{0xdf59, &op_ccmp,	  1,   3, 255, 0xff, 0x01, 0x00, 0x02}, // ccmp.dr b d  
	{0xdf5a, &op_ccmp,	  2,   3, 255, 0xff, 0x01, 0x00, 0x02}, // ccmp.dr c d  
	{0xdf5b, &op_ccmp,	  3,   3, 255, 0xff, 0x01, 0x00, 0x02}, // ccmp.dr d d  
	{0xdf5c, &op_ccmp,	  4,   3, 255, 0xff, 0x01, 0x00, 0x02}, // ccmp.dr e d  
	{0xdf5d, &op_ccmp,	  5,   3, 255, 0xff, 0x01, 0x00, 0x02}, // ccmp.dr f d  
	{0xdf5e, &op_ccmp,	  6,   3, 255, 0xff, 0x01, 0x00, 0x02}, // ccmp.dr g d  
	{0xdf5f, &op_ccmp,	  7,   3, 255, 0xff, 0x01, 0x00, 0x02}, // ccmp.dr h d  
	{0xdf60, &op_ccmp,	  0,   4, 255, 0xff, 0x01, 0x00, 0x02}, // ccmp.dr a e  
	{0xdf61, &op_ccmp,	  1,   4, 255, 0xff, 0x01, 0x00, 0x02}, // ccmp.dr b e  
	{0xdf62, &op_ccmp,	  2,   4, 255, 0xff, 0x01, 0x00, 0x02}, // ccmp.dr c e  
	{0xdf63, &op_ccmp,	  3,   4, 255, 0xff, 0x01, 0x00, 0x02}, // ccmp.dr d e  
	{0xdf64, &op_ccmp,	  4,   4, 255, 0xff, 0x01, 0x00, 0x02}, // ccmp.dr e e  
	{0xdf65, &op_ccmp,	  5,   4, 255, 0xff, 0x01, 0x00, 0x02}, // ccmp.dr f e  
	{0xdf66, &op_ccmp,	  6,   4, 255, 0xff, 0x01, 0x00, 0x02}, // ccmp.dr g e  
	{0xdf67, &op_ccmp,	  7,   4, 255, 0xff, 0x01, 0x00, 0x02}, // ccmp.dr h e  
	{0xdf68, &op_ccmp,	  0,   5, 255, 0xff, 0x01, 0x00, 0x02}, // ccmp.dr a f  
	{0xdf69, &op_ccmp,	  1,   5, 255, 0xff, 0x01, 0x00, 0x02}, // ccmp.dr b f  
	{0xdf6a, &op_ccmp,	  2,   5, 255, 0xff, 0x01, 0x00, 0x02}, // ccmp.dr c f  
	{0xdf6b, &op_ccmp,	  3,   5, 255, 0xff, 0x01, 0x00, 0x02}, // ccmp.dr d f  
	{0xdf6c, &op_ccmp,	  4,   5, 255, 0xff, 0x01, 0x00, 0x02}, // ccmp.dr e f  
	{0xdf6d, &op_ccmp,	  5,   5, 255, 0xff, 0x01, 0x00, 0x02}, // ccmp.dr f f  
	{0xdf6e, &op_ccmp,	  6,   5, 255, 0xff, 0x01, 0x00, 0x02}, // ccmp.dr g f  
	{0xdf6f, &op_ccmp,	  7,   5, 255, 0xff, 0x01, 0x00, 0x02}, // ccmp.dr h f  
	{0xdf70, &op_ccmp,	  0,   6, 255, 0xff, 0x01, 0x00, 0x02}, // ccmp.dr a g  
	{0xdf71, &op_ccmp,	  1,   6, 255, 0xff, 0x01, 0x00, 0x02}, // ccmp.dr b g  
	{0xdf72, &op_ccmp,	  2,   6, 255, 0xff, 0x01, 0x00, 0x02}, // ccmp.dr c g  
	{0xdf73, &op_ccmp,	  3,   6, 255, 0xff, 0x01, 0x00, 0x02}, // ccmp.dr d g  
	{0xdf74, &op_ccmp,	  4,   6, 255, 0xff, 0x01, 0x00, 0x02}, // ccmp.dr e g  
	{0xdf75, &op_ccmp,	  5,   6, 255, 0xff, 0x01, 0x00, 0x02}, // ccmp.dr f g  
	{0xdf76, &op_ccmp,	  6,   6, 255, 0xff, 0x01, 0x00, 0x02}, // ccmp.dr g g  
	{0xdf77, &op_ccmp,	  7,   6, 255, 0xff, 0x01, 0x00, 0x02}, // ccmp.dr h g  
	{0xdf78, &op_ccmp,	  0,   7, 255, 0xff, 0x01, 0x00, 0x02}, // ccmp.dr a h  
	{0xdf79, &op_ccmp,	  1,   7, 255, 0xff, 0x01, 0x00, 0x02}, // ccmp.dr b h  
	{0xdf7a, &op_ccmp,	  2,   7, 255, 0xff, 0x01, 0x00, 0x02}, // ccmp.dr c h  
	{0xdf7b, &op_ccmp,	  3,   7, 255, 0xff, 0x01, 0x00, 0x02}, // ccmp.dr d h  
	{0xdf7c, &op_ccmp,	  4,   7, 255, 0xff, 0x01, 0x00, 0x02}, // ccmp.dr e h  
	{0xdf7d, &op_ccmp,	  5,   7, 255, 0xff, 0x01, 0x00, 0x02}, // ccmp.dr f h  
	{0xdf7e, &op_ccmp,	  6,   7, 255, 0xff, 0x01, 0x00, 0x02}, // ccmp.dr g h  
	{0xdf7f, &op_ccmp,	  7,   7, 255, 0xff, 0x01, 0x00, 0x02}, // ccmp.dr h h  
	{0xdf80, &op_ccmp,	  0,   0, 255, 0xff, 0x01, 0x00, 0x04}, // ccmp.r a a  
	{0xdf81, &op_ccmp,	  1,   0, 255, 0xff, 0x01, 0x00, 0x04}, // ccmp.r b a  
	{0xdf82, &op_ccmp,	  2,   0, 255, 0xff, 0x01, 0x00, 0x04}, // ccmp.r c a  
	{0xdf83, &op_ccmp,	  3,   0, 255, 0xff, 0x01, 0x00, 0x04}, // ccmp.r d a  
	{0xdf84, &op_ccmp,	  4,   0, 255, 0xff, 0x01, 0x00, 0x04}, // ccmp.r e a  
	{0xdf85, &op_ccmp,	  5,   0, 255, 0xff, 0x01, 0x00, 0x04}, // ccmp.r f a  
	{0xdf86, &op_ccmp,	  6,   0, 255, 0xff, 0x01, 0x00, 0x04}, // ccmp.r g a  
	{0xdf87, &op_ccmp,	  7,   0, 255, 0xff, 0x01, 0x00, 0x04}, // ccmp.r h a  
	{0xdf88, &op_ccmp,	  0,   1, 255, 0xff, 0x01, 0x00, 0x04}, // ccmp.r a b  
	{0xdf89, &op_ccmp,	  1,   1, 255, 0xff, 0x01, 0x00, 0x04}, // ccmp.r b b  
	{0xdf8a, &op_ccmp,	  2,   1, 255, 0xff, 0x01, 0x00, 0x04}, // ccmp.r c b  
	{0xdf8b, &op_ccmp,	  3,   1, 255, 0xff, 0x01, 0x00, 0x04}, // ccmp.r d b  
	{0xdf8c, &op_ccmp,	  4,   1, 255, 0xff, 0x01, 0x00, 0x04}, // ccmp.r e b  
	{0xdf8d, &op_ccmp,	  5,   1, 255, 0xff, 0x01, 0x00, 0x04}, // ccmp.r f b  
	{0xdf8e, &op_ccmp,	  6,   1, 255, 0xff, 0x01, 0x00, 0x04}, // ccmp.r g b  
	{0xdf8f, &op_ccmp,	  7,   1, 255, 0xff, 0x01, 0x00, 0x04}, // ccmp.r h b  
	{0xdf90, &op_ccmp,	  0,   2, 255, 0xff, 0x01, 0x00, 0x04}, // ccmp.r a c  
	{0xdf91, &op_ccmp,	  1,   2, 255, 0xff, 0x01, 0x00, 0x04}, // ccmp.r b c  
	{0xdf92, &op_ccmp,	  2,   2, 255, 0xff, 0x01, 0x00, 0x04}, // ccmp.r c c  
	{0xdf93, &op_ccmp,	  3,   2, 255, 0xff, 0x01, 0x00, 0x04}, // ccmp.r d c  
	{0xdf94, &op_ccmp,	  4,   2, 255, 0xff, 0x01, 0x00, 0x04}, // ccmp.r e c  
	{0xdf95, &op_ccmp,	  5,   2, 255, 0xff, 0x01, 0x00, 0x04}, // ccmp.r f c  
	{0xdf96, &op_ccmp,	  6,   2, 255, 0xff, 0x01, 0x00, 0x04}, // ccmp.r g c  
	{0xdf97, &op_ccmp,	  7,   2, 255, 0xff, 0x01, 0x00, 0x04}, // ccmp.r h c  
	{0xdf98, &op_ccmp,	  0,   3, 255, 0xff, 0x01, 0x00, 0x04}, // ccmp.r a d  
	{0xdf99, &op_ccmp,	  1,   3, 255, 0xff, 0x01, 0x00, 0x04}, // ccmp.r b d  
	{0xdf9a, &op_ccmp,	  2,   3, 255, 0xff, 0x01, 0x00, 0x04}, // ccmp.r c d  
	{0xdf9b, &op_ccmp,	  3,   3, 255, 0xff, 0x01, 0x00, 0x04}, // ccmp.r d d  
	{0xdf9c, &op_ccmp,	  4,   3, 255, 0xff, 0x01, 0x00, 0x04}, // ccmp.r e d  
	{0xdf9d, &op_ccmp,	  5,   3, 255, 0xff, 0x01, 0x00, 0x04}, // ccmp.r f d  
	{0xdf9e, &op_ccmp,	  6,   3, 255, 0xff, 0x01, 0x00, 0x04}, // ccmp.r g d  
	{0xdf9f, &op_ccmp,	  7,   3, 255, 0xff, 0x01, 0x00, 0x04}, // ccmp.r h d  
	{0xdfa0, &op_ccmp,	  0,   4, 255, 0xff, 0x01, 0x00, 0x04}, // ccmp.r a e  
	{0xdfa1, &op_ccmp,	  1,   4, 255, 0xff, 0x01, 0x00, 0x04}, // ccmp.r b e  
	{0xdfa2, &op_ccmp,	  2,   4, 255, 0xff, 0x01, 0x00, 0x04}, // ccmp.r c e  
	{0xdfa3, &op_ccmp,	  3,   4, 255, 0xff, 0x01, 0x00, 0x04}, // ccmp.r d e  
	{0xdfa4, &op_ccmp,	  4,   4, 255, 0xff, 0x01, 0x00, 0x04}, // ccmp.r e e  
	{0xdfa5, &op_ccmp,	  5,   4, 255, 0xff, 0x01, 0x00, 0x04}, // ccmp.r f e  
	{0xdfa6, &op_ccmp,	  6,   4, 255, 0xff, 0x01, 0x00, 0x04}, // ccmp.r g e  
	{0xdfa7, &op_ccmp,	  7,   4, 255, 0xff, 0x01, 0x00, 0x04}, // ccmp.r h e  
	{0xdfa8, &op_ccmp,	  0,   5, 255, 0xff, 0x01, 0x00, 0x04}, // ccmp.r a f  
	{0xdfa9, &op_ccmp,	  1,   5, 255, 0xff, 0x01, 0x00, 0x04}, // ccmp.r b f  
	{0xdfaa, &op_ccmp,	  2,   5, 255, 0xff, 0x01, 0x00, 0x04}, // ccmp.r c f  
	{0xdfab, &op_ccmp,	  3,   5, 255, 0xff, 0x01, 0x00, 0x04}, // ccmp.r d f  
	{0xdfac, &op_ccmp,	  4,   5, 255, 0xff, 0x01, 0x00, 0x04}, // ccmp.r e f  
	{0xdfad, &op_ccmp,	  5,   5, 255, 0xff, 0x01, 0x00, 0x04}, // ccmp.r f f  
	{0xdfae, &op_ccmp,	  6,   5, 255, 0xff, 0x01, 0x00, 0x04}, // ccmp.r g f  
	{0xdfaf, &op_ccmp,	  7,   5, 255, 0xff, 0x01, 0x00, 0x04}, // ccmp.r h f  
	{0xdfb0, &op_ccmp,	  0,   6, 255, 0xff, 0x01, 0x00, 0x04}, // ccmp.r a g  
	{0xdfb1, &op_ccmp,	  1,   6, 255, 0xff, 0x01, 0x00, 0x04}, // ccmp.r b g  
	{0xdfb2, &op_ccmp,	  2,   6, 255, 0xff, 0x01, 0x00, 0x04}, // ccmp.r c g  
	{0xdfb3, &op_ccmp,	  3,   6, 255, 0xff, 0x01, 0x00, 0x04}, // ccmp.r d g  
	{0xdfb4, &op_ccmp,	  4,   6, 255, 0xff, 0x01, 0x00, 0x04}, // ccmp.r e g  
	{0xdfb5, &op_ccmp,	  5,   6, 255, 0xff, 0x01, 0x00, 0x04}, // ccmp.r f g  
	{0xdfb6, &op_ccmp,	  6,   6, 255, 0xff, 0x01, 0x00, 0x04}, // ccmp.r g g  
	{0xdfb7, &op_ccmp,	  7,   6, 255, 0xff, 0x01, 0x00, 0x04}, // ccmp.r h g  
	{0xdfb8, &op_ccmp,	  0,   7, 255, 0xff, 0x01, 0x00, 0x04}, // ccmp.r a h  
	{0xdfb9, &op_ccmp,	  1,   7, 255, 0xff, 0x01, 0x00, 0x04}, // ccmp.r b h  
	{0xdfba, &op_ccmp,	  2,   7, 255, 0xff, 0x01, 0x00, 0x04}, // ccmp.r c h  
	{0xdfbb, &op_ccmp,	  3,   7, 255, 0xff, 0x01, 0x00, 0x04}, // ccmp.r d h  
	{0xdfbc, &op_ccmp,	  4,   7, 255, 0xff, 0x01, 0x00, 0x04}, // ccmp.r e h  
	{0xdfbd, &op_ccmp,	  5,   7, 255, 0xff, 0x01, 0x00, 0x04}, // ccmp.r f h  
	{0xdfbe, &op_ccmp,	  6,   7, 255, 0xff, 0x01, 0x00, 0x04}, // ccmp.r g h  
	{0xdfbf, &op_ccmp,	  7,   7, 255, 0xff, 0x01, 0x00, 0x04}, // ccmp.r h h  
	{0xdec8, &op_ccmp,	  0,   8, 255, 0xff, 0x00, 0x01, 0x01}, // ccmp.wi a <literal>  
	{0xdec9, &op_ccmp,	  1,   8, 255, 0xff, 0x00, 0x01, 0x01}, // ccmp.wi b <literal>  
	{0xdeca, &op_ccmp,	  2,   8, 255, 0xff, 0x00, 0x01, 0x01}, // ccmp.wi c <literal>  
	{0xdecb, &op_ccmp,	  3,   8, 255, 0xff, 0x00, 0x01, 0x01}, // ccmp.wi d <literal>  
	{0xdecc, &op_ccmp,	  4,   8, 255, 0xff, 0x00, 0x01, 0x01}, // ccmp.wi e <literal>  
	{0xdecd, &op_ccmp,	  5,   8, 255, 0xff, 0x00, 0x01, 0x01}, // ccmp.wi f <literal>  
	{0xdece, &op_ccmp,	  6,   8, 255, 0xff, 0x00, 0x01, 0x01}, // ccmp.wi g <literal>  
	{0xdecf, &op_ccmp,	  7,   8, 255, 0xff, 0x00, 0x01, 0x01}, // ccmp.wi h <literal>  
	{0xded0, &op_ccmp,	  0,   8, 255, 0xff, 0x00, 0x02, 0x02}, // ccmp.di a <literal>  
	{0xded1, &op_ccmp,	  1,   8, 255, 0xff, 0x00, 0x02, 0x02}, // ccmp.di b <literal>  
	{0xded2, &op_ccmp,	  2,   8, 255, 0xff, 0x00, 0x02, 0x02}, // ccmp.di c <literal>  
	{0xded3, &op_ccmp,	  3,   8, 255, 0xff, 0x00, 0x02, 0x02}, // ccmp.di d <literal>  
	{0xded4, &op_ccmp,	  4,   8, 255, 0xff, 0x00, 0x02, 0x02}, // ccmp.di e <literal>  
	{0xded5, &op_ccmp,	  5,   8, 255, 0xff, 0x00, 0x02, 0x02}, // ccmp.di f <literal>  
	{0xded6, &op_ccmp,	  6,   8, 255, 0xff, 0x00, 0x02, 0x02}, // ccmp.di g <literal>  
	{0xded7, &op_ccmp,	  7,   8, 255, 0xff, 0x00, 0x02, 0x02}, // ccmp.di h <literal>  
	{0xdee0, &op_ccmp,	  0,   8, 255, 0xff, 0x00, 0x04, 0x04}, // ccmp.i a <literal>  
	{0xdee1, &op_ccmp,	  1,   8, 255, 0xff, 0x00, 0x04, 0x04}, // ccmp.i b <literal>  
	{0xdee2, &op_ccmp,	  2,   8, 255, 0xff, 0x00, 0x04, 0x04}, // ccmp.i c <literal>  
	{0xdee3, &op_ccmp,	  3,   8, 255, 0xff, 0x00, 0x04, 0x04}, // ccmp.i d <literal>  
	{0xdee4, &op_ccmp,	  4,   8, 255, 0xff, 0x00, 0x04, 0x04}, // ccmp.i e <literal>  
	{0xdee5, &op_ccmp,	  5,   8, 255, 0xff, 0x00, 0x04, 0x04}, // ccmp.i f <literal>  
	{0xdee6, &op_ccmp,	  6,   8, 255, 0xff, 0x00, 0x04, 0x04}, // ccmp.i g <literal>  
	{0xdee7, &op_ccmp,	  7,   8, 255, 0xff, 0x00, 0x04, 0x04}, // ccmp.i h <literal>  
	{0xdfc8, &op_ccmp,	  0,   8, 255, 0xff, 0x01, 0x04, 0x01}, // ccmp.wri a <literal>  
	{0xdfc9, &op_ccmp,	  1,   8, 255, 0xff, 0x01, 0x04, 0x01}, // ccmp.wri b <literal>  
	{0xdfca, &op_ccmp,	  2,   8, 255, 0xff, 0x01, 0x04, 0x01}, // ccmp.wri c <literal>  
	{0xdfcb, &op_ccmp,	  3,   8, 255, 0xff, 0x01, 0x04, 0x01}, // ccmp.wri d <literal>  
	{0xdfcc, &op_ccmp,	  4,   8, 255, 0xff, 0x01, 0x04, 0x01}, // ccmp.wri e <literal>  
	{0xdfcd, &op_ccmp,	  5,   8, 255, 0xff, 0x01, 0x04, 0x01}, // ccmp.wri f <literal>  
	{0xdfce, &op_ccmp,	  6,   8, 255, 0xff, 0x01, 0x04, 0x01}, // ccmp.wri g <literal>  
	{0xdfcf, &op_ccmp,	  7,   8, 255, 0xff, 0x01, 0x04, 0x01}, // ccmp.wri h <literal>  
	{0xdfd0, &op_ccmp,	  0,   8, 255, 0xff, 0x01, 0x04, 0x02}, // ccmp.dri a <literal>  
	{0xdfd1, &op_ccmp,	  1,   8, 255, 0xff, 0x01, 0x04, 0x02}, // ccmp.dri b <literal>  
	{0xdfd2, &op_ccmp,	  2,   8, 255, 0xff, 0x01, 0x04, 0x02}, // ccmp.dri c <literal>  
	{0xdfd3, &op_ccmp,	  3,   8, 255, 0xff, 0x01, 0x04, 0x02}, // ccmp.dri d <literal>  
	{0xdfd4, &op_ccmp,	  4,   8, 255, 0xff, 0x01, 0x04, 0x02}, // ccmp.dri e <literal>  
	{0xdfd5, &op_ccmp,	  5,   8, 255, 0xff, 0x01, 0x04, 0x02}, // ccmp.dri f <literal>  
	{0xdfd6, &op_ccmp,	  6,   8, 255, 0xff, 0x01, 0x04, 0x02}, // ccmp.dri g <literal>  
	{0xdfd7, &op_ccmp,	  7,   8, 255, 0xff, 0x01, 0x04, 0x02}, // ccmp.dri h <literal>  
	{0xdfe0, &op_ccmp,	  0,   8, 255, 0xff, 0x01, 0x04, 0x04}, // ccmp.ri a <literal>  
	{0xdfe1, &op_ccmp,	  1,   8, 255, 0xff, 0x01, 0x04, 0x04}, // ccmp.ri b <literal>  
	{0xdfe2, &op_ccmp,	  2,   8, 255, 0xff, 0x01, 0x04, 0x04}, // ccmp.ri c <literal>  
	{0xdfe3, &op_ccmp,	  3,   8, 255, 0xff, 0x01, 0x04, 0x04}, // ccmp.ri d <literal>  
	{0xdfe4, &op_ccmp,	  4,   8, 255, 0xff, 0x01, 0x04, 0x04}, // ccmp.ri e <literal>  
	{0xdfe5, &op_ccmp,	  5,   8, 255, 0xff, 0x01, 0x04, 0x04}, // ccmp.ri f <literal>  
	{0xdfe6, &op_ccmp,	  6,   8, 255, 0xff, 0x01, 0x04, 0x04}, // ccmp.ri g <literal>  
	{0xdfe7, &op_ccmp,	  7,   8, 255, 0xff, 0x01, 0x04, 0x04}, // ccmp.ri h <literal>  
	{0xd000, &op_ccmp_e,	  0,   0, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.we a a  
	{0xd001, &op_ccmp_e,	  1,   0, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.we b a  
	{0xd002, &op_ccmp_e,	  2,   0, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.we c a  
	{0xd003, &op_ccmp_e,	  3,   0, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.we d a  
	{0xd004, &op_ccmp_e,	  4,   0, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.we e a  
	{0xd005, &op_ccmp_e,	  5,   0, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.we f a  
	{0xd006, &op_ccmp_e,	  6,   0, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.we g a  
	{0xd007, &op_ccmp_e,	  7,   0, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.we h a  
	{0xd008, &op_ccmp_e,	  0,   1, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.we a b  
	{0xd009, &op_ccmp_e,	  1,   1, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.we b b  
	{0xd00a, &op_ccmp_e,	  2,   1, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.we c b  
	{0xd00b, &op_ccmp_e,	  3,   1, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.we d b  
	{0xd00c, &op_ccmp_e,	  4,   1, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.we e b  
	{0xd00d, &op_ccmp_e,	  5,   1, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.we f b  
	{0xd00e, &op_ccmp_e,	  6,   1, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.we g b  
	{0xd00f, &op_ccmp_e,	  7,   1, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.we h b  
	{0xd010, &op_ccmp_e,	  0,   2, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.we a c  
	{0xd011, &op_ccmp_e,	  1,   2, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.we b c  
	{0xd012, &op_ccmp_e,	  2,   2, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.we c c  
	{0xd013, &op_ccmp_e,	  3,   2, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.we d c  
	{0xd014, &op_ccmp_e,	  4,   2, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.we e c  
	{0xd015, &op_ccmp_e,	  5,   2, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.we f c  
	{0xd016, &op_ccmp_e,	  6,   2, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.we g c  
	{0xd017, &op_ccmp_e,	  7,   2, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.we h c  
	{0xd018, &op_ccmp_e,	  0,   3, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.we a d  
	{0xd019, &op_ccmp_e,	  1,   3, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.we b d  
	{0xd01a, &op_ccmp_e,	  2,   3, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.we c d  
	{0xd01b, &op_ccmp_e,	  3,   3, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.we d d  
	{0xd01c, &op_ccmp_e,	  4,   3, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.we e d  
	{0xd01d, &op_ccmp_e,	  5,   3, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.we f d  
	{0xd01e, &op_ccmp_e,	  6,   3, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.we g d  
	{0xd01f, &op_ccmp_e,	  7,   3, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.we h d  
	{0xd020, &op_ccmp_e,	  0,   4, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.we a e  
	{0xd021, &op_ccmp_e,	  1,   4, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.we b e  
	{0xd022, &op_ccmp_e,	  2,   4, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.we c e  
	{0xd023, &op_ccmp_e,	  3,   4, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.we d e  
	{0xd024, &op_ccmp_e,	  4,   4, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.we e e  
	{0xd025, &op_ccmp_e,	  5,   4, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.we f e  
	{0xd026, &op_ccmp_e,	  6,   4, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.we g e  
	{0xd027, &op_ccmp_e,	  7,   4, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.we h e  
	{0xd028, &op_ccmp_e,	  0,   5, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.we a f  
	{0xd029, &op_ccmp_e,	  1,   5, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.we b f  
	{0xd02a, &op_ccmp_e,	  2,   5, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.we c f  
	{0xd02b, &op_ccmp_e,	  3,   5, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.we d f  
	{0xd02c, &op_ccmp_e,	  4,   5, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.we e f  
	{0xd02d, &op_ccmp_e,	  5,   5, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.we f f  
	{0xd02e, &op_ccmp_e,	  6,   5, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.we g f  
	{0xd02f, &op_ccmp_e,	  7,   5, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.we h f  
	{0xd030, &op_ccmp_e,	  0,   6, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.we a g  
	{0xd031, &op_ccmp_e,	  1,   6, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.we b g  
	{0xd032, &op_ccmp_e,	  2,   6, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.we c g  
	{0xd033, &op_ccmp_e,	  3,   6, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.we d g  
	{0xd034, &op_ccmp_e,	  4,   6, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.we e g  
	{0xd035, &op_ccmp_e,	  5,   6, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.we f g  
	{0xd036, &op_ccmp_e,	  6,   6, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.we g g  
	{0xd037, &op_ccmp_e,	  7,   6, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.we h g  
	{0xd038, &op_ccmp_e,	  0,   7, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.we a h  
	{0xd039, &op_ccmp_e,	  1,   7, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.we b h  
	{0xd03a, &op_ccmp_e,	  2,   7, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.we c h  
	{0xd03b, &op_ccmp_e,	  3,   7, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.we d h  
	{0xd03c, &op_ccmp_e,	  4,   7, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.we e h  
	{0xd03d, &op_ccmp_e,	  5,   7, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.we f h  
	{0xd03e, &op_ccmp_e,	  6,   7, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.we g h  
	{0xd03f, &op_ccmp_e,	  7,   7, 255, 0xff, 0x00, 0x00, 0x01}, // ccmp.we h h  
	{0xd040, &op_ccmp_e,	  0,   0, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.de a a  
	{0xd041, &op_ccmp_e,	  1,   0, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.de b a  
	{0xd042, &op_ccmp_e,	  2,   0, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.de c a  
	{0xd043, &op_ccmp_e,	  3,   0, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.de d a  
	{0xd044, &op_ccmp_e,	  4,   0, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.de e a  
	{0xd045, &op_ccmp_e,	  5,   0, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.de f a  
	{0xd046, &op_ccmp_e,	  6,   0, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.de g a  
	{0xd047, &op_ccmp_e,	  7,   0, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.de h a  
	{0xd048, &op_ccmp_e,	  0,   1, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.de a b  
	{0xd049, &op_ccmp_e,	  1,   1, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.de b b  
	{0xd04a, &op_ccmp_e,	  2,   1, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.de c b  
	{0xd04b, &op_ccmp_e,	  3,   1, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.de d b  
	{0xd04c, &op_ccmp_e,	  4,   1, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.de e b  
	{0xd04d, &op_ccmp_e,	  5,   1, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.de f b  
	{0xd04e, &op_ccmp_e,	  6,   1, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.de g b  
	{0xd04f, &op_ccmp_e,	  7,   1, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.de h b  
	{0xd050, &op_ccmp_e,	  0,   2, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.de a c  
	{0xd051, &op_ccmp_e,	  1,   2, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.de b c  
	{0xd052, &op_ccmp_e,	  2,   2, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.de c c  
	{0xd053, &op_ccmp_e,	  3,   2, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.de d c  
	{0xd054, &op_ccmp_e,	  4,   2, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.de e c  
	{0xd055, &op_ccmp_e,	  5,   2, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.de f c  
	{0xd056, &op_ccmp_e,	  6,   2, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.de g c  
	{0xd057, &op_ccmp_e,	  7,   2, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.de h c  
	{0xd058, &op_ccmp_e,	  0,   3, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.de a d  
	{0xd059, &op_ccmp_e,	  1,   3, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.de b d  
	{0xd05a, &op_ccmp_e,	  2,   3, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.de c d  
	{0xd05b, &op_ccmp_e,	  3,   3, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.de d d  
	{0xd05c, &op_ccmp_e,	  4,   3, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.de e d  
	{0xd05d, &op_ccmp_e,	  5,   3, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.de f d  
	{0xd05e, &op_ccmp_e,	  6,   3, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.de g d  
	{0xd05f, &op_ccmp_e,	  7,   3, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.de h d  
	{0xd060, &op_ccmp_e,	  0,   4, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.de a e  
	{0xd061, &op_ccmp_e,	  1,   4, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.de b e  
	{0xd062, &op_ccmp_e,	  2,   4, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.de c e  
	{0xd063, &op_ccmp_e,	  3,   4, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.de d e  
	{0xd064, &op_ccmp_e,	  4,   4, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.de e e  
	{0xd065, &op_ccmp_e,	  5,   4, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.de f e  
	{0xd066, &op_ccmp_e,	  6,   4, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.de g e  
	{0xd067, &op_ccmp_e,	  7,   4, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.de h e  
	{0xd068, &op_ccmp_e,	  0,   5, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.de a f  
	{0xd069, &op_ccmp_e,	  1,   5, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.de b f  
	{0xd06a, &op_ccmp_e,	  2,   5, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.de c f  
	{0xd06b, &op_ccmp_e,	  3,   5, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.de d f  
	{0xd06c, &op_ccmp_e,	  4,   5, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.de e f  
	{0xd06d, &op_ccmp_e,	  5,   5, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.de f f  
	{0xd06e, &op_ccmp_e,	  6,   5, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.de g f  
	{0xd06f, &op_ccmp_e,	  7,   5, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.de h f  
	{0xd070, &op_ccmp_e,	  0,   6, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.de a g  
	{0xd071, &op_ccmp_e,	  1,   6, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.de b g  
	{0xd072, &op_ccmp_e,	  2,   6, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.de c g  
	{0xd073, &op_ccmp_e,	  3,   6, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.de d g  
	{0xd074, &op_ccmp_e,	  4,   6, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.de e g  
	{0xd075, &op_ccmp_e,	  5,   6, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.de f g  
	{0xd076, &op_ccmp_e,	  6,   6, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.de g g  
	{0xd077, &op_ccmp_e,	  7,   6, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.de h g  
	{0xd078, &op_ccmp_e,	  0,   7, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.de a h  
	{0xd079, &op_ccmp_e,	  1,   7, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.de b h  
	{0xd07a, &op_ccmp_e,	  2,   7, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.de c h  
	{0xd07b, &op_ccmp_e,	  3,   7, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.de d h  
	{0xd07c, &op_ccmp_e,	  4,   7, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.de e h  
	{0xd07d, &op_ccmp_e,	  5,   7, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.de f h  
	{0xd07e, &op_ccmp_e,	  6,   7, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.de g h  
	{0xd07f, &op_ccmp_e,	  7,   7, 255, 0xff, 0x00, 0x00, 0x02}, // ccmp.de h h  
	{0xd080, &op_ccmp_e,	  0,   0, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp.e a a  
	{0xd081, &op_ccmp_e,	  1,   0, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp.e b a  
	{0xd082, &op_ccmp_e,	  2,   0, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp.e c a  
	{0xd083, &op_ccmp_e,	  3,   0, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp.e d a  
	{0xd084, &op_ccmp_e,	  4,   0, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp.e e a  
	{0xd085, &op_ccmp_e,	  5,   0, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp.e f a  
	{0xd086, &op_ccmp_e,	  6,   0, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp.e g a  
	{0xd087, &op_ccmp_e,	  7,   0, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp.e h a  
	{0xd088, &op_ccmp_e,	  0,   1, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp.e a b  
	{0xd089, &op_ccmp_e,	  1,   1, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp.e b b  
	{0xd08a, &op_ccmp_e,	  2,   1, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp.e c b  
	{0xd08b, &op_ccmp_e,	  3,   1, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp.e d b  
	{0xd08c, &op_ccmp_e,	  4,   1, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp.e e b  
	{0xd08d, &op_ccmp_e,	  5,   1, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp.e f b  
	{0xd08e, &op_ccmp_e,	  6,   1, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp.e g b  
	{0xd08f, &op_ccmp_e,	  7,   1, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp.e h b  
	{0xd090, &op_ccmp_e,	  0,   2, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp.e a c  
	{0xd091, &op_ccmp_e,	  1,   2, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp.e b c  
	{0xd092, &op_ccmp_e,	  2,   2, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp.e c c  
	{0xd093, &op_ccmp_e,	  3,   2, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp.e d c  
	{0xd094, &op_ccmp_e,	  4,   2, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp.e e c  
	{0xd095, &op_ccmp_e,	  5,   2, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp.e f c  
	{0xd096, &op_ccmp_e,	  6,   2, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp.e g c  
	{0xd097, &op_ccmp_e,	  7,   2, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp.e h c  
	{0xd098, &op_ccmp_e,	  0,   3, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp.e a d  
	{0xd099, &op_ccmp_e,	  1,   3, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp.e b d  
	{0xd09a, &op_ccmp_e,	  2,   3, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp.e c d  
	{0xd09b, &op_ccmp_e,	  3,   3, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp.e d d  
	{0xd09c, &op_ccmp_e,	  4,   3, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp.e e d  
	{0xd09d, &op_ccmp_e,	  5,   3, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp.e f d  
	{0xd09e, &op_ccmp_e,	  6,   3, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp.e g d  
	{0xd09f, &op_ccmp_e,	  7,   3, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp.e h d  
	{0xd0a0, &op_ccmp_e,	  0,   4, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp.e a e  
	{0xd0a1, &op_ccmp_e,	  1,   4, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp.e b e  
	{0xd0a2, &op_ccmp_e,	  2,   4, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp.e c e  
	{0xd0a3, &op_ccmp_e,	  3,   4, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp.e d e  
	{0xd0a4, &op_ccmp_e,	  4,   4, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp.e e e  
	{0xd0a5, &op_ccmp_e,	  5,   4, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp.e f e  
	{0xd0a6, &op_ccmp_e,	  6,   4, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp.e g e  
	{0xd0a7, &op_ccmp_e,	  7,   4, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp.e h e  
	{0xd0a8, &op_ccmp_e,	  0,   5, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp.e a f  
	{0xd0a9, &op_ccmp_e,	  1,   5, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp.e b f  
	{0xd0aa, &op_ccmp_e,	  2,   5, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp.e c f  
	{0xd0ab, &op_ccmp_e,	  3,   5, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp.e d f  
	{0xd0ac, &op_ccmp_e,	  4,   5, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp.e e f  
	{0xd0ad, &op_ccmp_e,	  5,   5, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp.e f f  
	{0xd0ae, &op_ccmp_e,	  6,   5, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp.e g f  
	{0xd0af, &op_ccmp_e,	  7,   5, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp.e h f  
	{0xd0b0, &op_ccmp_e,	  0,   6, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp.e a g  
	{0xd0b1, &op_ccmp_e,	  1,   6, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp.e b g  
	{0xd0b2, &op_ccmp_e,	  2,   6, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp.e c g  
	{0xd0b3, &op_ccmp_e,	  3,   6, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp.e d g  
	{0xd0b4, &op_ccmp_e,	  4,   6, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp.e e g  
	{0xd0b5, &op_ccmp_e,	  5,   6, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp.e f g  
	{0xd0b6, &op_ccmp_e,	  6,   6, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp.e g g  
	{0xd0b7, &op_ccmp_e,	  7,   6, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp.e h g  
	{0xd0b8, &op_ccmp_e,	  0,   7, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp.e a h  
	{0xd0b9, &op_ccmp_e,	  1,   7, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp.e b h  
	{0xd0ba, &op_ccmp_e,	  2,   7, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp.e c h  
	{0xd0bb, &op_ccmp_e,	  3,   7, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp.e d h  
	{0xd0bc, &op_ccmp_e,	  4,   7, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp.e e h  
	{0xd0bd, &op_ccmp_e,	  5,   7, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp.e f h  
	{0xd0be, &op_ccmp_e,	  6,   7, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp.e g h  
	{0xd0bf, &op_ccmp_e,	  7,   7, 255, 0xff, 0x00, 0x00, 0x04}, // ccmp.e h h  
	{0xe000, &op_strcpy,	  0,   0, 255, 0xff, 0x01, 0x00, 0x04}, // strcpy a a  
	{0xe001, &op_strcpy,	  1,   0, 255, 0xff, 0x01, 0x00, 0x04}, // strcpy b a  
	{0xe002, &op_strcpy,	  2,   0, 255, 0xff, 0x01, 0x00, 0x04}, // strcpy c a  
	{0xe003, &op_strcpy,	  3,   0, 255, 0xff, 0x01, 0x00, 0x04}, // strcpy d a  
	{0xe004, &op_strcpy,	  4,   0, 255, 0xff, 0x01, 0x00, 0x04}, // strcpy e a  
	{0xe005, &op_strcpy,	  5,   0, 255, 0xff, 0x01, 0x00, 0x04}, // strcpy f a  
	{0xe006, &op_strcpy,	  6,   0, 255, 0xff, 0x01, 0x00, 0x04}, // strcpy g a  
	{0xe007, &op_strcpy,	  7,   0, 255, 0xff, 0x01, 0x00, 0x04}, // strcpy h a  
	{0xe008, &op_strcpy,	  0,   1, 255, 0xff, 0x01, 0x00, 0x04}, // strcpy a b  
	{0xe009, &op_strcpy,	  1,   1, 255, 0xff, 0x01, 0x00, 0x04}, // strcpy b b  
	{0xe00a, &op_strcpy,	  2,   1, 255, 0xff, 0x01, 0x00, 0x04}, // strcpy c b  
	{0xe00b, &op_strcpy,	  3,   1, 255, 0xff, 0x01, 0x00, 0x04}, // strcpy d b  
	{0xe00c, &op_strcpy,	  4,   1, 255, 0xff, 0x01, 0x00, 0x04}, // strcpy e b  
	{0xe00d, &op_strcpy,	  5,   1, 255, 0xff, 0x01, 0x00, 0x04}, // strcpy f b  
	{0xe00e, &op_strcpy,	  6,   1, 255, 0xff, 0x01, 0x00, 0x04}, // strcpy g b  
	{0xe00f, &op_strcpy,	  7,   1, 255, 0xff, 0x01, 0x00, 0x04}, // strcpy h b  
	{0xe010, &op_strcpy,	  0,   2, 255, 0xff, 0x01, 0x00, 0x04}, // strcpy a c  
	{0xe011, &op_strcpy,	  1,   2, 255, 0xff, 0x01, 0x00, 0x04}, // strcpy b c  
	{0xe012, &op_strcpy,	  2,   2, 255, 0xff, 0x01, 0x00, 0x04}, // strcpy c c  
	{0xe013, &op_strcpy,	  3,   2, 255, 0xff, 0x01, 0x00, 0x04}, // strcpy d c  
	{0xe014, &op_strcpy,	  4,   2, 255, 0xff, 0x01, 0x00, 0x04}, // strcpy e c  
	{0xe015, &op_strcpy,	  5,   2, 255, 0xff, 0x01, 0x00, 0x04}, // strcpy f c  
	{0xe016, &op_strcpy,	  6,   2, 255, 0xff, 0x01, 0x00, 0x04}, // strcpy g c  
	{0xe017, &op_strcpy,	  7,   2, 255, 0xff, 0x01, 0x00, 0x04}, // strcpy h c  
	{0xe018, &op_strcpy,	  0,   3, 255, 0xff, 0x01, 0x00, 0x04}, // strcpy a d  
	{0xe019, &op_strcpy,	  1,   3, 255, 0xff, 0x01, 0x00, 0x04}, // strcpy b d  
	{0xe01a, &op_strcpy,	  2,   3, 255, 0xff, 0x01, 0x00, 0x04}, // strcpy c d  
	{0xe01b, &op_strcpy,	  3,   3, 255, 0xff, 0x01, 0x00, 0x04}, // strcpy d d  
	{0xe01c, &op_strcpy,	  4,   3, 255, 0xff, 0x01, 0x00, 0x04}, // strcpy e d  
	{0xe01d, &op_strcpy,	  5,   3, 255, 0xff, 0x01, 0x00, 0x04}, // strcpy f d  
	{0xe01e, &op_strcpy,	  6,   3, 255, 0xff, 0x01, 0x00, 0x04}, // strcpy g d  
	{0xe01f, &op_strcpy,	  7,   3, 255, 0xff, 0x01, 0x00, 0x04}, // strcpy h d  
	{0xe020, &op_strcpy,	  0,   4, 255, 0xff, 0x01, 0x00, 0x04}, // strcpy a e  
	{0xe021, &op_strcpy,	  1,   4, 255, 0xff, 0x01, 0x00, 0x04}, // strcpy b e  
	{0xe022, &op_strcpy,	  2,   4, 255, 0xff, 0x01, 0x00, 0x04}, // strcpy c e  
	{0xe023, &op_strcpy,	  3,   4, 255, 0xff, 0x01, 0x00, 0x04}, // strcpy d e  
	{0xe024, &op_strcpy,	  4,   4, 255, 0xff, 0x01, 0x00, 0x04}, // strcpy e e  
	{0xe025, &op_strcpy,	  5,   4, 255, 0xff, 0x01, 0x00, 0x04}, // strcpy f e  
	{0xe026, &op_strcpy,	  6,   4, 255, 0xff, 0x01, 0x00, 0x04}, // strcpy g e  
	{0xe027, &op_strcpy,	  7,   4, 255, 0xff, 0x01, 0x00, 0x04}, // strcpy h e  
	{0xe028, &op_strcpy,	  0,   5, 255, 0xff, 0x01, 0x00, 0x04}, // strcpy a f  
	{0xe029, &op_strcpy,	  1,   5, 255, 0xff, 0x01, 0x00, 0x04}, // strcpy b f  
	{0xe02a, &op_strcpy,	  2,   5, 255, 0xff, 0x01, 0x00, 0x04}, // strcpy c f  
	{0xe02b, &op_strcpy,	  3,   5, 255, 0xff, 0x01, 0x00, 0x04}, // strcpy d f  
	{0xe02c, &op_strcpy,	  4,   5, 255, 0xff, 0x01, 0x00, 0x04}, // strcpy e f  
	{0xe02d, &op_strcpy,	  5,   5, 255, 0xff, 0x01, 0x00, 0x04}, // strcpy f f  
	{0xe02e, &op_strcpy,	  6,   5, 255, 0xff, 0x01, 0x00, 0x04}, // strcpy g f  
	{0xe02f, &op_strcpy,	  7,   5, 255, 0xff, 0x01, 0x00, 0x04}, // strcpy h f  
	{0xe030, &op_strcpy,	  0,   6, 255, 0xff, 0x01, 0x00, 0x04}, // strcpy a g  
	{0xe031, &op_strcpy,	  1,   6, 255, 0xff, 0x01, 0x00, 0x04}, // strcpy b g  
	{0xe032, &op_strcpy,	  2,   6, 255, 0xff, 0x01, 0x00, 0x04}, // strcpy c g  
	{0xe033, &op_strcpy,	  3,   6, 255, 0xff, 0x01, 0x00, 0x04}, // strcpy d g  
	{0xe034, &op_strcpy,	  4,   6, 255, 0xff, 0x01, 0x00, 0x04}, // strcpy e g  
	{0xe035, &op_strcpy,	  5,   6, 255, 0xff, 0x01, 0x00, 0x04}, // strcpy f g  
	{0xe036, &op_strcpy,	  6,   6, 255, 0xff, 0x01, 0x00, 0x04}, // strcpy g g  
	{0xe037, &op_strcpy,	  7,   6, 255, 0xff, 0x01, 0x00, 0x04}, // strcpy h g  
	{0xe038, &op_strcpy,	  0,   7, 255, 0xff, 0x01, 0x00, 0x04}, // strcpy a h  
	{0xe039, &op_strcpy,	  1,   7, 255, 0xff, 0x01, 0x00, 0x04}, // strcpy b h  
	{0xe03a, &op_strcpy,	  2,   7, 255, 0xff, 0x01, 0x00, 0x04}, // strcpy c h  
	{0xe03b, &op_strcpy,	  3,   7, 255, 0xff, 0x01, 0x00, 0x04}, // strcpy d h  
	{0xe03c, &op_strcpy,	  4,   7, 255, 0xff, 0x01, 0x00, 0x04}, // strcpy e h  
	{0xe03d, &op_strcpy,	  5,   7, 255, 0xff, 0x01, 0x00, 0x04}, // strcpy f h  
	{0xe03e, &op_strcpy,	  6,   7, 255, 0xff, 0x01, 0x00, 0x04}, // strcpy g h  
	{0xe03f, &op_strcpy,	  7,   7, 255, 0xff, 0x01, 0x00, 0x04}, // strcpy h h  
	{0xe040, &op_load_bl,	  0,   0, 255, 0xff, 0x01, 0x00, 0x01}, // load.bl a a  
	{0xe041, &op_load_bl,	  1,   0, 255, 0xff, 0x01, 0x00, 0x01}, // load.bl b a  
	{0xe042, &op_load_bl,	  2,   0, 255, 0xff, 0x01, 0x00, 0x01}, // load.bl c a  
	{0xe043, &op_load_bl,	  3,   0, 255, 0xff, 0x01, 0x00, 0x01}, // load.bl d a  
	{0xe044, &op_load_bl,	  4,   0, 255, 0xff, 0x01, 0x00, 0x01}, // load.bl e a  
	{0xe045, &op_load_bl,	  5,   0, 255, 0xff, 0x01, 0x00, 0x01}, // load.bl f a  
	{0xe046, &op_load_bl,	  6,   0, 255, 0xff, 0x01, 0x00, 0x01}, // load.bl g a  
	{0xe047, &op_load_bl,	  7,   0, 255, 0xff, 0x01, 0x00, 0x01}, // load.bl h a  
	{0xe048, &op_load_bl,	  0,   1, 255, 0xff, 0x01, 0x00, 0x01}, // load.bl a b  
	{0xe049, &op_load_bl,	  1,   1, 255, 0xff, 0x01, 0x00, 0x01}, // load.bl b b  
	{0xe04a, &op_load_bl,	  2,   1, 255, 0xff, 0x01, 0x00, 0x01}, // load.bl c b  
	{0xe04b, &op_load_bl,	  3,   1, 255, 0xff, 0x01, 0x00, 0x01}, // load.bl d b  
	{0xe04c, &op_load_bl,	  4,   1, 255, 0xff, 0x01, 0x00, 0x01}, // load.bl e b  
	{0xe04d, &op_load_bl,	  5,   1, 255, 0xff, 0x01, 0x00, 0x01}, // load.bl f b  
	{0xe04e, &op_load_bl,	  6,   1, 255, 0xff, 0x01, 0x00, 0x01}, // load.bl g b  
	{0xe04f, &op_load_bl,	  7,   1, 255, 0xff, 0x01, 0x00, 0x01}, // load.bl h b  
	{0xe050, &op_load_bl,	  0,   2, 255, 0xff, 0x01, 0x00, 0x01}, // load.bl a c  
	{0xe051, &op_load_bl,	  1,   2, 255, 0xff, 0x01, 0x00, 0x01}, // load.bl b c  
	{0xe052, &op_load_bl,	  2,   2, 255, 0xff, 0x01, 0x00, 0x01}, // load.bl c c  
	{0xe053, &op_load_bl,	  3,   2, 255, 0xff, 0x01, 0x00, 0x01}, // load.bl d c  
	{0xe054, &op_load_bl,	  4,   2, 255, 0xff, 0x01, 0x00, 0x01}, // load.bl e c  
	{0xe055, &op_load_bl,	  5,   2, 255, 0xff, 0x01, 0x00, 0x01}, // load.bl f c  
	{0xe056, &op_load_bl,	  6,   2, 255, 0xff, 0x01, 0x00, 0x01}, // load.bl g c  
	{0xe057, &op_load_bl,	  7,   2, 255, 0xff, 0x01, 0x00, 0x01}, // load.bl h c  
	{0xe058, &op_load_bl,	  0,   3, 255, 0xff, 0x01, 0x00, 0x01}, // load.bl a d  
	{0xe059, &op_load_bl,	  1,   3, 255, 0xff, 0x01, 0x00, 0x01}, // load.bl b d  
	{0xe05a, &op_load_bl,	  2,   3, 255, 0xff, 0x01, 0x00, 0x01}, // load.bl c d  
	{0xe05b, &op_load_bl,	  3,   3, 255, 0xff, 0x01, 0x00, 0x01}, // load.bl d d  
	{0xe05c, &op_load_bl,	  4,   3, 255, 0xff, 0x01, 0x00, 0x01}, // load.bl e d  
	{0xe05d, &op_load_bl,	  5,   3, 255, 0xff, 0x01, 0x00, 0x01}, // load.bl f d  
	{0xe05e, &op_load_bl,	  6,   3, 255, 0xff, 0x01, 0x00, 0x01}, // load.bl g d  
	{0xe05f, &op_load_bl,	  7,   3, 255, 0xff, 0x01, 0x00, 0x01}, // load.bl h d  
	{0xe060, &op_load_bl,	  0,   4, 255, 0xff, 0x01, 0x00, 0x01}, // load.bl a e  
	{0xe061, &op_load_bl,	  1,   4, 255, 0xff, 0x01, 0x00, 0x01}, // load.bl b e  
	{0xe062, &op_load_bl,	  2,   4, 255, 0xff, 0x01, 0x00, 0x01}, // load.bl c e  
	{0xe063, &op_load_bl,	  3,   4, 255, 0xff, 0x01, 0x00, 0x01}, // load.bl d e  
	{0xe064, &op_load_bl,	  4,   4, 255, 0xff, 0x01, 0x00, 0x01}, // load.bl e e  
	{0xe065, &op_load_bl,	  5,   4, 255, 0xff, 0x01, 0x00, 0x01}, // load.bl f e  
	{0xe066, &op_load_bl,	  6,   4, 255, 0xff, 0x01, 0x00, 0x01}, // load.bl g e  
	{0xe067, &op_load_bl,	  7,   4, 255, 0xff, 0x01, 0x00, 0x01}, // load.bl h e  
	{0xe068, &op_load_bl,	  0,   5, 255, 0xff, 0x01, 0x00, 0x01}, // load.bl a f  
	{0xe069, &op_load_bl,	  1,   5, 255, 0xff, 0x01, 0x00, 0x01}, // load.bl b f  
	{0xe06a, &op_load_bl,	  2,   5, 255, 0xff, 0x01, 0x00, 0x01}, // load.bl c f  
	{0xe06b, &op_load_bl,	  3,   5, 255, 0xff, 0x01, 0x00, 0x01}, // load.bl d f  
	{0xe06c, &op_load_bl,	  4,   5, 255, 0xff, 0x01, 0x00, 0x01}, // load.bl e f  
	{0xe06d, &op_load_bl,	  5,   5, 255, 0xff, 0x01, 0x00, 0x01}, // load.bl f f  
	{0xe06e, &op_load_bl,	  6,   5, 255, 0xff, 0x01, 0x00, 0x01}, // load.bl g f  
	{0xe06f, &op_load_bl,	  7,   5, 255, 0xff, 0x01, 0x00, 0x01}, // load.bl h f  
	{0xe070, &op_load_bl,	  0,   6, 255, 0xff, 0x01, 0x00, 0x01}, // load.bl a g  
	{0xe071, &op_load_bl,	  1,   6, 255, 0xff, 0x01, 0x00, 0x01}, // load.bl b g  
	{0xe072, &op_load_bl,	  2,   6, 255, 0xff, 0x01, 0x00, 0x01}, // load.bl c g  
	{0xe073, &op_load_bl,	  3,   6, 255, 0xff, 0x01, 0x00, 0x01}, // load.bl d g  
	{0xe074, &op_load_bl,	  4,   6, 255, 0xff, 0x01, 0x00, 0x01}, // load.bl e g  
	{0xe075, &op_load_bl,	  5,   6, 255, 0xff, 0x01, 0x00, 0x01}, // load.bl f g  
	{0xe076, &op_load_bl,	  6,   6, 255, 0xff, 0x01, 0x00, 0x01}, // load.bl g g  
	{0xe077, &op_load_bl,	  7,   6, 255, 0xff, 0x01, 0x00, 0x01}, // load.bl h g  
	{0xe078, &op_load_bl,	  0,   7, 255, 0xff, 0x01, 0x00, 0x01}, // load.bl a h  
	{0xe079, &op_load_bl,	  1,   7, 255, 0xff, 0x01, 0x00, 0x01}, // load.bl b h  
	{0xe07a, &op_load_bl,	  2,   7, 255, 0xff, 0x01, 0x00, 0x01}, // load.bl c h  
	{0xe07b, &op_load_bl,	  3,   7, 255, 0xff, 0x01, 0x00, 0x01}, // load.bl d h  
	{0xe07c, &op_load_bl,	  4,   7, 255, 0xff, 0x01, 0x00, 0x01}, // load.bl e h  
	{0xe07d, &op_load_bl,	  5,   7, 255, 0xff, 0x01, 0x00, 0x01}, // load.bl f h  
	{0xe07e, &op_load_bl,	  6,   7, 255, 0xff, 0x01, 0x00, 0x01}, // load.bl g h  
	{0xe07f, &op_load_bl,	  7,   7, 255, 0xff, 0x01, 0x00, 0x01}, // load.bl h h  
	{0xe080, &op_load_bh,	  0,   0, 255, 0xff, 0x01, 0x00, 0x01}, // load.bh a a  
	{0xe081, &op_load_bh,	  1,   0, 255, 0xff, 0x01, 0x00, 0x01}, // load.bh b a  
	{0xe082, &op_load_bh,	  2,   0, 255, 0xff, 0x01, 0x00, 0x01}, // load.bh c a  
	{0xe083, &op_load_bh,	  3,   0, 255, 0xff, 0x01, 0x00, 0x01}, // load.bh d a  
	{0xe084, &op_load_bh,	  4,   0, 255, 0xff, 0x01, 0x00, 0x01}, // load.bh e a  
	{0xe085, &op_load_bh,	  5,   0, 255, 0xff, 0x01, 0x00, 0x01}, // load.bh f a  
	{0xe086, &op_load_bh,	  6,   0, 255, 0xff, 0x01, 0x00, 0x01}, // load.bh g a  
	{0xe087, &op_load_bh,	  7,   0, 255, 0xff, 0x01, 0x00, 0x01}, // load.bh h a  
	{0xe088, &op_load_bh,	  0,   1, 255, 0xff, 0x01, 0x00, 0x01}, // load.bh a b  
	{0xe089, &op_load_bh,	  1,   1, 255, 0xff, 0x01, 0x00, 0x01}, // load.bh b b  
	{0xe08a, &op_load_bh,	  2,   1, 255, 0xff, 0x01, 0x00, 0x01}, // load.bh c b  
	{0xe08b, &op_load_bh,	  3,   1, 255, 0xff, 0x01, 0x00, 0x01}, // load.bh d b  
	{0xe08c, &op_load_bh,	  4,   1, 255, 0xff, 0x01, 0x00, 0x01}, // load.bh e b  
	{0xe08d, &op_load_bh,	  5,   1, 255, 0xff, 0x01, 0x00, 0x01}, // load.bh f b  
	{0xe08e, &op_load_bh,	  6,   1, 255, 0xff, 0x01, 0x00, 0x01}, // load.bh g b  
	{0xe08f, &op_load_bh,	  7,   1, 255, 0xff, 0x01, 0x00, 0x01}, // load.bh h b  
	{0xe090, &op_load_bh,	  0,   2, 255, 0xff, 0x01, 0x00, 0x01}, // load.bh a c  
	{0xe091, &op_load_bh,	  1,   2, 255, 0xff, 0x01, 0x00, 0x01}, // load.bh b c  
	{0xe092, &op_load_bh,	  2,   2, 255, 0xff, 0x01, 0x00, 0x01}, // load.bh c c  
	{0xe093, &op_load_bh,	  3,   2, 255, 0xff, 0x01, 0x00, 0x01}, // load.bh d c  
	{0xe094, &op_load_bh,	  4,   2, 255, 0xff, 0x01, 0x00, 0x01}, // load.bh e c  
	{0xe095, &op_load_bh,	  5,   2, 255, 0xff, 0x01, 0x00, 0x01}, // load.bh f c  
	{0xe096, &op_load_bh,	  6,   2, 255, 0xff, 0x01, 0x00, 0x01}, // load.bh g c  
	{0xe097, &op_load_bh,	  7,   2, 255, 0xff, 0x01, 0x00, 0x01}, // load.bh h c  
	{0xe098, &op_load_bh,	  0,   3, 255, 0xff, 0x01, 0x00, 0x01}, // load.bh a d  
	{0xe099, &op_load_bh,	  1,   3, 255, 0xff, 0x01, 0x00, 0x01}, // load.bh b d  
	{0xe09a, &op_load_bh,	  2,   3, 255, 0xff, 0x01, 0x00, 0x01}, // load.bh c d  
	{0xe09b, &op_load_bh,	  3,   3, 255, 0xff, 0x01, 0x00, 0x01}, // load.bh d d  
	{0xe09c, &op_load_bh,	  4,   3, 255, 0xff, 0x01, 0x00, 0x01}, // load.bh e d  
	{0xe09d, &op_load_bh,	  5,   3, 255, 0xff, 0x01, 0x00, 0x01}, // load.bh f d  
	{0xe09e, &op_load_bh,	  6,   3, 255, 0xff, 0x01, 0x00, 0x01}, // load.bh g d  
	{0xe09f, &op_load_bh,	  7,   3, 255, 0xff, 0x01, 0x00, 0x01}, // load.bh h d  
	{0xe0a0, &op_load_bh,	  0,   4, 255, 0xff, 0x01, 0x00, 0x01}, // load.bh a e  
	{0xe0a1, &op_load_bh,	  1,   4, 255, 0xff, 0x01, 0x00, 0x01}, // load.bh b e  
	{0xe0a2, &op_load_bh,	  2,   4, 255, 0xff, 0x01, 0x00, 0x01}, // load.bh c e  
	{0xe0a3, &op_load_bh,	  3,   4, 255, 0xff, 0x01, 0x00, 0x01}, // load.bh d e  
	{0xe0a4, &op_load_bh,	  4,   4, 255, 0xff, 0x01, 0x00, 0x01}, // load.bh e e  
	{0xe0a5, &op_load_bh,	  5,   4, 255, 0xff, 0x01, 0x00, 0x01}, // load.bh f e  
	{0xe0a6, &op_load_bh,	  6,   4, 255, 0xff, 0x01, 0x00, 0x01}, // load.bh g e  
	{0xe0a7, &op_load_bh,	  7,   4, 255, 0xff, 0x01, 0x00, 0x01}, // load.bh h e  
	{0xe0a8, &op_load_bh,	  0,   5, 255, 0xff, 0x01, 0x00, 0x01}, // load.bh a f  
	{0xe0a9, &op_load_bh,	  1,   5, 255, 0xff, 0x01, 0x00, 0x01}, // load.bh b f  
	{0xe0aa, &op_load_bh,	  2,   5, 255, 0xff, 0x01, 0x00, 0x01}, // load.bh c f  
	{0xe0ab, &op_load_bh,	  3,   5, 255, 0xff, 0x01, 0x00, 0x01}, // load.bh d f  
	{0xe0ac, &op_load_bh,	  4,   5, 255, 0xff, 0x01, 0x00, 0x01}, // load.bh e f  
	{0xe0ad, &op_load_bh,	  5,   5, 255, 0xff, 0x01, 0x00, 0x01}, // load.bh f f  
	{0xe0ae, &op_load_bh,	  6,   5, 255, 0xff, 0x01, 0x00, 0x01}, // load.bh g f  
	{0xe0af, &op_load_bh,	  7,   5, 255, 0xff, 0x01, 0x00, 0x01}, // load.bh h f  
	{0xe0b0, &op_load_bh,	  0,   6, 255, 0xff, 0x01, 0x00, 0x01}, // load.bh a g  
	{0xe0b1, &op_load_bh,	  1,   6, 255, 0xff, 0x01, 0x00, 0x01}, // load.bh b g  
	{0xe0b2, &op_load_bh,	  2,   6, 255, 0xff, 0x01, 0x00, 0x01}, // load.bh c g  
	{0xe0b3, &op_load_bh,	  3,   6, 255, 0xff, 0x01, 0x00, 0x01}, // load.bh d g  
	{0xe0b4, &op_load_bh,	  4,   6, 255, 0xff, 0x01, 0x00, 0x01}, // load.bh e g  
	{0xe0b5, &op_load_bh,	  5,   6, 255, 0xff, 0x01, 0x00, 0x01}, // load.bh f g  
	{0xe0b6, &op_load_bh,	  6,   6, 255, 0xff, 0x01, 0x00, 0x01}, // load.bh g g  
	{0xe0b7, &op_load_bh,	  7,   6, 255, 0xff, 0x01, 0x00, 0x01}, // load.bh h g  
	{0xe0b8, &op_load_bh,	  0,   7, 255, 0xff, 0x01, 0x00, 0x01}, // load.bh a h  
	{0xe0b9, &op_load_bh,	  1,   7, 255, 0xff, 0x01, 0x00, 0x01}, // load.bh b h  
	{0xe0ba, &op_load_bh,	  2,   7, 255, 0xff, 0x01, 0x00, 0x01}, // load.bh c h  
	{0xe0bb, &op_load_bh,	  3,   7, 255, 0xff, 0x01, 0x00, 0x01}, // load.bh d h  
	{0xe0bc, &op_load_bh,	  4,   7, 255, 0xff, 0x01, 0x00, 0x01}, // load.bh e h  
	{0xe0bd, &op_load_bh,	  5,   7, 255, 0xff, 0x01, 0x00, 0x01}, // load.bh f h  
	{0xe0be, &op_load_bh,	  6,   7, 255, 0xff, 0x01, 0x00, 0x01}, // load.bh g h  
	{0xe0bf, &op_load_bh,	  7,   7, 255, 0xff, 0x01, 0x00, 0x01}, // load.bh h h  
	{0xe0c0, &op_strsize,	  0,   0, 255, 0xff, 0x01, 0x00, 0x04}, // strsize a a  
	{0xe0c1, &op_strsize,	  1,   0, 255, 0xff, 0x01, 0x00, 0x04}, // strsize b a  
	{0xe0c2, &op_strsize,	  2,   0, 255, 0xff, 0x01, 0x00, 0x04}, // strsize c a  
	{0xe0c3, &op_strsize,	  3,   0, 255, 0xff, 0x01, 0x00, 0x04}, // strsize d a  
	{0xe0c4, &op_strsize,	  4,   0, 255, 0xff, 0x01, 0x00, 0x04}, // strsize e a  
	{0xe0c5, &op_strsize,	  5,   0, 255, 0xff, 0x01, 0x00, 0x04}, // strsize f a  
	{0xe0c6, &op_strsize,	  6,   0, 255, 0xff, 0x01, 0x00, 0x04}, // strsize g a  
	{0xe0c7, &op_strsize,	  7,   0, 255, 0xff, 0x01, 0x00, 0x04}, // strsize h a  
	{0xe0c8, &op_strsize,	  0,   1, 255, 0xff, 0x01, 0x00, 0x04}, // strsize a b  
	{0xe0c9, &op_strsize,	  1,   1, 255, 0xff, 0x01, 0x00, 0x04}, // strsize b b  
	{0xe0ca, &op_strsize,	  2,   1, 255, 0xff, 0x01, 0x00, 0x04}, // strsize c b  
	{0xe0cb, &op_strsize,	  3,   1, 255, 0xff, 0x01, 0x00, 0x04}, // strsize d b  
	{0xe0cc, &op_strsize,	  4,   1, 255, 0xff, 0x01, 0x00, 0x04}, // strsize e b  
	{0xe0cd, &op_strsize,	  5,   1, 255, 0xff, 0x01, 0x00, 0x04}, // strsize f b  
	{0xe0ce, &op_strsize,	  6,   1, 255, 0xff, 0x01, 0x00, 0x04}, // strsize g b  
	{0xe0cf, &op_strsize,	  7,   1, 255, 0xff, 0x01, 0x00, 0x04}, // strsize h b  
	{0xe0d0, &op_strsize,	  0,   2, 255, 0xff, 0x01, 0x00, 0x04}, // strsize a c  
	{0xe0d1, &op_strsize,	  1,   2, 255, 0xff, 0x01, 0x00, 0x04}, // strsize b c  
	{0xe0d2, &op_strsize,	  2,   2, 255, 0xff, 0x01, 0x00, 0x04}, // strsize c c  
	{0xe0d3, &op_strsize,	  3,   2, 255, 0xff, 0x01, 0x00, 0x04}, // strsize d c  
	{0xe0d4, &op_strsize,	  4,   2, 255, 0xff, 0x01, 0x00, 0x04}, // strsize e c  
	{0xe0d5, &op_strsize,	  5,   2, 255, 0xff, 0x01, 0x00, 0x04}, // strsize f c  
	{0xe0d6, &op_strsize,	  6,   2, 255, 0xff, 0x01, 0x00, 0x04}, // strsize g c  
	{0xe0d7, &op_strsize,	  7,   2, 255, 0xff, 0x01, 0x00, 0x04}, // strsize h c  
	{0xe0d8, &op_strsize,	  0,   3, 255, 0xff, 0x01, 0x00, 0x04}, // strsize a d  
	{0xe0d9, &op_strsize,	  1,   3, 255, 0xff, 0x01, 0x00, 0x04}, // strsize b d  
	{0xe0da, &op_strsize,	  2,   3, 255, 0xff, 0x01, 0x00, 0x04}, // strsize c d  
	{0xe0db, &op_strsize,	  3,   3, 255, 0xff, 0x01, 0x00, 0x04}, // strsize d d  
	{0xe0dc, &op_strsize,	  4,   3, 255, 0xff, 0x01, 0x00, 0x04}, // strsize e d  
	{0xe0dd, &op_strsize,	  5,   3, 255, 0xff, 0x01, 0x00, 0x04}, // strsize f d  
	{0xe0de, &op_strsize,	  6,   3, 255, 0xff, 0x01, 0x00, 0x04}, // strsize g d  
	{0xe0df, &op_strsize,	  7,   3, 255, 0xff, 0x01, 0x00, 0x04}, // strsize h d  
	{0xe0e0, &op_strsize,	  0,   4, 255, 0xff, 0x01, 0x00, 0x04}, // strsize a e  
	{0xe0e1, &op_strsize,	  1,   4, 255, 0xff, 0x01, 0x00, 0x04}, // strsize b e  
	{0xe0e2, &op_strsize,	  2,   4, 255, 0xff, 0x01, 0x00, 0x04}, // strsize c e  
	{0xe0e3, &op_strsize,	  3,   4, 255, 0xff, 0x01, 0x00, 0x04}, // strsize d e  
	{0xe0e4, &op_strsize,	  4,   4, 255, 0xff, 0x01, 0x00, 0x04}, // strsize e e  
	{0xe0e5, &op_strsize,	  5,   4, 255, 0xff, 0x01, 0x00, 0x04}, // strsize f e  
	{0xe0e6, &op_strsize,	  6,   4, 255, 0xff, 0x01, 0x00, 0x04}, // strsize g e  
	{0xe0e7, &op_strsize,	  7,   4, 255, 0xff, 0x01, 0x00, 0x04}, // strsize h e  
	{0xe0e8, &op_strsize,	  0,   5, 255, 0xff, 0x01, 0x00, 0x04}, // strsize a f  
	{0xe0e9, &op_strsize,	  1,   5, 255, 0xff, 0x01, 0x00, 0x04}, // strsize b f  
	{0xe0ea, &op_strsize,	  2,   5, 255, 0xff, 0x01, 0x00, 0x04}, // strsize c f  
	{0xe0eb, &op_strsize,	  3,   5, 255, 0xff, 0x01, 0x00, 0x04}, // strsize d f  
	{0xe0ec, &op_strsize,	  4,   5, 255, 0xff, 0x01, 0x00, 0x04}, // strsize e f  
	{0xe0ed, &op_strsize,	  5,   5, 255, 0xff, 0x01, 0x00, 0x04}, // strsize f f  
	{0xe0ee, &op_strsize,	  6,   5, 255, 0xff, 0x01, 0x00, 0x04}, // strsize g f  
	{0xe0ef, &op_strsize,	  7,   5, 255, 0xff, 0x01, 0x00, 0x04}, // strsize h f  
	{0xe0f0, &op_strsize,	  0,   6, 255, 0xff, 0x01, 0x00, 0x04}, // strsize a g  
	{0xe0f1, &op_strsize,	  1,   6, 255, 0xff, 0x01, 0x00, 0x04}, // strsize b g  
	{0xe0f2, &op_strsize,	  2,   6, 255, 0xff, 0x01, 0x00, 0x04}, // strsize c g  
	{0xe0f3, &op_strsize,	  3,   6, 255, 0xff, 0x01, 0x00, 0x04}, // strsize d g  
	{0xe0f4, &op_strsize,	  4,   6, 255, 0xff, 0x01, 0x00, 0x04}, // strsize e g  
	{0xe0f5, &op_strsize,	  5,   6, 255, 0xff, 0x01, 0x00, 0x04}, // strsize f g  
	{0xe0f6, &op_strsize,	  6,   6, 255, 0xff, 0x01, 0x00, 0x04}, // strsize g g  
	{0xe0f7, &op_strsize,	  7,   6, 255, 0xff, 0x01, 0x00, 0x04}, // strsize h g  
	{0xe0f8, &op_strsize,	  0,   7, 255, 0xff, 0x01, 0x00, 0x04}, // strsize a h  
	{0xe0f9, &op_strsize,	  1,   7, 255, 0xff, 0x01, 0x00, 0x04}, // strsize b h  
	{0xe0fa, &op_strsize,	  2,   7, 255, 0xff, 0x01, 0x00, 0x04}, // strsize c h  
	{0xe0fb, &op_strsize,	  3,   7, 255, 0xff, 0x01, 0x00, 0x04}, // strsize d h  
	{0xe0fc, &op_strsize,	  4,   7, 255, 0xff, 0x01, 0x00, 0x04}, // strsize e h  
	{0xe0fd, &op_strsize,	  5,   7, 255, 0xff, 0x01, 0x00, 0x04}, // strsize f h  
	{0xe0fe, &op_strsize,	  6,   7, 255, 0xff, 0x01, 0x00, 0x04}, // strsize g h  
	{0xe0ff, &op_strsize,	  7,   7, 255, 0xff, 0x01, 0x00, 0x04}, // strsize h h  
	{0xe100, &op_strrev,	  0,   0, 255, 0xff, 0x01, 0x00, 0x04}, // strrev a a  
	{0xe101, &op_strrev,	  1,   0, 255, 0xff, 0x01, 0x00, 0x04}, // strrev b a  
	{0xe102, &op_strrev,	  2,   0, 255, 0xff, 0x01, 0x00, 0x04}, // strrev c a  
	{0xe103, &op_strrev,	  3,   0, 255, 0xff, 0x01, 0x00, 0x04}, // strrev d a  
	{0xe104, &op_strrev,	  4,   0, 255, 0xff, 0x01, 0x00, 0x04}, // strrev e a  
	{0xe105, &op_strrev,	  5,   0, 255, 0xff, 0x01, 0x00, 0x04}, // strrev f a  
	{0xe106, &op_strrev,	  6,   0, 255, 0xff, 0x01, 0x00, 0x04}, // strrev g a  
	{0xe107, &op_strrev,	  7,   0, 255, 0xff, 0x01, 0x00, 0x04}, // strrev h a  
	{0xe108, &op_strrev,	  0,   1, 255, 0xff, 0x01, 0x00, 0x04}, // strrev a b  
	{0xe109, &op_strrev,	  1,   1, 255, 0xff, 0x01, 0x00, 0x04}, // strrev b b  
	{0xe10a, &op_strrev,	  2,   1, 255, 0xff, 0x01, 0x00, 0x04}, // strrev c b  
	{0xe10b, &op_strrev,	  3,   1, 255, 0xff, 0x01, 0x00, 0x04}, // strrev d b  
	{0xe10c, &op_strrev,	  4,   1, 255, 0xff, 0x01, 0x00, 0x04}, // strrev e b  
	{0xe10d, &op_strrev,	  5,   1, 255, 0xff, 0x01, 0x00, 0x04}, // strrev f b  
	{0xe10e, &op_strrev,	  6,   1, 255, 0xff, 0x01, 0x00, 0x04}, // strrev g b  
	{0xe10f, &op_strrev,	  7,   1, 255, 0xff, 0x01, 0x00, 0x04}, // strrev h b  
	{0xe110, &op_strrev,	  0,   2, 255, 0xff, 0x01, 0x00, 0x04}, // strrev a c  
	{0xe111, &op_strrev,	  1,   2, 255, 0xff, 0x01, 0x00, 0x04}, // strrev b c  
	{0xe112, &op_strrev,	  2,   2, 255, 0xff, 0x01, 0x00, 0x04}, // strrev c c  
	{0xe113, &op_strrev,	  3,   2, 255, 0xff, 0x01, 0x00, 0x04}, // strrev d c  
	{0xe114, &op_strrev,	  4,   2, 255, 0xff, 0x01, 0x00, 0x04}, // strrev e c  
	{0xe115, &op_strrev,	  5,   2, 255, 0xff, 0x01, 0x00, 0x04}, // strrev f c  
	{0xe116, &op_strrev,	  6,   2, 255, 0xff, 0x01, 0x00, 0x04}, // strrev g c  
	{0xe117, &op_strrev,	  7,   2, 255, 0xff, 0x01, 0x00, 0x04}, // strrev h c  
	{0xe118, &op_strrev,	  0,   3, 255, 0xff, 0x01, 0x00, 0x04}, // strrev a d  
	{0xe119, &op_strrev,	  1,   3, 255, 0xff, 0x01, 0x00, 0x04}, // strrev b d  
	{0xe11a, &op_strrev,	  2,   3, 255, 0xff, 0x01, 0x00, 0x04}, // strrev c d  
	{0xe11b, &op_strrev,	  3,   3, 255, 0xff, 0x01, 0x00, 0x04}, // strrev d d  
	{0xe11c, &op_strrev,	  4,   3, 255, 0xff, 0x01, 0x00, 0x04}, // strrev e d  
	{0xe11d, &op_strrev,	  5,   3, 255, 0xff, 0x01, 0x00, 0x04}, // strrev f d  
	{0xe11e, &op_strrev,	  6,   3, 255, 0xff, 0x01, 0x00, 0x04}, // strrev g d  
	{0xe11f, &op_strrev,	  7,   3, 255, 0xff, 0x01, 0x00, 0x04}, // strrev h d  
	{0xe120, &op_strrev,	  0,   4, 255, 0xff, 0x01, 0x00, 0x04}, // strrev a e  
	{0xe121, &op_strrev,	  1,   4, 255, 0xff, 0x01, 0x00, 0x04}, // strrev b e  
	{0xe122, &op_strrev,	  2,   4, 255, 0xff, 0x01, 0x00, 0x04}, // strrev c e  
	{0xe123, &op_strrev,	  3,   4, 255, 0xff, 0x01, 0x00, 0x04}, // strrev d e  
	{0xe124, &op_strrev,	  4,   4, 255, 0xff, 0x01, 0x00, 0x04}, // strrev e e  
	{0xe125, &op_strrev,	  5,   4, 255, 0xff, 0x01, 0x00, 0x04}, // strrev f e  
	{0xe126, &op_strrev,	  6,   4, 255, 0xff, 0x01, 0x00, 0x04}, // strrev g e  
	{0xe127, &op_strrev,	  7,   4, 255, 0xff, 0x01, 0x00, 0x04}, // strrev h e  
	{0xe128, &op_strrev,	  0,   5, 255, 0xff, 0x01, 0x00, 0x04}, // strrev a f  
	{0xe129, &op_strrev,	  1,   5, 255, 0xff, 0x01, 0x00, 0x04}, // strrev b f  
	{0xe12a, &op_strrev,	  2,   5, 255, 0xff, 0x01, 0x00, 0x04}, // strrev c f  
	{0xe12b, &op_strrev,	  3,   5, 255, 0xff, 0x01, 0x00, 0x04}, // strrev d f  
	{0xe12c, &op_strrev,	  4,   5, 255, 0xff, 0x01, 0x00, 0x04}, // strrev e f  
	{0xe12d, &op_strrev,	  5,   5, 255, 0xff, 0x01, 0x00, 0x04}, // strrev f f  
	{0xe12e, &op_strrev,	  6,   5, 255, 0xff, 0x01, 0x00, 0x04}, // strrev g f  
	{0xe12f, &op_strrev,	  7,   5, 255, 0xff, 0x01, 0x00, 0x04}, // strrev h f  
	{0xe130, &op_strrev,	  0,   6, 255, 0xff, 0x01, 0x00, 0x04}, // strrev a g  
	{0xe131, &op_strrev,	  1,   6, 255, 0xff, 0x01, 0x00, 0x04}, // strrev b g  
	{0xe132, &op_strrev,	  2,   6, 255, 0xff, 0x01, 0x00, 0x04}, // strrev c g  
	{0xe133, &op_strrev,	  3,   6, 255, 0xff, 0x01, 0x00, 0x04}, // strrev d g  
	{0xe134, &op_strrev,	  4,   6, 255, 0xff, 0x01, 0x00, 0x04}, // strrev e g  
	{0xe135, &op_strrev,	  5,   6, 255, 0xff, 0x01, 0x00, 0x04}, // strrev f g  
	{0xe136, &op_strrev,	  6,   6, 255, 0xff, 0x01, 0x00, 0x04}, // strrev g g  
	{0xe137, &op_strrev,	  7,   6, 255, 0xff, 0x01, 0x00, 0x04}, // strrev h g  
	{0xe138, &op_strrev,	  0,   7, 255, 0xff, 0x01, 0x00, 0x04}, // strrev a h  
	{0xe139, &op_strrev,	  1,   7, 255, 0xff, 0x01, 0x00, 0x04}, // strrev b h  
	{0xe13a, &op_strrev,	  2,   7, 255, 0xff, 0x01, 0x00, 0x04}, // strrev c h  
	{0xe13b, &op_strrev,	  3,   7, 255, 0xff, 0x01, 0x00, 0x04}, // strrev d h  
	{0xe13c, &op_strrev,	  4,   7, 255, 0xff, 0x01, 0x00, 0x04}, // strrev e h  
	{0xe13d, &op_strrev,	  5,   7, 255, 0xff, 0x01, 0x00, 0x04}, // strrev f h  
	{0xe13e, &op_strrev,	  6,   7, 255, 0xff, 0x01, 0x00, 0x04}, // strrev g h  
	{0xe13f, &op_strrev,	  7,   7, 255, 0xff, 0x01, 0x00, 0x04}, // strrev h h  
	{0xe140, &op_store_bl,	  0,   0, 255, 0xff, 0x01, 0x00, 0x01}, // store.bl a a  
	{0xe141, &op_store_bl,	  1,   0, 255, 0xff, 0x01, 0x00, 0x01}, // store.bl b a  
	{0xe142, &op_store_bl,	  2,   0, 255, 0xff, 0x01, 0x00, 0x01}, // store.bl c a  
	{0xe143, &op_store_bl,	  3,   0, 255, 0xff, 0x01, 0x00, 0x01}, // store.bl d a  
	{0xe144, &op_store_bl,	  4,   0, 255, 0xff, 0x01, 0x00, 0x01}, // store.bl e a  
	{0xe145, &op_store_bl,	  5,   0, 255, 0xff, 0x01, 0x00, 0x01}, // store.bl f a  
	{0xe146, &op_store_bl,	  6,   0, 255, 0xff, 0x01, 0x00, 0x01}, // store.bl g a  
	{0xe147, &op_store_bl,	  7,   0, 255, 0xff, 0x01, 0x00, 0x01}, // store.bl h a  
	{0xe148, &op_store_bl,	  0,   1, 255, 0xff, 0x01, 0x00, 0x01}, // store.bl a b  
	{0xe149, &op_store_bl,	  1,   1, 255, 0xff, 0x01, 0x00, 0x01}, // store.bl b b  
	{0xe14a, &op_store_bl,	  2,   1, 255, 0xff, 0x01, 0x00, 0x01}, // store.bl c b  
	{0xe14b, &op_store_bl,	  3,   1, 255, 0xff, 0x01, 0x00, 0x01}, // store.bl d b  
	{0xe14c, &op_store_bl,	  4,   1, 255, 0xff, 0x01, 0x00, 0x01}, // store.bl e b  
	{0xe14d, &op_store_bl,	  5,   1, 255, 0xff, 0x01, 0x00, 0x01}, // store.bl f b  
	{0xe14e, &op_store_bl,	  6,   1, 255, 0xff, 0x01, 0x00, 0x01}, // store.bl g b  
	{0xe14f, &op_store_bl,	  7,   1, 255, 0xff, 0x01, 0x00, 0x01}, // store.bl h b  
	{0xe150, &op_store_bl,	  0,   2, 255, 0xff, 0x01, 0x00, 0x01}, // store.bl a c  
	{0xe151, &op_store_bl,	  1,   2, 255, 0xff, 0x01, 0x00, 0x01}, // store.bl b c  
	{0xe152, &op_store_bl,	  2,   2, 255, 0xff, 0x01, 0x00, 0x01}, // store.bl c c  
	{0xe153, &op_store_bl,	  3,   2, 255, 0xff, 0x01, 0x00, 0x01}, // store.bl d c  
	{0xe154, &op_store_bl,	  4,   2, 255, 0xff, 0x01, 0x00, 0x01}, // store.bl e c  
	{0xe155, &op_store_bl,	  5,   2, 255, 0xff, 0x01, 0x00, 0x01}, // store.bl f c  
	{0xe156, &op_store_bl,	  6,   2, 255, 0xff, 0x01, 0x00, 0x01}, // store.bl g c  
	{0xe157, &op_store_bl,	  7,   2, 255, 0xff, 0x01, 0x00, 0x01}, // store.bl h c  
	{0xe158, &op_store_bl,	  0,   3, 255, 0xff, 0x01, 0x00, 0x01}, // store.bl a d  
	{0xe159, &op_store_bl,	  1,   3, 255, 0xff, 0x01, 0x00, 0x01}, // store.bl b d  
	{0xe15a, &op_store_bl,	  2,   3, 255, 0xff, 0x01, 0x00, 0x01}, // store.bl c d  
	{0xe15b, &op_store_bl,	  3,   3, 255, 0xff, 0x01, 0x00, 0x01}, // store.bl d d  
	{0xe15c, &op_store_bl,	  4,   3, 255, 0xff, 0x01, 0x00, 0x01}, // store.bl e d  
	{0xe15d, &op_store_bl,	  5,   3, 255, 0xff, 0x01, 0x00, 0x01}, // store.bl f d  
	{0xe15e, &op_store_bl,	  6,   3, 255, 0xff, 0x01, 0x00, 0x01}, // store.bl g d  
	{0xe15f, &op_store_bl,	  7,   3, 255, 0xff, 0x01, 0x00, 0x01}, // store.bl h d  
	{0xe160, &op_store_bl,	  0,   4, 255, 0xff, 0x01, 0x00, 0x01}, // store.bl a e  
	{0xe161, &op_store_bl,	  1,   4, 255, 0xff, 0x01, 0x00, 0x01}, // store.bl b e  
	{0xe162, &op_store_bl,	  2,   4, 255, 0xff, 0x01, 0x00, 0x01}, // store.bl c e  
	{0xe163, &op_store_bl,	  3,   4, 255, 0xff, 0x01, 0x00, 0x01}, // store.bl d e  
	{0xe164, &op_store_bl,	  4,   4, 255, 0xff, 0x01, 0x00, 0x01}, // store.bl e e  
	{0xe165, &op_store_bl,	  5,   4, 255, 0xff, 0x01, 0x00, 0x01}, // store.bl f e  
	{0xe166, &op_store_bl,	  6,   4, 255, 0xff, 0x01, 0x00, 0x01}, // store.bl g e  
	{0xe167, &op_store_bl,	  7,   4, 255, 0xff, 0x01, 0x00, 0x01}, // store.bl h e  
	{0xe168, &op_store_bl,	  0,   5, 255, 0xff, 0x01, 0x00, 0x01}, // store.bl a f  
	{0xe169, &op_store_bl,	  1,   5, 255, 0xff, 0x01, 0x00, 0x01}, // store.bl b f  
	{0xe16a, &op_store_bl,	  2,   5, 255, 0xff, 0x01, 0x00, 0x01}, // store.bl c f  
	{0xe16b, &op_store_bl,	  3,   5, 255, 0xff, 0x01, 0x00, 0x01}, // store.bl d f  
	{0xe16c, &op_store_bl,	  4,   5, 255, 0xff, 0x01, 0x00, 0x01}, // store.bl e f  
	{0xe16d, &op_store_bl,	  5,   5, 255, 0xff, 0x01, 0x00, 0x01}, // store.bl f f  
	{0xe16e, &op_store_bl,	  6,   5, 255, 0xff, 0x01, 0x00, 0x01}, // store.bl g f  
	{0xe16f, &op_store_bl,	  7,   5, 255, 0xff, 0x01, 0x00, 0x01}, // store.bl h f  
	{0xe170, &op_store_bl,	  0,   6, 255, 0xff, 0x01, 0x00, 0x01}, // store.bl a g  
	{0xe171, &op_store_bl,	  1,   6, 255, 0xff, 0x01, 0x00, 0x01}, // store.bl b g  
	{0xe172, &op_store_bl,	  2,   6, 255, 0xff, 0x01, 0x00, 0x01}, // store.bl c g  
	{0xe173, &op_store_bl,	  3,   6, 255, 0xff, 0x01, 0x00, 0x01}, // store.bl d g  
	{0xe174, &op_store_bl,	  4,   6, 255, 0xff, 0x01, 0x00, 0x01}, // store.bl e g  
	{0xe175, &op_store_bl,	  5,   6, 255, 0xff, 0x01, 0x00, 0x01}, // store.bl f g  
	{0xe176, &op_store_bl,	  6,   6, 255, 0xff, 0x01, 0x00, 0x01}, // store.bl g g  
	{0xe177, &op_store_bl,	  7,   6, 255, 0xff, 0x01, 0x00, 0x01}, // store.bl h g  
	{0xe178, &op_store_bl,	  0,   7, 255, 0xff, 0x01, 0x00, 0x01}, // store.bl a h  
	{0xe179, &op_store_bl,	  1,   7, 255, 0xff, 0x01, 0x00, 0x01}, // store.bl b h  
	{0xe17a, &op_store_bl,	  2,   7, 255, 0xff, 0x01, 0x00, 0x01}, // store.bl c h  
	{0xe17b, &op_store_bl,	  3,   7, 255, 0xff, 0x01, 0x00, 0x01}, // store.bl d h  
	{0xe17c, &op_store_bl,	  4,   7, 255, 0xff, 0x01, 0x00, 0x01}, // store.bl e h  
	{0xe17d, &op_store_bl,	  5,   7, 255, 0xff, 0x01, 0x00, 0x01}, // store.bl f h  
	{0xe17e, &op_store_bl,	  6,   7, 255, 0xff, 0x01, 0x00, 0x01}, // store.bl g h  
	{0xe17f, &op_store_bl,	  7,   7, 255, 0xff, 0x01, 0x00, 0x01}, // store.bl h h  
	{0xe180, &op_store_bh,	  0,   0, 255, 0xff, 0x01, 0x00, 0x01}, // store.bh a a  
	{0xe181, &op_store_bh,	  1,   0, 255, 0xff, 0x01, 0x00, 0x01}, // store.bh b a  
	{0xe182, &op_store_bh,	  2,   0, 255, 0xff, 0x01, 0x00, 0x01}, // store.bh c a  
	{0xe183, &op_store_bh,	  3,   0, 255, 0xff, 0x01, 0x00, 0x01}, // store.bh d a  
	{0xe184, &op_store_bh,	  4,   0, 255, 0xff, 0x01, 0x00, 0x01}, // store.bh e a  
	{0xe185, &op_store_bh,	  5,   0, 255, 0xff, 0x01, 0x00, 0x01}, // store.bh f a  
	{0xe186, &op_store_bh,	  6,   0, 255, 0xff, 0x01, 0x00, 0x01}, // store.bh g a  
	{0xe187, &op_store_bh,	  7,   0, 255, 0xff, 0x01, 0x00, 0x01}, // store.bh h a  
	{0xe188, &op_store_bh,	  0,   1, 255, 0xff, 0x01, 0x00, 0x01}, // store.bh a b  
	{0xe189, &op_store_bh,	  1,   1, 255, 0xff, 0x01, 0x00, 0x01}, // store.bh b b  
	{0xe18a, &op_store_bh,	  2,   1, 255, 0xff, 0x01, 0x00, 0x01}, // store.bh c b  
	{0xe18b, &op_store_bh,	  3,   1, 255, 0xff, 0x01, 0x00, 0x01}, // store.bh d b  
	{0xe18c, &op_store_bh,	  4,   1, 255, 0xff, 0x01, 0x00, 0x01}, // store.bh e b  
	{0xe18d, &op_store_bh,	  5,   1, 255, 0xff, 0x01, 0x00, 0x01}, // store.bh f b  
	{0xe18e, &op_store_bh,	  6,   1, 255, 0xff, 0x01, 0x00, 0x01}, // store.bh g b  
	{0xe18f, &op_store_bh,	  7,   1, 255, 0xff, 0x01, 0x00, 0x01}, // store.bh h b  
	{0xe190, &op_store_bh,	  0,   2, 255, 0xff, 0x01, 0x00, 0x01}, // store.bh a c  
	{0xe191, &op_store_bh,	  1,   2, 255, 0xff, 0x01, 0x00, 0x01}, // store.bh b c  
	{0xe192, &op_store_bh,	  2,   2, 255, 0xff, 0x01, 0x00, 0x01}, // store.bh c c  
	{0xe193, &op_store_bh,	  3,   2, 255, 0xff, 0x01, 0x00, 0x01}, // store.bh d c  
	{0xe194, &op_store_bh,	  4,   2, 255, 0xff, 0x01, 0x00, 0x01}, // store.bh e c  
	{0xe195, &op_store_bh,	  5,   2, 255, 0xff, 0x01, 0x00, 0x01}, // store.bh f c  
	{0xe196, &op_store_bh,	  6,   2, 255, 0xff, 0x01, 0x00, 0x01}, // store.bh g c  
	{0xe197, &op_store_bh,	  7,   2, 255, 0xff, 0x01, 0x00, 0x01}, // store.bh h c  
	{0xe198, &op_store_bh,	  0,   3, 255, 0xff, 0x01, 0x00, 0x01}, // store.bh a d  
	{0xe199, &op_store_bh,	  1,   3, 255, 0xff, 0x01, 0x00, 0x01}, // store.bh b d  
	{0xe19a, &op_store_bh,	  2,   3, 255, 0xff, 0x01, 0x00, 0x01}, // store.bh c d  
	{0xe19b, &op_store_bh,	  3,   3, 255, 0xff, 0x01, 0x00, 0x01}, // store.bh d d  
	{0xe19c, &op_store_bh,	  4,   3, 255, 0xff, 0x01, 0x00, 0x01}, // store.bh e d  
	{0xe19d, &op_store_bh,	  5,   3, 255, 0xff, 0x01, 0x00, 0x01}, // store.bh f d  
	{0xe19e, &op_store_bh,	  6,   3, 255, 0xff, 0x01, 0x00, 0x01}, // store.bh g d  
	{0xe19f, &op_store_bh,	  7,   3, 255, 0xff, 0x01, 0x00, 0x01}, // store.bh h d  
	{0xe1a0, &op_store_bh,	  0,   4, 255, 0xff, 0x01, 0x00, 0x01}, // store.bh a e  
	{0xe1a1, &op_store_bh,	  1,   4, 255, 0xff, 0x01, 0x00, 0x01}, // store.bh b e  
	{0xe1a2, &op_store_bh,	  2,   4, 255, 0xff, 0x01, 0x00, 0x01}, // store.bh c e  
	{0xe1a3, &op_store_bh,	  3,   4, 255, 0xff, 0x01, 0x00, 0x01}, // store.bh d e  
	{0xe1a4, &op_store_bh,	  4,   4, 255, 0xff, 0x01, 0x00, 0x01}, // store.bh e e  
	{0xe1a5, &op_store_bh,	  5,   4, 255, 0xff, 0x01, 0x00, 0x01}, // store.bh f e  
	{0xe1a6, &op_store_bh,	  6,   4, 255, 0xff, 0x01, 0x00, 0x01}, // store.bh g e  
	{0xe1a7, &op_store_bh,	  7,   4, 255, 0xff, 0x01, 0x00, 0x01}, // store.bh h e  
	{0xe1a8, &op_store_bh,	  0,   5, 255, 0xff, 0x01, 0x00, 0x01}, // store.bh a f  
	{0xe1a9, &op_store_bh,	  1,   5, 255, 0xff, 0x01, 0x00, 0x01}, // store.bh b f  
	{0xe1aa, &op_store_bh,	  2,   5, 255, 0xff, 0x01, 0x00, 0x01}, // store.bh c f  
	{0xe1ab, &op_store_bh,	  3,   5, 255, 0xff, 0x01, 0x00, 0x01}, // store.bh d f  
	{0xe1ac, &op_store_bh,	  4,   5, 255, 0xff, 0x01, 0x00, 0x01}, // store.bh e f  
	{0xe1ad, &op_store_bh,	  5,   5, 255, 0xff, 0x01, 0x00, 0x01}, // store.bh f f  
	{0xe1ae, &op_store_bh,	  6,   5, 255, 0xff, 0x01, 0x00, 0x01}, // store.bh g f  
	{0xe1af, &op_store_bh,	  7,   5, 255, 0xff, 0x01, 0x00, 0x01}, // store.bh h f  
	{0xe1b0, &op_store_bh,	  0,   6, 255, 0xff, 0x01, 0x00, 0x01}, // store.bh a g  
	{0xe1b1, &op_store_bh,	  1,   6, 255, 0xff, 0x01, 0x00, 0x01}, // store.bh b g  
	{0xe1b2, &op_store_bh,	  2,   6, 255, 0xff, 0x01, 0x00, 0x01}, // store.bh c g  
	{0xe1b3, &op_store_bh,	  3,   6, 255, 0xff, 0x01, 0x00, 0x01}, // store.bh d g  
	{0xe1b4, &op_store_bh,	  4,   6, 255, 0xff, 0x01, 0x00, 0x01}, // store.bh e g  
	{0xe1b5, &op_store_bh,	  5,   6, 255, 0xff, 0x01, 0x00, 0x01}, // store.bh f g  
	{0xe1b6, &op_store_bh,	  6,   6, 255, 0xff, 0x01, 0x00, 0x01}, // store.bh g g  
	{0xe1b7, &op_store_bh,	  7,   6, 255, 0xff, 0x01, 0x00, 0x01}, // store.bh h g  
	{0xe1b8, &op_store_bh,	  0,   7, 255, 0xff, 0x01, 0x00, 0x01}, // store.bh a h  
	{0xe1b9, &op_store_bh,	  1,   7, 255, 0xff, 0x01, 0x00, 0x01}, // store.bh b h  
	{0xe1ba, &op_store_bh,	  2,   7, 255, 0xff, 0x01, 0x00, 0x01}, // store.bh c h  
	{0xe1bb, &op_store_bh,	  3,   7, 255, 0xff, 0x01, 0x00, 0x01}, // store.bh d h  
	{0xe1bc, &op_store_bh,	  4,   7, 255, 0xff, 0x01, 0x00, 0x01}, // store.bh e h  
	{0xe1bd, &op_store_bh,	  5,   7, 255, 0xff, 0x01, 0x00, 0x01}, // store.bh f h  
	{0xe1be, &op_store_bh,	  6,   7, 255, 0xff, 0x01, 0x00, 0x01}, // store.bh g h  
	{0xe1bf, &op_store_bh,	  7,   7, 255, 0xff, 0x01, 0x00, 0x01}, // store.bh h h  
	{0xe200, &op_strcat,	  0,   0,   0, 0xff, 0x01, 0x00, 0x04}, // strcat a a a 
	{0xe201, &op_strcat,	  1,   0,   0, 0xff, 0x01, 0x00, 0x04}, // strcat b a a 
	{0xe202, &op_strcat,	  2,   0,   0, 0xff, 0x01, 0x00, 0x04}, // strcat c a a 
	{0xe203, &op_strcat,	  3,   0,   0, 0xff, 0x01, 0x00, 0x04}, // strcat d a a 
	{0xe204, &op_strcat,	  4,   0,   0, 0xff, 0x01, 0x00, 0x04}, // strcat e a a 
	{0xe205, &op_strcat,	  5,   0,   0, 0xff, 0x01, 0x00, 0x04}, // strcat f a a 
	{0xe206, &op_strcat,	  6,   0,   0, 0xff, 0x01, 0x00, 0x04}, // strcat g a a 
	{0xe207, &op_strcat,	  7,   0,   0, 0xff, 0x01, 0x00, 0x04}, // strcat h a a 
	{0xe208, &op_strcat,	  0,   1,   0, 0xff, 0x01, 0x00, 0x04}, // strcat a b a 
	{0xe209, &op_strcat,	  1,   1,   0, 0xff, 0x01, 0x00, 0x04}, // strcat b b a 
	{0xe20a, &op_strcat,	  2,   1,   0, 0xff, 0x01, 0x00, 0x04}, // strcat c b a 
	{0xe20b, &op_strcat,	  3,   1,   0, 0xff, 0x01, 0x00, 0x04}, // strcat d b a 
	{0xe20c, &op_strcat,	  4,   1,   0, 0xff, 0x01, 0x00, 0x04}, // strcat e b a 
	{0xe20d, &op_strcat,	  5,   1,   0, 0xff, 0x01, 0x00, 0x04}, // strcat f b a 
	{0xe20e, &op_strcat,	  6,   1,   0, 0xff, 0x01, 0x00, 0x04}, // strcat g b a 
	{0xe20f, &op_strcat,	  7,   1,   0, 0xff, 0x01, 0x00, 0x04}, // strcat h b a 
	{0xe210, &op_strcat,	  0,   2,   0, 0xff, 0x01, 0x00, 0x04}, // strcat a c a 
	{0xe211, &op_strcat,	  1,   2,   0, 0xff, 0x01, 0x00, 0x04}, // strcat b c a 
	{0xe212, &op_strcat,	  2,   2,   0, 0xff, 0x01, 0x00, 0x04}, // strcat c c a 
	{0xe213, &op_strcat,	  3,   2,   0, 0xff, 0x01, 0x00, 0x04}, // strcat d c a 
	{0xe214, &op_strcat,	  4,   2,   0, 0xff, 0x01, 0x00, 0x04}, // strcat e c a 
	{0xe215, &op_strcat,	  5,   2,   0, 0xff, 0x01, 0x00, 0x04}, // strcat f c a 
	{0xe216, &op_strcat,	  6,   2,   0, 0xff, 0x01, 0x00, 0x04}, // strcat g c a 
	{0xe217, &op_strcat,	  7,   2,   0, 0xff, 0x01, 0x00, 0x04}, // strcat h c a 
	{0xe218, &op_strcat,	  0,   3,   0, 0xff, 0x01, 0x00, 0x04}, // strcat a d a 
	{0xe219, &op_strcat,	  1,   3,   0, 0xff, 0x01, 0x00, 0x04}, // strcat b d a 
	{0xe21a, &op_strcat,	  2,   3,   0, 0xff, 0x01, 0x00, 0x04}, // strcat c d a 
	{0xe21b, &op_strcat,	  3,   3,   0, 0xff, 0x01, 0x00, 0x04}, // strcat d d a 
	{0xe21c, &op_strcat,	  4,   3,   0, 0xff, 0x01, 0x00, 0x04}, // strcat e d a 
	{0xe21d, &op_strcat,	  5,   3,   0, 0xff, 0x01, 0x00, 0x04}, // strcat f d a 
	{0xe21e, &op_strcat,	  6,   3,   0, 0xff, 0x01, 0x00, 0x04}, // strcat g d a 
	{0xe21f, &op_strcat,	  7,   3,   0, 0xff, 0x01, 0x00, 0x04}, // strcat h d a 
	{0xe220, &op_strcat,	  0,   4,   0, 0xff, 0x01, 0x00, 0x04}, // strcat a e a 
	{0xe221, &op_strcat,	  1,   4,   0, 0xff, 0x01, 0x00, 0x04}, // strcat b e a 
	{0xe222, &op_strcat,	  2,   4,   0, 0xff, 0x01, 0x00, 0x04}, // strcat c e a 
	{0xe223, &op_strcat,	  3,   4,   0, 0xff, 0x01, 0x00, 0x04}, // strcat d e a 
	{0xe224, &op_strcat,	  4,   4,   0, 0xff, 0x01, 0x00, 0x04}, // strcat e e a 
	{0xe225, &op_strcat,	  5,   4,   0, 0xff, 0x01, 0x00, 0x04}, // strcat f e a 
	{0xe226, &op_strcat,	  6,   4,   0, 0xff, 0x01, 0x00, 0x04}, // strcat g e a 
	{0xe227, &op_strcat,	  7,   4,   0, 0xff, 0x01, 0x00, 0x04}, // strcat h e a 
	{0xe228, &op_strcat,	  0,   5,   0, 0xff, 0x01, 0x00, 0x04}, // strcat a f a 
	{0xe229, &op_strcat,	  1,   5,   0, 0xff, 0x01, 0x00, 0x04}, // strcat b f a 
	{0xe22a, &op_strcat,	  2,   5,   0, 0xff, 0x01, 0x00, 0x04}, // strcat c f a 
	{0xe22b, &op_strcat,	  3,   5,   0, 0xff, 0x01, 0x00, 0x04}, // strcat d f a 
	{0xe22c, &op_strcat,	  4,   5,   0, 0xff, 0x01, 0x00, 0x04}, // strcat e f a 
	{0xe22d, &op_strcat,	  5,   5,   0, 0xff, 0x01, 0x00, 0x04}, // strcat f f a 
	{0xe22e, &op_strcat,	  6,   5,   0, 0xff, 0x01, 0x00, 0x04}, // strcat g f a 
	{0xe22f, &op_strcat,	  7,   5,   0, 0xff, 0x01, 0x00, 0x04}, // strcat h f a 
	{0xe230, &op_strcat,	  0,   6,   0, 0xff, 0x01, 0x00, 0x04}, // strcat a g a 
	{0xe231, &op_strcat,	  1,   6,   0, 0xff, 0x01, 0x00, 0x04}, // strcat b g a 
	{0xe232, &op_strcat,	  2,   6,   0, 0xff, 0x01, 0x00, 0x04}, // strcat c g a 
	{0xe233, &op_strcat,	  3,   6,   0, 0xff, 0x01, 0x00, 0x04}, // strcat d g a 
	{0xe234, &op_strcat,	  4,   6,   0, 0xff, 0x01, 0x00, 0x04}, // strcat e g a 
	{0xe235, &op_strcat,	  5,   6,   0, 0xff, 0x01, 0x00, 0x04}, // strcat f g a 
	{0xe236, &op_strcat,	  6,   6,   0, 0xff, 0x01, 0x00, 0x04}, // strcat g g a 
	{0xe237, &op_strcat,	  7,   6,   0, 0xff, 0x01, 0x00, 0x04}, // strcat h g a 
	{0xe238, &op_strcat,	  0,   7,   0, 0xff, 0x01, 0x00, 0x04}, // strcat a h a 
	{0xe239, &op_strcat,	  1,   7,   0, 0xff, 0x01, 0x00, 0x04}, // strcat b h a 
	{0xe23a, &op_strcat,	  2,   7,   0, 0xff, 0x01, 0x00, 0x04}, // strcat c h a 
	{0xe23b, &op_strcat,	  3,   7,   0, 0xff, 0x01, 0x00, 0x04}, // strcat d h a 
	{0xe23c, &op_strcat,	  4,   7,   0, 0xff, 0x01, 0x00, 0x04}, // strcat e h a 
	{0xe23d, &op_strcat,	  5,   7,   0, 0xff, 0x01, 0x00, 0x04}, // strcat f h a 
	{0xe23e, &op_strcat,	  6,   7,   0, 0xff, 0x01, 0x00, 0x04}, // strcat g h a 
	{0xe23f, &op_strcat,	  7,   7,   0, 0xff, 0x01, 0x00, 0x04}, // strcat h h a 
	{0xe240, &op_strcat,	  0,   0,   1, 0xff, 0x01, 0x00, 0x04}, // strcat a a b 
	{0xe241, &op_strcat,	  1,   0,   1, 0xff, 0x01, 0x00, 0x04}, // strcat b a b 
	{0xe242, &op_strcat,	  2,   0,   1, 0xff, 0x01, 0x00, 0x04}, // strcat c a b 
	{0xe243, &op_strcat,	  3,   0,   1, 0xff, 0x01, 0x00, 0x04}, // strcat d a b 
	{0xe244, &op_strcat,	  4,   0,   1, 0xff, 0x01, 0x00, 0x04}, // strcat e a b 
	{0xe245, &op_strcat,	  5,   0,   1, 0xff, 0x01, 0x00, 0x04}, // strcat f a b 
	{0xe246, &op_strcat,	  6,   0,   1, 0xff, 0x01, 0x00, 0x04}, // strcat g a b 
	{0xe247, &op_strcat,	  7,   0,   1, 0xff, 0x01, 0x00, 0x04}, // strcat h a b 
	{0xe248, &op_strcat,	  0,   1,   1, 0xff, 0x01, 0x00, 0x04}, // strcat a b b 
	{0xe249, &op_strcat,	  1,   1,   1, 0xff, 0x01, 0x00, 0x04}, // strcat b b b 
	{0xe24a, &op_strcat,	  2,   1,   1, 0xff, 0x01, 0x00, 0x04}, // strcat c b b 
	{0xe24b, &op_strcat,	  3,   1,   1, 0xff, 0x01, 0x00, 0x04}, // strcat d b b 
	{0xe24c, &op_strcat,	  4,   1,   1, 0xff, 0x01, 0x00, 0x04}, // strcat e b b 
	{0xe24d, &op_strcat,	  5,   1,   1, 0xff, 0x01, 0x00, 0x04}, // strcat f b b 
	{0xe24e, &op_strcat,	  6,   1,   1, 0xff, 0x01, 0x00, 0x04}, // strcat g b b 
	{0xe24f, &op_strcat,	  7,   1,   1, 0xff, 0x01, 0x00, 0x04}, // strcat h b b 
	{0xe250, &op_strcat,	  0,   2,   1, 0xff, 0x01, 0x00, 0x04}, // strcat a c b 
	{0xe251, &op_strcat,	  1,   2,   1, 0xff, 0x01, 0x00, 0x04}, // strcat b c b 
	{0xe252, &op_strcat,	  2,   2,   1, 0xff, 0x01, 0x00, 0x04}, // strcat c c b 
	{0xe253, &op_strcat,	  3,   2,   1, 0xff, 0x01, 0x00, 0x04}, // strcat d c b 
	{0xe254, &op_strcat,	  4,   2,   1, 0xff, 0x01, 0x00, 0x04}, // strcat e c b 
	{0xe255, &op_strcat,	  5,   2,   1, 0xff, 0x01, 0x00, 0x04}, // strcat f c b 
	{0xe256, &op_strcat,	  6,   2,   1, 0xff, 0x01, 0x00, 0x04}, // strcat g c b 
	{0xe257, &op_strcat,	  7,   2,   1, 0xff, 0x01, 0x00, 0x04}, // strcat h c b 
	{0xe258, &op_strcat,	  0,   3,   1, 0xff, 0x01, 0x00, 0x04}, // strcat a d b 
	{0xe259, &op_strcat,	  1,   3,   1, 0xff, 0x01, 0x00, 0x04}, // strcat b d b 
	{0xe25a, &op_strcat,	  2,   3,   1, 0xff, 0x01, 0x00, 0x04}, // strcat c d b 
	{0xe25b, &op_strcat,	  3,   3,   1, 0xff, 0x01, 0x00, 0x04}, // strcat d d b 
	{0xe25c, &op_strcat,	  4,   3,   1, 0xff, 0x01, 0x00, 0x04}, // strcat e d b 
	{0xe25d, &op_strcat,	  5,   3,   1, 0xff, 0x01, 0x00, 0x04}, // strcat f d b 
	{0xe25e, &op_strcat,	  6,   3,   1, 0xff, 0x01, 0x00, 0x04}, // strcat g d b 
	{0xe25f, &op_strcat,	  7,   3,   1, 0xff, 0x01, 0x00, 0x04}, // strcat h d b 
	{0xe260, &op_strcat,	  0,   4,   1, 0xff, 0x01, 0x00, 0x04}, // strcat a e b 
	{0xe261, &op_strcat,	  1,   4,   1, 0xff, 0x01, 0x00, 0x04}, // strcat b e b 
	{0xe262, &op_strcat,	  2,   4,   1, 0xff, 0x01, 0x00, 0x04}, // strcat c e b 
	{0xe263, &op_strcat,	  3,   4,   1, 0xff, 0x01, 0x00, 0x04}, // strcat d e b 
	{0xe264, &op_strcat,	  4,   4,   1, 0xff, 0x01, 0x00, 0x04}, // strcat e e b 
	{0xe265, &op_strcat,	  5,   4,   1, 0xff, 0x01, 0x00, 0x04}, // strcat f e b 
	{0xe266, &op_strcat,	  6,   4,   1, 0xff, 0x01, 0x00, 0x04}, // strcat g e b 
	{0xe267, &op_strcat,	  7,   4,   1, 0xff, 0x01, 0x00, 0x04}, // strcat h e b 
	{0xe268, &op_strcat,	  0,   5,   1, 0xff, 0x01, 0x00, 0x04}, // strcat a f b 
	{0xe269, &op_strcat,	  1,   5,   1, 0xff, 0x01, 0x00, 0x04}, // strcat b f b 
	{0xe26a, &op_strcat,	  2,   5,   1, 0xff, 0x01, 0x00, 0x04}, // strcat c f b 
	{0xe26b, &op_strcat,	  3,   5,   1, 0xff, 0x01, 0x00, 0x04}, // strcat d f b 
	{0xe26c, &op_strcat,	  4,   5,   1, 0xff, 0x01, 0x00, 0x04}, // strcat e f b 
	{0xe26d, &op_strcat,	  5,   5,   1, 0xff, 0x01, 0x00, 0x04}, // strcat f f b 
	{0xe26e, &op_strcat,	  6,   5,   1, 0xff, 0x01, 0x00, 0x04}, // strcat g f b 
	{0xe26f, &op_strcat,	  7,   5,   1, 0xff, 0x01, 0x00, 0x04}, // strcat h f b 
	{0xe270, &op_strcat,	  0,   6,   1, 0xff, 0x01, 0x00, 0x04}, // strcat a g b 
	{0xe271, &op_strcat,	  1,   6,   1, 0xff, 0x01, 0x00, 0x04}, // strcat b g b 
	{0xe272, &op_strcat,	  2,   6,   1, 0xff, 0x01, 0x00, 0x04}, // strcat c g b 
	{0xe273, &op_strcat,	  3,   6,   1, 0xff, 0x01, 0x00, 0x04}, // strcat d g b 
	{0xe274, &op_strcat,	  4,   6,   1, 0xff, 0x01, 0x00, 0x04}, // strcat e g b 
	{0xe275, &op_strcat,	  5,   6,   1, 0xff, 0x01, 0x00, 0x04}, // strcat f g b 
	{0xe276, &op_strcat,	  6,   6,   1, 0xff, 0x01, 0x00, 0x04}, // strcat g g b 
	{0xe277, &op_strcat,	  7,   6,   1, 0xff, 0x01, 0x00, 0x04}, // strcat h g b 
	{0xe278, &op_strcat,	  0,   7,   1, 0xff, 0x01, 0x00, 0x04}, // strcat a h b 
	{0xe279, &op_strcat,	  1,   7,   1, 0xff, 0x01, 0x00, 0x04}, // strcat b h b 
	{0xe27a, &op_strcat,	  2,   7,   1, 0xff, 0x01, 0x00, 0x04}, // strcat c h b 
	{0xe27b, &op_strcat,	  3,   7,   1, 0xff, 0x01, 0x00, 0x04}, // strcat d h b 
	{0xe27c, &op_strcat,	  4,   7,   1, 0xff, 0x01, 0x00, 0x04}, // strcat e h b 
	{0xe27d, &op_strcat,	  5,   7,   1, 0xff, 0x01, 0x00, 0x04}, // strcat f h b 
	{0xe27e, &op_strcat,	  6,   7,   1, 0xff, 0x01, 0x00, 0x04}, // strcat g h b 
	{0xe27f, &op_strcat,	  7,   7,   1, 0xff, 0x01, 0x00, 0x04}, // strcat h h b 
	{0xe280, &op_strcat,	  0,   0,   2, 0xff, 0x01, 0x00, 0x04}, // strcat a a c 
	{0xe281, &op_strcat,	  1,   0,   2, 0xff, 0x01, 0x00, 0x04}, // strcat b a c 
	{0xe282, &op_strcat,	  2,   0,   2, 0xff, 0x01, 0x00, 0x04}, // strcat c a c 
	{0xe283, &op_strcat,	  3,   0,   2, 0xff, 0x01, 0x00, 0x04}, // strcat d a c 
	{0xe284, &op_strcat,	  4,   0,   2, 0xff, 0x01, 0x00, 0x04}, // strcat e a c 
	{0xe285, &op_strcat,	  5,   0,   2, 0xff, 0x01, 0x00, 0x04}, // strcat f a c 
	{0xe286, &op_strcat,	  6,   0,   2, 0xff, 0x01, 0x00, 0x04}, // strcat g a c 
	{0xe287, &op_strcat,	  7,   0,   2, 0xff, 0x01, 0x00, 0x04}, // strcat h a c 
	{0xe288, &op_strcat,	  0,   1,   2, 0xff, 0x01, 0x00, 0x04}, // strcat a b c 
	{0xe289, &op_strcat,	  1,   1,   2, 0xff, 0x01, 0x00, 0x04}, // strcat b b c 
	{0xe28a, &op_strcat,	  2,   1,   2, 0xff, 0x01, 0x00, 0x04}, // strcat c b c 
	{0xe28b, &op_strcat,	  3,   1,   2, 0xff, 0x01, 0x00, 0x04}, // strcat d b c 
	{0xe28c, &op_strcat,	  4,   1,   2, 0xff, 0x01, 0x00, 0x04}, // strcat e b c 
	{0xe28d, &op_strcat,	  5,   1,   2, 0xff, 0x01, 0x00, 0x04}, // strcat f b c 
	{0xe28e, &op_strcat,	  6,   1,   2, 0xff, 0x01, 0x00, 0x04}, // strcat g b c 
	{0xe28f, &op_strcat,	  7,   1,   2, 0xff, 0x01, 0x00, 0x04}, // strcat h b c 
	{0xe290, &op_strcat,	  0,   2,   2, 0xff, 0x01, 0x00, 0x04}, // strcat a c c 
	{0xe291, &op_strcat,	  1,   2,   2, 0xff, 0x01, 0x00, 0x04}, // strcat b c c 
	{0xe292, &op_strcat,	  2,   2,   2, 0xff, 0x01, 0x00, 0x04}, // strcat c c c 
	{0xe293, &op_strcat,	  3,   2,   2, 0xff, 0x01, 0x00, 0x04}, // strcat d c c 
	{0xe294, &op_strcat,	  4,   2,   2, 0xff, 0x01, 0x00, 0x04}, // strcat e c c 
	{0xe295, &op_strcat,	  5,   2,   2, 0xff, 0x01, 0x00, 0x04}, // strcat f c c 
	{0xe296, &op_strcat,	  6,   2,   2, 0xff, 0x01, 0x00, 0x04}, // strcat g c c 
	{0xe297, &op_strcat,	  7,   2,   2, 0xff, 0x01, 0x00, 0x04}, // strcat h c c 
	{0xe298, &op_strcat,	  0,   3,   2, 0xff, 0x01, 0x00, 0x04}, // strcat a d c 
	{0xe299, &op_strcat,	  1,   3,   2, 0xff, 0x01, 0x00, 0x04}, // strcat b d c 
	{0xe29a, &op_strcat,	  2,   3,   2, 0xff, 0x01, 0x00, 0x04}, // strcat c d c 
	{0xe29b, &op_strcat,	  3,   3,   2, 0xff, 0x01, 0x00, 0x04}, // strcat d d c 
	{0xe29c, &op_strcat,	  4,   3,   2, 0xff, 0x01, 0x00, 0x04}, // strcat e d c 
	{0xe29d, &op_strcat,	  5,   3,   2, 0xff, 0x01, 0x00, 0x04}, // strcat f d c 
	{0xe29e, &op_strcat,	  6,   3,   2, 0xff, 0x01, 0x00, 0x04}, // strcat g d c 
	{0xe29f, &op_strcat,	  7,   3,   2, 0xff, 0x01, 0x00, 0x04}, // strcat h d c 
	{0xe2a0, &op_strcat,	  0,   4,   2, 0xff, 0x01, 0x00, 0x04}, // strcat a e c 
	{0xe2a1, &op_strcat,	  1,   4,   2, 0xff, 0x01, 0x00, 0x04}, // strcat b e c 
	{0xe2a2, &op_strcat,	  2,   4,   2, 0xff, 0x01, 0x00, 0x04}, // strcat c e c 
	{0xe2a3, &op_strcat,	  3,   4,   2, 0xff, 0x01, 0x00, 0x04}, // strcat d e c 
	{0xe2a4, &op_strcat,	  4,   4,   2, 0xff, 0x01, 0x00, 0x04}, // strcat e e c 
	{0xe2a5, &op_strcat,	  5,   4,   2, 0xff, 0x01, 0x00, 0x04}, // strcat f e c 
	{0xe2a6, &op_strcat,	  6,   4,   2, 0xff, 0x01, 0x00, 0x04}, // strcat g e c 
	{0xe2a7, &op_strcat,	  7,   4,   2, 0xff, 0x01, 0x00, 0x04}, // strcat h e c 
	{0xe2a8, &op_strcat,	  0,   5,   2, 0xff, 0x01, 0x00, 0x04}, // strcat a f c 
	{0xe2a9, &op_strcat,	  1,   5,   2, 0xff, 0x01, 0x00, 0x04}, // strcat b f c 
	{0xe2aa, &op_strcat,	  2,   5,   2, 0xff, 0x01, 0x00, 0x04}, // strcat c f c 
	{0xe2ab, &op_strcat,	  3,   5,   2, 0xff, 0x01, 0x00, 0x04}, // strcat d f c 
	{0xe2ac, &op_strcat,	  4,   5,   2, 0xff, 0x01, 0x00, 0x04}, // strcat e f c 
	{0xe2ad, &op_strcat,	  5,   5,   2, 0xff, 0x01, 0x00, 0x04}, // strcat f f c 
	{0xe2ae, &op_strcat,	  6,   5,   2, 0xff, 0x01, 0x00, 0x04}, // strcat g f c 
	{0xe2af, &op_strcat,	  7,   5,   2, 0xff, 0x01, 0x00, 0x04}, // strcat h f c 
	{0xe2b0, &op_strcat,	  0,   6,   2, 0xff, 0x01, 0x00, 0x04}, // strcat a g c 
	{0xe2b1, &op_strcat,	  1,   6,   2, 0xff, 0x01, 0x00, 0x04}, // strcat b g c 
	{0xe2b2, &op_strcat,	  2,   6,   2, 0xff, 0x01, 0x00, 0x04}, // strcat c g c 
	{0xe2b3, &op_strcat,	  3,   6,   2, 0xff, 0x01, 0x00, 0x04}, // strcat d g c 
	{0xe2b4, &op_strcat,	  4,   6,   2, 0xff, 0x01, 0x00, 0x04}, // strcat e g c 
	{0xe2b5, &op_strcat,	  5,   6,   2, 0xff, 0x01, 0x00, 0x04}, // strcat f g c 
	{0xe2b6, &op_strcat,	  6,   6,   2, 0xff, 0x01, 0x00, 0x04}, // strcat g g c 
	{0xe2b7, &op_strcat,	  7,   6,   2, 0xff, 0x01, 0x00, 0x04}, // strcat h g c 
	{0xe2b8, &op_strcat,	  0,   7,   2, 0xff, 0x01, 0x00, 0x04}, // strcat a h c 
	{0xe2b9, &op_strcat,	  1,   7,   2, 0xff, 0x01, 0x00, 0x04}, // strcat b h c 
	{0xe2ba, &op_strcat,	  2,   7,   2, 0xff, 0x01, 0x00, 0x04}, // strcat c h c 
	{0xe2bb, &op_strcat,	  3,   7,   2, 0xff, 0x01, 0x00, 0x04}, // strcat d h c 
	{0xe2bc, &op_strcat,	  4,   7,   2, 0xff, 0x01, 0x00, 0x04}, // strcat e h c 
	{0xe2bd, &op_strcat,	  5,   7,   2, 0xff, 0x01, 0x00, 0x04}, // strcat f h c 
	{0xe2be, &op_strcat,	  6,   7,   2, 0xff, 0x01, 0x00, 0x04}, // strcat g h c 
	{0xe2bf, &op_strcat,	  7,   7,   2, 0xff, 0x01, 0x00, 0x04}, // strcat h h c 
	{0xe2c0, &op_strcat,	  0,   0,   3, 0xff, 0x01, 0x00, 0x04}, // strcat a a d 
	{0xe2c1, &op_strcat,	  1,   0,   3, 0xff, 0x01, 0x00, 0x04}, // strcat b a d 
	{0xe2c2, &op_strcat,	  2,   0,   3, 0xff, 0x01, 0x00, 0x04}, // strcat c a d 
	{0xe2c3, &op_strcat,	  3,   0,   3, 0xff, 0x01, 0x00, 0x04}, // strcat d a d 
	{0xe2c4, &op_strcat,	  4,   0,   3, 0xff, 0x01, 0x00, 0x04}, // strcat e a d 
	{0xe2c5, &op_strcat,	  5,   0,   3, 0xff, 0x01, 0x00, 0x04}, // strcat f a d 
	{0xe2c6, &op_strcat,	  6,   0,   3, 0xff, 0x01, 0x00, 0x04}, // strcat g a d 
	{0xe2c7, &op_strcat,	  7,   0,   3, 0xff, 0x01, 0x00, 0x04}, // strcat h a d 
	{0xe2c8, &op_strcat,	  0,   1,   3, 0xff, 0x01, 0x00, 0x04}, // strcat a b d 
	{0xe2c9, &op_strcat,	  1,   1,   3, 0xff, 0x01, 0x00, 0x04}, // strcat b b d 
	{0xe2ca, &op_strcat,	  2,   1,   3, 0xff, 0x01, 0x00, 0x04}, // strcat c b d 
	{0xe2cb, &op_strcat,	  3,   1,   3, 0xff, 0x01, 0x00, 0x04}, // strcat d b d 
	{0xe2cc, &op_strcat,	  4,   1,   3, 0xff, 0x01, 0x00, 0x04}, // strcat e b d 
	{0xe2cd, &op_strcat,	  5,   1,   3, 0xff, 0x01, 0x00, 0x04}, // strcat f b d 
	{0xe2ce, &op_strcat,	  6,   1,   3, 0xff, 0x01, 0x00, 0x04}, // strcat g b d 
	{0xe2cf, &op_strcat,	  7,   1,   3, 0xff, 0x01, 0x00, 0x04}, // strcat h b d 
	{0xe2d0, &op_strcat,	  0,   2,   3, 0xff, 0x01, 0x00, 0x04}, // strcat a c d 
	{0xe2d1, &op_strcat,	  1,   2,   3, 0xff, 0x01, 0x00, 0x04}, // strcat b c d 
	{0xe2d2, &op_strcat,	  2,   2,   3, 0xff, 0x01, 0x00, 0x04}, // strcat c c d 
	{0xe2d3, &op_strcat,	  3,   2,   3, 0xff, 0x01, 0x00, 0x04}, // strcat d c d 
	{0xe2d4, &op_strcat,	  4,   2,   3, 0xff, 0x01, 0x00, 0x04}, // strcat e c d 
	{0xe2d5, &op_strcat,	  5,   2,   3, 0xff, 0x01, 0x00, 0x04}, // strcat f c d 
	{0xe2d6, &op_strcat,	  6,   2,   3, 0xff, 0x01, 0x00, 0x04}, // strcat g c d 
	{0xe2d7, &op_strcat,	  7,   2,   3, 0xff, 0x01, 0x00, 0x04}, // strcat h c d 
	{0xe2d8, &op_strcat,	  0,   3,   3, 0xff, 0x01, 0x00, 0x04}, // strcat a d d 
	{0xe2d9, &op_strcat,	  1,   3,   3, 0xff, 0x01, 0x00, 0x04}, // strcat b d d 
	{0xe2da, &op_strcat,	  2,   3,   3, 0xff, 0x01, 0x00, 0x04}, // strcat c d d 
	{0xe2db, &op_strcat,	  3,   3,   3, 0xff, 0x01, 0x00, 0x04}, // strcat d d d 
	{0xe2dc, &op_strcat,	  4,   3,   3, 0xff, 0x01, 0x00, 0x04}, // strcat e d d 
	{0xe2dd, &op_strcat,	  5,   3,   3, 0xff, 0x01, 0x00, 0x04}, // strcat f d d 
	{0xe2de, &op_strcat,	  6,   3,   3, 0xff, 0x01, 0x00, 0x04}, // strcat g d d 
	{0xe2df, &op_strcat,	  7,   3,   3, 0xff, 0x01, 0x00, 0x04}, // strcat h d d 
	{0xe2e0, &op_strcat,	  0,   4,   3, 0xff, 0x01, 0x00, 0x04}, // strcat a e d 
	{0xe2e1, &op_strcat,	  1,   4,   3, 0xff, 0x01, 0x00, 0x04}, // strcat b e d 
	{0xe2e2, &op_strcat,	  2,   4,   3, 0xff, 0x01, 0x00, 0x04}, // strcat c e d 
	{0xe2e3, &op_strcat,	  3,   4,   3, 0xff, 0x01, 0x00, 0x04}, // strcat d e d 
	{0xe2e4, &op_strcat,	  4,   4,   3, 0xff, 0x01, 0x00, 0x04}, // strcat e e d 
	{0xe2e5, &op_strcat,	  5,   4,   3, 0xff, 0x01, 0x00, 0x04}, // strcat f e d 
	{0xe2e6, &op_strcat,	  6,   4,   3, 0xff, 0x01, 0x00, 0x04}, // strcat g e d 
	{0xe2e7, &op_strcat,	  7,   4,   3, 0xff, 0x01, 0x00, 0x04}, // strcat h e d 
	{0xe2e8, &op_strcat,	  0,   5,   3, 0xff, 0x01, 0x00, 0x04}, // strcat a f d 
	{0xe2e9, &op_strcat,	  1,   5,   3, 0xff, 0x01, 0x00, 0x04}, // strcat b f d 
	{0xe2ea, &op_strcat,	  2,   5,   3, 0xff, 0x01, 0x00, 0x04}, // strcat c f d 
	{0xe2eb, &op_strcat,	  3,   5,   3, 0xff, 0x01, 0x00, 0x04}, // strcat d f d 
	{0xe2ec, &op_strcat,	  4,   5,   3, 0xff, 0x01, 0x00, 0x04}, // strcat e f d 
	{0xe2ed, &op_strcat,	  5,   5,   3, 0xff, 0x01, 0x00, 0x04}, // strcat f f d 
	{0xe2ee, &op_strcat,	  6,   5,   3, 0xff, 0x01, 0x00, 0x04}, // strcat g f d 
	{0xe2ef, &op_strcat,	  7,   5,   3, 0xff, 0x01, 0x00, 0x04}, // strcat h f d 
	{0xe2f0, &op_strcat,	  0,   6,   3, 0xff, 0x01, 0x00, 0x04}, // strcat a g d 
	{0xe2f1, &op_strcat,	  1,   6,   3, 0xff, 0x01, 0x00, 0x04}, // strcat b g d 
	{0xe2f2, &op_strcat,	  2,   6,   3, 0xff, 0x01, 0x00, 0x04}, // strcat c g d 
	{0xe2f3, &op_strcat,	  3,   6,   3, 0xff, 0x01, 0x00, 0x04}, // strcat d g d 
	{0xe2f4, &op_strcat,	  4,   6,   3, 0xff, 0x01, 0x00, 0x04}, // strcat e g d 
	{0xe2f5, &op_strcat,	  5,   6,   3, 0xff, 0x01, 0x00, 0x04}, // strcat f g d 
	{0xe2f6, &op_strcat,	  6,   6,   3, 0xff, 0x01, 0x00, 0x04}, // strcat g g d 
	{0xe2f7, &op_strcat,	  7,   6,   3, 0xff, 0x01, 0x00, 0x04}, // strcat h g d 
	{0xe2f8, &op_strcat,	  0,   7,   3, 0xff, 0x01, 0x00, 0x04}, // strcat a h d 
	{0xe2f9, &op_strcat,	  1,   7,   3, 0xff, 0x01, 0x00, 0x04}, // strcat b h d 
	{0xe2fa, &op_strcat,	  2,   7,   3, 0xff, 0x01, 0x00, 0x04}, // strcat c h d 
	{0xe2fb, &op_strcat,	  3,   7,   3, 0xff, 0x01, 0x00, 0x04}, // strcat d h d 
	{0xe2fc, &op_strcat,	  4,   7,   3, 0xff, 0x01, 0x00, 0x04}, // strcat e h d 
	{0xe2fd, &op_strcat,	  5,   7,   3, 0xff, 0x01, 0x00, 0x04}, // strcat f h d 
	{0xe2fe, &op_strcat,	  6,   7,   3, 0xff, 0x01, 0x00, 0x04}, // strcat g h d 
	{0xe2ff, &op_strcat,	  7,   7,   3, 0xff, 0x01, 0x00, 0x04}, // strcat h h d 
	{0xe300, &op_strcat,	  0,   0,   4, 0xff, 0x01, 0x00, 0x04}, // strcat a a e 
	{0xe301, &op_strcat,	  1,   0,   4, 0xff, 0x01, 0x00, 0x04}, // strcat b a e 
	{0xe302, &op_strcat,	  2,   0,   4, 0xff, 0x01, 0x00, 0x04}, // strcat c a e 
	{0xe303, &op_strcat,	  3,   0,   4, 0xff, 0x01, 0x00, 0x04}, // strcat d a e 
	{0xe304, &op_strcat,	  4,   0,   4, 0xff, 0x01, 0x00, 0x04}, // strcat e a e 
	{0xe305, &op_strcat,	  5,   0,   4, 0xff, 0x01, 0x00, 0x04}, // strcat f a e 
	{0xe306, &op_strcat,	  6,   0,   4, 0xff, 0x01, 0x00, 0x04}, // strcat g a e 
	{0xe307, &op_strcat,	  7,   0,   4, 0xff, 0x01, 0x00, 0x04}, // strcat h a e 
	{0xe308, &op_strcat,	  0,   1,   4, 0xff, 0x01, 0x00, 0x04}, // strcat a b e 
	{0xe309, &op_strcat,	  1,   1,   4, 0xff, 0x01, 0x00, 0x04}, // strcat b b e 
	{0xe30a, &op_strcat,	  2,   1,   4, 0xff, 0x01, 0x00, 0x04}, // strcat c b e 
	{0xe30b, &op_strcat,	  3,   1,   4, 0xff, 0x01, 0x00, 0x04}, // strcat d b e 
	{0xe30c, &op_strcat,	  4,   1,   4, 0xff, 0x01, 0x00, 0x04}, // strcat e b e 
	{0xe30d, &op_strcat,	  5,   1,   4, 0xff, 0x01, 0x00, 0x04}, // strcat f b e 
	{0xe30e, &op_strcat,	  6,   1,   4, 0xff, 0x01, 0x00, 0x04}, // strcat g b e 
	{0xe30f, &op_strcat,	  7,   1,   4, 0xff, 0x01, 0x00, 0x04}, // strcat h b e 
	{0xe310, &op_strcat,	  0,   2,   4, 0xff, 0x01, 0x00, 0x04}, // strcat a c e 
	{0xe311, &op_strcat,	  1,   2,   4, 0xff, 0x01, 0x00, 0x04}, // strcat b c e 
	{0xe312, &op_strcat,	  2,   2,   4, 0xff, 0x01, 0x00, 0x04}, // strcat c c e 
	{0xe313, &op_strcat,	  3,   2,   4, 0xff, 0x01, 0x00, 0x04}, // strcat d c e 
	{0xe314, &op_strcat,	  4,   2,   4, 0xff, 0x01, 0x00, 0x04}, // strcat e c e 
	{0xe315, &op_strcat,	  5,   2,   4, 0xff, 0x01, 0x00, 0x04}, // strcat f c e 
	{0xe316, &op_strcat,	  6,   2,   4, 0xff, 0x01, 0x00, 0x04}, // strcat g c e 
	{0xe317, &op_strcat,	  7,   2,   4, 0xff, 0x01, 0x00, 0x04}, // strcat h c e 
	{0xe318, &op_strcat,	  0,   3,   4, 0xff, 0x01, 0x00, 0x04}, // strcat a d e 
	{0xe319, &op_strcat,	  1,   3,   4, 0xff, 0x01, 0x00, 0x04}, // strcat b d e 
	{0xe31a, &op_strcat,	  2,   3,   4, 0xff, 0x01, 0x00, 0x04}, // strcat c d e 
	{0xe31b, &op_strcat,	  3,   3,   4, 0xff, 0x01, 0x00, 0x04}, // strcat d d e 
	{0xe31c, &op_strcat,	  4,   3,   4, 0xff, 0x01, 0x00, 0x04}, // strcat e d e 
	{0xe31d, &op_strcat,	  5,   3,   4, 0xff, 0x01, 0x00, 0x04}, // strcat f d e 
	{0xe31e, &op_strcat,	  6,   3,   4, 0xff, 0x01, 0x00, 0x04}, // strcat g d e 
	{0xe31f, &op_strcat,	  7,   3,   4, 0xff, 0x01, 0x00, 0x04}, // strcat h d e 
	{0xe320, &op_strcat,	  0,   4,   4, 0xff, 0x01, 0x00, 0x04}, // strcat a e e 
	{0xe321, &op_strcat,	  1,   4,   4, 0xff, 0x01, 0x00, 0x04}, // strcat b e e 
	{0xe322, &op_strcat,	  2,   4,   4, 0xff, 0x01, 0x00, 0x04}, // strcat c e e 
	{0xe323, &op_strcat,	  3,   4,   4, 0xff, 0x01, 0x00, 0x04}, // strcat d e e 
	{0xe324, &op_strcat,	  4,   4,   4, 0xff, 0x01, 0x00, 0x04}, // strcat e e e 
	{0xe325, &op_strcat,	  5,   4,   4, 0xff, 0x01, 0x00, 0x04}, // strcat f e e 
	{0xe326, &op_strcat,	  6,   4,   4, 0xff, 0x01, 0x00, 0x04}, // strcat g e e 
	{0xe327, &op_strcat,	  7,   4,   4, 0xff, 0x01, 0x00, 0x04}, // strcat h e e 
	{0xe328, &op_strcat,	  0,   5,   4, 0xff, 0x01, 0x00, 0x04}, // strcat a f e 
	{0xe329, &op_strcat,	  1,   5,   4, 0xff, 0x01, 0x00, 0x04}, // strcat b f e 
	{0xe32a, &op_strcat,	  2,   5,   4, 0xff, 0x01, 0x00, 0x04}, // strcat c f e 
	{0xe32b, &op_strcat,	  3,   5,   4, 0xff, 0x01, 0x00, 0x04}, // strcat d f e 
	{0xe32c, &op_strcat,	  4,   5,   4, 0xff, 0x01, 0x00, 0x04}, // strcat e f e 
	{0xe32d, &op_strcat,	  5,   5,   4, 0xff, 0x01, 0x00, 0x04}, // strcat f f e 
	{0xe32e, &op_strcat,	  6,   5,   4, 0xff, 0x01, 0x00, 0x04}, // strcat g f e 
	{0xe32f, &op_strcat,	  7,   5,   4, 0xff, 0x01, 0x00, 0x04}, // strcat h f e 
	{0xe330, &op_strcat,	  0,   6,   4, 0xff, 0x01, 0x00, 0x04}, // strcat a g e 
	{0xe331, &op_strcat,	  1,   6,   4, 0xff, 0x01, 0x00, 0x04}, // strcat b g e 
	{0xe332, &op_strcat,	  2,   6,   4, 0xff, 0x01, 0x00, 0x04}, // strcat c g e 
	{0xe333, &op_strcat,	  3,   6,   4, 0xff, 0x01, 0x00, 0x04}, // strcat d g e 
	{0xe334, &op_strcat,	  4,   6,   4, 0xff, 0x01, 0x00, 0x04}, // strcat e g e 
	{0xe335, &op_strcat,	  5,   6,   4, 0xff, 0x01, 0x00, 0x04}, // strcat f g e 
	{0xe336, &op_strcat,	  6,   6,   4, 0xff, 0x01, 0x00, 0x04}, // strcat g g e 
	{0xe337, &op_strcat,	  7,   6,   4, 0xff, 0x01, 0x00, 0x04}, // strcat h g e 
	{0xe338, &op_strcat,	  0,   7,   4, 0xff, 0x01, 0x00, 0x04}, // strcat a h e 
	{0xe339, &op_strcat,	  1,   7,   4, 0xff, 0x01, 0x00, 0x04}, // strcat b h e 
	{0xe33a, &op_strcat,	  2,   7,   4, 0xff, 0x01, 0x00, 0x04}, // strcat c h e 
	{0xe33b, &op_strcat,	  3,   7,   4, 0xff, 0x01, 0x00, 0x04}, // strcat d h e 
	{0xe33c, &op_strcat,	  4,   7,   4, 0xff, 0x01, 0x00, 0x04}, // strcat e h e 
	{0xe33d, &op_strcat,	  5,   7,   4, 0xff, 0x01, 0x00, 0x04}, // strcat f h e 
	{0xe33e, &op_strcat,	  6,   7,   4, 0xff, 0x01, 0x00, 0x04}, // strcat g h e 
	{0xe33f, &op_strcat,	  7,   7,   4, 0xff, 0x01, 0x00, 0x04}, // strcat h h e 
	{0xe340, &op_strcat,	  0,   0,   5, 0xff, 0x01, 0x00, 0x04}, // strcat a a f 
	{0xe341, &op_strcat,	  1,   0,   5, 0xff, 0x01, 0x00, 0x04}, // strcat b a f 
	{0xe342, &op_strcat,	  2,   0,   5, 0xff, 0x01, 0x00, 0x04}, // strcat c a f 
	{0xe343, &op_strcat,	  3,   0,   5, 0xff, 0x01, 0x00, 0x04}, // strcat d a f 
	{0xe344, &op_strcat,	  4,   0,   5, 0xff, 0x01, 0x00, 0x04}, // strcat e a f 
	{0xe345, &op_strcat,	  5,   0,   5, 0xff, 0x01, 0x00, 0x04}, // strcat f a f 
	{0xe346, &op_strcat,	  6,   0,   5, 0xff, 0x01, 0x00, 0x04}, // strcat g a f 
	{0xe347, &op_strcat,	  7,   0,   5, 0xff, 0x01, 0x00, 0x04}, // strcat h a f 
	{0xe348, &op_strcat,	  0,   1,   5, 0xff, 0x01, 0x00, 0x04}, // strcat a b f 
	{0xe349, &op_strcat,	  1,   1,   5, 0xff, 0x01, 0x00, 0x04}, // strcat b b f 
	{0xe34a, &op_strcat,	  2,   1,   5, 0xff, 0x01, 0x00, 0x04}, // strcat c b f 
	{0xe34b, &op_strcat,	  3,   1,   5, 0xff, 0x01, 0x00, 0x04}, // strcat d b f 
	{0xe34c, &op_strcat,	  4,   1,   5, 0xff, 0x01, 0x00, 0x04}, // strcat e b f 
	{0xe34d, &op_strcat,	  5,   1,   5, 0xff, 0x01, 0x00, 0x04}, // strcat f b f 
	{0xe34e, &op_strcat,	  6,   1,   5, 0xff, 0x01, 0x00, 0x04}, // strcat g b f 
	{0xe34f, &op_strcat,	  7,   1,   5, 0xff, 0x01, 0x00, 0x04}, // strcat h b f 
	{0xe350, &op_strcat,	  0,   2,   5, 0xff, 0x01, 0x00, 0x04}, // strcat a c f 
	{0xe351, &op_strcat,	  1,   2,   5, 0xff, 0x01, 0x00, 0x04}, // strcat b c f 
	{0xe352, &op_strcat,	  2,   2,   5, 0xff, 0x01, 0x00, 0x04}, // strcat c c f 
	{0xe353, &op_strcat,	  3,   2,   5, 0xff, 0x01, 0x00, 0x04}, // strcat d c f 
	{0xe354, &op_strcat,	  4,   2,   5, 0xff, 0x01, 0x00, 0x04}, // strcat e c f 
	{0xe355, &op_strcat,	  5,   2,   5, 0xff, 0x01, 0x00, 0x04}, // strcat f c f 
	{0xe356, &op_strcat,	  6,   2,   5, 0xff, 0x01, 0x00, 0x04}, // strcat g c f 
	{0xe357, &op_strcat,	  7,   2,   5, 0xff, 0x01, 0x00, 0x04}, // strcat h c f 
	{0xe358, &op_strcat,	  0,   3,   5, 0xff, 0x01, 0x00, 0x04}, // strcat a d f 
	{0xe359, &op_strcat,	  1,   3,   5, 0xff, 0x01, 0x00, 0x04}, // strcat b d f 
	{0xe35a, &op_strcat,	  2,   3,   5, 0xff, 0x01, 0x00, 0x04}, // strcat c d f 
	{0xe35b, &op_strcat,	  3,   3,   5, 0xff, 0x01, 0x00, 0x04}, // strcat d d f 
	{0xe35c, &op_strcat,	  4,   3,   5, 0xff, 0x01, 0x00, 0x04}, // strcat e d f 
	{0xe35d, &op_strcat,	  5,   3,   5, 0xff, 0x01, 0x00, 0x04}, // strcat f d f 
	{0xe35e, &op_strcat,	  6,   3,   5, 0xff, 0x01, 0x00, 0x04}, // strcat g d f 
	{0xe35f, &op_strcat,	  7,   3,   5, 0xff, 0x01, 0x00, 0x04}, // strcat h d f 
	{0xe360, &op_strcat,	  0,   4,   5, 0xff, 0x01, 0x00, 0x04}, // strcat a e f 
	{0xe361, &op_strcat,	  1,   4,   5, 0xff, 0x01, 0x00, 0x04}, // strcat b e f 
	{0xe362, &op_strcat,	  2,   4,   5, 0xff, 0x01, 0x00, 0x04}, // strcat c e f 
	{0xe363, &op_strcat,	  3,   4,   5, 0xff, 0x01, 0x00, 0x04}, // strcat d e f 
	{0xe364, &op_strcat,	  4,   4,   5, 0xff, 0x01, 0x00, 0x04}, // strcat e e f 
	{0xe365, &op_strcat,	  5,   4,   5, 0xff, 0x01, 0x00, 0x04}, // strcat f e f 
	{0xe366, &op_strcat,	  6,   4,   5, 0xff, 0x01, 0x00, 0x04}, // strcat g e f 
	{0xe367, &op_strcat,	  7,   4,   5, 0xff, 0x01, 0x00, 0x04}, // strcat h e f 
	{0xe368, &op_strcat,	  0,   5,   5, 0xff, 0x01, 0x00, 0x04}, // strcat a f f 
	{0xe369, &op_strcat,	  1,   5,   5, 0xff, 0x01, 0x00, 0x04}, // strcat b f f 
	{0xe36a, &op_strcat,	  2,   5,   5, 0xff, 0x01, 0x00, 0x04}, // strcat c f f 
	{0xe36b, &op_strcat,	  3,   5,   5, 0xff, 0x01, 0x00, 0x04}, // strcat d f f 
	{0xe36c, &op_strcat,	  4,   5,   5, 0xff, 0x01, 0x00, 0x04}, // strcat e f f 
	{0xe36d, &op_strcat,	  5,   5,   5, 0xff, 0x01, 0x00, 0x04}, // strcat f f f 
	{0xe36e, &op_strcat,	  6,   5,   5, 0xff, 0x01, 0x00, 0x04}, // strcat g f f 
	{0xe36f, &op_strcat,	  7,   5,   5, 0xff, 0x01, 0x00, 0x04}, // strcat h f f 
	{0xe370, &op_strcat,	  0,   6,   5, 0xff, 0x01, 0x00, 0x04}, // strcat a g f 
	{0xe371, &op_strcat,	  1,   6,   5, 0xff, 0x01, 0x00, 0x04}, // strcat b g f 
	{0xe372, &op_strcat,	  2,   6,   5, 0xff, 0x01, 0x00, 0x04}, // strcat c g f 
	{0xe373, &op_strcat,	  3,   6,   5, 0xff, 0x01, 0x00, 0x04}, // strcat d g f 
	{0xe374, &op_strcat,	  4,   6,   5, 0xff, 0x01, 0x00, 0x04}, // strcat e g f 
	{0xe375, &op_strcat,	  5,   6,   5, 0xff, 0x01, 0x00, 0x04}, // strcat f g f 
	{0xe376, &op_strcat,	  6,   6,   5, 0xff, 0x01, 0x00, 0x04}, // strcat g g f 
	{0xe377, &op_strcat,	  7,   6,   5, 0xff, 0x01, 0x00, 0x04}, // strcat h g f 
	{0xe378, &op_strcat,	  0,   7,   5, 0xff, 0x01, 0x00, 0x04}, // strcat a h f 
	{0xe379, &op_strcat,	  1,   7,   5, 0xff, 0x01, 0x00, 0x04}, // strcat b h f 
	{0xe37a, &op_strcat,	  2,   7,   5, 0xff, 0x01, 0x00, 0x04}, // strcat c h f 
	{0xe37b, &op_strcat,	  3,   7,   5, 0xff, 0x01, 0x00, 0x04}, // strcat d h f 
	{0xe37c, &op_strcat,	  4,   7,   5, 0xff, 0x01, 0x00, 0x04}, // strcat e h f 
	{0xe37d, &op_strcat,	  5,   7,   5, 0xff, 0x01, 0x00, 0x04}, // strcat f h f 
	{0xe37e, &op_strcat,	  6,   7,   5, 0xff, 0x01, 0x00, 0x04}, // strcat g h f 
	{0xe37f, &op_strcat,	  7,   7,   5, 0xff, 0x01, 0x00, 0x04}, // strcat h h f 
	{0xe380, &op_strcat,	  0,   0,   6, 0xff, 0x01, 0x00, 0x04}, // strcat a a g 
	{0xe381, &op_strcat,	  1,   0,   6, 0xff, 0x01, 0x00, 0x04}, // strcat b a g 
	{0xe382, &op_strcat,	  2,   0,   6, 0xff, 0x01, 0x00, 0x04}, // strcat c a g 
	{0xe383, &op_strcat,	  3,   0,   6, 0xff, 0x01, 0x00, 0x04}, // strcat d a g 
	{0xe384, &op_strcat,	  4,   0,   6, 0xff, 0x01, 0x00, 0x04}, // strcat e a g 
	{0xe385, &op_strcat,	  5,   0,   6, 0xff, 0x01, 0x00, 0x04}, // strcat f a g 
	{0xe386, &op_strcat,	  6,   0,   6, 0xff, 0x01, 0x00, 0x04}, // strcat g a g 
	{0xe387, &op_strcat,	  7,   0,   6, 0xff, 0x01, 0x00, 0x04}, // strcat h a g 
	{0xe388, &op_strcat,	  0,   1,   6, 0xff, 0x01, 0x00, 0x04}, // strcat a b g 
	{0xe389, &op_strcat,	  1,   1,   6, 0xff, 0x01, 0x00, 0x04}, // strcat b b g 
	{0xe38a, &op_strcat,	  2,   1,   6, 0xff, 0x01, 0x00, 0x04}, // strcat c b g 
	{0xe38b, &op_strcat,	  3,   1,   6, 0xff, 0x01, 0x00, 0x04}, // strcat d b g 
	{0xe38c, &op_strcat,	  4,   1,   6, 0xff, 0x01, 0x00, 0x04}, // strcat e b g 
	{0xe38d, &op_strcat,	  5,   1,   6, 0xff, 0x01, 0x00, 0x04}, // strcat f b g 
	{0xe38e, &op_strcat,	  6,   1,   6, 0xff, 0x01, 0x00, 0x04}, // strcat g b g 
	{0xe38f, &op_strcat,	  7,   1,   6, 0xff, 0x01, 0x00, 0x04}, // strcat h b g 
	{0xe390, &op_strcat,	  0,   2,   6, 0xff, 0x01, 0x00, 0x04}, // strcat a c g 
	{0xe391, &op_strcat,	  1,   2,   6, 0xff, 0x01, 0x00, 0x04}, // strcat b c g 
	{0xe392, &op_strcat,	  2,   2,   6, 0xff, 0x01, 0x00, 0x04}, // strcat c c g 
	{0xe393, &op_strcat,	  3,   2,   6, 0xff, 0x01, 0x00, 0x04}, // strcat d c g 
	{0xe394, &op_strcat,	  4,   2,   6, 0xff, 0x01, 0x00, 0x04}, // strcat e c g 
	{0xe395, &op_strcat,	  5,   2,   6, 0xff, 0x01, 0x00, 0x04}, // strcat f c g 
	{0xe396, &op_strcat,	  6,   2,   6, 0xff, 0x01, 0x00, 0x04}, // strcat g c g 
	{0xe397, &op_strcat,	  7,   2,   6, 0xff, 0x01, 0x00, 0x04}, // strcat h c g 
	{0xe398, &op_strcat,	  0,   3,   6, 0xff, 0x01, 0x00, 0x04}, // strcat a d g 
	{0xe399, &op_strcat,	  1,   3,   6, 0xff, 0x01, 0x00, 0x04}, // strcat b d g 
	{0xe39a, &op_strcat,	  2,   3,   6, 0xff, 0x01, 0x00, 0x04}, // strcat c d g 
	{0xe39b, &op_strcat,	  3,   3,   6, 0xff, 0x01, 0x00, 0x04}, // strcat d d g 
	{0xe39c, &op_strcat,	  4,   3,   6, 0xff, 0x01, 0x00, 0x04}, // strcat e d g 
	{0xe39d, &op_strcat,	  5,   3,   6, 0xff, 0x01, 0x00, 0x04}, // strcat f d g 
	{0xe39e, &op_strcat,	  6,   3,   6, 0xff, 0x01, 0x00, 0x04}, // strcat g d g 
	{0xe39f, &op_strcat,	  7,   3,   6, 0xff, 0x01, 0x00, 0x04}, // strcat h d g 
	{0xe3a0, &op_strcat,	  0,   4,   6, 0xff, 0x01, 0x00, 0x04}, // strcat a e g 
	{0xe3a1, &op_strcat,	  1,   4,   6, 0xff, 0x01, 0x00, 0x04}, // strcat b e g 
	{0xe3a2, &op_strcat,	  2,   4,   6, 0xff, 0x01, 0x00, 0x04}, // strcat c e g 
	{0xe3a3, &op_strcat,	  3,   4,   6, 0xff, 0x01, 0x00, 0x04}, // strcat d e g 
	{0xe3a4, &op_strcat,	  4,   4,   6, 0xff, 0x01, 0x00, 0x04}, // strcat e e g 
	{0xe3a5, &op_strcat,	  5,   4,   6, 0xff, 0x01, 0x00, 0x04}, // strcat f e g 
	{0xe3a6, &op_strcat,	  6,   4,   6, 0xff, 0x01, 0x00, 0x04}, // strcat g e g 
	{0xe3a7, &op_strcat,	  7,   4,   6, 0xff, 0x01, 0x00, 0x04}, // strcat h e g 
	{0xe3a8, &op_strcat,	  0,   5,   6, 0xff, 0x01, 0x00, 0x04}, // strcat a f g 
	{0xe3a9, &op_strcat,	  1,   5,   6, 0xff, 0x01, 0x00, 0x04}, // strcat b f g 
	{0xe3aa, &op_strcat,	  2,   5,   6, 0xff, 0x01, 0x00, 0x04}, // strcat c f g 
	{0xe3ab, &op_strcat,	  3,   5,   6, 0xff, 0x01, 0x00, 0x04}, // strcat d f g 
	{0xe3ac, &op_strcat,	  4,   5,   6, 0xff, 0x01, 0x00, 0x04}, // strcat e f g 
	{0xe3ad, &op_strcat,	  5,   5,   6, 0xff, 0x01, 0x00, 0x04}, // strcat f f g 
	{0xe3ae, &op_strcat,	  6,   5,   6, 0xff, 0x01, 0x00, 0x04}, // strcat g f g 
	{0xe3af, &op_strcat,	  7,   5,   6, 0xff, 0x01, 0x00, 0x04}, // strcat h f g 
	{0xe3b0, &op_strcat,	  0,   6,   6, 0xff, 0x01, 0x00, 0x04}, // strcat a g g 
	{0xe3b1, &op_strcat,	  1,   6,   6, 0xff, 0x01, 0x00, 0x04}, // strcat b g g 
	{0xe3b2, &op_strcat,	  2,   6,   6, 0xff, 0x01, 0x00, 0x04}, // strcat c g g 
	{0xe3b3, &op_strcat,	  3,   6,   6, 0xff, 0x01, 0x00, 0x04}, // strcat d g g 
	{0xe3b4, &op_strcat,	  4,   6,   6, 0xff, 0x01, 0x00, 0x04}, // strcat e g g 
	{0xe3b5, &op_strcat,	  5,   6,   6, 0xff, 0x01, 0x00, 0x04}, // strcat f g g 
	{0xe3b6, &op_strcat,	  6,   6,   6, 0xff, 0x01, 0x00, 0x04}, // strcat g g g 
	{0xe3b7, &op_strcat,	  7,   6,   6, 0xff, 0x01, 0x00, 0x04}, // strcat h g g 
	{0xe3b8, &op_strcat,	  0,   7,   6, 0xff, 0x01, 0x00, 0x04}, // strcat a h g 
	{0xe3b9, &op_strcat,	  1,   7,   6, 0xff, 0x01, 0x00, 0x04}, // strcat b h g 
	{0xe3ba, &op_strcat,	  2,   7,   6, 0xff, 0x01, 0x00, 0x04}, // strcat c h g 
	{0xe3bb, &op_strcat,	  3,   7,   6, 0xff, 0x01, 0x00, 0x04}, // strcat d h g 
	{0xe3bc, &op_strcat,	  4,   7,   6, 0xff, 0x01, 0x00, 0x04}, // strcat e h g 
	{0xe3bd, &op_strcat,	  5,   7,   6, 0xff, 0x01, 0x00, 0x04}, // strcat f h g 
	{0xe3be, &op_strcat,	  6,   7,   6, 0xff, 0x01, 0x00, 0x04}, // strcat g h g 
	{0xe3bf, &op_strcat,	  7,   7,   6, 0xff, 0x01, 0x00, 0x04}, // strcat h h g 
	{0xe3c0, &op_strcat,	  0,   0,   7, 0xff, 0x01, 0x00, 0x04}, // strcat a a h 
	{0xe3c1, &op_strcat,	  1,   0,   7, 0xff, 0x01, 0x00, 0x04}, // strcat b a h 
	{0xe3c2, &op_strcat,	  2,   0,   7, 0xff, 0x01, 0x00, 0x04}, // strcat c a h 
	{0xe3c3, &op_strcat,	  3,   0,   7, 0xff, 0x01, 0x00, 0x04}, // strcat d a h 
	{0xe3c4, &op_strcat,	  4,   0,   7, 0xff, 0x01, 0x00, 0x04}, // strcat e a h 
	{0xe3c5, &op_strcat,	  5,   0,   7, 0xff, 0x01, 0x00, 0x04}, // strcat f a h 
	{0xe3c6, &op_strcat,	  6,   0,   7, 0xff, 0x01, 0x00, 0x04}, // strcat g a h 
	{0xe3c7, &op_strcat,	  7,   0,   7, 0xff, 0x01, 0x00, 0x04}, // strcat h a h 
	{0xe3c8, &op_strcat,	  0,   1,   7, 0xff, 0x01, 0x00, 0x04}, // strcat a b h 
	{0xe3c9, &op_strcat,	  1,   1,   7, 0xff, 0x01, 0x00, 0x04}, // strcat b b h 
	{0xe3ca, &op_strcat,	  2,   1,   7, 0xff, 0x01, 0x00, 0x04}, // strcat c b h 
	{0xe3cb, &op_strcat,	  3,   1,   7, 0xff, 0x01, 0x00, 0x04}, // strcat d b h 
	{0xe3cc, &op_strcat,	  4,   1,   7, 0xff, 0x01, 0x00, 0x04}, // strcat e b h 
	{0xe3cd, &op_strcat,	  5,   1,   7, 0xff, 0x01, 0x00, 0x04}, // strcat f b h 
	{0xe3ce, &op_strcat,	  6,   1,   7, 0xff, 0x01, 0x00, 0x04}, // strcat g b h 
	{0xe3cf, &op_strcat,	  7,   1,   7, 0xff, 0x01, 0x00, 0x04}, // strcat h b h 
	{0xe3d0, &op_strcat,	  0,   2,   7, 0xff, 0x01, 0x00, 0x04}, // strcat a c h 
	{0xe3d1, &op_strcat,	  1,   2,   7, 0xff, 0x01, 0x00, 0x04}, // strcat b c h 
	{0xe3d2, &op_strcat,	  2,   2,   7, 0xff, 0x01, 0x00, 0x04}, // strcat c c h 
	{0xe3d3, &op_strcat,	  3,   2,   7, 0xff, 0x01, 0x00, 0x04}, // strcat d c h 
	{0xe3d4, &op_strcat,	  4,   2,   7, 0xff, 0x01, 0x00, 0x04}, // strcat e c h 
	{0xe3d5, &op_strcat,	  5,   2,   7, 0xff, 0x01, 0x00, 0x04}, // strcat f c h 
	{0xe3d6, &op_strcat,	  6,   2,   7, 0xff, 0x01, 0x00, 0x04}, // strcat g c h 
	{0xe3d7, &op_strcat,	  7,   2,   7, 0xff, 0x01, 0x00, 0x04}, // strcat h c h 
	{0xe3d8, &op_strcat,	  0,   3,   7, 0xff, 0x01, 0x00, 0x04}, // strcat a d h 
	{0xe3d9, &op_strcat,	  1,   3,   7, 0xff, 0x01, 0x00, 0x04}, // strcat b d h 
	{0xe3da, &op_strcat,	  2,   3,   7, 0xff, 0x01, 0x00, 0x04}, // strcat c d h 
	{0xe3db, &op_strcat,	  3,   3,   7, 0xff, 0x01, 0x00, 0x04}, // strcat d d h 
	{0xe3dc, &op_strcat,	  4,   3,   7, 0xff, 0x01, 0x00, 0x04}, // strcat e d h 
	{0xe3dd, &op_strcat,	  5,   3,   7, 0xff, 0x01, 0x00, 0x04}, // strcat f d h 
	{0xe3de, &op_strcat,	  6,   3,   7, 0xff, 0x01, 0x00, 0x04}, // strcat g d h 
	{0xe3df, &op_strcat,	  7,   3,   7, 0xff, 0x01, 0x00, 0x04}, // strcat h d h 
	{0xe3e0, &op_strcat,	  0,   4,   7, 0xff, 0x01, 0x00, 0x04}, // strcat a e h 
	{0xe3e1, &op_strcat,	  1,   4,   7, 0xff, 0x01, 0x00, 0x04}, // strcat b e h 
	{0xe3e2, &op_strcat,	  2,   4,   7, 0xff, 0x01, 0x00, 0x04}, // strcat c e h 
	{0xe3e3, &op_strcat,	  3,   4,   7, 0xff, 0x01, 0x00, 0x04}, // strcat d e h 
	{0xe3e4, &op_strcat,	  4,   4,   7, 0xff, 0x01, 0x00, 0x04}, // strcat e e h 
	{0xe3e5, &op_strcat,	  5,   4,   7, 0xff, 0x01, 0x00, 0x04}, // strcat f e h 
	{0xe3e6, &op_strcat,	  6,   4,   7, 0xff, 0x01, 0x00, 0x04}, // strcat g e h 
	{0xe3e7, &op_strcat,	  7,   4,   7, 0xff, 0x01, 0x00, 0x04}, // strcat h e h 
	{0xe3e8, &op_strcat,	  0,   5,   7, 0xff, 0x01, 0x00, 0x04}, // strcat a f h 
	{0xe3e9, &op_strcat,	  1,   5,   7, 0xff, 0x01, 0x00, 0x04}, // strcat b f h 
	{0xe3ea, &op_strcat,	  2,   5,   7, 0xff, 0x01, 0x00, 0x04}, // strcat c f h 
	{0xe3eb, &op_strcat,	  3,   5,   7, 0xff, 0x01, 0x00, 0x04}, // strcat d f h 
	{0xe3ec, &op_strcat,	  4,   5,   7, 0xff, 0x01, 0x00, 0x04}, // strcat e f h 
	{0xe3ed, &op_strcat,	  5,   5,   7, 0xff, 0x01, 0x00, 0x04}, // strcat f f h 
	{0xe3ee, &op_strcat,	  6,   5,   7, 0xff, 0x01, 0x00, 0x04}, // strcat g f h 
	{0xe3ef, &op_strcat,	  7,   5,   7, 0xff, 0x01, 0x00, 0x04}, // strcat h f h 
	{0xe3f0, &op_strcat,	  0,   6,   7, 0xff, 0x01, 0x00, 0x04}, // strcat a g h 
	{0xe3f1, &op_strcat,	  1,   6,   7, 0xff, 0x01, 0x00, 0x04}, // strcat b g h 
	{0xe3f2, &op_strcat,	  2,   6,   7, 0xff, 0x01, 0x00, 0x04}, // strcat c g h 
	{0xe3f3, &op_strcat,	  3,   6,   7, 0xff, 0x01, 0x00, 0x04}, // strcat d g h 
	{0xe3f4, &op_strcat,	  4,   6,   7, 0xff, 0x01, 0x00, 0x04}, // strcat e g h 
	{0xe3f5, &op_strcat,	  5,   6,   7, 0xff, 0x01, 0x00, 0x04}, // strcat f g h 
	{0xe3f6, &op_strcat,	  6,   6,   7, 0xff, 0x01, 0x00, 0x04}, // strcat g g h 
	{0xe3f7, &op_strcat,	  7,   6,   7, 0xff, 0x01, 0x00, 0x04}, // strcat h g h 
	{0xe3f8, &op_strcat,	  0,   7,   7, 0xff, 0x01, 0x00, 0x04}, // strcat a h h 
	{0xe3f9, &op_strcat,	  1,   7,   7, 0xff, 0x01, 0x00, 0x04}, // strcat b h h 
	{0xe3fa, &op_strcat,	  2,   7,   7, 0xff, 0x01, 0x00, 0x04}, // strcat c h h 
	{0xe3fb, &op_strcat,	  3,   7,   7, 0xff, 0x01, 0x00, 0x04}, // strcat d h h 
	{0xe3fc, &op_strcat,	  4,   7,   7, 0xff, 0x01, 0x00, 0x04}, // strcat e h h 
	{0xe3fd, &op_strcat,	  5,   7,   7, 0xff, 0x01, 0x00, 0x04}, // strcat f h h 
	{0xe3fe, &op_strcat,	  6,   7,   7, 0xff, 0x01, 0x00, 0x04}, // strcat g h h 
	{0xe3ff, &op_strcat,	  7,   7,   7, 0xff, 0x01, 0x00, 0x04}, // strcat h h h 
	{0xe400, &op_strpos,	  0,   0,   0, 0xff, 0x01, 0x00, 0x04}, // strpos a a a 
	{0xe401, &op_strpos,	  1,   0,   0, 0xff, 0x01, 0x00, 0x04}, // strpos b a a 
	{0xe402, &op_strpos,	  2,   0,   0, 0xff, 0x01, 0x00, 0x04}, // strpos c a a 
	{0xe403, &op_strpos,	  3,   0,   0, 0xff, 0x01, 0x00, 0x04}, // strpos d a a 
	{0xe404, &op_strpos,	  4,   0,   0, 0xff, 0x01, 0x00, 0x04}, // strpos e a a 
	{0xe405, &op_strpos,	  5,   0,   0, 0xff, 0x01, 0x00, 0x04}, // strpos f a a 
	{0xe406, &op_strpos,	  6,   0,   0, 0xff, 0x01, 0x00, 0x04}, // strpos g a a 
	{0xe407, &op_strpos,	  7,   0,   0, 0xff, 0x01, 0x00, 0x04}, // strpos h a a 
	{0xe408, &op_strpos,	  0,   1,   0, 0xff, 0x01, 0x00, 0x04}, // strpos a b a 
	{0xe409, &op_strpos,	  1,   1,   0, 0xff, 0x01, 0x00, 0x04}, // strpos b b a 
	{0xe40a, &op_strpos,	  2,   1,   0, 0xff, 0x01, 0x00, 0x04}, // strpos c b a 
	{0xe40b, &op_strpos,	  3,   1,   0, 0xff, 0x01, 0x00, 0x04}, // strpos d b a 
	{0xe40c, &op_strpos,	  4,   1,   0, 0xff, 0x01, 0x00, 0x04}, // strpos e b a 
	{0xe40d, &op_strpos,	  5,   1,   0, 0xff, 0x01, 0x00, 0x04}, // strpos f b a 
	{0xe40e, &op_strpos,	  6,   1,   0, 0xff, 0x01, 0x00, 0x04}, // strpos g b a 
	{0xe40f, &op_strpos,	  7,   1,   0, 0xff, 0x01, 0x00, 0x04}, // strpos h b a 
	{0xe410, &op_strpos,	  0,   2,   0, 0xff, 0x01, 0x00, 0x04}, // strpos a c a 
	{0xe411, &op_strpos,	  1,   2,   0, 0xff, 0x01, 0x00, 0x04}, // strpos b c a 
	{0xe412, &op_strpos,	  2,   2,   0, 0xff, 0x01, 0x00, 0x04}, // strpos c c a 
	{0xe413, &op_strpos,	  3,   2,   0, 0xff, 0x01, 0x00, 0x04}, // strpos d c a 
	{0xe414, &op_strpos,	  4,   2,   0, 0xff, 0x01, 0x00, 0x04}, // strpos e c a 
	{0xe415, &op_strpos,	  5,   2,   0, 0xff, 0x01, 0x00, 0x04}, // strpos f c a 
	{0xe416, &op_strpos,	  6,   2,   0, 0xff, 0x01, 0x00, 0x04}, // strpos g c a 
	{0xe417, &op_strpos,	  7,   2,   0, 0xff, 0x01, 0x00, 0x04}, // strpos h c a 
	{0xe418, &op_strpos,	  0,   3,   0, 0xff, 0x01, 0x00, 0x04}, // strpos a d a 
	{0xe419, &op_strpos,	  1,   3,   0, 0xff, 0x01, 0x00, 0x04}, // strpos b d a 
	{0xe41a, &op_strpos,	  2,   3,   0, 0xff, 0x01, 0x00, 0x04}, // strpos c d a 
	{0xe41b, &op_strpos,	  3,   3,   0, 0xff, 0x01, 0x00, 0x04}, // strpos d d a 
	{0xe41c, &op_strpos,	  4,   3,   0, 0xff, 0x01, 0x00, 0x04}, // strpos e d a 
	{0xe41d, &op_strpos,	  5,   3,   0, 0xff, 0x01, 0x00, 0x04}, // strpos f d a 
	{0xe41e, &op_strpos,	  6,   3,   0, 0xff, 0x01, 0x00, 0x04}, // strpos g d a 
	{0xe41f, &op_strpos,	  7,   3,   0, 0xff, 0x01, 0x00, 0x04}, // strpos h d a 
	{0xe420, &op_strpos,	  0,   4,   0, 0xff, 0x01, 0x00, 0x04}, // strpos a e a 
	{0xe421, &op_strpos,	  1,   4,   0, 0xff, 0x01, 0x00, 0x04}, // strpos b e a 
	{0xe422, &op_strpos,	  2,   4,   0, 0xff, 0x01, 0x00, 0x04}, // strpos c e a 
	{0xe423, &op_strpos,	  3,   4,   0, 0xff, 0x01, 0x00, 0x04}, // strpos d e a 
	{0xe424, &op_strpos,	  4,   4,   0, 0xff, 0x01, 0x00, 0x04}, // strpos e e a 
	{0xe425, &op_strpos,	  5,   4,   0, 0xff, 0x01, 0x00, 0x04}, // strpos f e a 
	{0xe426, &op_strpos,	  6,   4,   0, 0xff, 0x01, 0x00, 0x04}, // strpos g e a 
	{0xe427, &op_strpos,	  7,   4,   0, 0xff, 0x01, 0x00, 0x04}, // strpos h e a 
	{0xe428, &op_strpos,	  0,   5,   0, 0xff, 0x01, 0x00, 0x04}, // strpos a f a 
	{0xe429, &op_strpos,	  1,   5,   0, 0xff, 0x01, 0x00, 0x04}, // strpos b f a 
	{0xe42a, &op_strpos,	  2,   5,   0, 0xff, 0x01, 0x00, 0x04}, // strpos c f a 
	{0xe42b, &op_strpos,	  3,   5,   0, 0xff, 0x01, 0x00, 0x04}, // strpos d f a 
	{0xe42c, &op_strpos,	  4,   5,   0, 0xff, 0x01, 0x00, 0x04}, // strpos e f a 
	{0xe42d, &op_strpos,	  5,   5,   0, 0xff, 0x01, 0x00, 0x04}, // strpos f f a 
	{0xe42e, &op_strpos,	  6,   5,   0, 0xff, 0x01, 0x00, 0x04}, // strpos g f a 
	{0xe42f, &op_strpos,	  7,   5,   0, 0xff, 0x01, 0x00, 0x04}, // strpos h f a 
	{0xe430, &op_strpos,	  0,   6,   0, 0xff, 0x01, 0x00, 0x04}, // strpos a g a 
	{0xe431, &op_strpos,	  1,   6,   0, 0xff, 0x01, 0x00, 0x04}, // strpos b g a 
	{0xe432, &op_strpos,	  2,   6,   0, 0xff, 0x01, 0x00, 0x04}, // strpos c g a 
	{0xe433, &op_strpos,	  3,   6,   0, 0xff, 0x01, 0x00, 0x04}, // strpos d g a 
	{0xe434, &op_strpos,	  4,   6,   0, 0xff, 0x01, 0x00, 0x04}, // strpos e g a 
	{0xe435, &op_strpos,	  5,   6,   0, 0xff, 0x01, 0x00, 0x04}, // strpos f g a 
	{0xe436, &op_strpos,	  6,   6,   0, 0xff, 0x01, 0x00, 0x04}, // strpos g g a 
	{0xe437, &op_strpos,	  7,   6,   0, 0xff, 0x01, 0x00, 0x04}, // strpos h g a 
	{0xe438, &op_strpos,	  0,   7,   0, 0xff, 0x01, 0x00, 0x04}, // strpos a h a 
	{0xe439, &op_strpos,	  1,   7,   0, 0xff, 0x01, 0x00, 0x04}, // strpos b h a 
	{0xe43a, &op_strpos,	  2,   7,   0, 0xff, 0x01, 0x00, 0x04}, // strpos c h a 
	{0xe43b, &op_strpos,	  3,   7,   0, 0xff, 0x01, 0x00, 0x04}, // strpos d h a 
	{0xe43c, &op_strpos,	  4,   7,   0, 0xff, 0x01, 0x00, 0x04}, // strpos e h a 
	{0xe43d, &op_strpos,	  5,   7,   0, 0xff, 0x01, 0x00, 0x04}, // strpos f h a 
	{0xe43e, &op_strpos,	  6,   7,   0, 0xff, 0x01, 0x00, 0x04}, // strpos g h a 
	{0xe43f, &op_strpos,	  7,   7,   0, 0xff, 0x01, 0x00, 0x04}, // strpos h h a 
	{0xe440, &op_strpos,	  0,   0,   1, 0xff, 0x01, 0x00, 0x04}, // strpos a a b 
	{0xe441, &op_strpos,	  1,   0,   1, 0xff, 0x01, 0x00, 0x04}, // strpos b a b 
	{0xe442, &op_strpos,	  2,   0,   1, 0xff, 0x01, 0x00, 0x04}, // strpos c a b 
	{0xe443, &op_strpos,	  3,   0,   1, 0xff, 0x01, 0x00, 0x04}, // strpos d a b 
	{0xe444, &op_strpos,	  4,   0,   1, 0xff, 0x01, 0x00, 0x04}, // strpos e a b 
	{0xe445, &op_strpos,	  5,   0,   1, 0xff, 0x01, 0x00, 0x04}, // strpos f a b 
	{0xe446, &op_strpos,	  6,   0,   1, 0xff, 0x01, 0x00, 0x04}, // strpos g a b 
	{0xe447, &op_strpos,	  7,   0,   1, 0xff, 0x01, 0x00, 0x04}, // strpos h a b 
	{0xe448, &op_strpos,	  0,   1,   1, 0xff, 0x01, 0x00, 0x04}, // strpos a b b 
	{0xe449, &op_strpos,	  1,   1,   1, 0xff, 0x01, 0x00, 0x04}, // strpos b b b 
	{0xe44a, &op_strpos,	  2,   1,   1, 0xff, 0x01, 0x00, 0x04}, // strpos c b b 
	{0xe44b, &op_strpos,	  3,   1,   1, 0xff, 0x01, 0x00, 0x04}, // strpos d b b 
	{0xe44c, &op_strpos,	  4,   1,   1, 0xff, 0x01, 0x00, 0x04}, // strpos e b b 
	{0xe44d, &op_strpos,	  5,   1,   1, 0xff, 0x01, 0x00, 0x04}, // strpos f b b 
	{0xe44e, &op_strpos,	  6,   1,   1, 0xff, 0x01, 0x00, 0x04}, // strpos g b b 
	{0xe44f, &op_strpos,	  7,   1,   1, 0xff, 0x01, 0x00, 0x04}, // strpos h b b 
	{0xe450, &op_strpos,	  0,   2,   1, 0xff, 0x01, 0x00, 0x04}, // strpos a c b 
	{0xe451, &op_strpos,	  1,   2,   1, 0xff, 0x01, 0x00, 0x04}, // strpos b c b 
	{0xe452, &op_strpos,	  2,   2,   1, 0xff, 0x01, 0x00, 0x04}, // strpos c c b 
	{0xe453, &op_strpos,	  3,   2,   1, 0xff, 0x01, 0x00, 0x04}, // strpos d c b 
	{0xe454, &op_strpos,	  4,   2,   1, 0xff, 0x01, 0x00, 0x04}, // strpos e c b 
	{0xe455, &op_strpos,	  5,   2,   1, 0xff, 0x01, 0x00, 0x04}, // strpos f c b 
	{0xe456, &op_strpos,	  6,   2,   1, 0xff, 0x01, 0x00, 0x04}, // strpos g c b 
	{0xe457, &op_strpos,	  7,   2,   1, 0xff, 0x01, 0x00, 0x04}, // strpos h c b 
	{0xe458, &op_strpos,	  0,   3,   1, 0xff, 0x01, 0x00, 0x04}, // strpos a d b 
	{0xe459, &op_strpos,	  1,   3,   1, 0xff, 0x01, 0x00, 0x04}, // strpos b d b 
	{0xe45a, &op_strpos,	  2,   3,   1, 0xff, 0x01, 0x00, 0x04}, // strpos c d b 
	{0xe45b, &op_strpos,	  3,   3,   1, 0xff, 0x01, 0x00, 0x04}, // strpos d d b 
	{0xe45c, &op_strpos,	  4,   3,   1, 0xff, 0x01, 0x00, 0x04}, // strpos e d b 
	{0xe45d, &op_strpos,	  5,   3,   1, 0xff, 0x01, 0x00, 0x04}, // strpos f d b 
	{0xe45e, &op_strpos,	  6,   3,   1, 0xff, 0x01, 0x00, 0x04}, // strpos g d b 
	{0xe45f, &op_strpos,	  7,   3,   1, 0xff, 0x01, 0x00, 0x04}, // strpos h d b 
	{0xe460, &op_strpos,	  0,   4,   1, 0xff, 0x01, 0x00, 0x04}, // strpos a e b 
	{0xe461, &op_strpos,	  1,   4,   1, 0xff, 0x01, 0x00, 0x04}, // strpos b e b 
	{0xe462, &op_strpos,	  2,   4,   1, 0xff, 0x01, 0x00, 0x04}, // strpos c e b 
	{0xe463, &op_strpos,	  3,   4,   1, 0xff, 0x01, 0x00, 0x04}, // strpos d e b 
	{0xe464, &op_strpos,	  4,   4,   1, 0xff, 0x01, 0x00, 0x04}, // strpos e e b 
	{0xe465, &op_strpos,	  5,   4,   1, 0xff, 0x01, 0x00, 0x04}, // strpos f e b 
	{0xe466, &op_strpos,	  6,   4,   1, 0xff, 0x01, 0x00, 0x04}, // strpos g e b 
	{0xe467, &op_strpos,	  7,   4,   1, 0xff, 0x01, 0x00, 0x04}, // strpos h e b 
	{0xe468, &op_strpos,	  0,   5,   1, 0xff, 0x01, 0x00, 0x04}, // strpos a f b 
	{0xe469, &op_strpos,	  1,   5,   1, 0xff, 0x01, 0x00, 0x04}, // strpos b f b 
	{0xe46a, &op_strpos,	  2,   5,   1, 0xff, 0x01, 0x00, 0x04}, // strpos c f b 
	{0xe46b, &op_strpos,	  3,   5,   1, 0xff, 0x01, 0x00, 0x04}, // strpos d f b 
	{0xe46c, &op_strpos,	  4,   5,   1, 0xff, 0x01, 0x00, 0x04}, // strpos e f b 
	{0xe46d, &op_strpos,	  5,   5,   1, 0xff, 0x01, 0x00, 0x04}, // strpos f f b 
	{0xe46e, &op_strpos,	  6,   5,   1, 0xff, 0x01, 0x00, 0x04}, // strpos g f b 
	{0xe46f, &op_strpos,	  7,   5,   1, 0xff, 0x01, 0x00, 0x04}, // strpos h f b 
	{0xe470, &op_strpos,	  0,   6,   1, 0xff, 0x01, 0x00, 0x04}, // strpos a g b 
	{0xe471, &op_strpos,	  1,   6,   1, 0xff, 0x01, 0x00, 0x04}, // strpos b g b 
	{0xe472, &op_strpos,	  2,   6,   1, 0xff, 0x01, 0x00, 0x04}, // strpos c g b 
	{0xe473, &op_strpos,	  3,   6,   1, 0xff, 0x01, 0x00, 0x04}, // strpos d g b 
	{0xe474, &op_strpos,	  4,   6,   1, 0xff, 0x01, 0x00, 0x04}, // strpos e g b 
	{0xe475, &op_strpos,	  5,   6,   1, 0xff, 0x01, 0x00, 0x04}, // strpos f g b 
	{0xe476, &op_strpos,	  6,   6,   1, 0xff, 0x01, 0x00, 0x04}, // strpos g g b 
	{0xe477, &op_strpos,	  7,   6,   1, 0xff, 0x01, 0x00, 0x04}, // strpos h g b 
	{0xe478, &op_strpos,	  0,   7,   1, 0xff, 0x01, 0x00, 0x04}, // strpos a h b 
	{0xe479, &op_strpos,	  1,   7,   1, 0xff, 0x01, 0x00, 0x04}, // strpos b h b 
	{0xe47a, &op_strpos,	  2,   7,   1, 0xff, 0x01, 0x00, 0x04}, // strpos c h b 
	{0xe47b, &op_strpos,	  3,   7,   1, 0xff, 0x01, 0x00, 0x04}, // strpos d h b 
	{0xe47c, &op_strpos,	  4,   7,   1, 0xff, 0x01, 0x00, 0x04}, // strpos e h b 
	{0xe47d, &op_strpos,	  5,   7,   1, 0xff, 0x01, 0x00, 0x04}, // strpos f h b 
	{0xe47e, &op_strpos,	  6,   7,   1, 0xff, 0x01, 0x00, 0x04}, // strpos g h b 
	{0xe47f, &op_strpos,	  7,   7,   1, 0xff, 0x01, 0x00, 0x04}, // strpos h h b 
	{0xe480, &op_strpos,	  0,   0,   2, 0xff, 0x01, 0x00, 0x04}, // strpos a a c 
	{0xe481, &op_strpos,	  1,   0,   2, 0xff, 0x01, 0x00, 0x04}, // strpos b a c 
	{0xe482, &op_strpos,	  2,   0,   2, 0xff, 0x01, 0x00, 0x04}, // strpos c a c 
	{0xe483, &op_strpos,	  3,   0,   2, 0xff, 0x01, 0x00, 0x04}, // strpos d a c 
	{0xe484, &op_strpos,	  4,   0,   2, 0xff, 0x01, 0x00, 0x04}, // strpos e a c 
	{0xe485, &op_strpos,	  5,   0,   2, 0xff, 0x01, 0x00, 0x04}, // strpos f a c 
	{0xe486, &op_strpos,	  6,   0,   2, 0xff, 0x01, 0x00, 0x04}, // strpos g a c 
	{0xe487, &op_strpos,	  7,   0,   2, 0xff, 0x01, 0x00, 0x04}, // strpos h a c 
	{0xe488, &op_strpos,	  0,   1,   2, 0xff, 0x01, 0x00, 0x04}, // strpos a b c 
	{0xe489, &op_strpos,	  1,   1,   2, 0xff, 0x01, 0x00, 0x04}, // strpos b b c 
	{0xe48a, &op_strpos,	  2,   1,   2, 0xff, 0x01, 0x00, 0x04}, // strpos c b c 
	{0xe48b, &op_strpos,	  3,   1,   2, 0xff, 0x01, 0x00, 0x04}, // strpos d b c 
	{0xe48c, &op_strpos,	  4,   1,   2, 0xff, 0x01, 0x00, 0x04}, // strpos e b c 
	{0xe48d, &op_strpos,	  5,   1,   2, 0xff, 0x01, 0x00, 0x04}, // strpos f b c 
	{0xe48e, &op_strpos,	  6,   1,   2, 0xff, 0x01, 0x00, 0x04}, // strpos g b c 
	{0xe48f, &op_strpos,	  7,   1,   2, 0xff, 0x01, 0x00, 0x04}, // strpos h b c 
	{0xe490, &op_strpos,	  0,   2,   2, 0xff, 0x01, 0x00, 0x04}, // strpos a c c 
	{0xe491, &op_strpos,	  1,   2,   2, 0xff, 0x01, 0x00, 0x04}, // strpos b c c 
	{0xe492, &op_strpos,	  2,   2,   2, 0xff, 0x01, 0x00, 0x04}, // strpos c c c 
	{0xe493, &op_strpos,	  3,   2,   2, 0xff, 0x01, 0x00, 0x04}, // strpos d c c 
	{0xe494, &op_strpos,	  4,   2,   2, 0xff, 0x01, 0x00, 0x04}, // strpos e c c 
	{0xe495, &op_strpos,	  5,   2,   2, 0xff, 0x01, 0x00, 0x04}, // strpos f c c 
	{0xe496, &op_strpos,	  6,   2,   2, 0xff, 0x01, 0x00, 0x04}, // strpos g c c 
	{0xe497, &op_strpos,	  7,   2,   2, 0xff, 0x01, 0x00, 0x04}, // strpos h c c 
	{0xe498, &op_strpos,	  0,   3,   2, 0xff, 0x01, 0x00, 0x04}, // strpos a d c 
	{0xe499, &op_strpos,	  1,   3,   2, 0xff, 0x01, 0x00, 0x04}, // strpos b d c 
	{0xe49a, &op_strpos,	  2,   3,   2, 0xff, 0x01, 0x00, 0x04}, // strpos c d c 
	{0xe49b, &op_strpos,	  3,   3,   2, 0xff, 0x01, 0x00, 0x04}, // strpos d d c 
	{0xe49c, &op_strpos,	  4,   3,   2, 0xff, 0x01, 0x00, 0x04}, // strpos e d c 
	{0xe49d, &op_strpos,	  5,   3,   2, 0xff, 0x01, 0x00, 0x04}, // strpos f d c 
	{0xe49e, &op_strpos,	  6,   3,   2, 0xff, 0x01, 0x00, 0x04}, // strpos g d c 
	{0xe49f, &op_strpos,	  7,   3,   2, 0xff, 0x01, 0x00, 0x04}, // strpos h d c 
	{0xe4a0, &op_strpos,	  0,   4,   2, 0xff, 0x01, 0x00, 0x04}, // strpos a e c 
	{0xe4a1, &op_strpos,	  1,   4,   2, 0xff, 0x01, 0x00, 0x04}, // strpos b e c 
	{0xe4a2, &op_strpos,	  2,   4,   2, 0xff, 0x01, 0x00, 0x04}, // strpos c e c 
	{0xe4a3, &op_strpos,	  3,   4,   2, 0xff, 0x01, 0x00, 0x04}, // strpos d e c 
	{0xe4a4, &op_strpos,	  4,   4,   2, 0xff, 0x01, 0x00, 0x04}, // strpos e e c 
	{0xe4a5, &op_strpos,	  5,   4,   2, 0xff, 0x01, 0x00, 0x04}, // strpos f e c 
	{0xe4a6, &op_strpos,	  6,   4,   2, 0xff, 0x01, 0x00, 0x04}, // strpos g e c 
	{0xe4a7, &op_strpos,	  7,   4,   2, 0xff, 0x01, 0x00, 0x04}, // strpos h e c 
	{0xe4a8, &op_strpos,	  0,   5,   2, 0xff, 0x01, 0x00, 0x04}, // strpos a f c 
	{0xe4a9, &op_strpos,	  1,   5,   2, 0xff, 0x01, 0x00, 0x04}, // strpos b f c 
	{0xe4aa, &op_strpos,	  2,   5,   2, 0xff, 0x01, 0x00, 0x04}, // strpos c f c 
	{0xe4ab, &op_strpos,	  3,   5,   2, 0xff, 0x01, 0x00, 0x04}, // strpos d f c 
	{0xe4ac, &op_strpos,	  4,   5,   2, 0xff, 0x01, 0x00, 0x04}, // strpos e f c 
	{0xe4ad, &op_strpos,	  5,   5,   2, 0xff, 0x01, 0x00, 0x04}, // strpos f f c 
	{0xe4ae, &op_strpos,	  6,   5,   2, 0xff, 0x01, 0x00, 0x04}, // strpos g f c 
	{0xe4af, &op_strpos,	  7,   5,   2, 0xff, 0x01, 0x00, 0x04}, // strpos h f c 
	{0xe4b0, &op_strpos,	  0,   6,   2, 0xff, 0x01, 0x00, 0x04}, // strpos a g c 
	{0xe4b1, &op_strpos,	  1,   6,   2, 0xff, 0x01, 0x00, 0x04}, // strpos b g c 
	{0xe4b2, &op_strpos,	  2,   6,   2, 0xff, 0x01, 0x00, 0x04}, // strpos c g c 
	{0xe4b3, &op_strpos,	  3,   6,   2, 0xff, 0x01, 0x00, 0x04}, // strpos d g c 
	{0xe4b4, &op_strpos,	  4,   6,   2, 0xff, 0x01, 0x00, 0x04}, // strpos e g c 
	{0xe4b5, &op_strpos,	  5,   6,   2, 0xff, 0x01, 0x00, 0x04}, // strpos f g c 
	{0xe4b6, &op_strpos,	  6,   6,   2, 0xff, 0x01, 0x00, 0x04}, // strpos g g c 
	{0xe4b7, &op_strpos,	  7,   6,   2, 0xff, 0x01, 0x00, 0x04}, // strpos h g c 
	{0xe4b8, &op_strpos,	  0,   7,   2, 0xff, 0x01, 0x00, 0x04}, // strpos a h c 
	{0xe4b9, &op_strpos,	  1,   7,   2, 0xff, 0x01, 0x00, 0x04}, // strpos b h c 
	{0xe4ba, &op_strpos,	  2,   7,   2, 0xff, 0x01, 0x00, 0x04}, // strpos c h c 
	{0xe4bb, &op_strpos,	  3,   7,   2, 0xff, 0x01, 0x00, 0x04}, // strpos d h c 
	{0xe4bc, &op_strpos,	  4,   7,   2, 0xff, 0x01, 0x00, 0x04}, // strpos e h c 
	{0xe4bd, &op_strpos,	  5,   7,   2, 0xff, 0x01, 0x00, 0x04}, // strpos f h c 
	{0xe4be, &op_strpos,	  6,   7,   2, 0xff, 0x01, 0x00, 0x04}, // strpos g h c 
	{0xe4bf, &op_strpos,	  7,   7,   2, 0xff, 0x01, 0x00, 0x04}, // strpos h h c 
	{0xe4c0, &op_strpos,	  0,   0,   3, 0xff, 0x01, 0x00, 0x04}, // strpos a a d 
	{0xe4c1, &op_strpos,	  1,   0,   3, 0xff, 0x01, 0x00, 0x04}, // strpos b a d 
	{0xe4c2, &op_strpos,	  2,   0,   3, 0xff, 0x01, 0x00, 0x04}, // strpos c a d 
	{0xe4c3, &op_strpos,	  3,   0,   3, 0xff, 0x01, 0x00, 0x04}, // strpos d a d 
	{0xe4c4, &op_strpos,	  4,   0,   3, 0xff, 0x01, 0x00, 0x04}, // strpos e a d 
	{0xe4c5, &op_strpos,	  5,   0,   3, 0xff, 0x01, 0x00, 0x04}, // strpos f a d 
	{0xe4c6, &op_strpos,	  6,   0,   3, 0xff, 0x01, 0x00, 0x04}, // strpos g a d 
	{0xe4c7, &op_strpos,	  7,   0,   3, 0xff, 0x01, 0x00, 0x04}, // strpos h a d 
	{0xe4c8, &op_strpos,	  0,   1,   3, 0xff, 0x01, 0x00, 0x04}, // strpos a b d 
	{0xe4c9, &op_strpos,	  1,   1,   3, 0xff, 0x01, 0x00, 0x04}, // strpos b b d 
	{0xe4ca, &op_strpos,	  2,   1,   3, 0xff, 0x01, 0x00, 0x04}, // strpos c b d 
	{0xe4cb, &op_strpos,	  3,   1,   3, 0xff, 0x01, 0x00, 0x04}, // strpos d b d 
	{0xe4cc, &op_strpos,	  4,   1,   3, 0xff, 0x01, 0x00, 0x04}, // strpos e b d 
	{0xe4cd, &op_strpos,	  5,   1,   3, 0xff, 0x01, 0x00, 0x04}, // strpos f b d 
	{0xe4ce, &op_strpos,	  6,   1,   3, 0xff, 0x01, 0x00, 0x04}, // strpos g b d 
	{0xe4cf, &op_strpos,	  7,   1,   3, 0xff, 0x01, 0x00, 0x04}, // strpos h b d 
	{0xe4d0, &op_strpos,	  0,   2,   3, 0xff, 0x01, 0x00, 0x04}, // strpos a c d 
	{0xe4d1, &op_strpos,	  1,   2,   3, 0xff, 0x01, 0x00, 0x04}, // strpos b c d 
	{0xe4d2, &op_strpos,	  2,   2,   3, 0xff, 0x01, 0x00, 0x04}, // strpos c c d 
	{0xe4d3, &op_strpos,	  3,   2,   3, 0xff, 0x01, 0x00, 0x04}, // strpos d c d 
	{0xe4d4, &op_strpos,	  4,   2,   3, 0xff, 0x01, 0x00, 0x04}, // strpos e c d 
	{0xe4d5, &op_strpos,	  5,   2,   3, 0xff, 0x01, 0x00, 0x04}, // strpos f c d 
	{0xe4d6, &op_strpos,	  6,   2,   3, 0xff, 0x01, 0x00, 0x04}, // strpos g c d 
	{0xe4d7, &op_strpos,	  7,   2,   3, 0xff, 0x01, 0x00, 0x04}, // strpos h c d 
	{0xe4d8, &op_strpos,	  0,   3,   3, 0xff, 0x01, 0x00, 0x04}, // strpos a d d 
	{0xe4d9, &op_strpos,	  1,   3,   3, 0xff, 0x01, 0x00, 0x04}, // strpos b d d 
	{0xe4da, &op_strpos,	  2,   3,   3, 0xff, 0x01, 0x00, 0x04}, // strpos c d d 
	{0xe4db, &op_strpos,	  3,   3,   3, 0xff, 0x01, 0x00, 0x04}, // strpos d d d 
	{0xe4dc, &op_strpos,	  4,   3,   3, 0xff, 0x01, 0x00, 0x04}, // strpos e d d 
	{0xe4dd, &op_strpos,	  5,   3,   3, 0xff, 0x01, 0x00, 0x04}, // strpos f d d 
	{0xe4de, &op_strpos,	  6,   3,   3, 0xff, 0x01, 0x00, 0x04}, // strpos g d d 
	{0xe4df, &op_strpos,	  7,   3,   3, 0xff, 0x01, 0x00, 0x04}, // strpos h d d 
	{0xe4e0, &op_strpos,	  0,   4,   3, 0xff, 0x01, 0x00, 0x04}, // strpos a e d 
	{0xe4e1, &op_strpos,	  1,   4,   3, 0xff, 0x01, 0x00, 0x04}, // strpos b e d 
	{0xe4e2, &op_strpos,	  2,   4,   3, 0xff, 0x01, 0x00, 0x04}, // strpos c e d 
	{0xe4e3, &op_strpos,	  3,   4,   3, 0xff, 0x01, 0x00, 0x04}, // strpos d e d 
	{0xe4e4, &op_strpos,	  4,   4,   3, 0xff, 0x01, 0x00, 0x04}, // strpos e e d 
	{0xe4e5, &op_strpos,	  5,   4,   3, 0xff, 0x01, 0x00, 0x04}, // strpos f e d 
	{0xe4e6, &op_strpos,	  6,   4,   3, 0xff, 0x01, 0x00, 0x04}, // strpos g e d 
	{0xe4e7, &op_strpos,	  7,   4,   3, 0xff, 0x01, 0x00, 0x04}, // strpos h e d 
	{0xe4e8, &op_strpos,	  0,   5,   3, 0xff, 0x01, 0x00, 0x04}, // strpos a f d 
	{0xe4e9, &op_strpos,	  1,   5,   3, 0xff, 0x01, 0x00, 0x04}, // strpos b f d 
	{0xe4ea, &op_strpos,	  2,   5,   3, 0xff, 0x01, 0x00, 0x04}, // strpos c f d 
	{0xe4eb, &op_strpos,	  3,   5,   3, 0xff, 0x01, 0x00, 0x04}, // strpos d f d 
	{0xe4ec, &op_strpos,	  4,   5,   3, 0xff, 0x01, 0x00, 0x04}, // strpos e f d 
	{0xe4ed, &op_strpos,	  5,   5,   3, 0xff, 0x01, 0x00, 0x04}, // strpos f f d 
	{0xe4ee, &op_strpos,	  6,   5,   3, 0xff, 0x01, 0x00, 0x04}, // strpos g f d 
	{0xe4ef, &op_strpos,	  7,   5,   3, 0xff, 0x01, 0x00, 0x04}, // strpos h f d 
	{0xe4f0, &op_strpos,	  0,   6,   3, 0xff, 0x01, 0x00, 0x04}, // strpos a g d 
	{0xe4f1, &op_strpos,	  1,   6,   3, 0xff, 0x01, 0x00, 0x04}, // strpos b g d 
	{0xe4f2, &op_strpos,	  2,   6,   3, 0xff, 0x01, 0x00, 0x04}, // strpos c g d 
	{0xe4f3, &op_strpos,	  3,   6,   3, 0xff, 0x01, 0x00, 0x04}, // strpos d g d 
	{0xe4f4, &op_strpos,	  4,   6,   3, 0xff, 0x01, 0x00, 0x04}, // strpos e g d 
	{0xe4f5, &op_strpos,	  5,   6,   3, 0xff, 0x01, 0x00, 0x04}, // strpos f g d 
	{0xe4f6, &op_strpos,	  6,   6,   3, 0xff, 0x01, 0x00, 0x04}, // strpos g g d 
	{0xe4f7, &op_strpos,	  7,   6,   3, 0xff, 0x01, 0x00, 0x04}, // strpos h g d 
	{0xe4f8, &op_strpos,	  0,   7,   3, 0xff, 0x01, 0x00, 0x04}, // strpos a h d 
	{0xe4f9, &op_strpos,	  1,   7,   3, 0xff, 0x01, 0x00, 0x04}, // strpos b h d 
	{0xe4fa, &op_strpos,	  2,   7,   3, 0xff, 0x01, 0x00, 0x04}, // strpos c h d 
	{0xe4fb, &op_strpos,	  3,   7,   3, 0xff, 0x01, 0x00, 0x04}, // strpos d h d 
	{0xe4fc, &op_strpos,	  4,   7,   3, 0xff, 0x01, 0x00, 0x04}, // strpos e h d 
	{0xe4fd, &op_strpos,	  5,   7,   3, 0xff, 0x01, 0x00, 0x04}, // strpos f h d 
	{0xe4fe, &op_strpos,	  6,   7,   3, 0xff, 0x01, 0x00, 0x04}, // strpos g h d 
	{0xe4ff, &op_strpos,	  7,   7,   3, 0xff, 0x01, 0x00, 0x04}, // strpos h h d 
	{0xe500, &op_strpos,	  0,   0,   4, 0xff, 0x01, 0x00, 0x04}, // strpos a a e 
	{0xe501, &op_strpos,	  1,   0,   4, 0xff, 0x01, 0x00, 0x04}, // strpos b a e 
	{0xe502, &op_strpos,	  2,   0,   4, 0xff, 0x01, 0x00, 0x04}, // strpos c a e 
	{0xe503, &op_strpos,	  3,   0,   4, 0xff, 0x01, 0x00, 0x04}, // strpos d a e 
	{0xe504, &op_strpos,	  4,   0,   4, 0xff, 0x01, 0x00, 0x04}, // strpos e a e 
	{0xe505, &op_strpos,	  5,   0,   4, 0xff, 0x01, 0x00, 0x04}, // strpos f a e 
	{0xe506, &op_strpos,	  6,   0,   4, 0xff, 0x01, 0x00, 0x04}, // strpos g a e 
	{0xe507, &op_strpos,	  7,   0,   4, 0xff, 0x01, 0x00, 0x04}, // strpos h a e 
	{0xe508, &op_strpos,	  0,   1,   4, 0xff, 0x01, 0x00, 0x04}, // strpos a b e 
	{0xe509, &op_strpos,	  1,   1,   4, 0xff, 0x01, 0x00, 0x04}, // strpos b b e 
	{0xe50a, &op_strpos,	  2,   1,   4, 0xff, 0x01, 0x00, 0x04}, // strpos c b e 
	{0xe50b, &op_strpos,	  3,   1,   4, 0xff, 0x01, 0x00, 0x04}, // strpos d b e 
	{0xe50c, &op_strpos,	  4,   1,   4, 0xff, 0x01, 0x00, 0x04}, // strpos e b e 
	{0xe50d, &op_strpos,	  5,   1,   4, 0xff, 0x01, 0x00, 0x04}, // strpos f b e 
	{0xe50e, &op_strpos,	  6,   1,   4, 0xff, 0x01, 0x00, 0x04}, // strpos g b e 
	{0xe50f, &op_strpos,	  7,   1,   4, 0xff, 0x01, 0x00, 0x04}, // strpos h b e 
	{0xe510, &op_strpos,	  0,   2,   4, 0xff, 0x01, 0x00, 0x04}, // strpos a c e 
	{0xe511, &op_strpos,	  1,   2,   4, 0xff, 0x01, 0x00, 0x04}, // strpos b c e 
	{0xe512, &op_strpos,	  2,   2,   4, 0xff, 0x01, 0x00, 0x04}, // strpos c c e 
	{0xe513, &op_strpos,	  3,   2,   4, 0xff, 0x01, 0x00, 0x04}, // strpos d c e 
	{0xe514, &op_strpos,	  4,   2,   4, 0xff, 0x01, 0x00, 0x04}, // strpos e c e 
	{0xe515, &op_strpos,	  5,   2,   4, 0xff, 0x01, 0x00, 0x04}, // strpos f c e 
	{0xe516, &op_strpos,	  6,   2,   4, 0xff, 0x01, 0x00, 0x04}, // strpos g c e 
	{0xe517, &op_strpos,	  7,   2,   4, 0xff, 0x01, 0x00, 0x04}, // strpos h c e 
	{0xe518, &op_strpos,	  0,   3,   4, 0xff, 0x01, 0x00, 0x04}, // strpos a d e 
	{0xe519, &op_strpos,	  1,   3,   4, 0xff, 0x01, 0x00, 0x04}, // strpos b d e 
	{0xe51a, &op_strpos,	  2,   3,   4, 0xff, 0x01, 0x00, 0x04}, // strpos c d e 
	{0xe51b, &op_strpos,	  3,   3,   4, 0xff, 0x01, 0x00, 0x04}, // strpos d d e 
	{0xe51c, &op_strpos,	  4,   3,   4, 0xff, 0x01, 0x00, 0x04}, // strpos e d e 
	{0xe51d, &op_strpos,	  5,   3,   4, 0xff, 0x01, 0x00, 0x04}, // strpos f d e 
	{0xe51e, &op_strpos,	  6,   3,   4, 0xff, 0x01, 0x00, 0x04}, // strpos g d e 
	{0xe51f, &op_strpos,	  7,   3,   4, 0xff, 0x01, 0x00, 0x04}, // strpos h d e 
	{0xe520, &op_strpos,	  0,   4,   4, 0xff, 0x01, 0x00, 0x04}, // strpos a e e 
	{0xe521, &op_strpos,	  1,   4,   4, 0xff, 0x01, 0x00, 0x04}, // strpos b e e 
	{0xe522, &op_strpos,	  2,   4,   4, 0xff, 0x01, 0x00, 0x04}, // strpos c e e 
	{0xe523, &op_strpos,	  3,   4,   4, 0xff, 0x01, 0x00, 0x04}, // strpos d e e 
	{0xe524, &op_strpos,	  4,   4,   4, 0xff, 0x01, 0x00, 0x04}, // strpos e e e 
	{0xe525, &op_strpos,	  5,   4,   4, 0xff, 0x01, 0x00, 0x04}, // strpos f e e 
	{0xe526, &op_strpos,	  6,   4,   4, 0xff, 0x01, 0x00, 0x04}, // strpos g e e 
	{0xe527, &op_strpos,	  7,   4,   4, 0xff, 0x01, 0x00, 0x04}, // strpos h e e 
	{0xe528, &op_strpos,	  0,   5,   4, 0xff, 0x01, 0x00, 0x04}, // strpos a f e 
	{0xe529, &op_strpos,	  1,   5,   4, 0xff, 0x01, 0x00, 0x04}, // strpos b f e 
	{0xe52a, &op_strpos,	  2,   5,   4, 0xff, 0x01, 0x00, 0x04}, // strpos c f e 
	{0xe52b, &op_strpos,	  3,   5,   4, 0xff, 0x01, 0x00, 0x04}, // strpos d f e 
	{0xe52c, &op_strpos,	  4,   5,   4, 0xff, 0x01, 0x00, 0x04}, // strpos e f e 
	{0xe52d, &op_strpos,	  5,   5,   4, 0xff, 0x01, 0x00, 0x04}, // strpos f f e 
	{0xe52e, &op_strpos,	  6,   5,   4, 0xff, 0x01, 0x00, 0x04}, // strpos g f e 
	{0xe52f, &op_strpos,	  7,   5,   4, 0xff, 0x01, 0x00, 0x04}, // strpos h f e 
	{0xe530, &op_strpos,	  0,   6,   4, 0xff, 0x01, 0x00, 0x04}, // strpos a g e 
	{0xe531, &op_strpos,	  1,   6,   4, 0xff, 0x01, 0x00, 0x04}, // strpos b g e 
	{0xe532, &op_strpos,	  2,   6,   4, 0xff, 0x01, 0x00, 0x04}, // strpos c g e 
	{0xe533, &op_strpos,	  3,   6,   4, 0xff, 0x01, 0x00, 0x04}, // strpos d g e 
	{0xe534, &op_strpos,	  4,   6,   4, 0xff, 0x01, 0x00, 0x04}, // strpos e g e 
	{0xe535, &op_strpos,	  5,   6,   4, 0xff, 0x01, 0x00, 0x04}, // strpos f g e 
	{0xe536, &op_strpos,	  6,   6,   4, 0xff, 0x01, 0x00, 0x04}, // strpos g g e 
	{0xe537, &op_strpos,	  7,   6,   4, 0xff, 0x01, 0x00, 0x04}, // strpos h g e 
	{0xe538, &op_strpos,	  0,   7,   4, 0xff, 0x01, 0x00, 0x04}, // strpos a h e 
	{0xe539, &op_strpos,	  1,   7,   4, 0xff, 0x01, 0x00, 0x04}, // strpos b h e 
	{0xe53a, &op_strpos,	  2,   7,   4, 0xff, 0x01, 0x00, 0x04}, // strpos c h e 
	{0xe53b, &op_strpos,	  3,   7,   4, 0xff, 0x01, 0x00, 0x04}, // strpos d h e 
	{0xe53c, &op_strpos,	  4,   7,   4, 0xff, 0x01, 0x00, 0x04}, // strpos e h e 
	{0xe53d, &op_strpos,	  5,   7,   4, 0xff, 0x01, 0x00, 0x04}, // strpos f h e 
	{0xe53e, &op_strpos,	  6,   7,   4, 0xff, 0x01, 0x00, 0x04}, // strpos g h e 
	{0xe53f, &op_strpos,	  7,   7,   4, 0xff, 0x01, 0x00, 0x04}, // strpos h h e 
	{0xe540, &op_strpos,	  0,   0,   5, 0xff, 0x01, 0x00, 0x04}, // strpos a a f 
	{0xe541, &op_strpos,	  1,   0,   5, 0xff, 0x01, 0x00, 0x04}, // strpos b a f 
	{0xe542, &op_strpos,	  2,   0,   5, 0xff, 0x01, 0x00, 0x04}, // strpos c a f 
	{0xe543, &op_strpos,	  3,   0,   5, 0xff, 0x01, 0x00, 0x04}, // strpos d a f 
	{0xe544, &op_strpos,	  4,   0,   5, 0xff, 0x01, 0x00, 0x04}, // strpos e a f 
	{0xe545, &op_strpos,	  5,   0,   5, 0xff, 0x01, 0x00, 0x04}, // strpos f a f 
	{0xe546, &op_strpos,	  6,   0,   5, 0xff, 0x01, 0x00, 0x04}, // strpos g a f 
	{0xe547, &op_strpos,	  7,   0,   5, 0xff, 0x01, 0x00, 0x04}, // strpos h a f 
	{0xe548, &op_strpos,	  0,   1,   5, 0xff, 0x01, 0x00, 0x04}, // strpos a b f 
	{0xe549, &op_strpos,	  1,   1,   5, 0xff, 0x01, 0x00, 0x04}, // strpos b b f 
	{0xe54a, &op_strpos,	  2,   1,   5, 0xff, 0x01, 0x00, 0x04}, // strpos c b f 
	{0xe54b, &op_strpos,	  3,   1,   5, 0xff, 0x01, 0x00, 0x04}, // strpos d b f 
	{0xe54c, &op_strpos,	  4,   1,   5, 0xff, 0x01, 0x00, 0x04}, // strpos e b f 
	{0xe54d, &op_strpos,	  5,   1,   5, 0xff, 0x01, 0x00, 0x04}, // strpos f b f 
	{0xe54e, &op_strpos,	  6,   1,   5, 0xff, 0x01, 0x00, 0x04}, // strpos g b f 
	{0xe54f, &op_strpos,	  7,   1,   5, 0xff, 0x01, 0x00, 0x04}, // strpos h b f 
	{0xe550, &op_strpos,	  0,   2,   5, 0xff, 0x01, 0x00, 0x04}, // strpos a c f 
	{0xe551, &op_strpos,	  1,   2,   5, 0xff, 0x01, 0x00, 0x04}, // strpos b c f 
	{0xe552, &op_strpos,	  2,   2,   5, 0xff, 0x01, 0x00, 0x04}, // strpos c c f 
	{0xe553, &op_strpos,	  3,   2,   5, 0xff, 0x01, 0x00, 0x04}, // strpos d c f 
	{0xe554, &op_strpos,	  4,   2,   5, 0xff, 0x01, 0x00, 0x04}, // strpos e c f 
	{0xe555, &op_strpos,	  5,   2,   5, 0xff, 0x01, 0x00, 0x04}, // strpos f c f 
	{0xe556, &op_strpos,	  6,   2,   5, 0xff, 0x01, 0x00, 0x04}, // strpos g c f 
	{0xe557, &op_strpos,	  7,   2,   5, 0xff, 0x01, 0x00, 0x04}, // strpos h c f 
	{0xe558, &op_strpos,	  0,   3,   5, 0xff, 0x01, 0x00, 0x04}, // strpos a d f 
	{0xe559, &op_strpos,	  1,   3,   5, 0xff, 0x01, 0x00, 0x04}, // strpos b d f 
	{0xe55a, &op_strpos,	  2,   3,   5, 0xff, 0x01, 0x00, 0x04}, // strpos c d f 
	{0xe55b, &op_strpos,	  3,   3,   5, 0xff, 0x01, 0x00, 0x04}, // strpos d d f 
	{0xe55c, &op_strpos,	  4,   3,   5, 0xff, 0x01, 0x00, 0x04}, // strpos e d f 
	{0xe55d, &op_strpos,	  5,   3,   5, 0xff, 0x01, 0x00, 0x04}, // strpos f d f 
	{0xe55e, &op_strpos,	  6,   3,   5, 0xff, 0x01, 0x00, 0x04}, // strpos g d f 
	{0xe55f, &op_strpos,	  7,   3,   5, 0xff, 0x01, 0x00, 0x04}, // strpos h d f 
	{0xe560, &op_strpos,	  0,   4,   5, 0xff, 0x01, 0x00, 0x04}, // strpos a e f 
	{0xe561, &op_strpos,	  1,   4,   5, 0xff, 0x01, 0x00, 0x04}, // strpos b e f 
	{0xe562, &op_strpos,	  2,   4,   5, 0xff, 0x01, 0x00, 0x04}, // strpos c e f 
	{0xe563, &op_strpos,	  3,   4,   5, 0xff, 0x01, 0x00, 0x04}, // strpos d e f 
	{0xe564, &op_strpos,	  4,   4,   5, 0xff, 0x01, 0x00, 0x04}, // strpos e e f 
	{0xe565, &op_strpos,	  5,   4,   5, 0xff, 0x01, 0x00, 0x04}, // strpos f e f 
	{0xe566, &op_strpos,	  6,   4,   5, 0xff, 0x01, 0x00, 0x04}, // strpos g e f 
	{0xe567, &op_strpos,	  7,   4,   5, 0xff, 0x01, 0x00, 0x04}, // strpos h e f 
	{0xe568, &op_strpos,	  0,   5,   5, 0xff, 0x01, 0x00, 0x04}, // strpos a f f 
	{0xe569, &op_strpos,	  1,   5,   5, 0xff, 0x01, 0x00, 0x04}, // strpos b f f 
	{0xe56a, &op_strpos,	  2,   5,   5, 0xff, 0x01, 0x00, 0x04}, // strpos c f f 
	{0xe56b, &op_strpos,	  3,   5,   5, 0xff, 0x01, 0x00, 0x04}, // strpos d f f 
	{0xe56c, &op_strpos,	  4,   5,   5, 0xff, 0x01, 0x00, 0x04}, // strpos e f f 
	{0xe56d, &op_strpos,	  5,   5,   5, 0xff, 0x01, 0x00, 0x04}, // strpos f f f 
	{0xe56e, &op_strpos,	  6,   5,   5, 0xff, 0x01, 0x00, 0x04}, // strpos g f f 
	{0xe56f, &op_strpos,	  7,   5,   5, 0xff, 0x01, 0x00, 0x04}, // strpos h f f 
	{0xe570, &op_strpos,	  0,   6,   5, 0xff, 0x01, 0x00, 0x04}, // strpos a g f 
	{0xe571, &op_strpos,	  1,   6,   5, 0xff, 0x01, 0x00, 0x04}, // strpos b g f 
	{0xe572, &op_strpos,	  2,   6,   5, 0xff, 0x01, 0x00, 0x04}, // strpos c g f 
	{0xe573, &op_strpos,	  3,   6,   5, 0xff, 0x01, 0x00, 0x04}, // strpos d g f 
	{0xe574, &op_strpos,	  4,   6,   5, 0xff, 0x01, 0x00, 0x04}, // strpos e g f 
	{0xe575, &op_strpos,	  5,   6,   5, 0xff, 0x01, 0x00, 0x04}, // strpos f g f 
	{0xe576, &op_strpos,	  6,   6,   5, 0xff, 0x01, 0x00, 0x04}, // strpos g g f 
	{0xe577, &op_strpos,	  7,   6,   5, 0xff, 0x01, 0x00, 0x04}, // strpos h g f 
	{0xe578, &op_strpos,	  0,   7,   5, 0xff, 0x01, 0x00, 0x04}, // strpos a h f 
	{0xe579, &op_strpos,	  1,   7,   5, 0xff, 0x01, 0x00, 0x04}, // strpos b h f 
	{0xe57a, &op_strpos,	  2,   7,   5, 0xff, 0x01, 0x00, 0x04}, // strpos c h f 
	{0xe57b, &op_strpos,	  3,   7,   5, 0xff, 0x01, 0x00, 0x04}, // strpos d h f 
	{0xe57c, &op_strpos,	  4,   7,   5, 0xff, 0x01, 0x00, 0x04}, // strpos e h f 
	{0xe57d, &op_strpos,	  5,   7,   5, 0xff, 0x01, 0x00, 0x04}, // strpos f h f 
	{0xe57e, &op_strpos,	  6,   7,   5, 0xff, 0x01, 0x00, 0x04}, // strpos g h f 
	{0xe57f, &op_strpos,	  7,   7,   5, 0xff, 0x01, 0x00, 0x04}, // strpos h h f 
	{0xe580, &op_strpos,	  0,   0,   6, 0xff, 0x01, 0x00, 0x04}, // strpos a a g 
	{0xe581, &op_strpos,	  1,   0,   6, 0xff, 0x01, 0x00, 0x04}, // strpos b a g 
	{0xe582, &op_strpos,	  2,   0,   6, 0xff, 0x01, 0x00, 0x04}, // strpos c a g 
	{0xe583, &op_strpos,	  3,   0,   6, 0xff, 0x01, 0x00, 0x04}, // strpos d a g 
	{0xe584, &op_strpos,	  4,   0,   6, 0xff, 0x01, 0x00, 0x04}, // strpos e a g 
	{0xe585, &op_strpos,	  5,   0,   6, 0xff, 0x01, 0x00, 0x04}, // strpos f a g 
	{0xe586, &op_strpos,	  6,   0,   6, 0xff, 0x01, 0x00, 0x04}, // strpos g a g 
	{0xe587, &op_strpos,	  7,   0,   6, 0xff, 0x01, 0x00, 0x04}, // strpos h a g 
	{0xe588, &op_strpos,	  0,   1,   6, 0xff, 0x01, 0x00, 0x04}, // strpos a b g 
	{0xe589, &op_strpos,	  1,   1,   6, 0xff, 0x01, 0x00, 0x04}, // strpos b b g 
	{0xe58a, &op_strpos,	  2,   1,   6, 0xff, 0x01, 0x00, 0x04}, // strpos c b g 
	{0xe58b, &op_strpos,	  3,   1,   6, 0xff, 0x01, 0x00, 0x04}, // strpos d b g 
	{0xe58c, &op_strpos,	  4,   1,   6, 0xff, 0x01, 0x00, 0x04}, // strpos e b g 
	{0xe58d, &op_strpos,	  5,   1,   6, 0xff, 0x01, 0x00, 0x04}, // strpos f b g 
	{0xe58e, &op_strpos,	  6,   1,   6, 0xff, 0x01, 0x00, 0x04}, // strpos g b g 
	{0xe58f, &op_strpos,	  7,   1,   6, 0xff, 0x01, 0x00, 0x04}, // strpos h b g 
	{0xe590, &op_strpos,	  0,   2,   6, 0xff, 0x01, 0x00, 0x04}, // strpos a c g 
	{0xe591, &op_strpos,	  1,   2,   6, 0xff, 0x01, 0x00, 0x04}, // strpos b c g 
	{0xe592, &op_strpos,	  2,   2,   6, 0xff, 0x01, 0x00, 0x04}, // strpos c c g 
	{0xe593, &op_strpos,	  3,   2,   6, 0xff, 0x01, 0x00, 0x04}, // strpos d c g 
	{0xe594, &op_strpos,	  4,   2,   6, 0xff, 0x01, 0x00, 0x04}, // strpos e c g 
	{0xe595, &op_strpos,	  5,   2,   6, 0xff, 0x01, 0x00, 0x04}, // strpos f c g 
	{0xe596, &op_strpos,	  6,   2,   6, 0xff, 0x01, 0x00, 0x04}, // strpos g c g 
	{0xe597, &op_strpos,	  7,   2,   6, 0xff, 0x01, 0x00, 0x04}, // strpos h c g 
	{0xe598, &op_strpos,	  0,   3,   6, 0xff, 0x01, 0x00, 0x04}, // strpos a d g 
	{0xe599, &op_strpos,	  1,   3,   6, 0xff, 0x01, 0x00, 0x04}, // strpos b d g 
	{0xe59a, &op_strpos,	  2,   3,   6, 0xff, 0x01, 0x00, 0x04}, // strpos c d g 
	{0xe59b, &op_strpos,	  3,   3,   6, 0xff, 0x01, 0x00, 0x04}, // strpos d d g 
	{0xe59c, &op_strpos,	  4,   3,   6, 0xff, 0x01, 0x00, 0x04}, // strpos e d g 
	{0xe59d, &op_strpos,	  5,   3,   6, 0xff, 0x01, 0x00, 0x04}, // strpos f d g 
	{0xe59e, &op_strpos,	  6,   3,   6, 0xff, 0x01, 0x00, 0x04}, // strpos g d g 
	{0xe59f, &op_strpos,	  7,   3,   6, 0xff, 0x01, 0x00, 0x04}, // strpos h d g 
	{0xe5a0, &op_strpos,	  0,   4,   6, 0xff, 0x01, 0x00, 0x04}, // strpos a e g 
	{0xe5a1, &op_strpos,	  1,   4,   6, 0xff, 0x01, 0x00, 0x04}, // strpos b e g 
	{0xe5a2, &op_strpos,	  2,   4,   6, 0xff, 0x01, 0x00, 0x04}, // strpos c e g 
	{0xe5a3, &op_strpos,	  3,   4,   6, 0xff, 0x01, 0x00, 0x04}, // strpos d e g 
	{0xe5a4, &op_strpos,	  4,   4,   6, 0xff, 0x01, 0x00, 0x04}, // strpos e e g 
	{0xe5a5, &op_strpos,	  5,   4,   6, 0xff, 0x01, 0x00, 0x04}, // strpos f e g 
	{0xe5a6, &op_strpos,	  6,   4,   6, 0xff, 0x01, 0x00, 0x04}, // strpos g e g 
	{0xe5a7, &op_strpos,	  7,   4,   6, 0xff, 0x01, 0x00, 0x04}, // strpos h e g 
	{0xe5a8, &op_strpos,	  0,   5,   6, 0xff, 0x01, 0x00, 0x04}, // strpos a f g 
	{0xe5a9, &op_strpos,	  1,   5,   6, 0xff, 0x01, 0x00, 0x04}, // strpos b f g 
	{0xe5aa, &op_strpos,	  2,   5,   6, 0xff, 0x01, 0x00, 0x04}, // strpos c f g 
	{0xe5ab, &op_strpos,	  3,   5,   6, 0xff, 0x01, 0x00, 0x04}, // strpos d f g 
	{0xe5ac, &op_strpos,	  4,   5,   6, 0xff, 0x01, 0x00, 0x04}, // strpos e f g 
	{0xe5ad, &op_strpos,	  5,   5,   6, 0xff, 0x01, 0x00, 0x04}, // strpos f f g 
	{0xe5ae, &op_strpos,	  6,   5,   6, 0xff, 0x01, 0x00, 0x04}, // strpos g f g 
	{0xe5af, &op_strpos,	  7,   5,   6, 0xff, 0x01, 0x00, 0x04}, // strpos h f g 
	{0xe5b0, &op_strpos,	  0,   6,   6, 0xff, 0x01, 0x00, 0x04}, // strpos a g g 
	{0xe5b1, &op_strpos,	  1,   6,   6, 0xff, 0x01, 0x00, 0x04}, // strpos b g g 
	{0xe5b2, &op_strpos,	  2,   6,   6, 0xff, 0x01, 0x00, 0x04}, // strpos c g g 
	{0xe5b3, &op_strpos,	  3,   6,   6, 0xff, 0x01, 0x00, 0x04}, // strpos d g g 
	{0xe5b4, &op_strpos,	  4,   6,   6, 0xff, 0x01, 0x00, 0x04}, // strpos e g g 
	{0xe5b5, &op_strpos,	  5,   6,   6, 0xff, 0x01, 0x00, 0x04}, // strpos f g g 
	{0xe5b6, &op_strpos,	  6,   6,   6, 0xff, 0x01, 0x00, 0x04}, // strpos g g g 
	{0xe5b7, &op_strpos,	  7,   6,   6, 0xff, 0x01, 0x00, 0x04}, // strpos h g g 
	{0xe5b8, &op_strpos,	  0,   7,   6, 0xff, 0x01, 0x00, 0x04}, // strpos a h g 
	{0xe5b9, &op_strpos,	  1,   7,   6, 0xff, 0x01, 0x00, 0x04}, // strpos b h g 
	{0xe5ba, &op_strpos,	  2,   7,   6, 0xff, 0x01, 0x00, 0x04}, // strpos c h g 
	{0xe5bb, &op_strpos,	  3,   7,   6, 0xff, 0x01, 0x00, 0x04}, // strpos d h g 
	{0xe5bc, &op_strpos,	  4,   7,   6, 0xff, 0x01, 0x00, 0x04}, // strpos e h g 
	{0xe5bd, &op_strpos,	  5,   7,   6, 0xff, 0x01, 0x00, 0x04}, // strpos f h g 
	{0xe5be, &op_strpos,	  6,   7,   6, 0xff, 0x01, 0x00, 0x04}, // strpos g h g 
	{0xe5bf, &op_strpos,	  7,   7,   6, 0xff, 0x01, 0x00, 0x04}, // strpos h h g 
	{0xe5c0, &op_strpos,	  0,   0,   7, 0xff, 0x01, 0x00, 0x04}, // strpos a a h 
	{0xe5c1, &op_strpos,	  1,   0,   7, 0xff, 0x01, 0x00, 0x04}, // strpos b a h 
	{0xe5c2, &op_strpos,	  2,   0,   7, 0xff, 0x01, 0x00, 0x04}, // strpos c a h 
	{0xe5c3, &op_strpos,	  3,   0,   7, 0xff, 0x01, 0x00, 0x04}, // strpos d a h 
	{0xe5c4, &op_strpos,	  4,   0,   7, 0xff, 0x01, 0x00, 0x04}, // strpos e a h 
	{0xe5c5, &op_strpos,	  5,   0,   7, 0xff, 0x01, 0x00, 0x04}, // strpos f a h 
	{0xe5c6, &op_strpos,	  6,   0,   7, 0xff, 0x01, 0x00, 0x04}, // strpos g a h 
	{0xe5c7, &op_strpos,	  7,   0,   7, 0xff, 0x01, 0x00, 0x04}, // strpos h a h 
	{0xe5c8, &op_strpos,	  0,   1,   7, 0xff, 0x01, 0x00, 0x04}, // strpos a b h 
	{0xe5c9, &op_strpos,	  1,   1,   7, 0xff, 0x01, 0x00, 0x04}, // strpos b b h 
	{0xe5ca, &op_strpos,	  2,   1,   7, 0xff, 0x01, 0x00, 0x04}, // strpos c b h 
	{0xe5cb, &op_strpos,	  3,   1,   7, 0xff, 0x01, 0x00, 0x04}, // strpos d b h 
	{0xe5cc, &op_strpos,	  4,   1,   7, 0xff, 0x01, 0x00, 0x04}, // strpos e b h 
	{0xe5cd, &op_strpos,	  5,   1,   7, 0xff, 0x01, 0x00, 0x04}, // strpos f b h 
	{0xe5ce, &op_strpos,	  6,   1,   7, 0xff, 0x01, 0x00, 0x04}, // strpos g b h 
	{0xe5cf, &op_strpos,	  7,   1,   7, 0xff, 0x01, 0x00, 0x04}, // strpos h b h 
	{0xe5d0, &op_strpos,	  0,   2,   7, 0xff, 0x01, 0x00, 0x04}, // strpos a c h 
	{0xe5d1, &op_strpos,	  1,   2,   7, 0xff, 0x01, 0x00, 0x04}, // strpos b c h 
	{0xe5d2, &op_strpos,	  2,   2,   7, 0xff, 0x01, 0x00, 0x04}, // strpos c c h 
	{0xe5d3, &op_strpos,	  3,   2,   7, 0xff, 0x01, 0x00, 0x04}, // strpos d c h 
	{0xe5d4, &op_strpos,	  4,   2,   7, 0xff, 0x01, 0x00, 0x04}, // strpos e c h 
	{0xe5d5, &op_strpos,	  5,   2,   7, 0xff, 0x01, 0x00, 0x04}, // strpos f c h 
	{0xe5d6, &op_strpos,	  6,   2,   7, 0xff, 0x01, 0x00, 0x04}, // strpos g c h 
	{0xe5d7, &op_strpos,	  7,   2,   7, 0xff, 0x01, 0x00, 0x04}, // strpos h c h 
	{0xe5d8, &op_strpos,	  0,   3,   7, 0xff, 0x01, 0x00, 0x04}, // strpos a d h 
	{0xe5d9, &op_strpos,	  1,   3,   7, 0xff, 0x01, 0x00, 0x04}, // strpos b d h 
	{0xe5da, &op_strpos,	  2,   3,   7, 0xff, 0x01, 0x00, 0x04}, // strpos c d h 
	{0xe5db, &op_strpos,	  3,   3,   7, 0xff, 0x01, 0x00, 0x04}, // strpos d d h 
	{0xe5dc, &op_strpos,	  4,   3,   7, 0xff, 0x01, 0x00, 0x04}, // strpos e d h 
	{0xe5dd, &op_strpos,	  5,   3,   7, 0xff, 0x01, 0x00, 0x04}, // strpos f d h 
	{0xe5de, &op_strpos,	  6,   3,   7, 0xff, 0x01, 0x00, 0x04}, // strpos g d h 
	{0xe5df, &op_strpos,	  7,   3,   7, 0xff, 0x01, 0x00, 0x04}, // strpos h d h 
	{0xe5e0, &op_strpos,	  0,   4,   7, 0xff, 0x01, 0x00, 0x04}, // strpos a e h 
	{0xe5e1, &op_strpos,	  1,   4,   7, 0xff, 0x01, 0x00, 0x04}, // strpos b e h 
	{0xe5e2, &op_strpos,	  2,   4,   7, 0xff, 0x01, 0x00, 0x04}, // strpos c e h 
	{0xe5e3, &op_strpos,	  3,   4,   7, 0xff, 0x01, 0x00, 0x04}, // strpos d e h 
	{0xe5e4, &op_strpos,	  4,   4,   7, 0xff, 0x01, 0x00, 0x04}, // strpos e e h 
	{0xe5e5, &op_strpos,	  5,   4,   7, 0xff, 0x01, 0x00, 0x04}, // strpos f e h 
	{0xe5e6, &op_strpos,	  6,   4,   7, 0xff, 0x01, 0x00, 0x04}, // strpos g e h 
	{0xe5e7, &op_strpos,	  7,   4,   7, 0xff, 0x01, 0x00, 0x04}, // strpos h e h 
	{0xe5e8, &op_strpos,	  0,   5,   7, 0xff, 0x01, 0x00, 0x04}, // strpos a f h 
	{0xe5e9, &op_strpos,	  1,   5,   7, 0xff, 0x01, 0x00, 0x04}, // strpos b f h 
	{0xe5ea, &op_strpos,	  2,   5,   7, 0xff, 0x01, 0x00, 0x04}, // strpos c f h 
	{0xe5eb, &op_strpos,	  3,   5,   7, 0xff, 0x01, 0x00, 0x04}, // strpos d f h 
	{0xe5ec, &op_strpos,	  4,   5,   7, 0xff, 0x01, 0x00, 0x04}, // strpos e f h 
	{0xe5ed, &op_strpos,	  5,   5,   7, 0xff, 0x01, 0x00, 0x04}, // strpos f f h 
	{0xe5ee, &op_strpos,	  6,   5,   7, 0xff, 0x01, 0x00, 0x04}, // strpos g f h 
	{0xe5ef, &op_strpos,	  7,   5,   7, 0xff, 0x01, 0x00, 0x04}, // strpos h f h 
	{0xe5f0, &op_strpos,	  0,   6,   7, 0xff, 0x01, 0x00, 0x04}, // strpos a g h 
	{0xe5f1, &op_strpos,	  1,   6,   7, 0xff, 0x01, 0x00, 0x04}, // strpos b g h 
	{0xe5f2, &op_strpos,	  2,   6,   7, 0xff, 0x01, 0x00, 0x04}, // strpos c g h 
	{0xe5f3, &op_strpos,	  3,   6,   7, 0xff, 0x01, 0x00, 0x04}, // strpos d g h 
	{0xe5f4, &op_strpos,	  4,   6,   7, 0xff, 0x01, 0x00, 0x04}, // strpos e g h 
	{0xe5f5, &op_strpos,	  5,   6,   7, 0xff, 0x01, 0x00, 0x04}, // strpos f g h 
	{0xe5f6, &op_strpos,	  6,   6,   7, 0xff, 0x01, 0x00, 0x04}, // strpos g g h 
	{0xe5f7, &op_strpos,	  7,   6,   7, 0xff, 0x01, 0x00, 0x04}, // strpos h g h 
	{0xe5f8, &op_strpos,	  0,   7,   7, 0xff, 0x01, 0x00, 0x04}, // strpos a h h 
	{0xe5f9, &op_strpos,	  1,   7,   7, 0xff, 0x01, 0x00, 0x04}, // strpos b h h 
	{0xe5fa, &op_strpos,	  2,   7,   7, 0xff, 0x01, 0x00, 0x04}, // strpos c h h 
	{0xe5fb, &op_strpos,	  3,   7,   7, 0xff, 0x01, 0x00, 0x04}, // strpos d h h 
	{0xe5fc, &op_strpos,	  4,   7,   7, 0xff, 0x01, 0x00, 0x04}, // strpos e h h 
	{0xe5fd, &op_strpos,	  5,   7,   7, 0xff, 0x01, 0x00, 0x04}, // strpos f h h 
	{0xe5fe, &op_strpos,	  6,   7,   7, 0xff, 0x01, 0x00, 0x04}, // strpos g h h 
	{0xe5ff, &op_strpos,	  7,   7,   7, 0xff, 0x01, 0x00, 0x04}, // strpos h h h 
	{0xe600, &op_getbyte,	  0,   0,   0, 0xff, 0x01, 0x00, 0x04}, // getbyte a a a 
	{0xe601, &op_getbyte,	  1,   0,   0, 0xff, 0x01, 0x00, 0x04}, // getbyte b a a 
	{0xe602, &op_getbyte,	  2,   0,   0, 0xff, 0x01, 0x00, 0x04}, // getbyte c a a 
	{0xe603, &op_getbyte,	  3,   0,   0, 0xff, 0x01, 0x00, 0x04}, // getbyte d a a 
	{0xe604, &op_getbyte,	  4,   0,   0, 0xff, 0x01, 0x00, 0x04}, // getbyte e a a 
	{0xe605, &op_getbyte,	  5,   0,   0, 0xff, 0x01, 0x00, 0x04}, // getbyte f a a 
	{0xe606, &op_getbyte,	  6,   0,   0, 0xff, 0x01, 0x00, 0x04}, // getbyte g a a 
	{0xe607, &op_getbyte,	  7,   0,   0, 0xff, 0x01, 0x00, 0x04}, // getbyte h a a 
	{0xe608, &op_getbyte,	  0,   1,   0, 0xff, 0x01, 0x00, 0x04}, // getbyte a b a 
	{0xe609, &op_getbyte,	  1,   1,   0, 0xff, 0x01, 0x00, 0x04}, // getbyte b b a 
	{0xe60a, &op_getbyte,	  2,   1,   0, 0xff, 0x01, 0x00, 0x04}, // getbyte c b a 
	{0xe60b, &op_getbyte,	  3,   1,   0, 0xff, 0x01, 0x00, 0x04}, // getbyte d b a 
	{0xe60c, &op_getbyte,	  4,   1,   0, 0xff, 0x01, 0x00, 0x04}, // getbyte e b a 
	{0xe60d, &op_getbyte,	  5,   1,   0, 0xff, 0x01, 0x00, 0x04}, // getbyte f b a 
	{0xe60e, &op_getbyte,	  6,   1,   0, 0xff, 0x01, 0x00, 0x04}, // getbyte g b a 
	{0xe60f, &op_getbyte,	  7,   1,   0, 0xff, 0x01, 0x00, 0x04}, // getbyte h b a 
	{0xe610, &op_getbyte,	  0,   2,   0, 0xff, 0x01, 0x00, 0x04}, // getbyte a c a 
	{0xe611, &op_getbyte,	  1,   2,   0, 0xff, 0x01, 0x00, 0x04}, // getbyte b c a 
	{0xe612, &op_getbyte,	  2,   2,   0, 0xff, 0x01, 0x00, 0x04}, // getbyte c c a 
	{0xe613, &op_getbyte,	  3,   2,   0, 0xff, 0x01, 0x00, 0x04}, // getbyte d c a 
	{0xe614, &op_getbyte,	  4,   2,   0, 0xff, 0x01, 0x00, 0x04}, // getbyte e c a 
	{0xe615, &op_getbyte,	  5,   2,   0, 0xff, 0x01, 0x00, 0x04}, // getbyte f c a 
	{0xe616, &op_getbyte,	  6,   2,   0, 0xff, 0x01, 0x00, 0x04}, // getbyte g c a 
	{0xe617, &op_getbyte,	  7,   2,   0, 0xff, 0x01, 0x00, 0x04}, // getbyte h c a 
	{0xe618, &op_getbyte,	  0,   3,   0, 0xff, 0x01, 0x00, 0x04}, // getbyte a d a 
	{0xe619, &op_getbyte,	  1,   3,   0, 0xff, 0x01, 0x00, 0x04}, // getbyte b d a 
	{0xe61a, &op_getbyte,	  2,   3,   0, 0xff, 0x01, 0x00, 0x04}, // getbyte c d a 
	{0xe61b, &op_getbyte,	  3,   3,   0, 0xff, 0x01, 0x00, 0x04}, // getbyte d d a 
	{0xe61c, &op_getbyte,	  4,   3,   0, 0xff, 0x01, 0x00, 0x04}, // getbyte e d a 
	{0xe61d, &op_getbyte,	  5,   3,   0, 0xff, 0x01, 0x00, 0x04}, // getbyte f d a 
	{0xe61e, &op_getbyte,	  6,   3,   0, 0xff, 0x01, 0x00, 0x04}, // getbyte g d a 
	{0xe61f, &op_getbyte,	  7,   3,   0, 0xff, 0x01, 0x00, 0x04}, // getbyte h d a 
	{0xe620, &op_getbyte,	  0,   4,   0, 0xff, 0x01, 0x00, 0x04}, // getbyte a e a 
	{0xe621, &op_getbyte,	  1,   4,   0, 0xff, 0x01, 0x00, 0x04}, // getbyte b e a 
	{0xe622, &op_getbyte,	  2,   4,   0, 0xff, 0x01, 0x00, 0x04}, // getbyte c e a 
	{0xe623, &op_getbyte,	  3,   4,   0, 0xff, 0x01, 0x00, 0x04}, // getbyte d e a 
	{0xe624, &op_getbyte,	  4,   4,   0, 0xff, 0x01, 0x00, 0x04}, // getbyte e e a 
	{0xe625, &op_getbyte,	  5,   4,   0, 0xff, 0x01, 0x00, 0x04}, // getbyte f e a 
	{0xe626, &op_getbyte,	  6,   4,   0, 0xff, 0x01, 0x00, 0x04}, // getbyte g e a 
	{0xe627, &op_getbyte,	  7,   4,   0, 0xff, 0x01, 0x00, 0x04}, // getbyte h e a 
	{0xe628, &op_getbyte,	  0,   5,   0, 0xff, 0x01, 0x00, 0x04}, // getbyte a f a 
	{0xe629, &op_getbyte,	  1,   5,   0, 0xff, 0x01, 0x00, 0x04}, // getbyte b f a 
	{0xe62a, &op_getbyte,	  2,   5,   0, 0xff, 0x01, 0x00, 0x04}, // getbyte c f a 
	{0xe62b, &op_getbyte,	  3,   5,   0, 0xff, 0x01, 0x00, 0x04}, // getbyte d f a 
	{0xe62c, &op_getbyte,	  4,   5,   0, 0xff, 0x01, 0x00, 0x04}, // getbyte e f a 
	{0xe62d, &op_getbyte,	  5,   5,   0, 0xff, 0x01, 0x00, 0x04}, // getbyte f f a 
	{0xe62e, &op_getbyte,	  6,   5,   0, 0xff, 0x01, 0x00, 0x04}, // getbyte g f a 
	{0xe62f, &op_getbyte,	  7,   5,   0, 0xff, 0x01, 0x00, 0x04}, // getbyte h f a 
	{0xe630, &op_getbyte,	  0,   6,   0, 0xff, 0x01, 0x00, 0x04}, // getbyte a g a 
	{0xe631, &op_getbyte,	  1,   6,   0, 0xff, 0x01, 0x00, 0x04}, // getbyte b g a 
	{0xe632, &op_getbyte,	  2,   6,   0, 0xff, 0x01, 0x00, 0x04}, // getbyte c g a 
	{0xe633, &op_getbyte,	  3,   6,   0, 0xff, 0x01, 0x00, 0x04}, // getbyte d g a 
	{0xe634, &op_getbyte,	  4,   6,   0, 0xff, 0x01, 0x00, 0x04}, // getbyte e g a 
	{0xe635, &op_getbyte,	  5,   6,   0, 0xff, 0x01, 0x00, 0x04}, // getbyte f g a 
	{0xe636, &op_getbyte,	  6,   6,   0, 0xff, 0x01, 0x00, 0x04}, // getbyte g g a 
	{0xe637, &op_getbyte,	  7,   6,   0, 0xff, 0x01, 0x00, 0x04}, // getbyte h g a 
	{0xe638, &op_getbyte,	  0,   7,   0, 0xff, 0x01, 0x00, 0x04}, // getbyte a h a 
	{0xe639, &op_getbyte,	  1,   7,   0, 0xff, 0x01, 0x00, 0x04}, // getbyte b h a 
	{0xe63a, &op_getbyte,	  2,   7,   0, 0xff, 0x01, 0x00, 0x04}, // getbyte c h a 
	{0xe63b, &op_getbyte,	  3,   7,   0, 0xff, 0x01, 0x00, 0x04}, // getbyte d h a 
	{0xe63c, &op_getbyte,	  4,   7,   0, 0xff, 0x01, 0x00, 0x04}, // getbyte e h a 
	{0xe63d, &op_getbyte,	  5,   7,   0, 0xff, 0x01, 0x00, 0x04}, // getbyte f h a 
	{0xe63e, &op_getbyte,	  6,   7,   0, 0xff, 0x01, 0x00, 0x04}, // getbyte g h a 
	{0xe63f, &op_getbyte,	  7,   7,   0, 0xff, 0x01, 0x00, 0x04}, // getbyte h h a 
	{0xe640, &op_getbyte,	  0,   0,   1, 0xff, 0x01, 0x00, 0x04}, // getbyte a a b 
	{0xe641, &op_getbyte,	  1,   0,   1, 0xff, 0x01, 0x00, 0x04}, // getbyte b a b 
	{0xe642, &op_getbyte,	  2,   0,   1, 0xff, 0x01, 0x00, 0x04}, // getbyte c a b 
	{0xe643, &op_getbyte,	  3,   0,   1, 0xff, 0x01, 0x00, 0x04}, // getbyte d a b 
	{0xe644, &op_getbyte,	  4,   0,   1, 0xff, 0x01, 0x00, 0x04}, // getbyte e a b 
	{0xe645, &op_getbyte,	  5,   0,   1, 0xff, 0x01, 0x00, 0x04}, // getbyte f a b 
	{0xe646, &op_getbyte,	  6,   0,   1, 0xff, 0x01, 0x00, 0x04}, // getbyte g a b 
	{0xe647, &op_getbyte,	  7,   0,   1, 0xff, 0x01, 0x00, 0x04}, // getbyte h a b 
	{0xe648, &op_getbyte,	  0,   1,   1, 0xff, 0x01, 0x00, 0x04}, // getbyte a b b 
	{0xe649, &op_getbyte,	  1,   1,   1, 0xff, 0x01, 0x00, 0x04}, // getbyte b b b 
	{0xe64a, &op_getbyte,	  2,   1,   1, 0xff, 0x01, 0x00, 0x04}, // getbyte c b b 
	{0xe64b, &op_getbyte,	  3,   1,   1, 0xff, 0x01, 0x00, 0x04}, // getbyte d b b 
	{0xe64c, &op_getbyte,	  4,   1,   1, 0xff, 0x01, 0x00, 0x04}, // getbyte e b b 
	{0xe64d, &op_getbyte,	  5,   1,   1, 0xff, 0x01, 0x00, 0x04}, // getbyte f b b 
	{0xe64e, &op_getbyte,	  6,   1,   1, 0xff, 0x01, 0x00, 0x04}, // getbyte g b b 
	{0xe64f, &op_getbyte,	  7,   1,   1, 0xff, 0x01, 0x00, 0x04}, // getbyte h b b 
	{0xe650, &op_getbyte,	  0,   2,   1, 0xff, 0x01, 0x00, 0x04}, // getbyte a c b 
	{0xe651, &op_getbyte,	  1,   2,   1, 0xff, 0x01, 0x00, 0x04}, // getbyte b c b 
	{0xe652, &op_getbyte,	  2,   2,   1, 0xff, 0x01, 0x00, 0x04}, // getbyte c c b 
	{0xe653, &op_getbyte,	  3,   2,   1, 0xff, 0x01, 0x00, 0x04}, // getbyte d c b 
	{0xe654, &op_getbyte,	  4,   2,   1, 0xff, 0x01, 0x00, 0x04}, // getbyte e c b 
	{0xe655, &op_getbyte,	  5,   2,   1, 0xff, 0x01, 0x00, 0x04}, // getbyte f c b 
	{0xe656, &op_getbyte,	  6,   2,   1, 0xff, 0x01, 0x00, 0x04}, // getbyte g c b 
	{0xe657, &op_getbyte,	  7,   2,   1, 0xff, 0x01, 0x00, 0x04}, // getbyte h c b 
	{0xe658, &op_getbyte,	  0,   3,   1, 0xff, 0x01, 0x00, 0x04}, // getbyte a d b 
	{0xe659, &op_getbyte,	  1,   3,   1, 0xff, 0x01, 0x00, 0x04}, // getbyte b d b 
	{0xe65a, &op_getbyte,	  2,   3,   1, 0xff, 0x01, 0x00, 0x04}, // getbyte c d b 
	{0xe65b, &op_getbyte,	  3,   3,   1, 0xff, 0x01, 0x00, 0x04}, // getbyte d d b 
	{0xe65c, &op_getbyte,	  4,   3,   1, 0xff, 0x01, 0x00, 0x04}, // getbyte e d b 
	{0xe65d, &op_getbyte,	  5,   3,   1, 0xff, 0x01, 0x00, 0x04}, // getbyte f d b 
	{0xe65e, &op_getbyte,	  6,   3,   1, 0xff, 0x01, 0x00, 0x04}, // getbyte g d b 
	{0xe65f, &op_getbyte,	  7,   3,   1, 0xff, 0x01, 0x00, 0x04}, // getbyte h d b 
	{0xe660, &op_getbyte,	  0,   4,   1, 0xff, 0x01, 0x00, 0x04}, // getbyte a e b 
	{0xe661, &op_getbyte,	  1,   4,   1, 0xff, 0x01, 0x00, 0x04}, // getbyte b e b 
	{0xe662, &op_getbyte,	  2,   4,   1, 0xff, 0x01, 0x00, 0x04}, // getbyte c e b 
	{0xe663, &op_getbyte,	  3,   4,   1, 0xff, 0x01, 0x00, 0x04}, // getbyte d e b 
	{0xe664, &op_getbyte,	  4,   4,   1, 0xff, 0x01, 0x00, 0x04}, // getbyte e e b 
	{0xe665, &op_getbyte,	  5,   4,   1, 0xff, 0x01, 0x00, 0x04}, // getbyte f e b 
	{0xe666, &op_getbyte,	  6,   4,   1, 0xff, 0x01, 0x00, 0x04}, // getbyte g e b 
	{0xe667, &op_getbyte,	  7,   4,   1, 0xff, 0x01, 0x00, 0x04}, // getbyte h e b 
	{0xe668, &op_getbyte,	  0,   5,   1, 0xff, 0x01, 0x00, 0x04}, // getbyte a f b 
	{0xe669, &op_getbyte,	  1,   5,   1, 0xff, 0x01, 0x00, 0x04}, // getbyte b f b 
	{0xe66a, &op_getbyte,	  2,   5,   1, 0xff, 0x01, 0x00, 0x04}, // getbyte c f b 
	{0xe66b, &op_getbyte,	  3,   5,   1, 0xff, 0x01, 0x00, 0x04}, // getbyte d f b 
	{0xe66c, &op_getbyte,	  4,   5,   1, 0xff, 0x01, 0x00, 0x04}, // getbyte e f b 
	{0xe66d, &op_getbyte,	  5,   5,   1, 0xff, 0x01, 0x00, 0x04}, // getbyte f f b 
	{0xe66e, &op_getbyte,	  6,   5,   1, 0xff, 0x01, 0x00, 0x04}, // getbyte g f b 
	{0xe66f, &op_getbyte,	  7,   5,   1, 0xff, 0x01, 0x00, 0x04}, // getbyte h f b 
	{0xe670, &op_getbyte,	  0,   6,   1, 0xff, 0x01, 0x00, 0x04}, // getbyte a g b 
	{0xe671, &op_getbyte,	  1,   6,   1, 0xff, 0x01, 0x00, 0x04}, // getbyte b g b 
	{0xe672, &op_getbyte,	  2,   6,   1, 0xff, 0x01, 0x00, 0x04}, // getbyte c g b 
	{0xe673, &op_getbyte,	  3,   6,   1, 0xff, 0x01, 0x00, 0x04}, // getbyte d g b 
	{0xe674, &op_getbyte,	  4,   6,   1, 0xff, 0x01, 0x00, 0x04}, // getbyte e g b 
	{0xe675, &op_getbyte,	  5,   6,   1, 0xff, 0x01, 0x00, 0x04}, // getbyte f g b 
	{0xe676, &op_getbyte,	  6,   6,   1, 0xff, 0x01, 0x00, 0x04}, // getbyte g g b 
	{0xe677, &op_getbyte,	  7,   6,   1, 0xff, 0x01, 0x00, 0x04}, // getbyte h g b 
	{0xe678, &op_getbyte,	  0,   7,   1, 0xff, 0x01, 0x00, 0x04}, // getbyte a h b 
	{0xe679, &op_getbyte,	  1,   7,   1, 0xff, 0x01, 0x00, 0x04}, // getbyte b h b 
	{0xe67a, &op_getbyte,	  2,   7,   1, 0xff, 0x01, 0x00, 0x04}, // getbyte c h b 
	{0xe67b, &op_getbyte,	  3,   7,   1, 0xff, 0x01, 0x00, 0x04}, // getbyte d h b 
	{0xe67c, &op_getbyte,	  4,   7,   1, 0xff, 0x01, 0x00, 0x04}, // getbyte e h b 
	{0xe67d, &op_getbyte,	  5,   7,   1, 0xff, 0x01, 0x00, 0x04}, // getbyte f h b 
	{0xe67e, &op_getbyte,	  6,   7,   1, 0xff, 0x01, 0x00, 0x04}, // getbyte g h b 
	{0xe67f, &op_getbyte,	  7,   7,   1, 0xff, 0x01, 0x00, 0x04}, // getbyte h h b 
	{0xe680, &op_getbyte,	  0,   0,   2, 0xff, 0x01, 0x00, 0x04}, // getbyte a a c 
	{0xe681, &op_getbyte,	  1,   0,   2, 0xff, 0x01, 0x00, 0x04}, // getbyte b a c 
	{0xe682, &op_getbyte,	  2,   0,   2, 0xff, 0x01, 0x00, 0x04}, // getbyte c a c 
	{0xe683, &op_getbyte,	  3,   0,   2, 0xff, 0x01, 0x00, 0x04}, // getbyte d a c 
	{0xe684, &op_getbyte,	  4,   0,   2, 0xff, 0x01, 0x00, 0x04}, // getbyte e a c 
	{0xe685, &op_getbyte,	  5,   0,   2, 0xff, 0x01, 0x00, 0x04}, // getbyte f a c 
	{0xe686, &op_getbyte,	  6,   0,   2, 0xff, 0x01, 0x00, 0x04}, // getbyte g a c 
	{0xe687, &op_getbyte,	  7,   0,   2, 0xff, 0x01, 0x00, 0x04}, // getbyte h a c 
	{0xe688, &op_getbyte,	  0,   1,   2, 0xff, 0x01, 0x00, 0x04}, // getbyte a b c 
	{0xe689, &op_getbyte,	  1,   1,   2, 0xff, 0x01, 0x00, 0x04}, // getbyte b b c 
	{0xe68a, &op_getbyte,	  2,   1,   2, 0xff, 0x01, 0x00, 0x04}, // getbyte c b c 
	{0xe68b, &op_getbyte,	  3,   1,   2, 0xff, 0x01, 0x00, 0x04}, // getbyte d b c 
	{0xe68c, &op_getbyte,	  4,   1,   2, 0xff, 0x01, 0x00, 0x04}, // getbyte e b c 
	{0xe68d, &op_getbyte,	  5,   1,   2, 0xff, 0x01, 0x00, 0x04}, // getbyte f b c 
	{0xe68e, &op_getbyte,	  6,   1,   2, 0xff, 0x01, 0x00, 0x04}, // getbyte g b c 
	{0xe68f, &op_getbyte,	  7,   1,   2, 0xff, 0x01, 0x00, 0x04}, // getbyte h b c 
	{0xe690, &op_getbyte,	  0,   2,   2, 0xff, 0x01, 0x00, 0x04}, // getbyte a c c 
	{0xe691, &op_getbyte,	  1,   2,   2, 0xff, 0x01, 0x00, 0x04}, // getbyte b c c 
	{0xe692, &op_getbyte,	  2,   2,   2, 0xff, 0x01, 0x00, 0x04}, // getbyte c c c 
	{0xe693, &op_getbyte,	  3,   2,   2, 0xff, 0x01, 0x00, 0x04}, // getbyte d c c 
	{0xe694, &op_getbyte,	  4,   2,   2, 0xff, 0x01, 0x00, 0x04}, // getbyte e c c 
	{0xe695, &op_getbyte,	  5,   2,   2, 0xff, 0x01, 0x00, 0x04}, // getbyte f c c 
	{0xe696, &op_getbyte,	  6,   2,   2, 0xff, 0x01, 0x00, 0x04}, // getbyte g c c 
	{0xe697, &op_getbyte,	  7,   2,   2, 0xff, 0x01, 0x00, 0x04}, // getbyte h c c 
	{0xe698, &op_getbyte,	  0,   3,   2, 0xff, 0x01, 0x00, 0x04}, // getbyte a d c 
	{0xe699, &op_getbyte,	  1,   3,   2, 0xff, 0x01, 0x00, 0x04}, // getbyte b d c 
	{0xe69a, &op_getbyte,	  2,   3,   2, 0xff, 0x01, 0x00, 0x04}, // getbyte c d c 
	{0xe69b, &op_getbyte,	  3,   3,   2, 0xff, 0x01, 0x00, 0x04}, // getbyte d d c 
	{0xe69c, &op_getbyte,	  4,   3,   2, 0xff, 0x01, 0x00, 0x04}, // getbyte e d c 
	{0xe69d, &op_getbyte,	  5,   3,   2, 0xff, 0x01, 0x00, 0x04}, // getbyte f d c 
	{0xe69e, &op_getbyte,	  6,   3,   2, 0xff, 0x01, 0x00, 0x04}, // getbyte g d c 
	{0xe69f, &op_getbyte,	  7,   3,   2, 0xff, 0x01, 0x00, 0x04}, // getbyte h d c 
	{0xe6a0, &op_getbyte,	  0,   4,   2, 0xff, 0x01, 0x00, 0x04}, // getbyte a e c 
	{0xe6a1, &op_getbyte,	  1,   4,   2, 0xff, 0x01, 0x00, 0x04}, // getbyte b e c 
	{0xe6a2, &op_getbyte,	  2,   4,   2, 0xff, 0x01, 0x00, 0x04}, // getbyte c e c 
	{0xe6a3, &op_getbyte,	  3,   4,   2, 0xff, 0x01, 0x00, 0x04}, // getbyte d e c 
	{0xe6a4, &op_getbyte,	  4,   4,   2, 0xff, 0x01, 0x00, 0x04}, // getbyte e e c 
	{0xe6a5, &op_getbyte,	  5,   4,   2, 0xff, 0x01, 0x00, 0x04}, // getbyte f e c 
	{0xe6a6, &op_getbyte,	  6,   4,   2, 0xff, 0x01, 0x00, 0x04}, // getbyte g e c 
	{0xe6a7, &op_getbyte,	  7,   4,   2, 0xff, 0x01, 0x00, 0x04}, // getbyte h e c 
	{0xe6a8, &op_getbyte,	  0,   5,   2, 0xff, 0x01, 0x00, 0x04}, // getbyte a f c 
	{0xe6a9, &op_getbyte,	  1,   5,   2, 0xff, 0x01, 0x00, 0x04}, // getbyte b f c 
	{0xe6aa, &op_getbyte,	  2,   5,   2, 0xff, 0x01, 0x00, 0x04}, // getbyte c f c 
	{0xe6ab, &op_getbyte,	  3,   5,   2, 0xff, 0x01, 0x00, 0x04}, // getbyte d f c 
	{0xe6ac, &op_getbyte,	  4,   5,   2, 0xff, 0x01, 0x00, 0x04}, // getbyte e f c 
	{0xe6ad, &op_getbyte,	  5,   5,   2, 0xff, 0x01, 0x00, 0x04}, // getbyte f f c 
	{0xe6ae, &op_getbyte,	  6,   5,   2, 0xff, 0x01, 0x00, 0x04}, // getbyte g f c 
	{0xe6af, &op_getbyte,	  7,   5,   2, 0xff, 0x01, 0x00, 0x04}, // getbyte h f c 
	{0xe6b0, &op_getbyte,	  0,   6,   2, 0xff, 0x01, 0x00, 0x04}, // getbyte a g c 
	{0xe6b1, &op_getbyte,	  1,   6,   2, 0xff, 0x01, 0x00, 0x04}, // getbyte b g c 
	{0xe6b2, &op_getbyte,	  2,   6,   2, 0xff, 0x01, 0x00, 0x04}, // getbyte c g c 
	{0xe6b3, &op_getbyte,	  3,   6,   2, 0xff, 0x01, 0x00, 0x04}, // getbyte d g c 
	{0xe6b4, &op_getbyte,	  4,   6,   2, 0xff, 0x01, 0x00, 0x04}, // getbyte e g c 
	{0xe6b5, &op_getbyte,	  5,   6,   2, 0xff, 0x01, 0x00, 0x04}, // getbyte f g c 
	{0xe6b6, &op_getbyte,	  6,   6,   2, 0xff, 0x01, 0x00, 0x04}, // getbyte g g c 
	{0xe6b7, &op_getbyte,	  7,   6,   2, 0xff, 0x01, 0x00, 0x04}, // getbyte h g c 
	{0xe6b8, &op_getbyte,	  0,   7,   2, 0xff, 0x01, 0x00, 0x04}, // getbyte a h c 
	{0xe6b9, &op_getbyte,	  1,   7,   2, 0xff, 0x01, 0x00, 0x04}, // getbyte b h c 
	{0xe6ba, &op_getbyte,	  2,   7,   2, 0xff, 0x01, 0x00, 0x04}, // getbyte c h c 
	{0xe6bb, &op_getbyte,	  3,   7,   2, 0xff, 0x01, 0x00, 0x04}, // getbyte d h c 
	{0xe6bc, &op_getbyte,	  4,   7,   2, 0xff, 0x01, 0x00, 0x04}, // getbyte e h c 
	{0xe6bd, &op_getbyte,	  5,   7,   2, 0xff, 0x01, 0x00, 0x04}, // getbyte f h c 
	{0xe6be, &op_getbyte,	  6,   7,   2, 0xff, 0x01, 0x00, 0x04}, // getbyte g h c 
	{0xe6bf, &op_getbyte,	  7,   7,   2, 0xff, 0x01, 0x00, 0x04}, // getbyte h h c 
	{0xe6c0, &op_getbyte,	  0,   0,   3, 0xff, 0x01, 0x00, 0x04}, // getbyte a a d 
	{0xe6c1, &op_getbyte,	  1,   0,   3, 0xff, 0x01, 0x00, 0x04}, // getbyte b a d 
	{0xe6c2, &op_getbyte,	  2,   0,   3, 0xff, 0x01, 0x00, 0x04}, // getbyte c a d 
	{0xe6c3, &op_getbyte,	  3,   0,   3, 0xff, 0x01, 0x00, 0x04}, // getbyte d a d 
	{0xe6c4, &op_getbyte,	  4,   0,   3, 0xff, 0x01, 0x00, 0x04}, // getbyte e a d 
	{0xe6c5, &op_getbyte,	  5,   0,   3, 0xff, 0x01, 0x00, 0x04}, // getbyte f a d 
	{0xe6c6, &op_getbyte,	  6,   0,   3, 0xff, 0x01, 0x00, 0x04}, // getbyte g a d 
	{0xe6c7, &op_getbyte,	  7,   0,   3, 0xff, 0x01, 0x00, 0x04}, // getbyte h a d 
	{0xe6c8, &op_getbyte,	  0,   1,   3, 0xff, 0x01, 0x00, 0x04}, // getbyte a b d 
	{0xe6c9, &op_getbyte,	  1,   1,   3, 0xff, 0x01, 0x00, 0x04}, // getbyte b b d 
	{0xe6ca, &op_getbyte,	  2,   1,   3, 0xff, 0x01, 0x00, 0x04}, // getbyte c b d 
	{0xe6cb, &op_getbyte,	  3,   1,   3, 0xff, 0x01, 0x00, 0x04}, // getbyte d b d 
	{0xe6cc, &op_getbyte,	  4,   1,   3, 0xff, 0x01, 0x00, 0x04}, // getbyte e b d 
	{0xe6cd, &op_getbyte,	  5,   1,   3, 0xff, 0x01, 0x00, 0x04}, // getbyte f b d 
	{0xe6ce, &op_getbyte,	  6,   1,   3, 0xff, 0x01, 0x00, 0x04}, // getbyte g b d 
	{0xe6cf, &op_getbyte,	  7,   1,   3, 0xff, 0x01, 0x00, 0x04}, // getbyte h b d 
	{0xe6d0, &op_getbyte,	  0,   2,   3, 0xff, 0x01, 0x00, 0x04}, // getbyte a c d 
	{0xe6d1, &op_getbyte,	  1,   2,   3, 0xff, 0x01, 0x00, 0x04}, // getbyte b c d 
	{0xe6d2, &op_getbyte,	  2,   2,   3, 0xff, 0x01, 0x00, 0x04}, // getbyte c c d 
	{0xe6d3, &op_getbyte,	  3,   2,   3, 0xff, 0x01, 0x00, 0x04}, // getbyte d c d 
	{0xe6d4, &op_getbyte,	  4,   2,   3, 0xff, 0x01, 0x00, 0x04}, // getbyte e c d 
	{0xe6d5, &op_getbyte,	  5,   2,   3, 0xff, 0x01, 0x00, 0x04}, // getbyte f c d 
	{0xe6d6, &op_getbyte,	  6,   2,   3, 0xff, 0x01, 0x00, 0x04}, // getbyte g c d 
	{0xe6d7, &op_getbyte,	  7,   2,   3, 0xff, 0x01, 0x00, 0x04}, // getbyte h c d 
	{0xe6d8, &op_getbyte,	  0,   3,   3, 0xff, 0x01, 0x00, 0x04}, // getbyte a d d 
	{0xe6d9, &op_getbyte,	  1,   3,   3, 0xff, 0x01, 0x00, 0x04}, // getbyte b d d 
	{0xe6da, &op_getbyte,	  2,   3,   3, 0xff, 0x01, 0x00, 0x04}, // getbyte c d d 
	{0xe6db, &op_getbyte,	  3,   3,   3, 0xff, 0x01, 0x00, 0x04}, // getbyte d d d 
	{0xe6dc, &op_getbyte,	  4,   3,   3, 0xff, 0x01, 0x00, 0x04}, // getbyte e d d 
	{0xe6dd, &op_getbyte,	  5,   3,   3, 0xff, 0x01, 0x00, 0x04}, // getbyte f d d 
	{0xe6de, &op_getbyte,	  6,   3,   3, 0xff, 0x01, 0x00, 0x04}, // getbyte g d d 
	{0xe6df, &op_getbyte,	  7,   3,   3, 0xff, 0x01, 0x00, 0x04}, // getbyte h d d 
	{0xe6e0, &op_getbyte,	  0,   4,   3, 0xff, 0x01, 0x00, 0x04}, // getbyte a e d 
	{0xe6e1, &op_getbyte,	  1,   4,   3, 0xff, 0x01, 0x00, 0x04}, // getbyte b e d 
	{0xe6e2, &op_getbyte,	  2,   4,   3, 0xff, 0x01, 0x00, 0x04}, // getbyte c e d 
	{0xe6e3, &op_getbyte,	  3,   4,   3, 0xff, 0x01, 0x00, 0x04}, // getbyte d e d 
	{0xe6e4, &op_getbyte,	  4,   4,   3, 0xff, 0x01, 0x00, 0x04}, // getbyte e e d 
	{0xe6e5, &op_getbyte,	  5,   4,   3, 0xff, 0x01, 0x00, 0x04}, // getbyte f e d 
	{0xe6e6, &op_getbyte,	  6,   4,   3, 0xff, 0x01, 0x00, 0x04}, // getbyte g e d 
	{0xe6e7, &op_getbyte,	  7,   4,   3, 0xff, 0x01, 0x00, 0x04}, // getbyte h e d 
	{0xe6e8, &op_getbyte,	  0,   5,   3, 0xff, 0x01, 0x00, 0x04}, // getbyte a f d 
	{0xe6e9, &op_getbyte,	  1,   5,   3, 0xff, 0x01, 0x00, 0x04}, // getbyte b f d 
	{0xe6ea, &op_getbyte,	  2,   5,   3, 0xff, 0x01, 0x00, 0x04}, // getbyte c f d 
	{0xe6eb, &op_getbyte,	  3,   5,   3, 0xff, 0x01, 0x00, 0x04}, // getbyte d f d 
	{0xe6ec, &op_getbyte,	  4,   5,   3, 0xff, 0x01, 0x00, 0x04}, // getbyte e f d 
	{0xe6ed, &op_getbyte,	  5,   5,   3, 0xff, 0x01, 0x00, 0x04}, // getbyte f f d 
	{0xe6ee, &op_getbyte,	  6,   5,   3, 0xff, 0x01, 0x00, 0x04}, // getbyte g f d 
	{0xe6ef, &op_getbyte,	  7,   5,   3, 0xff, 0x01, 0x00, 0x04}, // getbyte h f d 
	{0xe6f0, &op_getbyte,	  0,   6,   3, 0xff, 0x01, 0x00, 0x04}, // getbyte a g d 
	{0xe6f1, &op_getbyte,	  1,   6,   3, 0xff, 0x01, 0x00, 0x04}, // getbyte b g d 
	{0xe6f2, &op_getbyte,	  2,   6,   3, 0xff, 0x01, 0x00, 0x04}, // getbyte c g d 
	{0xe6f3, &op_getbyte,	  3,   6,   3, 0xff, 0x01, 0x00, 0x04}, // getbyte d g d 
	{0xe6f4, &op_getbyte,	  4,   6,   3, 0xff, 0x01, 0x00, 0x04}, // getbyte e g d 
	{0xe6f5, &op_getbyte,	  5,   6,   3, 0xff, 0x01, 0x00, 0x04}, // getbyte f g d 
	{0xe6f6, &op_getbyte,	  6,   6,   3, 0xff, 0x01, 0x00, 0x04}, // getbyte g g d 
	{0xe6f7, &op_getbyte,	  7,   6,   3, 0xff, 0x01, 0x00, 0x04}, // getbyte h g d 
	{0xe6f8, &op_getbyte,	  0,   7,   3, 0xff, 0x01, 0x00, 0x04}, // getbyte a h d 
	{0xe6f9, &op_getbyte,	  1,   7,   3, 0xff, 0x01, 0x00, 0x04}, // getbyte b h d 
	{0xe6fa, &op_getbyte,	  2,   7,   3, 0xff, 0x01, 0x00, 0x04}, // getbyte c h d 
	{0xe6fb, &op_getbyte,	  3,   7,   3, 0xff, 0x01, 0x00, 0x04}, // getbyte d h d 
	{0xe6fc, &op_getbyte,	  4,   7,   3, 0xff, 0x01, 0x00, 0x04}, // getbyte e h d 
	{0xe6fd, &op_getbyte,	  5,   7,   3, 0xff, 0x01, 0x00, 0x04}, // getbyte f h d 
	{0xe6fe, &op_getbyte,	  6,   7,   3, 0xff, 0x01, 0x00, 0x04}, // getbyte g h d 
	{0xe6ff, &op_getbyte,	  7,   7,   3, 0xff, 0x01, 0x00, 0x04}, // getbyte h h d 
	{0xe700, &op_getbyte,	  0,   0,   4, 0xff, 0x01, 0x00, 0x04}, // getbyte a a e 
	{0xe701, &op_getbyte,	  1,   0,   4, 0xff, 0x01, 0x00, 0x04}, // getbyte b a e 
	{0xe702, &op_getbyte,	  2,   0,   4, 0xff, 0x01, 0x00, 0x04}, // getbyte c a e 
	{0xe703, &op_getbyte,	  3,   0,   4, 0xff, 0x01, 0x00, 0x04}, // getbyte d a e 
	{0xe704, &op_getbyte,	  4,   0,   4, 0xff, 0x01, 0x00, 0x04}, // getbyte e a e 
	{0xe705, &op_getbyte,	  5,   0,   4, 0xff, 0x01, 0x00, 0x04}, // getbyte f a e 
	{0xe706, &op_getbyte,	  6,   0,   4, 0xff, 0x01, 0x00, 0x04}, // getbyte g a e 
	{0xe707, &op_getbyte,	  7,   0,   4, 0xff, 0x01, 0x00, 0x04}, // getbyte h a e 
	{0xe708, &op_getbyte,	  0,   1,   4, 0xff, 0x01, 0x00, 0x04}, // getbyte a b e 
	{0xe709, &op_getbyte,	  1,   1,   4, 0xff, 0x01, 0x00, 0x04}, // getbyte b b e 
	{0xe70a, &op_getbyte,	  2,   1,   4, 0xff, 0x01, 0x00, 0x04}, // getbyte c b e 
	{0xe70b, &op_getbyte,	  3,   1,   4, 0xff, 0x01, 0x00, 0x04}, // getbyte d b e 
	{0xe70c, &op_getbyte,	  4,   1,   4, 0xff, 0x01, 0x00, 0x04}, // getbyte e b e 
	{0xe70d, &op_getbyte,	  5,   1,   4, 0xff, 0x01, 0x00, 0x04}, // getbyte f b e 
	{0xe70e, &op_getbyte,	  6,   1,   4, 0xff, 0x01, 0x00, 0x04}, // getbyte g b e 
	{0xe70f, &op_getbyte,	  7,   1,   4, 0xff, 0x01, 0x00, 0x04}, // getbyte h b e 
	{0xe710, &op_getbyte,	  0,   2,   4, 0xff, 0x01, 0x00, 0x04}, // getbyte a c e 
	{0xe711, &op_getbyte,	  1,   2,   4, 0xff, 0x01, 0x00, 0x04}, // getbyte b c e 
	{0xe712, &op_getbyte,	  2,   2,   4, 0xff, 0x01, 0x00, 0x04}, // getbyte c c e 
	{0xe713, &op_getbyte,	  3,   2,   4, 0xff, 0x01, 0x00, 0x04}, // getbyte d c e 
	{0xe714, &op_getbyte,	  4,   2,   4, 0xff, 0x01, 0x00, 0x04}, // getbyte e c e 
	{0xe715, &op_getbyte,	  5,   2,   4, 0xff, 0x01, 0x00, 0x04}, // getbyte f c e 
	{0xe716, &op_getbyte,	  6,   2,   4, 0xff, 0x01, 0x00, 0x04}, // getbyte g c e 
	{0xe717, &op_getbyte,	  7,   2,   4, 0xff, 0x01, 0x00, 0x04}, // getbyte h c e 
	{0xe718, &op_getbyte,	  0,   3,   4, 0xff, 0x01, 0x00, 0x04}, // getbyte a d e 
	{0xe719, &op_getbyte,	  1,   3,   4, 0xff, 0x01, 0x00, 0x04}, // getbyte b d e 
	{0xe71a, &op_getbyte,	  2,   3,   4, 0xff, 0x01, 0x00, 0x04}, // getbyte c d e 
	{0xe71b, &op_getbyte,	  3,   3,   4, 0xff, 0x01, 0x00, 0x04}, // getbyte d d e 
	{0xe71c, &op_getbyte,	  4,   3,   4, 0xff, 0x01, 0x00, 0x04}, // getbyte e d e 
	{0xe71d, &op_getbyte,	  5,   3,   4, 0xff, 0x01, 0x00, 0x04}, // getbyte f d e 
	{0xe71e, &op_getbyte,	  6,   3,   4, 0xff, 0x01, 0x00, 0x04}, // getbyte g d e 
	{0xe71f, &op_getbyte,	  7,   3,   4, 0xff, 0x01, 0x00, 0x04}, // getbyte h d e 
	{0xe720, &op_getbyte,	  0,   4,   4, 0xff, 0x01, 0x00, 0x04}, // getbyte a e e 
	{0xe721, &op_getbyte,	  1,   4,   4, 0xff, 0x01, 0x00, 0x04}, // getbyte b e e 
	{0xe722, &op_getbyte,	  2,   4,   4, 0xff, 0x01, 0x00, 0x04}, // getbyte c e e 
	{0xe723, &op_getbyte,	  3,   4,   4, 0xff, 0x01, 0x00, 0x04}, // getbyte d e e 
	{0xe724, &op_getbyte,	  4,   4,   4, 0xff, 0x01, 0x00, 0x04}, // getbyte e e e 
	{0xe725, &op_getbyte,	  5,   4,   4, 0xff, 0x01, 0x00, 0x04}, // getbyte f e e 
	{0xe726, &op_getbyte,	  6,   4,   4, 0xff, 0x01, 0x00, 0x04}, // getbyte g e e 
	{0xe727, &op_getbyte,	  7,   4,   4, 0xff, 0x01, 0x00, 0x04}, // getbyte h e e 
	{0xe728, &op_getbyte,	  0,   5,   4, 0xff, 0x01, 0x00, 0x04}, // getbyte a f e 
	{0xe729, &op_getbyte,	  1,   5,   4, 0xff, 0x01, 0x00, 0x04}, // getbyte b f e 
	{0xe72a, &op_getbyte,	  2,   5,   4, 0xff, 0x01, 0x00, 0x04}, // getbyte c f e 
	{0xe72b, &op_getbyte,	  3,   5,   4, 0xff, 0x01, 0x00, 0x04}, // getbyte d f e 
	{0xe72c, &op_getbyte,	  4,   5,   4, 0xff, 0x01, 0x00, 0x04}, // getbyte e f e 
	{0xe72d, &op_getbyte,	  5,   5,   4, 0xff, 0x01, 0x00, 0x04}, // getbyte f f e 
	{0xe72e, &op_getbyte,	  6,   5,   4, 0xff, 0x01, 0x00, 0x04}, // getbyte g f e 
	{0xe72f, &op_getbyte,	  7,   5,   4, 0xff, 0x01, 0x00, 0x04}, // getbyte h f e 
	{0xe730, &op_getbyte,	  0,   6,   4, 0xff, 0x01, 0x00, 0x04}, // getbyte a g e 
	{0xe731, &op_getbyte,	  1,   6,   4, 0xff, 0x01, 0x00, 0x04}, // getbyte b g e 
	{0xe732, &op_getbyte,	  2,   6,   4, 0xff, 0x01, 0x00, 0x04}, // getbyte c g e 
	{0xe733, &op_getbyte,	  3,   6,   4, 0xff, 0x01, 0x00, 0x04}, // getbyte d g e 
	{0xe734, &op_getbyte,	  4,   6,   4, 0xff, 0x01, 0x00, 0x04}, // getbyte e g e 
	{0xe735, &op_getbyte,	  5,   6,   4, 0xff, 0x01, 0x00, 0x04}, // getbyte f g e 
	{0xe736, &op_getbyte,	  6,   6,   4, 0xff, 0x01, 0x00, 0x04}, // getbyte g g e 
	{0xe737, &op_getbyte,	  7,   6,   4, 0xff, 0x01, 0x00, 0x04}, // getbyte h g e 
	{0xe738, &op_getbyte,	  0,   7,   4, 0xff, 0x01, 0x00, 0x04}, // getbyte a h e 
	{0xe739, &op_getbyte,	  1,   7,   4, 0xff, 0x01, 0x00, 0x04}, // getbyte b h e 
	{0xe73a, &op_getbyte,	  2,   7,   4, 0xff, 0x01, 0x00, 0x04}, // getbyte c h e 
	{0xe73b, &op_getbyte,	  3,   7,   4, 0xff, 0x01, 0x00, 0x04}, // getbyte d h e 
	{0xe73c, &op_getbyte,	  4,   7,   4, 0xff, 0x01, 0x00, 0x04}, // getbyte e h e 
	{0xe73d, &op_getbyte,	  5,   7,   4, 0xff, 0x01, 0x00, 0x04}, // getbyte f h e 
	{0xe73e, &op_getbyte,	  6,   7,   4, 0xff, 0x01, 0x00, 0x04}, // getbyte g h e 
	{0xe73f, &op_getbyte,	  7,   7,   4, 0xff, 0x01, 0x00, 0x04}, // getbyte h h e 
	{0xe740, &op_getbyte,	  0,   0,   5, 0xff, 0x01, 0x00, 0x04}, // getbyte a a f 
	{0xe741, &op_getbyte,	  1,   0,   5, 0xff, 0x01, 0x00, 0x04}, // getbyte b a f 
	{0xe742, &op_getbyte,	  2,   0,   5, 0xff, 0x01, 0x00, 0x04}, // getbyte c a f 
	{0xe743, &op_getbyte,	  3,   0,   5, 0xff, 0x01, 0x00, 0x04}, // getbyte d a f 
	{0xe744, &op_getbyte,	  4,   0,   5, 0xff, 0x01, 0x00, 0x04}, // getbyte e a f 
	{0xe745, &op_getbyte,	  5,   0,   5, 0xff, 0x01, 0x00, 0x04}, // getbyte f a f 
	{0xe746, &op_getbyte,	  6,   0,   5, 0xff, 0x01, 0x00, 0x04}, // getbyte g a f 
	{0xe747, &op_getbyte,	  7,   0,   5, 0xff, 0x01, 0x00, 0x04}, // getbyte h a f 
	{0xe748, &op_getbyte,	  0,   1,   5, 0xff, 0x01, 0x00, 0x04}, // getbyte a b f 
	{0xe749, &op_getbyte,	  1,   1,   5, 0xff, 0x01, 0x00, 0x04}, // getbyte b b f 
	{0xe74a, &op_getbyte,	  2,   1,   5, 0xff, 0x01, 0x00, 0x04}, // getbyte c b f 
	{0xe74b, &op_getbyte,	  3,   1,   5, 0xff, 0x01, 0x00, 0x04}, // getbyte d b f 
	{0xe74c, &op_getbyte,	  4,   1,   5, 0xff, 0x01, 0x00, 0x04}, // getbyte e b f 
	{0xe74d, &op_getbyte,	  5,   1,   5, 0xff, 0x01, 0x00, 0x04}, // getbyte f b f 
	{0xe74e, &op_getbyte,	  6,   1,   5, 0xff, 0x01, 0x00, 0x04}, // getbyte g b f 
	{0xe74f, &op_getbyte,	  7,   1,   5, 0xff, 0x01, 0x00, 0x04}, // getbyte h b f 
	{0xe750, &op_getbyte,	  0,   2,   5, 0xff, 0x01, 0x00, 0x04}, // getbyte a c f 
	{0xe751, &op_getbyte,	  1,   2,   5, 0xff, 0x01, 0x00, 0x04}, // getbyte b c f 
	{0xe752, &op_getbyte,	  2,   2,   5, 0xff, 0x01, 0x00, 0x04}, // getbyte c c f 
	{0xe753, &op_getbyte,	  3,   2,   5, 0xff, 0x01, 0x00, 0x04}, // getbyte d c f 
	{0xe754, &op_getbyte,	  4,   2,   5, 0xff, 0x01, 0x00, 0x04}, // getbyte e c f 
	{0xe755, &op_getbyte,	  5,   2,   5, 0xff, 0x01, 0x00, 0x04}, // getbyte f c f 
	{0xe756, &op_getbyte,	  6,   2,   5, 0xff, 0x01, 0x00, 0x04}, // getbyte g c f 
	{0xe757, &op_getbyte,	  7,   2,   5, 0xff, 0x01, 0x00, 0x04}, // getbyte h c f 
	{0xe758, &op_getbyte,	  0,   3,   5, 0xff, 0x01, 0x00, 0x04}, // getbyte a d f 
	{0xe759, &op_getbyte,	  1,   3,   5, 0xff, 0x01, 0x00, 0x04}, // getbyte b d f 
	{0xe75a, &op_getbyte,	  2,   3,   5, 0xff, 0x01, 0x00, 0x04}, // getbyte c d f 
	{0xe75b, &op_getbyte,	  3,   3,   5, 0xff, 0x01, 0x00, 0x04}, // getbyte d d f 
	{0xe75c, &op_getbyte,	  4,   3,   5, 0xff, 0x01, 0x00, 0x04}, // getbyte e d f 
	{0xe75d, &op_getbyte,	  5,   3,   5, 0xff, 0x01, 0x00, 0x04}, // getbyte f d f 
	{0xe75e, &op_getbyte,	  6,   3,   5, 0xff, 0x01, 0x00, 0x04}, // getbyte g d f 
	{0xe75f, &op_getbyte,	  7,   3,   5, 0xff, 0x01, 0x00, 0x04}, // getbyte h d f 
	{0xe760, &op_getbyte,	  0,   4,   5, 0xff, 0x01, 0x00, 0x04}, // getbyte a e f 
	{0xe761, &op_getbyte,	  1,   4,   5, 0xff, 0x01, 0x00, 0x04}, // getbyte b e f 
	{0xe762, &op_getbyte,	  2,   4,   5, 0xff, 0x01, 0x00, 0x04}, // getbyte c e f 
	{0xe763, &op_getbyte,	  3,   4,   5, 0xff, 0x01, 0x00, 0x04}, // getbyte d e f 
	{0xe764, &op_getbyte,	  4,   4,   5, 0xff, 0x01, 0x00, 0x04}, // getbyte e e f 
	{0xe765, &op_getbyte,	  5,   4,   5, 0xff, 0x01, 0x00, 0x04}, // getbyte f e f 
	{0xe766, &op_getbyte,	  6,   4,   5, 0xff, 0x01, 0x00, 0x04}, // getbyte g e f 
	{0xe767, &op_getbyte,	  7,   4,   5, 0xff, 0x01, 0x00, 0x04}, // getbyte h e f 
	{0xe768, &op_getbyte,	  0,   5,   5, 0xff, 0x01, 0x00, 0x04}, // getbyte a f f 
	{0xe769, &op_getbyte,	  1,   5,   5, 0xff, 0x01, 0x00, 0x04}, // getbyte b f f 
	{0xe76a, &op_getbyte,	  2,   5,   5, 0xff, 0x01, 0x00, 0x04}, // getbyte c f f 
	{0xe76b, &op_getbyte,	  3,   5,   5, 0xff, 0x01, 0x00, 0x04}, // getbyte d f f 
	{0xe76c, &op_getbyte,	  4,   5,   5, 0xff, 0x01, 0x00, 0x04}, // getbyte e f f 
	{0xe76d, &op_getbyte,	  5,   5,   5, 0xff, 0x01, 0x00, 0x04}, // getbyte f f f 
	{0xe76e, &op_getbyte,	  6,   5,   5, 0xff, 0x01, 0x00, 0x04}, // getbyte g f f 
	{0xe76f, &op_getbyte,	  7,   5,   5, 0xff, 0x01, 0x00, 0x04}, // getbyte h f f 
	{0xe770, &op_getbyte,	  0,   6,   5, 0xff, 0x01, 0x00, 0x04}, // getbyte a g f 
	{0xe771, &op_getbyte,	  1,   6,   5, 0xff, 0x01, 0x00, 0x04}, // getbyte b g f 
	{0xe772, &op_getbyte,	  2,   6,   5, 0xff, 0x01, 0x00, 0x04}, // getbyte c g f 
	{0xe773, &op_getbyte,	  3,   6,   5, 0xff, 0x01, 0x00, 0x04}, // getbyte d g f 
	{0xe774, &op_getbyte,	  4,   6,   5, 0xff, 0x01, 0x00, 0x04}, // getbyte e g f 
	{0xe775, &op_getbyte,	  5,   6,   5, 0xff, 0x01, 0x00, 0x04}, // getbyte f g f 
	{0xe776, &op_getbyte,	  6,   6,   5, 0xff, 0x01, 0x00, 0x04}, // getbyte g g f 
	{0xe777, &op_getbyte,	  7,   6,   5, 0xff, 0x01, 0x00, 0x04}, // getbyte h g f 
	{0xe778, &op_getbyte,	  0,   7,   5, 0xff, 0x01, 0x00, 0x04}, // getbyte a h f 
	{0xe779, &op_getbyte,	  1,   7,   5, 0xff, 0x01, 0x00, 0x04}, // getbyte b h f 
	{0xe77a, &op_getbyte,	  2,   7,   5, 0xff, 0x01, 0x00, 0x04}, // getbyte c h f 
	{0xe77b, &op_getbyte,	  3,   7,   5, 0xff, 0x01, 0x00, 0x04}, // getbyte d h f 
	{0xe77c, &op_getbyte,	  4,   7,   5, 0xff, 0x01, 0x00, 0x04}, // getbyte e h f 
	{0xe77d, &op_getbyte,	  5,   7,   5, 0xff, 0x01, 0x00, 0x04}, // getbyte f h f 
	{0xe77e, &op_getbyte,	  6,   7,   5, 0xff, 0x01, 0x00, 0x04}, // getbyte g h f 
	{0xe77f, &op_getbyte,	  7,   7,   5, 0xff, 0x01, 0x00, 0x04}, // getbyte h h f 
	{0xe780, &op_getbyte,	  0,   0,   6, 0xff, 0x01, 0x00, 0x04}, // getbyte a a g 
	{0xe781, &op_getbyte,	  1,   0,   6, 0xff, 0x01, 0x00, 0x04}, // getbyte b a g 
	{0xe782, &op_getbyte,	  2,   0,   6, 0xff, 0x01, 0x00, 0x04}, // getbyte c a g 
	{0xe783, &op_getbyte,	  3,   0,   6, 0xff, 0x01, 0x00, 0x04}, // getbyte d a g 
	{0xe784, &op_getbyte,	  4,   0,   6, 0xff, 0x01, 0x00, 0x04}, // getbyte e a g 
	{0xe785, &op_getbyte,	  5,   0,   6, 0xff, 0x01, 0x00, 0x04}, // getbyte f a g 
	{0xe786, &op_getbyte,	  6,   0,   6, 0xff, 0x01, 0x00, 0x04}, // getbyte g a g 
	{0xe787, &op_getbyte,	  7,   0,   6, 0xff, 0x01, 0x00, 0x04}, // getbyte h a g 
	{0xe788, &op_getbyte,	  0,   1,   6, 0xff, 0x01, 0x00, 0x04}, // getbyte a b g 
	{0xe789, &op_getbyte,	  1,   1,   6, 0xff, 0x01, 0x00, 0x04}, // getbyte b b g 
	{0xe78a, &op_getbyte,	  2,   1,   6, 0xff, 0x01, 0x00, 0x04}, // getbyte c b g 
	{0xe78b, &op_getbyte,	  3,   1,   6, 0xff, 0x01, 0x00, 0x04}, // getbyte d b g 
	{0xe78c, &op_getbyte,	  4,   1,   6, 0xff, 0x01, 0x00, 0x04}, // getbyte e b g 
	{0xe78d, &op_getbyte,	  5,   1,   6, 0xff, 0x01, 0x00, 0x04}, // getbyte f b g 
	{0xe78e, &op_getbyte,	  6,   1,   6, 0xff, 0x01, 0x00, 0x04}, // getbyte g b g 
	{0xe78f, &op_getbyte,	  7,   1,   6, 0xff, 0x01, 0x00, 0x04}, // getbyte h b g 
	{0xe790, &op_getbyte,	  0,   2,   6, 0xff, 0x01, 0x00, 0x04}, // getbyte a c g 
	{0xe791, &op_getbyte,	  1,   2,   6, 0xff, 0x01, 0x00, 0x04}, // getbyte b c g 
	{0xe792, &op_getbyte,	  2,   2,   6, 0xff, 0x01, 0x00, 0x04}, // getbyte c c g 
	{0xe793, &op_getbyte,	  3,   2,   6, 0xff, 0x01, 0x00, 0x04}, // getbyte d c g 
	{0xe794, &op_getbyte,	  4,   2,   6, 0xff, 0x01, 0x00, 0x04}, // getbyte e c g 
	{0xe795, &op_getbyte,	  5,   2,   6, 0xff, 0x01, 0x00, 0x04}, // getbyte f c g 
	{0xe796, &op_getbyte,	  6,   2,   6, 0xff, 0x01, 0x00, 0x04}, // getbyte g c g 
	{0xe797, &op_getbyte,	  7,   2,   6, 0xff, 0x01, 0x00, 0x04}, // getbyte h c g 
	{0xe798, &op_getbyte,	  0,   3,   6, 0xff, 0x01, 0x00, 0x04}, // getbyte a d g 
	{0xe799, &op_getbyte,	  1,   3,   6, 0xff, 0x01, 0x00, 0x04}, // getbyte b d g 
	{0xe79a, &op_getbyte,	  2,   3,   6, 0xff, 0x01, 0x00, 0x04}, // getbyte c d g 
	{0xe79b, &op_getbyte,	  3,   3,   6, 0xff, 0x01, 0x00, 0x04}, // getbyte d d g 
	{0xe79c, &op_getbyte,	  4,   3,   6, 0xff, 0x01, 0x00, 0x04}, // getbyte e d g 
	{0xe79d, &op_getbyte,	  5,   3,   6, 0xff, 0x01, 0x00, 0x04}, // getbyte f d g 
	{0xe79e, &op_getbyte,	  6,   3,   6, 0xff, 0x01, 0x00, 0x04}, // getbyte g d g 
	{0xe79f, &op_getbyte,	  7,   3,   6, 0xff, 0x01, 0x00, 0x04}, // getbyte h d g 
	{0xe7a0, &op_getbyte,	  0,   4,   6, 0xff, 0x01, 0x00, 0x04}, // getbyte a e g 
	{0xe7a1, &op_getbyte,	  1,   4,   6, 0xff, 0x01, 0x00, 0x04}, // getbyte b e g 
	{0xe7a2, &op_getbyte,	  2,   4,   6, 0xff, 0x01, 0x00, 0x04}, // getbyte c e g 
	{0xe7a3, &op_getbyte,	  3,   4,   6, 0xff, 0x01, 0x00, 0x04}, // getbyte d e g 
	{0xe7a4, &op_getbyte,	  4,   4,   6, 0xff, 0x01, 0x00, 0x04}, // getbyte e e g 
	{0xe7a5, &op_getbyte,	  5,   4,   6, 0xff, 0x01, 0x00, 0x04}, // getbyte f e g 
	{0xe7a6, &op_getbyte,	  6,   4,   6, 0xff, 0x01, 0x00, 0x04}, // getbyte g e g 
	{0xe7a7, &op_getbyte,	  7,   4,   6, 0xff, 0x01, 0x00, 0x04}, // getbyte h e g 
	{0xe7a8, &op_getbyte,	  0,   5,   6, 0xff, 0x01, 0x00, 0x04}, // getbyte a f g 
	{0xe7a9, &op_getbyte,	  1,   5,   6, 0xff, 0x01, 0x00, 0x04}, // getbyte b f g 
	{0xe7aa, &op_getbyte,	  2,   5,   6, 0xff, 0x01, 0x00, 0x04}, // getbyte c f g 
	{0xe7ab, &op_getbyte,	  3,   5,   6, 0xff, 0x01, 0x00, 0x04}, // getbyte d f g 
	{0xe7ac, &op_getbyte,	  4,   5,   6, 0xff, 0x01, 0x00, 0x04}, // getbyte e f g 
	{0xe7ad, &op_getbyte,	  5,   5,   6, 0xff, 0x01, 0x00, 0x04}, // getbyte f f g 
	{0xe7ae, &op_getbyte,	  6,   5,   6, 0xff, 0x01, 0x00, 0x04}, // getbyte g f g 
	{0xe7af, &op_getbyte,	  7,   5,   6, 0xff, 0x01, 0x00, 0x04}, // getbyte h f g 
	{0xe7b0, &op_getbyte,	  0,   6,   6, 0xff, 0x01, 0x00, 0x04}, // getbyte a g g 
	{0xe7b1, &op_getbyte,	  1,   6,   6, 0xff, 0x01, 0x00, 0x04}, // getbyte b g g 
	{0xe7b2, &op_getbyte,	  2,   6,   6, 0xff, 0x01, 0x00, 0x04}, // getbyte c g g 
	{0xe7b3, &op_getbyte,	  3,   6,   6, 0xff, 0x01, 0x00, 0x04}, // getbyte d g g 
	{0xe7b4, &op_getbyte,	  4,   6,   6, 0xff, 0x01, 0x00, 0x04}, // getbyte e g g 
	{0xe7b5, &op_getbyte,	  5,   6,   6, 0xff, 0x01, 0x00, 0x04}, // getbyte f g g 
	{0xe7b6, &op_getbyte,	  6,   6,   6, 0xff, 0x01, 0x00, 0x04}, // getbyte g g g 
	{0xe7b7, &op_getbyte,	  7,   6,   6, 0xff, 0x01, 0x00, 0x04}, // getbyte h g g 
	{0xe7b8, &op_getbyte,	  0,   7,   6, 0xff, 0x01, 0x00, 0x04}, // getbyte a h g 
	{0xe7b9, &op_getbyte,	  1,   7,   6, 0xff, 0x01, 0x00, 0x04}, // getbyte b h g 
	{0xe7ba, &op_getbyte,	  2,   7,   6, 0xff, 0x01, 0x00, 0x04}, // getbyte c h g 
	{0xe7bb, &op_getbyte,	  3,   7,   6, 0xff, 0x01, 0x00, 0x04}, // getbyte d h g 
	{0xe7bc, &op_getbyte,	  4,   7,   6, 0xff, 0x01, 0x00, 0x04}, // getbyte e h g 
	{0xe7bd, &op_getbyte,	  5,   7,   6, 0xff, 0x01, 0x00, 0x04}, // getbyte f h g 
	{0xe7be, &op_getbyte,	  6,   7,   6, 0xff, 0x01, 0x00, 0x04}, // getbyte g h g 
	{0xe7bf, &op_getbyte,	  7,   7,   6, 0xff, 0x01, 0x00, 0x04}, // getbyte h h g 
	{0xe7c0, &op_getbyte,	  0,   0,   7, 0xff, 0x01, 0x00, 0x04}, // getbyte a a h 
	{0xe7c1, &op_getbyte,	  1,   0,   7, 0xff, 0x01, 0x00, 0x04}, // getbyte b a h 
	{0xe7c2, &op_getbyte,	  2,   0,   7, 0xff, 0x01, 0x00, 0x04}, // getbyte c a h 
	{0xe7c3, &op_getbyte,	  3,   0,   7, 0xff, 0x01, 0x00, 0x04}, // getbyte d a h 
	{0xe7c4, &op_getbyte,	  4,   0,   7, 0xff, 0x01, 0x00, 0x04}, // getbyte e a h 
	{0xe7c5, &op_getbyte,	  5,   0,   7, 0xff, 0x01, 0x00, 0x04}, // getbyte f a h 
	{0xe7c6, &op_getbyte,	  6,   0,   7, 0xff, 0x01, 0x00, 0x04}, // getbyte g a h 
	{0xe7c7, &op_getbyte,	  7,   0,   7, 0xff, 0x01, 0x00, 0x04}, // getbyte h a h 
	{0xe7c8, &op_getbyte,	  0,   1,   7, 0xff, 0x01, 0x00, 0x04}, // getbyte a b h 
	{0xe7c9, &op_getbyte,	  1,   1,   7, 0xff, 0x01, 0x00, 0x04}, // getbyte b b h 
	{0xe7ca, &op_getbyte,	  2,   1,   7, 0xff, 0x01, 0x00, 0x04}, // getbyte c b h 
	{0xe7cb, &op_getbyte,	  3,   1,   7, 0xff, 0x01, 0x00, 0x04}, // getbyte d b h 
	{0xe7cc, &op_getbyte,	  4,   1,   7, 0xff, 0x01, 0x00, 0x04}, // getbyte e b h 
	{0xe7cd, &op_getbyte,	  5,   1,   7, 0xff, 0x01, 0x00, 0x04}, // getbyte f b h 
	{0xe7ce, &op_getbyte,	  6,   1,   7, 0xff, 0x01, 0x00, 0x04}, // getbyte g b h 
	{0xe7cf, &op_getbyte,	  7,   1,   7, 0xff, 0x01, 0x00, 0x04}, // getbyte h b h 
	{0xe7d0, &op_getbyte,	  0,   2,   7, 0xff, 0x01, 0x00, 0x04}, // getbyte a c h 
	{0xe7d1, &op_getbyte,	  1,   2,   7, 0xff, 0x01, 0x00, 0x04}, // getbyte b c h 
	{0xe7d2, &op_getbyte,	  2,   2,   7, 0xff, 0x01, 0x00, 0x04}, // getbyte c c h 
	{0xe7d3, &op_getbyte,	  3,   2,   7, 0xff, 0x01, 0x00, 0x04}, // getbyte d c h 
	{0xe7d4, &op_getbyte,	  4,   2,   7, 0xff, 0x01, 0x00, 0x04}, // getbyte e c h 
	{0xe7d5, &op_getbyte,	  5,   2,   7, 0xff, 0x01, 0x00, 0x04}, // getbyte f c h 
	{0xe7d6, &op_getbyte,	  6,   2,   7, 0xff, 0x01, 0x00, 0x04}, // getbyte g c h 
	{0xe7d7, &op_getbyte,	  7,   2,   7, 0xff, 0x01, 0x00, 0x04}, // getbyte h c h 
	{0xe7d8, &op_getbyte,	  0,   3,   7, 0xff, 0x01, 0x00, 0x04}, // getbyte a d h 
	{0xe7d9, &op_getbyte,	  1,   3,   7, 0xff, 0x01, 0x00, 0x04}, // getbyte b d h 
	{0xe7da, &op_getbyte,	  2,   3,   7, 0xff, 0x01, 0x00, 0x04}, // getbyte c d h 
	{0xe7db, &op_getbyte,	  3,   3,   7, 0xff, 0x01, 0x00, 0x04}, // getbyte d d h 
	{0xe7dc, &op_getbyte,	  4,   3,   7, 0xff, 0x01, 0x00, 0x04}, // getbyte e d h 
	{0xe7dd, &op_getbyte,	  5,   3,   7, 0xff, 0x01, 0x00, 0x04}, // getbyte f d h 
	{0xe7de, &op_getbyte,	  6,   3,   7, 0xff, 0x01, 0x00, 0x04}, // getbyte g d h 
	{0xe7df, &op_getbyte,	  7,   3,   7, 0xff, 0x01, 0x00, 0x04}, // getbyte h d h 
	{0xe7e0, &op_getbyte,	  0,   4,   7, 0xff, 0x01, 0x00, 0x04}, // getbyte a e h 
	{0xe7e1, &op_getbyte,	  1,   4,   7, 0xff, 0x01, 0x00, 0x04}, // getbyte b e h 
	{0xe7e2, &op_getbyte,	  2,   4,   7, 0xff, 0x01, 0x00, 0x04}, // getbyte c e h 
	{0xe7e3, &op_getbyte,	  3,   4,   7, 0xff, 0x01, 0x00, 0x04}, // getbyte d e h 
	{0xe7e4, &op_getbyte,	  4,   4,   7, 0xff, 0x01, 0x00, 0x04}, // getbyte e e h 
	{0xe7e5, &op_getbyte,	  5,   4,   7, 0xff, 0x01, 0x00, 0x04}, // getbyte f e h 
	{0xe7e6, &op_getbyte,	  6,   4,   7, 0xff, 0x01, 0x00, 0x04}, // getbyte g e h 
	{0xe7e7, &op_getbyte,	  7,   4,   7, 0xff, 0x01, 0x00, 0x04}, // getbyte h e h 
	{0xe7e8, &op_getbyte,	  0,   5,   7, 0xff, 0x01, 0x00, 0x04}, // getbyte a f h 
	{0xe7e9, &op_getbyte,	  1,   5,   7, 0xff, 0x01, 0x00, 0x04}, // getbyte b f h 
	{0xe7ea, &op_getbyte,	  2,   5,   7, 0xff, 0x01, 0x00, 0x04}, // getbyte c f h 
	{0xe7eb, &op_getbyte,	  3,   5,   7, 0xff, 0x01, 0x00, 0x04}, // getbyte d f h 
	{0xe7ec, &op_getbyte,	  4,   5,   7, 0xff, 0x01, 0x00, 0x04}, // getbyte e f h 
	{0xe7ed, &op_getbyte,	  5,   5,   7, 0xff, 0x01, 0x00, 0x04}, // getbyte f f h 
	{0xe7ee, &op_getbyte,	  6,   5,   7, 0xff, 0x01, 0x00, 0x04}, // getbyte g f h 
	{0xe7ef, &op_getbyte,	  7,   5,   7, 0xff, 0x01, 0x00, 0x04}, // getbyte h f h 
	{0xe7f0, &op_getbyte,	  0,   6,   7, 0xff, 0x01, 0x00, 0x04}, // getbyte a g h 
	{0xe7f1, &op_getbyte,	  1,   6,   7, 0xff, 0x01, 0x00, 0x04}, // getbyte b g h 
	{0xe7f2, &op_getbyte,	  2,   6,   7, 0xff, 0x01, 0x00, 0x04}, // getbyte c g h 
	{0xe7f3, &op_getbyte,	  3,   6,   7, 0xff, 0x01, 0x00, 0x04}, // getbyte d g h 
	{0xe7f4, &op_getbyte,	  4,   6,   7, 0xff, 0x01, 0x00, 0x04}, // getbyte e g h 
	{0xe7f5, &op_getbyte,	  5,   6,   7, 0xff, 0x01, 0x00, 0x04}, // getbyte f g h 
	{0xe7f6, &op_getbyte,	  6,   6,   7, 0xff, 0x01, 0x00, 0x04}, // getbyte g g h 
	{0xe7f7, &op_getbyte,	  7,   6,   7, 0xff, 0x01, 0x00, 0x04}, // getbyte h g h 
	{0xe7f8, &op_getbyte,	  0,   7,   7, 0xff, 0x01, 0x00, 0x04}, // getbyte a h h 
	{0xe7f9, &op_getbyte,	  1,   7,   7, 0xff, 0x01, 0x00, 0x04}, // getbyte b h h 
	{0xe7fa, &op_getbyte,	  2,   7,   7, 0xff, 0x01, 0x00, 0x04}, // getbyte c h h 
	{0xe7fb, &op_getbyte,	  3,   7,   7, 0xff, 0x01, 0x00, 0x04}, // getbyte d h h 
	{0xe7fc, &op_getbyte,	  4,   7,   7, 0xff, 0x01, 0x00, 0x04}, // getbyte e h h 
	{0xe7fd, &op_getbyte,	  5,   7,   7, 0xff, 0x01, 0x00, 0x04}, // getbyte f h h 
	{0xe7fe, &op_getbyte,	  6,   7,   7, 0xff, 0x01, 0x00, 0x04}, // getbyte g h h 
	{0xe7ff, &op_getbyte,	  7,   7,   7, 0xff, 0x01, 0x00, 0x04}, // getbyte h h h 
	{0xe800, &op_setbyte,	  0,   0,   0, 0xff, 0x01, 0x00, 0x04}, // setbyte a a a 
	{0xe801, &op_setbyte,	  1,   0,   0, 0xff, 0x01, 0x00, 0x04}, // setbyte b a a 
	{0xe802, &op_setbyte,	  2,   0,   0, 0xff, 0x01, 0x00, 0x04}, // setbyte c a a 
	{0xe803, &op_setbyte,	  3,   0,   0, 0xff, 0x01, 0x00, 0x04}, // setbyte d a a 
	{0xe804, &op_setbyte,	  4,   0,   0, 0xff, 0x01, 0x00, 0x04}, // setbyte e a a 
	{0xe805, &op_setbyte,	  5,   0,   0, 0xff, 0x01, 0x00, 0x04}, // setbyte f a a 
	{0xe806, &op_setbyte,	  6,   0,   0, 0xff, 0x01, 0x00, 0x04}, // setbyte g a a 
	{0xe807, &op_setbyte,	  7,   0,   0, 0xff, 0x01, 0x00, 0x04}, // setbyte h a a 
	{0xe808, &op_setbyte,	  0,   1,   0, 0xff, 0x01, 0x00, 0x04}, // setbyte a b a 
	{0xe809, &op_setbyte,	  1,   1,   0, 0xff, 0x01, 0x00, 0x04}, // setbyte b b a 
	{0xe80a, &op_setbyte,	  2,   1,   0, 0xff, 0x01, 0x00, 0x04}, // setbyte c b a 
	{0xe80b, &op_setbyte,	  3,   1,   0, 0xff, 0x01, 0x00, 0x04}, // setbyte d b a 
	{0xe80c, &op_setbyte,	  4,   1,   0, 0xff, 0x01, 0x00, 0x04}, // setbyte e b a 
	{0xe80d, &op_setbyte,	  5,   1,   0, 0xff, 0x01, 0x00, 0x04}, // setbyte f b a 
	{0xe80e, &op_setbyte,	  6,   1,   0, 0xff, 0x01, 0x00, 0x04}, // setbyte g b a 
	{0xe80f, &op_setbyte,	  7,   1,   0, 0xff, 0x01, 0x00, 0x04}, // setbyte h b a 
	{0xe810, &op_setbyte,	  0,   2,   0, 0xff, 0x01, 0x00, 0x04}, // setbyte a c a 
	{0xe811, &op_setbyte,	  1,   2,   0, 0xff, 0x01, 0x00, 0x04}, // setbyte b c a 
	{0xe812, &op_setbyte,	  2,   2,   0, 0xff, 0x01, 0x00, 0x04}, // setbyte c c a 
	{0xe813, &op_setbyte,	  3,   2,   0, 0xff, 0x01, 0x00, 0x04}, // setbyte d c a 
	{0xe814, &op_setbyte,	  4,   2,   0, 0xff, 0x01, 0x00, 0x04}, // setbyte e c a 
	{0xe815, &op_setbyte,	  5,   2,   0, 0xff, 0x01, 0x00, 0x04}, // setbyte f c a 
	{0xe816, &op_setbyte,	  6,   2,   0, 0xff, 0x01, 0x00, 0x04}, // setbyte g c a 
	{0xe817, &op_setbyte,	  7,   2,   0, 0xff, 0x01, 0x00, 0x04}, // setbyte h c a 
	{0xe818, &op_setbyte,	  0,   3,   0, 0xff, 0x01, 0x00, 0x04}, // setbyte a d a 
	{0xe819, &op_setbyte,	  1,   3,   0, 0xff, 0x01, 0x00, 0x04}, // setbyte b d a 
	{0xe81a, &op_setbyte,	  2,   3,   0, 0xff, 0x01, 0x00, 0x04}, // setbyte c d a 
	{0xe81b, &op_setbyte,	  3,   3,   0, 0xff, 0x01, 0x00, 0x04}, // setbyte d d a 
	{0xe81c, &op_setbyte,	  4,   3,   0, 0xff, 0x01, 0x00, 0x04}, // setbyte e d a 
	{0xe81d, &op_setbyte,	  5,   3,   0, 0xff, 0x01, 0x00, 0x04}, // setbyte f d a 
	{0xe81e, &op_setbyte,	  6,   3,   0, 0xff, 0x01, 0x00, 0x04}, // setbyte g d a 
	{0xe81f, &op_setbyte,	  7,   3,   0, 0xff, 0x01, 0x00, 0x04}, // setbyte h d a 
	{0xe820, &op_setbyte,	  0,   4,   0, 0xff, 0x01, 0x00, 0x04}, // setbyte a e a 
	{0xe821, &op_setbyte,	  1,   4,   0, 0xff, 0x01, 0x00, 0x04}, // setbyte b e a 
	{0xe822, &op_setbyte,	  2,   4,   0, 0xff, 0x01, 0x00, 0x04}, // setbyte c e a 
	{0xe823, &op_setbyte,	  3,   4,   0, 0xff, 0x01, 0x00, 0x04}, // setbyte d e a 
	{0xe824, &op_setbyte,	  4,   4,   0, 0xff, 0x01, 0x00, 0x04}, // setbyte e e a 
	{0xe825, &op_setbyte,	  5,   4,   0, 0xff, 0x01, 0x00, 0x04}, // setbyte f e a 
	{0xe826, &op_setbyte,	  6,   4,   0, 0xff, 0x01, 0x00, 0x04}, // setbyte g e a 
	{0xe827, &op_setbyte,	  7,   4,   0, 0xff, 0x01, 0x00, 0x04}, // setbyte h e a 
	{0xe828, &op_setbyte,	  0,   5,   0, 0xff, 0x01, 0x00, 0x04}, // setbyte a f a 
	{0xe829, &op_setbyte,	  1,   5,   0, 0xff, 0x01, 0x00, 0x04}, // setbyte b f a 
	{0xe82a, &op_setbyte,	  2,   5,   0, 0xff, 0x01, 0x00, 0x04}, // setbyte c f a 
	{0xe82b, &op_setbyte,	  3,   5,   0, 0xff, 0x01, 0x00, 0x04}, // setbyte d f a 
	{0xe82c, &op_setbyte,	  4,   5,   0, 0xff, 0x01, 0x00, 0x04}, // setbyte e f a 
	{0xe82d, &op_setbyte,	  5,   5,   0, 0xff, 0x01, 0x00, 0x04}, // setbyte f f a 
	{0xe82e, &op_setbyte,	  6,   5,   0, 0xff, 0x01, 0x00, 0x04}, // setbyte g f a 
	{0xe82f, &op_setbyte,	  7,   5,   0, 0xff, 0x01, 0x00, 0x04}, // setbyte h f a 
	{0xe830, &op_setbyte,	  0,   6,   0, 0xff, 0x01, 0x00, 0x04}, // setbyte a g a 
	{0xe831, &op_setbyte,	  1,   6,   0, 0xff, 0x01, 0x00, 0x04}, // setbyte b g a 
	{0xe832, &op_setbyte,	  2,   6,   0, 0xff, 0x01, 0x00, 0x04}, // setbyte c g a 
	{0xe833, &op_setbyte,	  3,   6,   0, 0xff, 0x01, 0x00, 0x04}, // setbyte d g a 
	{0xe834, &op_setbyte,	  4,   6,   0, 0xff, 0x01, 0x00, 0x04}, // setbyte e g a 
	{0xe835, &op_setbyte,	  5,   6,   0, 0xff, 0x01, 0x00, 0x04}, // setbyte f g a 
	{0xe836, &op_setbyte,	  6,   6,   0, 0xff, 0x01, 0x00, 0x04}, // setbyte g g a 
	{0xe837, &op_setbyte,	  7,   6,   0, 0xff, 0x01, 0x00, 0x04}, // setbyte h g a 
	{0xe838, &op_setbyte,	  0,   7,   0, 0xff, 0x01, 0x00, 0x04}, // setbyte a h a 
	{0xe839, &op_setbyte,	  1,   7,   0, 0xff, 0x01, 0x00, 0x04}, // setbyte b h a 
	{0xe83a, &op_setbyte,	  2,   7,   0, 0xff, 0x01, 0x00, 0x04}, // setbyte c h a 
	{0xe83b, &op_setbyte,	  3,   7,   0, 0xff, 0x01, 0x00, 0x04}, // setbyte d h a 
	{0xe83c, &op_setbyte,	  4,   7,   0, 0xff, 0x01, 0x00, 0x04}, // setbyte e h a 
	{0xe83d, &op_setbyte,	  5,   7,   0, 0xff, 0x01, 0x00, 0x04}, // setbyte f h a 
	{0xe83e, &op_setbyte,	  6,   7,   0, 0xff, 0x01, 0x00, 0x04}, // setbyte g h a 
	{0xe83f, &op_setbyte,	  7,   7,   0, 0xff, 0x01, 0x00, 0x04}, // setbyte h h a 
	{0xe840, &op_setbyte,	  0,   0,   1, 0xff, 0x01, 0x00, 0x04}, // setbyte a a b 
	{0xe841, &op_setbyte,	  1,   0,   1, 0xff, 0x01, 0x00, 0x04}, // setbyte b a b 
	{0xe842, &op_setbyte,	  2,   0,   1, 0xff, 0x01, 0x00, 0x04}, // setbyte c a b 
	{0xe843, &op_setbyte,	  3,   0,   1, 0xff, 0x01, 0x00, 0x04}, // setbyte d a b 
	{0xe844, &op_setbyte,	  4,   0,   1, 0xff, 0x01, 0x00, 0x04}, // setbyte e a b 
	{0xe845, &op_setbyte,	  5,   0,   1, 0xff, 0x01, 0x00, 0x04}, // setbyte f a b 
	{0xe846, &op_setbyte,	  6,   0,   1, 0xff, 0x01, 0x00, 0x04}, // setbyte g a b 
	{0xe847, &op_setbyte,	  7,   0,   1, 0xff, 0x01, 0x00, 0x04}, // setbyte h a b 
	{0xe848, &op_setbyte,	  0,   1,   1, 0xff, 0x01, 0x00, 0x04}, // setbyte a b b 
	{0xe849, &op_setbyte,	  1,   1,   1, 0xff, 0x01, 0x00, 0x04}, // setbyte b b b 
	{0xe84a, &op_setbyte,	  2,   1,   1, 0xff, 0x01, 0x00, 0x04}, // setbyte c b b 
	{0xe84b, &op_setbyte,	  3,   1,   1, 0xff, 0x01, 0x00, 0x04}, // setbyte d b b 
	{0xe84c, &op_setbyte,	  4,   1,   1, 0xff, 0x01, 0x00, 0x04}, // setbyte e b b 
	{0xe84d, &op_setbyte,	  5,   1,   1, 0xff, 0x01, 0x00, 0x04}, // setbyte f b b 
	{0xe84e, &op_setbyte,	  6,   1,   1, 0xff, 0x01, 0x00, 0x04}, // setbyte g b b 
	{0xe84f, &op_setbyte,	  7,   1,   1, 0xff, 0x01, 0x00, 0x04}, // setbyte h b b 
	{0xe850, &op_setbyte,	  0,   2,   1, 0xff, 0x01, 0x00, 0x04}, // setbyte a c b 
	{0xe851, &op_setbyte,	  1,   2,   1, 0xff, 0x01, 0x00, 0x04}, // setbyte b c b 
	{0xe852, &op_setbyte,	  2,   2,   1, 0xff, 0x01, 0x00, 0x04}, // setbyte c c b 
	{0xe853, &op_setbyte,	  3,   2,   1, 0xff, 0x01, 0x00, 0x04}, // setbyte d c b 
	{0xe854, &op_setbyte,	  4,   2,   1, 0xff, 0x01, 0x00, 0x04}, // setbyte e c b 
	{0xe855, &op_setbyte,	  5,   2,   1, 0xff, 0x01, 0x00, 0x04}, // setbyte f c b 
	{0xe856, &op_setbyte,	  6,   2,   1, 0xff, 0x01, 0x00, 0x04}, // setbyte g c b 
	{0xe857, &op_setbyte,	  7,   2,   1, 0xff, 0x01, 0x00, 0x04}, // setbyte h c b 
	{0xe858, &op_setbyte,	  0,   3,   1, 0xff, 0x01, 0x00, 0x04}, // setbyte a d b 
	{0xe859, &op_setbyte,	  1,   3,   1, 0xff, 0x01, 0x00, 0x04}, // setbyte b d b 
	{0xe85a, &op_setbyte,	  2,   3,   1, 0xff, 0x01, 0x00, 0x04}, // setbyte c d b 
	{0xe85b, &op_setbyte,	  3,   3,   1, 0xff, 0x01, 0x00, 0x04}, // setbyte d d b 
	{0xe85c, &op_setbyte,	  4,   3,   1, 0xff, 0x01, 0x00, 0x04}, // setbyte e d b 
	{0xe85d, &op_setbyte,	  5,   3,   1, 0xff, 0x01, 0x00, 0x04}, // setbyte f d b 
	{0xe85e, &op_setbyte,	  6,   3,   1, 0xff, 0x01, 0x00, 0x04}, // setbyte g d b 
	{0xe85f, &op_setbyte,	  7,   3,   1, 0xff, 0x01, 0x00, 0x04}, // setbyte h d b 
	{0xe860, &op_setbyte,	  0,   4,   1, 0xff, 0x01, 0x00, 0x04}, // setbyte a e b 
	{0xe861, &op_setbyte,	  1,   4,   1, 0xff, 0x01, 0x00, 0x04}, // setbyte b e b 
	{0xe862, &op_setbyte,	  2,   4,   1, 0xff, 0x01, 0x00, 0x04}, // setbyte c e b 
	{0xe863, &op_setbyte,	  3,   4,   1, 0xff, 0x01, 0x00, 0x04}, // setbyte d e b 
	{0xe864, &op_setbyte,	  4,   4,   1, 0xff, 0x01, 0x00, 0x04}, // setbyte e e b 
	{0xe865, &op_setbyte,	  5,   4,   1, 0xff, 0x01, 0x00, 0x04}, // setbyte f e b 
	{0xe866, &op_setbyte,	  6,   4,   1, 0xff, 0x01, 0x00, 0x04}, // setbyte g e b 
	{0xe867, &op_setbyte,	  7,   4,   1, 0xff, 0x01, 0x00, 0x04}, // setbyte h e b 
	{0xe868, &op_setbyte,	  0,   5,   1, 0xff, 0x01, 0x00, 0x04}, // setbyte a f b 
	{0xe869, &op_setbyte,	  1,   5,   1, 0xff, 0x01, 0x00, 0x04}, // setbyte b f b 
	{0xe86a, &op_setbyte,	  2,   5,   1, 0xff, 0x01, 0x00, 0x04}, // setbyte c f b 
	{0xe86b, &op_setbyte,	  3,   5,   1, 0xff, 0x01, 0x00, 0x04}, // setbyte d f b 
	{0xe86c, &op_setbyte,	  4,   5,   1, 0xff, 0x01, 0x00, 0x04}, // setbyte e f b 
	{0xe86d, &op_setbyte,	  5,   5,   1, 0xff, 0x01, 0x00, 0x04}, // setbyte f f b 
	{0xe86e, &op_setbyte,	  6,   5,   1, 0xff, 0x01, 0x00, 0x04}, // setbyte g f b 
	{0xe86f, &op_setbyte,	  7,   5,   1, 0xff, 0x01, 0x00, 0x04}, // setbyte h f b 
	{0xe870, &op_setbyte,	  0,   6,   1, 0xff, 0x01, 0x00, 0x04}, // setbyte a g b 
	{0xe871, &op_setbyte,	  1,   6,   1, 0xff, 0x01, 0x00, 0x04}, // setbyte b g b 
	{0xe872, &op_setbyte,	  2,   6,   1, 0xff, 0x01, 0x00, 0x04}, // setbyte c g b 
	{0xe873, &op_setbyte,	  3,   6,   1, 0xff, 0x01, 0x00, 0x04}, // setbyte d g b 
	{0xe874, &op_setbyte,	  4,   6,   1, 0xff, 0x01, 0x00, 0x04}, // setbyte e g b 
	{0xe875, &op_setbyte,	  5,   6,   1, 0xff, 0x01, 0x00, 0x04}, // setbyte f g b 
	{0xe876, &op_setbyte,	  6,   6,   1, 0xff, 0x01, 0x00, 0x04}, // setbyte g g b 
	{0xe877, &op_setbyte,	  7,   6,   1, 0xff, 0x01, 0x00, 0x04}, // setbyte h g b 
	{0xe878, &op_setbyte,	  0,   7,   1, 0xff, 0x01, 0x00, 0x04}, // setbyte a h b 
	{0xe879, &op_setbyte,	  1,   7,   1, 0xff, 0x01, 0x00, 0x04}, // setbyte b h b 
	{0xe87a, &op_setbyte,	  2,   7,   1, 0xff, 0x01, 0x00, 0x04}, // setbyte c h b 
	{0xe87b, &op_setbyte,	  3,   7,   1, 0xff, 0x01, 0x00, 0x04}, // setbyte d h b 
	{0xe87c, &op_setbyte,	  4,   7,   1, 0xff, 0x01, 0x00, 0x04}, // setbyte e h b 
	{0xe87d, &op_setbyte,	  5,   7,   1, 0xff, 0x01, 0x00, 0x04}, // setbyte f h b 
	{0xe87e, &op_setbyte,	  6,   7,   1, 0xff, 0x01, 0x00, 0x04}, // setbyte g h b 
	{0xe87f, &op_setbyte,	  7,   7,   1, 0xff, 0x01, 0x00, 0x04}, // setbyte h h b 
	{0xe880, &op_setbyte,	  0,   0,   2, 0xff, 0x01, 0x00, 0x04}, // setbyte a a c 
	{0xe881, &op_setbyte,	  1,   0,   2, 0xff, 0x01, 0x00, 0x04}, // setbyte b a c 
	{0xe882, &op_setbyte,	  2,   0,   2, 0xff, 0x01, 0x00, 0x04}, // setbyte c a c 
	{0xe883, &op_setbyte,	  3,   0,   2, 0xff, 0x01, 0x00, 0x04}, // setbyte d a c 
	{0xe884, &op_setbyte,	  4,   0,   2, 0xff, 0x01, 0x00, 0x04}, // setbyte e a c 
	{0xe885, &op_setbyte,	  5,   0,   2, 0xff, 0x01, 0x00, 0x04}, // setbyte f a c 
	{0xe886, &op_setbyte,	  6,   0,   2, 0xff, 0x01, 0x00, 0x04}, // setbyte g a c 
	{0xe887, &op_setbyte,	  7,   0,   2, 0xff, 0x01, 0x00, 0x04}, // setbyte h a c 
	{0xe888, &op_setbyte,	  0,   1,   2, 0xff, 0x01, 0x00, 0x04}, // setbyte a b c 
	{0xe889, &op_setbyte,	  1,   1,   2, 0xff, 0x01, 0x00, 0x04}, // setbyte b b c 
	{0xe88a, &op_setbyte,	  2,   1,   2, 0xff, 0x01, 0x00, 0x04}, // setbyte c b c 
	{0xe88b, &op_setbyte,	  3,   1,   2, 0xff, 0x01, 0x00, 0x04}, // setbyte d b c 
	{0xe88c, &op_setbyte,	  4,   1,   2, 0xff, 0x01, 0x00, 0x04}, // setbyte e b c 
	{0xe88d, &op_setbyte,	  5,   1,   2, 0xff, 0x01, 0x00, 0x04}, // setbyte f b c 
	{0xe88e, &op_setbyte,	  6,   1,   2, 0xff, 0x01, 0x00, 0x04}, // setbyte g b c 
	{0xe88f, &op_setbyte,	  7,   1,   2, 0xff, 0x01, 0x00, 0x04}, // setbyte h b c 
	{0xe890, &op_setbyte,	  0,   2,   2, 0xff, 0x01, 0x00, 0x04}, // setbyte a c c 
	{0xe891, &op_setbyte,	  1,   2,   2, 0xff, 0x01, 0x00, 0x04}, // setbyte b c c 
	{0xe892, &op_setbyte,	  2,   2,   2, 0xff, 0x01, 0x00, 0x04}, // setbyte c c c 
	{0xe893, &op_setbyte,	  3,   2,   2, 0xff, 0x01, 0x00, 0x04}, // setbyte d c c 
	{0xe894, &op_setbyte,	  4,   2,   2, 0xff, 0x01, 0x00, 0x04}, // setbyte e c c 
	{0xe895, &op_setbyte,	  5,   2,   2, 0xff, 0x01, 0x00, 0x04}, // setbyte f c c 
	{0xe896, &op_setbyte,	  6,   2,   2, 0xff, 0x01, 0x00, 0x04}, // setbyte g c c 
	{0xe897, &op_setbyte,	  7,   2,   2, 0xff, 0x01, 0x00, 0x04}, // setbyte h c c 
	{0xe898, &op_setbyte,	  0,   3,   2, 0xff, 0x01, 0x00, 0x04}, // setbyte a d c 
	{0xe899, &op_setbyte,	  1,   3,   2, 0xff, 0x01, 0x00, 0x04}, // setbyte b d c 
	{0xe89a, &op_setbyte,	  2,   3,   2, 0xff, 0x01, 0x00, 0x04}, // setbyte c d c 
	{0xe89b, &op_setbyte,	  3,   3,   2, 0xff, 0x01, 0x00, 0x04}, // setbyte d d c 
	{0xe89c, &op_setbyte,	  4,   3,   2, 0xff, 0x01, 0x00, 0x04}, // setbyte e d c 
	{0xe89d, &op_setbyte,	  5,   3,   2, 0xff, 0x01, 0x00, 0x04}, // setbyte f d c 
	{0xe89e, &op_setbyte,	  6,   3,   2, 0xff, 0x01, 0x00, 0x04}, // setbyte g d c 
	{0xe89f, &op_setbyte,	  7,   3,   2, 0xff, 0x01, 0x00, 0x04}, // setbyte h d c 
	{0xe8a0, &op_setbyte,	  0,   4,   2, 0xff, 0x01, 0x00, 0x04}, // setbyte a e c 
	{0xe8a1, &op_setbyte,	  1,   4,   2, 0xff, 0x01, 0x00, 0x04}, // setbyte b e c 
	{0xe8a2, &op_setbyte,	  2,   4,   2, 0xff, 0x01, 0x00, 0x04}, // setbyte c e c 
	{0xe8a3, &op_setbyte,	  3,   4,   2, 0xff, 0x01, 0x00, 0x04}, // setbyte d e c 
	{0xe8a4, &op_setbyte,	  4,   4,   2, 0xff, 0x01, 0x00, 0x04}, // setbyte e e c 
	{0xe8a5, &op_setbyte,	  5,   4,   2, 0xff, 0x01, 0x00, 0x04}, // setbyte f e c 
	{0xe8a6, &op_setbyte,	  6,   4,   2, 0xff, 0x01, 0x00, 0x04}, // setbyte g e c 
	{0xe8a7, &op_setbyte,	  7,   4,   2, 0xff, 0x01, 0x00, 0x04}, // setbyte h e c 
	{0xe8a8, &op_setbyte,	  0,   5,   2, 0xff, 0x01, 0x00, 0x04}, // setbyte a f c 
	{0xe8a9, &op_setbyte,	  1,   5,   2, 0xff, 0x01, 0x00, 0x04}, // setbyte b f c 
	{0xe8aa, &op_setbyte,	  2,   5,   2, 0xff, 0x01, 0x00, 0x04}, // setbyte c f c 
	{0xe8ab, &op_setbyte,	  3,   5,   2, 0xff, 0x01, 0x00, 0x04}, // setbyte d f c 
	{0xe8ac, &op_setbyte,	  4,   5,   2, 0xff, 0x01, 0x00, 0x04}, // setbyte e f c 
	{0xe8ad, &op_setbyte,	  5,   5,   2, 0xff, 0x01, 0x00, 0x04}, // setbyte f f c 
	{0xe8ae, &op_setbyte,	  6,   5,   2, 0xff, 0x01, 0x00, 0x04}, // setbyte g f c 
	{0xe8af, &op_setbyte,	  7,   5,   2, 0xff, 0x01, 0x00, 0x04}, // setbyte h f c 
	{0xe8b0, &op_setbyte,	  0,   6,   2, 0xff, 0x01, 0x00, 0x04}, // setbyte a g c 
	{0xe8b1, &op_setbyte,	  1,   6,   2, 0xff, 0x01, 0x00, 0x04}, // setbyte b g c 
	{0xe8b2, &op_setbyte,	  2,   6,   2, 0xff, 0x01, 0x00, 0x04}, // setbyte c g c 
	{0xe8b3, &op_setbyte,	  3,   6,   2, 0xff, 0x01, 0x00, 0x04}, // setbyte d g c 
	{0xe8b4, &op_setbyte,	  4,   6,   2, 0xff, 0x01, 0x00, 0x04}, // setbyte e g c 
	{0xe8b5, &op_setbyte,	  5,   6,   2, 0xff, 0x01, 0x00, 0x04}, // setbyte f g c 
	{0xe8b6, &op_setbyte,	  6,   6,   2, 0xff, 0x01, 0x00, 0x04}, // setbyte g g c 
	{0xe8b7, &op_setbyte,	  7,   6,   2, 0xff, 0x01, 0x00, 0x04}, // setbyte h g c 
	{0xe8b8, &op_setbyte,	  0,   7,   2, 0xff, 0x01, 0x00, 0x04}, // setbyte a h c 
	{0xe8b9, &op_setbyte,	  1,   7,   2, 0xff, 0x01, 0x00, 0x04}, // setbyte b h c 
	{0xe8ba, &op_setbyte,	  2,   7,   2, 0xff, 0x01, 0x00, 0x04}, // setbyte c h c 
	{0xe8bb, &op_setbyte,	  3,   7,   2, 0xff, 0x01, 0x00, 0x04}, // setbyte d h c 
	{0xe8bc, &op_setbyte,	  4,   7,   2, 0xff, 0x01, 0x00, 0x04}, // setbyte e h c 
	{0xe8bd, &op_setbyte,	  5,   7,   2, 0xff, 0x01, 0x00, 0x04}, // setbyte f h c 
	{0xe8be, &op_setbyte,	  6,   7,   2, 0xff, 0x01, 0x00, 0x04}, // setbyte g h c 
	{0xe8bf, &op_setbyte,	  7,   7,   2, 0xff, 0x01, 0x00, 0x04}, // setbyte h h c 
	{0xe8c0, &op_setbyte,	  0,   0,   3, 0xff, 0x01, 0x00, 0x04}, // setbyte a a d 
	{0xe8c1, &op_setbyte,	  1,   0,   3, 0xff, 0x01, 0x00, 0x04}, // setbyte b a d 
	{0xe8c2, &op_setbyte,	  2,   0,   3, 0xff, 0x01, 0x00, 0x04}, // setbyte c a d 
	{0xe8c3, &op_setbyte,	  3,   0,   3, 0xff, 0x01, 0x00, 0x04}, // setbyte d a d 
	{0xe8c4, &op_setbyte,	  4,   0,   3, 0xff, 0x01, 0x00, 0x04}, // setbyte e a d 
	{0xe8c5, &op_setbyte,	  5,   0,   3, 0xff, 0x01, 0x00, 0x04}, // setbyte f a d 
	{0xe8c6, &op_setbyte,	  6,   0,   3, 0xff, 0x01, 0x00, 0x04}, // setbyte g a d 
	{0xe8c7, &op_setbyte,	  7,   0,   3, 0xff, 0x01, 0x00, 0x04}, // setbyte h a d 
	{0xe8c8, &op_setbyte,	  0,   1,   3, 0xff, 0x01, 0x00, 0x04}, // setbyte a b d 
	{0xe8c9, &op_setbyte,	  1,   1,   3, 0xff, 0x01, 0x00, 0x04}, // setbyte b b d 
	{0xe8ca, &op_setbyte,	  2,   1,   3, 0xff, 0x01, 0x00, 0x04}, // setbyte c b d 
	{0xe8cb, &op_setbyte,	  3,   1,   3, 0xff, 0x01, 0x00, 0x04}, // setbyte d b d 
	{0xe8cc, &op_setbyte,	  4,   1,   3, 0xff, 0x01, 0x00, 0x04}, // setbyte e b d 
	{0xe8cd, &op_setbyte,	  5,   1,   3, 0xff, 0x01, 0x00, 0x04}, // setbyte f b d 
	{0xe8ce, &op_setbyte,	  6,   1,   3, 0xff, 0x01, 0x00, 0x04}, // setbyte g b d 
	{0xe8cf, &op_setbyte,	  7,   1,   3, 0xff, 0x01, 0x00, 0x04}, // setbyte h b d 
	{0xe8d0, &op_setbyte,	  0,   2,   3, 0xff, 0x01, 0x00, 0x04}, // setbyte a c d 
	{0xe8d1, &op_setbyte,	  1,   2,   3, 0xff, 0x01, 0x00, 0x04}, // setbyte b c d 
	{0xe8d2, &op_setbyte,	  2,   2,   3, 0xff, 0x01, 0x00, 0x04}, // setbyte c c d 
	{0xe8d3, &op_setbyte,	  3,   2,   3, 0xff, 0x01, 0x00, 0x04}, // setbyte d c d 
	{0xe8d4, &op_setbyte,	  4,   2,   3, 0xff, 0x01, 0x00, 0x04}, // setbyte e c d 
	{0xe8d5, &op_setbyte,	  5,   2,   3, 0xff, 0x01, 0x00, 0x04}, // setbyte f c d 
	{0xe8d6, &op_setbyte,	  6,   2,   3, 0xff, 0x01, 0x00, 0x04}, // setbyte g c d 
	{0xe8d7, &op_setbyte,	  7,   2,   3, 0xff, 0x01, 0x00, 0x04}, // setbyte h c d 
	{0xe8d8, &op_setbyte,	  0,   3,   3, 0xff, 0x01, 0x00, 0x04}, // setbyte a d d 
	{0xe8d9, &op_setbyte,	  1,   3,   3, 0xff, 0x01, 0x00, 0x04}, // setbyte b d d 
	{0xe8da, &op_setbyte,	  2,   3,   3, 0xff, 0x01, 0x00, 0x04}, // setbyte c d d 
	{0xe8db, &op_setbyte,	  3,   3,   3, 0xff, 0x01, 0x00, 0x04}, // setbyte d d d 
	{0xe8dc, &op_setbyte,	  4,   3,   3, 0xff, 0x01, 0x00, 0x04}, // setbyte e d d 
	{0xe8dd, &op_setbyte,	  5,   3,   3, 0xff, 0x01, 0x00, 0x04}, // setbyte f d d 
	{0xe8de, &op_setbyte,	  6,   3,   3, 0xff, 0x01, 0x00, 0x04}, // setbyte g d d 
	{0xe8df, &op_setbyte,	  7,   3,   3, 0xff, 0x01, 0x00, 0x04}, // setbyte h d d 
	{0xe8e0, &op_setbyte,	  0,   4,   3, 0xff, 0x01, 0x00, 0x04}, // setbyte a e d 
	{0xe8e1, &op_setbyte,	  1,   4,   3, 0xff, 0x01, 0x00, 0x04}, // setbyte b e d 
	{0xe8e2, &op_setbyte,	  2,   4,   3, 0xff, 0x01, 0x00, 0x04}, // setbyte c e d 
	{0xe8e3, &op_setbyte,	  3,   4,   3, 0xff, 0x01, 0x00, 0x04}, // setbyte d e d 
	{0xe8e4, &op_setbyte,	  4,   4,   3, 0xff, 0x01, 0x00, 0x04}, // setbyte e e d 
	{0xe8e5, &op_setbyte,	  5,   4,   3, 0xff, 0x01, 0x00, 0x04}, // setbyte f e d 
	{0xe8e6, &op_setbyte,	  6,   4,   3, 0xff, 0x01, 0x00, 0x04}, // setbyte g e d 
	{0xe8e7, &op_setbyte,	  7,   4,   3, 0xff, 0x01, 0x00, 0x04}, // setbyte h e d 
	{0xe8e8, &op_setbyte,	  0,   5,   3, 0xff, 0x01, 0x00, 0x04}, // setbyte a f d 
	{0xe8e9, &op_setbyte,	  1,   5,   3, 0xff, 0x01, 0x00, 0x04}, // setbyte b f d 
	{0xe8ea, &op_setbyte,	  2,   5,   3, 0xff, 0x01, 0x00, 0x04}, // setbyte c f d 
	{0xe8eb, &op_setbyte,	  3,   5,   3, 0xff, 0x01, 0x00, 0x04}, // setbyte d f d 
	{0xe8ec, &op_setbyte,	  4,   5,   3, 0xff, 0x01, 0x00, 0x04}, // setbyte e f d 
	{0xe8ed, &op_setbyte,	  5,   5,   3, 0xff, 0x01, 0x00, 0x04}, // setbyte f f d 
	{0xe8ee, &op_setbyte,	  6,   5,   3, 0xff, 0x01, 0x00, 0x04}, // setbyte g f d 
	{0xe8ef, &op_setbyte,	  7,   5,   3, 0xff, 0x01, 0x00, 0x04}, // setbyte h f d 
	{0xe8f0, &op_setbyte,	  0,   6,   3, 0xff, 0x01, 0x00, 0x04}, // setbyte a g d 
	{0xe8f1, &op_setbyte,	  1,   6,   3, 0xff, 0x01, 0x00, 0x04}, // setbyte b g d 
	{0xe8f2, &op_setbyte,	  2,   6,   3, 0xff, 0x01, 0x00, 0x04}, // setbyte c g d 
	{0xe8f3, &op_setbyte,	  3,   6,   3, 0xff, 0x01, 0x00, 0x04}, // setbyte d g d 
	{0xe8f4, &op_setbyte,	  4,   6,   3, 0xff, 0x01, 0x00, 0x04}, // setbyte e g d 
	{0xe8f5, &op_setbyte,	  5,   6,   3, 0xff, 0x01, 0x00, 0x04}, // setbyte f g d 
	{0xe8f6, &op_setbyte,	  6,   6,   3, 0xff, 0x01, 0x00, 0x04}, // setbyte g g d 
	{0xe8f7, &op_setbyte,	  7,   6,   3, 0xff, 0x01, 0x00, 0x04}, // setbyte h g d 
	{0xe8f8, &op_setbyte,	  0,   7,   3, 0xff, 0x01, 0x00, 0x04}, // setbyte a h d 
	{0xe8f9, &op_setbyte,	  1,   7,   3, 0xff, 0x01, 0x00, 0x04}, // setbyte b h d 
	{0xe8fa, &op_setbyte,	  2,   7,   3, 0xff, 0x01, 0x00, 0x04}, // setbyte c h d 
	{0xe8fb, &op_setbyte,	  3,   7,   3, 0xff, 0x01, 0x00, 0x04}, // setbyte d h d 
	{0xe8fc, &op_setbyte,	  4,   7,   3, 0xff, 0x01, 0x00, 0x04}, // setbyte e h d 
	{0xe8fd, &op_setbyte,	  5,   7,   3, 0xff, 0x01, 0x00, 0x04}, // setbyte f h d 
	{0xe8fe, &op_setbyte,	  6,   7,   3, 0xff, 0x01, 0x00, 0x04}, // setbyte g h d 
	{0xe8ff, &op_setbyte,	  7,   7,   3, 0xff, 0x01, 0x00, 0x04}, // setbyte h h d 
	{0xe900, &op_setbyte,	  0,   0,   4, 0xff, 0x01, 0x00, 0x04}, // setbyte a a e 
	{0xe901, &op_setbyte,	  1,   0,   4, 0xff, 0x01, 0x00, 0x04}, // setbyte b a e 
	{0xe902, &op_setbyte,	  2,   0,   4, 0xff, 0x01, 0x00, 0x04}, // setbyte c a e 
	{0xe903, &op_setbyte,	  3,   0,   4, 0xff, 0x01, 0x00, 0x04}, // setbyte d a e 
	{0xe904, &op_setbyte,	  4,   0,   4, 0xff, 0x01, 0x00, 0x04}, // setbyte e a e 
	{0xe905, &op_setbyte,	  5,   0,   4, 0xff, 0x01, 0x00, 0x04}, // setbyte f a e 
	{0xe906, &op_setbyte,	  6,   0,   4, 0xff, 0x01, 0x00, 0x04}, // setbyte g a e 
	{0xe907, &op_setbyte,	  7,   0,   4, 0xff, 0x01, 0x00, 0x04}, // setbyte h a e 
	{0xe908, &op_setbyte,	  0,   1,   4, 0xff, 0x01, 0x00, 0x04}, // setbyte a b e 
	{0xe909, &op_setbyte,	  1,   1,   4, 0xff, 0x01, 0x00, 0x04}, // setbyte b b e 
	{0xe90a, &op_setbyte,	  2,   1,   4, 0xff, 0x01, 0x00, 0x04}, // setbyte c b e 
	{0xe90b, &op_setbyte,	  3,   1,   4, 0xff, 0x01, 0x00, 0x04}, // setbyte d b e 
	{0xe90c, &op_setbyte,	  4,   1,   4, 0xff, 0x01, 0x00, 0x04}, // setbyte e b e 
	{0xe90d, &op_setbyte,	  5,   1,   4, 0xff, 0x01, 0x00, 0x04}, // setbyte f b e 
	{0xe90e, &op_setbyte,	  6,   1,   4, 0xff, 0x01, 0x00, 0x04}, // setbyte g b e 
	{0xe90f, &op_setbyte,	  7,   1,   4, 0xff, 0x01, 0x00, 0x04}, // setbyte h b e 
	{0xe910, &op_setbyte,	  0,   2,   4, 0xff, 0x01, 0x00, 0x04}, // setbyte a c e 
	{0xe911, &op_setbyte,	  1,   2,   4, 0xff, 0x01, 0x00, 0x04}, // setbyte b c e 
	{0xe912, &op_setbyte,	  2,   2,   4, 0xff, 0x01, 0x00, 0x04}, // setbyte c c e 
	{0xe913, &op_setbyte,	  3,   2,   4, 0xff, 0x01, 0x00, 0x04}, // setbyte d c e 
	{0xe914, &op_setbyte,	  4,   2,   4, 0xff, 0x01, 0x00, 0x04}, // setbyte e c e 
	{0xe915, &op_setbyte,	  5,   2,   4, 0xff, 0x01, 0x00, 0x04}, // setbyte f c e 
	{0xe916, &op_setbyte,	  6,   2,   4, 0xff, 0x01, 0x00, 0x04}, // setbyte g c e 
	{0xe917, &op_setbyte,	  7,   2,   4, 0xff, 0x01, 0x00, 0x04}, // setbyte h c e 
	{0xe918, &op_setbyte,	  0,   3,   4, 0xff, 0x01, 0x00, 0x04}, // setbyte a d e 
	{0xe919, &op_setbyte,	  1,   3,   4, 0xff, 0x01, 0x00, 0x04}, // setbyte b d e 
	{0xe91a, &op_setbyte,	  2,   3,   4, 0xff, 0x01, 0x00, 0x04}, // setbyte c d e 
	{0xe91b, &op_setbyte,	  3,   3,   4, 0xff, 0x01, 0x00, 0x04}, // setbyte d d e 
	{0xe91c, &op_setbyte,	  4,   3,   4, 0xff, 0x01, 0x00, 0x04}, // setbyte e d e 
	{0xe91d, &op_setbyte,	  5,   3,   4, 0xff, 0x01, 0x00, 0x04}, // setbyte f d e 
	{0xe91e, &op_setbyte,	  6,   3,   4, 0xff, 0x01, 0x00, 0x04}, // setbyte g d e 
	{0xe91f, &op_setbyte,	  7,   3,   4, 0xff, 0x01, 0x00, 0x04}, // setbyte h d e 
	{0xe920, &op_setbyte,	  0,   4,   4, 0xff, 0x01, 0x00, 0x04}, // setbyte a e e 
	{0xe921, &op_setbyte,	  1,   4,   4, 0xff, 0x01, 0x00, 0x04}, // setbyte b e e 
	{0xe922, &op_setbyte,	  2,   4,   4, 0xff, 0x01, 0x00, 0x04}, // setbyte c e e 
	{0xe923, &op_setbyte,	  3,   4,   4, 0xff, 0x01, 0x00, 0x04}, // setbyte d e e 
	{0xe924, &op_setbyte,	  4,   4,   4, 0xff, 0x01, 0x00, 0x04}, // setbyte e e e 
	{0xe925, &op_setbyte,	  5,   4,   4, 0xff, 0x01, 0x00, 0x04}, // setbyte f e e 
	{0xe926, &op_setbyte,	  6,   4,   4, 0xff, 0x01, 0x00, 0x04}, // setbyte g e e 
	{0xe927, &op_setbyte,	  7,   4,   4, 0xff, 0x01, 0x00, 0x04}, // setbyte h e e 
	{0xe928, &op_setbyte,	  0,   5,   4, 0xff, 0x01, 0x00, 0x04}, // setbyte a f e 
	{0xe929, &op_setbyte,	  1,   5,   4, 0xff, 0x01, 0x00, 0x04}, // setbyte b f e 
	{0xe92a, &op_setbyte,	  2,   5,   4, 0xff, 0x01, 0x00, 0x04}, // setbyte c f e 
	{0xe92b, &op_setbyte,	  3,   5,   4, 0xff, 0x01, 0x00, 0x04}, // setbyte d f e 
	{0xe92c, &op_setbyte,	  4,   5,   4, 0xff, 0x01, 0x00, 0x04}, // setbyte e f e 
	{0xe92d, &op_setbyte,	  5,   5,   4, 0xff, 0x01, 0x00, 0x04}, // setbyte f f e 
	{0xe92e, &op_setbyte,	  6,   5,   4, 0xff, 0x01, 0x00, 0x04}, // setbyte g f e 
	{0xe92f, &op_setbyte,	  7,   5,   4, 0xff, 0x01, 0x00, 0x04}, // setbyte h f e 
	{0xe930, &op_setbyte,	  0,   6,   4, 0xff, 0x01, 0x00, 0x04}, // setbyte a g e 
	{0xe931, &op_setbyte,	  1,   6,   4, 0xff, 0x01, 0x00, 0x04}, // setbyte b g e 
	{0xe932, &op_setbyte,	  2,   6,   4, 0xff, 0x01, 0x00, 0x04}, // setbyte c g e 
	{0xe933, &op_setbyte,	  3,   6,   4, 0xff, 0x01, 0x00, 0x04}, // setbyte d g e 
	{0xe934, &op_setbyte,	  4,   6,   4, 0xff, 0x01, 0x00, 0x04}, // setbyte e g e 
	{0xe935, &op_setbyte,	  5,   6,   4, 0xff, 0x01, 0x00, 0x04}, // setbyte f g e 
	{0xe936, &op_setbyte,	  6,   6,   4, 0xff, 0x01, 0x00, 0x04}, // setbyte g g e 
	{0xe937, &op_setbyte,	  7,   6,   4, 0xff, 0x01, 0x00, 0x04}, // setbyte h g e 
	{0xe938, &op_setbyte,	  0,   7,   4, 0xff, 0x01, 0x00, 0x04}, // setbyte a h e 
	{0xe939, &op_setbyte,	  1,   7,   4, 0xff, 0x01, 0x00, 0x04}, // setbyte b h e 
	{0xe93a, &op_setbyte,	  2,   7,   4, 0xff, 0x01, 0x00, 0x04}, // setbyte c h e 
	{0xe93b, &op_setbyte,	  3,   7,   4, 0xff, 0x01, 0x00, 0x04}, // setbyte d h e 
	{0xe93c, &op_setbyte,	  4,   7,   4, 0xff, 0x01, 0x00, 0x04}, // setbyte e h e 
	{0xe93d, &op_setbyte,	  5,   7,   4, 0xff, 0x01, 0x00, 0x04}, // setbyte f h e 
	{0xe93e, &op_setbyte,	  6,   7,   4, 0xff, 0x01, 0x00, 0x04}, // setbyte g h e 
	{0xe93f, &op_setbyte,	  7,   7,   4, 0xff, 0x01, 0x00, 0x04}, // setbyte h h e 
	{0xe940, &op_setbyte,	  0,   0,   5, 0xff, 0x01, 0x00, 0x04}, // setbyte a a f 
	{0xe941, &op_setbyte,	  1,   0,   5, 0xff, 0x01, 0x00, 0x04}, // setbyte b a f 
	{0xe942, &op_setbyte,	  2,   0,   5, 0xff, 0x01, 0x00, 0x04}, // setbyte c a f 
	{0xe943, &op_setbyte,	  3,   0,   5, 0xff, 0x01, 0x00, 0x04}, // setbyte d a f 
	{0xe944, &op_setbyte,	  4,   0,   5, 0xff, 0x01, 0x00, 0x04}, // setbyte e a f 
	{0xe945, &op_setbyte,	  5,   0,   5, 0xff, 0x01, 0x00, 0x04}, // setbyte f a f 
	{0xe946, &op_setbyte,	  6,   0,   5, 0xff, 0x01, 0x00, 0x04}, // setbyte g a f 
	{0xe947, &op_setbyte,	  7,   0,   5, 0xff, 0x01, 0x00, 0x04}, // setbyte h a f 
	{0xe948, &op_setbyte,	  0,   1,   5, 0xff, 0x01, 0x00, 0x04}, // setbyte a b f 
	{0xe949, &op_setbyte,	  1,   1,   5, 0xff, 0x01, 0x00, 0x04}, // setbyte b b f 
	{0xe94a, &op_setbyte,	  2,   1,   5, 0xff, 0x01, 0x00, 0x04}, // setbyte c b f 
	{0xe94b, &op_setbyte,	  3,   1,   5, 0xff, 0x01, 0x00, 0x04}, // setbyte d b f 
	{0xe94c, &op_setbyte,	  4,   1,   5, 0xff, 0x01, 0x00, 0x04}, // setbyte e b f 
	{0xe94d, &op_setbyte,	  5,   1,   5, 0xff, 0x01, 0x00, 0x04}, // setbyte f b f 
	{0xe94e, &op_setbyte,	  6,   1,   5, 0xff, 0x01, 0x00, 0x04}, // setbyte g b f 
	{0xe94f, &op_setbyte,	  7,   1,   5, 0xff, 0x01, 0x00, 0x04}, // setbyte h b f 
	{0xe950, &op_setbyte,	  0,   2,   5, 0xff, 0x01, 0x00, 0x04}, // setbyte a c f 
	{0xe951, &op_setbyte,	  1,   2,   5, 0xff, 0x01, 0x00, 0x04}, // setbyte b c f 
	{0xe952, &op_setbyte,	  2,   2,   5, 0xff, 0x01, 0x00, 0x04}, // setbyte c c f 
	{0xe953, &op_setbyte,	  3,   2,   5, 0xff, 0x01, 0x00, 0x04}, // setbyte d c f 
	{0xe954, &op_setbyte,	  4,   2,   5, 0xff, 0x01, 0x00, 0x04}, // setbyte e c f 
	{0xe955, &op_setbyte,	  5,   2,   5, 0xff, 0x01, 0x00, 0x04}, // setbyte f c f 
	{0xe956, &op_setbyte,	  6,   2,   5, 0xff, 0x01, 0x00, 0x04}, // setbyte g c f 
	{0xe957, &op_setbyte,	  7,   2,   5, 0xff, 0x01, 0x00, 0x04}, // setbyte h c f 
	{0xe958, &op_setbyte,	  0,   3,   5, 0xff, 0x01, 0x00, 0x04}, // setbyte a d f 
	{0xe959, &op_setbyte,	  1,   3,   5, 0xff, 0x01, 0x00, 0x04}, // setbyte b d f 
	{0xe95a, &op_setbyte,	  2,   3,   5, 0xff, 0x01, 0x00, 0x04}, // setbyte c d f 
	{0xe95b, &op_setbyte,	  3,   3,   5, 0xff, 0x01, 0x00, 0x04}, // setbyte d d f 
	{0xe95c, &op_setbyte,	  4,   3,   5, 0xff, 0x01, 0x00, 0x04}, // setbyte e d f 
	{0xe95d, &op_setbyte,	  5,   3,   5, 0xff, 0x01, 0x00, 0x04}, // setbyte f d f 
	{0xe95e, &op_setbyte,	  6,   3,   5, 0xff, 0x01, 0x00, 0x04}, // setbyte g d f 
	{0xe95f, &op_setbyte,	  7,   3,   5, 0xff, 0x01, 0x00, 0x04}, // setbyte h d f 
	{0xe960, &op_setbyte,	  0,   4,   5, 0xff, 0x01, 0x00, 0x04}, // setbyte a e f 
	{0xe961, &op_setbyte,	  1,   4,   5, 0xff, 0x01, 0x00, 0x04}, // setbyte b e f 
	{0xe962, &op_setbyte,	  2,   4,   5, 0xff, 0x01, 0x00, 0x04}, // setbyte c e f 
	{0xe963, &op_setbyte,	  3,   4,   5, 0xff, 0x01, 0x00, 0x04}, // setbyte d e f 
	{0xe964, &op_setbyte,	  4,   4,   5, 0xff, 0x01, 0x00, 0x04}, // setbyte e e f 
	{0xe965, &op_setbyte,	  5,   4,   5, 0xff, 0x01, 0x00, 0x04}, // setbyte f e f 
	{0xe966, &op_setbyte,	  6,   4,   5, 0xff, 0x01, 0x00, 0x04}, // setbyte g e f 
	{0xe967, &op_setbyte,	  7,   4,   5, 0xff, 0x01, 0x00, 0x04}, // setbyte h e f 
	{0xe968, &op_setbyte,	  0,   5,   5, 0xff, 0x01, 0x00, 0x04}, // setbyte a f f 
	{0xe969, &op_setbyte,	  1,   5,   5, 0xff, 0x01, 0x00, 0x04}, // setbyte b f f 
	{0xe96a, &op_setbyte,	  2,   5,   5, 0xff, 0x01, 0x00, 0x04}, // setbyte c f f 
	{0xe96b, &op_setbyte,	  3,   5,   5, 0xff, 0x01, 0x00, 0x04}, // setbyte d f f 
	{0xe96c, &op_setbyte,	  4,   5,   5, 0xff, 0x01, 0x00, 0x04}, // setbyte e f f 
	{0xe96d, &op_setbyte,	  5,   5,   5, 0xff, 0x01, 0x00, 0x04}, // setbyte f f f 
	{0xe96e, &op_setbyte,	  6,   5,   5, 0xff, 0x01, 0x00, 0x04}, // setbyte g f f 
	{0xe96f, &op_setbyte,	  7,   5,   5, 0xff, 0x01, 0x00, 0x04}, // setbyte h f f 
	{0xe970, &op_setbyte,	  0,   6,   5, 0xff, 0x01, 0x00, 0x04}, // setbyte a g f 
	{0xe971, &op_setbyte,	  1,   6,   5, 0xff, 0x01, 0x00, 0x04}, // setbyte b g f 
	{0xe972, &op_setbyte,	  2,   6,   5, 0xff, 0x01, 0x00, 0x04}, // setbyte c g f 
	{0xe973, &op_setbyte,	  3,   6,   5, 0xff, 0x01, 0x00, 0x04}, // setbyte d g f 
	{0xe974, &op_setbyte,	  4,   6,   5, 0xff, 0x01, 0x00, 0x04}, // setbyte e g f 
	{0xe975, &op_setbyte,	  5,   6,   5, 0xff, 0x01, 0x00, 0x04}, // setbyte f g f 
	{0xe976, &op_setbyte,	  6,   6,   5, 0xff, 0x01, 0x00, 0x04}, // setbyte g g f 
	{0xe977, &op_setbyte,	  7,   6,   5, 0xff, 0x01, 0x00, 0x04}, // setbyte h g f 
	{0xe978, &op_setbyte,	  0,   7,   5, 0xff, 0x01, 0x00, 0x04}, // setbyte a h f 
	{0xe979, &op_setbyte,	  1,   7,   5, 0xff, 0x01, 0x00, 0x04}, // setbyte b h f 
	{0xe97a, &op_setbyte,	  2,   7,   5, 0xff, 0x01, 0x00, 0x04}, // setbyte c h f 
	{0xe97b, &op_setbyte,	  3,   7,   5, 0xff, 0x01, 0x00, 0x04}, // setbyte d h f 
	{0xe97c, &op_setbyte,	  4,   7,   5, 0xff, 0x01, 0x00, 0x04}, // setbyte e h f 
	{0xe97d, &op_setbyte,	  5,   7,   5, 0xff, 0x01, 0x00, 0x04}, // setbyte f h f 
	{0xe97e, &op_setbyte,	  6,   7,   5, 0xff, 0x01, 0x00, 0x04}, // setbyte g h f 
	{0xe97f, &op_setbyte,	  7,   7,   5, 0xff, 0x01, 0x00, 0x04}, // setbyte h h f 
	{0xe980, &op_setbyte,	  0,   0,   6, 0xff, 0x01, 0x00, 0x04}, // setbyte a a g 
	{0xe981, &op_setbyte,	  1,   0,   6, 0xff, 0x01, 0x00, 0x04}, // setbyte b a g 
	{0xe982, &op_setbyte,	  2,   0,   6, 0xff, 0x01, 0x00, 0x04}, // setbyte c a g 
	{0xe983, &op_setbyte,	  3,   0,   6, 0xff, 0x01, 0x00, 0x04}, // setbyte d a g 
	{0xe984, &op_setbyte,	  4,   0,   6, 0xff, 0x01, 0x00, 0x04}, // setbyte e a g 
	{0xe985, &op_setbyte,	  5,   0,   6, 0xff, 0x01, 0x00, 0x04}, // setbyte f a g 
	{0xe986, &op_setbyte,	  6,   0,   6, 0xff, 0x01, 0x00, 0x04}, // setbyte g a g 
	{0xe987, &op_setbyte,	  7,   0,   6, 0xff, 0x01, 0x00, 0x04}, // setbyte h a g 
	{0xe988, &op_setbyte,	  0,   1,   6, 0xff, 0x01, 0x00, 0x04}, // setbyte a b g 
	{0xe989, &op_setbyte,	  1,   1,   6, 0xff, 0x01, 0x00, 0x04}, // setbyte b b g 
	{0xe98a, &op_setbyte,	  2,   1,   6, 0xff, 0x01, 0x00, 0x04}, // setbyte c b g 
	{0xe98b, &op_setbyte,	  3,   1,   6, 0xff, 0x01, 0x00, 0x04}, // setbyte d b g 
	{0xe98c, &op_setbyte,	  4,   1,   6, 0xff, 0x01, 0x00, 0x04}, // setbyte e b g 
	{0xe98d, &op_setbyte,	  5,   1,   6, 0xff, 0x01, 0x00, 0x04}, // setbyte f b g 
	{0xe98e, &op_setbyte,	  6,   1,   6, 0xff, 0x01, 0x00, 0x04}, // setbyte g b g 
	{0xe98f, &op_setbyte,	  7,   1,   6, 0xff, 0x01, 0x00, 0x04}, // setbyte h b g 
	{0xe990, &op_setbyte,	  0,   2,   6, 0xff, 0x01, 0x00, 0x04}, // setbyte a c g 
	{0xe991, &op_setbyte,	  1,   2,   6, 0xff, 0x01, 0x00, 0x04}, // setbyte b c g 
	{0xe992, &op_setbyte,	  2,   2,   6, 0xff, 0x01, 0x00, 0x04}, // setbyte c c g 
	{0xe993, &op_setbyte,	  3,   2,   6, 0xff, 0x01, 0x00, 0x04}, // setbyte d c g 
	{0xe994, &op_setbyte,	  4,   2,   6, 0xff, 0x01, 0x00, 0x04}, // setbyte e c g 
	{0xe995, &op_setbyte,	  5,   2,   6, 0xff, 0x01, 0x00, 0x04}, // setbyte f c g 
	{0xe996, &op_setbyte,	  6,   2,   6, 0xff, 0x01, 0x00, 0x04}, // setbyte g c g 
	{0xe997, &op_setbyte,	  7,   2,   6, 0xff, 0x01, 0x00, 0x04}, // setbyte h c g 
	{0xe998, &op_setbyte,	  0,   3,   6, 0xff, 0x01, 0x00, 0x04}, // setbyte a d g 
	{0xe999, &op_setbyte,	  1,   3,   6, 0xff, 0x01, 0x00, 0x04}, // setbyte b d g 
	{0xe99a, &op_setbyte,	  2,   3,   6, 0xff, 0x01, 0x00, 0x04}, // setbyte c d g 
	{0xe99b, &op_setbyte,	  3,   3,   6, 0xff, 0x01, 0x00, 0x04}, // setbyte d d g 
	{0xe99c, &op_setbyte,	  4,   3,   6, 0xff, 0x01, 0x00, 0x04}, // setbyte e d g 
	{0xe99d, &op_setbyte,	  5,   3,   6, 0xff, 0x01, 0x00, 0x04}, // setbyte f d g 
	{0xe99e, &op_setbyte,	  6,   3,   6, 0xff, 0x01, 0x00, 0x04}, // setbyte g d g 
	{0xe99f, &op_setbyte,	  7,   3,   6, 0xff, 0x01, 0x00, 0x04}, // setbyte h d g 
	{0xe9a0, &op_setbyte,	  0,   4,   6, 0xff, 0x01, 0x00, 0x04}, // setbyte a e g 
	{0xe9a1, &op_setbyte,	  1,   4,   6, 0xff, 0x01, 0x00, 0x04}, // setbyte b e g 
	{0xe9a2, &op_setbyte,	  2,   4,   6, 0xff, 0x01, 0x00, 0x04}, // setbyte c e g 
	{0xe9a3, &op_setbyte,	  3,   4,   6, 0xff, 0x01, 0x00, 0x04}, // setbyte d e g 
	{0xe9a4, &op_setbyte,	  4,   4,   6, 0xff, 0x01, 0x00, 0x04}, // setbyte e e g 
	{0xe9a5, &op_setbyte,	  5,   4,   6, 0xff, 0x01, 0x00, 0x04}, // setbyte f e g 
	{0xe9a6, &op_setbyte,	  6,   4,   6, 0xff, 0x01, 0x00, 0x04}, // setbyte g e g 
	{0xe9a7, &op_setbyte,	  7,   4,   6, 0xff, 0x01, 0x00, 0x04}, // setbyte h e g 
	{0xe9a8, &op_setbyte,	  0,   5,   6, 0xff, 0x01, 0x00, 0x04}, // setbyte a f g 
	{0xe9a9, &op_setbyte,	  1,   5,   6, 0xff, 0x01, 0x00, 0x04}, // setbyte b f g 
	{0xe9aa, &op_setbyte,	  2,   5,   6, 0xff, 0x01, 0x00, 0x04}, // setbyte c f g 
	{0xe9ab, &op_setbyte,	  3,   5,   6, 0xff, 0x01, 0x00, 0x04}, // setbyte d f g 
	{0xe9ac, &op_setbyte,	  4,   5,   6, 0xff, 0x01, 0x00, 0x04}, // setbyte e f g 
	{0xe9ad, &op_setbyte,	  5,   5,   6, 0xff, 0x01, 0x00, 0x04}, // setbyte f f g 
	{0xe9ae, &op_setbyte,	  6,   5,   6, 0xff, 0x01, 0x00, 0x04}, // setbyte g f g 
	{0xe9af, &op_setbyte,	  7,   5,   6, 0xff, 0x01, 0x00, 0x04}, // setbyte h f g 
	{0xe9b0, &op_setbyte,	  0,   6,   6, 0xff, 0x01, 0x00, 0x04}, // setbyte a g g 
	{0xe9b1, &op_setbyte,	  1,   6,   6, 0xff, 0x01, 0x00, 0x04}, // setbyte b g g 
	{0xe9b2, &op_setbyte,	  2,   6,   6, 0xff, 0x01, 0x00, 0x04}, // setbyte c g g 
	{0xe9b3, &op_setbyte,	  3,   6,   6, 0xff, 0x01, 0x00, 0x04}, // setbyte d g g 
	{0xe9b4, &op_setbyte,	  4,   6,   6, 0xff, 0x01, 0x00, 0x04}, // setbyte e g g 
	{0xe9b5, &op_setbyte,	  5,   6,   6, 0xff, 0x01, 0x00, 0x04}, // setbyte f g g 
	{0xe9b6, &op_setbyte,	  6,   6,   6, 0xff, 0x01, 0x00, 0x04}, // setbyte g g g 
	{0xe9b7, &op_setbyte,	  7,   6,   6, 0xff, 0x01, 0x00, 0x04}, // setbyte h g g 
	{0xe9b8, &op_setbyte,	  0,   7,   6, 0xff, 0x01, 0x00, 0x04}, // setbyte a h g 
	{0xe9b9, &op_setbyte,	  1,   7,   6, 0xff, 0x01, 0x00, 0x04}, // setbyte b h g 
	{0xe9ba, &op_setbyte,	  2,   7,   6, 0xff, 0x01, 0x00, 0x04}, // setbyte c h g 
	{0xe9bb, &op_setbyte,	  3,   7,   6, 0xff, 0x01, 0x00, 0x04}, // setbyte d h g 
	{0xe9bc, &op_setbyte,	  4,   7,   6, 0xff, 0x01, 0x00, 0x04}, // setbyte e h g 
	{0xe9bd, &op_setbyte,	  5,   7,   6, 0xff, 0x01, 0x00, 0x04}, // setbyte f h g 
	{0xe9be, &op_setbyte,	  6,   7,   6, 0xff, 0x01, 0x00, 0x04}, // setbyte g h g 
	{0xe9bf, &op_setbyte,	  7,   7,   6, 0xff, 0x01, 0x00, 0x04}, // setbyte h h g 
	{0xe9c0, &op_setbyte,	  0,   0,   7, 0xff, 0x01, 0x00, 0x04}, // setbyte a a h 
	{0xe9c1, &op_setbyte,	  1,   0,   7, 0xff, 0x01, 0x00, 0x04}, // setbyte b a h 
	{0xe9c2, &op_setbyte,	  2,   0,   7, 0xff, 0x01, 0x00, 0x04}, // setbyte c a h 
	{0xe9c3, &op_setbyte,	  3,   0,   7, 0xff, 0x01, 0x00, 0x04}, // setbyte d a h 
	{0xe9c4, &op_setbyte,	  4,   0,   7, 0xff, 0x01, 0x00, 0x04}, // setbyte e a h 
	{0xe9c5, &op_setbyte,	  5,   0,   7, 0xff, 0x01, 0x00, 0x04}, // setbyte f a h 
	{0xe9c6, &op_setbyte,	  6,   0,   7, 0xff, 0x01, 0x00, 0x04}, // setbyte g a h 
	{0xe9c7, &op_setbyte,	  7,   0,   7, 0xff, 0x01, 0x00, 0x04}, // setbyte h a h 
	{0xe9c8, &op_setbyte,	  0,   1,   7, 0xff, 0x01, 0x00, 0x04}, // setbyte a b h 
	{0xe9c9, &op_setbyte,	  1,   1,   7, 0xff, 0x01, 0x00, 0x04}, // setbyte b b h 
	{0xe9ca, &op_setbyte,	  2,   1,   7, 0xff, 0x01, 0x00, 0x04}, // setbyte c b h 
	{0xe9cb, &op_setbyte,	  3,   1,   7, 0xff, 0x01, 0x00, 0x04}, // setbyte d b h 
	{0xe9cc, &op_setbyte,	  4,   1,   7, 0xff, 0x01, 0x00, 0x04}, // setbyte e b h 
	{0xe9cd, &op_setbyte,	  5,   1,   7, 0xff, 0x01, 0x00, 0x04}, // setbyte f b h 
	{0xe9ce, &op_setbyte,	  6,   1,   7, 0xff, 0x01, 0x00, 0x04}, // setbyte g b h 
	{0xe9cf, &op_setbyte,	  7,   1,   7, 0xff, 0x01, 0x00, 0x04}, // setbyte h b h 
	{0xe9d0, &op_setbyte,	  0,   2,   7, 0xff, 0x01, 0x00, 0x04}, // setbyte a c h 
	{0xe9d1, &op_setbyte,	  1,   2,   7, 0xff, 0x01, 0x00, 0x04}, // setbyte b c h 
	{0xe9d2, &op_setbyte,	  2,   2,   7, 0xff, 0x01, 0x00, 0x04}, // setbyte c c h 
	{0xe9d3, &op_setbyte,	  3,   2,   7, 0xff, 0x01, 0x00, 0x04}, // setbyte d c h 
	{0xe9d4, &op_setbyte,	  4,   2,   7, 0xff, 0x01, 0x00, 0x04}, // setbyte e c h 
	{0xe9d5, &op_setbyte,	  5,   2,   7, 0xff, 0x01, 0x00, 0x04}, // setbyte f c h 
	{0xe9d6, &op_setbyte,	  6,   2,   7, 0xff, 0x01, 0x00, 0x04}, // setbyte g c h 
	{0xe9d7, &op_setbyte,	  7,   2,   7, 0xff, 0x01, 0x00, 0x04}, // setbyte h c h 
	{0xe9d8, &op_setbyte,	  0,   3,   7, 0xff, 0x01, 0x00, 0x04}, // setbyte a d h 
	{0xe9d9, &op_setbyte,	  1,   3,   7, 0xff, 0x01, 0x00, 0x04}, // setbyte b d h 
	{0xe9da, &op_setbyte,	  2,   3,   7, 0xff, 0x01, 0x00, 0x04}, // setbyte c d h 
	{0xe9db, &op_setbyte,	  3,   3,   7, 0xff, 0x01, 0x00, 0x04}, // setbyte d d h 
	{0xe9dc, &op_setbyte,	  4,   3,   7, 0xff, 0x01, 0x00, 0x04}, // setbyte e d h 
	{0xe9dd, &op_setbyte,	  5,   3,   7, 0xff, 0x01, 0x00, 0x04}, // setbyte f d h 
	{0xe9de, &op_setbyte,	  6,   3,   7, 0xff, 0x01, 0x00, 0x04}, // setbyte g d h 
	{0xe9df, &op_setbyte,	  7,   3,   7, 0xff, 0x01, 0x00, 0x04}, // setbyte h d h 
	{0xe9e0, &op_setbyte,	  0,   4,   7, 0xff, 0x01, 0x00, 0x04}, // setbyte a e h 
	{0xe9e1, &op_setbyte,	  1,   4,   7, 0xff, 0x01, 0x00, 0x04}, // setbyte b e h 
	{0xe9e2, &op_setbyte,	  2,   4,   7, 0xff, 0x01, 0x00, 0x04}, // setbyte c e h 
	{0xe9e3, &op_setbyte,	  3,   4,   7, 0xff, 0x01, 0x00, 0x04}, // setbyte d e h 
	{0xe9e4, &op_setbyte,	  4,   4,   7, 0xff, 0x01, 0x00, 0x04}, // setbyte e e h 
	{0xe9e5, &op_setbyte,	  5,   4,   7, 0xff, 0x01, 0x00, 0x04}, // setbyte f e h 
	{0xe9e6, &op_setbyte,	  6,   4,   7, 0xff, 0x01, 0x00, 0x04}, // setbyte g e h 
	{0xe9e7, &op_setbyte,	  7,   4,   7, 0xff, 0x01, 0x00, 0x04}, // setbyte h e h 
	{0xe9e8, &op_setbyte,	  0,   5,   7, 0xff, 0x01, 0x00, 0x04}, // setbyte a f h 
	{0xe9e9, &op_setbyte,	  1,   5,   7, 0xff, 0x01, 0x00, 0x04}, // setbyte b f h 
	{0xe9ea, &op_setbyte,	  2,   5,   7, 0xff, 0x01, 0x00, 0x04}, // setbyte c f h 
	{0xe9eb, &op_setbyte,	  3,   5,   7, 0xff, 0x01, 0x00, 0x04}, // setbyte d f h 
	{0xe9ec, &op_setbyte,	  4,   5,   7, 0xff, 0x01, 0x00, 0x04}, // setbyte e f h 
	{0xe9ed, &op_setbyte,	  5,   5,   7, 0xff, 0x01, 0x00, 0x04}, // setbyte f f h 
	{0xe9ee, &op_setbyte,	  6,   5,   7, 0xff, 0x01, 0x00, 0x04}, // setbyte g f h 
	{0xe9ef, &op_setbyte,	  7,   5,   7, 0xff, 0x01, 0x00, 0x04}, // setbyte h f h 
	{0xe9f0, &op_setbyte,	  0,   6,   7, 0xff, 0x01, 0x00, 0x04}, // setbyte a g h 
	{0xe9f1, &op_setbyte,	  1,   6,   7, 0xff, 0x01, 0x00, 0x04}, // setbyte b g h 
	{0xe9f2, &op_setbyte,	  2,   6,   7, 0xff, 0x01, 0x00, 0x04}, // setbyte c g h 
	{0xe9f3, &op_setbyte,	  3,   6,   7, 0xff, 0x01, 0x00, 0x04}, // setbyte d g h 
	{0xe9f4, &op_setbyte,	  4,   6,   7, 0xff, 0x01, 0x00, 0x04}, // setbyte e g h 
	{0xe9f5, &op_setbyte,	  5,   6,   7, 0xff, 0x01, 0x00, 0x04}, // setbyte f g h 
	{0xe9f6, &op_setbyte,	  6,   6,   7, 0xff, 0x01, 0x00, 0x04}, // setbyte g g h 
	{0xe9f7, &op_setbyte,	  7,   6,   7, 0xff, 0x01, 0x00, 0x04}, // setbyte h g h 
	{0xe9f8, &op_setbyte,	  0,   7,   7, 0xff, 0x01, 0x00, 0x04}, // setbyte a h h 
	{0xe9f9, &op_setbyte,	  1,   7,   7, 0xff, 0x01, 0x00, 0x04}, // setbyte b h h 
	{0xe9fa, &op_setbyte,	  2,   7,   7, 0xff, 0x01, 0x00, 0x04}, // setbyte c h h 
	{0xe9fb, &op_setbyte,	  3,   7,   7, 0xff, 0x01, 0x00, 0x04}, // setbyte d h h 
	{0xe9fc, &op_setbyte,	  4,   7,   7, 0xff, 0x01, 0x00, 0x04}, // setbyte e h h 
	{0xe9fd, &op_setbyte,	  5,   7,   7, 0xff, 0x01, 0x00, 0x04}, // setbyte f h h 
	{0xe9fe, &op_setbyte,	  6,   7,   7, 0xff, 0x01, 0x00, 0x04}, // setbyte g h h 
	{0xe9ff, &op_setbyte,	  7,   7,   7, 0xff, 0x01, 0x00, 0x04}, // setbyte h h h 
	{0xea00, &op_behead,	  0,   0,   0, 0xff, 0x01, 0x00, 0x04}, // behead a a a 
	{0xea01, &op_behead,	  1,   0,   0, 0xff, 0x01, 0x00, 0x04}, // behead b a a 
	{0xea02, &op_behead,	  2,   0,   0, 0xff, 0x01, 0x00, 0x04}, // behead c a a 
	{0xea03, &op_behead,	  3,   0,   0, 0xff, 0x01, 0x00, 0x04}, // behead d a a 
	{0xea04, &op_behead,	  4,   0,   0, 0xff, 0x01, 0x00, 0x04}, // behead e a a 
	{0xea05, &op_behead,	  5,   0,   0, 0xff, 0x01, 0x00, 0x04}, // behead f a a 
	{0xea06, &op_behead,	  6,   0,   0, 0xff, 0x01, 0x00, 0x04}, // behead g a a 
	{0xea07, &op_behead,	  7,   0,   0, 0xff, 0x01, 0x00, 0x04}, // behead h a a 
	{0xea08, &op_behead,	  0,   1,   0, 0xff, 0x01, 0x00, 0x04}, // behead a b a 
	{0xea09, &op_behead,	  1,   1,   0, 0xff, 0x01, 0x00, 0x04}, // behead b b a 
	{0xea0a, &op_behead,	  2,   1,   0, 0xff, 0x01, 0x00, 0x04}, // behead c b a 
	{0xea0b, &op_behead,	  3,   1,   0, 0xff, 0x01, 0x00, 0x04}, // behead d b a 
	{0xea0c, &op_behead,	  4,   1,   0, 0xff, 0x01, 0x00, 0x04}, // behead e b a 
	{0xea0d, &op_behead,	  5,   1,   0, 0xff, 0x01, 0x00, 0x04}, // behead f b a 
	{0xea0e, &op_behead,	  6,   1,   0, 0xff, 0x01, 0x00, 0x04}, // behead g b a 
	{0xea0f, &op_behead,	  7,   1,   0, 0xff, 0x01, 0x00, 0x04}, // behead h b a 
	{0xea10, &op_behead,	  0,   2,   0, 0xff, 0x01, 0x00, 0x04}, // behead a c a 
	{0xea11, &op_behead,	  1,   2,   0, 0xff, 0x01, 0x00, 0x04}, // behead b c a 
	{0xea12, &op_behead,	  2,   2,   0, 0xff, 0x01, 0x00, 0x04}, // behead c c a 
	{0xea13, &op_behead,	  3,   2,   0, 0xff, 0x01, 0x00, 0x04}, // behead d c a 
	{0xea14, &op_behead,	  4,   2,   0, 0xff, 0x01, 0x00, 0x04}, // behead e c a 
	{0xea15, &op_behead,	  5,   2,   0, 0xff, 0x01, 0x00, 0x04}, // behead f c a 
	{0xea16, &op_behead,	  6,   2,   0, 0xff, 0x01, 0x00, 0x04}, // behead g c a 
	{0xea17, &op_behead,	  7,   2,   0, 0xff, 0x01, 0x00, 0x04}, // behead h c a 
	{0xea18, &op_behead,	  0,   3,   0, 0xff, 0x01, 0x00, 0x04}, // behead a d a 
	{0xea19, &op_behead,	  1,   3,   0, 0xff, 0x01, 0x00, 0x04}, // behead b d a 
	{0xea1a, &op_behead,	  2,   3,   0, 0xff, 0x01, 0x00, 0x04}, // behead c d a 
	{0xea1b, &op_behead,	  3,   3,   0, 0xff, 0x01, 0x00, 0x04}, // behead d d a 
	{0xea1c, &op_behead,	  4,   3,   0, 0xff, 0x01, 0x00, 0x04}, // behead e d a 
	{0xea1d, &op_behead,	  5,   3,   0, 0xff, 0x01, 0x00, 0x04}, // behead f d a 
	{0xea1e, &op_behead,	  6,   3,   0, 0xff, 0x01, 0x00, 0x04}, // behead g d a 
	{0xea1f, &op_behead,	  7,   3,   0, 0xff, 0x01, 0x00, 0x04}, // behead h d a 
	{0xea20, &op_behead,	  0,   4,   0, 0xff, 0x01, 0x00, 0x04}, // behead a e a 
	{0xea21, &op_behead,	  1,   4,   0, 0xff, 0x01, 0x00, 0x04}, // behead b e a 
	{0xea22, &op_behead,	  2,   4,   0, 0xff, 0x01, 0x00, 0x04}, // behead c e a 
	{0xea23, &op_behead,	  3,   4,   0, 0xff, 0x01, 0x00, 0x04}, // behead d e a 
	{0xea24, &op_behead,	  4,   4,   0, 0xff, 0x01, 0x00, 0x04}, // behead e e a 
	{0xea25, &op_behead,	  5,   4,   0, 0xff, 0x01, 0x00, 0x04}, // behead f e a 
	{0xea26, &op_behead,	  6,   4,   0, 0xff, 0x01, 0x00, 0x04}, // behead g e a 
	{0xea27, &op_behead,	  7,   4,   0, 0xff, 0x01, 0x00, 0x04}, // behead h e a 
	{0xea28, &op_behead,	  0,   5,   0, 0xff, 0x01, 0x00, 0x04}, // behead a f a 
	{0xea29, &op_behead,	  1,   5,   0, 0xff, 0x01, 0x00, 0x04}, // behead b f a 
	{0xea2a, &op_behead,	  2,   5,   0, 0xff, 0x01, 0x00, 0x04}, // behead c f a 
	{0xea2b, &op_behead,	  3,   5,   0, 0xff, 0x01, 0x00, 0x04}, // behead d f a 
	{0xea2c, &op_behead,	  4,   5,   0, 0xff, 0x01, 0x00, 0x04}, // behead e f a 
	{0xea2d, &op_behead,	  5,   5,   0, 0xff, 0x01, 0x00, 0x04}, // behead f f a 
	{0xea2e, &op_behead,	  6,   5,   0, 0xff, 0x01, 0x00, 0x04}, // behead g f a 
	{0xea2f, &op_behead,	  7,   5,   0, 0xff, 0x01, 0x00, 0x04}, // behead h f a 
	{0xea30, &op_behead,	  0,   6,   0, 0xff, 0x01, 0x00, 0x04}, // behead a g a 
	{0xea31, &op_behead,	  1,   6,   0, 0xff, 0x01, 0x00, 0x04}, // behead b g a 
	{0xea32, &op_behead,	  2,   6,   0, 0xff, 0x01, 0x00, 0x04}, // behead c g a 
	{0xea33, &op_behead,	  3,   6,   0, 0xff, 0x01, 0x00, 0x04}, // behead d g a 
	{0xea34, &op_behead,	  4,   6,   0, 0xff, 0x01, 0x00, 0x04}, // behead e g a 
	{0xea35, &op_behead,	  5,   6,   0, 0xff, 0x01, 0x00, 0x04}, // behead f g a 
	{0xea36, &op_behead,	  6,   6,   0, 0xff, 0x01, 0x00, 0x04}, // behead g g a 
	{0xea37, &op_behead,	  7,   6,   0, 0xff, 0x01, 0x00, 0x04}, // behead h g a 
	{0xea38, &op_behead,	  0,   7,   0, 0xff, 0x01, 0x00, 0x04}, // behead a h a 
	{0xea39, &op_behead,	  1,   7,   0, 0xff, 0x01, 0x00, 0x04}, // behead b h a 
	{0xea3a, &op_behead,	  2,   7,   0, 0xff, 0x01, 0x00, 0x04}, // behead c h a 
	{0xea3b, &op_behead,	  3,   7,   0, 0xff, 0x01, 0x00, 0x04}, // behead d h a 
	{0xea3c, &op_behead,	  4,   7,   0, 0xff, 0x01, 0x00, 0x04}, // behead e h a 
	{0xea3d, &op_behead,	  5,   7,   0, 0xff, 0x01, 0x00, 0x04}, // behead f h a 
	{0xea3e, &op_behead,	  6,   7,   0, 0xff, 0x01, 0x00, 0x04}, // behead g h a 
	{0xea3f, &op_behead,	  7,   7,   0, 0xff, 0x01, 0x00, 0x04}, // behead h h a 
	{0xea40, &op_behead,	  0,   0,   1, 0xff, 0x01, 0x00, 0x04}, // behead a a b 
	{0xea41, &op_behead,	  1,   0,   1, 0xff, 0x01, 0x00, 0x04}, // behead b a b 
	{0xea42, &op_behead,	  2,   0,   1, 0xff, 0x01, 0x00, 0x04}, // behead c a b 
	{0xea43, &op_behead,	  3,   0,   1, 0xff, 0x01, 0x00, 0x04}, // behead d a b 
	{0xea44, &op_behead,	  4,   0,   1, 0xff, 0x01, 0x00, 0x04}, // behead e a b 
	{0xea45, &op_behead,	  5,   0,   1, 0xff, 0x01, 0x00, 0x04}, // behead f a b 
	{0xea46, &op_behead,	  6,   0,   1, 0xff, 0x01, 0x00, 0x04}, // behead g a b 
	{0xea47, &op_behead,	  7,   0,   1, 0xff, 0x01, 0x00, 0x04}, // behead h a b 
	{0xea48, &op_behead,	  0,   1,   1, 0xff, 0x01, 0x00, 0x04}, // behead a b b 
	{0xea49, &op_behead,	  1,   1,   1, 0xff, 0x01, 0x00, 0x04}, // behead b b b 
	{0xea4a, &op_behead,	  2,   1,   1, 0xff, 0x01, 0x00, 0x04}, // behead c b b 
	{0xea4b, &op_behead,	  3,   1,   1, 0xff, 0x01, 0x00, 0x04}, // behead d b b 
	{0xea4c, &op_behead,	  4,   1,   1, 0xff, 0x01, 0x00, 0x04}, // behead e b b 
	{0xea4d, &op_behead,	  5,   1,   1, 0xff, 0x01, 0x00, 0x04}, // behead f b b 
	{0xea4e, &op_behead,	  6,   1,   1, 0xff, 0x01, 0x00, 0x04}, // behead g b b 
	{0xea4f, &op_behead,	  7,   1,   1, 0xff, 0x01, 0x00, 0x04}, // behead h b b 
	{0xea50, &op_behead,	  0,   2,   1, 0xff, 0x01, 0x00, 0x04}, // behead a c b 
	{0xea51, &op_behead,	  1,   2,   1, 0xff, 0x01, 0x00, 0x04}, // behead b c b 
	{0xea52, &op_behead,	  2,   2,   1, 0xff, 0x01, 0x00, 0x04}, // behead c c b 
	{0xea53, &op_behead,	  3,   2,   1, 0xff, 0x01, 0x00, 0x04}, // behead d c b 
	{0xea54, &op_behead,	  4,   2,   1, 0xff, 0x01, 0x00, 0x04}, // behead e c b 
	{0xea55, &op_behead,	  5,   2,   1, 0xff, 0x01, 0x00, 0x04}, // behead f c b 
	{0xea56, &op_behead,	  6,   2,   1, 0xff, 0x01, 0x00, 0x04}, // behead g c b 
	{0xea57, &op_behead,	  7,   2,   1, 0xff, 0x01, 0x00, 0x04}, // behead h c b 
	{0xea58, &op_behead,	  0,   3,   1, 0xff, 0x01, 0x00, 0x04}, // behead a d b 
	{0xea59, &op_behead,	  1,   3,   1, 0xff, 0x01, 0x00, 0x04}, // behead b d b 
	{0xea5a, &op_behead,	  2,   3,   1, 0xff, 0x01, 0x00, 0x04}, // behead c d b 
	{0xea5b, &op_behead,	  3,   3,   1, 0xff, 0x01, 0x00, 0x04}, // behead d d b 
	{0xea5c, &op_behead,	  4,   3,   1, 0xff, 0x01, 0x00, 0x04}, // behead e d b 
	{0xea5d, &op_behead,	  5,   3,   1, 0xff, 0x01, 0x00, 0x04}, // behead f d b 
	{0xea5e, &op_behead,	  6,   3,   1, 0xff, 0x01, 0x00, 0x04}, // behead g d b 
	{0xea5f, &op_behead,	  7,   3,   1, 0xff, 0x01, 0x00, 0x04}, // behead h d b 
	{0xea60, &op_behead,	  0,   4,   1, 0xff, 0x01, 0x00, 0x04}, // behead a e b 
	{0xea61, &op_behead,	  1,   4,   1, 0xff, 0x01, 0x00, 0x04}, // behead b e b 
	{0xea62, &op_behead,	  2,   4,   1, 0xff, 0x01, 0x00, 0x04}, // behead c e b 
	{0xea63, &op_behead,	  3,   4,   1, 0xff, 0x01, 0x00, 0x04}, // behead d e b 
	{0xea64, &op_behead,	  4,   4,   1, 0xff, 0x01, 0x00, 0x04}, // behead e e b 
	{0xea65, &op_behead,	  5,   4,   1, 0xff, 0x01, 0x00, 0x04}, // behead f e b 
	{0xea66, &op_behead,	  6,   4,   1, 0xff, 0x01, 0x00, 0x04}, // behead g e b 
	{0xea67, &op_behead,	  7,   4,   1, 0xff, 0x01, 0x00, 0x04}, // behead h e b 
	{0xea68, &op_behead,	  0,   5,   1, 0xff, 0x01, 0x00, 0x04}, // behead a f b 
	{0xea69, &op_behead,	  1,   5,   1, 0xff, 0x01, 0x00, 0x04}, // behead b f b 
	{0xea6a, &op_behead,	  2,   5,   1, 0xff, 0x01, 0x00, 0x04}, // behead c f b 
	{0xea6b, &op_behead,	  3,   5,   1, 0xff, 0x01, 0x00, 0x04}, // behead d f b 
	{0xea6c, &op_behead,	  4,   5,   1, 0xff, 0x01, 0x00, 0x04}, // behead e f b 
	{0xea6d, &op_behead,	  5,   5,   1, 0xff, 0x01, 0x00, 0x04}, // behead f f b 
	{0xea6e, &op_behead,	  6,   5,   1, 0xff, 0x01, 0x00, 0x04}, // behead g f b 
	{0xea6f, &op_behead,	  7,   5,   1, 0xff, 0x01, 0x00, 0x04}, // behead h f b 
	{0xea70, &op_behead,	  0,   6,   1, 0xff, 0x01, 0x00, 0x04}, // behead a g b 
	{0xea71, &op_behead,	  1,   6,   1, 0xff, 0x01, 0x00, 0x04}, // behead b g b 
	{0xea72, &op_behead,	  2,   6,   1, 0xff, 0x01, 0x00, 0x04}, // behead c g b 
	{0xea73, &op_behead,	  3,   6,   1, 0xff, 0x01, 0x00, 0x04}, // behead d g b 
	{0xea74, &op_behead,	  4,   6,   1, 0xff, 0x01, 0x00, 0x04}, // behead e g b 
	{0xea75, &op_behead,	  5,   6,   1, 0xff, 0x01, 0x00, 0x04}, // behead f g b 
	{0xea76, &op_behead,	  6,   6,   1, 0xff, 0x01, 0x00, 0x04}, // behead g g b 
	{0xea77, &op_behead,	  7,   6,   1, 0xff, 0x01, 0x00, 0x04}, // behead h g b 
	{0xea78, &op_behead,	  0,   7,   1, 0xff, 0x01, 0x00, 0x04}, // behead a h b 
	{0xea79, &op_behead,	  1,   7,   1, 0xff, 0x01, 0x00, 0x04}, // behead b h b 
	{0xea7a, &op_behead,	  2,   7,   1, 0xff, 0x01, 0x00, 0x04}, // behead c h b 
	{0xea7b, &op_behead,	  3,   7,   1, 0xff, 0x01, 0x00, 0x04}, // behead d h b 
	{0xea7c, &op_behead,	  4,   7,   1, 0xff, 0x01, 0x00, 0x04}, // behead e h b 
	{0xea7d, &op_behead,	  5,   7,   1, 0xff, 0x01, 0x00, 0x04}, // behead f h b 
	{0xea7e, &op_behead,	  6,   7,   1, 0xff, 0x01, 0x00, 0x04}, // behead g h b 
	{0xea7f, &op_behead,	  7,   7,   1, 0xff, 0x01, 0x00, 0x04}, // behead h h b 
	{0xea80, &op_behead,	  0,   0,   2, 0xff, 0x01, 0x00, 0x04}, // behead a a c 
	{0xea81, &op_behead,	  1,   0,   2, 0xff, 0x01, 0x00, 0x04}, // behead b a c 
	{0xea82, &op_behead,	  2,   0,   2, 0xff, 0x01, 0x00, 0x04}, // behead c a c 
	{0xea83, &op_behead,	  3,   0,   2, 0xff, 0x01, 0x00, 0x04}, // behead d a c 
	{0xea84, &op_behead,	  4,   0,   2, 0xff, 0x01, 0x00, 0x04}, // behead e a c 
	{0xea85, &op_behead,	  5,   0,   2, 0xff, 0x01, 0x00, 0x04}, // behead f a c 
	{0xea86, &op_behead,	  6,   0,   2, 0xff, 0x01, 0x00, 0x04}, // behead g a c 
	{0xea87, &op_behead,	  7,   0,   2, 0xff, 0x01, 0x00, 0x04}, // behead h a c 
	{0xea88, &op_behead,	  0,   1,   2, 0xff, 0x01, 0x00, 0x04}, // behead a b c 
	{0xea89, &op_behead,	  1,   1,   2, 0xff, 0x01, 0x00, 0x04}, // behead b b c 
	{0xea8a, &op_behead,	  2,   1,   2, 0xff, 0x01, 0x00, 0x04}, // behead c b c 
	{0xea8b, &op_behead,	  3,   1,   2, 0xff, 0x01, 0x00, 0x04}, // behead d b c 
	{0xea8c, &op_behead,	  4,   1,   2, 0xff, 0x01, 0x00, 0x04}, // behead e b c 
	{0xea8d, &op_behead,	  5,   1,   2, 0xff, 0x01, 0x00, 0x04}, // behead f b c 
	{0xea8e, &op_behead,	  6,   1,   2, 0xff, 0x01, 0x00, 0x04}, // behead g b c 
	{0xea8f, &op_behead,	  7,   1,   2, 0xff, 0x01, 0x00, 0x04}, // behead h b c 
	{0xea90, &op_behead,	  0,   2,   2, 0xff, 0x01, 0x00, 0x04}, // behead a c c 
	{0xea91, &op_behead,	  1,   2,   2, 0xff, 0x01, 0x00, 0x04}, // behead b c c 
	{0xea92, &op_behead,	  2,   2,   2, 0xff, 0x01, 0x00, 0x04}, // behead c c c 
	{0xea93, &op_behead,	  3,   2,   2, 0xff, 0x01, 0x00, 0x04}, // behead d c c 
	{0xea94, &op_behead,	  4,   2,   2, 0xff, 0x01, 0x00, 0x04}, // behead e c c 
	{0xea95, &op_behead,	  5,   2,   2, 0xff, 0x01, 0x00, 0x04}, // behead f c c 
	{0xea96, &op_behead,	  6,   2,   2, 0xff, 0x01, 0x00, 0x04}, // behead g c c 
	{0xea97, &op_behead,	  7,   2,   2, 0xff, 0x01, 0x00, 0x04}, // behead h c c 
	{0xea98, &op_behead,	  0,   3,   2, 0xff, 0x01, 0x00, 0x04}, // behead a d c 
	{0xea99, &op_behead,	  1,   3,   2, 0xff, 0x01, 0x00, 0x04}, // behead b d c 
	{0xea9a, &op_behead,	  2,   3,   2, 0xff, 0x01, 0x00, 0x04}, // behead c d c 
	{0xea9b, &op_behead,	  3,   3,   2, 0xff, 0x01, 0x00, 0x04}, // behead d d c 
	{0xea9c, &op_behead,	  4,   3,   2, 0xff, 0x01, 0x00, 0x04}, // behead e d c 
	{0xea9d, &op_behead,	  5,   3,   2, 0xff, 0x01, 0x00, 0x04}, // behead f d c 
	{0xea9e, &op_behead,	  6,   3,   2, 0xff, 0x01, 0x00, 0x04}, // behead g d c 
	{0xea9f, &op_behead,	  7,   3,   2, 0xff, 0x01, 0x00, 0x04}, // behead h d c 
	{0xeaa0, &op_behead,	  0,   4,   2, 0xff, 0x01, 0x00, 0x04}, // behead a e c 
	{0xeaa1, &op_behead,	  1,   4,   2, 0xff, 0x01, 0x00, 0x04}, // behead b e c 
	{0xeaa2, &op_behead,	  2,   4,   2, 0xff, 0x01, 0x00, 0x04}, // behead c e c 
	{0xeaa3, &op_behead,	  3,   4,   2, 0xff, 0x01, 0x00, 0x04}, // behead d e c 
	{0xeaa4, &op_behead,	  4,   4,   2, 0xff, 0x01, 0x00, 0x04}, // behead e e c 
	{0xeaa5, &op_behead,	  5,   4,   2, 0xff, 0x01, 0x00, 0x04}, // behead f e c 
	{0xeaa6, &op_behead,	  6,   4,   2, 0xff, 0x01, 0x00, 0x04}, // behead g e c 
	{0xeaa7, &op_behead,	  7,   4,   2, 0xff, 0x01, 0x00, 0x04}, // behead h e c 
	{0xeaa8, &op_behead,	  0,   5,   2, 0xff, 0x01, 0x00, 0x04}, // behead a f c 
	{0xeaa9, &op_behead,	  1,   5,   2, 0xff, 0x01, 0x00, 0x04}, // behead b f c 
	{0xeaaa, &op_behead,	  2,   5,   2, 0xff, 0x01, 0x00, 0x04}, // behead c f c 
	{0xeaab, &op_behead,	  3,   5,   2, 0xff, 0x01, 0x00, 0x04}, // behead d f c 
	{0xeaac, &op_behead,	  4,   5,   2, 0xff, 0x01, 0x00, 0x04}, // behead e f c 
	{0xeaad, &op_behead,	  5,   5,   2, 0xff, 0x01, 0x00, 0x04}, // behead f f c 
	{0xeaae, &op_behead,	  6,   5,   2, 0xff, 0x01, 0x00, 0x04}, // behead g f c 
	{0xeaaf, &op_behead,	  7,   5,   2, 0xff, 0x01, 0x00, 0x04}, // behead h f c 
	{0xeab0, &op_behead,	  0,   6,   2, 0xff, 0x01, 0x00, 0x04}, // behead a g c 
	{0xeab1, &op_behead,	  1,   6,   2, 0xff, 0x01, 0x00, 0x04}, // behead b g c 
	{0xeab2, &op_behead,	  2,   6,   2, 0xff, 0x01, 0x00, 0x04}, // behead c g c 
	{0xeab3, &op_behead,	  3,   6,   2, 0xff, 0x01, 0x00, 0x04}, // behead d g c 
	{0xeab4, &op_behead,	  4,   6,   2, 0xff, 0x01, 0x00, 0x04}, // behead e g c 
	{0xeab5, &op_behead,	  5,   6,   2, 0xff, 0x01, 0x00, 0x04}, // behead f g c 
	{0xeab6, &op_behead,	  6,   6,   2, 0xff, 0x01, 0x00, 0x04}, // behead g g c 
	{0xeab7, &op_behead,	  7,   6,   2, 0xff, 0x01, 0x00, 0x04}, // behead h g c 
	{0xeab8, &op_behead,	  0,   7,   2, 0xff, 0x01, 0x00, 0x04}, // behead a h c 
	{0xeab9, &op_behead,	  1,   7,   2, 0xff, 0x01, 0x00, 0x04}, // behead b h c 
	{0xeaba, &op_behead,	  2,   7,   2, 0xff, 0x01, 0x00, 0x04}, // behead c h c 
	{0xeabb, &op_behead,	  3,   7,   2, 0xff, 0x01, 0x00, 0x04}, // behead d h c 
	{0xeabc, &op_behead,	  4,   7,   2, 0xff, 0x01, 0x00, 0x04}, // behead e h c 
	{0xeabd, &op_behead,	  5,   7,   2, 0xff, 0x01, 0x00, 0x04}, // behead f h c 
	{0xeabe, &op_behead,	  6,   7,   2, 0xff, 0x01, 0x00, 0x04}, // behead g h c 
	{0xeabf, &op_behead,	  7,   7,   2, 0xff, 0x01, 0x00, 0x04}, // behead h h c 
	{0xeac0, &op_behead,	  0,   0,   3, 0xff, 0x01, 0x00, 0x04}, // behead a a d 
	{0xeac1, &op_behead,	  1,   0,   3, 0xff, 0x01, 0x00, 0x04}, // behead b a d 
	{0xeac2, &op_behead,	  2,   0,   3, 0xff, 0x01, 0x00, 0x04}, // behead c a d 
	{0xeac3, &op_behead,	  3,   0,   3, 0xff, 0x01, 0x00, 0x04}, // behead d a d 
	{0xeac4, &op_behead,	  4,   0,   3, 0xff, 0x01, 0x00, 0x04}, // behead e a d 
	{0xeac5, &op_behead,	  5,   0,   3, 0xff, 0x01, 0x00, 0x04}, // behead f a d 
	{0xeac6, &op_behead,	  6,   0,   3, 0xff, 0x01, 0x00, 0x04}, // behead g a d 
	{0xeac7, &op_behead,	  7,   0,   3, 0xff, 0x01, 0x00, 0x04}, // behead h a d 
	{0xeac8, &op_behead,	  0,   1,   3, 0xff, 0x01, 0x00, 0x04}, // behead a b d 
	{0xeac9, &op_behead,	  1,   1,   3, 0xff, 0x01, 0x00, 0x04}, // behead b b d 
	{0xeaca, &op_behead,	  2,   1,   3, 0xff, 0x01, 0x00, 0x04}, // behead c b d 
	{0xeacb, &op_behead,	  3,   1,   3, 0xff, 0x01, 0x00, 0x04}, // behead d b d 
	{0xeacc, &op_behead,	  4,   1,   3, 0xff, 0x01, 0x00, 0x04}, // behead e b d 
	{0xeacd, &op_behead,	  5,   1,   3, 0xff, 0x01, 0x00, 0x04}, // behead f b d 
	{0xeace, &op_behead,	  6,   1,   3, 0xff, 0x01, 0x00, 0x04}, // behead g b d 
	{0xeacf, &op_behead,	  7,   1,   3, 0xff, 0x01, 0x00, 0x04}, // behead h b d 
	{0xead0, &op_behead,	  0,   2,   3, 0xff, 0x01, 0x00, 0x04}, // behead a c d 
	{0xead1, &op_behead,	  1,   2,   3, 0xff, 0x01, 0x00, 0x04}, // behead b c d 
	{0xead2, &op_behead,	  2,   2,   3, 0xff, 0x01, 0x00, 0x04}, // behead c c d 
	{0xead3, &op_behead,	  3,   2,   3, 0xff, 0x01, 0x00, 0x04}, // behead d c d 
	{0xead4, &op_behead,	  4,   2,   3, 0xff, 0x01, 0x00, 0x04}, // behead e c d 
	{0xead5, &op_behead,	  5,   2,   3, 0xff, 0x01, 0x00, 0x04}, // behead f c d 
	{0xead6, &op_behead,	  6,   2,   3, 0xff, 0x01, 0x00, 0x04}, // behead g c d 
	{0xead7, &op_behead,	  7,   2,   3, 0xff, 0x01, 0x00, 0x04}, // behead h c d 
	{0xead8, &op_behead,	  0,   3,   3, 0xff, 0x01, 0x00, 0x04}, // behead a d d 
	{0xead9, &op_behead,	  1,   3,   3, 0xff, 0x01, 0x00, 0x04}, // behead b d d 
	{0xeada, &op_behead,	  2,   3,   3, 0xff, 0x01, 0x00, 0x04}, // behead c d d 
	{0xeadb, &op_behead,	  3,   3,   3, 0xff, 0x01, 0x00, 0x04}, // behead d d d 
	{0xeadc, &op_behead,	  4,   3,   3, 0xff, 0x01, 0x00, 0x04}, // behead e d d 
	{0xeadd, &op_behead,	  5,   3,   3, 0xff, 0x01, 0x00, 0x04}, // behead f d d 
	{0xeade, &op_behead,	  6,   3,   3, 0xff, 0x01, 0x00, 0x04}, // behead g d d 
	{0xeadf, &op_behead,	  7,   3,   3, 0xff, 0x01, 0x00, 0x04}, // behead h d d 
	{0xeae0, &op_behead,	  0,   4,   3, 0xff, 0x01, 0x00, 0x04}, // behead a e d 
	{0xeae1, &op_behead,	  1,   4,   3, 0xff, 0x01, 0x00, 0x04}, // behead b e d 
	{0xeae2, &op_behead,	  2,   4,   3, 0xff, 0x01, 0x00, 0x04}, // behead c e d 
	{0xeae3, &op_behead,	  3,   4,   3, 0xff, 0x01, 0x00, 0x04}, // behead d e d 
	{0xeae4, &op_behead,	  4,   4,   3, 0xff, 0x01, 0x00, 0x04}, // behead e e d 
	{0xeae5, &op_behead,	  5,   4,   3, 0xff, 0x01, 0x00, 0x04}, // behead f e d 
	{0xeae6, &op_behead,	  6,   4,   3, 0xff, 0x01, 0x00, 0x04}, // behead g e d 
	{0xeae7, &op_behead,	  7,   4,   3, 0xff, 0x01, 0x00, 0x04}, // behead h e d 
	{0xeae8, &op_behead,	  0,   5,   3, 0xff, 0x01, 0x00, 0x04}, // behead a f d 
	{0xeae9, &op_behead,	  1,   5,   3, 0xff, 0x01, 0x00, 0x04}, // behead b f d 
	{0xeaea, &op_behead,	  2,   5,   3, 0xff, 0x01, 0x00, 0x04}, // behead c f d 
	{0xeaeb, &op_behead,	  3,   5,   3, 0xff, 0x01, 0x00, 0x04}, // behead d f d 
	{0xeaec, &op_behead,	  4,   5,   3, 0xff, 0x01, 0x00, 0x04}, // behead e f d 
	{0xeaed, &op_behead,	  5,   5,   3, 0xff, 0x01, 0x00, 0x04}, // behead f f d 
	{0xeaee, &op_behead,	  6,   5,   3, 0xff, 0x01, 0x00, 0x04}, // behead g f d 
	{0xeaef, &op_behead,	  7,   5,   3, 0xff, 0x01, 0x00, 0x04}, // behead h f d 
	{0xeaf0, &op_behead,	  0,   6,   3, 0xff, 0x01, 0x00, 0x04}, // behead a g d 
	{0xeaf1, &op_behead,	  1,   6,   3, 0xff, 0x01, 0x00, 0x04}, // behead b g d 
	{0xeaf2, &op_behead,	  2,   6,   3, 0xff, 0x01, 0x00, 0x04}, // behead c g d 
	{0xeaf3, &op_behead,	  3,   6,   3, 0xff, 0x01, 0x00, 0x04}, // behead d g d 
	{0xeaf4, &op_behead,	  4,   6,   3, 0xff, 0x01, 0x00, 0x04}, // behead e g d 
	{0xeaf5, &op_behead,	  5,   6,   3, 0xff, 0x01, 0x00, 0x04}, // behead f g d 
	{0xeaf6, &op_behead,	  6,   6,   3, 0xff, 0x01, 0x00, 0x04}, // behead g g d 
	{0xeaf7, &op_behead,	  7,   6,   3, 0xff, 0x01, 0x00, 0x04}, // behead h g d 
	{0xeaf8, &op_behead,	  0,   7,   3, 0xff, 0x01, 0x00, 0x04}, // behead a h d 
	{0xeaf9, &op_behead,	  1,   7,   3, 0xff, 0x01, 0x00, 0x04}, // behead b h d 
	{0xeafa, &op_behead,	  2,   7,   3, 0xff, 0x01, 0x00, 0x04}, // behead c h d 
	{0xeafb, &op_behead,	  3,   7,   3, 0xff, 0x01, 0x00, 0x04}, // behead d h d 
	{0xeafc, &op_behead,	  4,   7,   3, 0xff, 0x01, 0x00, 0x04}, // behead e h d 
	{0xeafd, &op_behead,	  5,   7,   3, 0xff, 0x01, 0x00, 0x04}, // behead f h d 
	{0xeafe, &op_behead,	  6,   7,   3, 0xff, 0x01, 0x00, 0x04}, // behead g h d 
	{0xeaff, &op_behead,	  7,   7,   3, 0xff, 0x01, 0x00, 0x04}, // behead h h d 
	{0xeb00, &op_behead,	  0,   0,   4, 0xff, 0x01, 0x00, 0x04}, // behead a a e 
	{0xeb01, &op_behead,	  1,   0,   4, 0xff, 0x01, 0x00, 0x04}, // behead b a e 
	{0xeb02, &op_behead,	  2,   0,   4, 0xff, 0x01, 0x00, 0x04}, // behead c a e 
	{0xeb03, &op_behead,	  3,   0,   4, 0xff, 0x01, 0x00, 0x04}, // behead d a e 
	{0xeb04, &op_behead,	  4,   0,   4, 0xff, 0x01, 0x00, 0x04}, // behead e a e 
	{0xeb05, &op_behead,	  5,   0,   4, 0xff, 0x01, 0x00, 0x04}, // behead f a e 
	{0xeb06, &op_behead,	  6,   0,   4, 0xff, 0x01, 0x00, 0x04}, // behead g a e 
	{0xeb07, &op_behead,	  7,   0,   4, 0xff, 0x01, 0x00, 0x04}, // behead h a e 
	{0xeb08, &op_behead,	  0,   1,   4, 0xff, 0x01, 0x00, 0x04}, // behead a b e 
	{0xeb09, &op_behead,	  1,   1,   4, 0xff, 0x01, 0x00, 0x04}, // behead b b e 
	{0xeb0a, &op_behead,	  2,   1,   4, 0xff, 0x01, 0x00, 0x04}, // behead c b e 
	{0xeb0b, &op_behead,	  3,   1,   4, 0xff, 0x01, 0x00, 0x04}, // behead d b e 
	{0xeb0c, &op_behead,	  4,   1,   4, 0xff, 0x01, 0x00, 0x04}, // behead e b e 
	{0xeb0d, &op_behead,	  5,   1,   4, 0xff, 0x01, 0x00, 0x04}, // behead f b e 
	{0xeb0e, &op_behead,	  6,   1,   4, 0xff, 0x01, 0x00, 0x04}, // behead g b e 
	{0xeb0f, &op_behead,	  7,   1,   4, 0xff, 0x01, 0x00, 0x04}, // behead h b e 
	{0xeb10, &op_behead,	  0,   2,   4, 0xff, 0x01, 0x00, 0x04}, // behead a c e 
	{0xeb11, &op_behead,	  1,   2,   4, 0xff, 0x01, 0x00, 0x04}, // behead b c e 
	{0xeb12, &op_behead,	  2,   2,   4, 0xff, 0x01, 0x00, 0x04}, // behead c c e 
	{0xeb13, &op_behead,	  3,   2,   4, 0xff, 0x01, 0x00, 0x04}, // behead d c e 
	{0xeb14, &op_behead,	  4,   2,   4, 0xff, 0x01, 0x00, 0x04}, // behead e c e 
	{0xeb15, &op_behead,	  5,   2,   4, 0xff, 0x01, 0x00, 0x04}, // behead f c e 
	{0xeb16, &op_behead,	  6,   2,   4, 0xff, 0x01, 0x00, 0x04}, // behead g c e 
	{0xeb17, &op_behead,	  7,   2,   4, 0xff, 0x01, 0x00, 0x04}, // behead h c e 
	{0xeb18, &op_behead,	  0,   3,   4, 0xff, 0x01, 0x00, 0x04}, // behead a d e 
	{0xeb19, &op_behead,	  1,   3,   4, 0xff, 0x01, 0x00, 0x04}, // behead b d e 
	{0xeb1a, &op_behead,	  2,   3,   4, 0xff, 0x01, 0x00, 0x04}, // behead c d e 
	{0xeb1b, &op_behead,	  3,   3,   4, 0xff, 0x01, 0x00, 0x04}, // behead d d e 
	{0xeb1c, &op_behead,	  4,   3,   4, 0xff, 0x01, 0x00, 0x04}, // behead e d e 
	{0xeb1d, &op_behead,	  5,   3,   4, 0xff, 0x01, 0x00, 0x04}, // behead f d e 
	{0xeb1e, &op_behead,	  6,   3,   4, 0xff, 0x01, 0x00, 0x04}, // behead g d e 
	{0xeb1f, &op_behead,	  7,   3,   4, 0xff, 0x01, 0x00, 0x04}, // behead h d e 
	{0xeb20, &op_behead,	  0,   4,   4, 0xff, 0x01, 0x00, 0x04}, // behead a e e 
	{0xeb21, &op_behead,	  1,   4,   4, 0xff, 0x01, 0x00, 0x04}, // behead b e e 
	{0xeb22, &op_behead,	  2,   4,   4, 0xff, 0x01, 0x00, 0x04}, // behead c e e 
	{0xeb23, &op_behead,	  3,   4,   4, 0xff, 0x01, 0x00, 0x04}, // behead d e e 
	{0xeb24, &op_behead,	  4,   4,   4, 0xff, 0x01, 0x00, 0x04}, // behead e e e 
	{0xeb25, &op_behead,	  5,   4,   4, 0xff, 0x01, 0x00, 0x04}, // behead f e e 
	{0xeb26, &op_behead,	  6,   4,   4, 0xff, 0x01, 0x00, 0x04}, // behead g e e 
	{0xeb27, &op_behead,	  7,   4,   4, 0xff, 0x01, 0x00, 0x04}, // behead h e e 
	{0xeb28, &op_behead,	  0,   5,   4, 0xff, 0x01, 0x00, 0x04}, // behead a f e 
	{0xeb29, &op_behead,	  1,   5,   4, 0xff, 0x01, 0x00, 0x04}, // behead b f e 
	{0xeb2a, &op_behead,	  2,   5,   4, 0xff, 0x01, 0x00, 0x04}, // behead c f e 
	{0xeb2b, &op_behead,	  3,   5,   4, 0xff, 0x01, 0x00, 0x04}, // behead d f e 
	{0xeb2c, &op_behead,	  4,   5,   4, 0xff, 0x01, 0x00, 0x04}, // behead e f e 
	{0xeb2d, &op_behead,	  5,   5,   4, 0xff, 0x01, 0x00, 0x04}, // behead f f e 
	{0xeb2e, &op_behead,	  6,   5,   4, 0xff, 0x01, 0x00, 0x04}, // behead g f e 
	{0xeb2f, &op_behead,	  7,   5,   4, 0xff, 0x01, 0x00, 0x04}, // behead h f e 
	{0xeb30, &op_behead,	  0,   6,   4, 0xff, 0x01, 0x00, 0x04}, // behead a g e 
	{0xeb31, &op_behead,	  1,   6,   4, 0xff, 0x01, 0x00, 0x04}, // behead b g e 
	{0xeb32, &op_behead,	  2,   6,   4, 0xff, 0x01, 0x00, 0x04}, // behead c g e 
	{0xeb33, &op_behead,	  3,   6,   4, 0xff, 0x01, 0x00, 0x04}, // behead d g e 
	{0xeb34, &op_behead,	  4,   6,   4, 0xff, 0x01, 0x00, 0x04}, // behead e g e 
	{0xeb35, &op_behead,	  5,   6,   4, 0xff, 0x01, 0x00, 0x04}, // behead f g e 
	{0xeb36, &op_behead,	  6,   6,   4, 0xff, 0x01, 0x00, 0x04}, // behead g g e 
	{0xeb37, &op_behead,	  7,   6,   4, 0xff, 0x01, 0x00, 0x04}, // behead h g e 
	{0xeb38, &op_behead,	  0,   7,   4, 0xff, 0x01, 0x00, 0x04}, // behead a h e 
	{0xeb39, &op_behead,	  1,   7,   4, 0xff, 0x01, 0x00, 0x04}, // behead b h e 
	{0xeb3a, &op_behead,	  2,   7,   4, 0xff, 0x01, 0x00, 0x04}, // behead c h e 
	{0xeb3b, &op_behead,	  3,   7,   4, 0xff, 0x01, 0x00, 0x04}, // behead d h e 
	{0xeb3c, &op_behead,	  4,   7,   4, 0xff, 0x01, 0x00, 0x04}, // behead e h e 
	{0xeb3d, &op_behead,	  5,   7,   4, 0xff, 0x01, 0x00, 0x04}, // behead f h e 
	{0xeb3e, &op_behead,	  6,   7,   4, 0xff, 0x01, 0x00, 0x04}, // behead g h e 
	{0xeb3f, &op_behead,	  7,   7,   4, 0xff, 0x01, 0x00, 0x04}, // behead h h e 
	{0xeb40, &op_behead,	  0,   0,   5, 0xff, 0x01, 0x00, 0x04}, // behead a a f 
	{0xeb41, &op_behead,	  1,   0,   5, 0xff, 0x01, 0x00, 0x04}, // behead b a f 
	{0xeb42, &op_behead,	  2,   0,   5, 0xff, 0x01, 0x00, 0x04}, // behead c a f 
	{0xeb43, &op_behead,	  3,   0,   5, 0xff, 0x01, 0x00, 0x04}, // behead d a f 
	{0xeb44, &op_behead,	  4,   0,   5, 0xff, 0x01, 0x00, 0x04}, // behead e a f 
	{0xeb45, &op_behead,	  5,   0,   5, 0xff, 0x01, 0x00, 0x04}, // behead f a f 
	{0xeb46, &op_behead,	  6,   0,   5, 0xff, 0x01, 0x00, 0x04}, // behead g a f 
	{0xeb47, &op_behead,	  7,   0,   5, 0xff, 0x01, 0x00, 0x04}, // behead h a f 
	{0xeb48, &op_behead,	  0,   1,   5, 0xff, 0x01, 0x00, 0x04}, // behead a b f 
	{0xeb49, &op_behead,	  1,   1,   5, 0xff, 0x01, 0x00, 0x04}, // behead b b f 
	{0xeb4a, &op_behead,	  2,   1,   5, 0xff, 0x01, 0x00, 0x04}, // behead c b f 
	{0xeb4b, &op_behead,	  3,   1,   5, 0xff, 0x01, 0x00, 0x04}, // behead d b f 
	{0xeb4c, &op_behead,	  4,   1,   5, 0xff, 0x01, 0x00, 0x04}, // behead e b f 
	{0xeb4d, &op_behead,	  5,   1,   5, 0xff, 0x01, 0x00, 0x04}, // behead f b f 
	{0xeb4e, &op_behead,	  6,   1,   5, 0xff, 0x01, 0x00, 0x04}, // behead g b f 
	{0xeb4f, &op_behead,	  7,   1,   5, 0xff, 0x01, 0x00, 0x04}, // behead h b f 
	{0xeb50, &op_behead,	  0,   2,   5, 0xff, 0x01, 0x00, 0x04}, // behead a c f 
	{0xeb51, &op_behead,	  1,   2,   5, 0xff, 0x01, 0x00, 0x04}, // behead b c f 
	{0xeb52, &op_behead,	  2,   2,   5, 0xff, 0x01, 0x00, 0x04}, // behead c c f 
	{0xeb53, &op_behead,	  3,   2,   5, 0xff, 0x01, 0x00, 0x04}, // behead d c f 
	{0xeb54, &op_behead,	  4,   2,   5, 0xff, 0x01, 0x00, 0x04}, // behead e c f 
	{0xeb55, &op_behead,	  5,   2,   5, 0xff, 0x01, 0x00, 0x04}, // behead f c f 
	{0xeb56, &op_behead,	  6,   2,   5, 0xff, 0x01, 0x00, 0x04}, // behead g c f 
	{0xeb57, &op_behead,	  7,   2,   5, 0xff, 0x01, 0x00, 0x04}, // behead h c f 
	{0xeb58, &op_behead,	  0,   3,   5, 0xff, 0x01, 0x00, 0x04}, // behead a d f 
	{0xeb59, &op_behead,	  1,   3,   5, 0xff, 0x01, 0x00, 0x04}, // behead b d f 
	{0xeb5a, &op_behead,	  2,   3,   5, 0xff, 0x01, 0x00, 0x04}, // behead c d f 
	{0xeb5b, &op_behead,	  3,   3,   5, 0xff, 0x01, 0x00, 0x04}, // behead d d f 
	{0xeb5c, &op_behead,	  4,   3,   5, 0xff, 0x01, 0x00, 0x04}, // behead e d f 
	{0xeb5d, &op_behead,	  5,   3,   5, 0xff, 0x01, 0x00, 0x04}, // behead f d f 
	{0xeb5e, &op_behead,	  6,   3,   5, 0xff, 0x01, 0x00, 0x04}, // behead g d f 
	{0xeb5f, &op_behead,	  7,   3,   5, 0xff, 0x01, 0x00, 0x04}, // behead h d f 
	{0xeb60, &op_behead,	  0,   4,   5, 0xff, 0x01, 0x00, 0x04}, // behead a e f 
	{0xeb61, &op_behead,	  1,   4,   5, 0xff, 0x01, 0x00, 0x04}, // behead b e f 
	{0xeb62, &op_behead,	  2,   4,   5, 0xff, 0x01, 0x00, 0x04}, // behead c e f 
	{0xeb63, &op_behead,	  3,   4,   5, 0xff, 0x01, 0x00, 0x04}, // behead d e f 
	{0xeb64, &op_behead,	  4,   4,   5, 0xff, 0x01, 0x00, 0x04}, // behead e e f 
	{0xeb65, &op_behead,	  5,   4,   5, 0xff, 0x01, 0x00, 0x04}, // behead f e f 
	{0xeb66, &op_behead,	  6,   4,   5, 0xff, 0x01, 0x00, 0x04}, // behead g e f 
	{0xeb67, &op_behead,	  7,   4,   5, 0xff, 0x01, 0x00, 0x04}, // behead h e f 
	{0xeb68, &op_behead,	  0,   5,   5, 0xff, 0x01, 0x00, 0x04}, // behead a f f 
	{0xeb69, &op_behead,	  1,   5,   5, 0xff, 0x01, 0x00, 0x04}, // behead b f f 
	{0xeb6a, &op_behead,	  2,   5,   5, 0xff, 0x01, 0x00, 0x04}, // behead c f f 
	{0xeb6b, &op_behead,	  3,   5,   5, 0xff, 0x01, 0x00, 0x04}, // behead d f f 
	{0xeb6c, &op_behead,	  4,   5,   5, 0xff, 0x01, 0x00, 0x04}, // behead e f f 
	{0xeb6d, &op_behead,	  5,   5,   5, 0xff, 0x01, 0x00, 0x04}, // behead f f f 
	{0xeb6e, &op_behead,	  6,   5,   5, 0xff, 0x01, 0x00, 0x04}, // behead g f f 
	{0xeb6f, &op_behead,	  7,   5,   5, 0xff, 0x01, 0x00, 0x04}, // behead h f f 
	{0xeb70, &op_behead,	  0,   6,   5, 0xff, 0x01, 0x00, 0x04}, // behead a g f 
	{0xeb71, &op_behead,	  1,   6,   5, 0xff, 0x01, 0x00, 0x04}, // behead b g f 
	{0xeb72, &op_behead,	  2,   6,   5, 0xff, 0x01, 0x00, 0x04}, // behead c g f 
	{0xeb73, &op_behead,	  3,   6,   5, 0xff, 0x01, 0x00, 0x04}, // behead d g f 
	{0xeb74, &op_behead,	  4,   6,   5, 0xff, 0x01, 0x00, 0x04}, // behead e g f 
	{0xeb75, &op_behead,	  5,   6,   5, 0xff, 0x01, 0x00, 0x04}, // behead f g f 
	{0xeb76, &op_behead,	  6,   6,   5, 0xff, 0x01, 0x00, 0x04}, // behead g g f 
	{0xeb77, &op_behead,	  7,   6,   5, 0xff, 0x01, 0x00, 0x04}, // behead h g f 
	{0xeb78, &op_behead,	  0,   7,   5, 0xff, 0x01, 0x00, 0x04}, // behead a h f 
	{0xeb79, &op_behead,	  1,   7,   5, 0xff, 0x01, 0x00, 0x04}, // behead b h f 
	{0xeb7a, &op_behead,	  2,   7,   5, 0xff, 0x01, 0x00, 0x04}, // behead c h f 
	{0xeb7b, &op_behead,	  3,   7,   5, 0xff, 0x01, 0x00, 0x04}, // behead d h f 
	{0xeb7c, &op_behead,	  4,   7,   5, 0xff, 0x01, 0x00, 0x04}, // behead e h f 
	{0xeb7d, &op_behead,	  5,   7,   5, 0xff, 0x01, 0x00, 0x04}, // behead f h f 
	{0xeb7e, &op_behead,	  6,   7,   5, 0xff, 0x01, 0x00, 0x04}, // behead g h f 
	{0xeb7f, &op_behead,	  7,   7,   5, 0xff, 0x01, 0x00, 0x04}, // behead h h f 
	{0xeb80, &op_behead,	  0,   0,   6, 0xff, 0x01, 0x00, 0x04}, // behead a a g 
	{0xeb81, &op_behead,	  1,   0,   6, 0xff, 0x01, 0x00, 0x04}, // behead b a g 
	{0xeb82, &op_behead,	  2,   0,   6, 0xff, 0x01, 0x00, 0x04}, // behead c a g 
	{0xeb83, &op_behead,	  3,   0,   6, 0xff, 0x01, 0x00, 0x04}, // behead d a g 
	{0xeb84, &op_behead,	  4,   0,   6, 0xff, 0x01, 0x00, 0x04}, // behead e a g 
	{0xeb85, &op_behead,	  5,   0,   6, 0xff, 0x01, 0x00, 0x04}, // behead f a g 
	{0xeb86, &op_behead,	  6,   0,   6, 0xff, 0x01, 0x00, 0x04}, // behead g a g 
	{0xeb87, &op_behead,	  7,   0,   6, 0xff, 0x01, 0x00, 0x04}, // behead h a g 
	{0xeb88, &op_behead,	  0,   1,   6, 0xff, 0x01, 0x00, 0x04}, // behead a b g 
	{0xeb89, &op_behead,	  1,   1,   6, 0xff, 0x01, 0x00, 0x04}, // behead b b g 
	{0xeb8a, &op_behead,	  2,   1,   6, 0xff, 0x01, 0x00, 0x04}, // behead c b g 
	{0xeb8b, &op_behead,	  3,   1,   6, 0xff, 0x01, 0x00, 0x04}, // behead d b g 
	{0xeb8c, &op_behead,	  4,   1,   6, 0xff, 0x01, 0x00, 0x04}, // behead e b g 
	{0xeb8d, &op_behead,	  5,   1,   6, 0xff, 0x01, 0x00, 0x04}, // behead f b g 
	{0xeb8e, &op_behead,	  6,   1,   6, 0xff, 0x01, 0x00, 0x04}, // behead g b g 
	{0xeb8f, &op_behead,	  7,   1,   6, 0xff, 0x01, 0x00, 0x04}, // behead h b g 
	{0xeb90, &op_behead,	  0,   2,   6, 0xff, 0x01, 0x00, 0x04}, // behead a c g 
	{0xeb91, &op_behead,	  1,   2,   6, 0xff, 0x01, 0x00, 0x04}, // behead b c g 
	{0xeb92, &op_behead,	  2,   2,   6, 0xff, 0x01, 0x00, 0x04}, // behead c c g 
	{0xeb93, &op_behead,	  3,   2,   6, 0xff, 0x01, 0x00, 0x04}, // behead d c g 
	{0xeb94, &op_behead,	  4,   2,   6, 0xff, 0x01, 0x00, 0x04}, // behead e c g 
	{0xeb95, &op_behead,	  5,   2,   6, 0xff, 0x01, 0x00, 0x04}, // behead f c g 
	{0xeb96, &op_behead,	  6,   2,   6, 0xff, 0x01, 0x00, 0x04}, // behead g c g 
	{0xeb97, &op_behead,	  7,   2,   6, 0xff, 0x01, 0x00, 0x04}, // behead h c g 
	{0xeb98, &op_behead,	  0,   3,   6, 0xff, 0x01, 0x00, 0x04}, // behead a d g 
	{0xeb99, &op_behead,	  1,   3,   6, 0xff, 0x01, 0x00, 0x04}, // behead b d g 
	{0xeb9a, &op_behead,	  2,   3,   6, 0xff, 0x01, 0x00, 0x04}, // behead c d g 
	{0xeb9b, &op_behead,	  3,   3,   6, 0xff, 0x01, 0x00, 0x04}, // behead d d g 
	{0xeb9c, &op_behead,	  4,   3,   6, 0xff, 0x01, 0x00, 0x04}, // behead e d g 
	{0xeb9d, &op_behead,	  5,   3,   6, 0xff, 0x01, 0x00, 0x04}, // behead f d g 
	{0xeb9e, &op_behead,	  6,   3,   6, 0xff, 0x01, 0x00, 0x04}, // behead g d g 
	{0xeb9f, &op_behead,	  7,   3,   6, 0xff, 0x01, 0x00, 0x04}, // behead h d g 
	{0xeba0, &op_behead,	  0,   4,   6, 0xff, 0x01, 0x00, 0x04}, // behead a e g 
	{0xeba1, &op_behead,	  1,   4,   6, 0xff, 0x01, 0x00, 0x04}, // behead b e g 
	{0xeba2, &op_behead,	  2,   4,   6, 0xff, 0x01, 0x00, 0x04}, // behead c e g 
	{0xeba3, &op_behead,	  3,   4,   6, 0xff, 0x01, 0x00, 0x04}, // behead d e g 
	{0xeba4, &op_behead,	  4,   4,   6, 0xff, 0x01, 0x00, 0x04}, // behead e e g 
	{0xeba5, &op_behead,	  5,   4,   6, 0xff, 0x01, 0x00, 0x04}, // behead f e g 
	{0xeba6, &op_behead,	  6,   4,   6, 0xff, 0x01, 0x00, 0x04}, // behead g e g 
	{0xeba7, &op_behead,	  7,   4,   6, 0xff, 0x01, 0x00, 0x04}, // behead h e g 
	{0xeba8, &op_behead,	  0,   5,   6, 0xff, 0x01, 0x00, 0x04}, // behead a f g 
	{0xeba9, &op_behead,	  1,   5,   6, 0xff, 0x01, 0x00, 0x04}, // behead b f g 
	{0xebaa, &op_behead,	  2,   5,   6, 0xff, 0x01, 0x00, 0x04}, // behead c f g 
	{0xebab, &op_behead,	  3,   5,   6, 0xff, 0x01, 0x00, 0x04}, // behead d f g 
	{0xebac, &op_behead,	  4,   5,   6, 0xff, 0x01, 0x00, 0x04}, // behead e f g 
	{0xebad, &op_behead,	  5,   5,   6, 0xff, 0x01, 0x00, 0x04}, // behead f f g 
	{0xebae, &op_behead,	  6,   5,   6, 0xff, 0x01, 0x00, 0x04}, // behead g f g 
	{0xebaf, &op_behead,	  7,   5,   6, 0xff, 0x01, 0x00, 0x04}, // behead h f g 
	{0xebb0, &op_behead,	  0,   6,   6, 0xff, 0x01, 0x00, 0x04}, // behead a g g 
	{0xebb1, &op_behead,	  1,   6,   6, 0xff, 0x01, 0x00, 0x04}, // behead b g g 
	{0xebb2, &op_behead,	  2,   6,   6, 0xff, 0x01, 0x00, 0x04}, // behead c g g 
	{0xebb3, &op_behead,	  3,   6,   6, 0xff, 0x01, 0x00, 0x04}, // behead d g g 
	{0xebb4, &op_behead,	  4,   6,   6, 0xff, 0x01, 0x00, 0x04}, // behead e g g 
	{0xebb5, &op_behead,	  5,   6,   6, 0xff, 0x01, 0x00, 0x04}, // behead f g g 
	{0xebb6, &op_behead,	  6,   6,   6, 0xff, 0x01, 0x00, 0x04}, // behead g g g 
	{0xebb7, &op_behead,	  7,   6,   6, 0xff, 0x01, 0x00, 0x04}, // behead h g g 
	{0xebb8, &op_behead,	  0,   7,   6, 0xff, 0x01, 0x00, 0x04}, // behead a h g 
	{0xebb9, &op_behead,	  1,   7,   6, 0xff, 0x01, 0x00, 0x04}, // behead b h g 
	{0xebba, &op_behead,	  2,   7,   6, 0xff, 0x01, 0x00, 0x04}, // behead c h g 
	{0xebbb, &op_behead,	  3,   7,   6, 0xff, 0x01, 0x00, 0x04}, // behead d h g 
	{0xebbc, &op_behead,	  4,   7,   6, 0xff, 0x01, 0x00, 0x04}, // behead e h g 
	{0xebbd, &op_behead,	  5,   7,   6, 0xff, 0x01, 0x00, 0x04}, // behead f h g 
	{0xebbe, &op_behead,	  6,   7,   6, 0xff, 0x01, 0x00, 0x04}, // behead g h g 
	{0xebbf, &op_behead,	  7,   7,   6, 0xff, 0x01, 0x00, 0x04}, // behead h h g 
	{0xebc0, &op_behead,	  0,   0,   7, 0xff, 0x01, 0x00, 0x04}, // behead a a h 
	{0xebc1, &op_behead,	  1,   0,   7, 0xff, 0x01, 0x00, 0x04}, // behead b a h 
	{0xebc2, &op_behead,	  2,   0,   7, 0xff, 0x01, 0x00, 0x04}, // behead c a h 
	{0xebc3, &op_behead,	  3,   0,   7, 0xff, 0x01, 0x00, 0x04}, // behead d a h 
	{0xebc4, &op_behead,	  4,   0,   7, 0xff, 0x01, 0x00, 0x04}, // behead e a h 
	{0xebc5, &op_behead,	  5,   0,   7, 0xff, 0x01, 0x00, 0x04}, // behead f a h 
	{0xebc6, &op_behead,	  6,   0,   7, 0xff, 0x01, 0x00, 0x04}, // behead g a h 
	{0xebc7, &op_behead,	  7,   0,   7, 0xff, 0x01, 0x00, 0x04}, // behead h a h 
	{0xebc8, &op_behead,	  0,   1,   7, 0xff, 0x01, 0x00, 0x04}, // behead a b h 
	{0xebc9, &op_behead,	  1,   1,   7, 0xff, 0x01, 0x00, 0x04}, // behead b b h 
	{0xebca, &op_behead,	  2,   1,   7, 0xff, 0x01, 0x00, 0x04}, // behead c b h 
	{0xebcb, &op_behead,	  3,   1,   7, 0xff, 0x01, 0x00, 0x04}, // behead d b h 
	{0xebcc, &op_behead,	  4,   1,   7, 0xff, 0x01, 0x00, 0x04}, // behead e b h 
	{0xebcd, &op_behead,	  5,   1,   7, 0xff, 0x01, 0x00, 0x04}, // behead f b h 
	{0xebce, &op_behead,	  6,   1,   7, 0xff, 0x01, 0x00, 0x04}, // behead g b h 
	{0xebcf, &op_behead,	  7,   1,   7, 0xff, 0x01, 0x00, 0x04}, // behead h b h 
	{0xebd0, &op_behead,	  0,   2,   7, 0xff, 0x01, 0x00, 0x04}, // behead a c h 
	{0xebd1, &op_behead,	  1,   2,   7, 0xff, 0x01, 0x00, 0x04}, // behead b c h 
	{0xebd2, &op_behead,	  2,   2,   7, 0xff, 0x01, 0x00, 0x04}, // behead c c h 
	{0xebd3, &op_behead,	  3,   2,   7, 0xff, 0x01, 0x00, 0x04}, // behead d c h 
	{0xebd4, &op_behead,	  4,   2,   7, 0xff, 0x01, 0x00, 0x04}, // behead e c h 
	{0xebd5, &op_behead,	  5,   2,   7, 0xff, 0x01, 0x00, 0x04}, // behead f c h 
	{0xebd6, &op_behead,	  6,   2,   7, 0xff, 0x01, 0x00, 0x04}, // behead g c h 
	{0xebd7, &op_behead,	  7,   2,   7, 0xff, 0x01, 0x00, 0x04}, // behead h c h 
	{0xebd8, &op_behead,	  0,   3,   7, 0xff, 0x01, 0x00, 0x04}, // behead a d h 
	{0xebd9, &op_behead,	  1,   3,   7, 0xff, 0x01, 0x00, 0x04}, // behead b d h 
	{0xebda, &op_behead,	  2,   3,   7, 0xff, 0x01, 0x00, 0x04}, // behead c d h 
	{0xebdb, &op_behead,	  3,   3,   7, 0xff, 0x01, 0x00, 0x04}, // behead d d h 
	{0xebdc, &op_behead,	  4,   3,   7, 0xff, 0x01, 0x00, 0x04}, // behead e d h 
	{0xebdd, &op_behead,	  5,   3,   7, 0xff, 0x01, 0x00, 0x04}, // behead f d h 
	{0xebde, &op_behead,	  6,   3,   7, 0xff, 0x01, 0x00, 0x04}, // behead g d h 
	{0xebdf, &op_behead,	  7,   3,   7, 0xff, 0x01, 0x00, 0x04}, // behead h d h 
	{0xebe0, &op_behead,	  0,   4,   7, 0xff, 0x01, 0x00, 0x04}, // behead a e h 
	{0xebe1, &op_behead,	  1,   4,   7, 0xff, 0x01, 0x00, 0x04}, // behead b e h 
	{0xebe2, &op_behead,	  2,   4,   7, 0xff, 0x01, 0x00, 0x04}, // behead c e h 
	{0xebe3, &op_behead,	  3,   4,   7, 0xff, 0x01, 0x00, 0x04}, // behead d e h 
	{0xebe4, &op_behead,	  4,   4,   7, 0xff, 0x01, 0x00, 0x04}, // behead e e h 
	{0xebe5, &op_behead,	  5,   4,   7, 0xff, 0x01, 0x00, 0x04}, // behead f e h 
	{0xebe6, &op_behead,	  6,   4,   7, 0xff, 0x01, 0x00, 0x04}, // behead g e h 
	{0xebe7, &op_behead,	  7,   4,   7, 0xff, 0x01, 0x00, 0x04}, // behead h e h 
	{0xebe8, &op_behead,	  0,   5,   7, 0xff, 0x01, 0x00, 0x04}, // behead a f h 
	{0xebe9, &op_behead,	  1,   5,   7, 0xff, 0x01, 0x00, 0x04}, // behead b f h 
	{0xebea, &op_behead,	  2,   5,   7, 0xff, 0x01, 0x00, 0x04}, // behead c f h 
	{0xebeb, &op_behead,	  3,   5,   7, 0xff, 0x01, 0x00, 0x04}, // behead d f h 
	{0xebec, &op_behead,	  4,   5,   7, 0xff, 0x01, 0x00, 0x04}, // behead e f h 
	{0xebed, &op_behead,	  5,   5,   7, 0xff, 0x01, 0x00, 0x04}, // behead f f h 
	{0xebee, &op_behead,	  6,   5,   7, 0xff, 0x01, 0x00, 0x04}, // behead g f h 
	{0xebef, &op_behead,	  7,   5,   7, 0xff, 0x01, 0x00, 0x04}, // behead h f h 
	{0xebf0, &op_behead,	  0,   6,   7, 0xff, 0x01, 0x00, 0x04}, // behead a g h 
	{0xebf1, &op_behead,	  1,   6,   7, 0xff, 0x01, 0x00, 0x04}, // behead b g h 
	{0xebf2, &op_behead,	  2,   6,   7, 0xff, 0x01, 0x00, 0x04}, // behead c g h 
	{0xebf3, &op_behead,	  3,   6,   7, 0xff, 0x01, 0x00, 0x04}, // behead d g h 
	{0xebf4, &op_behead,	  4,   6,   7, 0xff, 0x01, 0x00, 0x04}, // behead e g h 
	{0xebf5, &op_behead,	  5,   6,   7, 0xff, 0x01, 0x00, 0x04}, // behead f g h 
	{0xebf6, &op_behead,	  6,   6,   7, 0xff, 0x01, 0x00, 0x04}, // behead g g h 
	{0xebf7, &op_behead,	  7,   6,   7, 0xff, 0x01, 0x00, 0x04}, // behead h g h 
	{0xebf8, &op_behead,	  0,   7,   7, 0xff, 0x01, 0x00, 0x04}, // behead a h h 
	{0xebf9, &op_behead,	  1,   7,   7, 0xff, 0x01, 0x00, 0x04}, // behead b h h 
	{0xebfa, &op_behead,	  2,   7,   7, 0xff, 0x01, 0x00, 0x04}, // behead c h h 
	{0xebfb, &op_behead,	  3,   7,   7, 0xff, 0x01, 0x00, 0x04}, // behead d h h 
	{0xebfc, &op_behead,	  4,   7,   7, 0xff, 0x01, 0x00, 0x04}, // behead e h h 
	{0xebfd, &op_behead,	  5,   7,   7, 0xff, 0x01, 0x00, 0x04}, // behead f h h 
	{0xebfe, &op_behead,	  6,   7,   7, 0xff, 0x01, 0x00, 0x04}, // behead g h h 
	{0xebff, &op_behead,	  7,   7,   7, 0xff, 0x01, 0x00, 0x04}, // behead h h h 
	{0xedc0, &op_put_bli,	  0,   8, 255, 0xff, 0x00, 0x01, 0x01}, // put.bli a <literal>  
	{0xedc1, &op_put_bli,	  1,   8, 255, 0xff, 0x00, 0x01, 0x01}, // put.bli b <literal>  
	{0xedc2, &op_put_bli,	  2,   8, 255, 0xff, 0x00, 0x01, 0x01}, // put.bli c <literal>  
	{0xedc3, &op_put_bli,	  3,   8, 255, 0xff, 0x00, 0x01, 0x01}, // put.bli d <literal>  
	{0xedc4, &op_put_bli,	  4,   8, 255, 0xff, 0x00, 0x01, 0x01}, // put.bli e <literal>  
	{0xedc5, &op_put_bli,	  5,   8, 255, 0xff, 0x00, 0x01, 0x01}, // put.bli f <literal>  
	{0xedc6, &op_put_bli,	  6,   8, 255, 0xff, 0x00, 0x01, 0x01}, // put.bli g <literal>  
	{0xedc7, &op_put_bli,	  7,   8, 255, 0xff, 0x00, 0x01, 0x01}, // put.bli h <literal>  
	{0xedf8, &op_put_bhi,	  0,   8, 255, 0xff, 0x00, 0x01, 0x01}, // put.bhi a <literal>  
	{0xedf9, &op_put_bhi,	  1,   8, 255, 0xff, 0x00, 0x01, 0x01}, // put.bhi b <literal>  
	{0xedfa, &op_put_bhi,	  2,   8, 255, 0xff, 0x00, 0x01, 0x01}, // put.bhi c <literal>  
	{0xedfb, &op_put_bhi,	  3,   8, 255, 0xff, 0x00, 0x01, 0x01}, // put.bhi d <literal>  
	{0xedfc, &op_put_bhi,	  4,   8, 255, 0xff, 0x00, 0x01, 0x01}, // put.bhi e <literal>  
	{0xedfd, &op_put_bhi,	  5,   8, 255, 0xff, 0x00, 0x01, 0x01}, // put.bhi f <literal>  
	{0xedfe, &op_put_bhi,	  6,   8, 255, 0xff, 0x00, 0x01, 0x01}, // put.bhi g <literal>  
	{0xedff, &op_put_bhi,	  7,   8, 255, 0xff, 0x00, 0x01, 0x01}, // put.bhi h <literal>  
	{0xee00, &op_strcmp,	  0,   0, 255, 0xff, 0x01, 0x00, 0x04}, // strcmp a a  
	{0xee01, &op_strcmp,	  1,   0, 255, 0xff, 0x01, 0x00, 0x04}, // strcmp b a  
	{0xee02, &op_strcmp,	  2,   0, 255, 0xff, 0x01, 0x00, 0x04}, // strcmp c a  
	{0xee03, &op_strcmp,	  3,   0, 255, 0xff, 0x01, 0x00, 0x04}, // strcmp d a  
	{0xee04, &op_strcmp,	  4,   0, 255, 0xff, 0x01, 0x00, 0x04}, // strcmp e a  
	{0xee05, &op_strcmp,	  5,   0, 255, 0xff, 0x01, 0x00, 0x04}, // strcmp f a  
	{0xee06, &op_strcmp,	  6,   0, 255, 0xff, 0x01, 0x00, 0x04}, // strcmp g a  
	{0xee07, &op_strcmp,	  7,   0, 255, 0xff, 0x01, 0x00, 0x04}, // strcmp h a  
	{0xee08, &op_strcmp,	  0,   1, 255, 0xff, 0x01, 0x00, 0x04}, // strcmp a b  
	{0xee09, &op_strcmp,	  1,   1, 255, 0xff, 0x01, 0x00, 0x04}, // strcmp b b  
	{0xee0a, &op_strcmp,	  2,   1, 255, 0xff, 0x01, 0x00, 0x04}, // strcmp c b  
	{0xee0b, &op_strcmp,	  3,   1, 255, 0xff, 0x01, 0x00, 0x04}, // strcmp d b  
	{0xee0c, &op_strcmp,	  4,   1, 255, 0xff, 0x01, 0x00, 0x04}, // strcmp e b  
	{0xee0d, &op_strcmp,	  5,   1, 255, 0xff, 0x01, 0x00, 0x04}, // strcmp f b  
	{0xee0e, &op_strcmp,	  6,   1, 255, 0xff, 0x01, 0x00, 0x04}, // strcmp g b  
	{0xee0f, &op_strcmp,	  7,   1, 255, 0xff, 0x01, 0x00, 0x04}, // strcmp h b  
	{0xee10, &op_strcmp,	  0,   2, 255, 0xff, 0x01, 0x00, 0x04}, // strcmp a c  
	{0xee11, &op_strcmp,	  1,   2, 255, 0xff, 0x01, 0x00, 0x04}, // strcmp b c  
	{0xee12, &op_strcmp,	  2,   2, 255, 0xff, 0x01, 0x00, 0x04}, // strcmp c c  
	{0xee13, &op_strcmp,	  3,   2, 255, 0xff, 0x01, 0x00, 0x04}, // strcmp d c  
	{0xee14, &op_strcmp,	  4,   2, 255, 0xff, 0x01, 0x00, 0x04}, // strcmp e c  
	{0xee15, &op_strcmp,	  5,   2, 255, 0xff, 0x01, 0x00, 0x04}, // strcmp f c  
	{0xee16, &op_strcmp,	  6,   2, 255, 0xff, 0x01, 0x00, 0x04}, // strcmp g c  
	{0xee17, &op_strcmp,	  7,   2, 255, 0xff, 0x01, 0x00, 0x04}, // strcmp h c  
	{0xee18, &op_strcmp,	  0,   3, 255, 0xff, 0x01, 0x00, 0x04}, // strcmp a d  
	{0xee19, &op_strcmp,	  1,   3, 255, 0xff, 0x01, 0x00, 0x04}, // strcmp b d  
	{0xee1a, &op_strcmp,	  2,   3, 255, 0xff, 0x01, 0x00, 0x04}, // strcmp c d  
	{0xee1b, &op_strcmp,	  3,   3, 255, 0xff, 0x01, 0x00, 0x04}, // strcmp d d  
	{0xee1c, &op_strcmp,	  4,   3, 255, 0xff, 0x01, 0x00, 0x04}, // strcmp e d  
	{0xee1d, &op_strcmp,	  5,   3, 255, 0xff, 0x01, 0x00, 0x04}, // strcmp f d  
	{0xee1e, &op_strcmp,	  6,   3, 255, 0xff, 0x01, 0x00, 0x04}, // strcmp g d  
	{0xee1f, &op_strcmp,	  7,   3, 255, 0xff, 0x01, 0x00, 0x04}, // strcmp h d  
	{0xee20, &op_strcmp,	  0,   4, 255, 0xff, 0x01, 0x00, 0x04}, // strcmp a e  
	{0xee21, &op_strcmp,	  1,   4, 255, 0xff, 0x01, 0x00, 0x04}, // strcmp b e  
	{0xee22, &op_strcmp,	  2,   4, 255, 0xff, 0x01, 0x00, 0x04}, // strcmp c e  
	{0xee23, &op_strcmp,	  3,   4, 255, 0xff, 0x01, 0x00, 0x04}, // strcmp d e  
	{0xee24, &op_strcmp,	  4,   4, 255, 0xff, 0x01, 0x00, 0x04}, // strcmp e e  
	{0xee25, &op_strcmp,	  5,   4, 255, 0xff, 0x01, 0x00, 0x04}, // strcmp f e  
	{0xee26, &op_strcmp,	  6,   4, 255, 0xff, 0x01, 0x00, 0x04}, // strcmp g e  
	{0xee27, &op_strcmp,	  7,   4, 255, 0xff, 0x01, 0x00, 0x04}, // strcmp h e  
	{0xee28, &op_strcmp,	  0,   5, 255, 0xff, 0x01, 0x00, 0x04}, // strcmp a f  
	{0xee29, &op_strcmp,	  1,   5, 255, 0xff, 0x01, 0x00, 0x04}, // strcmp b f  
	{0xee2a, &op_strcmp,	  2,   5, 255, 0xff, 0x01, 0x00, 0x04}, // strcmp c f  
	{0xee2b, &op_strcmp,	  3,   5, 255, 0xff, 0x01, 0x00, 0x04}, // strcmp d f  
	{0xee2c, &op_strcmp,	  4,   5, 255, 0xff, 0x01, 0x00, 0x04}, // strcmp e f  
	{0xee2d, &op_strcmp,	  5,   5, 255, 0xff, 0x01, 0x00, 0x04}, // strcmp f f  
	{0xee2e, &op_strcmp,	  6,   5, 255, 0xff, 0x01, 0x00, 0x04}, // strcmp g f  
	{0xee2f, &op_strcmp,	  7,   5, 255, 0xff, 0x01, 0x00, 0x04}, // strcmp h f  
	{0xee30, &op_strcmp,	  0,   6, 255, 0xff, 0x01, 0x00, 0x04}, // strcmp a g  
	{0xee31, &op_strcmp,	  1,   6, 255, 0xff, 0x01, 0x00, 0x04}, // strcmp b g  
	{0xee32, &op_strcmp,	  2,   6, 255, 0xff, 0x01, 0x00, 0x04}, // strcmp c g  
	{0xee33, &op_strcmp,	  3,   6, 255, 0xff, 0x01, 0x00, 0x04}, // strcmp d g  
	{0xee34, &op_strcmp,	  4,   6, 255, 0xff, 0x01, 0x00, 0x04}, // strcmp e g  
	{0xee35, &op_strcmp,	  5,   6, 255, 0xff, 0x01, 0x00, 0x04}, // strcmp f g  
	{0xee36, &op_strcmp,	  6,   6, 255, 0xff, 0x01, 0x00, 0x04}, // strcmp g g  
	{0xee37, &op_strcmp,	  7,   6, 255, 0xff, 0x01, 0x00, 0x04}, // strcmp h g  
	{0xee38, &op_strcmp,	  0,   7, 255, 0xff, 0x01, 0x00, 0x04}, // strcmp a h  
	{0xee39, &op_strcmp,	  1,   7, 255, 0xff, 0x01, 0x00, 0x04}, // strcmp b h  
	{0xee3a, &op_strcmp,	  2,   7, 255, 0xff, 0x01, 0x00, 0x04}, // strcmp c h  
	{0xee3b, &op_strcmp,	  3,   7, 255, 0xff, 0x01, 0x00, 0x04}, // strcmp d h  
	{0xee3c, &op_strcmp,	  4,   7, 255, 0xff, 0x01, 0x00, 0x04}, // strcmp e h  
	{0xee3d, &op_strcmp,	  5,   7, 255, 0xff, 0x01, 0x00, 0x04}, // strcmp f h  
	{0xee3e, &op_strcmp,	  6,   7, 255, 0xff, 0x01, 0x00, 0x04}, // strcmp g h  
	{0xee3f, &op_strcmp,	  7,   7, 255, 0xff, 0x01, 0x00, 0x04}, // strcmp h h  
};
int oplist_last = 0xee3f;
// struct opt opspace[65536];
opfunc* opspace[65536];

// 0, 1, 2, 3, 4 words:
regt word_size_masks[] = {0xffffffffffffffff, 0xffff, 0xffffffff, 0x0, 0xffffffffffffffff};

struct opt illegal = {0x0000, &op_illegal, 0, 0, 255, 0xff, 0x00, 0x00, 0x00};

OPTYPE op_illegal(OPPARAM p) {
	// unimplemented((memt)(r0 << 8) | (memt)r1);
    fprintf(stderr, "Illegal operation: %04x - no opcode matches at PC=0x%016llx\n", p, reg[csrPC]);
    dump_memory((reg[csrPC] - 1) & ~0xff, 0x100);
    exit(1);
    return 0;
}

void build_opspace() {
    fprintf(stderr, " -- building opspace...\n");
    // opspace = (struct opt*)malloc_aligned(0x10000 * sizeof(struct opt));
    int i = 65536;
    while(i--) {
        opspace[i] = &op_illegal;
        // opspace[i].r0 = i >> 8;
        // opspace[i].r1 = i & 0xff;
    }
    i = 0;
    struct opt* o = &(oplist[i]);
    opspace[i] = o->impl;
    do {
        o = &(oplist[++i]);
        regt op = o->op;
        opspace[op] = o->impl;
    } while (o->op != oplist_last);
    fprintf(stderr, " -- mapped %u ops\n", i);
    fprintf(stderr, " -- filled blanks\n");
}

OPTYPE op_null(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_null()\n");
	#endif
    return 0;
}

OPTYPE op_push(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_push()\n");
	#endif
    memt r = GET_R;
    regt a;
    memt w = GET_S;
    dwordt skip = 0;
    if(r == 0xf) {
        a = loadvarx(skip = w, reg[csrPC]);
    } else {
        a = reg[r];
    }
    if(w == 4)
        push64(a);
    else if(w == 2)
        push32(a);
    else
        push16(a);
    return skip;
}

OPTYPE op_pop(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_pop()\n");
	#endif
    memt r = GET_R;
    memt w = GET_S;
    if(w == 4)
        reg[r] = pop64();
    else if(w == 2)
        reg[r] = pop32();
    else
        reg[r] = pop16();
    return 0;
}

OPTYPE op_push_a(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_push_a()\n");
	#endif
    push_all_special();
    push_all_data();
    return 0;
}

OPTYPE op_pop_a(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_pop_a()\n");
	#endif
    pop_all_data();
    pop_all_special();
    return 0;
}

OPTYPE op_push_h(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_push_h()\n");
	#endif
    push_all_data();
    return 0;
}

OPTYPE op_pop_h(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_pop_h()\n");
	#endif
    pop_all_data();
    return 0;
}

OPTYPE op_rev(OPPARAM p) {
    octet mode = GET_S;
    memt r = GET_R;
    regt in = reg[r];
    regt out = 0;
    if(mode == 0) { // reverse bit string
        int bi = 64;
        while(bi--) {
            out = (out << 1) | (in & 1);
        }
    } else if(mode == 1) { // swap2
        out = ((in & 0x3333333333333333) << 2) | ((in & 0xcccccccccccccccc) >> 2);
    } else if(mode == 2) { // swap4
        out = ((in & 0x0f0f0f0f0f0f0f0f) << 4) | ((in & 0xf0f0f0f0f0f0f0f0) >> 4);
    } else if(mode == 3) { // swap8
        out = ((in & 0x00ff00ff00ff00ff) << 8) | ((in & 0xff00ff00ff00ff00) >> 8);
    } else if(mode == 4) { // swap16
        out = ((in & 0x0000ffff0000ffff) << 16) | ((in & 0xffff0000ffff0000) >> 16);
    } else if(mode == 5) { // swap32
        out = ((in & 0x00000000ffffffff) << 32) | ((in & 0xffffffff00000000) >> 32);
    } else {
        unimplemented(p);
        return 0;
    }
    reg[r] = out;
    return 0;
}

OPTYPE op_load_a(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_load_a()\n");
	#endif
    unimplemented(p);
    return 0;
}

OPTYPE op_load_h(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_load_h()\n");
	#endif
    memt r = GET_R;
    regt a;
    memt w = GET_S;
    dwordt skip = 0;
    if(r == 0xf) {
        a = loadvarx(skip = w, reg[csrPC]);
    } else {
        a = reg[r];
    }
    reg[csrA] = loadv64(a);
    reg[csrB] = loadv64(a + 4);
    reg[csrC] = loadv64(a + 8);
    reg[csrD] = loadv64(a + 12);
    reg[csrE] = loadv64(a + 16);
    reg[csrF] = loadv64(a + 20);
    reg[csrG] = loadv64(a + 24);
    reg[csrH] = loadv64(a + 28);
    reg[csrAd] = loadv64(a + 32);
    reg[csrBd] = loadv64(a + 36);
    reg[csrCd] = loadv64(a + 40);
    reg[csrDd] = loadv64(a + 44);
    reg[csrEd] = loadv64(a + 48);
    reg[csrFd] = loadv64(a + 52);
    reg[csrGd] = loadv64(a + 56);
    reg[csrHd] = loadv64(a + 60);
    return skip;
}

OPTYPE op_real(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_real()\n");
	#endif
    int si = GET_S;
    regt a;
    if(si == 0xf) {
        a = loadv64x(reg[csrPC]);
    } else {
        a = reg[si];
    }
    reg[GET_R] = mem_to_flat(a);
    return 0;
}

OPTYPE op_unreal(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_unreal()\n");
	#endif
    unimplemented(0x0000);
    return 0;
}

OPTYPE op_store_a(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_store_a()\n");
	#endif
    memt r = GET_R;
    regt a;
    memt w = GET_S;
    dwordt skip = 0;
    if(r == 0xf) {
        a = loadvarx(skip = w, reg[csrPC]);
    } else {
        a = reg[r];
    }
    storev64(a, reg[csrA]);
    storev64(a + 4, reg[csrB]);
    storev64(a + 8, reg[csrC]);
    storev64(a + 12, reg[csrD]);
    storev64(a + 16, reg[csrE]);
    storev64(a + 20, reg[csrF]);
    storev64(a + 24, reg[csrG]);
    storev64(a + 28, reg[csrH]);
    storev64(a + 32, reg[csrAd]);
    storev64(a + 36, reg[csrBd]);
    storev64(a + 40, reg[csrCd]);
    storev64(a + 44, reg[csrDd]);
    storev64(a + 48, reg[csrEd]);
    storev64(a + 52, reg[csrFd]);
    storev64(a + 56, reg[csrGd]);
    storev64(a + 60, reg[csrHd]);
    storev64(a + 64, reg[csrPC] + skip);
    storev64(a + 68, reg[csrRA]);
    storev64(a + 72, reg[csrSB]);
    storev64(a + 76, reg[csrSP]);
    storev64(a + 80, reg[csrDB]);
    storev64(a + 84, reg[csrCB]);
    storev64(a + 88, reg[csrPI]);
    storev64(a + 92, reg[csrSTATUS]);
    return skip;
}

OPTYPE op_store_h(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_store_h()\n");
	#endif
    memt r = GET_R;
    regt a;
    memt w = GET_S;
    dwordt skip = 0;
    if(r == 0xf) {
        a = loadvarx(skip = w, reg[csrPC]);
    } else {
        a = reg[r];
    }
    storev64(a, reg[csrA]);
    storev64(a + 4, reg[csrB]);
    storev64(a + 8, reg[csrC]);
    storev64(a + 12, reg[csrD]);
    storev64(a + 16, reg[csrE]);
    storev64(a + 20, reg[csrF]);
    storev64(a + 24, reg[csrG]);
    storev64(a + 28, reg[csrH]);
    storev64(a + 32, reg[csrAd]);
    storev64(a + 36, reg[csrBd]);
    storev64(a + 40, reg[csrCd]);
    storev64(a + 44, reg[csrDd]);
    storev64(a + 48, reg[csrEd]);
    storev64(a + 52, reg[csrFd]);
    storev64(a + 56, reg[csrGd]);
    storev64(a + 60, reg[csrHd]);
    return skip;
}

OPTYPE op_cdr(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_cdr()\n");
	#endif

    reg[GET_R] = reg[GET_S | 0x10];
    return 0;
}

OPTYPE op_flip(OPPARAM p) {
	memt s = GET_S;
    #ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_flip(%c)\n", s + 'A');
	#endif
    regt temp = reg[s | 0x10];
    reg[s | 0x10] = reg[s];
    reg[s] = temp;
    return 0;
}

OPTYPE op_copy(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_copy()\n");
	#endif
    reg[GET_R] = reg[GET_S];
    return 0;
}

OPTYPE op_swap(OPPARAM p) {
    memt r = GET_R;
    memt s = GET_S;
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_swap()\n");
	#endif
    regt temp = reg[s];
    reg[s] = reg[r];
    reg[r] = temp;
    return 0;
}

OPTYPE op_load(OPPARAM p) {
    memt r = GET_R;
    regt a;
    memt s = GET_S;
    dwordt skip = 0;
    memt w = GET_T;
    if(w == 3) {
        a = loadvarx(skip = 4, reg[csrPC]);
        w = s;
    } else {
        a = reg[s];
        w = 1 << w; // {0, 1, 2} -> {1, 2, 4}
    }

    #ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_load(): from 0x%llx\n", a);
	#endif
    reg[r] = loadvar(w, a);
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_load(): register #%d <- %llx\n", r, reg[r]);
	#endif
    return skip;
}

OPTYPE op_set(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_set()\n");
	#endif
    dwordt skip = (p & 0x70) >> 4;
    reg[GET_R] = loadvarx(skip, reg[csrPC]);
    return skip;
}

OPTYPE op_set_c(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_set_c()\n");
	#endif
    reg[GET_R | 0x10] = loadvarx(4, reg[csrPC]);
    return 4;
}

// setcdr.i is an alias of set.c,
// but setcdr itself is its own op,
// used later

OPTYPE op_setcdr(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_setcdr()\n");
	#endif
    dwordt s = GET_S;
    regt a;
    dwordt skip = 0;
    if(s == 0xf) {
        a = loadvarx(skip = 4, reg[csrPC]);
    } else {
        a = reg[s];
    }
    reg[GET_R | 0x10] = a;
    return skip;
}

OPTYPE op_store(OPPARAM p) {
    memt r = GET_R;
    regt a;
    memt wmask = (p & 0x0300) >> 8;
    memt w;
    memt s = GET_S;
    dwordt skip = 0;
    if(wmask == 3) {
        a = loadvarx(skip = 4, reg[csrPC]);
        w = s;
    } else {
        a = reg[s];
        w = 1 << wmask;
    }
    storevar(w, reg[r], a);
    #ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_store() reg %c <- %016llx\n", 'a' + r, a);
	#endif
    return skip;
}

OPTYPE op_load_c(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_load_c()\n");
	#endif
    memt r = GET_R;
    regt a;
    memt s = GET_S;
    dwordt skip = 0;
    if(s == 0xf) {
        a = loadvarx(skip = 4, reg[csrPC]);
    } else {
        a = reg[s];
    }
    reg[r | 0x10] = loadvar(4, a);
    return skip;
}

OPTYPE op_store_c(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_store_c()\n");
	#endif
    memt r = GET_R;
    regt a;
    memt s = GET_S;
    dwordt skip = 0;
    if(s == 0xf) {
        a = loadv64x(reg[csrPC]);
        skip = 4;
    } else {
        a = reg[s];
    }
    storev64(reg[r | 0x10], a);
    return skip;
}

OPTYPE op_load_co(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
    if(verbosity & 2) printf("op_load_co()\n");
    #endif
    memt r = GET_R;
    regt a;
    memt s = GET_S;
    dwordt skip = 0;
    if(s == 0xf) {
        a = loadv64x(reg[csrPC]);
        skip = 4;
    } else {
        a = reg[s | 0x10];
    }
    reg[r] = loadv64(a);
    reg[r | 0x10] = loadv64(a + 4);
    return skip;
}

OPTYPE op_store_co(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_store_co()\n");
	#endif
    memt r = GET_R;
    regt a;
    memt s = GET_S;
    dwordt skip = 0;
    if(s == 0xf) {
        a = loadv64x(reg[csrPC]);
        skip = 4;
    } else {
        a = reg[s | 0x10];
    }
    
    storev64(reg[r], a);
    storev64(reg[r | 0x10], a + 4);
    return skip;
}

OPTYPE op_load_o(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_load_o()\n");
	#endif
    memt r = GET_R;
    regt a;
    memt s = GET_S;
    dwordt skip = 0;
    if(s == 0xf) {
        a = loadv64x(reg[csrPC]);
        skip = 4;
    } else {
        a = reg[s | 0x10];
    }
    reg[r] = loadv64(a);
    reg[r | 0x10] = loadv64(a + 4);
    return skip;
}

OPTYPE op_store_o(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_store_o()\n");
	#endif
    memt r = GET_R;
    regt a;
    memt s = GET_S;
    dwordt skip = 0;
    if(s == 0xf) {
        a = loadv64x(reg[csrPC]);
        skip = 4;
    } else {
        a = reg[s];
    }
    
    storev64(reg[r], a);
    storev64(reg[r | 0x10], a + 4);
    return skip;
}

OPTYPE op_disable(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_disable()\n");
	#endif
    memt b = (p >> 4) & 0x3f;
    reg[GET_R] &= ~(1 << b);
    return 0;
}

OPTYPE op_enable(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_enable()\n");
	#endif
    memt b = (p >> 4) & 0x3f;
    reg[GET_R] |= (1 << b);
    return 0;
}

OPTYPE op_test(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_test()\n");
	#endif
    memt b = (p >> 4) & 0x3f;
    regt result = ((1 << b) & reg[GET_R]);
    reg[csrSTATUS] &= FLAG_MASK_Z | FLAG_MASK_E;
    if(result)
        reg[csrSTATUS] |= FLAG_MASK_E;
    else
        reg[csrSTATUS] |= FLAG_MASK_Z;
    return 0;
}

OPTYPE op_bcopy(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_bcopy()\n");
	#endif
    regt t = GET_T;
    dwordt skip = 0;
    regt c;
    regt b = reg[GET_S];
    regt a = reg[GET_R];
    if(t == 0xf) {
        skip = 4;
        c = loadv64x(reg[csrPC]);
    } else {
        skip = 0;
        c = reg[t];
    }
    copy_block(a, b, c);
    return skip;
}

OPTYPE op_bfill(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_bfill()\n");
	#endif
    regt t = GET_T;
    dwordt skip = 0;
    regt c;
    regt b = reg[GET_S];
    regt a = reg[GET_R];
    if(t == 0xf) {
        skip = 4;
        c = loadv64x(reg[csrPC]);
    } else {
        skip = 0;
        c = reg[t];
    }
    fill_block(a, b, c);
    return 0;
}

OPTYPE op_update(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_update()\n");
	#endif
    memt t = GET_T;
    dwordt skip = 0;
    regt c;
    memt s = GET_S;
    regt b = reg[GET_S];
    regt a = reg[GET_R] = loadv64(b);
    if(t == 0xf) {
        skip = 4;
        c = loadv64x(reg[csrPC]);
    } else {
        skip = 0;
        c = reg[t];
    }
    
    if(a < c)
        storev64(reg[s], c);
    
    regt g_test = (c > a) << FLAG_G;
    regt e_test = (c == a) << FLAG_E;
    regt l_test = (c < a) << FLAG_L;
    regt z_test = (c == 0) << FLAG_Z;
    reg[csrSTATUS] &= ~0xff;
    reg[csrSTATUS] |= g_test | e_test | l_test | z_test;
    return skip;
}

OPTYPE op_jmp(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_jmp()\n");
	#endif
    memt r = GET_R;
    regt a;
    memt b = (p >> 4) & 0x3f;
    dwordt skip = 0;
    if(r == 0xf) {
        a = loadv64x(reg[csrPC]);
        skip = 4;
    } else {
        a = reg[r];
    }
    
    if((reg[csrSTATUS] & b) || !b) {
        reg[csrPC] = a;
        return 0; // no skip
        // reg[csrSTATUS] |= FLAG_MASK_J;
        /* if(verbosity & 2)
            fprintf(stderr, "jumped to 0x%llx because %llx includes %x\n", a, reg[csrSTATUS], b); */
    } /*else if(verbosity & 2)
        fprintf(stderr, "did not jump to 0x%llx\n", a);*/
    return skip;
}

OPTYPE op_jn(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_jn()\n");
	#endif
    memt r = GET_R;
    regt a;
    memt b = (p >> 4) & 0x3f;
    dwordt skip = 0;
    if(r == 0xf) {
        a = loadv64x(reg[csrPC]);
        skip = 4;
    } else {
        a = reg[r];
    }

    if(((reg[csrSTATUS] & b) == 0) || !b) {
        reg[csrPC] = a;
        return 0;
        // reg[csrSTATUS] |= FLAG_MASK_J;
        /*if(verbosity & 2)
            fprintf(stderr, "jumped to 0x%llx\n", a);*/
    } /*else if(verbosity & 2)
        fprintf(stderr, "did not jump to 0x%llx\n", a);*/
    return skip;
}

OPTYPE op_rep(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_rep()\n");
	#endif
    unimplemented(0x0000);
    return 0;
}

OPTYPE op_int(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_int()\n");
	#endif
    call_interrupt(p & 0xff, false);
    return 0;
}

OPTYPE op_syscall(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_syscall()\n");
	#endif
    reg[csrSTATUS] |= FLAG_MASK_RM2;
    call_interrupt(p & 0xff, false);
    return 0;
}

OPTYPE op_iret(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_iret()\n");
	#endif
    interrupt_return();
    reg[csrSTATUS] &= ~FLAG_MASK_RM2;
    return 0;
}

OPTYPE op_lmmt(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_lmmt()\n");
	#endif
    MMT_POINTER = reg[GET_R];
    return 0;
}

OPTYPE op_ret(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_ret()\n");
	#endif
    reg[csrPC] = pop64();
    reg[csrSB] = pop64();
    reg[csrSP] = pop64();
    return 0;
}

OPTYPE op_call(OPPARAM p) {
    memt r = GET_R;
    dwordt skip;
    regt dest;
    if(r == 0xf) {
        dest = loadv64x(reg[csrPC]);
        skip = 4;
    } else {
        reg[r];
    }
    if(verbosity & 2) {
	    printf("op_call()\n");
        fprintf(stderr, " -- calling PC=0x%0llx\n", dest);
        fprintf(stderr, " -- pushing at SP=0x%0llx\n", reg[csrSP]);
    }
    push64(reg[csrSP]);
    push64(reg[csrSB]);
    push64(reg[csrPC] + skip);
    reg[csrSB] = reg[csrSP];
    reg[csrPC] = dest;
    return 0; // no skip sent to executive, since we always succeed
}

OPTYPE op_load_ia(OPPARAM p) {
    regt a = reg[GET_S];
    regt adjust = loadv64x(reg[csrPC]);
    if(verbosity & 2) printf("op_load_ia(): from 0x%llx+%llx\n", a, adjust);
    octet width = 1 << (((p >> 8) & 3) - 1); // {1,2,3} -> {0,1,2} -> {1,2,4}
    reg[GET_R] = loadvar(width, a + adjust);
	if(verbosity & 2) printf("op_load_ia(): register #%d <- %llx\n", GET_R, reg[GET_R]);
    return 4;
}

OPTYPE op_store_ia(OPPARAM p) {
	regt a = reg[GET_S];
    regt adjust = loadv64x(reg[csrPC]);
    octet width = 1 << (((p >> 8) & 3) - 1); // {1,2,3} -> {0,1,2} -> {1,2,4}
    storevar(width, reg[GET_R], a + adjust);
    return 4;
}

OPTYPE op_cout(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_cout()\n");
	#endif
    fprintf(stdout, "%c", p & 0xff);
    return 0;
}

OPTYPE op_creg(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_creg()\n");
	#endif
    fprintf(stdout, "%llu", reg[GET_R]);
    return 0;
}

OPTYPE op_cregx(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_cregx()\n");
	#endif
    fprintf(stdout, "%016llx", reg[GET_R]);
    return 0;
}

OPTYPE op_crega(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_crega()\n");
	#endif
    octet c = reg[GET_R] & 0xff;
    fprintf(stdout, "%c", c);
    return 0;
}

OPTYPE op_cregf(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_cregf()\n");
	#endif
    fprintf(stdout, "%f", *reinterpret_cast<double*>(&reg[GET_R]));
    return 0;
}

OPTYPE op_cin(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_cin()\n");
	#endif
    char* buffer = (char*)calloc(32, sizeof(char));
    fgets(buffer, 31, stdin);
    reg[GET_R] = strtoll(buffer, NULL, 0);
    free(buffer);
    return 0;
}

OPTYPE op_cinx(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_cinx()\n");
	#endif
    char* buffer = (char*)calloc(32, sizeof(char));
    fgets(buffer, 31, stdin);
    reg[GET_R] = strtoll(buffer, NULL, 16);
    free(buffer);
    return 0;
}

OPTYPE op_cina(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_cina()\n");
	#endif
    reg[GET_R] = getchar();
    return 0;
}

// i hope there isn't a hell for this:
#define LOAD_ARITHMETIC_ARGS() \
    \
        int ri = GET_AR; \
        regt r = reg[ri]; \
        bool ref_flag = (p & 0x100) && true; \
        octet size_code = 1 << ((p & 0xc0) >> 6); /* {00, 40, 80, c0} -> {1, 2, 4, 8} */ \
        dwordt skip = 0; \
        regt s; \
        \
        if(size_code == 8) { \
            size_code = GET_AS; \
            if(ref_flag) { \
                s = loadv64x(reg[csrPC]); \
                s = loadvar(size_code, s); \
                skip = 4; \
            } else { \
                s = loadvarx(size_code, reg[csrPC]); \
                skip = size_code; \
            } \
        } else if(ref_flag) { \
            s = loadvar(size_code, reg[GET_AS]); \
        } else { \
            s = reg[GET_AS]; \
        }

OPTYPE op_mod(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_mod()\n");
	#endif
    LOAD_ARITHMETIC_ARGS();

    regt v = r % s;

    reg[ri] = v;
    reg[csrSTATUS] = (reg[csrSTATUS] & ~FLAG_MASK_C) | ((s == 0) << FLAG_C);
    return skip;
}

OPTYPE op_add(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_add()\n");
	#endif
    LOAD_ARITHMETIC_ARGS();

    regt v = r + s;

    reg[ri] = v;
    reg[csrSTATUS] = (reg[csrSTATUS] & ~FLAG_MASK_C) | (((v - s) != r) << FLAG_C);
    #ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_add(): %c <- %llu + %llu | status <- %llx\n", ri + 'a', r, s, reg[csrSTATUS]);
	#endif
    return skip;
}

OPTYPE op_lsh(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_lsh()\n");
	#endif
    LOAD_ARITHMETIC_ARGS();

    regt v = r << s;
    
    reg[ri] = v;
    reg[csrSTATUS] = (reg[csrSTATUS] & ~FLAG_MASK_C) | (((v >> s) != r) << FLAG_C);
    return skip;
}

OPTYPE op_sub(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_sub()\n");
	#endif
    LOAD_ARITHMETIC_ARGS();
    
    regt v = r - s;
    
    reg[ri] = v;
    reg[csrSTATUS] = (reg[csrSTATUS] & ~FLAG_MASK_C) | (((v + s) != r) << FLAG_C);
    return skip;
}

OPTYPE op_mul(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_mul()\n");
	#endif
    LOAD_ARITHMETIC_ARGS();
    
    regt v = r * s;

    reg[ri] = v;
    reg[csrSTATUS] = (reg[csrSTATUS] & ~FLAG_MASK_C) | (((v / s) != r) << FLAG_C);
    return skip;
}

OPTYPE op_rsh(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_rsh()\n");
	#endif
    LOAD_ARITHMETIC_ARGS();
    
    regt v = r >> s;

    reg[ri] = v;
    reg[csrSTATUS] = (reg[csrSTATUS] & ~FLAG_MASK_C) | (((v << s) != r) << FLAG_C);
    return skip;
}

OPTYPE op_div(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_div()\n");
	#endif
    LOAD_ARITHMETIC_ARGS();
    
    regt v = r / s;

    reg[ri] = v;
    reg[csrSTATUS] = (reg[csrSTATUS] & ~FLAG_MASK_C) | ((s == 0) << FLAG_C);
    return skip;
}

OPTYPE op_cmp(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_cmp()\n");
	#endif
    LOAD_ARITHMETIC_ARGS();

    regt g_test = (r > s) << FLAG_G;
    regt e_test = (r == s) << FLAG_E;
    regt l_test = (r < s) << FLAG_L;
    regt z_test = (r == 0) << FLAG_Z;
    /*
    if(verbosity & 2) {
        printf(" -- cmp(%llu, %llu)\n", b, a);
        printf(" G: %llx\n", g_test);
        printf(" E: %llx\n", e_test);
        printf(" L: %llx\n",  l_test);
        printf(" Z: %llx\n", z_test);
        printf(" STATUS: %llx\n", reg[csrSTATUS]);
    }
    */
    reg[csrSTATUS] &= ~0xff;
    reg[csrSTATUS] |= g_test | e_test | l_test | z_test;
    /*
    if(verbosity & 2) {
        printf(" STATUS after: %llx\n", reg[csrSTATUS]);
    } */
    return skip;
}

OPTYPE op_smod(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_mod()\n");
	#endif
    LOAD_ARITHMETIC_ARGS();

    sregt b = *reinterpret_cast<sregt*>(&r);
    sregt c = *reinterpret_cast<sregt*>(&s);
    sregt d = b % c;

    reg[ri] = *reinterpret_cast<regt*>(&d);
    reg[csrSTATUS] = (reg[csrSTATUS] & ~FLAG_MASK_C) | ((c == 0) << FLAG_C);
    return skip;
}

OPTYPE op_sadd(OPPARAM p) {
    LOAD_ARITHMETIC_ARGS();

    sregt b = *reinterpret_cast<sregt*>(&r);
    sregt c = *reinterpret_cast<sregt*>(&s);
    sregt d = b + c;

    reg[ri] = *reinterpret_cast<regt*>(&d);
    reg[csrSTATUS] = (reg[csrSTATUS] & ~FLAG_MASK_C) | (((d - c) != b) << FLAG_C);
    #ifdef VERBOSITY_MODE 
    if(verbosity & 2) printf("op_sadd(): %c <- %llu + %llu | status <- %llx\n", ri + 'a', r, s, reg[csrSTATUS]);
	#endif
    return skip;
}

OPTYPE op_slsh(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_lsh()\n");
	#endif
    LOAD_ARITHMETIC_ARGS();

    sregt b = *reinterpret_cast<sregt*>(&r);
    sregt c = *reinterpret_cast<sregt*>(&s);
    sregt d = b << c;

    reg[ri] = *reinterpret_cast<regt*>(&d);
    reg[csrSTATUS] = (reg[csrSTATUS] & ~FLAG_MASK_C) | (((d >> c) != b) << FLAG_C);
    return skip;
}

OPTYPE op_ssub(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_sub()\n");
	#endif
    LOAD_ARITHMETIC_ARGS();

    sregt b = *reinterpret_cast<sregt*>(&r);
    sregt c = *reinterpret_cast<sregt*>(&s);
    sregt d = b - c;

    reg[ri] = *reinterpret_cast<regt*>(&d);
    reg[csrSTATUS] = (reg[csrSTATUS] & ~FLAG_MASK_C) | (((d + c) != b) << FLAG_C);
    return skip;
}

OPTYPE op_smul(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_mul()\n");
	#endif
    LOAD_ARITHMETIC_ARGS();

    sregt b = *reinterpret_cast<sregt*>(&r);
    sregt c = *reinterpret_cast<sregt*>(&s);
    sregt d = b * c;

    reg[ri] = *reinterpret_cast<regt*>(&d);
    reg[csrSTATUS] = (reg[csrSTATUS] & ~FLAG_MASK_C) | (((d / c) != b) << FLAG_C);
    return skip;
}

OPTYPE op_srsh(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_rsh()\n");
	#endif
    LOAD_ARITHMETIC_ARGS();

    sregt b = *reinterpret_cast<sregt*>(&r);
    sregt c = *reinterpret_cast<sregt*>(&s);
    sregt d = b >> c;

    reg[ri] = *reinterpret_cast<regt*>(&d);
    reg[csrSTATUS] = (reg[csrSTATUS] & ~FLAG_MASK_C) | (((d << c) != b) << FLAG_C);
    return skip;
}

OPTYPE op_sdiv(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_div()\n");
	#endif
    LOAD_ARITHMETIC_ARGS();

    sregt b = *reinterpret_cast<sregt*>(&r);
    sregt c = *reinterpret_cast<sregt*>(&s);
    sregt d = b / c;

    reg[ri] = *reinterpret_cast<regt*>(&d);
    reg[csrSTATUS] = (reg[csrSTATUS] & ~FLAG_MASK_C) | ((c == 0) << FLAG_C);
    return skip;
}

OPTYPE op_scmp(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_cmp()\n");
	#endif
    LOAD_ARITHMETIC_ARGS();

    sregt b = *reinterpret_cast<sregt*>(&r);
    sregt c = *reinterpret_cast<sregt*>(&s);

    regt g_test = (b > c) << FLAG_G;
    regt e_test = (b == c) << FLAG_E;
    regt l_test = (b < c) << FLAG_L;
    regt z_test = (b == 0) << FLAG_Z;
    regt s_test = (b >= 0) << FLAG_S;
    /*
    if(verbosity & 2) {
        printf(" -- cmp(%llu, %llu)\n", b, a);
        printf(" G: %llx\n", g_test);
        printf(" E: %llx\n", e_test);
        printf(" L: %llx\n",  l_test);
        printf(" Z: %llx\n", z_test);
        printf(" STATUS: %llx\n", reg[csrSTATUS]);
    }
    */
    reg[csrSTATUS] &= ~0xff;
    reg[csrSTATUS] |= g_test | e_test | l_test | z_test | s_test;
    /*
    if(verbosity & 2) {
        printf(" STATUS after: %llx\n", reg[csrSTATUS]);
    } */
    return skip;
}

OPTYPE op_bmod(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_bmod()\n");
	#endif
    LOAD_ARITHMETIC_ARGS();

    unimplemented(0x0000);
    return skip;
}

OPTYPE op_badd(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_badd()\n");
	#endif
    LOAD_ARITHMETIC_ARGS();

    unimplemented(0x0000);
    return skip;
}

OPTYPE op_bsub(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_bsub()\n");
	#endif
    LOAD_ARITHMETIC_ARGS();

    unimplemented(0x0000);
    return skip;
}

OPTYPE op_bmul(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_bmul()\n");
	#endif
    LOAD_ARITHMETIC_ARGS();

    unimplemented(0x0000);
    return skip;
}

OPTYPE op_bdiv(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_bdiv()\n");
	#endif
    LOAD_ARITHMETIC_ARGS();

    unimplemented(0x0000);
    return skip;
}

OPTYPE op_fadd(OPPARAM p) {
    LOAD_ARITHMETIC_ARGS();

    double b = *reinterpret_cast<double*>(&r);
    double c = *reinterpret_cast<double*>(&s);
    double d = b + c;

    reg[ri] = *reinterpret_cast<regt*>(&d);
    reg[csrSTATUS] = (reg[csrSTATUS] & ~FLAG_MASK_C) | ((c == 0 || isnan(d) || isinf(d)) << FLAG_C);
    #ifdef VERBOSITY_MODE 
    if(verbosity & 2) printf("op_fadd(): %c <- %llu + %llu | status <- %llx\n", ri + 'a', r, s, reg[csrSTATUS]);
	#endif
    return skip;
}

OPTYPE op_fpow(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_lsh()\n");
	#endif
    LOAD_ARITHMETIC_ARGS();
    
    double b = *reinterpret_cast<double*>(&r);
    double c = *reinterpret_cast<double*>(&s);
    double d = pow(b, c);

    reg[ri] = *reinterpret_cast<regt*>(&d);
    reg[csrSTATUS] = (reg[csrSTATUS] & ~FLAG_MASK_C) | ((c == 0 || isnan(d) || isinf(d)) << FLAG_C);
    return skip;
}

OPTYPE op_fsub(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_sub()\n");
	#endif
    LOAD_ARITHMETIC_ARGS();
    
    double b = *reinterpret_cast<double*>(&r);
    double c = *reinterpret_cast<double*>(&s);
    double d = b - c;

    reg[ri] = *reinterpret_cast<regt*>(&d);
    reg[csrSTATUS] = (reg[csrSTATUS] & ~FLAG_MASK_C) | ((c == 0 || isnan(d) || isinf(d)) << FLAG_C);
    return skip;
}

OPTYPE op_fmul(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_mul()\n");
	#endif
    LOAD_ARITHMETIC_ARGS();
    
    double b = *reinterpret_cast<double*>(&r);
    double c = *reinterpret_cast<double*>(&s);
    double d = b * c;

    reg[ri] = *reinterpret_cast<regt*>(&d);
    reg[csrSTATUS] = (reg[csrSTATUS] & ~FLAG_MASK_C) | ((c == 0 || isnan(d) || isinf(d)) << FLAG_C);
    return skip;
}

OPTYPE op_flog(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_rsh()\n");
	#endif
    LOAD_ARITHMETIC_ARGS();
    
    double b = *reinterpret_cast<double*>(&r);
    double c = *reinterpret_cast<double*>(&s);
    double d = log(b) / log(c);

    reg[ri] = *reinterpret_cast<regt*>(&d);
    reg[csrSTATUS] = (reg[csrSTATUS] & ~FLAG_MASK_C) | ((c == 0 || isnan(d) || isinf(d)) << FLAG_C);
    return skip;
}

OPTYPE op_fdiv(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_div()\n");
	#endif
    LOAD_ARITHMETIC_ARGS();
    
    double b = *reinterpret_cast<double*>(&r);
    double c = *reinterpret_cast<double*>(&s);
    double d = b / c;

    reg[ri] = *reinterpret_cast<regt*>(&d);
    reg[csrSTATUS] = (reg[csrSTATUS] & ~FLAG_MASK_C) | ((c == 0 || isnan(d) || isinf(d)) << FLAG_C);
    return skip;
}

OPTYPE op_fcmp(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_cmp()\n");
	#endif
    LOAD_ARITHMETIC_ARGS();
    
    double b = *reinterpret_cast<double*>(&r);
    double c = *reinterpret_cast<double*>(&s);

    regt g_test = (b > c) << FLAG_G;
    regt e_test = (b == c) << FLAG_E;
    regt l_test = (b < c) << FLAG_L;
    regt z_test = (b == 0) << FLAG_Z;
    regt c_test = (isnan(b)) << FLAG_C;
    regt s_test = (b >= 0) << FLAG_S;
    /*
    if(verbosity & 2) {
        printf(" -- cmp(%llu, %llu)\n", b, a);
        printf(" G: %llx\n", g_test);
        printf(" E: %llx\n", e_test);
        printf(" L: %llx\n",  l_test);
        printf(" Z: %llx\n", z_test);
        printf(" STATUS: %llx\n", reg[STATUS]);
    }
    */
    reg[csrSTATUS] &= ~0xff;
    reg[csrSTATUS] |= g_test | e_test | l_test | z_test | c_test | s_test;
    /*
    if(verbosity & 2) {
        printf(" STATUS after: %llx\n", reg[csrSTATUS]);
    } */
    return skip;
}

OPTYPE op_not(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_not()\n");
	#endif
    LOAD_ARITHMETIC_ARGS();

    reg[ri] = ~s;
    return skip;
}

OPTYPE op_xor(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_xor()\n");
	#endif
    LOAD_ARITHMETIC_ARGS();
    reg[ri] = r ^ s;
    return skip;
}

OPTYPE op_ror(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_ror()\n");
	#endif
    LOAD_ARITHMETIC_ARGS();

    reg[ri] = (r >> s) | (r << (64 - s));
    return skip;
}

OPTYPE op_and(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_and()\n");
	#endif
    LOAD_ARITHMETIC_ARGS();
    
    reg[ri] &= s;
    return skip;
}

OPTYPE op_or(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_or()\n");
	#endif
    LOAD_ARITHMETIC_ARGS();

    reg[ri] |= s;
    return skip;
}

OPTYPE op_rol(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_rol()\n");
	#endif
    LOAD_ARITHMETIC_ARGS();

    reg[ri] = (r << s) | (r >> (64 - s));
    return skip;
}

OPTYPE op_popcount(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_popcount()\n");
	#endif
    LOAD_ARITHMETIC_ARGS();

    reg[ri] = __builtin_popcountll(s);
    return skip;
}

OPTYPE op_cadd(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_cadd()\n");
	#endif
    LOAD_ARITHMETIC_ARGS();

    unimplemented(0xd200);
    return skip;
}

OPTYPE op_clsh(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_clsh()\n");
	#endif
    LOAD_ARITHMETIC_ARGS();

    unimplemented(0xd400);
    return skip;
}

OPTYPE op_csub(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_csub()\n");
	#endif
    LOAD_ARITHMETIC_ARGS();

    unimplemented(0xd600);
    return skip;
}

OPTYPE op_cmul(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_cmul()\n");
	#endif
    LOAD_ARITHMETIC_ARGS();

    unimplemented(0xd800);
    return skip;
}

OPTYPE op_crsh(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_crsh()\n");
	#endif
    LOAD_ARITHMETIC_ARGS();

    unimplemented(0xdb00);
    return skip;
}

OPTYPE op_cdiv(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_cdiv()\n");
	#endif
    LOAD_ARITHMETIC_ARGS();

    unimplemented(0xdc00);
    return skip;
}

OPTYPE op_ccmp(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_ccmp()\n");
	#endif
    LOAD_ARITHMETIC_ARGS();

    unimplemented(0xde00);
    return skip;
}

OPTYPE op_ccmp_e(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_ccmp_e()\n");
	#endif
    LOAD_ARITHMETIC_ARGS();

    unimplemented(0xd000);
    return skip;
}

OPTYPE op_strcpy(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_strcpy()\n");
	#endif
    LOAD_ARITHMETIC_ARGS();

    unimplemented(0xe000);
    return skip;
}

OPTYPE op_load_bl(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_load_bl()\n");
	#endif
    LOAD_ARITHMETIC_ARGS();

    unimplemented(0xe070);
    return skip;
}

OPTYPE op_load_bh(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_load_bh()\n");
	#endif
    LOAD_ARITHMETIC_ARGS();

    unimplemented(0xe0a0);
    return skip;
}

OPTYPE op_strsize(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_strsize()\n");
	#endif
    LOAD_ARITHMETIC_ARGS();

    unimplemented(0xe0d0);
    return skip;
}

OPTYPE op_strrev(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_strrev()\n");
	#endif
    LOAD_ARITHMETIC_ARGS();

    unimplemented(0xe100);
    return skip;
}

OPTYPE op_store_bl(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_store_bl()\n");
	#endif
    LOAD_ARITHMETIC_ARGS();

    unimplemented(0xe140);
    return skip;
}

OPTYPE op_store_bh(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_store_bh()\n");
	#endif
    LOAD_ARITHMETIC_ARGS();

    unimplemented(0xe180);
    return skip;
}

OPTYPE op_strcat(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_strcat()\n");
	#endif
    LOAD_ARITHMETIC_ARGS();

    unimplemented(0xe200);
    return skip;
}

OPTYPE op_strpos(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_strpos()\n");
	#endif
    LOAD_ARITHMETIC_ARGS();

    unimplemented(0xe400);
    return skip;
}

OPTYPE op_getbyte(OPPARAM p) {
    regt b = reg[GET_AS];
    regt c = reg[GET_AT];
    regt size = loadvar(4, b);
    if(c >= size) {
        reg[GET_AR] = 0;
        reg[csrSTATUS] |= FLAG_MASK_C;

        // printf("op_getbyte() failed: index %llx >= size %llx\n", c, size);
    } else {
        memt d = loadv16(b + 4 + (c >> 1));
        if(c & 1)
            reg[GET_AR] = d & 0xff;
        else
            reg[GET_AR] = (d >> 8);
        
	    // printf("op_getbyte(): %02llx <- string @%llx + octet #%llu\n", reg[p->r0], b, c);
    }
    return 0;
}

OPTYPE op_setbyte(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_setbyte()\n");
	#endif
    unimplemented(0xe800);
    return 0;
}

OPTYPE op_behead(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_behead()\n");
	#endif
    unimplemented(0xea00);
    return 0;
}

OPTYPE op_put_bli(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_put_bli()\n");
	#endif
    unimplemented(0xedc0);
    return 0;
}

OPTYPE op_put_bhi(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_put_bhi()\n");
	#endif
    unimplemented(0xedf0);
    return 0;
}

OPTYPE op_strcmp(OPPARAM p) {
	#ifdef VERBOSITY_MODE 
	if(verbosity & 2) printf("op_strcmp()\n");
	#endif
    unimplemented(0xee00);
    return 0;
}
